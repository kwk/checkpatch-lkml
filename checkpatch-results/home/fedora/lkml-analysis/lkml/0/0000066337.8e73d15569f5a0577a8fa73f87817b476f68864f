WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: drivers/char/eqnx/sst_ioctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#63: FILE: drivers/char/eqnx/sst_ioctl.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#64: FILE: drivers/char/eqnx/sst_ioctl.c:14:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#70: FILE: drivers/char/eqnx/sst_ioctl.c:19:
boards

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#99: FILE: drivers/char/eqnx/sst_ioctl.c:48:
+#include <asm/uaccess.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#108: FILE: drivers/char/eqnx/sst_ioctl.c:56:
+/**********************************************************************
+/* module function declarations

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#110: FILE: drivers/char/eqnx/sst_ioctl.c:57:
+/* module function declarations
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#112: FILE: drivers/char/eqnx/sst_ioctl.c:58:
+/**********************************************************************
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#123: FILE: drivers/char/eqnx/sst_ioctl.c:68:
+/**********************************************************************
+/* external variable and routines

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#125: FILE: drivers/char/eqnx/sst_ioctl.c:69:
+/* external variable and routines
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#127: FILE: drivers/char/eqnx/sst_ioctl.c:70:
+/**********************************************************************
+

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#149: FILE: drivers/char/eqnx/sst_ioctl.c:92:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#150: FILE: drivers/char/eqnx/sst_ioctl.c:93:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#151: FILE: drivers/char/eqnx/sst_ioctl.c:94:
+	volatile struct cout_que_struct *icpq;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_ioctl', this function's name, in a string
#182: FILE: drivers/char/eqnx/sst_ioctl.c:125:
+	dev_dbg(mpd->dev, "eqnx_ioctl: cmd %x for device %d\n", cmd, d);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#190: FILE: drivers/char/eqnx/sst_ioctl.c:133:
+		if ((rc = tty_check_change(tty)) == 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: drivers/char/eqnx/sst_ioctl.c:138:
+				spin_lock_irqsave(&mpd->mpd_lock,
+				icpo->cout_flow_config |= TX_BREAK_ON;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/char/eqnx/sst_ioctl.c:140:
+				spin_unlock_irqrestore(&mpd->mpd_lock,
+				delay_jiffies(HZ / 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/char/eqnx/sst_ioctl.c:144:
+				spin_lock_irqsave(&mpd->mpd_lock,
+				icpo->cout_flow_config &= ~TX_BREAK_ON;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: drivers/char/eqnx/sst_ioctl.c:146:
+				spin_unlock_irqrestore(&mpd->mpd_lock,
+			}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#213: FILE: drivers/char/eqnx/sst_ioctl.c:152:
+		if ((rc = tty_check_change(tty)) == 0) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: drivers/char/eqnx/sst_ioctl.c:217:
+u32 eqnx_get_modem_info(struct mpchan * mpc)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#296: FILE: drivers/char/eqnx/sst_ioctl.c:234:
+	return (result);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#313: FILE: drivers/char/eqnx/sst_ioctl.c:251:
+	volatile struct icp_out_struct *icpo = mpc->mpc_icpo;

WARNING:RETURN_VOID: void function return statements are not generally useful
#363: FILE: drivers/char/eqnx/sst_ioctl.c:301:
+	return;
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/char/eqnx/sst_ioctl.c:328:
+ * setserial(mpc, sp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/char/eqnx/sst_ioctl.c:329:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/char/eqnx/sst_ioctl.c:330:
+ * Set characteristics according to serial struct info.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/char/eqnx/sst_ioctl.c:331:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/char/eqnx/sst_ioctl.c:332:
+ * mpc^I= pointer to channel struct$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/char/eqnx/sst_ioctl.c:333:
+ * sp^I= pointer to serial struct (in user space)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/char/eqnx/sst_ioctl.c:334:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/char/eqnx/sst_ioctl.c:367:
+ * eqnx_get_signal_state(mpc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/char/eqnx/sst_ioctl.c:368:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/char/eqnx/sst_ioctl.c:369:
+ * Return the current set of input and output control signals.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/char/eqnx/sst_ioctl.c:370:
+ *$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: drivers/char/eqnx/sst_ioctl.c:371:
+ * The value returned is "native" icp bit positions regardless of the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/char/eqnx/sst_ioctl.c:371:
+ * The value returned is "native" icp bit positions regardless of the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/char/eqnx/sst_ioctl.c:372:
+ * origin of the signals.  Namely,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/char/eqnx/sst_ioctl.c:373:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/char/eqnx/sst_ioctl.c:374:
+ *     b0      dcd$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/char/eqnx/sst_ioctl.c:375:
+ *     b1      cts$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/char/eqnx/sst_ioctl.c:376:
+ *     b2      dsr$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/char/eqnx/sst_ioctl.c:377:
+ *     b3      ri$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/char/eqnx/sst_ioctl.c:378:
+ *     -----------$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/char/eqnx/sst_ioctl.c:379:
+ *     b4      dtr$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/char/eqnx/sst_ioctl.c:380:
+ *     b5      rts$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/char/eqnx/sst_ioctl.c:381:
+ *     b6      0$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/char/eqnx/sst_ioctl.c:382:
+ *     b7      0$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/char/eqnx/sst_ioctl.c:383:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/char/eqnx/sst_ioctl.c:384:
+ * The returned bits are POSITIVE logic... 1 means signal is on.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/char/eqnx/sst_ioctl.c:385:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/char/eqnx/sst_ioctl.c:386:
+ * mpc^I= pointer to channel structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: drivers/char/eqnx/sst_ioctl.c:387:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/char/eqnx/sst_ioctl.c:388:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/char/eqnx/sst_ioctl.c:389:
+ */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#464: FILE: drivers/char/eqnx/sst_ioctl.c:400:
+		dev_dbg(mpd->dev, "eqnx_get_signal_state: mpd lock
 		                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#502: FILE: drivers/char/eqnx/sst_ioctl.c:437:
+	if (len > 0) {
+		msleep(jiffies_to_msecs(len));
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000066337.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 45 warnings, 4 checks, 455 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000066337.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
