WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
- Finish the changes from patch 53. ide_dma_actaion_t is gone now as well as

CHECK:SPACING: No space is necessary after a cast
#83: FILE: drivers/ide/aec62xx.c:342:
+	return ((int)	((id->dma_ultra >> 11) & 3) ? 0 :

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#116: FILE: drivers/ide/aec62xx.c:390:
+	return ((int)	((id->dma_ultra >> 11) & 3) ? 1 :

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#276: FILE: drivers/ide/alim15x3.c:402:
+	rval = (int)(	((id->dma_ultra >> 11) & 3) ? 1:
 	             	                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#276: FILE: drivers/ide/alim15x3.c:402:
+	rval = (int)(	((id->dma_ultra >> 11) & 3) ? 1:

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#277: FILE: drivers/ide/alim15x3.c:403:
+			((id->dma_ultra >> 8) & 7) ? 1:
 			                              ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#278: FILE: drivers/ide/alim15x3.c:404:
+			((id->dma_mword >> 8) & 7) ? 1:
 			                              ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#279: FILE: drivers/ide/alim15x3.c:405:
+			((id->dma_1word >> 8) & 7) ? 1:
 			                              ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#295: FILE: drivers/ide/alim15x3.c:440:
+	if ((m5229_revision<=0x20) && (drive->type != ATA_DISK)) {
 	                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'm5229_revision<=0x20'
#295: FILE: drivers/ide/alim15x3.c:440:
+	if ((m5229_revision<=0x20) && (drive->type != ATA_DISK)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->type != ATA_DISK'
#295: FILE: drivers/ide/alim15x3.c:440:
+	if ((m5229_revision<=0x20) && (drive->type != ATA_DISK)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#471: FILE: drivers/ide/cmd64x.c:691:
+	rval = (int)(	((id->dma_ultra >> 11) & 7) ? 1 :

ERROR:SPACING: space prohibited after that open parenthesis '('
#496: FILE: drivers/ide/cmd64x.c:733:
+	rval = (int)(	((id->dma_ultra >> 14) & 3) ? 1 :

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#621: FILE: drivers/ide/cmd64x.c:878:
+	dma_stat = inb(dma_base+2);
 	                       ^

CHECK:SPACING: No space is necessary after a cast
#622: FILE: drivers/ide/cmd64x.c:879:
+	(void) pci_read_config_byte(dev, MRDMODE, &dma_alt_stat);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#625: FILE: drivers/ide/cmd64x.c:881:
+	printk("%s: dma_stat: 0x%02x dma_alt_stat: 0x%02x mask: 0x%02x\n", drive->name, dma_stat, dma_alt_stat, mask);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#625: FILE: drivers/ide/cmd64x.c:881:
+	printk("%s: dma_stat: 0x%02x dma_alt_stat: 0x%02x mask: 0x%02x\n", drive->name, dma_stat, dma_alt_stat, mask);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#633: FILE: drivers/ide/cmd64x.c:883:
+	if (!(dma_alt_stat & mask)) {
+		return 0;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'defaul' may be misspelled - perhaps 'default'?
#871: FILE: drivers/ide/cy82c693.c:240:
+	 * Set dma mode for drive everything else is done by the defaul func.
 	                                                         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#880: FILE: drivers/ide/cy82c693.c:245:
+	printk (KERN_INFO "dma_on: %s\n", drive->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#880: FILE: drivers/ide/cy82c693.c:245:
+	printk (KERN_INFO "dma_on: %s\n", drive->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "id"
#896: FILE: drivers/ide/cy82c693.c:248:
+	if (id != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <addrCtrl>
#936: FILE: drivers/ide/cy82c693.c:296:
+		pci_read_config_dword(dev, CY82_IDE_ADDRSETUP, &addrCtrl);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#1055: FILE: drivers/ide/hpt34x.c:245:
+	return ((int)	((id->dma_ultra >> 11) & 3) ? 0 :

ERROR:SPACING: space prohibited after that open parenthesis '('
#1196: FILE: drivers/ide/hpt366.c:702:
+	rval = (int)(	((id->dma_ultra >> 11) & 7) ? 1 :

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1276: FILE: drivers/ide/hpt366.c:805:
+	printk("%s: (%s)  reg50h=0x%02x, reg52h=0x%02x, reg5ah=0x%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1277: FILE: drivers/ide/hpt366.c:806:
+	printk("%s: (%s)  reg50h=0x%02x, reg52h=0x%02x, reg5ah=0x%02x\n",
+			drive->name, __FUNCTION__, reg50h, reg52h, reg5ah);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1277: FILE: drivers/ide/hpt366.c:806:
+			drive->name, __FUNCTION__, reg50h, reg52h, reg5ah);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1740: FILE: drivers/ide/ide-floppy.c:1123:
+	if (test_and_clear_bit (PC_DMA_ERROR, &pc->flags))

CHECK:SPACING: No space is necessary after a cast
#1863: FILE: drivers/ide/pdc202xx.c:916:
+	return ((int)	((id->dma_ultra >> 14) & 3) ? 1 :

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2005: FILE: drivers/ide/pdc202xx.c:1108:
+		if ((sc1d & 0x50) == 0x50) goto somebody_else;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2009: FILE: drivers/ide/pdc202xx.c:1112:
+		if ((sc1d & 0x05) == 0x05) goto somebody_else;

CHECK:SPACING: No space is necessary after a cast
#2167: FILE: drivers/ide/serverworks.c:427:
+	return ((int)	((id->dma_ultra >> 11) & 7) ? 1 :

CHECK:SPACING: No space is necessary after a cast
#2300: FILE: drivers/ide/sis5513.c:672:
+	return ((int)	((id->dma_ultra >> 11) & 7) ? 1 :

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#2622: FILE: include/linux/ide.h:426:
+	int (*XXX_udma)(struct ata_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#2631: FILE: include/linux/ide.h:437:
+	void (*udma_irq_lost) (struct ata_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#2631: FILE: include/linux/ide.h:437:
+	void (*udma_irq_lost) (struct ata_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2640: FILE: include/linux/ide.h:879:
+extern void udma_irq_lost(struct ata_device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#2640: FILE: include/linux/ide.h:879:
+extern void udma_irq_lost(struct ata_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2649: FILE: include/linux/ide.h:893:
+extern int XXX_ide_dmaproc(struct ata_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#2649: FILE: include/linux/ide.h:893:
+extern int XXX_ide_dmaproc(struct ata_device *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460478.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 15 warnings, 15 checks, 2407 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460478.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
