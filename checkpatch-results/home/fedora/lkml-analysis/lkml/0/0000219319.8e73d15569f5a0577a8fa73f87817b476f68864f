CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cache.h> instead of <asm/cache.h>
#53: FILE: arch/ppc64/kernel/asm-offsets.c:38:
+#include <asm/cache.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cache.h> instead of <asm/cache.h>
#94: FILE: arch/ppc64/kernel/iSeries_setup.c:47:
+#include <asm/cache.h>

CHECK:CAMELCASE: Avoid CamelCase: <xIoHriProcessorVpd>
#106: FILE: arch/ppc64/kernel/iSeries_setup.c:565:
+	ppc64_caches.isize = xIoHriProcessorVpd[procIx].xInstCacheSize * 1024;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <procIx>
#106: FILE: arch/ppc64/kernel/iSeries_setup.c:565:
+	ppc64_caches.isize = xIoHriProcessorVpd[procIx].xInstCacheSize * 1024;

CHECK:CAMELCASE: Avoid CamelCase: <xInstCacheSize>
#106: FILE: arch/ppc64/kernel/iSeries_setup.c:565:
+	ppc64_caches.isize = xIoHriProcessorVpd[procIx].xInstCacheSize * 1024;

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cache.h> instead of <asm/cache.h>
#361: FILE: arch/ppc64/kernel/setup.c:57:
+#include <asm/cache.h>

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#387: FILE: arch/ppc64/kernel/setup.c:499:
+			systemcfg->dcache_size = ppc64_caches.dsize = size;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#404: FILE: arch/ppc64/kernel/setup.c:517:
+			systemcfg->icache_size = ppc64_caches.isize = size;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#418: FILE: arch/ppc64/kernel/setup.c:670:
+	printk("ppc64_caches.dcache_line_size = 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: arch/ppc64/kernel/setup.c:671:
+	printk("ppc64_caches.dcache_line_size = 0x%x\n",
+			ppc64_caches.dline_size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#420: FILE: arch/ppc64/kernel/setup.c:672:
+	printk("ppc64_caches.icache_line_size = 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: arch/ppc64/kernel/setup.c:673:
+	printk("ppc64_caches.icache_line_size = 0x%x\n",
+			ppc64_caches.iline_size);

WARNING:INCLUDE_LINUX: Use #include <linux/cache.h> instead of <asm/cache.h>
#551: FILE: include/asm-ppc64/page.h:96:
+#include <asm/cache.h>

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219319.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 10 checks, 453 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219319.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
