WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#42: FILE: drivers/net/Kconfig:852:
+config DM9000
+	tristate "DM9000 support"
+	depends on ARM && NET_ETHERNET
+	select CRC32
+	select MII
+	---help---
+	  Support for DM9000 chipset.
+
+	  To compile this driver as a module, choose M here and read
+	  <file:Documentation/networking/net-modules.txt>.  The module will be
+	  called dm9000.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: drivers/net/dm9000.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: drivers/net/dm9000.c:3:
+ *   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: drivers/net/dm9000.c:5:
+ * ^ICopyright (C) 1997  Sten Wang$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: drivers/net/dm9000.c:6:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#78: FILE: drivers/net/dm9000.c:7:
+ * ^IThis program is free software; you can redistribute it and/or$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#79: FILE: drivers/net/dm9000.c:8:
+ * ^Imodify it under the terms of the GNU General Public License$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: drivers/net/dm9000.c:9:
+ * ^Ias published by the Free Software Foundation; either version 2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: drivers/net/dm9000.c:10:
+ * ^Iof the License, or (at your option) any later version.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/net/dm9000.c:11:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: drivers/net/dm9000.c:12:
+ * ^IThis program is distributed in the hope that it will be useful,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#84: FILE: drivers/net/dm9000.c:13:
+ * ^Ibut WITHOUT ANY WARRANTY; without even the implied warranty of$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: drivers/net/dm9000.c:14:
+ * ^IMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#86: FILE: drivers/net/dm9000.c:15:
+ * ^IGNU General Public License for more details.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: drivers/net/dm9000.c:16:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/net/dm9000.c:18:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/net/dm9000.c:20:
+ * ^I06/22/2001 ^ISupport DM9801 progrmming^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#91: FILE: drivers/net/dm9000.c:20:
+ * ^I06/22/2001 ^ISupport DM9801 progrmming^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: drivers/net/dm9000.c:21:
+ * ^I ^I ^IE3: R25 = ((R24 + NF) & 0x00ff) | 0xf000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#93: FILE: drivers/net/dm9000.c:22:
+ * ^I^I ^IE4: R25 = ((R24 + NF) & 0x00ff) | 0xc200$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#94: FILE: drivers/net/dm9000.c:23:
+ * ^I^I     ^I^IR17 = (R17 & 0xfff0) | NF + 3$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: drivers/net/dm9000.c:24:
+ * ^I^I ^IE5: R25 = ((R24 + NF - 3) & 0x00ff) | 0xc200$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: drivers/net/dm9000.c:25:
+ * ^I^I     ^I^IR17 = (R17 & 0xfff0) | NF$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/net/dm9000.c:26:
+ * ^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: drivers/net/dm9000.c:26:
+ * ^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: drivers/net/dm9000.c:27:
+ * v1.00               ^Imodify by simon 2001.9.5$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/net/dm9000.c:28:
+ *                         change for kernel 2.4.x    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: drivers/net/dm9000.c:29:
+ * ^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: drivers/net/dm9000.c:29:
+ * ^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/net/dm9000.c:30:
+ * v1.1   11/09/2001      ^Ifix force mode bug             $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: drivers/net/dm9000.c:30:
+ * v1.1   11/09/2001      ^Ifix force mode bug             $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: drivers/net/dm9000.c:31:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/net/dm9000.c:32:
+ * v1.2   03/18/2003       Weilun Huang <weilun_huang@davicom.com.tw>: $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#104: FILE: drivers/net/dm9000.c:33:
+ * ^I^I^IFixed phy reset.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: drivers/net/dm9000.c:34:
+ * ^I^I^IAdded tx/rx 32 bit mode.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: drivers/net/dm9000.c:35:
+ * ^I^I^ICleaned up for kernel merge.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/net/dm9000.c:39:
+ *                      $

WARNING:REPEATED_WORD: Possible repeated word: 'removed'
#118: FILE: drivers/net/dm9000.c:47:
+ *                      * removed removed unused stat counter and fixed

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: drivers/net/dm9000.c:50:
+ *                      * reworked locking $

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#137: FILE: drivers/net/dm9000.c:66:
+#include <asm/delay.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#139: FILE: drivers/net/dm9000.c:68:
+#include <asm/io.h>

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: drivers/net/dm9000.c:82:
+#define DM9000_TIMER_WUT  jiffies+(HZ*2)	/* timer wakeup time : 2 second */
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#153: FILE: drivers/net/dm9000.c:82:
+#define DM9000_TIMER_WUT  jiffies+(HZ*2)	/* timer wakeup time : 2 second */
                                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#153: FILE: drivers/net/dm9000.c:82:
+#define DM9000_TIMER_WUT  jiffies+(HZ*2)	/* timer wakeup time : 2 second */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#158: FILE: drivers/net/dm9000.c:87:
+#define PRINTK3(args...)  printk(CARDNAME ": " args)

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: drivers/net/dm9000.c:89:
+#define PRINTK3(args...)  do { } while(0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#164: FILE: drivers/net/dm9000.c:93:
+#define PRINTK2(args...)  printk(CARDNAME ": " args)

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: drivers/net/dm9000.c:95:
+#define PRINTK2(args...)  do { } while(0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#170: FILE: drivers/net/dm9000.c:99:
+#define PRINTK1(args...)  printk(CARDNAME ": " args)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#171: FILE: drivers/net/dm9000.c:100:
+#define PRINTK(args...)   printk(CARDNAME ": " args)

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: drivers/net/dm9000.c:102:
+#define PRINTK1(args...)  do { } while(0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#174: FILE: drivers/net/dm9000.c:103:
+#define PRINTK(args...)   printk(KERN_DEBUG args)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#178: FILE: drivers/net/dm9000.c:107:
+/*
+ * Transmit timeout, default 5 seconds.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#185: FILE: drivers/net/dm9000.c:114:
+typedef struct board_info {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#186: FILE: drivers/net/dm9000.c:115:
+typedef struct board_info {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#211: FILE: drivers/net/dm9000.c:140:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#224: FILE: drivers/net/dm9000.c:153:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/net/dm9000.c:163:
+static void dm9000_phy_write(struct net_device *dev, int phyaddr_unused, int reg,
+			   int value);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#241: FILE: drivers/net/dm9000.c:170:
+static void program_eeprom(board_info_t * db);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#246: FILE: drivers/net/dm9000.c:175:
+dm9000_reset(board_info_t * db)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#251: FILE: drivers/net/dm9000.c:180:
+	udelay(200);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#253: FILE: drivers/net/dm9000.c:182:
+	udelay(200);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#257: FILE: drivers/net/dm9000.c:186:
+/*
+ *   Read a byte from I/O port

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#260: FILE: drivers/net/dm9000.c:189:
+ior(board_info_t * db, int reg)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#267: FILE: drivers/net/dm9000.c:196:
+/*
+ *   Write a byte to I/O port

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#271: FILE: drivers/net/dm9000.c:200:
+iow(board_info_t * db, int reg, int value)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#286: FILE: drivers/net/dm9000.c:215:
+	writesw(reg, data, (count+1) >> 1);
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#291: FILE: drivers/net/dm9000.c:220:
+	writesl(reg, data, (count+3) >> 2);
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#298: FILE: drivers/net/dm9000.c:227:
+	readsb(reg, data, count+1);
 	                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#301: FILE: drivers/net/dm9000.c:230:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#304: FILE: drivers/net/dm9000.c:233:
+	readsw(reg, data, (count+1) >> 1);
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#309: FILE: drivers/net/dm9000.c:238:
+	readsl(reg, data, (count+3) >> 2);
 	                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: drivers/net/dm9000.c:280:
+static void dm9000_set_io(struct board_info *db, int byte_width) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: drivers/net/dm9000.c:298:
+^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#371: FILE: drivers/net/dm9000.c:300:
+		printk(KERN_ERR PFX ": 3 byte IO, falling back to 16bit\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/net/dm9000.c:304:
+^I^Ibreak;^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#386: FILE: drivers/net/dm9000.c:315:
+
+

CHECK:SPACING: No space is necessary after a cast
#390: FILE: drivers/net/dm9000.c:319:
+	board_info_t *db = (board_info_t *) dev->priv;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/net/dm9000.c:321:
+^Iunsigned long flags;^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: drivers/net/dm9000.c:325:
+	spin_lock_irqsave(db->lock,flags);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/net/dm9000.c:336:
+	spin_unlock_irqrestore(db->lock,flags);
 	                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: drivers/net/dm9000.c:339:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->data_res"
#419: FILE: drivers/net/dm9000.c:348:
+	if (db->data_res == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "db->addr_res"
#420: FILE: drivers/net/dm9000.c:349:
+		if (db->addr_res != NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: drivers/net/dm9000.c:355:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "db->data_req"
#432: FILE: drivers/net/dm9000.c:361:
+	if (db->data_req != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "db->addr_res"
#437: FILE: drivers/net/dm9000.c:366:
+	if (db->addr_res != NULL) {

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_r' - possible side-effects?
#443: FILE: drivers/net/dm9000.c:372:
+#define res_size(_r) (((_r)->end - (_r)->start) + 1)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#446: FILE: drivers/net/dm9000.c:375:
+/*
+ * Search DM9000 board, allocate space and register it

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#461: FILE: drivers/net/dm9000.c:390:
+	printk(KERN_INFO "%s Ethernet Driver\n", CARDNAME);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#464: FILE: drivers/net/dm9000.c:393:
+	ndev = alloc_etherdev(sizeof (struct board_info));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#466: FILE: drivers/net/dm9000.c:395:
+		printk("%s: could not allocate device.\n", CARDNAME);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dm9000_probe', this function's name, in a string
#473: FILE: drivers/net/dm9000.c:402:
+	PRINTK2("dm9000_probe()");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#476: FILE: drivers/net/dm9000.c:405:
+	db = (struct board_info *) ndev->priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#477: FILE: drivers/net/dm9000.c:406:
+	memset(db, 0, sizeof (*db));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: drivers/net/dm9000.c:423:
+^I^Indev->irq = pdev->resource[1].start;^I^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->addr_res"
#505: FILE: drivers/net/dm9000.c:434:
+		if (db->addr_res == NULL || db->data_res == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->data_res"
#505: FILE: drivers/net/dm9000.c:434:
+		if (db->addr_res == NULL || db->data_res == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#506: FILE: drivers/net/dm9000.c:435:
+			printk(KERN_ERR PFX "insufficient resources\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->addr_req"
#515: FILE: drivers/net/dm9000.c:444:
+		if (db->addr_req == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#516: FILE: drivers/net/dm9000.c:445:
+			printk(KERN_ERR PFX "cannot claim address reg area\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->io_addr"
#523: FILE: drivers/net/dm9000.c:452:
+		if (db->io_addr == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#524: FILE: drivers/net/dm9000.c:453:
+			printk(KERN_ERR "failed to ioremap address reg\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->data_req"
#533: FILE: drivers/net/dm9000.c:462:
+		if (db->data_req == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#534: FILE: drivers/net/dm9000.c:463:
+			printk(KERN_ERR PFX "cannot claim data reg area\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->io_data"
#541: FILE: drivers/net/dm9000.c:470:
+		if (db->io_data == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#542: FILE: drivers/net/dm9000.c:471:
+			printk(KERN_ERR "failed to ioremap data reg\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#555: FILE: drivers/net/dm9000.c:484:
+
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdata"
#558: FILE: drivers/net/dm9000.c:487:
+	if (pdata != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#560: FILE: drivers/net/dm9000.c:489:
+		 * default IO width */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#572: FILE: drivers/net/dm9000.c:501:
+		 * over-rides */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdata->inblk"
#574: FILE: drivers/net/dm9000.c:503:
+		if (pdata->inblk != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdata->outblk"
#577: FILE: drivers/net/dm9000.c:506:
+		if (pdata->outblk != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdata->dumpblk"
#580: FILE: drivers/net/dm9000.c:509:
+		if (pdata->dumpblk != NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#595: FILE: drivers/net/dm9000.c:524:
+		printk("%s: read wrong id 0x%08x\n", CARDNAME, id_val);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#599: FILE: drivers/net/dm9000.c:528:
+		printk("%s: wrong id: 0x%08x\n", CARDNAME, id_val);

CHECK:SPACING: No space is necessary after a cast
#631: FILE: drivers/net/dm9000.c:560:
+		((u16 *) db->srom)[i] = read_srom_word(db, i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#638: FILE: drivers/net/dm9000.c:567:
+		printk("%s: Invalid ethernet MAC address.  Please "

WARNING:SPLIT_STRING: quoted string split across lines
#639: FILE: drivers/net/dm9000.c:568:
+		printk("%s: Invalid ethernet MAC address.  Please "
+		       "set using ifconfig\n", ndev->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: drivers/net/dm9000.c:574:
+		printk("%s: dm9000 at %p,%p IRQ %d MAC: ",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#648: FILE: drivers/net/dm9000.c:577:
+			printk("%02x:", ndev->dev_addr[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#649: FILE: drivers/net/dm9000.c:578:
+		printk("%02x\n", ndev->dev_addr[5]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#655: FILE: drivers/net/dm9000.c:584:
+	printk("%s: not found (%d).\n", CARDNAME, ret);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#664: FILE: drivers/net/dm9000.c:593:
+/*
+ *  Open the interface.

CHECK:SPACING: No space is necessary after a cast
#670: FILE: drivers/net/dm9000.c:599:
+	board_info_t *db = (board_info_t *) dev->priv;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dm9000_open', this function's name, in a string
#672: FILE: drivers/net/dm9000.c:601:
+	PRINTK2("entering dm9000_open\n");

CHECK:SPACING: No space is necessary after a cast
#687: FILE: drivers/net/dm9000.c:616:
+	db->timer.data     = (unsigned long) dev;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: drivers/net/dm9000.c:626:
+/* $

WARNING:TYPO_SPELLING: 'Initilize' may be misspelled - perhaps 'Initialize'?
#698: FILE: drivers/net/dm9000.c:627:
+ * Initilize dm9000 board
    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#698: FILE: drivers/net/dm9000.c:627:
+/* 
+ * Initilize dm9000 board

CHECK:SPACING: No space is necessary after a cast
#703: FILE: drivers/net/dm9000.c:632:
+	board_info_t *db = (board_info_t *) dev->priv;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#705: FILE: drivers/net/dm9000.c:634:
+	PRINTK1("entering %s\n",__FUNCTION__);
 	                       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#705: FILE: drivers/net/dm9000.c:634:
+	PRINTK1("entering %s\n",__FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#740: FILE: drivers/net/dm9000.c:669:
+/*
+ *  Hardware start transmission.

CHECK:SPACING: No space is necessary after a cast
#746: FILE: drivers/net/dm9000.c:675:
+	board_info_t *db = (board_info_t *) dev->priv;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dm9000_start_xmit', this function's name, in a string
#748: FILE: drivers/net/dm9000.c:677:
+	PRINTK3("dm9000_start_xmit\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (db->outblk)
#761: FILE: drivers/net/dm9000.c:690:
+	(db->outblk)(db->io_data, skb->data, skb->len);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#766: FILE: drivers/net/dm9000.c:695:
+	if (db->tx_pkt_cnt == 0) {
+

CHECK:SPACING: No space is necessary after a cast
#801: FILE: drivers/net/dm9000.c:730:
+	board_info_t *db = (board_info_t *) dev->priv;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#811: FILE: drivers/net/dm9000.c:740:
+/*
+ * Stop the interface.

CHECK:SPACING: No space is necessary after a cast
#817: FILE: drivers/net/dm9000.c:746:
+	board_info_t *db = (board_info_t *) ndev->priv;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#819: FILE: drivers/net/dm9000.c:748:
+	PRINTK1("entering %s\n",__FUNCTION__);
 	                       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#819: FILE: drivers/net/dm9000.c:748:
+	PRINTK1("entering %s\n",__FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#836: FILE: drivers/net/dm9000.c:765:
+/*
+ * DM9000 interrupt handler

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#841: FILE: drivers/net/dm9000.c:770:
+dm9000_tx_done(struct net_device *dev, board_info_t * db)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#869: FILE: drivers/net/dm9000.c:798:
+	PRINTK3("entering %s\n",__FUNCTION__);
 	                       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#869: FILE: drivers/net/dm9000.c:798:
+	PRINTK3("entering %s\n",__FUNCTION__);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dm9000_interrupt', this function's name, in a string
#872: FILE: drivers/net/dm9000.c:801:
+		PRINTK1("dm9000_interrupt() without DEVICE arg\n");

CHECK:SPACING: No space is necessary after a cast
#877: FILE: drivers/net/dm9000.c:806:
+	db = (board_info_t *) dev->priv;

WARNING:TYPO_SPELLING: 'Trnasmit' may be misspelled - perhaps 'Transmit'?
#894: FILE: drivers/net/dm9000.c:823:
+	/* Trnasmit Interrupt check */
 	   ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#910: FILE: drivers/net/dm9000.c:839:
+/*
+ *  Get statistics from driver.

CHECK:SPACING: No space is necessary after a cast
#915: FILE: drivers/net/dm9000.c:844:
+	board_info_t *db = (board_info_t *) dev->priv;

WARNING:LINE_SPACING: Missing a blank line after declarations
#916: FILE: drivers/net/dm9000.c:845:
+	board_info_t *db = (board_info_t *) dev->priv;
+	return &db->stats;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#920: FILE: drivers/net/dm9000.c:849:
+/*
+ *  Process the upper socket ioctl command

ERROR:SPACING: space required after that ',' (ctx:VxV)
#925: FILE: drivers/net/dm9000.c:854:
+	PRINTK1("entering %s\n",__FUNCTION__);
 	                       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#925: FILE: drivers/net/dm9000.c:854:
+	PRINTK1("entering %s\n",__FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#930: FILE: drivers/net/dm9000.c:859:
+/*
+ *  A periodic timer routine

CHECK:SPACING: No space is necessary after a cast
#936: FILE: drivers/net/dm9000.c:865:
+	struct net_device *dev = (struct net_device *) data;

CHECK:SPACING: No space is necessary after a cast
#937: FILE: drivers/net/dm9000.c:866:
+	board_info_t *db = (board_info_t *) dev->priv;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dm9000_timer', this function's name, in a string
#941: FILE: drivers/net/dm9000.c:870:
+	PRINTK3("dm9000_timer()\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#943: FILE: drivers/net/dm9000.c:872:
+	spin_lock_irqsave(db->lock,flags);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#951: FILE: drivers/net/dm9000.c:880:
+	spin_unlock_irqrestore(db->lock,flags);
 	                               ^

CHECK:CAMELCASE: Avoid CamelCase: <RxStatus>
#959: FILE: drivers/net/dm9000.c:888:
+	u16	RxStatus;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RxLen>
#960: FILE: drivers/net/dm9000.c:889:
+	u16	RxLen;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#961: FILE: drivers/net/dm9000.c:890:
+} __attribute__((__packed__));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#964: FILE: drivers/net/dm9000.c:893:
+/*
+ *  Received a packet and pass to upper layer

CHECK:SPACING: No space is necessary after a cast
#969: FILE: drivers/net/dm9000.c:898:
+	board_info_t *db = (board_info_t *) dev->priv;

CHECK:CAMELCASE: Avoid CamelCase: <GoodPacket>
#973: FILE: drivers/net/dm9000.c:902:
+	int GoodPacket;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#979: FILE: drivers/net/dm9000.c:908:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#985: FILE: drivers/net/dm9000.c:914:
+			printk("status check failed: %d\n", rxbyte);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (db->inblk)
#998: FILE: drivers/net/dm9000.c:927:
+		(db->inblk)(db->io_data, &rxhdr, sizeof(rxhdr));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1008: FILE: drivers/net/dm9000.c:937:
+		if (RxLen > DM9000_PKT_MAX) {
+			PRINTK1("RST: RX Len:%x\n", RxLen);
+		}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1029: FILE: drivers/net/dm9000.c:958:
+		if (GoodPacket

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1030: FILE: drivers/net/dm9000.c:959:
+		if (GoodPacket
+		    && ((skb = dev_alloc_skb(RxLen + 4)) != NULL)) {

CHECK:SPACING: No space is necessary after a cast
#1033: FILE: drivers/net/dm9000.c:962:
+			rdptr = (u8 *) skb_put(skb, RxLen - 4);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1034: FILE: drivers/net/dm9000.c:963:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: drivers/net/dm9000.c:965:
+^I^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (db->inblk)
#1037: FILE: drivers/net/dm9000.c:966:
+			(db->inblk)(db->io_data, rdptr, RxLen);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1047: FILE: drivers/net/dm9000.c:976:
+^I^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (db->dumpblk)
#1048: FILE: drivers/net/dm9000.c:977:
+			(db->dumpblk)(db->io_data, RxLen);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1054: FILE: drivers/net/dm9000.c:983:
+/*
+ *  Read a word data from SROM

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1057: FILE: drivers/net/dm9000.c:986:
+read_srom_word(board_info_t * db, int offset)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1062: FILE: drivers/net/dm9000.c:991:
+	mdelay(8);		/* according to the datasheet 200us should be enough,
+				   but it doesn't work */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1062: FILE: drivers/net/dm9000.c:991:
+				   but it doesn't work */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1069: FILE: drivers/net/dm9000.c:998:
+/*
+ * Write a word data to SROM

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1072: FILE: drivers/net/dm9000.c:1001:
+write_srom_word(board_info_t * db, int offset, u16 val)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1083: FILE: drivers/net/dm9000.c:1012:
+/*
+ * Only for development:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1088: FILE: drivers/net/dm9000.c:1017:
+program_eeprom(board_info_t * db)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1097: FILE: drivers/net/dm9000.c:1026:
+	int i;
+	for (i = 0; i < 8; i++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1102: FILE: drivers/net/dm9000.c:1031:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1104: FILE: drivers/net/dm9000.c:1033:
+/*
+ *  Calculate the CRC valude of the Rx packet

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#1110: FILE: drivers/net/dm9000.c:1039:
+cal_CRC(unsigned char *Data, unsigned int Len, u8 flag)

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#1110: FILE: drivers/net/dm9000.c:1039:
+cal_CRC(unsigned char *Data, unsigned int Len, u8 flag)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1112: FILE: drivers/net/dm9000.c:1041:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: drivers/net/dm9000.c:1042:
+       u32 crc = ether_crc_le(Len, Data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: drivers/net/dm9000.c:1044:
+       if (flag)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1115: FILE: drivers/net/dm9000.c:1044:
+       if (flag)
+               return ~crc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1116: FILE: drivers/net/dm9000.c:1045:
+               return ~crc;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: drivers/net/dm9000.c:1045:
+               return ~crc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1118: FILE: drivers/net/dm9000.c:1047:
+       return crc;$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1122: FILE: drivers/net/dm9000.c:1051:
+/*
+ *  Set DM9000 multicast address

CHECK:SPACING: No space is necessary after a cast
#1127: FILE: drivers/net/dm9000.c:1056:
+	board_info_t *db = (board_info_t *) dev->priv;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dm9000_hash_table', this function's name, in a string
#1134: FILE: drivers/net/dm9000.c:1063:
+	PRINTK2("dm9000_hash_table()\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1136: FILE: drivers/net/dm9000.c:1065:
+	spin_lock_irqsave(&db->lock,flags);
 	                           ^

CHECK:SPACING: No space is necessary after a cast
#1150: FILE: drivers/net/dm9000.c:1079:
+		hash_val = cal_CRC((char *) mcptr->dmi_addr, 6, 0) & 0x3f;

CHECK:SPACING: No space is necessary after a cast
#1151: FILE: drivers/net/dm9000.c:1080:
+		hash_table[hash_val / 16] |= (u16) 1 << (hash_val % 16);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1160: FILE: drivers/net/dm9000.c:1089:
+	spin_unlock_irqrestore(&db->lock,flags);
 	                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1163: FILE: drivers/net/dm9000.c:1092:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1165: FILE: drivers/net/dm9000.c:1094:
+/*
+ *   Read a word from phyxcer

CHECK:SPACING: No space is necessary after a cast
#1170: FILE: drivers/net/dm9000.c:1099:
+	board_info_t *db = (board_info_t *) dev->priv;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1174: FILE: drivers/net/dm9000.c:1103:
+	spin_lock_irqsave(&db->lock,flags);
 	                           ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1179: FILE: drivers/net/dm9000.c:1108:
+	udelay(100);		/* Wait read complete */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1185: FILE: drivers/net/dm9000.c:1114:
+	spin_unlock_irqrestore(&db->lock,flags);
 	                                ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1191: FILE: drivers/net/dm9000.c:1120:
+/*
+ *   Write a word to phyxcer

CHECK:SPACING: No space is necessary after a cast
#1196: FILE: drivers/net/dm9000.c:1125:
+	board_info_t *db = (board_info_t *) dev->priv;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1199: FILE: drivers/net/dm9000.c:1128:
+	spin_lock_irqsave(&db->lock,flags);
 	                           ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1209: FILE: drivers/net/dm9000.c:1138:
+	udelay(500);		/* Wait write complete */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1212: FILE: drivers/net/dm9000.c:1141:
+	spin_unlock_irqrestore(&db->lock,flags);
 	                                ^

CHECK:SPACING: No space is necessary after a cast
#1233: FILE: drivers/net/dm9000.c:1162:
+	board_info_t *db = (board_info_t *) ndev->priv;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1236: FILE: drivers/net/dm9000.c:1165:
+	if (ndev && level == RESUME_ENABLE) {
+

CHECK:SPACING: No space is necessary after a cast
#1256: FILE: drivers/net/dm9000.c:1185:
+	dm9000_release_board(pdev, (board_info_t *) ndev->priv);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1295: FILE: drivers/net/dm9000.h:1:
+/*

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1355: FILE: drivers/net/dm9000.h:61:
+#define NCR_EXT_PHY         (1<<7)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1355: FILE: drivers/net/dm9000.h:61:
+#define NCR_EXT_PHY         (1<<7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1356: FILE: drivers/net/dm9000.h:62:
+#define NCR_WAKEEN          (1<<6)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1356: FILE: drivers/net/dm9000.h:62:
+#define NCR_WAKEEN          (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1357: FILE: drivers/net/dm9000.h:63:
+#define NCR_FCOL            (1<<4)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1357: FILE: drivers/net/dm9000.h:63:
+#define NCR_FCOL            (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1358: FILE: drivers/net/dm9000.h:64:
+#define NCR_FDX             (1<<3)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1358: FILE: drivers/net/dm9000.h:64:
+#define NCR_FDX             (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1359: FILE: drivers/net/dm9000.h:65:
+#define NCR_LBK             (3<<1)
                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1360: FILE: drivers/net/dm9000.h:66:
+#define NCR_RST	            (1<<0)
                	              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1360: FILE: drivers/net/dm9000.h:66:
+#define NCR_RST	            (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1362: FILE: drivers/net/dm9000.h:68:
+#define NSR_SPEED           (1<<7)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1362: FILE: drivers/net/dm9000.h:68:
+#define NSR_SPEED           (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1363: FILE: drivers/net/dm9000.h:69:
+#define NSR_LINKST          (1<<6)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1363: FILE: drivers/net/dm9000.h:69:
+#define NSR_LINKST          (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1364: FILE: drivers/net/dm9000.h:70:
+#define NSR_WAKEST          (1<<5)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1364: FILE: drivers/net/dm9000.h:70:
+#define NSR_WAKEST          (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1365: FILE: drivers/net/dm9000.h:71:
+#define NSR_TX2END          (1<<3)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1365: FILE: drivers/net/dm9000.h:71:
+#define NSR_TX2END          (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1366: FILE: drivers/net/dm9000.h:72:
+#define NSR_TX1END          (1<<2)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1366: FILE: drivers/net/dm9000.h:72:
+#define NSR_TX1END          (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1367: FILE: drivers/net/dm9000.h:73:
+#define NSR_RXOV            (1<<1)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1367: FILE: drivers/net/dm9000.h:73:
+#define NSR_RXOV            (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1369: FILE: drivers/net/dm9000.h:75:
+#define TCR_TJDIS           (1<<6)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1369: FILE: drivers/net/dm9000.h:75:
+#define TCR_TJDIS           (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1370: FILE: drivers/net/dm9000.h:76:
+#define TCR_EXCECM          (1<<5)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1370: FILE: drivers/net/dm9000.h:76:
+#define TCR_EXCECM          (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1371: FILE: drivers/net/dm9000.h:77:
+#define TCR_PAD_DIS2        (1<<4)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1371: FILE: drivers/net/dm9000.h:77:
+#define TCR_PAD_DIS2        (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1372: FILE: drivers/net/dm9000.h:78:
+#define TCR_CRC_DIS2        (1<<3)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1372: FILE: drivers/net/dm9000.h:78:
+#define TCR_CRC_DIS2        (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1373: FILE: drivers/net/dm9000.h:79:
+#define TCR_PAD_DIS1        (1<<2)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1373: FILE: drivers/net/dm9000.h:79:
+#define TCR_PAD_DIS1        (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1374: FILE: drivers/net/dm9000.h:80:
+#define TCR_CRC_DIS1        (1<<1)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1374: FILE: drivers/net/dm9000.h:80:
+#define TCR_CRC_DIS1        (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1375: FILE: drivers/net/dm9000.h:81:
+#define TCR_TXREQ           (1<<0)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1375: FILE: drivers/net/dm9000.h:81:
+#define TCR_TXREQ           (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1377: FILE: drivers/net/dm9000.h:83:
+#define TSR_TJTO            (1<<7)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1377: FILE: drivers/net/dm9000.h:83:
+#define TSR_TJTO            (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1378: FILE: drivers/net/dm9000.h:84:
+#define TSR_LC              (1<<6)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1378: FILE: drivers/net/dm9000.h:84:
+#define TSR_LC              (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1379: FILE: drivers/net/dm9000.h:85:
+#define TSR_NC              (1<<5)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1379: FILE: drivers/net/dm9000.h:85:
+#define TSR_NC              (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1380: FILE: drivers/net/dm9000.h:86:
+#define TSR_LCOL            (1<<4)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1380: FILE: drivers/net/dm9000.h:86:
+#define TSR_LCOL            (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1381: FILE: drivers/net/dm9000.h:87:
+#define TSR_COL             (1<<3)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1381: FILE: drivers/net/dm9000.h:87:
+#define TSR_COL             (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1382: FILE: drivers/net/dm9000.h:88:
+#define TSR_EC              (1<<2)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1382: FILE: drivers/net/dm9000.h:88:
+#define TSR_EC              (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1384: FILE: drivers/net/dm9000.h:90:
+#define RCR_WTDIS           (1<<6)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1384: FILE: drivers/net/dm9000.h:90:
+#define RCR_WTDIS           (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1385: FILE: drivers/net/dm9000.h:91:
+#define RCR_DIS_LONG        (1<<5)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1385: FILE: drivers/net/dm9000.h:91:
+#define RCR_DIS_LONG        (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1386: FILE: drivers/net/dm9000.h:92:
+#define RCR_DIS_CRC         (1<<4)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1386: FILE: drivers/net/dm9000.h:92:
+#define RCR_DIS_CRC         (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1387: FILE: drivers/net/dm9000.h:93:
+#define RCR_ALL	            (1<<3)
                	              ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1387: FILE: drivers/net/dm9000.h:93:
+#define RCR_ALL	            (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1388: FILE: drivers/net/dm9000.h:94:
+#define RCR_RUNT            (1<<2)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1388: FILE: drivers/net/dm9000.h:94:
+#define RCR_RUNT            (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1389: FILE: drivers/net/dm9000.h:95:
+#define RCR_PRMSC           (1<<1)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1389: FILE: drivers/net/dm9000.h:95:
+#define RCR_PRMSC           (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1390: FILE: drivers/net/dm9000.h:96:
+#define RCR_RXEN            (1<<0)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1390: FILE: drivers/net/dm9000.h:96:
+#define RCR_RXEN            (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1392: FILE: drivers/net/dm9000.h:98:
+#define RSR_RF              (1<<7)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1392: FILE: drivers/net/dm9000.h:98:
+#define RSR_RF              (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1393: FILE: drivers/net/dm9000.h:99:
+#define RSR_MF              (1<<6)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1393: FILE: drivers/net/dm9000.h:99:
+#define RSR_MF              (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1394: FILE: drivers/net/dm9000.h:100:
+#define RSR_LCS             (1<<5)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1394: FILE: drivers/net/dm9000.h:100:
+#define RSR_LCS             (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1395: FILE: drivers/net/dm9000.h:101:
+#define RSR_RWTO            (1<<4)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1395: FILE: drivers/net/dm9000.h:101:
+#define RSR_RWTO            (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1396: FILE: drivers/net/dm9000.h:102:
+#define RSR_PLE             (1<<3)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1396: FILE: drivers/net/dm9000.h:102:
+#define RSR_PLE             (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1397: FILE: drivers/net/dm9000.h:103:
+#define RSR_AE              (1<<2)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1397: FILE: drivers/net/dm9000.h:103:
+#define RSR_AE              (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1398: FILE: drivers/net/dm9000.h:104:
+#define RSR_CE              (1<<1)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1398: FILE: drivers/net/dm9000.h:104:
+#define RSR_CE              (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1399: FILE: drivers/net/dm9000.h:105:
+#define RSR_FOE             (1<<0)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1399: FILE: drivers/net/dm9000.h:105:
+#define RSR_FOE             (1<<0)

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#1401: FILE: drivers/net/dm9000.h:107:
+#define FCTR_HWOT(ot)	(( ot & 0xf ) << 4 )
                   ^^

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#1401: FILE: drivers/net/dm9000.h:107:
+#define FCTR_HWOT(ot)	(( ot & 0xf ) << 4 )
                      	   ^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1401: FILE: drivers/net/dm9000.h:107:
+#define FCTR_HWOT(ot)	(( ot & 0xf ) << 4 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1401: FILE: drivers/net/dm9000.h:107:
+#define FCTR_HWOT(ot)	(( ot & 0xf ) << 4 )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ot' may be better as '(ot)' to avoid precedence issues
#1401: FILE: drivers/net/dm9000.h:107:
+#define FCTR_HWOT(ot)	(( ot & 0xf ) << 4 )

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#1402: FILE: drivers/net/dm9000.h:108:
+#define FCTR_LWOT(ot)	( ot & 0xf )
                   ^^

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#1402: FILE: drivers/net/dm9000.h:108:
+#define FCTR_LWOT(ot)	( ot & 0xf )
                      	  ^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1402: FILE: drivers/net/dm9000.h:108:
+#define FCTR_LWOT(ot)	( ot & 0xf )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1402: FILE: drivers/net/dm9000.h:108:
+#define FCTR_LWOT(ot)	( ot & 0xf )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ot' may be better as '(ot)' to avoid precedence issues
#1402: FILE: drivers/net/dm9000.h:108:
+#define FCTR_LWOT(ot)	( ot & 0xf )

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1404: FILE: drivers/net/dm9000.h:110:
+#define IMR_PAR             (1<<7)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1404: FILE: drivers/net/dm9000.h:110:
+#define IMR_PAR             (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1405: FILE: drivers/net/dm9000.h:111:
+#define IMR_ROOM            (1<<3)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1405: FILE: drivers/net/dm9000.h:111:
+#define IMR_ROOM            (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1406: FILE: drivers/net/dm9000.h:112:
+#define IMR_ROM             (1<<2)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1406: FILE: drivers/net/dm9000.h:112:
+#define IMR_ROM             (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1407: FILE: drivers/net/dm9000.h:113:
+#define IMR_PTM             (1<<1)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1407: FILE: drivers/net/dm9000.h:113:
+#define IMR_PTM             (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1408: FILE: drivers/net/dm9000.h:114:
+#define IMR_PRM             (1<<0)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1408: FILE: drivers/net/dm9000.h:114:
+#define IMR_PRM             (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1410: FILE: drivers/net/dm9000.h:116:
+#define ISR_ROOS            (1<<3)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1410: FILE: drivers/net/dm9000.h:116:
+#define ISR_ROOS            (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1411: FILE: drivers/net/dm9000.h:117:
+#define ISR_ROS             (1<<2)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1411: FILE: drivers/net/dm9000.h:117:
+#define ISR_ROS             (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1412: FILE: drivers/net/dm9000.h:118:
+#define ISR_PTS             (1<<1)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1412: FILE: drivers/net/dm9000.h:118:
+#define ISR_PTS             (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1413: FILE: drivers/net/dm9000.h:119:
+#define ISR_PRS             (1<<0)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1413: FILE: drivers/net/dm9000.h:119:
+#define ISR_PRS             (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1416: FILE: drivers/net/dm9000.h:122:
+#define EPCR_REEP           (1<<5)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1416: FILE: drivers/net/dm9000.h:122:
+#define EPCR_REEP           (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1417: FILE: drivers/net/dm9000.h:123:
+#define EPCR_WEP            (1<<4)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1417: FILE: drivers/net/dm9000.h:123:
+#define EPCR_WEP            (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1418: FILE: drivers/net/dm9000.h:124:
+#define EPCR_EPOS           (1<<3)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1418: FILE: drivers/net/dm9000.h:124:
+#define EPCR_EPOS           (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1419: FILE: drivers/net/dm9000.h:125:
+#define EPCR_ERPRR          (1<<2)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1419: FILE: drivers/net/dm9000.h:125:
+#define EPCR_ERPRR          (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1420: FILE: drivers/net/dm9000.h:126:
+#define EPCR_ERPRW          (1<<1)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1420: FILE: drivers/net/dm9000.h:126:
+#define EPCR_ERPRW          (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1421: FILE: drivers/net/dm9000.h:127:
+#define EPCR_ERRE           (1<<0)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1421: FILE: drivers/net/dm9000.h:127:
+#define EPCR_ERRE           (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1423: FILE: drivers/net/dm9000.h:129:
+#define GPCR_GEP_CNTL       (1<<0)
                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1423: FILE: drivers/net/dm9000.h:129:
+#define GPCR_GEP_CNTL       (1<<0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1434: FILE: include/linux/dm9000.h:1:
+/* include/linux/dm9000.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1434: FILE: include/linux/dm9000.h:1:
+/* include/linux/dm9000.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1445: FILE: include/linux/dm9000.h:12:
+ *
+*/

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#1456: FILE: include/linux/dm9000.h:23:
+/* platfrom data for platfrom device structure's platfrom_data field */
    ^^^^^^^^

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#1456: FILE: include/linux/dm9000.h:23:
+/* platfrom data for platfrom device structure's platfrom_data field */
                      ^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197967.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 57 errors, 107 warnings, 184 checks, 1415 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197967.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
