WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#43: FILE: security/Kconfig:24:
+config KEYS_DSA_KEYS
+	tristate "Support DSA keys (EXPERIMENTAL)"
+	depends on KEYS && EXPERIMENTAL
+	select CRYPTO_MPILIB
+	select CRYPTO_DSA
+	help
+	  This option provides support for retaining DSA keys in the kernel.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: security/keys/dsa_key.c:1:
+/* dsa_key.c: DSA key

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#85: FILE: security/keys/dsa_key.c:17:
+#include <asm/uaccess.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#145: FILE: security/keys/dsa_key.c:77:
+		printk(KERN_ERR "dsa-key: crypto_digest_setkey failed with error %i\n", i);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*payload)...) over kmalloc(sizeof(struct key_payload_dsa)...)
#201: FILE: security/keys/dsa_key.c:133:
+	*payload = kmalloc(sizeof(struct key_payload_dsa), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#210: FILE: security/keys/dsa_key.c:142:
+	remain = read = (unsigned int)datalen;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#229: FILE: security/keys/dsa_key.c:161:
+	if(dsa_check_secret_key(*payload)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#236: FILE: security/keys/dsa_key.c:168:
+	printk(KERN_ERR "dsa-key: attempt to add invalid key\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#315: FILE: security/keys/dsa_key.c:247:
+	unsigned nbytes[DSA_PUBLIC_PARTS];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#316: FILE: security/keys/dsa_key.c:248:
+	unsigned nbits[DSA_PUBLIC_PARTS];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#337: FILE: security/keys/dsa_key.c:269:
+			printk(KERN_ERR "dsa-key: failed to get mpi from buffer\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: security/keys/dsa_key.c:284:
+		kdebug("dsa-key: nbytes is %i, nbits is %i, topbyte is %2hx, botbyte is %2hx\n",
+			nbytes[i], nbits[i], ((nbits[i] >> 8) & 0xff), ((nbits[i]) & 0xff));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: security/keys/dsa_key.c:334:
+	signature = dsa_sign((struct key_payload_dsa *)key->payload.data,
+			 inbuf, dlen, &siglen);

ERROR:SPACING: space required before the open parenthesis '('
#407: FILE: security/keys/dsa_key.c:339:
+	if(copy_to_user(result, signature, min(rlen, siglen)) == 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#426: FILE: security/keys/dsa_key.c:358:
+		printk(KERN_ERR "dsa-key: failed to register key type\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#428: FILE: security/keys/dsa_key.c:360:
+		printk(KERN_INFO "dsa-key: new key type registered\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: security/keys/dsa_key.c:365:
+static void __exit dsa_exit (void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#435: FILE: security/keys/dsa_key.c:367:
+	printk(KERN_INFO "dsa-key: unregistering key type\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111153.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 4 checks, 395 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111153.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
