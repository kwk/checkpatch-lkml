WARNING:REPEATED_WORD: Possible repeated word: 'with'
#39: 
patchand tested with with x25 over tcp on a x26_64 kernel. 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: include/linux/net.h:147:
+^Iint^I ^I(*compat_ioctl) (struct socket *sock, unsigned int cmd,$

WARNING:SPACING: Unnecessary space before function pointer arguments
#73: FILE: include/linux/net.h:147:
+	int	 	(*compat_ioctl) (struct socket *sock, unsigned int cmd,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: include/linux/net.h:148:
+	int	 	(*compat_ioctl) (struct socket *sock, unsigned int cmd,
+				      unsigned long arg);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#92: FILE: include/linux/net.h:288:
+#define SOCKOPS_COMPAT_WRAP(name, fam)					\
+SOCKCALL_WRAP(name, release, (struct socket *sock), (sock))	\
+SOCKCALL_WRAP(name, bind, (struct socket *sock, struct sockaddr *uaddr,

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#95: FILE: include/linux/net.h:290:
int addr_len), \

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: include/linux/net.h:291:
+SOCKCALL_WRAP(name, bind, (struct socket *sock, struct sockaddr *uaddr,
+	      (sock, uaddr, addr_len))				\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#96: FILE: include/linux/net.h:291:
+	      (sock, uaddr, addr_len))				\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: include/linux/net.h:293:
+^I^I^I      int addr_len, int flags), ^I\$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#99: FILE: include/linux/net.h:293:
+			      int addr_len, int flags), 	\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#103: FILE: include/linux/net.h:296:
+	      (sock1, sock2))					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#106: FILE: include/linux/net.h:298:
+			 int flags), (sock, newsock, flags)) \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#109: FILE: include/linux/net.h:300:
+			 int *addr_len, int peer), (sock, uaddr, addr_len, peer)) \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: include/linux/net.h:302:
+SOCKCALL_UWRAP(name, poll, (struct file *file, struct socket *sock,
+	      (file, sock, wait)) \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#112: FILE: include/linux/net.h:302:
+	      (file, sock, wait)) \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#117: FILE: include/linux/net.h:306:
+			 unsigned long arg), (sock, cmd, arg)) \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: include/linux/net.h:308:
+SOCKCALL_WRAP(name, listen, (struct socket *sock, int len), (sock,
+SOCKCALL_WRAP(name, shutdown, (struct socket *sock, int flags), (sock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: include/linux/net.h:308:
+SOCKCALL_WRAP(name, listen, (struct socket *sock, int len), (sock,
flags)) \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: include/linux/net.h:309:
+SOCKCALL_WRAP(name, shutdown, (struct socket *sock, int flags), (sock,
+SOCKCALL_WRAP(name, setsockopt, (struct socket *sock, int level, int

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: include/linux/net.h:309:
+SOCKCALL_WRAP(name, shutdown, (struct socket *sock, int flags), (sock,
optname, \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: include/linux/net.h:314:
+SOCKCALL_WRAP(name, sendmsg, (struct kiocb *iocb, struct socket *sock,
+	      (iocb, sock, m, len)) \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#132: FILE: include/linux/net.h:314:
+	      (iocb, sock, m, len)) \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: include/linux/net.h:316:
+SOCKCALL_WRAP(name, recvmsg, (struct kiocb *iocb, struct socket *sock,
+	      (iocb, sock, m, len, flags)) \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#135: FILE: include/linux/net.h:316:
+	      (iocb, sock, m, len, flags)) \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: include/linux/net.h:318:
+SOCKCALL_WRAP(name, mmap, (struct file *file, struct socket *sock,
+	      (file, sock, vma)) \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#138: FILE: include/linux/net.h:318:
+	      (file, sock, vma)) \

WARNING:CONST_STRUCT: struct proto_ops should normally be const
#140: FILE: include/linux/net.h:320:
+static struct proto_ops name##_ops = {			\

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: net/socket.c:114:
+static long compat_sock_ioctl(struct file *file,
+		      unsigned int cmd, unsigned long arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#197: FILE: net/socket.c:2095:
+static long compat_sock_ioctl(struct file *file, unsigned cmd, unsigned

WARNING:LINE_SPACING: Missing a blank line after declarations
#201: FILE: net/socket.c:2098:
+	struct socket *sock;
+	sock = file->private_data;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: net/socket.c:2101:
+	int ret = -ENOIOCTLCMD;
+	if(sock->ops->compat_ioctl) {

ERROR:SPACING: space required before the open parenthesis '('
#204: FILE: net/socket.c:2101:
+	if(sock->ops->compat_ioctl) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#204: FILE: net/socket.c:2101:
+	if(sock->ops->compat_ioctl) {
+		ret = sock->ops->compat_ioctl(sock,cmd,arg);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#205: FILE: net/socket.c:2102:
+		ret = sock->ops->compat_ioctl(sock,cmd,arg);
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#205: FILE: net/socket.c:2102:
+		ret = sock->ops->compat_ioctl(sock,cmd,arg);
 		                                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 19 warnings, 12 checks, 135 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
