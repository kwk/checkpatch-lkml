WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#20: 
diff -Nru a/drivers/pci/hotplug/cpqphp_ctrl.c b/drivers/pci/hotplug/cpqphp_ctrl.c

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#21: 
--- a/drivers/pci/hotplug/cpqphp_ctrl.c	2003-07-02 13:45:17.000000000 -0700

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#32: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:44:
+static u32 configure_new_device(struct controller *ctrl, struct pci_func *func,
+	u8 behind_bridge, struct resource_lists *resources, u8 bridge_bus, u8 bridge_dev);

ERROR:SPACING: space prohibited after that open parenthesis '('
#33: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:45:
+static int configure_new_function( struct controller *ctrl, struct pci_func *func,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#34: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:46:
+static int configure_new_function( struct controller *ctrl, struct pci_func *func,
+	u8 behind_bridge, struct resource_lists *resources, u8 bridge_bus, u8 bridge_dev);

CHECK:SPACING: No space is necessary after a cast
#47: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:84:
+	struct controller *ctrl = (struct controller *) inst_id;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:105:
+^I^I^I/*  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around func->presence_save
#98: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:118:
+			p_slot->hpc_ops->get_adapter_status(p_slot, &(func->presence_save));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#156: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:150:
+	struct controller *ctrl = (struct controller *) inst_id;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#176: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:164:
+	 *  Presence Change
+	**********************************/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:181:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:185:
+^I^I^I/*  $

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#225: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:197:
+					info("Button pressed on Slot(%d)\n", ctrl->first_slot + hp_slot);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#235: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:203:
+					info("Button released on Slot(%d)\n", ctrl->first_slot + hp_slot);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#244: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:210:
+						info("Button cancel on Slot(%d)\n", ctrl->first_slot + hp_slot);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#250: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:214:
+						info("Button ignore on Slot(%d)\n", ctrl->first_slot + hp_slot);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:218:
+^I^I^I^I/*  $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around func->presence_save
#269: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:222:
+				p_slot->hpc_ops->get_adapter_status(p_slot, &(func->presence_save));

CHECK:SPACING: No space is necessary after a cast
#298: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:246:
+	struct controller *ctrl = (struct controller *) inst_id;

ERROR:SPACING: space prohibited after that open parenthesis '('
#341: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:277:
+			if ( !(p_slot->hpc_ops->query_power_fault(p_slot))) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#345: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:281:
+				info("Power fault cleared on Slot(%d)\n", ctrl->first_slot + hp_slot);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:302:
+^I^I^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:310:
+^I^I^I^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:464:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:472:
+^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:602:
+^I^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:651:
+^I^I/* $

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#605: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:688:
+	u32 max_size[] = { 0x4000000, 0x2000000, 0x1000000, 0x0800000, 0x0400000, 0x0200000, 0x0100000, 0x00 };

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:702:
+^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:703:
+^I^I *  If not big enough we could probably just bail, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:710:
+^I^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:736:
+^I^I^I/* $

ERROR:SPACING: space prohibited after that open parenthesis '('
#673: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:759:
+		for ( i = 0; max_size[i] > size; i++) {

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#675: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:761:
+				split_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#675: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:761:
+				split_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#675: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:761:
+				split_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*split_node)...) over kmalloc(sizeof(struct pci_resource)...)
#675: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:761:
+				split_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:828:
+^I^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:856:
+^I^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:875:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#883: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:983:
+^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#896: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1133:
+/* $

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#1149: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1173:
+	dbg("%s: func->device, slot_offset, hp_slot = %d, %d ,%d\n", __FUNCTION__, func->device, ctrl->slot_device_offset, hp_slot);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1149: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1173:
+	dbg("%s: func->device, slot_offset, hp_slot = %d, %d ,%d\n", __FUNCTION__, func->device, ctrl->slot_device_offset, hp_slot);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1186: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1182:
+		err("%s: Can't get adapter speed  or bus mode mismatch\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1196: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1188:
+		err("%s: Can't get bus operation speed\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1202: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1193:
+^I^Iif ((ctrl->pci_dev->subsystem_vendor == PCI_VENDOR_ID_COMPAQ) && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ctrl->pci_dev->subsystem_vendor == PCI_VENDOR_ID_COMPAQ'
#1202: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1193:
+		if ((ctrl->pci_dev->subsystem_vendor == PCI_VENDOR_ID_COMPAQ) && 
+				(ctrl->rev >= 0x13)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ctrl->rev >= 0x13'
#1202: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1193:
+		if ((ctrl->pci_dev->subsystem_vendor == PCI_VENDOR_ID_COMPAQ) && 
+				(ctrl->rev >= 0x13)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1203: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1194:
+		if ((ctrl->pci_dev->subsystem_vendor == PCI_VENDOR_ID_COMPAQ) && 
+				(ctrl->rev >= 0x13)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1206: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1197:
+		} else if (adapter_speed < bus_speed) {
+				err("%s: speeds of bus %x and adapter %x mismatch\n", __FUNCTION__, bus_speed, adapter_speed);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#1207: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1198:
+				err("%s: speeds of bus %x and adapter %x mismatch\n", __FUNCTION__, bus_speed, adapter_speed);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1207: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1198:
+				err("%s: speeds of bus %x and adapter %x mismatch\n", __FUNCTION__, bus_speed, adapter_speed);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1235: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1214:
+	dbg("%s: after update_hpc\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1259: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1227:
+^I^I/*  $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1272: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1238:
+		dbg("%s: pci_bus_read_config_dword returns %d\n", __FUNCTION__, rc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1345: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1296:
+^I^I/*  next, we will instantiate the linux pci_dev structures $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1355: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1303:
+				dbg("%s:call pci_hp_configure_dev\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1397: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1329:
+^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ctrl->add_support'
#1441: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1369:
+	if ((ctrl->add_support) &&
+		!(func->bus_head || func->mem_head || func->p_mem_head || func->io_head)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1442: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1370:
+	if ((ctrl->add_support) &&
+		!(func->bus_head || func->mem_head || func->p_mem_head || func->io_head)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1443: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1371:
+^I^I/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1446: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1374:
+		 *  determine what's being used. */

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#1507: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1417:
+			dbg("Returning resources to ctlr lists for (B/D/F) = (%#x/%#x/%#x)\n", func->bus, func->device, func->function);

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#1516: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1432:
+				info("PCI Bridge Hot-Remove s:b:d:f(%02x:%02x:%02x:%02x)\n", ctrl->seg, func->bus, func->device, func->function);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#1519: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1435:
+				info("PCI Function Hot-Remove s:b:d:f(%02x:%02x:%02x:%02x)\n", ctrl->seg, func->bus, func->device, func->function);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1565: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1527:
+static int update_slot_info (struct slot *slot)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->power_status
#1577: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1536:
+	slot->hpc_ops->get_power_status(slot, &(info->power_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->attention_status
#1578: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1537:
+	slot->hpc_ops->get_attention_status(slot, &(info->attention_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->latch_status
#1579: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1538:
+	slot->hpc_ops->get_latch_status(slot, &(info->latch_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->adapter_status
#1580: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1539:
+	slot->hpc_ops->get_adapter_status(slot, &(info->adapter_status));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1639: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1601:
+^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1706: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1642:
+^I^I$

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#1719: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1649:
+					p_slot->task_event.expires = jiffies + 5 * HZ;   /* 5 second delay */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1720: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1650:
+					p_slot->task_event.function = (void (*)(unsigned long)) pushbutton_helper_thread;

CHECK:SPACING: No space is necessary after a cast
#1724: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1653:
+					dbg("add_timer p_slot = %p\n", (void *) p_slot);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1772: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1700:
+		dbg("%s: Error! slot NULL\n", __FUNCTION__);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1814: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1723:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1851: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1742:
 
+		}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1860: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1750:
+int cpqhp_process_SI (struct slot *p_slot)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1875: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1758:
+		dbg("%s: Error! slot NULL\n", __FUNCTION__);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1876: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1759:
+		return (1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1890: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1767:
+		info("%s: no adapter on slot(%x)\n", __FUNCTION__, p_slot->number);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1892: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1769:
+		return (0);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1902: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1774:
+		info("%s: latch open on slot(%x)\n", __FUNCTION__, p_slot->number);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1904: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1776:
+		return (0);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1914: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1781:
+		info("%s: already enabled on slot(%x)\n", __FUNCTION__, p_slot->number);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1916: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1783:
+		return (0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!func"
#1938: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1791:
+	if (func == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around func->presence_save
#1959: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1801:
+	p_slot->hpc_ops->get_adapter_status(p_slot, &(func->presence_save));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1961: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1803:
+^I$

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1962: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1804:
+	func->switch_save = !getstatus? 0x10:0;
 	                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1962: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1804:
+	func->switch_save = !getstatus? 0x10:0;
 	                                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!func"
#1979: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1815:
+		if (func == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around func->presence_save
#2007: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1825:
+		p_slot->hpc_ops->get_adapter_status(p_slot, &(func->presence_save));

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#2012: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1828:
+		func->switch_save = !getstatus? 0x10:0;
 		                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2012: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1828:
+		func->switch_save = !getstatus? 0x10:0;
 		                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2024: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1838:
+int cpqhp_process_SS (struct slot *p_slot)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2054: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1857:
+		info("%s: no adapter on slot(%x)\n", __FUNCTION__, p_slot->number);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2056: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1859:
+		return (0);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2061: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1864:
+		info("%s: latch open on slot(%x)\n", __FUNCTION__, p_slot->number);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2063: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1866:
+		return (0);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2069: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1871:
+		info("%s: already disabled slot(%x)\n", __FUNCTION__, p_slot->number);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2071: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1873:
+		return (0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2077: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1879:
+^I/* $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2317: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1942:
+	u8 behind_bridge, struct resource_lists * resources, u8 bridge_bus, u8 bridge_dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2337: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1959:
+	rc = pci_bus_read_config_byte(pci_bus, PCI_DEVFN(func->device, func->function), 0x0E, &temp_byte);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#2353: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1973:
+		rc = configure_new_function(ctrl, new_slot, behind_bridge, resources, bridge_bus, bridge_dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2363: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1993:
+^I^I/*  $

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2372: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:1999:
+			pci_bus_read_config_dword(pci_bus, PCI_DEVFN(func->device, function), 0x00, &ID);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2449: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2097:
+		dbg("Got ranges of buses to use: base:len=0x%x:%x\n", bus_node->base, bus_node->length);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->io_head
#2494: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2120:
+		io_node = get_max_resource(&(resources->io_head), 0x1000L);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2495: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2121:
+		if (io_node) {
[...]
+		} else
[...]

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#2496: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2122:
+			dbg("io_node(base, len, next) (%x, %x, %p)\n", io_node->base, io_node->length, io_node->next);

CHECK:BRACES: Unbalanced braces around else statement
#2497: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2123:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->mem_head
#2502: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2126:
+		mem_node = get_max_resource(&(resources->mem_head), 0x100000L);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2503: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2127:
+		if (mem_node) {
[...]
+		} else
[...]

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#2504: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2128:
+			dbg("mem_node(base, len, next) (%x, %x, %p)\n", mem_node->base, mem_node->length, mem_node->next);

CHECK:BRACES: Unbalanced braces around else statement
#2505: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2129:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#2510: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2132:
+		if (resources->p_mem_head)
[...]
+		else {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->p_mem_head
#2511: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2133:
+			p_mem_node = get_max_resource(&(resources->p_mem_head), 0x100000L);

CHECK:BRACES: Unbalanced braces around else statement
#2512: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2134:
+		else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->mem_head
#2519: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2141:
+			p_mem_node = get_max_resource(&(resources->mem_head), 0x100000L);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#2522: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2144:
+			dbg("p_mem_node(base, len, next) (%x, %x, %p)\n", p_mem_node->base, p_mem_node->length, p_mem_node->next);

CHECK:BRACES: Unbalanced braces around else statement
#2523: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2145:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2544: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2165:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2556: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2175:
+^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2569: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2203:
+^I^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2596: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2223:
+^I^I/*  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2613: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2236:
+			rc = pci_bus_write_config_word (pci_bus, devfn, PCI_MEMORY_BASE, temp_word);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2626: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2251:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2627: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2252:
+^I^I *  If we have prefetchable memory resources copy them and $

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2668: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2291:
+			pci_bus_read_config_dword (pci_bus, PCI_DEVFN(device, 0), PCI_VENDOR_ID, &ID);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2668: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2291:
+			pci_bus_read_config_dword (pci_bus, PCI_DEVFN(device, 0), PCI_VENDOR_ID, &ID);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2689: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2311:
+				rc = configure_new_device(ctrl, new_slot, 1, &temp_resources, func->bus, func->device);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2725: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2341:
+						return_resource(&(resources->bus_head), hold_bus_node);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->bus_head
#2725: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2341:
+						return_resource(&(resources->bus_head), hold_bus_node);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2726: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2342:
+						return_resource(&(resources->io_head), hold_IO_node);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->io_head
#2726: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2342:
+						return_resource(&(resources->io_head), hold_IO_node);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2727: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2343:
+						return_resource(&(resources->mem_head), hold_mem_node);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->mem_head
#2727: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2343:
+						return_resource(&(resources->mem_head), hold_mem_node);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2728: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2344:
+						return_resource(&(resources->p_mem_head), hold_p_mem_node);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->p_mem_head
#2728: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2344:
+						return_resource(&(resources->p_mem_head), hold_p_mem_node);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#2759: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2370:
+					func->bus, func->device, temp_resources.bus_head->base, temp_resources.bus_head->length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2759: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2370:
+				dbg("return bus res of b:d(0x%x:%x) base:len(0x%x:%x)\n",
+					func->bus, func->device, temp_resources.bus_head->base, temp_resources.bus_head->length);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2767: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2376:
+		/* If we have IO space available and there is some left,
+		   return the unused portion */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2767: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2376:
+		   return the unused portion */

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2781: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2387:
+				rc = pci_bus_write_config_byte (pci_bus, devfn, PCI_IO_BASE, temp_byte);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2781: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2387:
+				rc = pci_bus_write_config_byte (pci_bus, devfn, PCI_IO_BASE, temp_byte);

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2792: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2396:
+				/* First use the temporary node to store information for the board */

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#2813: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2412:
+					rc = pci_bus_write_config_byte(pci_bus, devfn, PCI_IO_LIMIT, temp_byte);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2834: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2429:
+		/* If we have memory space available and there is some left,
+		   return the unused portion */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2834: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2429:
+		   return the unused portion */

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2838: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2431:
+			mem_node = do_pre_bridge_resource_split(&(temp_resources.mem_head), &hold_mem_node, 0x100000L);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around temp_resources.mem_head
#2838: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2431:
+			mem_node = do_pre_bridge_resource_split(&(temp_resources.mem_head), &hold_mem_node, 0x100000L);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around temp_resources.mem_head
#2854: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2444:
+			mem_node = do_bridge_resource_split(&(temp_resources.mem_head), 0x100000L);

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2860: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2448:
+				/* First use the temporary node to store information for the board */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2901: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2481:
+^I^I/* If we have prefetchable memory space available and there is some $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2902: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2482:
+		/* If we have prefetchable memory space available and there is some 
+		   left at the end, return the unused portion */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2902: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2482:
+		   left at the end, return the unused portion */

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2922: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2498:
+			p_mem_node = do_bridge_resource_split(&(temp_resources.p_mem_head), 0x100000L);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around temp_resources.p_mem_head
#2922: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2498:
+			p_mem_node = do_bridge_resource_split(&(temp_resources.p_mem_head), 0x100000L);

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2928: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2502:
+				/* First use the temporary node to store information for the board */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2977: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2535:
+		/* We should be configuring an IRQ and the bridge's base address
+		   registers if it needs them.  Although we have never seen such

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2978: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2536:
+		   a device */

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#2982: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2540:
+		info("PCI Bridge Hot-Added s:b:d:f(%02x:%02x:%02x:%02x)\n", ctrl->seg, func->bus, func->device, func->function);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#3051: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2556:
+			dbg("Bar[%x]=0x%x on bus:dev:func(0x%x:%x:%x)\n", cloop, temp_register, func->bus, func->device, func->function);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3070: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2570:
+				io_node = get_io_resource(&(resources->io_head),(ulong)base);
 				                                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->io_head
#3070: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2570:
+				io_node = get_io_resource(&(resources->io_head),(ulong)base);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3074: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2574:
+					dbg("Got IO base=0x%x(length=0x%x)\n", io_node->base, io_node->length);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#3109: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2599:
+					dbg("NEED 32 %s bar=0x%x(length=0x%x)\n", res_type_str, temp_register, base);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3111: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2601:
+					if (prefetchable && resources->p_mem_head)
[...]
+					else {
[...]

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#3112: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2602:
+						mem_node=get_resource(&(resources->p_mem_head), (ulong)base);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3112: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2602:
+						mem_node=get_resource(&(resources->p_mem_head), (ulong)base);
 						        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->p_mem_head
#3112: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2602:
+						mem_node=get_resource(&(resources->p_mem_head), (ulong)base);

CHECK:BRACES: Unbalanced braces around else statement
#3113: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2603:
+					else {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#3114: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2604:
+						if (prefetchable)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#3116: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2606:
+						mem_node=get_resource(&(resources->mem_head), (ulong)base);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3116: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2606:
+						mem_node=get_resource(&(resources->mem_head), (ulong)base);
 						        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->mem_head
#3116: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2606:
+						mem_node=get_resource(&(resources->mem_head), (ulong)base);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3123: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2611:
+^I^I^I^I^I^Ibase = (u32)mem_node->base; $

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#3126: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2614:
+						dbg("Got 32 %s base=0x%x(length=0x%x)\n", res_type_str, mem_node->base, mem_node->length);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#3128: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2616:
+						err("Got NO 32 %s resource(length=0x%x)\n", res_type_str, base);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#3133: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2621:
+					rc = pci_bus_read_config_dword(pci_bus, devfn, cloop+4, &temp_register2);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3133: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2621:
+					rc = pci_bus_read_config_dword(pci_bus, devfn, cloop+4, &temp_register2);
 					                                                    ^

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#3135: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2623:
+					dbg("NEED 64 %s bar=0x%x:%x(length=0x%x)\n", res_type_str, temp_register2, temp_register, base);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3137: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2625:
+					if (prefetchable && resources->p_mem_head)
[...]
+					else {
[...]

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3138: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2626:
+						mem_node = get_resource(&(resources->p_mem_head), (ulong)base);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->p_mem_head
#3138: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2626:
+						mem_node = get_resource(&(resources->p_mem_head), (ulong)base);

CHECK:BRACES: Unbalanced braces around else statement
#3139: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2627:
+					else {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#3140: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2628:
+						if (prefetchable)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#3142: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2630:
+						mem_node = get_resource(&(resources->mem_head), (ulong)base);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around resources->mem_head
#3142: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2630:
+						mem_node = get_resource(&(resources->mem_head), (ulong)base);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3150: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2635:
+^I^I^I^I^I^Ibase64 = mem_node->base; $

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#3153: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2638:
+						dbg("Got 64 %s base=0x%x:%x(length=%x)\n", res_type_str, (u32)(base64 >> 32), (u32)base64, mem_node->length);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#3155: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2640:
+						err("Got NO 64 %s resource(length=0x%x)\n", res_type_str, base);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#3204: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2658:
+					dbg("%s: high dword of base64(0x%x) set to 0\n", __FUNCTION__, (u32)base64);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#3204: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2658:
+					dbg("%s: high dword of base64(0x%x) set to 0\n", __FUNCTION__, (u32)base64);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3224: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2672:
+		rc = pci_bus_write_config_word (pci_bus, devfn, PCI_ROM_ADDRESS, temp_word);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#3259: FILE: drivers/pci/hotplug/cpqphp_ctrl.c:2681:
+		info("PCI function Hot-Added s:b:d:f(%02x:%02x:%02x:%02x)\n", ctrl->seg, func->bus, func->device, func->function);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354983.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 55 errors, 91 warnings, 54 checks, 3180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354983.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
