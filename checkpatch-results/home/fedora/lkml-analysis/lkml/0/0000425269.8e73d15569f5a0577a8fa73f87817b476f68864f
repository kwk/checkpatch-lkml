WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

ERROR:SPACING: space required after that ',' (ctx:VxV)
#54: FILE: ksyms.c:544:
+extern void register_streams_calls(int (*putpmsg) (int,void *,void *,int,int),
                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:OxV)
#54: FILE: ksyms.c:544:
+extern void register_streams_calls(int (*putpmsg) (int,void *,void *,int,int),
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#54: FILE: ksyms.c:544:
+extern void register_streams_calls(int (*putpmsg) (int,void *,void *,int,int),
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#54: FILE: ksyms.c:544:
+extern void register_streams_calls(int (*putpmsg) (int,void *,void *,int,int),
                                                                         ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#54: FILE: ksyms.c:544:
+extern void register_streams_calls(int (*putpmsg) (int,void *,void *,int,int),

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#55: FILE: ksyms.c:545:
+extern void register_streams_calls(int (*putpmsg) (int,void *,void *,int,int),
+			    int (*getpmsg) (int,void *,void *,int,int));

WARNING:SPACING: Unnecessary space before function pointer arguments
#55: FILE: ksyms.c:545:
+			    int (*getpmsg) (int,void *,void *,int,int));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#55: FILE: ksyms.c:545:
+			    int (*getpmsg) (int,void *,void *,int,int));
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#55: FILE: ksyms.c:545:
+			    int (*getpmsg) (int,void *,void *,int,int));
 			                              ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#55: FILE: ksyms.c:545:
+			    int (*getpmsg) (int,void *,void *,int,int));
 			                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#55: FILE: ksyms.c:545:
+			    int (*getpmsg) (int,void *,void *,int,int));
 			                                         ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#56: FILE: ksyms.c:546:
+extern void unregister_streams_calls(void);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#57: FILE: ksyms.c:547:
+EXPORT_SYMBOL(register_streams_calls);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#58: FILE: ksyms.c:548:
+EXPORT_SYMBOL(unregister_streams_calls);

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#68: FILE: sys.c:171:
+static int (*do_putpmsg) (int, void *, void *, int, int) = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACING: Unnecessary space before function pointer arguments
#68: FILE: sys.c:171:
+static int (*do_putpmsg) (int, void *, void *, int, int) = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#69: FILE: sys.c:172:
+static int (*do_getpmsg) (int, void *, void *, int, int) = NULL;

WARNING:SPACING: Unnecessary space before function pointer arguments
#69: FILE: sys.c:172:
+static int (*do_getpmsg) (int, void *, void *, int, int) = NULL;

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'long'
#73: FILE: sys.c:176:
+long asmlinkage sys_putpmsg(int fd, void *ctlptr, void *datptr, int band, int flags)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#75: FILE: sys.c:178:
+	int ret = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LINE_SPACING: Missing a blank line after declarations
#76: FILE: sys.c:179:
+	int ret = -ENOSYS;
+	read_lock(&streams_call_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'long'
#83: FILE: sys.c:186:
+long asmlinkage sys_getpmsg(int fd, void *ctlptr, void *datptr, int band, int flags)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#85: FILE: sys.c:188:
+	int ret = -ENOSYS;

WARNING:LINE_SPACING: Missing a blank line after declarations
#86: FILE: sys.c:189:
+	int ret = -ENOSYS;
+	read_lock(&streams_call_lock);

WARNING:SPACING: Unnecessary space before function pointer arguments
#94: FILE: sys.c:197:
+			    int (*getpmsg) (int, void *, void *, int, int))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425269.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 17 warnings, 1 checks, 66 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425269.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
