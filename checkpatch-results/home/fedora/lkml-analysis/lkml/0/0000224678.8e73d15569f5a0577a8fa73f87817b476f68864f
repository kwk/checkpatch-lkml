WARNING:TYPO_SPELLING: 'archetecture' may be misspelled - perhaps 'architecture'?
#44: 
The patch does not function without minimal archetecture specific hooks
                                            ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#60: 
--- a/drivers/Makefile	2004-12-07 16:47:19 -08:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/timesource/jiffies.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#77: FILE: drivers/timesource/jiffies.c:2:
+ * linux/drivers/timesource/jiffies.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'accuratly' may be misspelled - perhaps 'accurately'?
#94: FILE: drivers/timesource/jiffies.c:19:
+ * interrupt hardware to accuratly tick at the
                          ^^^^^^^^^

WARNING:TYPO_SPELLING: 'reccomended' may be misspelled - perhaps 'recommended'?
#95: FILE: drivers/timesource/jiffies.c:20:
+ * requested HZ value. It is also not reccomended
                                       ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#111: FILE: drivers/timesource/jiffies.c:36:
+	.mult = NSEC_PER_SEC/HZ,
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: include/linux/ntp.h:1:
+/*	linux/include/linux/ntp.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#125: FILE: include/linux/ntp.h:1:
+/*	linux/include/linux/ntp.h

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#141: FILE: include/linux/ntp.h:17:
+int ntp_adjtimex(struct timex*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timex*' should also have an identifier name
#141: FILE: include/linux/ntp.h:17:
+int ntp_adjtimex(struct timex*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#165: FILE: include/linux/timeofday.h:1:
+/*	linux/include/linux/timeofday.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#165: FILE: include/linux/timeofday.h:1:
+/*	linux/include/linux/timeofday.h

CHECK:LINE_SPACING: Please don't use multiple blank lines
#181: FILE: include/linux/timeofday.h:17:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: include/linux/timeofday.h:25:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#194: FILE: include/linux/timeofday.h:30:
+	struct timeval tv;
+	tv.tv_sec = div_long_long_rem(ns, NSEC_PER_SEC, &tv.tv_usec);

WARNING:LINE_SPACING: Missing a blank line after declarations
#202: FILE: include/linux/timeofday.h:38:
+	struct timespec ts;
+	ts.tv_sec = div_long_long_rem(ns, NSEC_PER_SEC, &ts.tv_nsec);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#206: FILE: include/linux/timeofday.h:42:
+static inline u64 timespec2ns(struct timespec* ts)

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: include/linux/timeofday.h:45:
+	nsec_t ret;
+	ret = ((nsec_t)ts->tv_sec) * NSEC_PER_SEC;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#214: FILE: include/linux/timeofday.h:50:
+static inline nsec_t timeval2ns(struct timeval* tv)

WARNING:LINE_SPACING: Missing a blank line after declarations
#217: FILE: include/linux/timeofday.h:53:
+	nsec_t ret;
+	ret = ((nsec_t)tv->tv_sec) * NSEC_PER_SEC;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#218: FILE: include/linux/timeofday.h:54:
+	ret += tv->tv_usec*NSEC_PER_USEC;
 	                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#230: FILE: include/linux/timesource.h:1:
+/*	linux/include/linux/timesource.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#230: FILE: include/linux/timesource.h:1:
+/*	linux/include/linux/timesource.h

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: include/linux/timesource.h:25:
+ * ^I^I^I^Isubtraction of non 64 bit counters$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: include/linux/timesource.h:27:
+ * shift: ^I^Icycle to nanosecond divisor (power of two)$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#259: FILE: include/linux/timesource.h:30:
+	char* name;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#267: FILE: include/linux/timesource.h:38:
+	void* ptr;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: include/linux/timesource.h:44:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#277: FILE: include/linux/timesource.h:48:
+static inline cycle_t read_timesource(struct timesource_t* ts)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#279: FILE: include/linux/timesource.h:50:
+	u64* tmp64;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#280: FILE: include/linux/timesource.h:51:
+	u32* tmp32;

WARNING:LINE_SPACING: Missing a blank line after declarations
#281: FILE: include/linux/timesource.h:52:
+	u32* tmp32;
+	switch (ts->type) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#283: FILE: include/linux/timesource.h:54:
+		tmp32 = (u32*)ts->ptr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#286: FILE: include/linux/timesource.h:57:
+		tmp64 = (u64*)ts->ptr;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#300: FILE: include/linux/timesource.h:71:
+static inline nsec_t cyc2ns(struct timesource_t* ts, cycle_t cycles, cycle_t* rem)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#300: FILE: include/linux/timesource.h:71:
+static inline nsec_t cyc2ns(struct timesource_t* ts, cycle_t cycles, cycle_t* rem)

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: include/linux/timesource.h:74:
+	u64 ret;
+	ret = (u64)cycles;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#312: FILE: include/linux/timesource.h:83:
+void register_timesource(struct timesource_t*);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#313: FILE: include/linux/timesource.h:84:
+struct timesource_t* get_next_timesource(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#350: FILE: kernel/ntp.c:1:
+/********************************************************************

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#351: FILE: kernel/ntp.c:2:
+* linux/kernel/ntp.c

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#351: FILE: kernel/ntp.c:2:
+/********************************************************************
+* linux/kernel/ntp.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#415: FILE: kernel/ntp.c:66:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#433: FILE: kernel/ntp.c:84:
+static long ntp_tick	= USEC_PER_SEC/USER_HZ;	/* tick length */
                     	              ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: kernel/ntp.c:88:
+static long tick_adj; ^I^I/* tx->tick adjustment (ppm) */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#440: FILE: kernel/ntp.c:91:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: kernel/ntp.c:100:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))
                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#449: FILE: kernel/ntp.c:100:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#449: FILE: kernel/ntp.c:100:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#449: FILE: kernel/ntp.c:100:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#449: FILE: kernel/ntp.c:100:
+#define shiftR(x,s) (x < 0) ? (-((-x) >> (s))) : ((x) >> (s))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#491: FILE: kernel/ntp.c:142:
+		freq_ppm = shiftR(ntp_freq,SHIFT_USEC);
 		                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: kernel/ntp.c:148:
+
+

WARNING:TYPO_SPELLING: 'calcluate' may be misspelled - perhaps 'calculate'?
#500: FILE: kernel/ntp.c:151:
+		/* calcluate total ppm */
 		   ^^^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#510: FILE: kernel/ntp.c:161:
+		if(ppm < 0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#517: FILE: kernel/ntp.c:168:
+		s64 v1 = offset_len*(tick_ppm + freq_ppm + offset_ppm + ss_ppm);
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#518: FILE: kernel/ntp.c:169:
+		s64 v2 = (s64)(raw - offset_len)*(tick_ppm + freq_ppm+ offset_ppm);
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#518: FILE: kernel/ntp.c:169:
+		s64 v2 = (s64)(raw - offset_len)*(tick_ppm + freq_ppm+ offset_ppm);
 		                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#520: FILE: kernel/ntp.c:171:
+		s64 tmp = v1+v2;
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#526: FILE: kernel/ntp.c:177:
+		do_div(tmp2,MILLION);
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#529: FILE: kernel/ntp.c:180:
+		if(tmp < 0)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#544: FILE: kernel/ntp.c:195:
+	static u64 interval_sum=0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#544: FILE: kernel/ntp.c:195:
+	static u64 interval_sum=0;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxO)
#552: FILE: kernel/ntp.c:203:
+	ss_offset_len =- interval;
 	              ^

ERROR:SPACING: space required before that '-' (ctx:OxW)
#552: FILE: kernel/ntp.c:203:
+	ss_offset_len =- interval;
 	               ^

ERROR:SPACING: space prohibited after that '-' (ctx:OxW)
#552: FILE: kernel/ntp.c:203:
+	ss_offset_len =- interval;
 	               ^

ERROR:SPACING: space required before the open parenthesis '('
#553: FILE: kernel/ntp.c:204:
+	if(ss_offset_len < 0) /* make sure it doesn't go negative */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#554: FILE: kernel/ntp.c:205:
+		ss_offset_len=0;
 		             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#573: FILE: kernel/ntp.c:224:
+		if (!(ntp_status & STA_FLL))
+		    tmp = shiftR(tmp, SHIFT_KG + ntp_constant);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#577: FILE: kernel/ntp.c:228:
+		if (tmp > (MAXPHASE / MINSEC) << SHIFT_UPDATE)
+		    tmp = (MAXPHASE / MINSEC) << SHIFT_UPDATE;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#579: FILE: kernel/ntp.c:230:
+		if (tmp < -(MAXPHASE / MINSEC) << SHIFT_UPDATE)
+		    tmp = -(MAXPHASE / MINSEC) << SHIFT_UPDATE;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#592: FILE: kernel/ntp.c:243:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#594: FILE: kernel/ntp.c:245:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: kernel/ntp.c:265:
+    if ((ntp_status & STA_FREQHOLD) || (ntp_reftime == 0))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 16)
#614: FILE: kernel/ntp.c:265:
+    if ((ntp_status & STA_FREQHOLD) || (ntp_reftime == 0))
+		ntp_reftime = tv.tv_sec;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ntp_reftime == 0'
#614: FILE: kernel/ntp.c:265:
+    if ((ntp_status & STA_FREQHOLD) || (ntp_reftime == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'interval >= MINSEC'
#621: FILE: kernel/ntp.c:272:
+	if ((ntp_status & STA_FLL) && (interval >= MINSEC)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#623: FILE: kernel/ntp.c:274:
+		long damping;
+		tmp = (offset / interval); /* ppm (usec/sec)*/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#631: FILE: kernel/ntp.c:282:
+		ntp_freq += shiftR(tmp,damping);
 		                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#633: FILE: kernel/ntp.c:284:
+		printk("ntp->freq change: %ld\n",shiftR(tmp,damping));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: kernel/ntp.c:284:
+		printk("ntp->freq change: %ld\n",shiftR(tmp,damping));
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: kernel/ntp.c:284:
+		printk("ntp->freq change: %ld\n",shiftR(tmp,damping));
 		                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#637: FILE: kernel/ntp.c:288:
+		long damping;
+		tmp = offset * interval; /* ppm XXX - not quite*/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#643: FILE: kernel/ntp.c:294:
+		ntp_freq += shiftR(tmp,damping);
 		                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: kernel/ntp.c:296:
+		printk("ntp->freq change: %ld\n", shiftR(tmp,damping));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#645: FILE: kernel/ntp.c:296:
+		printk("ntp->freq change: %ld\n", shiftR(tmp,damping));
 		                                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#648: FILE: kernel/ntp.c:299:
+		printk("interval out of bounds: %ld\n", interval);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#664: FILE: kernel/ntp.c:315:
+int ntp_adjtimex(struct timex* tx)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#676: FILE: kernel/ntp.c:327:
+	if ((tx->modes & ADJ_FREQUENCY)
+			&& (abs(tx->freq) > MAXFREQ))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#681: FILE: kernel/ntp.c:332:
+	if ((tx->modes & ADJ_MAXERROR)
+			&& (tx->maxerror < 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#682: FILE: kernel/ntp.c:333:
+			&& (tx->maxerror < 0
+				|| tx->maxerror >= NTP_PHASE_LIMIT))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#687: FILE: kernel/ntp.c:338:
+	if ((tx->modes & ADJ_ESTERROR)
+			&& (tx->esterror < 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#688: FILE: kernel/ntp.c:339:
+			&& (tx->esterror < 0
+				|| tx->esterror >= NTP_PHASE_LIMIT))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tx->constant < 0'
#692: FILE: kernel/ntp.c:343:
+	if ((tx->modes & ADJ_TIMECONST)
+			&& (tx->constant < 0))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#693: FILE: kernel/ntp.c:344:
+	if ((tx->modes & ADJ_TIMECONST)
+			&& (tx->constant < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tx->modes != ADJ_OFFSET_SINGLESHOT'
#697: FILE: kernel/ntp.c:348:
+	if (((tx->modes & ADJ_OFFSET_SINGLESHOT) == ADJ_OFFSET_SINGLESHOT)
+			&& (tx->modes != ADJ_OFFSET_SINGLESHOT))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#698: FILE: kernel/ntp.c:349:
+	if (((tx->modes & ADJ_OFFSET_SINGLESHOT) == ADJ_OFFSET_SINGLESHOT)
+			&& (tx->modes != ADJ_OFFSET_SINGLESHOT))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tx->modes != ADJ_OFFSET_SINGLESHOT'
#702: FILE: kernel/ntp.c:353:
+	if ((tx->modes != ADJ_OFFSET_SINGLESHOT)
+			&& (tx->modes & ADJ_OFFSET)
+			&& (abs(tx->offset)>= MAXPHASE))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#703: FILE: kernel/ntp.c:354:
+	if ((tx->modes != ADJ_OFFSET_SINGLESHOT)
+			&& (tx->modes & ADJ_OFFSET)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#704: FILE: kernel/ntp.c:355:
+			&& (tx->modes & ADJ_OFFSET)
+			&& (abs(tx->offset)>= MAXPHASE))

ERROR:SPACING: spaces required around that '>=' (ctx:VxW)
#704: FILE: kernel/ntp.c:355:
+			&& (abs(tx->offset)>= MAXPHASE))
 			                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#709: FILE: kernel/ntp.c:360:
+	if ((tx->modes & ADJ_TICK)
+			&& ((tx->tick < 900000/USER_HZ)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#709: FILE: kernel/ntp.c:360:
+			&& ((tx->tick < 900000/USER_HZ)
 			                      ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#710: FILE: kernel/ntp.c:361:
+			&& ((tx->tick < 900000/USER_HZ)
+				||(tx->tick > 11000000/USER_HZ)))

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#710: FILE: kernel/ntp.c:361:
+				||(tx->tick > 11000000/USER_HZ)))
 				^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#710: FILE: kernel/ntp.c:361:
+				||(tx->tick > 11000000/USER_HZ)))
 				                      ^

ERROR:SPACING: space required before the open parenthesis '('
#714: FILE: kernel/ntp.c:365:
+	if(tx->modes) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#715: FILE: kernel/ntp.c:366:
+		printk("adjtimex: tx->offset: %ld    tx->freq: %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#716: FILE: kernel/ntp.c:367:
+		printk("adjtimex: tx->offset: %ld    tx->freq: %ld\n",
+				tx->offset, tx->freq);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#761: FILE: kernel/ntp.c:412:
+			ss_offset_len *= NSEC_PER_SEC * (NSEC_PER_USEC/MAX_SINGLESHOT_ADJ);
 			                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#770: FILE: kernel/ntp.c:421:
+		tick_adj = (USEC_PER_SEC/USER_HZ) - tx->tick;
 		                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#777: FILE: kernel/ntp.c:428:
+	if ((ntp_status & (STA_UNSYNC|STA_CLOCKERR)) != 0 )
 	                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#777: FILE: kernel/ntp.c:428:
+	if ((ntp_status & (STA_UNSYNC|STA_CLOCKERR)) != 0 )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#810: FILE: kernel/ntp.c:461:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#827: FILE: kernel/ntp.c:478:
+	static time_t leaptime = 0;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#836: FILE: kernel/ntp.c:487:
+		}
+		else if (ntp_status & STA_DEL) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#847: FILE: kernel/ntp.c:498:
+			printk(KERN_NOTICE "Clock: inserting leap second 23:59:60 UTC\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#857: FILE: kernel/ntp.c:508:
+			printk(KERN_NOTICE "Clock: deleting leap second 23:59:59 UTC\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#888: FILE: kernel/ntp.c:539:
+	ss_offset_len=0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#889: FILE: kernel/ntp.c:540:
+	singleshot_adj=0;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#890: FILE: kernel/ntp.c:541:
+	tick_adj=0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#891: FILE: kernel/ntp.c:542:
+	offset_adj =0;
 	           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#935: FILE: kernel/timeofday.c:1:
+/*********************************************************************

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#936: FILE: kernel/timeofday.c:2:
+* linux/kernel/timeofday.c

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#936: FILE: kernel/timeofday.c:2:
+/*********************************************************************
+* linux/kernel/timeofday.c

CHECK:LINE_SPACING: Please don't use multiple blank lines
#973: FILE: kernel/timeofday.c:39:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#993: FILE: kernel/timeofday.c:59:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#997: FILE: kernel/timeofday.c:63:
+extern unsigned long get_cmos_time(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#998: FILE: kernel/timeofday.c:64:
+extern void sync_persistant_clock(struct timespec ts);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1009: FILE: kernel/timeofday.c:75:
+	unsigned long seq;
+	do {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1028: FILE: kernel/timeofday.c:94:
+	unsigned long seq;
+	do {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1039: FILE: kernel/timeofday.c:105:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1057: FILE: kernel/timeofday.c:123:
+	ns_offset = cyc2ns(timesource, delta,0);
 	                                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1068: FILE: kernel/timeofday.c:134:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1089: FILE: kernel/timeofday.c:155:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1108: FILE: kernel/timeofday.c:174:
+	*tv = ns2timeval(wall+sys);
 	                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1111: FILE: kernel/timeofday.c:177:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1145: FILE: kernel/timeofday.c:211:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1156: FILE: kernel/timeofday.c:222:
+	struct timesource_t* next;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1174: FILE: kernel/timeofday.c:240:
+	static int dbg=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1174: FILE: kernel/timeofday.c:240:
+	static int dbg=0;
 	              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1175: FILE: kernel/timeofday.c:241:
+	static int dbg=0;
+	if(!(dbg++%TIME_DBG_FREQ)){

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#1175: FILE: kernel/timeofday.c:241:
+	if(!(dbg++%TIME_DBG_FREQ)){
 	          ^

ERROR:SPACING: space required before the open brace '{'
#1175: FILE: kernel/timeofday.c:241:
+	if(!(dbg++%TIME_DBG_FREQ)){

ERROR:SPACING: space required before the open parenthesis '('
#1175: FILE: kernel/timeofday.c:241:
+	if(!(dbg++%TIME_DBG_FREQ)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1176: FILE: kernel/timeofday.c:242:
+		printk("now: %lluc - then: %lluc = delta: %lluc -> %llu ns + %llu cyc (ntp: %lluc)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1177: FILE: kernel/timeofday.c:243:
+		printk("now: %lluc - then: %lluc = delta: %lluc -> %llu ns + %llu cyc (ntp: %lluc)\n",
+			now, offset_base, delta, ns, remainder, ntp_ns);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1194: FILE: kernel/timeofday.c:260:
+	leapsecond = ntp_leapsecond(ns2timespec(system_time+wall_time_offset));
 	                                                   ^

WARNING:TYPO_SPELLING: 'persistant' may be misspelled - perhaps 'persistent'?
#1200: FILE: kernel/timeofday.c:266:
+	/* sync the persistant clock */
 	            ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1211: FILE: kernel/timeofday.c:277:
+		printk(KERN_INFO "Time: %s timesource has been installed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1212: FILE: kernel/timeofday.c:278:
+		printk(KERN_INFO "Time: %s timesource has been installed\n",
+					timesource->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1215: FILE: kernel/timeofday.c:281:
+
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#1247: FILE: kernel/timeofday.c:313:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1273: FILE: kernel/timesource.c:1:
+/*********************************************************************

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1274: FILE: kernel/timesource.c:2:
+* linux/kernel/timesource.c

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1274: FILE: kernel/timesource.c:2:
+/*********************************************************************
+* linux/kernel/timesource.c

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1310: FILE: kernel/timesource.c:38:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1314: FILE: kernel/timesource.c:42:
+void register_timesource(struct timesource_t* t)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1321: FILE: kernel/timesource.c:49:
+	if (next_timesource) {
[...]
+	} else if(t->priority > curr_timesource->priority)
[...]

ERROR:SPACING: space required before the open parenthesis '('
#1324: FILE: kernel/timesource.c:52:
+	} else if(t->priority > curr_timesource->priority)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1333: FILE: kernel/timesource.c:61:
+struct timesource_t* get_next_timesource(void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 53 errors, 53 warnings, 56 checks, 1225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
