WARNING:LEADING_SPACE: please, no spaces at the start of a line
#37: FILE: namei.c:2170:
+       retval = ext3_delete_entry(handle, old_dir, old_de, old_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#38: FILE: namei.c:2171:
+       if (retval == -ENOENT) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#38: FILE: namei.c:2171:
+       if (retval == -ENOENT) {
[...]
+               struct buffer_head * old_bh2;

ERROR:CODE_INDENT: code indent should use tabs where possible
#39: FILE: namei.c:2172:
+               /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#40: FILE: namei.c:2173:
+                * old_de can be moved during ext3_add_entry.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#41: FILE: namei.c:2174:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#42: FILE: namei.c:2175:
+               struct buffer_head * old_bh2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#42: FILE: namei.c:2175:
+               struct buffer_head * old_bh2;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#42: FILE: namei.c:2175:
+               struct buffer_head * old_bh2;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#43: FILE: namei.c:2176:
+               struct ext3_dir_entry_2 * old_de2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: namei.c:2176:
+               struct ext3_dir_entry_2 * old_de2;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#43: FILE: namei.c:2176:
+               struct ext3_dir_entry_2 * old_de2;

ERROR:CODE_INDENT: code indent should use tabs where possible
#44: FILE: namei.c:2177:
+               old_bh2 = ext3_find_entry (old_dentry, &old_de2);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#44: FILE: namei.c:2177:
+               struct ext3_dir_entry_2 * old_de2;
+               old_bh2 = ext3_find_entry (old_dentry, &old_de2);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: namei.c:2177:
+               old_bh2 = ext3_find_entry (old_dentry, &old_de2);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#44: FILE: namei.c:2177:
+               old_bh2 = ext3_find_entry (old_dentry, &old_de2);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#45: FILE: namei.c:2178:
+               if (old_bh2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#45: FILE: namei.c:2178:
+               if (old_bh2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#45: FILE: namei.c:2178:
+               if (old_bh2) {
+                       retval = ext3_delete_entry(handle, old_dir, old_de2,

ERROR:CODE_INDENT: code indent should use tabs where possible
#46: FILE: namei.c:2179:
+                       retval = ext3_delete_entry(handle, old_dir, old_de2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: namei.c:2179:
+                       retval = ext3_delete_entry(handle, old_dir, old_de2,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#47: FILE: namei.c:2180:
+                                                  old_bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#47: FILE: namei.c:2180:
+                                                  old_bh2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#48: FILE: namei.c:2181:
+                       brelse(old_bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: namei.c:2181:
+                       brelse(old_bh2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#49: FILE: namei.c:2182:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: namei.c:2182:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: namei.c:2183:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: namei.c:2184:
+       if (retval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#51: FILE: namei.c:2184:
+       if (retval) {
+               ext3_warning (old_dir->i_sb, "ext3_rename",

ERROR:CODE_INDENT: code indent should use tabs where possible
#52: FILE: namei.c:2185:
+               ext3_warning (old_dir->i_sb, "ext3_rename",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: namei.c:2185:
+               ext3_warning (old_dir->i_sb, "ext3_rename",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#52: FILE: namei.c:2185:
+               ext3_warning (old_dir->i_sb, "ext3_rename",

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: namei.c:2186:
+                             "Deleting old file (%lu), %d, error=%d",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: namei.c:2186:
+                             "Deleting old file (%lu), %d, error=%d",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: namei.c:2187:
+                             old_dir->i_ino, old_dir->i_nlink, retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: namei.c:2187:
+                             old_dir->i_ino, old_dir->i_nlink, retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: namei.c:2188:
+       }$

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Alexander Viro'
#64: 
To: Alexander Viro

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Christopher Li; Jeremy Fitzhardinge; Ext2 devel; Linux Kernel List'
#65: 
Cc: Christopher Li; Jeremy Fitzhardinge; Ext2 devel; Linux Kernel List

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415604.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 22 warnings, 0 checks, 27 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415604.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
