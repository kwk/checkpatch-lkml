WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
  - Disable the broken ST-RAM swap by default, but allow anyone to enable it

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#36: FILE: arch/m68k/atari/stram.c:193:
+static int max_swap_size = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#62: FILE: arch/m68k/atari/stram.c:970:
+	int ints[3];
+	get_options(str, ARRAY_SIZE(ints), ints);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#67: FILE: arch/m68k/atari/stram.c:975:
+			if (ints[0] == 2) {
+				max_swap_size = ((ints[2] < 0 ? 0 : ints[2]) * 1024) & PAGE_MASK;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#71: FILE: arch/m68k/atari/stram.c:979:
+		}
+		else if (ints[1] == 0) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#75: FILE: arch/m68k/atari/stram.c:983:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#75: FILE: arch/m68k/atari/stram.c:983:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#76: FILE: arch/m68k/atari/stram.c:984:
+			printk( KERN_WARNING "stram_swap=%d - invalid value\n", ints[1] );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#76: FILE: arch/m68k/atari/stram.c:984:
+			printk( KERN_WARNING "stram_swap=%d - invalid value\n", ints[1] );

ERROR:SPACING: space prohibited after that open parenthesis '('
#76: FILE: arch/m68k/atari/stram.c:984:
+			printk( KERN_WARNING "stram_swap=%d - invalid value\n", ints[1] );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#76: FILE: arch/m68k/atari/stram.c:984:
+			printk( KERN_WARNING "stram_swap=%d - invalid value\n", ints[1] );

WARNING:TABSTOP: Statements should start on a tabstop
#101: FILE: arch/m68k/kernel/setup.c:306:
+	    if (!strncmp( p, "stram_swap=", 11 )) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#101: FILE: arch/m68k/kernel/setup.c:306:
+	    if (!strncmp( p, "stram_swap=", 11 )) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#101: FILE: arch/m68k/kernel/setup.c:306:
+	    if (!strncmp( p, "stram_swap=", 11 )) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#102: FILE: arch/m68k/kernel/setup.c:307:
+		extern void stram_swap_setup( char * );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#102: FILE: arch/m68k/kernel/setup.c:307:
+		extern void stram_swap_setup( char * );

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#102: FILE: arch/m68k/kernel/setup.c:307:
+		extern void stram_swap_setup( char * );

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#102: FILE: arch/m68k/kernel/setup.c:307:
+		extern void stram_swap_setup( char * );

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#103: FILE: arch/m68k/kernel/setup.c:308:
+		stram_swap_setup( p+11 );
 		                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#103: FILE: arch/m68k/kernel/setup.c:308:
+		stram_swap_setup( p+11 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#103: FILE: arch/m68k/kernel/setup.c:308:
+		stram_swap_setup( p+11 );

WARNING:TABSTOP: Statements should start on a tabstop
#105: FILE: arch/m68k/kernel/setup.c:310:
+	    }

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000245011.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 9 warnings, 2 checks, 73 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000245011.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
