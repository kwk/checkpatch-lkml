CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#45: FILE: include/linux/suspend.h:47:
+extern int software_suspend(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#63: FILE: include/linux/suspend.h:58:
 }
+#define software_resume()		do { } while(0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#63: FILE: include/linux/suspend.h:58:
+#define software_resume()		do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#69: FILE: include/linux/suspend.h:64:
+extern int freeze_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: include/linux/suspend.h:65:
+extern void thaw_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/suspend.h:67:
+extern int pm_prepare_console(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: include/linux/suspend.h:68:
+extern void pm_restore_console(void);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#80: FILE: include/linux/suspend.h:75:
 }
+static inline int freeze_processes(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#84: FILE: include/linux/suspend.h:79:
+}
+static inline void thaw_processes(void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#86: FILE: include/linux/suspend.h:81:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#87: FILE: include/linux/suspend.h:82:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: kernel/power/swsusp.c:686:
+	int res;
+	if (!software_suspend_enabled)

CHECK:BRACES: Unbalanced braces around else statement
#125: FILE: kernel/power/swsusp.c:724:
+	} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000310077.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 1 warnings, 11 checks, 125 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000310077.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
