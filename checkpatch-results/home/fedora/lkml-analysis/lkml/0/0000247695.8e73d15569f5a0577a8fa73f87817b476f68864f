WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
I just got a very uncomfortable surprise when found my box unlocked thanks =

WARNING:TYPO_SPELLING: 'complet' may be misspelled - perhaps 'complete'?
#45: 
After playing around a bit, I made the patch below, but it's almost complet=
                                                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#71: FILE: CREDITS:1211:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: include/linux/sysctl.h:167:
+ VM_OOM_PARDON=3D26,       /* don't oom-kill these processes */$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#106: FILE: include/linux/sysctl.h:167:
+ VM_OOM_PARDON=3D26,       /* don't oom-kill these processes */
               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: kernel/sysctl.c:798:
+        {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: kernel/sysctl.c:798:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: kernel/sysctl.c:799:
+                .ctl_name       =3D VM_OOM_PARDON,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/sysctl.c:799:
+                .ctl_name       =3D VM_OOM_PARDON,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#118: FILE: kernel/sysctl.c:799:
+                .ctl_name       =3D VM_OOM_PARDON,
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: kernel/sysctl.c:800:
+                .procname       =3D "oom_pardon",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: kernel/sysctl.c:800:
+                .procname       =3D "oom_pardon",$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#119: FILE: kernel/sysctl.c:800:
+                .procname       =3D "oom_pardon",
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: kernel/sysctl.c:801:
+                .data           =3D &vm_oom_pardon,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: kernel/sysctl.c:801:
+                .data           =3D &vm_oom_pardon,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#120: FILE: kernel/sysctl.c:801:
+                .data           =3D &vm_oom_pardon,
                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#120: FILE: kernel/sysctl.c:801:
+                .data           =3D &vm_oom_pardon,
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: kernel/sysctl.c:802:
+                .maxlen         =3D sizeof(vm_oom_pardon),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: kernel/sysctl.c:802:
+                .maxlen         =3D sizeof(vm_oom_pardon),$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#121: FILE: kernel/sysctl.c:802:
+                .maxlen         =3D sizeof(vm_oom_pardon),
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: kernel/sysctl.c:803:
+                .mode           =3D 0644,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: kernel/sysctl.c:803:
+                .mode           =3D 0644,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#122: FILE: kernel/sysctl.c:803:
+                .mode           =3D 0644,
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: kernel/sysctl.c:804:
+                .proc_handler   =3D &proc_doutsstring,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: kernel/sysctl.c:804:
+                .proc_handler   =3D &proc_doutsstring,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#123: FILE: kernel/sysctl.c:804:
+                .proc_handler   =3D &proc_doutsstring,
                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#123: FILE: kernel/sysctl.c:804:
+                .proc_handler   =3D &proc_doutsstring,
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: kernel/sysctl.c:805:
+                .strategy       =3D &sysctl_string,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: kernel/sysctl.c:805:
+                .strategy       =3D &sysctl_string,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#124: FILE: kernel/sysctl.c:805:
+                .strategy       =3D &sysctl_string,
                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#124: FILE: kernel/sysctl.c:805:
+                .strategy       =3D &sysctl_string,
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: kernel/sysctl.c:806:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: kernel/sysctl.c:806:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: mm/oom_kill.c:30:
+       static char buf[256];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: mm/oom_kill.c:31:
+       const struct qstr *exe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: mm/oom_kill.c:32:
+       const char *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: mm/oom_kill.c:33:
+       int len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: mm/oom_kill.c:35:
+       exe =3D &task->proc_dentry->d_name;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#155: FILE: mm/oom_kill.c:35:
+       exe =3D &task->proc_dentry->d_name;
            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#155: FILE: mm/oom_kill.c:35:
+       exe =3D &task->proc_dentry->d_name;
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: mm/oom_kill.c:36:
+       len =3D min((int)exe->len, (int)(sizeof(buf) - 2));$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#156: FILE: mm/oom_kill.c:36:
+       len =3D min((int)exe->len, (int)(sizeof(buf) - 2));
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: mm/oom_kill.c:38:
+       memcpy(buf, exe->name, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: mm/oom_kill.c:39:
+       buf[len] =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#159: FILE: mm/oom_kill.c:39:
+       buf[len] =3D 0;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: mm/oom_kill.c:40:
+       buf[len+1] =3D 0;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: mm/oom_kill.c:40:
+       buf[len+1] =3D 0;
               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#160: FILE: mm/oom_kill.c:40:
+       buf[len+1] =3D 0;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: mm/oom_kill.c:42:
+       if (strchr(buf, ' ')) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#162: FILE: mm/oom_kill.c:42:
+       if (strchr(buf, ' ')) {
+               return 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#162: FILE: mm/oom_kill.c:42:
+       if (strchr(buf, ' ')) {
+               return 0;
+       }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: mm/oom_kill.c:43:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: mm/oom_kill.c:43:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: mm/oom_kill.c:44:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: mm/oom_kill.c:46:
+       down_read(&uts_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: mm/oom_kill.c:47:
+       p =3D vm_oom_pardon;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#167: FILE: mm/oom_kill.c:47:
+       p =3D vm_oom_pardon;
          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: mm/oom_kill.c:48:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#168: FILE: mm/oom_kill.c:48:
+       do {
+               buf[len] =3D ' ';

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: mm/oom_kill.c:49:
+               buf[len] =3D ' ';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: mm/oom_kill.c:49:
+               buf[len] =3D ' ';$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#169: FILE: mm/oom_kill.c:49:
+               buf[len] =3D ' ';
                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: mm/oom_kill.c:50:
+               if (!strncmp(p, buf, len)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: mm/oom_kill.c:50:
+               if (!strncmp(p, buf, len)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#170: FILE: mm/oom_kill.c:50:
+               if (!strncmp(p, buf, len)) {
+                       return 1;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#170: FILE: mm/oom_kill.c:50:
+               if (!strncmp(p, buf, len)) {
+                       return 1;
+               }

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: mm/oom_kill.c:51:
+                       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: mm/oom_kill.c:51:
+                       return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: mm/oom_kill.c:52:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: mm/oom_kill.c:52:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: mm/oom_kill.c:54:
+               buf[len] =3D 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: mm/oom_kill.c:54:
+               buf[len] =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#174: FILE: mm/oom_kill.c:54:
+               buf[len] =3D 0;
                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: mm/oom_kill.c:55:
+               if (!strcmp(p, buf)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: mm/oom_kill.c:55:
+               if (!strcmp(p, buf)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#175: FILE: mm/oom_kill.c:55:
+               if (!strcmp(p, buf)) {
+                       return 1;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#175: FILE: mm/oom_kill.c:55:
+               if (!strcmp(p, buf)) {
+                       return 1;
+               }

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: mm/oom_kill.c:56:
+                       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: mm/oom_kill.c:56:
+                       return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: mm/oom_kill.c:57:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: mm/oom_kill.c:57:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: mm/oom_kill.c:58:
+               p =3D strchr(p, ' ');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: mm/oom_kill.c:58:
+               p =3D strchr(p, ' ');$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#178: FILE: mm/oom_kill.c:58:
+               p =3D strchr(p, ' ');
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: mm/oom_kill.c:59:
+       } while(p++);$

ERROR:SPACING: space required before the open parenthesis '('
#179: FILE: mm/oom_kill.c:59:
+       } while(p++);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: mm/oom_kill.c:60:
+       up_read(&uts_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: mm/oom_kill.c:62:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: mm/oom_kill.c:95:
+ if (pardon(p))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#194: FILE: mm/oom_kill.c:95:
+ if (pardon(p))
+  return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: mm/oom_kill.c:96:
+  return 0;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 49 warnings, 5 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
