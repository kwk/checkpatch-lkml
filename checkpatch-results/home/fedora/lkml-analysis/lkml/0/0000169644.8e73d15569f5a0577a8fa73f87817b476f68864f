WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
after some corrections here is a newer patch supporting the Infineon Trusted Platform

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#51: FILE: drivers/char/tpm/Kconfig:38:
+config TCG_INFINEON
+	tristate "Infineon Technologies SLD 9630 TPM Interface"
+	depends on TCG_TPM
+	---help---
+	  If you have a TPM security chip from Infineon Technologies
+	  say Yes and it will be accessible from within Linux.  To
+	  compile this driver as a module, choose M here; the module
+	  will be called tpm_infineon.
+	  Further information on this driver and the supported hardware
+	  can be found at http://www.prosec.rub.de/tpm
+	  Note: To get debugging output into the module, you have to enable
+	  CONFIG_DEBUG_KERNEL, CONFIG_DEBUG_INFO and CONFIG_PCI_DEBUG
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/char/tpm/tpm_infineon.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: drivers/char/tpm/tpm_infineon.c:10:
+ * Specifications at www.trustedcomputinggroup.org^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#108: FILE: drivers/char/tpm/tpm_infineon.c:30:
+	TPM_MAX_TRIES = 5000	/* gives number of max. msleep()-calls before
+				   throwing timeout */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#108: FILE: drivers/char/tpm/tpm_infineon.c:30:
+				   throwing timeout */

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#190: FILE: drivers/char/tpm/tpm_infineon.c:112:
+					break;
+				else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#196: FILE: drivers/char/tpm/tpm_infineon.c:118:
+	/* Note: The values which are currently in the FIFO of the TPM
+	   are thrown away since there is no usage for them. Usually,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#215: FILE: drivers/char/tpm/tpm_infineon.c:137:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#218: FILE: drivers/char/tpm/tpm_infineon.c:140:
+	int i;
+	for (i = 0; i < TPM_MAX_TRIES; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#220: FILE: drivers/char/tpm/tpm_infineon.c:142:
+		if (status & 1 << wait_for_bit)	/* check the status-register if wait_for_bit is set */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait', this function's name, in a string
#225: FILE: drivers/char/tpm/tpm_infineon.c:147:
+		dev_err(&chip->pci_dev->dev, "Timeout in wait(");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#242: FILE: drivers/char/tpm/tpm_infineon.c:164:
+/* Note: WTX means Waiting-Time-Extension. Whenever the TPM
+needs more calculation time, it sends a WTX-package, which has to

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: drivers/char/tpm/tpm_infineon.c:194:
+static int tpm_inf_recv(struct tpm_chip *chip, u8 * buf, size_t count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#278: FILE: drivers/char/tpm/tpm_infineon.c:200:
+      recv_begin:

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == 0x6D00'
#312: FILE: drivers/char/tpm/tpm_infineon.c:234:
+		if ((size == 0x6D00) && (buf[1] == 0x80)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf[1] == 0x80'
#312: FILE: drivers/char/tpm/tpm_infineon.c:234:
+		if ((size == 0x6D00) && (buf[1] == 0x80)) {

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#344: FILE: drivers/char/tpm/tpm_infineon.c:266:
+				"-> Negative acknowledgement - retransmit commando!\n");
 				             ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#350: FILE: drivers/char/tpm/tpm_infineon.c:272:
+static int tpm_inf_send(struct tpm_chip *chip, u8 * buf, size_t count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#411: FILE: drivers/char/tpm/tpm_infineon.c:333:
+}
+static void tpm_inf_cancel(struct tpm_chip *chip)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#414: FILE: drivers/char/tpm/tpm_infineon.c:336:
+	/* Nothing yet!
+	   This has something to do with the internal functions

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pubek' to 'pubek_show'
#417: FILE: drivers/char/tpm/tpm_infineon.c:339:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#419: FILE: drivers/char/tpm/tpm_infineon.c:341:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pcrs' to 'pcrs_show'
#420: FILE: drivers/char/tpm/tpm_infineon.c:342:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#420: FILE: drivers/char/tpm/tpm_infineon.c:342:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_caps' to 'caps_show'
#421: FILE: drivers/char/tpm/tpm_infineon.c:343:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#421: FILE: drivers/char/tpm/tpm_infineon.c:343:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUSR | S_IWGRP' used
#422: FILE: drivers/char/tpm/tpm_infineon.c:344:
+static DEVICE_ATTR(cancel, S_IWUSR | S_IWGRP, NULL, tpm_store_cancel);

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IWGRP' are not preferred. Consider using octal permissions '0220'.
#422: FILE: drivers/char/tpm/tpm_infineon.c:344:
+static DEVICE_ATTR(cancel, S_IWUSR | S_IWGRP, NULL, tpm_store_cancel);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#434: FILE: drivers/char/tpm/tpm_infineon.c:356:
+static struct file_operations inf_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#456: FILE: drivers/char/tpm/tpm_infineon.c:378:
+{
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#487: FILE: drivers/char/tpm/tpm_infineon.c:409:
+	if ((vendorid[1] == (TCPA_INFINEON_DEV_VEN_VALUE & 0xFF))
+	    && ((vendorid[0] << 8) ==

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#489: FILE: drivers/char/tpm/tpm_infineon.c:411:
+		(TCPA_INFINEON_DEV_VEN_VALUE & 0x00FF << 8))) {
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#509: FILE: drivers/char/tpm/tpm_infineon.c:431:
+			"Device activate register status : %x \n", status);

WARNING:SPLIT_STRING: quoted string split across lines
#517: FILE: drivers/char/tpm/tpm_infineon.c:439:
+		dev_info(&pci_dev->dev, "TPM found: "
+			 "io base 0x%x, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#518: FILE: drivers/char/tpm/tpm_infineon.c:440:
+			 "io base 0x%x, "
+			 "chip version %02x%02x, "

WARNING:SPLIT_STRING: quoted string split across lines
#519: FILE: drivers/char/tpm/tpm_infineon.c:441:
+			 "chip version %02x%02x, "
+			 "vendor id %x%x (Infineon), "

WARNING:SPLIT_STRING: quoted string split across lines
#520: FILE: drivers/char/tpm/tpm_infineon.c:442:
+			 "vendor id %x%x (Infineon), "
+			 "product id %02x%02x"

WARNING:SPLIT_STRING: quoted string split across lines
#521: FILE: drivers/char/tpm/tpm_infineon.c:443:
+			 "product id %02x%02x"
+			 "%s\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#526: FILE: drivers/char/tpm/tpm_infineon.c:448:
+			 productid[0], productid[1], ((productid[0] == 0)
+						      && (productid[1] ==

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#544: FILE: drivers/char/tpm/tpm_infineon.c:466:
+static struct pci_device_id tpm_pci_tbl[] __devinitdata = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169644.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 30 warnings, 8 checks, 528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169644.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
