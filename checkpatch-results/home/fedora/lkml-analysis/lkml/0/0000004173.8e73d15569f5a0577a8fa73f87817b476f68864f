CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#60: FILE: drivers/char/mxser_new.c:186:
+};
+static unsigned int mxvar_baud_table1[] = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#64: FILE: drivers/char/mxser_new.c:190:
+};
+#define BAUD_TABLE_NO ARRAY_SIZE(mxvar_baud_table)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#99: FILE: drivers/char/mxser_new.c:473:
+	for (i = 0; i < BAUD_TABLE_NO; i++)
+	       if (newspd == mxvar_baud_table[i])

WARNING:TABSTOP: Statements should start on a tabstop
#100: FILE: drivers/char/mxser_new.c:474:
+	       if (newspd == mxvar_baud_table[i])

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#100: FILE: drivers/char/mxser_new.c:474:
+	       if (newspd == mxvar_baud_table[i])
+		       break;

WARNING:TABSTOP: Statements should start on a tabstop
#101: FILE: drivers/char/mxser_new.c:475:
+		       break;

CHECK:BRACES: braces {} should be used on all arms of this statement
#139: FILE: drivers/char/mxser_new.c:512:
+	if (i == BAUD_TABLE_NO) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#149: FILE: drivers/char/mxser_new.c:522:
+	} else

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#246: FILE: drivers/char/mxser_new.c:1702:
+		if (i == BAUD_TABLE_NO) {
[...]
+		} else if (speed != 0)
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 21)
#258: FILE: drivers/char/mxser_new.c:1714:
+		if (copy_to_user(argp, &info->speed, sizeof(int)))
+		     return -EFAULT;

WARNING:TABSTOP: Statements should start on a tabstop
#259: FILE: drivers/char/mxser_new.c:1715:
+		     return -EFAULT;

CHECK:BRACES: Unbalanced braces around else statement
#291: FILE: drivers/char/mxser_new.c:2207:
+				} else

CHECK:CAMELCASE: Avoid CamelCase: <Value>
#321: FILE: drivers/char/mxser_new.h:217:
+#define SET_MOXA_MUST_ENUM_VALUE(baseio, Value) do {		\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'baseio' - possible side-effects?
#321: FILE: drivers/char/mxser_new.h:217:
+#define SET_MOXA_MUST_ENUM_VALUE(baseio, Value) do {		\
+	u8	__oldlcr, __efr;				\
+	__oldlcr = inb((baseio)+UART_LCR);			\
+	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
+	__efr &= ~MOXA_MUST_EFR_BANK_MASK;			\
+	__efr |= MOXA_MUST_EFR_BANK2;				\
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
+	outb((u8)(Value), (baseio)+MOXA_MUST_ENUM_REGISTER);	\
+	outb(__oldlcr, (baseio)+UART_LCR);			\
+} while (0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#323: FILE: drivers/char/mxser_new.h:219:
+	__oldlcr = inb((baseio)+UART_LCR);			\
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#324: FILE: drivers/char/mxser_new.h:220:
+	outb(MOXA_MUST_ENTER_ENCHANCE, (baseio)+UART_LCR);	\
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#325: FILE: drivers/char/mxser_new.h:221:
+	__efr = inb((baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#328: FILE: drivers/char/mxser_new.h:224:
+	outb(__efr, (baseio)+MOXA_MUST_EFR_REGISTER);		\
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#329: FILE: drivers/char/mxser_new.h:225:
+	outb((u8)(Value), (baseio)+MOXA_MUST_ENUM_REGISTER);	\
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#330: FILE: drivers/char/mxser_new.h:226:
+	outb(__oldlcr, (baseio)+UART_LCR);			\
 	                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000004173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 13 checks, 268 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000004173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
