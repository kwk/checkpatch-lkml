ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Greg KH'
#67: 
To: Greg KH

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'linux-kernel@vger.kernel.org; linux-pci@atrey.karlin.mff.cuni.cz;', should be: 'linux-kernel@vger.kernel.org; (linux-pci@atrey.karlin.mff.cuni.cz;)'
#68: 
Cc: linux-kernel@vger.kernel.org; linux-pci@atrey.karlin.mff.cuni.cz;

WARNING:REPEATED_WORD: Possible repeated word: 'just'
#91: 
the complete mmconfig aperture once and just just reference it directly.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#100: 
#################### Patch Start #############################

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#115: FILE: arch/i386/config.in:291:
then

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#153: FILE: arch/i386/kernel/mmconfig.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#163: FILE: arch/i386/kernel/mmconfig.c:10:
+/* The physical address of the MMCONFIG aperture.  Set from ACPI
+extern u32 pci_mmcfg_base_addr;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#190: FILE: arch/i386/kernel/mmconfig.c:34:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#190: FILE: arch/i386/kernel/mmconfig.c:34:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#190: FILE: arch/i386/kernel/mmconfig.c:34:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: arch/i386/kernel/mmconfig.c:62:
+^Iif ((bus > 255) || (devfn > 255) || (reg > 4095)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#219: FILE: arch/i386/kernel/mmconfig.c:62:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#219: FILE: arch/i386/kernel/mmconfig.c:62:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#219: FILE: arch/i386/kernel/mmconfig.c:62:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: arch/i386/kernel/mmconfig.c:90:
+static int pci_mmcfg_read_config_byte(struct pci_dev *dev, int where,
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: arch/i386/kernel/mmconfig.c:91:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: arch/i386/kernel/mmconfig.c:94:
+^Iresult = pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: arch/i386/kernel/mmconfig.c:103:
+static int pci_mmcfg_read_config_word(struct pci_dev *dev, int where,
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: arch/i386/kernel/mmconfig.c:104:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: arch/i386/kernel/mmconfig.c:107:
+^Iresult = pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: arch/i386/kernel/mmconfig.c:108:
+ ^I^I^I^Iwhere, 2, &data);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#267: FILE: arch/i386/kernel/mmconfig.c:108:
+ ^I^I^I^Iwhere, 2, &data);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: arch/i386/kernel/mmconfig.c:108:
+	result = pci_mmcfg_read(0, dev->bus->number, dev->devfn, 
+ 				where, 2, &data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/i386/kernel/mmconfig.c:108:
+ ^I^I^I^Iwhere, 2, &data);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: arch/i386/kernel/mmconfig.c:116:
+static int pci_mmcfg_read_config_dword(struct pci_dev *dev, int where,
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: arch/i386/kernel/mmconfig.c:117:
+^Ireturn pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: arch/i386/kernel/mmconfig.c:122:
+static int pci_mmcfg_write_config_byte(struct pci_dev *dev, int where,
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: arch/i386/kernel/mmconfig.c:123:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: arch/i386/kernel/mmconfig.c:128:
+static int pci_mmcfg_write_config_word(struct pci_dev *dev, int where,
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: arch/i386/kernel/mmconfig.c:129:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: arch/i386/kernel/mmconfig.c:134:
+static int pci_mmcfg_write_config_dword(struct pci_dev *dev, int where,
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: arch/i386/kernel/mmconfig.c:135:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#311: FILE: arch/i386/kernel/mmconfig.c:148:
+struct pci_ops * __devinit pci_mmcfg_init(void)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#313: FILE: arch/i386/kernel/mmconfig.c:150:
+	if ((pci_probe & PCI_PROBE_MMCONF) == 0)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#317: FILE: arch/i386/kernel/mmconfig.c:154:
+	if (!pci_mmcfg_base_addr)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#322: FILE: arch/i386/kernel/mmconfig.c:159:
+	printk(KERN_INFO "PCI: Using MMCONFIG\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: arch/i386/kernel/mmconfig.c:168:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: arch/i386/kernel/mmconfig.c:169:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: arch/i386/kernel/mmconfig.c:175:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len,


ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: arch/i386/kernel/pci-i386.h:77:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: arch/i386/kernel/pci-i386.h:78:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: arch/i386/kernel/pci-i386.h:80:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len,


ERROR:SPACING: space required before the open brace '{'
#411: FILE: arch/i386/kernel/pci-pc.c:1452:
+	if (pci_root_ops){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: arch/i386/kernel/pci-pc.c:1462:
+^Iif ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2)) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#421: FILE: arch/i386/kernel/pci-pc.c:1462:
+	if ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2)) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#422: FILE: arch/i386/kernel/pci-pc.c:1463:
+	if ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2)) 
+		&& (tmp = pci_check_direct())) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#428: FILE: arch/i386/kernel/pci-pc.c:1469:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#428: FILE: arch/i386/kernel/pci-pc.c:1469:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#502: FILE: arch/x86_64/kernel/mmconfig.c:1:
+/*

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#510: FILE: arch/x86_64/kernel/mmconfig.c:9:
+#define MMCONFIG_APER_SIZE (256*1024*1024)
                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#510: FILE: arch/x86_64/kernel/mmconfig.c:9:
+#define MMCONFIG_APER_SIZE (256*1024*1024)
                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#514: FILE: arch/x86_64/kernel/mmconfig.c:12:
+/* The physical address of the MMCONFIG aperture.  Set from ACPI
+extern u32 pci_mmcfg_base_addr;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#524: FILE: arch/x86_64/kernel/mmconfig.c:21:
+static inline char* pci_dev_base(int bus, int devfn)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: arch/x86_64/kernel/mmconfig.c:29:
+^Ichar *addr = pci_dev_base(bus, devfn); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: arch/x86_64/kernel/mmconfig.c:30:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#535: FILE: arch/x86_64/kernel/mmconfig.c:31:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#535: FILE: arch/x86_64/kernel/mmconfig.c:31:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#535: FILE: arch/x86_64/kernel/mmconfig.c:31:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: arch/x86_64/kernel/mmconfig.c:52:
+^Ichar *addr = pci_dev_base(bus, devfn); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: arch/x86_64/kernel/mmconfig.c:53:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: arch/x86_64/kernel/mmconfig.c:54:
+^Iif ((bus > 255) || (devfn > 255) || (reg > 4095)) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#559: FILE: arch/x86_64/kernel/mmconfig.c:54:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#559: FILE: arch/x86_64/kernel/mmconfig.c:54:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#559: FILE: arch/x86_64/kernel/mmconfig.c:54:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: arch/x86_64/kernel/mmconfig.c:75:
+static int pci_mmcfg_read_config_byte(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#581: FILE: arch/x86_64/kernel/mmconfig.c:76:
+static int pci_mmcfg_read_config_byte(struct pci_dev *dev, int where, 
+					u8 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: arch/x86_64/kernel/mmconfig.c:78:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: arch/x86_64/kernel/mmconfig.c:81:
+^Iresult = pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: arch/x86_64/kernel/mmconfig.c:89:
+static int pci_mmcfg_read_config_word(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: arch/x86_64/kernel/mmconfig.c:90:
+static int pci_mmcfg_read_config_word(struct pci_dev *dev, int where, 
+					u16 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: arch/x86_64/kernel/mmconfig.c:92:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: arch/x86_64/kernel/mmconfig.c:95:
+^Iresult = pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: arch/x86_64/kernel/mmconfig.c:96:
+ ^I^I^I^Iwhere, 2, &data);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#601: FILE: arch/x86_64/kernel/mmconfig.c:96:
+ ^I^I^I^Iwhere, 2, &data);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: arch/x86_64/kernel/mmconfig.c:96:
+	result = pci_mmcfg_read(0, dev->bus->number, dev->devfn, 
+ 				where, 2, &data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: arch/x86_64/kernel/mmconfig.c:96:
+ ^I^I^I^Iwhere, 2, &data);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: arch/x86_64/kernel/mmconfig.c:103:
+static int pci_mmcfg_read_config_dword(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: arch/x86_64/kernel/mmconfig.c:104:
+static int pci_mmcfg_read_config_dword(struct pci_dev *dev, int where, 
+					u32 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: arch/x86_64/kernel/mmconfig.c:106:
+^Ireturn pci_mmcfg_read(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: arch/x86_64/kernel/mmconfig.c:110:
+static int pci_mmcfg_write_config_byte(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: arch/x86_64/kernel/mmconfig.c:111:
+static int pci_mmcfg_write_config_byte(struct pci_dev *dev, int where, 
+					u8 value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: arch/x86_64/kernel/mmconfig.c:113:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: arch/x86_64/kernel/mmconfig.c:117:
+static int pci_mmcfg_write_config_word(struct pci_dev *dev, int where, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: arch/x86_64/kernel/mmconfig.c:118:
+static int pci_mmcfg_write_config_word(struct pci_dev *dev, int where, 
+					u16 value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: arch/x86_64/kernel/mmconfig.c:120:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: arch/x86_64/kernel/mmconfig.c:125:
+static int pci_mmcfg_write_config_dword(struct pci_dev *dev, int where,


ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: arch/x86_64/kernel/mmconfig.c:128:
+^Ireturn pci_mmcfg_write(0, dev->bus->number, dev->devfn, $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#646: FILE: arch/x86_64/kernel/mmconfig.c:141:
+struct pci_ops * __devinit pci_mmcfg_init(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: arch/x86_64/kernel/mmconfig.c:149:
+^Ipci_mmcfg_virt = ioremap_nocache(pci_mmcfg_base_addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#655: FILE: arch/x86_64/kernel/mmconfig.c:150:
+	pci_mmcfg_virt = ioremap_nocache(pci_mmcfg_base_addr, 
+						MMCONFIG_APER_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: arch/x86_64/kernel/mmconfig.c:151:
+^Iif (!pci_mmcfg_virt) { $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#657: FILE: arch/x86_64/kernel/mmconfig.c:152:
+		printk("PCI: Cannot map mmconfig aperture\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: arch/x86_64/kernel/mmconfig.c:154:
+^I}^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#661: FILE: arch/x86_64/kernel/mmconfig.c:156:
+	printk(KERN_INFO "PCI: Using MMCONFIG at %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: arch/x86_64/kernel/mmconfig.c:157:
+	printk(KERN_INFO "PCI: Using MMCONFIG at %x\n",
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: arch/x86_64/kernel/mmconfig.c:164:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: arch/x86_64/kernel/mmconfig.c:165:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#677: FILE: arch/x86_64/kernel/mmconfig.c:171:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len,


CHECK:BRACES: Unbalanced braces around else statement
#709: FILE: arch/x86_64/kernel/pci-pc.c:576:
+	else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#719: FILE: arch/x86_64/kernel/pci-pc.c:586:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#719: FILE: arch/x86_64/kernel/pci-pc.c:586:
+		else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#742: FILE: arch/x86_64/kernel/pci-pc.c:616:
+	if (!dir) {
+		dir = pci_check_direct();
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#784: FILE: arch/x86_64/kernel/pci-x86_64.h:81:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: arch/x86_64/kernel/pci-x86_64.h:82:
+int pci_mcfg_read(int seg, int bus, int dev, int fn, int reg, int len, 
+				u32 *value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: arch/x86_64/kernel/pci-x86_64.h:84:
+int pci_mcfg_write(int seg, int bus, int dev, int fn, int reg, int len,


ERROR:TRAILING_WHITESPACE: trailing whitespace
#833: FILE: drivers/pci/pci.c:219:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279433.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 47 errors, 17 warnings, 42 checks, 732 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279433.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
