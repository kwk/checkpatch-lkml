WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
Remove the race condition for the NFSv4 server by adding a new conflicting lock 

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#66: FILE: fs/locks.c:803:
+static int __posix_lock_file_conf(struct inode *inode, struct file_lock *request, struct file_lock *conflock)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#89: FILE: fs/locks.c:1003:
+ * @filp: The file to apply the lock to
     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#95: FILE: fs/locks.c:1009:
+int posix_lock_file_conf(struct file *filp, struct file_lock *fl, struct file_lock *conflock)
                                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#106: FILE: fs/locks.c:1028:
+		error = posix_lock_file(filp, fl);
 		                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#124: FILE: fs/locks.c:1713:
+			error = posix_lock_file(filp, file_lock);
 			                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#133: FILE: fs/locks.c:1856:
+			error = posix_lock_file(filp, file_lock);
 			                        ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/linux/fs.h:755:
+extern int posix_lock_file_conf(struct file *, struct file_lock *, struct file_lock *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#145: FILE: include/linux/fs.h:755:
+extern int posix_lock_file_conf(struct file *, struct file_lock *, struct file_lock *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file_lock *' should also have an identifier name
#145: FILE: include/linux/fs.h:755:
+extern int posix_lock_file_conf(struct file *, struct file_lock *, struct file_lock *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file_lock *' should also have an identifier name
#145: FILE: include/linux/fs.h:755:
+extern int posix_lock_file_conf(struct file *, struct file_lock *, struct file_lock *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092328.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 10 warnings, 1 checks, 78 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092328.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
