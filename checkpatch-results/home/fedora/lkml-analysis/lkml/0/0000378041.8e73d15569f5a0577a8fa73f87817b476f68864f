WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -urN linux-2.5.67/arch/s390/kernel/gdb-stub.c linux-2.5.67-s390/arch/s390/kernel/gdb-stub.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#629: FILE: arch/s390/kernel/head64.S:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: arch/s390/kernel/head64.S:23:
+    Changes: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Paramters' may be misspelled - perhaps 'Parameters'?
#689: FILE: arch/s390/kernel/head64.S:61:
+# Paramters:	
   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#689: FILE: arch/s390/kernel/head64.S:61:
+# Paramters:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: arch/s390/kernel/head64.S:64:
+.Lloader:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: arch/s390/kernel/head64.S:66:
+        la    %r3,.Lorbread                    # r3 = address of orb $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: arch/s390/kernel/head64.S:69:
+        lctl  %c6,%c6,.Lcr6               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: arch/s390/kernel/head64.S:89:
+        st    %r0,.Lccwread+4                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: arch/s390/kernel/head64.S:103:
+        la    %r7,.Lorbsense              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: arch/s390/kernel/head64.S:115:
+        lpsw  .Lwaitpsw                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: arch/s390/kernel/head64.S:128:
+        lpsw  .Lcrash              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#812: FILE: arch/s390/kernel/head64.S:184:
+.Lloader:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#815: FILE: arch/s390/kernel/head64.S:187:
+        la    %r6,.Lccws              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: arch/s390/kernel/head64.S:202:
+        lpsw  .Lwaitpsw              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: arch/s390/kernel/head64.S:221:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#854: FILE: arch/s390/kernel/head64.S:226:
+        la    %r6,.Lccws             $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#865: FILE: arch/s390/kernel/head64.S:237:
+        lpsw  .Lcrash              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: arch/s390/kernel/head64.S:330:
+^Iclc   0(3,%r2),.L_hdr^I^I       # skip HDRx and EOFx $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: arch/s390/kernel/head64.S:342:
+        la    %r2,.Lreset              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: arch/s390/kernel/head64.S:347:
+^I$

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1003: FILE: arch/s390/kernel/head64.S:375:
+	l     %r11,.parm
 	            ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1011: FILE: arch/s390/kernel/head64.S:383:
+^Itr    0(64,%r8),.lowcase^I$

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1042: FILE: arch/s390/kernel/head64.S:414:
+.parm:	.long PARMAREA
  ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1047: FILE: arch/s390/kernel/head64.S:419:
+^I.byte 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1049: FILE: arch/s390/kernel/head64.S:421:
+^I.byte 0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1051: FILE: arch/s390/kernel/head64.S:423:
+^I.byte 0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: arch/s390/kernel/head64.S:425:
+^I.byte 0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1055: FILE: arch/s390/kernel/head64.S:427:
+^I.byte 0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1057: FILE: arch/s390/kernel/head64.S:429:
+^I.byte 0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: arch/s390/kernel/head64.S:431:
+^I.byte 0x60,0x61,0x62,0x63,0x64,0x65,0x66,0x67 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1061: FILE: arch/s390/kernel/head64.S:433:
+^I.byte 0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1064: FILE: arch/s390/kernel/head64.S:436:
+^I.byte 0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1066: FILE: arch/s390/kernel/head64.S:438:
+^I.byte 0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1068: FILE: arch/s390/kernel/head64.S:440:
+^I.byte 0xa0,0xa1,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1070: FILE: arch/s390/kernel/head64.S:442:
+^I.byte 0xb0,0xb1,0xb2,0xb3,0xb4,0xb5,0xb6,0xb7 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1072: FILE: arch/s390/kernel/head64.S:444:
+^I.byte 0xc0,0x81,0x82,0x83,0x84,0x85,0x86,0x87^I# .abcdefg $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1078: FILE: arch/s390/kernel/head64.S:450:
+^I.byte 0xf0,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7 $

WARNING:TYPO_SPELLING: 'HSA' may be misspelled - perhaps 'HAS'?
#1159: FILE: arch/s390/kernel/head64.S:531:
+# Running native the HSA is located at 2GB and we will get an
                      ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: arch/s390/kernel/head64.S:541:
+.Ldonemem:^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1206: FILE: arch/s390/kernel/head64.S:578:
+0:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: arch/s390/kernel/head64.S:625:
+_pend:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1258: FILE: arch/s390/kernel/head64.S:630:
+^I$

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Rela>
#1314: FILE: arch/s390/kernel/module.c:62:
+check_rela(Elf_Rela *rela, struct module *me)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1320: FILE: arch/s390/kernel/module.c:66:
+	info = me->arch.syminfo + ELF_R_SYM (rela->r_info);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1321: FILE: arch/s390/kernel/module.c:67:
+	switch (ELF_R_TYPE (rela->r_info)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1335: FILE: arch/s390/kernel/module.c:80:
+			me->arch.got_size += sizeof(void*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#1353: FILE: arch/s390/kernel/module.c:110:
+module_frob_arch_sections(Elf_Ehdr *hdr, Elf_Shdr *sechdrs,

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#1353: FILE: arch/s390/kernel/module.c:110:
+module_frob_arch_sections(Elf_Ehdr *hdr, Elf_Shdr *sechdrs,

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Sym>
#1360: FILE: arch/s390/kernel/module.c:114:
+	Elf_Sym *symbols;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1388: FILE: arch/s390/kernel/module.c:184:
+apply_rela(Elf_Rela *rela, Elf_Addr base, Elf_Sym *symtab, $

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Addr>
#1388: FILE: arch/s390/kernel/module.c:184:
+apply_rela(Elf_Rela *rela, Elf_Addr base, Elf_Sym *symtab, 

CHECK:SPACING: No space is necessary after a cast
#1420: FILE: arch/s390/kernel/module.c:217:
+			*(unsigned long *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#1435: FILE: arch/s390/kernel/module.c:234:
+			*(unsigned long *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#1460: FILE: arch/s390/kernel/module.c:270:
+			*(unsigned long *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#1481: FILE: arch/s390/kernel/module.c:291:
+			ip[3] = (unsigned int) (val >> 32);

CHECK:SPACING: No space is necessary after a cast
#1482: FILE: arch/s390/kernel/module.c:292:
+			ip[4] = (unsigned int) val;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1489: FILE: arch/s390/kernel/module.c:298:
+		    r_type == R_390_PLTOFF32
+		    || r_type == R_390_PLTOFF64

CHECK:SPACING: No space is necessary after a cast
#1495: FILE: arch/s390/kernel/module.c:303:
+			val =  (Elf_Addr) me->module_core +

CHECK:SPACING: No space is necessary after a cast
#1505: FILE: arch/s390/kernel/module.c:317:
+			*(unsigned long *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#1512: FILE: arch/s390/kernel/module.c:323:
+			((Elf_Addr) me->module_core + me->arch.got_offset);

CHECK:SPACING: No space is necessary after a cast
#1518: FILE: arch/s390/kernel/module.c:329:
+			*(unsigned long *) loc = val;

CHECK:SPACING: No space is necessary after a cast
#1523: FILE: arch/s390/kernel/module.c:333:
+		val = (Elf_Addr) me->module_core + me->arch.got_offset +

CHECK:SPACING: No space is necessary after a cast
#1551: FILE: arch/s390/kernel/module.c:369:
+	symtab = (Elf_Sym *) sechdrs[symindex].sh_addr;

CHECK:SPACING: No space is necessary after a cast
#1552: FILE: arch/s390/kernel/module.c:370:
+	rela = (Elf_Rela *) sechdrs[relsec].sh_addr;

CHECK:SPACING: No space is necessary after a cast
#1568: FILE: arch/s390/kernel/process.c:62:
+	return *((unsigned long *) (bc+112));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1568: FILE: arch/s390/kernel/process.c:62:
+	return *((unsigned long *) (bc+112));
 	                              ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1586: FILE: arch/s390/kernel/process.c:101:
+	asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1595: FILE: arch/s390/kernel/process.c:110:
+		: "=&a" (reg) : "a" (&wait_psw) : "memory", "cc" );

ERROR:CODE_INDENT: code indent should use tabs where possible
#1607: FILE: arch/s390/kernel/process.c:129:
+        printk("Process %s (pid: %d, task: %p, ksp: %p)\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1607: FILE: arch/s390/kernel/process.c:129:
+        printk("Process %s (pid: %d, task: %p, ksp: %p)\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1607: FILE: arch/s390/kernel/process.c:129:
+        printk("Process %s (pid: %d, task: %p, ksp: %p)\n",

CHECK:SPACING: No space is necessary after a cast
#1608: FILE: arch/s390/kernel/process.c:130:
+	       current->comm, current->pid, (void *) tsk,

CHECK:SPACING: No space is necessary after a cast
#1609: FILE: arch/s390/kernel/process.c:131:
+	       (void *) tsk->thread.ksp);

CHECK:SPACING: No space is necessary after a cast
#1649: FILE: arch/s390/kernel/process.c:174:
+	regs.psw.addr = (unsigned long) kernel_thread_starter | PSW_ADDR_AMODE;

WARNING:TYPO_SPELLING: 'fpr' may be misspelled - perhaps 'for'?
#1659: FILE: arch/s390/kernel/process.c:217:
+            unsigned int  fprs[4];     /* fpr 4 and 6                      */
                                           ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1659: FILE: arch/s390/kernel/process.c:217:
+            unsigned int  fprs[4];     /* fpr 4 and 6                      */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1659: FILE: arch/s390/kernel/process.c:217:
+            unsigned int  fprs[4];     /* fpr 4 and 6                      */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1660: FILE: arch/s390/kernel/process.c:218:
+            unsigned int  empty[4];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1660: FILE: arch/s390/kernel/process.c:218:
+            unsigned int  empty[4];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1669: FILE: arch/s390/kernel/process.c:235:
+        frame->gprs[9] = (unsigned long) frame;$

CHECK:SPACING: No space is necessary after a cast
#1669: FILE: arch/s390/kernel/process.c:235:
+        frame->gprs[9] = (unsigned long) frame;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1669: FILE: arch/s390/kernel/process.c:235:
+        frame->gprs[9] = (unsigned long) frame;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1685: FILE: arch/s390/kernel/process.c:251:
+        p->thread.user_seg = __pa((unsigned long) p->mm->pgd) | _REGION_TABLE;$

CHECK:SPACING: No space is necessary after a cast
#1685: FILE: arch/s390/kernel/process.c:251:
+        p->thread.user_seg = __pa((unsigned long) p->mm->pgd) | _REGION_TABLE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1685: FILE: arch/s390/kernel/process.c:251:
+        p->thread.user_seg = __pa((unsigned long) p->mm->pgd) | _REGION_TABLE;$

CHECK:SPACING: No space is necessary after a cast
#1690: FILE: arch/s390/kernel/process.c:256:
+				(unsigned int) regs->gprs[6];

CHECK:SPACING: No space is necessary after a cast
#1695: FILE: arch/s390/kernel/process.c:261:
+				(unsigned int) regs->gprs[6];

CHECK:SPACING: No space is necessary after a cast
#1737: FILE: arch/s390/kernel/process.c:401:
+	bc = (*(unsigned long *) r15) & PSW_ADDR_INSN;

CHECK:SPACING: No space is necessary after a cast
#1746: FILE: arch/s390/kernel/process.c:407:
+		r14 = (*(unsigned long *) (bc+56)) & PSW_ADDR_INSN;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1746: FILE: arch/s390/kernel/process.c:407:
+		r14 = (*(unsigned long *) (bc+56)) & PSW_ADDR_INSN;
 		                             ^

CHECK:SPACING: No space is necessary after a cast
#1748: FILE: arch/s390/kernel/process.c:409:
+		r14 = *(unsigned long *) (bc+112);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1748: FILE: arch/s390/kernel/process.c:409:
+		r14 = *(unsigned long *) (bc+112);
 		                            ^

CHECK:SPACING: No space is necessary after a cast
#1753: FILE: arch/s390/kernel/process.c:413:
+		bc = (*(unsigned long *) bc) & PSW_ADDR_INSN;

CHECK:CAMELCASE: Avoid CamelCase: <FixPerRegisters>
#1770: FILE: arch/s390/kernel/ptrace.c:47:
+FixPerRegisters(struct task_struct *task)

CHECK:SPACING: No space is necessary after a cast
#1849: FILE: arch/s390/kernel/ptrace.c:140:
+		tmp = *(addr_t *)((addr_t) __KSTK_PTREGS(child) + addr);

CHECK:SPACING: No space is necessary after a cast
#1858: FILE: arch/s390/kernel/ptrace.c:148:
+		tmp = *(addr_t *)((addr_t) &child->thread.fp_regs + offset);

CHECK:SPACING: No space is necessary after a cast
#1867: FILE: arch/s390/kernel/ptrace.c:156:
+		tmp = *(addr_t *)((addr_t) &child->thread.per_info + offset);

CHECK:SPACING: No space is necessary after a cast
#1873: FILE: arch/s390/kernel/ptrace.c:161:
+	return put_user(tmp, (addr_t *) data);

CHECK:SPACING: No space is necessary after a cast
#1911: FILE: arch/s390/kernel/ptrace.c:196:
+		*(addr_t *)((addr_t) __KSTK_PTREGS(child) + addr) = data;

CHECK:SPACING: No space is necessary after a cast
#1920: FILE: arch/s390/kernel/ptrace.c:207:
+		*(addr_t *)((addr_t) &child->thread.fp_regs + offset) = data;

CHECK:SPACING: No space is necessary after a cast
#1929: FILE: arch/s390/kernel/ptrace.c:215:
+		*(addr_t *)((addr_t) &child->thread.per_info + offset) = data;

CHECK:SPACING: No space is necessary after a cast
#1984: FILE: arch/s390/kernel/ptrace.c:261:
+		if (!copy_from_user(&parea, (void *) addr, sizeof(parea)))

CHECK:SPACING: No space is necessary after a cast
#2035: FILE: arch/s390/kernel/ptrace.c:312:
+	if (addr <= (addr_t) &dummy32->regs.orig_gpr2) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2035: FILE: arch/s390/kernel/ptrace.c:312:
+	if (addr <= (addr_t) &dummy32->regs.orig_gpr2) {
[...]
+	} else if (addr >= (addr_t) &dummy32->regs.fp_regs &&
[...]
+	} else if (addr >= (addr_t) &dummy32->regs.per_info &&
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#2039: FILE: arch/s390/kernel/ptrace.c:316:
+		if (addr == (addr_t) &dummy32->regs.psw.mask) {

CHECK:SPACING: No space is necessary after a cast
#2043: FILE: arch/s390/kernel/ptrace.c:320:
+		} else if (addr == (addr_t) &dummy32->regs.psw.addr) {

CHECK:SPACING: No space is necessary after a cast
#2045: FILE: arch/s390/kernel/ptrace.c:322:
+			tmp = (__u32) __KSTK_PTREGS(child)->psw.addr |

CHECK:BRACES: Unbalanced braces around else statement
#2047: FILE: arch/s390/kernel/ptrace.c:324:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2048: FILE: arch/s390/kernel/ptrace.c:325:
+^I^I^Itmp = *(__u32 *)((addr_t) __KSTK_PTREGS(child) + $

CHECK:SPACING: No space is necessary after a cast
#2048: FILE: arch/s390/kernel/ptrace.c:325:
+			tmp = *(__u32 *)((addr_t) __KSTK_PTREGS(child) + 

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2049: FILE: arch/s390/kernel/ptrace.c:326:
+					 addr*2 + 4);
 					     ^

CHECK:SPACING: No space is necessary after a cast
#2050: FILE: arch/s390/kernel/ptrace.c:327:
+	} else if (addr >= (addr_t) &dummy32->regs.fp_regs &&

CHECK:SPACING: No space is necessary after a cast
#2051: FILE: arch/s390/kernel/ptrace.c:328:
+		   addr < (addr_t) (&dummy32->regs.fp_regs + 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2053: FILE: arch/s390/kernel/ptrace.c:330:
+^I^I * floating point regs. are stored in the thread structure $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2055: FILE: arch/s390/kernel/ptrace.c:332:
+^I        offset = addr - (addr_t) &dummy32->regs.fp_regs;$

CHECK:SPACING: No space is necessary after a cast
#2055: FILE: arch/s390/kernel/ptrace.c:332:
+	        offset = addr - (addr_t) &dummy32->regs.fp_regs;

CHECK:SPACING: No space is necessary after a cast
#2056: FILE: arch/s390/kernel/ptrace.c:333:
+		tmp = *(__u32 *)((addr_t) &child->thread.fp_regs + offset);

CHECK:SPACING: No space is necessary after a cast
#2058: FILE: arch/s390/kernel/ptrace.c:335:
+	} else if (addr >= (addr_t) &dummy32->regs.per_info &&

CHECK:SPACING: No space is necessary after a cast
#2059: FILE: arch/s390/kernel/ptrace.c:336:
+		   addr < (addr_t) (&dummy32->regs.per_info + 1)) {

CHECK:SPACING: No space is necessary after a cast
#2063: FILE: arch/s390/kernel/ptrace.c:340:
+		offset = addr - (addr_t) &dummy32->regs.per_info;

CHECK:SPACING: No space is necessary after a cast
#2065: FILE: arch/s390/kernel/ptrace.c:342:
+		if ((offset >= (addr_t) &dummy_per32->control_regs &&

CHECK:SPACING: No space is necessary after a cast
#2066: FILE: arch/s390/kernel/ptrace.c:343:
+		     offset < (addr_t) (&dummy_per32->control_regs + 1)) ||

CHECK:SPACING: No space is necessary after a cast
#2067: FILE: arch/s390/kernel/ptrace.c:344:
+		    (offset >= (addr_t) &dummy_per32->starting_addr &&

CHECK:SPACING: No space is necessary after a cast
#2068: FILE: arch/s390/kernel/ptrace.c:345:
+		     offset <= (addr_t) &dummy_per32->ending_addr) ||

CHECK:SPACING: No space is necessary after a cast
#2069: FILE: arch/s390/kernel/ptrace.c:346:
+		    offset == (addr_t) &dummy_per32->lowcore.words.address)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2070: FILE: arch/s390/kernel/ptrace.c:347:
+			offset = offset*2 + 4;
 			               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2072: FILE: arch/s390/kernel/ptrace.c:349:
+			offset = offset*2;
 			               ^

CHECK:SPACING: No space is necessary after a cast
#2073: FILE: arch/s390/kernel/ptrace.c:350:
+		tmp = *(__u32 *)((addr_t) &child->thread.per_info + offset);

CHECK:BRACES: Unbalanced braces around else statement
#2075: FILE: arch/s390/kernel/ptrace.c:352:
+	} else

CHECK:SPACING: No space is necessary after a cast
#2078: FILE: arch/s390/kernel/ptrace.c:355:
+	return put_user(tmp, (__u32 *) data);

CHECK:SPACING: No space is necessary after a cast
#2096: FILE: arch/s390/kernel/ptrace.c:373:
+	tmp = (__u32) data;

CHECK:SPACING: No space is necessary after a cast
#2098: FILE: arch/s390/kernel/ptrace.c:375:
+	if (addr <= (addr_t) &dummy32->regs.orig_gpr2) {

CHECK:SPACING: No space is necessary after a cast
#2102: FILE: arch/s390/kernel/ptrace.c:379:
+		if (addr == (addr_t) &dummy32->regs.psw.mask) {

CHECK:SPACING: No space is necessary after a cast
#2109: FILE: arch/s390/kernel/ptrace.c:386:
+		} else if (addr == (addr_t) &dummy32->regs.psw.addr) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2111: FILE: arch/s390/kernel/ptrace.c:388:
+^I^I^I__KSTK_PTREGS(child)->psw.addr = $

CHECK:SPACING: No space is necessary after a cast
#2112: FILE: arch/s390/kernel/ptrace.c:389:
+				(__u64) tmp & PSW32_ADDR_INSN;

CHECK:BRACES: Unbalanced braces around else statement
#2113: FILE: arch/s390/kernel/ptrace.c:390:
+		} else

CHECK:SPACING: No space is necessary after a cast
#2114: FILE: arch/s390/kernel/ptrace.c:391:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + addr*2 + 4) =

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2114: FILE: arch/s390/kernel/ptrace.c:391:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + addr*2 + 4) =

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2114: FILE: arch/s390/kernel/ptrace.c:391:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + addr*2 + 4) =
 			                                              ^

CHECK:SPACING: No space is necessary after a cast
#2116: FILE: arch/s390/kernel/ptrace.c:393:
+	} else if (addr >= (addr_t) &dummy32->regs.fp_regs &&

CHECK:SPACING: No space is necessary after a cast
#2117: FILE: arch/s390/kernel/ptrace.c:394:
+		   addr < (addr_t) (&dummy32->regs.fp_regs + 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2119: FILE: arch/s390/kernel/ptrace.c:396:
+^I^I * floating point regs. are stored in the thread structure $

CHECK:SPACING: No space is necessary after a cast
#2121: FILE: arch/s390/kernel/ptrace.c:398:
+		if (addr == (addr_t) &dummy32->regs.fp_regs.fpc &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#2125: FILE: arch/s390/kernel/ptrace.c:402:
+^I        offset = addr - (addr_t) &dummy32->regs.fp_regs;$

CHECK:SPACING: No space is necessary after a cast
#2125: FILE: arch/s390/kernel/ptrace.c:402:
+	        offset = addr - (addr_t) &dummy32->regs.fp_regs;

CHECK:SPACING: No space is necessary after a cast
#2126: FILE: arch/s390/kernel/ptrace.c:403:
+		*(__u32 *)((addr_t) &child->thread.fp_regs + offset) = tmp;

CHECK:SPACING: No space is necessary after a cast
#2128: FILE: arch/s390/kernel/ptrace.c:405:
+	} else if (addr >= (addr_t) &dummy32->regs.per_info &&

CHECK:SPACING: No space is necessary after a cast
#2129: FILE: arch/s390/kernel/ptrace.c:406:
+		   addr < (addr_t) (&dummy32->regs.per_info + 1)) {

CHECK:SPACING: No space is necessary after a cast
#2133: FILE: arch/s390/kernel/ptrace.c:410:
+		offset = addr - (addr_t) &dummy32->regs.per_info;

CHECK:SPACING: No space is necessary after a cast
#2142: FILE: arch/s390/kernel/ptrace.c:419:
+		if ((offset >= (addr_t) &dummy_per32->control_regs &&

CHECK:SPACING: No space is necessary after a cast
#2143: FILE: arch/s390/kernel/ptrace.c:420:
+		     offset < (addr_t) (&dummy_per32->control_regs + 1)) ||

CHECK:SPACING: No space is necessary after a cast
#2144: FILE: arch/s390/kernel/ptrace.c:421:
+		    (offset >= (addr_t) &dummy_per32->starting_addr &&

CHECK:SPACING: No space is necessary after a cast
#2145: FILE: arch/s390/kernel/ptrace.c:422:
+		     offset <= (addr_t) &dummy_per32->ending_addr) ||

CHECK:SPACING: No space is necessary after a cast
#2146: FILE: arch/s390/kernel/ptrace.c:423:
+		    offset == (addr_t) &dummy_per32->lowcore.words.address)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2147: FILE: arch/s390/kernel/ptrace.c:424:
+			offset = offset*2 + 4;
 			               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2149: FILE: arch/s390/kernel/ptrace.c:426:
+			offset = offset*2;
 			               ^

CHECK:SPACING: No space is necessary after a cast
#2150: FILE: arch/s390/kernel/ptrace.c:427:
+		*(__u32 *)((addr_t) &child->thread.per_info + offset) = tmp;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2152: FILE: arch/s390/kernel/ptrace.c:429:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2162: FILE: arch/s390/kernel/ptrace.c:439:
+^Iptrace_area_emu31 parea; $

CHECK:SPACING: No space is necessary after a cast
#2172: FILE: arch/s390/kernel/ptrace.c:449:
+		return put_user(tmp, (unsigned int *) data);

CHECK:SPACING: No space is necessary after a cast
#2193: FILE: arch/s390/kernel/ptrace.c:470:
+		if (!copy_from_user(&parea, (void *) addr, sizeof(parea)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2274: FILE: arch/s390/kernel/ptrace.c:570:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2308: FILE: arch/s390/kernel/reipl64.S:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2327: FILE: arch/s390/kernel/reipl64.S:20:
+                stsch   .Lschib-.Lpg0(%r13)                                    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2328: FILE: arch/s390/kernel/reipl64.S:21:
+^I        oi      .Lschib+5-.Lpg0(%r13),0x84 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2329: FILE: arch/s390/kernel/reipl64.S:22:
+.Lecs:  ^Ixi      .Lschib+27-.Lpg0(%r13),0x01 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2330: FILE: arch/s390/kernel/reipl64.S:23:
+        ^Imsch    .Lschib-.Lpg0(%r13) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2332: FILE: arch/s390/kernel/reipl64.S:25:
+.Lssch:^I^Issch^I.Liplorb-.Lpg0(%r13)           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2334: FILE: arch/s390/kernel/reipl64.S:27:
+^I^Ibrct    %r0,.Lssch   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2336: FILE: arch/s390/kernel/reipl64.S:29:
+.L001:^I^Imvc^I__LC_IO_NEW_PSW(16),.Lionew-.Lpg0(%r13)^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2337: FILE: arch/s390/kernel/reipl64.S:30:
+.Ltpi:^I^Ilpswe^I.Lwaitpsw-.Lpg0(%r13)          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2342: FILE: arch/s390/kernel/reipl64.S:35:
+^I^Itsch^I.Liplirb-.Lpg0(%r13)           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2345: FILE: arch/s390/kernel/reipl64.S:38:
+                bas     %r14,.Ldisab-.Lpg0(%r13)    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2346: FILE: arch/s390/kernel/reipl64.S:39:
+.L002:^I^Itm^I.Liplirb+8-.Lpg0(%r13),0xf3    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2348: FILE: arch/s390/kernel/reipl64.S:41:
+                bas     %r14,.Ldisab-.Lpg0(%r13)^I$

WARNING:TYPO_SPELLING: 'specifcation' may be misspelled - perhaps 'specification'?
#2366: FILE: arch/s390/kernel/reipl64.S:59:
+ * the sigp will throw a specifcation exception
                          ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'ommited' may be misspelled - perhaps 'omitted'?
#2371: FILE: arch/s390/kernel/reipl64.S:64:
+ * ommited from the pop.
    ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2401: FILE: arch/s390/kernel/reipl64.S:94:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2403: FILE: arch/s390/kernel/reipl64.S:96:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2426: FILE: arch/s390/kernel/s390_ksyms.c:56:
+ * binfmt_elf loader $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2428: FILE: arch/s390/kernel/s390_ksyms.c:58:
+extern int dump_fpu (struct pt_regs * regs, s390_fp_regs *fpregs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2428: FILE: arch/s390/kernel/s390_ksyms.c:58:
+extern int dump_fpu (struct pt_regs * regs, s390_fp_regs *fpregs);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2428: FILE: arch/s390/kernel/s390_ksyms.c:58:
+extern int dump_fpu (struct pt_regs * regs, s390_fp_regs *fpregs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2430: FILE: arch/s390/kernel/s390_ksyms.c:60:
+EXPORT_SYMBOL(overflowuid);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2431: FILE: arch/s390/kernel/s390_ksyms.c:61:
+EXPORT_SYMBOL(overflowgid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2438: FILE: arch/s390/kernel/s390_ksyms.c:68:
+^I^I^I^I       int (*handler)(unsigned int, $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2442: FILE: arch/s390/kernel/s390_ksyms.c:72:
+int unregister_ioctl32_conversion(unsigned int cmd);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2443: FILE: arch/s390/kernel/s390_ksyms.c:73:
+EXPORT_SYMBOL(register_ioctl32_conversion);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2444: FILE: arch/s390/kernel/s390_ksyms.c:74:
+EXPORT_SYMBOL(unregister_ioctl32_conversion);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2466: FILE: arch/s390/kernel/setup.c:335:
+	printk((MACHINE_IS_VM) ?

CHECK:SPACING: No space is necessary after a cast
#2495: FILE: arch/s390/kernel/setup.c:478:
+	lc = (struct _lowcore *) __alloc_bootmem(2*PAGE_SIZE, 2*PAGE_SIZE, 0);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2495: FILE: arch/s390/kernel/setup.c:478:
+	lc = (struct _lowcore *) __alloc_bootmem(2*PAGE_SIZE, 2*PAGE_SIZE, 0);
 	                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2495: FILE: arch/s390/kernel/setup.c:478:
+	lc = (struct _lowcore *) __alloc_bootmem(2*PAGE_SIZE, 2*PAGE_SIZE, 0);
 	                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2496: FILE: arch/s390/kernel/setup.c:479:
+	memset(lc, 0, 2*PAGE_SIZE);
 	               ^

CHECK:SPACING: No space is necessary after a cast
#2501: FILE: arch/s390/kernel/setup.c:483:
+		PSW_ADDR_AMODE + (unsigned long) restart_int_handler;

CHECK:SPACING: No space is necessary after a cast
#2505: FILE: arch/s390/kernel/setup.c:486:
+		PSW_ADDR_AMODE + (unsigned long) ext_int_handler;

CHECK:SPACING: No space is necessary after a cast
#2508: FILE: arch/s390/kernel/setup.c:488:
+	lc->svc_new_psw.addr = PSW_ADDR_AMODE + (unsigned long) system_call;

CHECK:SPACING: No space is necessary after a cast
#2517: FILE: arch/s390/kernel/setup.c:494:
+		PSW_ADDR_AMODE + (unsigned long) mcck_int_handler;

CHECK:SPACING: No space is necessary after a cast
#2520: FILE: arch/s390/kernel/setup.c:496:
+	lc->io_new_psw.addr = PSW_ADDR_AMODE + (unsigned long) io_int_handler;

CHECK:SPACING: No space is necessary after a cast
#2530: FILE: arch/s390/kernel/setup.c:505:
+	lc->kernel_stack = ((__u64) &init_thread_union) + 16384;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2532: FILE: arch/s390/kernel/setup.c:507:
+		__alloc_bootmem(4*PAGE_SIZE, 4*PAGE_SIZE, 0) + 16384;
 		                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2532: FILE: arch/s390/kernel/setup.c:507:
+		__alloc_bootmem(4*PAGE_SIZE, 4*PAGE_SIZE, 0) + 16384;
 		                              ^

CHECK:SPACING: No space is necessary after a cast
#2537: FILE: arch/s390/kernel/setup.c:512:
+	set_prefix((__u32)(__u64) lc);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2581: FILE: arch/s390/kernel/signal.c:302:
+                regs->gprs[14] = (unsigned long)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2581: FILE: arch/s390/kernel/signal.c:302:
+                regs->gprs[14] = (unsigned long)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2585: FILE: arch/s390/kernel/signal.c:305:
+                regs->gprs[14] = (unsigned long)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2585: FILE: arch/s390/kernel/signal.c:305:
+                regs->gprs[14] = (unsigned long)$

CHECK:SPACING: No space is necessary after a cast
#2596: FILE: arch/s390/kernel/signal.c:317:
+	regs->gprs[15] = (unsigned long) frame;

CHECK:SPACING: No space is necessary after a cast
#2597: FILE: arch/s390/kernel/signal.c:318:
+	regs->psw.addr = (unsigned long) ka->sa.sa_handler | PSW_ADDR_AMODE;

CHECK:SPACING: No space is necessary after a cast
#2602: FILE: arch/s390/kernel/signal.c:322:
+	regs->gprs[3] = (unsigned long) &frame->sc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2611: FILE: arch/s390/kernel/signal.c:362:
+                regs->gprs[14] = (unsigned long)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2611: FILE: arch/s390/kernel/signal.c:362:
+                regs->gprs[14] = (unsigned long)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2615: FILE: arch/s390/kernel/signal.c:365:
+                regs->gprs[14] = (unsigned long)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2615: FILE: arch/s390/kernel/signal.c:365:
+                regs->gprs[14] = (unsigned long)$

CHECK:SPACING: No space is necessary after a cast
#2626: FILE: arch/s390/kernel/signal.c:376:
+	regs->gprs[15] = (unsigned long) frame;

CHECK:SPACING: No space is necessary after a cast
#2627: FILE: arch/s390/kernel/signal.c:377:
+	regs->psw.addr = (unsigned long) ka->sa.sa_handler | PSW_ADDR_AMODE;

CHECK:SPACING: No space is necessary after a cast
#2633: FILE: arch/s390/kernel/signal.c:381:
+	regs->gprs[3] = (unsigned long) &frame->info;

CHECK:SPACING: No space is necessary after a cast
#2634: FILE: arch/s390/kernel/signal.c:382:
+	regs->gprs[4] = (unsigned long) &frame->uc;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2642: FILE: arch/s390/kernel/signal.c:468:
+#ifdef CONFIG_S390_SUPPORT $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2644: FILE: arch/s390/kernel/signal.c:470:
+		extern asmlinkage int do_signal32(struct pt_regs *regs,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2645: FILE: arch/s390/kernel/signal.c:471:
+^I^I^I^I^I^I  sigset_t *oldset); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2647: FILE: arch/s390/kernel/signal.c:473:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2647: FILE: arch/s390/kernel/signal.c:473:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2648: FILE: arch/s390/kernel/signal.c:474:
+#endif $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2660: FILE: arch/s390/kernel/smp.c:174:
+                if (!cpu_online(i) || smp_processor_id() == i) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2660: FILE: arch/s390/kernel/smp.c:174:
+                if (!cpu_online(i) || smp_processor_id() == i) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2660: FILE: arch/s390/kernel/smp.c:174:
+                if (!cpu_online(i) || smp_processor_id() == i) $

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2739: FILE: arch/s390/kernel/smp.c:387:
+	parms.andvals[cr] = -1L;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2749: FILE: arch/s390/kernel/smp.c:402:
+	parms.orvals[cr] = 0;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2750: FILE: arch/s390/kernel/smp.c:403:
+	parms.andvals[cr] = ~(1L << bit);
 	^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2809: FILE: arch/s390/kernel/smp.c:549:
+^I^I^I__get_free_pages(GFP_KERNEL|GFP_DMA, $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2809: FILE: arch/s390/kernel/smp.c:549:
+			__get_free_pages(GFP_KERNEL|GFP_DMA, 
 			                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2810: FILE: arch/s390/kernel/smp.c:550:
+			__get_free_pages(GFP_KERNEL|GFP_DMA, 
+					sizeof(void*) == 8 ? 1 : 0);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2810: FILE: arch/s390/kernel/smp.c:550:
+					sizeof(void*) == 8 ? 1 : 0);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2811: FILE: arch/s390/kernel/smp.c:551:
+		async_stack = __get_free_pages(GFP_KERNEL,ASYNC_ORDER);
 		                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lowcore_ptr[i]"
#2812: FILE: arch/s390/kernel/smp.c:552:
+		if (lowcore_ptr[i] == NULL || async_stack == 0ULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#2820: FILE: arch/s390/kernel/smp.c:558:
+	set_prefix((u32)(unsigned long) lowcore_ptr[smp_processor_id()]);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2823: FILE: arch/s390/kernel/smp.c:561:
 void __devinit smp_prepare_boot_cpu(void)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2849: FILE: arch/s390/kernel/sys_s390.c:44:
+asmlinkage __SYS_RETTYPE sys_pipe(unsigned long * fildes)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2891: FILE: arch/s390/kernel/sys_s390.c:149:
+arch_get_unmapped_area(struct file *filp, unsigned long addr,
                                     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2898: FILE: arch/s390/kernel/sys_s390.c:156:
+^Iif (test_thread_flag(TIF_31BIT)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2899: FILE: arch/s390/kernel/sys_s390.c:157:
+^I^Iif (!addr) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2900: FILE: arch/s390/kernel/sys_s390.c:158:
+^I^I^Iaddr = 0x40000000; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2901: FILE: arch/s390/kernel/sys_s390.c:159:
+^I^Iend = 0x80000000;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2902: FILE: arch/s390/kernel/sys_s390.c:160:
+^I} else { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2903: FILE: arch/s390/kernel/sys_s390.c:161:
+^I^Iif (!addr) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2905: FILE: arch/s390/kernel/sys_s390.c:163:
+^I^Iend = TASK_SIZE; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2930: FILE: arch/s390/kernel/sys_s390.c:186:
+asmlinkage __SYS_RETTYPE sys_ipc (uint call, int first, int second, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2930: FILE: arch/s390/kernel/sys_s390.c:186:
+asmlinkage __SYS_RETTYPE sys_ipc (uint call, int first, int second, 

CHECK:SPACING: No space is necessary after a cast
#2940: FILE: arch/s390/kernel/sys_s390.c:195:
+		return sys_semtimedop (first, (struct sembuf *) ptr, second,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2940: FILE: arch/s390/kernel/sys_s390.c:195:
+		return sys_semtimedop (first, (struct sembuf *) ptr, second,

CHECK:SPACING: No space is necessary after a cast
#2943: FILE: arch/s390/kernel/sys_s390.c:198:
+		return sys_semtimedop(first, (struct sembuf *) ptr, second,

CHECK:SPACING: No space is necessary after a cast
#2944: FILE: arch/s390/kernel/sys_s390.c:199:
+				      (const struct timespec *) fifth);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2953: FILE: arch/s390/kernel/sys_s390.c:243:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2970: FILE: arch/s390/kernel/sys_s390.c:296:
+	return -ENOSYS;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2975: FILE: arch/s390/kernel/sys_s390.c:301:
+extern asmlinkage int sys_newuname(struct new_utsname * name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2977: FILE: arch/s390/kernel/sys_s390.c:303:
+asmlinkage int s390x_newuname(struct new_utsname * name)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2983: FILE: arch/s390/kernel/sys_s390.c:309:
+		if (ret) ret = -EFAULT;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378041.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 95 errors, 42 warnings, 123 checks, 2273 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378041.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
