CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#72: FILE: include/linux/mmzone.h:365:
+extern int sysctl_lowmem_reserve_ratio[MAX_NR_ZONES-1];
                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#73: FILE: include/linux/mmzone.h:366:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#73: FILE: include/linux/mmzone.h:366:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#73: FILE: include/linux/mmzone.h:366:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#73: FILE: include/linux/mmzone.h:366:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#73: FILE: include/linux/mmzone.h:366:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#73: FILE: include/linux/mmzone.h:366:
+int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int, struct file *,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#84: FILE: include/linux/sysctl.h:162:
+	VM_LOWMEM_RESERVE_RATIO=20,/* reservation ratio for lower memory zones */
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: mm/page_alloc.c:53:
+int sysctl_lowmem_reserve_ratio[MAX_NR_ZONES-1] = { 256, 32 };
                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#176: FILE: mm/page_alloc.c:630:
+		min = z->pages_low + (1<<order) + z->lowmem_reserve[classzone_idx];
 		                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#185: FILE: mm/page_alloc.c:653:
+		min += (1<<order) + z->lowmem_reserve[classzone_idx];
 		         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#194: FILE: mm/page_alloc.c:696:
+		min += (1<<order) + z->lowmem_reserve[classzone_idx];
 		         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#203: FILE: mm/page_alloc.c:1115:
+		printk("lowmem_reserve[]:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#206: FILE: mm/page_alloc.c:1117:
+			printk(" %lu", zone->lowmem_reserve[i]);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#267: FILE: mm/page_alloc.c:1827:
+			struct zone * zone = pgdat->node_zones + j;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#286: FILE: mm/page_alloc.c:1832:
+			for (idx = j-1; idx >= 0; idx--) {
 			            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: mm/page_alloc.c:1833:
+				struct zone * lower_zone = pgdat->node_zones + idx;

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#306: FILE: mm/page_alloc.c:1835:
+				lower_zone->lowmem_reserve[j] = present_pages / sysctl_lowmem_reserve_ratio[idx];

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: mm/page_alloc.c:1959:
+int lowmem_reserve_ratio_sysctl_handler(ctl_table *table, int write,
 		 struct file *file, void __user *buffer, size_t *length, loff_t *ppos)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221083.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 9 warnings, 7 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221083.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
