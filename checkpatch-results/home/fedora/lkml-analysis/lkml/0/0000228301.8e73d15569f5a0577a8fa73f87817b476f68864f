WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
Here is the revised adm1026 driver port for kernel 2.6.10-rc2.  It takes into

WARNING:TYPO_SPELLING: 'controled' may be misspelled - perhaps 'controlled'?
#80: 
controled via:
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#126: FILE: drivers/i2c/chips/Kconfig:35:
+config SENSORS_ADM1026
+	tristate "Analog Devices ADM1026 and compatibles"
+	depends on I2C && EXPERIMENTAL
+	select I2C_SENSOR
+	help
+	  If you say yes here you get support for Analog Devices ADM1026
+	  This driver can also be built as a module.  If so, the module
+	  will be called adm1026.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#153: FILE: drivers/i2c/chips/adm1026.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#154: FILE: drivers/i2c/chips/adm1026.c:2:
+/*
+    adm1026.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#174: FILE: drivers/i2c/chips/adm1026.c:22:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#175: FILE: drivers/i2c/chips/adm1026.c:23:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: drivers/i2c/chips/adm1026.c:42:
+^I^I^I^I-1, -1, -1, -1, -1, -1, -1, -1 }; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/i2c/chips/adm1026.c:50:
+module_param_array(gpio_input,int,NULL,0);
                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/i2c/chips/adm1026.c:50:
+module_param_array(gpio_input,int,NULL,0);
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/i2c/chips/adm1026.c:50:
+module_param_array(gpio_input,int,NULL,0);
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: drivers/i2c/chips/adm1026.c:51:
+MODULE_PARM_DESC(gpio_input,"List of GPIO pins (0-16) to program as inputs");
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: drivers/i2c/chips/adm1026.c:52:
+module_param_array(gpio_output,int,NULL,0);
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: drivers/i2c/chips/adm1026.c:52:
+module_param_array(gpio_output,int,NULL,0);
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: drivers/i2c/chips/adm1026.c:52:
+module_param_array(gpio_output,int,NULL,0);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#205: FILE: drivers/i2c/chips/adm1026.c:53:
+MODULE_PARM_DESC(gpio_output,"List of GPIO pins (0-16) to program as "
                             ^

WARNING:SPLIT_STRING: quoted string split across lines
#206: FILE: drivers/i2c/chips/adm1026.c:54:
+MODULE_PARM_DESC(gpio_output,"List of GPIO pins (0-16) to program as "
+	"outputs");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: drivers/i2c/chips/adm1026.c:55:
+module_param_array(gpio_inverted,int,NULL,0);
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: drivers/i2c/chips/adm1026.c:55:
+module_param_array(gpio_inverted,int,NULL,0);
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: drivers/i2c/chips/adm1026.c:55:
+module_param_array(gpio_inverted,int,NULL,0);
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: drivers/i2c/chips/adm1026.c:56:
+MODULE_PARM_DESC(gpio_inverted,"List of GPIO pins (0-16) to program as "
                               ^

WARNING:SPLIT_STRING: quoted string split across lines
#209: FILE: drivers/i2c/chips/adm1026.c:57:
+MODULE_PARM_DESC(gpio_inverted,"List of GPIO pins (0-16) to program as "
+	"inverted");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: drivers/i2c/chips/adm1026.c:58:
+module_param_array(gpio_normal,int,NULL,0);
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: drivers/i2c/chips/adm1026.c:58:
+module_param_array(gpio_normal,int,NULL,0);
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: drivers/i2c/chips/adm1026.c:58:
+module_param_array(gpio_normal,int,NULL,0);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/i2c/chips/adm1026.c:59:
+MODULE_PARM_DESC(gpio_normal,"List of GPIO pins (0-16) to program as "
                             ^

WARNING:SPLIT_STRING: quoted string split across lines
#212: FILE: drivers/i2c/chips/adm1026.c:60:
+MODULE_PARM_DESC(gpio_normal,"List of GPIO pins (0-16) to program as "
+	"normal/non-inverted");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/i2c/chips/adm1026.c:61:
+module_param_array(gpio_fan,int,NULL,0);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/i2c/chips/adm1026.c:61:
+module_param_array(gpio_fan,int,NULL,0);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/i2c/chips/adm1026.c:61:
+module_param_array(gpio_fan,int,NULL,0);
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#214: FILE: drivers/i2c/chips/adm1026.c:62:
+MODULE_PARM_DESC(gpio_fan,"List of GPIO pins (0-7) to program as fan tachs");
                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: drivers/i2c/chips/adm1026.c:171:
+/* Conversions. Rounding and limit checking is only done on the TO_REG $

WARNING:TYPO_SPELLING: 'acording' may be misspelled - perhaps 'according'?
#328: FILE: drivers/i2c/chips/adm1026.c:176:
+/* IN are scaled acording to built-in resistors.  These are the
                  ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: drivers/i2c/chips/adm1026.c:188:
+^I^I2250, 2250, 2250, 2250, 2250, 2250, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: drivers/i2c/chips/adm1026.c:189:
+^I^I1875, 1875, 1875, 1875, 3000, 3330, $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#345: FILE: drivers/i2c/chips/adm1026.c:193:
+#define SCALE(val,from,to) (((val)*(to) + ((from)/2))/(from))
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#345: FILE: drivers/i2c/chips/adm1026.c:193:
+#define SCALE(val,from,to) (((val)*(to) + ((from)/2))/(from))
                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#345: FILE: drivers/i2c/chips/adm1026.c:193:
+#define SCALE(val,from,to) (((val)*(to) + ((from)/2))/(from))
                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#345: FILE: drivers/i2c/chips/adm1026.c:193:
+#define SCALE(val,from,to) (((val)*(to) + ((from)/2))/(from))
                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#345: FILE: drivers/i2c/chips/adm1026.c:193:
+#define SCALE(val,from,to) (((val)*(to) + ((from)/2))/(from))
                                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'from' - possible side-effects?
#345: FILE: drivers/i2c/chips/adm1026.c:193:
+#define SCALE(val,from,to) (((val)*(to) + ((from)/2))/(from))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/i2c/chips/adm1026.c:194:
+#define INS_TO_REG(n,val)  (SENSORS_LIMIT(SCALE(val,adm1026_scaling[n],192),\
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/i2c/chips/adm1026.c:194:
+#define INS_TO_REG(n,val)  (SENSORS_LIMIT(SCALE(val,adm1026_scaling[n],192),\
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/i2c/chips/adm1026.c:194:
+#define INS_TO_REG(n,val)  (SENSORS_LIMIT(SCALE(val,adm1026_scaling[n],192),\
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: drivers/i2c/chips/adm1026.c:195:
+	0,255))
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: drivers/i2c/chips/adm1026.c:196:
+#define INS_FROM_REG(n,val) (SCALE(val,192,adm1026_scaling[n]))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: drivers/i2c/chips/adm1026.c:196:
+#define INS_FROM_REG(n,val) (SCALE(val,192,adm1026_scaling[n]))
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: drivers/i2c/chips/adm1026.c:196:
+#define INS_FROM_REG(n,val) (SCALE(val,192,adm1026_scaling[n]))
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: drivers/i2c/chips/adm1026.c:202:
+#define FAN_TO_REG(val,div)  ((val)<=0 ? 0xff : SENSORS_LIMIT(1350000/((val)*\
                       ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#354: FILE: drivers/i2c/chips/adm1026.c:202:
+#define FAN_TO_REG(val,div)  ((val)<=0 ? 0xff : SENSORS_LIMIT(1350000/((val)*\
                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#354: FILE: drivers/i2c/chips/adm1026.c:202:
+#define FAN_TO_REG(val,div)  ((val)<=0 ? 0xff : SENSORS_LIMIT(1350000/((val)*\
                                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxE)
#354: FILE: drivers/i2c/chips/adm1026.c:202:
+#define FAN_TO_REG(val,div)  ((val)<=0 ? 0xff : SENSORS_LIMIT(1350000/((val)*\
                                                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#354: FILE: drivers/i2c/chips/adm1026.c:202:
+#define FAN_TO_REG(val,div)  ((val)<=0 ? 0xff : SENSORS_LIMIT(1350000/((val)*\
+	(div)),1,254)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: drivers/i2c/chips/adm1026.c:203:
+^I(div)),1,254)) $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#355: FILE: drivers/i2c/chips/adm1026.c:203:
+	(div)),1,254)) 
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#355: FILE: drivers/i2c/chips/adm1026.c:203:
+	(div)),1,254)) 
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: drivers/i2c/chips/adm1026.c:204:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==0xff ? 0 : 1350000/((val)*\
                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#356: FILE: drivers/i2c/chips/adm1026.c:204:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==0xff ? 0 : 1350000/((val)*\
                                     ^

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#356: FILE: drivers/i2c/chips/adm1026.c:204:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==0xff ? 0 : 1350000/((val)*\
                                        ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#356: FILE: drivers/i2c/chips/adm1026.c:204:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==0xff ? 0 : 1350000/((val)*\
                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#356: FILE: drivers/i2c/chips/adm1026.c:204:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==0xff ? 0 : 1350000/((val)*\
                                           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#356: FILE: drivers/i2c/chips/adm1026.c:204:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==0xff ? 0 : 1350000/((val)*\
                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#356: FILE: drivers/i2c/chips/adm1026.c:204:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==0xff ? 0 : 1350000/((val)*\
                                                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxE)
#356: FILE: drivers/i2c/chips/adm1026.c:204:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==0xff ? 0 : 1350000/((val)*\
                                                                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#356: FILE: drivers/i2c/chips/adm1026.c:204:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==0xff ? 0 : 1350000/((val)*\
+	(div)))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#358: FILE: drivers/i2c/chips/adm1026.c:206:
+#define DIV_FROM_REG(val) (1<<(val))
                             ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#359: FILE: drivers/i2c/chips/adm1026.c:207:
+#define DIV_TO_REG(val) ((val)>=8 ? 3 : (val)>=4 ? 2 : (val)>=2 ? 1 : 0)
                               ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#359: FILE: drivers/i2c/chips/adm1026.c:207:
+#define DIV_TO_REG(val) ((val)>=8 ? 3 : (val)>=4 ? 2 : (val)>=2 ? 1 : 0)
                                              ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#359: FILE: drivers/i2c/chips/adm1026.c:207:
+#define DIV_TO_REG(val) ((val)>=8 ? 3 : (val)>=4 ? 2 : (val)>=2 ? 1 : 0)
                                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#359: FILE: drivers/i2c/chips/adm1026.c:207:
+#define DIV_TO_REG(val) ((val)>=8 ? 3 : (val)>=4 ? 2 : (val)>=2 ? 1 : 0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#362: FILE: drivers/i2c/chips/adm1026.c:210:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)+((val)<0 ? -500 : 500))/1000,\
                                               ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#362: FILE: drivers/i2c/chips/adm1026.c:210:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)+((val)<0 ? -500 : 500))/1000,\
                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#362: FILE: drivers/i2c/chips/adm1026.c:210:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)+((val)<0 ? -500 : 500))/1000,\
                                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#362: FILE: drivers/i2c/chips/adm1026.c:210:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)+((val)<0 ? -500 : 500))/1000,\
+	-127,127))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/i2c/chips/adm1026.c:211:
+	-127,127))
 	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#365: FILE: drivers/i2c/chips/adm1026.c:213:
+#define OFFSET_TO_REG(val) (SENSORS_LIMIT(((val)+((val)<0 ? -500 : 500))/1000,\
                                                 ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#365: FILE: drivers/i2c/chips/adm1026.c:213:
+#define OFFSET_TO_REG(val) (SENSORS_LIMIT(((val)+((val)<0 ? -500 : 500))/1000,\
                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#365: FILE: drivers/i2c/chips/adm1026.c:213:
+#define OFFSET_TO_REG(val) (SENSORS_LIMIT(((val)+((val)<0 ? -500 : 500))/1000,\
                                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#365: FILE: drivers/i2c/chips/adm1026.c:213:
+#define OFFSET_TO_REG(val) (SENSORS_LIMIT(((val)+((val)<0 ? -500 : 500))/1000,\
+	-127,127))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: drivers/i2c/chips/adm1026.c:214:
+	-127,127))
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: drivers/i2c/chips/adm1026.c:217:
+#define PWM_TO_REG(val) (SENSORS_LIMIT(val,0,255))
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: drivers/i2c/chips/adm1026.c:217:
+#define PWM_TO_REG(val) (SENSORS_LIMIT(val,0,255))
                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#373: FILE: drivers/i2c/chips/adm1026.c:221:
+#define PWM_MIN_FROM_REG(val) (((val) & 0xf0) + ((val) >> 4))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/i2c/chips/adm1026.c:223:
+/* Analog output is a voltage, and scaled to millivolts.  The datasheet $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: drivers/i2c/chips/adm1026.c:224:
+ *   indicates that the DAC could be used to drive the fans, but in our $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: drivers/i2c/chips/adm1026.c:227:
+#define DAC_TO_REG(val) (SENSORS_LIMIT(((((val)*255)+500)/2500),0,255)) $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#379: FILE: drivers/i2c/chips/adm1026.c:227:
+#define DAC_TO_REG(val) (SENSORS_LIMIT(((((val)*255)+500)/2500),0,255)) 
                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#379: FILE: drivers/i2c/chips/adm1026.c:227:
+#define DAC_TO_REG(val) (SENSORS_LIMIT(((((val)*255)+500)/2500),0,255)) 
                                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#379: FILE: drivers/i2c/chips/adm1026.c:227:
+#define DAC_TO_REG(val) (SENSORS_LIMIT(((((val)*255)+500)/2500),0,255)) 
                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: drivers/i2c/chips/adm1026.c:227:
+#define DAC_TO_REG(val) (SENSORS_LIMIT(((((val)*255)+500)/2500),0,255)) 
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: drivers/i2c/chips/adm1026.c:227:
+#define DAC_TO_REG(val) (SENSORS_LIMIT(((((val)*255)+500)/2500),0,255)) 
                                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#380: FILE: drivers/i2c/chips/adm1026.c:228:
+#define DAC_FROM_REG(val) (((val)*2500)/255)
                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#380: FILE: drivers/i2c/chips/adm1026.c:228:
+#define DAC_FROM_REG(val) (((val)*2500)/255)
                                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#403: FILE: drivers/i2c/chips/adm1026.c:251:
+ * allocated, when a new client structure is allocated. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: drivers/i2c/chips/adm1026.c:297:
+static int adm1026_detect(struct i2c_adapter *adapter, int address,
+	int kind);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: drivers/i2c/chips/adm1026.c:301:
+^Iint value); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: drivers/i2c/chips/adm1026.c:301:
+static int adm1026_write_value(struct i2c_client *client, u8 register,
+	int value); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/i2c/chips/adm1026.c:303:
+static void adm1026_fixup_gpio(struct i2c_client *client); $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#459: FILE: drivers/i2c/chips/adm1026.c:307:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#472: FILE: drivers/i2c/chips/adm1026.c:320:
+	if (!(adapter->class & I2C_CLASS_HWMON)) {
+		return 0;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: drivers/i2c/chips/adm1026.c:366:
+        dev_dbg(&client->dev,"(%d): Initializing device\n", client->id);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/i2c/chips/adm1026.c:366:
+        dev_dbg(&client->dev,"(%d): Initializing device\n", client->id);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: drivers/i2c/chips/adm1026.c:366:
+        dev_dbg(&client->dev,"(%d): Initializing device\n", client->id);
                             ^

WARNING:SPLIT_STRING: quoted string split across lines
#529: FILE: drivers/i2c/chips/adm1026.c:377:
+		dev_dbg(&client->dev, "(%d): Monitoring not currently "
+			"enabled.\n", client->id);

WARNING:SPLIT_STRING: quoted string split across lines
#533: FILE: drivers/i2c/chips/adm1026.c:381:
+		dev_dbg(&client->dev, "(%d): SMBALERT interrupts are "
+			"enabled.\n", client->id);

WARNING:SPLIT_STRING: quoted string split across lines
#537: FILE: drivers/i2c/chips/adm1026.c:385:
+		dev_dbg(&client->dev, "(%d): in8 and in9 enabled. "
+			"temp3 disabled.\n", client->id);

WARNING:SPLIT_STRING: quoted string split across lines
#540: FILE: drivers/i2c/chips/adm1026.c:388:
+		dev_dbg(&client->dev, "(%d): temp3 enabled.  in8 and "
+			"in9 disabled.\n", client->id);

WARNING:SPLIT_STRING: quoted string split across lines
#544: FILE: drivers/i2c/chips/adm1026.c:392:
+		dev_dbg(&client->dev, "(%d): Automatic THERM, PWM, "
+			"and temp limits enabled.\n", client->id);

WARNING:SPLIT_STRING: quoted string split across lines
#550: FILE: drivers/i2c/chips/adm1026.c:398:
+		dev_dbg(&client->dev, "(%d): GPIO16 enabled.  THERM"
+			"pin disabled.\n", client->id);

WARNING:MISSING_SPACE: break quoted strings at a space character
#550: FILE: drivers/i2c/chips/adm1026.c:398:
+		dev_dbg(&client->dev, "(%d): GPIO16 enabled.  THERM"
+			"pin disabled.\n", client->id);

WARNING:SPLIT_STRING: quoted string split across lines
#553: FILE: drivers/i2c/chips/adm1026.c:401:
+		dev_dbg(&client->dev, "(%d): THERM pin enabled.  "
+			"GPIO16 disabled.\n", client->id);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#564: FILE: drivers/i2c/chips/adm1026.c:412:
+	for (i = 0;i <= 15;++i) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#564: FILE: drivers/i2c/chips/adm1026.c:412:
+	for (i = 0;i <= 15;++i) {
 	                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: drivers/i2c/chips/adm1026.c:415:
+			value = adm1026_read_value(client,
+					ADM1026_REG_GPIO_CFG_0_3 + i/4);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#567: FILE: drivers/i2c/chips/adm1026.c:415:
+					ADM1026_REG_GPIO_CFG_0_3 + i/4);
 					                            ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#581: FILE: drivers/i2c/chips/adm1026.c:429:
+	if (client->id == 0
+	    && (gpio_input[0] != -1 || gpio_output[0] != -1

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#582: FILE: drivers/i2c/chips/adm1026.c:430:
+	    && (gpio_input[0] != -1 || gpio_output[0] != -1
+		|| gpio_inverted[0] != -1 || gpio_normal[0] != -1

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#583: FILE: drivers/i2c/chips/adm1026.c:431:
+		|| gpio_inverted[0] != -1 || gpio_normal[0] != -1
+		|| gpio_fan[0] != -1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: drivers/i2c/chips/adm1026.c:440:
+^I *   can be run by the user.  We DO set the default $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: drivers/i2c/chips/adm1026.c:443:
+^I *   without first setting a value for pwm1.auto_pwm_min $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#598: FILE: drivers/i2c/chips/adm1026.c:446:
+	data->pwm1.auto_pwm_min=255;
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#615: FILE: drivers/i2c/chips/adm1026.c:463:
+	dev_dbg(&client->dev, "(%d): GPIO config is:",
+			    client->id);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#616: FILE: drivers/i2c/chips/adm1026.c:464:
+	for (i = 0;i <= 7;++i) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#616: FILE: drivers/i2c/chips/adm1026.c:464:
+	for (i = 0;i <= 7;++i) {
 	                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#627: FILE: drivers/i2c/chips/adm1026.c:475:
+	for (i = 8;i <= 15;++i) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#627: FILE: drivers/i2c/chips/adm1026.c:475:
+	for (i = 8;i <= 15;++i) {
 	                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#656: FILE: drivers/i2c/chips/adm1026.c:504:
+	for (i = 0;i <= 16;++i) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#656: FILE: drivers/i2c/chips/adm1026.c:504:
+	for (i = 0;i <= 16;++i) {
 	                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#657: FILE: drivers/i2c/chips/adm1026.c:505:
+		if (gpio_output[i] >= 0 && gpio_output[i] <= 16) {
+			data->gpio_config[gpio_output[i]] |= 0x01;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#661: FILE: drivers/i2c/chips/adm1026.c:509:
+		if (gpio_output[i] >= 0 && gpio_output[i] <= 7) {
+			data->config2 |= 1 << gpio_output[i];
+		}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#667: FILE: drivers/i2c/chips/adm1026.c:515:
+	for (i = 0;i <= 16;++i) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#667: FILE: drivers/i2c/chips/adm1026.c:515:
+	for (i = 0;i <= 16;++i) {
 	                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#668: FILE: drivers/i2c/chips/adm1026.c:516:
+		if (gpio_input[i] >= 0 && gpio_input[i] <= 16) {
+			data->gpio_config[gpio_input[i]] &= ~ 0x01;
+		}

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#669: FILE: drivers/i2c/chips/adm1026.c:517:
+			data->gpio_config[gpio_input[i]] &= ~ 0x01;
 			                                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#672: FILE: drivers/i2c/chips/adm1026.c:520:
+		if (gpio_input[i] >= 0 && gpio_input[i] <= 7) {
+			data->config2 |= 1 << gpio_input[i];
+		}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#678: FILE: drivers/i2c/chips/adm1026.c:526:
+	for (i = 0;i <= 16;++i) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#678: FILE: drivers/i2c/chips/adm1026.c:526:
+	for (i = 0;i <= 16;++i) {
 	                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#679: FILE: drivers/i2c/chips/adm1026.c:527:
+		if (gpio_inverted[i] >= 0 && gpio_inverted[i] <= 16) {
+			data->gpio_config[gpio_inverted[i]] &= ~ 0x02;
+		}

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#680: FILE: drivers/i2c/chips/adm1026.c:528:
+			data->gpio_config[gpio_inverted[i]] &= ~ 0x02;
 			                                       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#685: FILE: drivers/i2c/chips/adm1026.c:533:
+	for (i = 0;i <= 16;++i) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#685: FILE: drivers/i2c/chips/adm1026.c:533:
+	for (i = 0;i <= 16;++i) {
 	                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#686: FILE: drivers/i2c/chips/adm1026.c:534:
+		if (gpio_normal[i] >= 0 && gpio_normal[i] <= 16) {
+			data->gpio_config[gpio_normal[i]] |= 0x02;
+		}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#692: FILE: drivers/i2c/chips/adm1026.c:540:
+	for (i = 0;i <= 7;++i) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#692: FILE: drivers/i2c/chips/adm1026.c:540:
+	for (i = 0;i <= 7;++i) {
 	                 ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#693: FILE: drivers/i2c/chips/adm1026.c:541:
+		if (gpio_fan[i] >= 0 && gpio_fan[i] <= 7) {
+			data->config2 &= ~(1 << gpio_fan[i]);
+		}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#703: FILE: drivers/i2c/chips/adm1026.c:551:
+	for (i = 15, value = 0;i >= 0;--i) {
 	                      ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#703: FILE: drivers/i2c/chips/adm1026.c:551:
+	for (i = 15, value = 0;i >= 0;--i) {
 	                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#708: FILE: drivers/i2c/chips/adm1026.c:556:
+			adm1026_write_value(client,
+					ADM1026_REG_GPIO_CFG_0_3 + i/4,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#708: FILE: drivers/i2c/chips/adm1026.c:556:
+					ADM1026_REG_GPIO_CFG_0_3 + i/4,
 					                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#718: FILE: drivers/i2c/chips/adm1026.c:566:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#728: FILE: drivers/i2c/chips/adm1026.c:576:
+	if (!data->valid
+	    || (jiffies - data->last_reading > ADM1026_DATA_INTERVAL)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: drivers/i2c/chips/adm1026.c:578:
+^I^Idev_dbg(&client->dev,"(%d): Reading sensor values\n", $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: drivers/i2c/chips/adm1026.c:578:
+		dev_dbg(&client->dev,"(%d): Reading sensor values\n", 
 		                    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#732: FILE: drivers/i2c/chips/adm1026.c:580:
+		for (i = 0;i <= 16;++i) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#732: FILE: drivers/i2c/chips/adm1026.c:580:
+		for (i = 0;i <= 16;++i) {
 		                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#737: FILE: drivers/i2c/chips/adm1026.c:585:
+		for (i = 0;i <= 7;++i) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#737: FILE: drivers/i2c/chips/adm1026.c:585:
+		for (i = 0;i <= 7;++i) {
 		                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#742: FILE: drivers/i2c/chips/adm1026.c:590:
+		for (i = 0;i <= 2;++i) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#742: FILE: drivers/i2c/chips/adm1026.c:590:
+		for (i = 0;i <= 2;++i) {
 		                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#744: FILE: drivers/i2c/chips/adm1026.c:592:
+			 *   "conversion" in the assignment   */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: drivers/i2c/chips/adm1026.c:597:
+^I^Idata->pwm1.pwm = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/i2c/chips/adm1026.c:598:
+		data->pwm1.pwm = adm1026_read_value(client, 
+			ADM1026_REG_PWM);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#751: FILE: drivers/i2c/chips/adm1026.c:599:
+^I^Idata->analog_out = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#752: FILE: drivers/i2c/chips/adm1026.c:600:
+		data->analog_out = adm1026_read_value(client, 
+			ADM1026_REG_DAC);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: drivers/i2c/chips/adm1026.c:614:
+^I^Igpio |= adm1026_read_value(client, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: drivers/i2c/chips/adm1026.c:617:
+^I^Igpio |= adm1026_read_value(client, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: drivers/i2c/chips/adm1026.c:624:
+^Iif (!data->valid || (jiffies - data->last_config > $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#779: FILE: drivers/i2c/chips/adm1026.c:627:
+^I^Idev_dbg(&client->dev, "(%d): Reading config values\n", $

ERROR:SPACING: space required after that ';' (ctx:VxV)
#781: FILE: drivers/i2c/chips/adm1026.c:629:
+		for (i = 0;i <= 16;++i) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#781: FILE: drivers/i2c/chips/adm1026.c:629:
+		for (i = 0;i <= 16;++i) {
 		                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: drivers/i2c/chips/adm1026.c:630:
+^I^I^Idata->in_min[i] = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#783: FILE: drivers/i2c/chips/adm1026.c:631:
+			data->in_min[i] = adm1026_read_value(client, 
+				ADM1026_REG_IN_MIN[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#784: FILE: drivers/i2c/chips/adm1026.c:632:
+^I^I^Idata->in_max[i] = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: drivers/i2c/chips/adm1026.c:633:
+			data->in_max[i] = adm1026_read_value(client, 
+				ADM1026_REG_IN_MAX[i]);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#791: FILE: drivers/i2c/chips/adm1026.c:639:
+		for (i = 0;i <= 7;++i) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#791: FILE: drivers/i2c/chips/adm1026.c:639:
+		for (i = 0;i <= 7;++i) {
 		                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: drivers/i2c/chips/adm1026.c:640:
+^I^I^Idata->fan_min[i] = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#793: FILE: drivers/i2c/chips/adm1026.c:641:
+			data->fan_min[i] = adm1026_read_value(client, 
+				ADM1026_REG_FAN_MIN(i));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: drivers/i2c/chips/adm1026.c:647:
+^I^I^I/* NOTE: temp_xxx[] are s8 and we assume 2's $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: drivers/i2c/chips/adm1026.c:650:
+^I^I^Idata->temp_min[i] = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#803: FILE: drivers/i2c/chips/adm1026.c:651:
+			data->temp_min[i] = adm1026_read_value(client, 
+				ADM1026_REG_TEMP_MIN[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: drivers/i2c/chips/adm1026.c:652:
+^I^I^Idata->temp_max[i] = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#805: FILE: drivers/i2c/chips/adm1026.c:653:
+			data->temp_max[i] = adm1026_read_value(client, 
+				ADM1026_REG_TEMP_MAX[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#806: FILE: drivers/i2c/chips/adm1026.c:654:
+^I^I^Idata->temp_tmin[i] = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#807: FILE: drivers/i2c/chips/adm1026.c:655:
+			data->temp_tmin[i] = adm1026_read_value(client, 
+				ADM1026_REG_TEMP_TMIN[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: drivers/i2c/chips/adm1026.c:656:
+^I^I^Idata->temp_crit[i] = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: drivers/i2c/chips/adm1026.c:657:
+			data->temp_crit[i] = adm1026_read_value(client, 
+				ADM1026_REG_TEMP_THERM[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#810: FILE: drivers/i2c/chips/adm1026.c:658:
+^I^I^Idata->temp_offset[i] = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: drivers/i2c/chips/adm1026.c:659:
+			data->temp_offset[i] = adm1026_read_value(client, 
+				ADM1026_REG_TEMP_OFFSET[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#826: FILE: drivers/i2c/chips/adm1026.c:674:
+^I^Igpio |= adm1026_read_value(client, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#833: FILE: drivers/i2c/chips/adm1026.c:681:
+^I^Idata->config1 = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: drivers/i2c/chips/adm1026.c:682:
+		data->config1 = adm1026_read_value(client, 
+			ADM1026_REG_CONFIG1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: drivers/i2c/chips/adm1026.c:685:
+^I^I^Idata->pwm1.auto_pwm_min = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: drivers/i2c/chips/adm1026.c:689:
+^I^Idata->config2 = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#842: FILE: drivers/i2c/chips/adm1026.c:690:
+		data->config2 = adm1026_read_value(client, 
+			ADM1026_REG_CONFIG2);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: drivers/i2c/chips/adm1026.c:691:
+^I^Idata->config3 = adm1026_read_value(client, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: drivers/i2c/chips/adm1026.c:692:
+		data->config3 = adm1026_read_value(client, 
+			ADM1026_REG_CONFIG3);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#848: FILE: drivers/i2c/chips/adm1026.c:696:
+		for (i = 0;i <= 15;++i) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#848: FILE: drivers/i2c/chips/adm1026.c:696:
+		for (i = 0;i <= 15;++i) {
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: drivers/i2c/chips/adm1026.c:699:
+				value = adm1026_read_value(client,
+					    ADM1026_REG_GPIO_CFG_0_3 + i/4);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#851: FILE: drivers/i2c/chips/adm1026.c:699:
+					    ADM1026_REG_GPIO_CFG_0_3 + i/4);
 					                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#860: FILE: drivers/i2c/chips/adm1026.c:708:
+^Idev_dbg(&client->dev, "(%d): Setting VID from GPIO11-15.\n", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#871: FILE: drivers/i2c/chips/adm1026.c:719:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", INS_FROM_REG(nr, data->in[nr]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#871: FILE: drivers/i2c/chips/adm1026.c:719:
+	return sprintf(buf,"%d\n", INS_FROM_REG(nr, data->in[nr]));
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#873: FILE: drivers/i2c/chips/adm1026.c:721:
+static ssize_t show_in_min(struct device *dev, char *buf, int nr) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#873: FILE: drivers/i2c/chips/adm1026.c:721:
+}
+static ssize_t show_in_min(struct device *dev, char *buf, int nr) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#875: FILE: drivers/i2c/chips/adm1026.c:723:
+^Istruct adm1026_data *data = adm1026_update_device(dev); $

WARNING:LINE_SPACING: Missing a blank line after declarations
#876: FILE: drivers/i2c/chips/adm1026.c:724:
+	struct adm1026_data *data = adm1026_update_device(dev); 
+	return sprintf(buf,"%d\n", INS_FROM_REG(nr, data->in_min[nr]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#876: FILE: drivers/i2c/chips/adm1026.c:724:
+	return sprintf(buf,"%d\n", INS_FROM_REG(nr, data->in_min[nr]));
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: drivers/i2c/chips/adm1026.c:726:
+static ssize_t set_in_min(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#878: FILE: drivers/i2c/chips/adm1026.c:726:
+}
+static ssize_t set_in_min(struct device *dev, const char *buf, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#879: FILE: drivers/i2c/chips/adm1026.c:727:
+static ssize_t set_in_min(struct device *dev, const char *buf, 
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#886: FILE: drivers/i2c/chips/adm1026.c:734:
+	val = simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_WHITESPACE: trailing whitespace
#890: FILE: drivers/i2c/chips/adm1026.c:738:
+^Ireturn count; $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#892: FILE: drivers/i2c/chips/adm1026.c:740:
+}
+static ssize_t show_in_max(struct device *dev, char *buf, int nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#895: FILE: drivers/i2c/chips/adm1026.c:743:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", INS_FROM_REG(nr, data->in_max[nr]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#895: FILE: drivers/i2c/chips/adm1026.c:743:
+	return sprintf(buf,"%d\n", INS_FROM_REG(nr, data->in_max[nr]));
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#897: FILE: drivers/i2c/chips/adm1026.c:745:
+}
+static ssize_t set_in_max(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#898: FILE: drivers/i2c/chips/adm1026.c:746:
+static ssize_t set_in_max(struct device *dev, const char *buf,
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#905: FILE: drivers/i2c/chips/adm1026.c:753:
+	val = simple_strtol(buf, NULL, 10);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#912: FILE: drivers/i2c/chips/adm1026.c:760:
+#define in_reg(offset)                                                    \
+static ssize_t show_in##offset (struct device *dev, char *buf)            \
+{                                                                         \
+	return show_in(dev, buf, offset);                                 \
+}                                                                         \
+static ssize_t show_in##offset##_min (struct device *dev, char *buf)      \
+{                                                                         \
+	return show_in_min(dev, buf, offset);                             \
+}                                                                         \
+static ssize_t set_in##offset##_min (struct device *dev,                  \
+	const char *buf, size_t count)                                    \
+{                                                                         \
+	return set_in_min(dev, buf, count, offset);                       \
+}                                                                         \
+static ssize_t show_in##offset##_max (struct device *dev, char *buf)      \
+{                                                                         \
+	return show_in_max(dev, buf, offset);                             \
+}                                                                         \
+static ssize_t set_in##offset##_max (struct device *dev,                  \
+	const char *buf, size_t count)                                    \
+{                                                                         \
+	return set_in_max(dev, buf, count, offset);                       \
+}                                                                         \
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, show_in##offset, NULL);   \
+static DEVICE_ATTR(in##offset##_min, S_IRUGO | S_IWUSR,                   \
+		show_in##offset##_min, set_in##offset##_min);             \
+static DEVICE_ATTR(in##offset##_max, S_IRUGO | S_IWUSR,                   \
+		show_in##offset##_max, set_in##offset##_max);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#912: FILE: drivers/i2c/chips/adm1026.c:760:
+#define in_reg(offset)                                                    \
+static ssize_t show_in##offset (struct device *dev, char *buf)            \
+{                                                                         \
+	return show_in(dev, buf, offset);                                 \
+}                                                                         \
+static ssize_t show_in##offset##_min (struct device *dev, char *buf)      \
+{                                                                         \
+	return show_in_min(dev, buf, offset);                             \
+}                                                                         \
+static ssize_t set_in##offset##_min (struct device *dev,                  \
+	const char *buf, size_t count)                                    \
+{                                                                         \
+	return set_in_min(dev, buf, count, offset);                       \
+}                                                                         \
+static ssize_t show_in##offset##_max (struct device *dev, char *buf)      \
+{                                                                         \
+	return show_in_max(dev, buf, offset);                             \
+}                                                                         \
+static ssize_t set_in##offset##_max (struct device *dev,                  \
+	const char *buf, size_t count)                                    \
+{                                                                         \
+	return set_in_max(dev, buf, count, offset);                       \
+}                                                                         \
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, show_in##offset, NULL);   \
+static DEVICE_ATTR(in##offset##_min, S_IRUGO | S_IWUSR,                   \
+		show_in##offset##_min, set_in##offset##_min);             \
+static DEVICE_ATTR(in##offset##_max, S_IRUGO | S_IWUSR,                   \
+		show_in##offset##_max, set_in##offset##_max);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#913: FILE: drivers/i2c/chips/adm1026.c:761:
+static ssize_t show_in##offset (struct device *dev, char *buf)            \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#917: FILE: drivers/i2c/chips/adm1026.c:765:
+static ssize_t show_in##offset##_min (struct device *dev, char *buf)      \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#921: FILE: drivers/i2c/chips/adm1026.c:769:
+static ssize_t set_in##offset##_min (struct device *dev,                  \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#926: FILE: drivers/i2c/chips/adm1026.c:774:
+static ssize_t show_in##offset##_max (struct device *dev, char *buf)      \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: drivers/i2c/chips/adm1026.c:778:
+static ssize_t set_in##offset##_max (struct device *dev,                  \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#935: FILE: drivers/i2c/chips/adm1026.c:783:
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, show_in##offset, NULL);   \

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#936: FILE: drivers/i2c/chips/adm1026.c:784:
+static DEVICE_ATTR(in##offset##_min, S_IRUGO | S_IWUSR,                   \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#938: FILE: drivers/i2c/chips/adm1026.c:786:
+static DEVICE_ATTR(in##offset##_max, S_IRUGO | S_IWUSR,                   \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#941: FILE: drivers/i2c/chips/adm1026.c:789:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#962: FILE: drivers/i2c/chips/adm1026.c:810:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", INS_FROM_REG(16, data->in[16]) -

ERROR:SPACING: space required after that ',' (ctx:VxV)
#962: FILE: drivers/i2c/chips/adm1026.c:810:
+	return sprintf(buf,"%d\n", INS_FROM_REG(16, data->in[16]) -
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: drivers/i2c/chips/adm1026.c:813:
+static ssize_t show_in16_min(struct device *dev, char *buf) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#965: FILE: drivers/i2c/chips/adm1026.c:813:
+}
+static ssize_t show_in16_min(struct device *dev, char *buf) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#967: FILE: drivers/i2c/chips/adm1026.c:815:
+^Istruct adm1026_data *data = adm1026_update_device(dev); $

WARNING:LINE_SPACING: Missing a blank line after declarations
#968: FILE: drivers/i2c/chips/adm1026.c:816:
+	struct adm1026_data *data = adm1026_update_device(dev); 
+	return sprintf(buf,"%d\n", INS_FROM_REG(16, data->in_min[16])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#968: FILE: drivers/i2c/chips/adm1026.c:816:
+	return sprintf(buf,"%d\n", INS_FROM_REG(16, data->in_min[16])
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#971: FILE: drivers/i2c/chips/adm1026.c:819:
+}
+static ssize_t set_in16_min(struct device *dev, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#978: FILE: drivers/i2c/chips/adm1026.c:826:
+	val = simple_strtol(buf, NULL, 10);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#982: FILE: drivers/i2c/chips/adm1026.c:830:
+^Ireturn count; $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#984: FILE: drivers/i2c/chips/adm1026.c:832:
+}
+static ssize_t show_in16_max(struct device *dev, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#987: FILE: drivers/i2c/chips/adm1026.c:835:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", INS_FROM_REG(16, data->in_max[16])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#987: FILE: drivers/i2c/chips/adm1026.c:835:
+	return sprintf(buf,"%d\n", INS_FROM_REG(16, data->in_max[16])
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#990: FILE: drivers/i2c/chips/adm1026.c:838:
+}
+static ssize_t set_in16_max(struct device *dev, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#997: FILE: drivers/i2c/chips/adm1026.c:845:
+	val = simple_strtol(buf, NULL, 10);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#998: FILE: drivers/i2c/chips/adm1026.c:846:
+	data->in_max[16] = INS_TO_REG(16, val+NEG12_OFFSET);
 	                                     ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in16' to 'in16_input_show'
#1002: FILE: drivers/i2c/chips/adm1026.c:850:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1004: FILE: drivers/i2c/chips/adm1026.c:852:
+static DEVICE_ATTR(in16_input, S_IRUGO, show_in16, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in16_min' to 'in16_min_show' 'set_in16_min' to 'in16_min_store'
#1005: FILE: drivers/i2c/chips/adm1026.c:853:
+static DEVICE_ATTR(in16_min, S_IRUGO | S_IWUSR, show_in16_min, set_in16_min);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1005: FILE: drivers/i2c/chips/adm1026.c:853:
+static DEVICE_ATTR(in16_min, S_IRUGO | S_IWUSR, show_in16_min, set_in16_min);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in16_max' to 'in16_max_show' 'set_in16_max' to 'in16_max_store'
#1006: FILE: drivers/i2c/chips/adm1026.c:854:
+static DEVICE_ATTR(in16_max, S_IRUGO | S_IWUSR, show_in16_max, set_in16_max);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1006: FILE: drivers/i2c/chips/adm1026.c:854:
+static DEVICE_ATTR(in16_max, S_IRUGO | S_IWUSR, show_in16_max, set_in16_max);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1008: FILE: drivers/i2c/chips/adm1026.c:856:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1010: FILE: drivers/i2c/chips/adm1026.c:858:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1016: FILE: drivers/i2c/chips/adm1026.c:864:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", FAN_FROM_REG(data->fan[nr],

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1016: FILE: drivers/i2c/chips/adm1026.c:864:
+	return sprintf(buf,"%d\n", FAN_FROM_REG(data->fan[nr],
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1019: FILE: drivers/i2c/chips/adm1026.c:867:
+}
+static ssize_t show_fan_min(struct device *dev, char *buf, int nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1022: FILE: drivers/i2c/chips/adm1026.c:870:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", FAN_FROM_REG(data->fan_min[nr],

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1022: FILE: drivers/i2c/chips/adm1026.c:870:
+	return sprintf(buf,"%d\n", FAN_FROM_REG(data->fan_min[nr],
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1025: FILE: drivers/i2c/chips/adm1026.c:873:
+}
+static ssize_t set_fan_min(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1026: FILE: drivers/i2c/chips/adm1026.c:874:
+static ssize_t set_fan_min(struct device *dev, const char *buf,
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1033: FILE: drivers/i2c/chips/adm1026.c:881:
+	val = simple_strtol(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1036: FILE: drivers/i2c/chips/adm1026.c:884:
+	adm1026_write_value(client, ADM1026_REG_FAN_MIN(nr),
+		data->fan_min[nr]);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#1041: FILE: drivers/i2c/chips/adm1026.c:889:
+#define fan_offset(offset)                                                  \
+static ssize_t show_fan_##offset (struct device *dev, char *buf)            \
+{                                                                           \
+	return show_fan(dev, buf, offset - 1);                              \
+}                                                                           \
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)      \
+{                                                                           \
+	return show_fan_min(dev, buf, offset - 1);                          \
+}                                                                           \
+static ssize_t set_fan_##offset##_min (struct device *dev,                  \
+	const char *buf, size_t count)                                      \
+{                                                                           \
+	return set_fan_min(dev, buf, count, offset - 1);                    \
+}                                                                           \
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, show_fan_##offset, NULL);  \
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR,                    \
+		show_fan_##offset##_min, set_fan_##offset##_min);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1041: FILE: drivers/i2c/chips/adm1026.c:889:
+#define fan_offset(offset)                                                  \
+static ssize_t show_fan_##offset (struct device *dev, char *buf)            \
+{                                                                           \
+	return show_fan(dev, buf, offset - 1);                              \
+}                                                                           \
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)      \
+{                                                                           \
+	return show_fan_min(dev, buf, offset - 1);                          \
+}                                                                           \
+static ssize_t set_fan_##offset##_min (struct device *dev,                  \
+	const char *buf, size_t count)                                      \
+{                                                                           \
+	return set_fan_min(dev, buf, count, offset - 1);                    \
+}                                                                           \
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, show_fan_##offset, NULL);  \
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR,                    \
+		show_fan_##offset##_min, set_fan_##offset##_min);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1041: FILE: drivers/i2c/chips/adm1026.c:889:
+#define fan_offset(offset)                                                  \
+static ssize_t show_fan_##offset (struct device *dev, char *buf)            \
+{                                                                           \
+	return show_fan(dev, buf, offset - 1);                              \
+}                                                                           \
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)      \
+{                                                                           \
+	return show_fan_min(dev, buf, offset - 1);                          \
+}                                                                           \
+static ssize_t set_fan_##offset##_min (struct device *dev,                  \
+	const char *buf, size_t count)                                      \
+{                                                                           \
+	return set_fan_min(dev, buf, count, offset - 1);                    \
+}                                                                           \
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, show_fan_##offset, NULL);  \
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR,                    \
+		show_fan_##offset##_min, set_fan_##offset##_min);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1042: FILE: drivers/i2c/chips/adm1026.c:890:
+static ssize_t show_fan_##offset (struct device *dev, char *buf)            \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1046: FILE: drivers/i2c/chips/adm1026.c:894:
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)      \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1050: FILE: drivers/i2c/chips/adm1026.c:898:
+static ssize_t set_fan_##offset##_min (struct device *dev,                  \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1055: FILE: drivers/i2c/chips/adm1026.c:903:
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, show_fan_##offset, NULL);  \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1056: FILE: drivers/i2c/chips/adm1026.c:904:
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR,                    \

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1077: FILE: drivers/i2c/chips/adm1026.c:925:
+	if (data->fan_min[fan] == 0 || data->fan_min[fan] == 0xff) {
+		return;
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1091: FILE: drivers/i2c/chips/adm1026.c:939:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", data->fan_div[nr]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1091: FILE: drivers/i2c/chips/adm1026.c:939:
+	return sprintf(buf,"%d\n", data->fan_div[nr]);
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1093: FILE: drivers/i2c/chips/adm1026.c:941:
+}
+static ssize_t set_fan_div(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1094: FILE: drivers/i2c/chips/adm1026.c:942:
+static ssize_t set_fan_div(struct device *dev, const char *buf,
+		size_t count, int nr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1098: FILE: drivers/i2c/chips/adm1026.c:946:
+	int    val,orig_div,new_div,shift;
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1098: FILE: drivers/i2c/chips/adm1026.c:946:
+	int    val,orig_div,new_div,shift;
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1098: FILE: drivers/i2c/chips/adm1026.c:946:
+	int    val,orig_div,new_div,shift;
 	                           ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1100: FILE: drivers/i2c/chips/adm1026.c:948:
+	val = simple_strtol(buf, NULL, 10);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1101: FILE: drivers/i2c/chips/adm1026.c:949:
+^Inew_div = DIV_TO_REG(val); $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1102: FILE: drivers/i2c/chips/adm1026.c:950:
+	if (new_div == 0) {
+		return -EINVAL;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1112: FILE: drivers/i2c/chips/adm1026.c:960:
+		adm1026_write_value(client, ADM1026_REG_FAN_DIV_0_3,
+			((DIV_TO_REG(orig_div) & (~(0x03 << shift))) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: drivers/i2c/chips/adm1026.c:965:
+		adm1026_write_value(client, ADM1026_REG_FAN_DIV_4_7,
+			((DIV_TO_REG(orig_div) & (~(0x03 << (2 * shift)))) |

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1121: FILE: drivers/i2c/chips/adm1026.c:969:
+	if (data->fan_div[nr] != orig_div) {
+		fixup_fan_min(dev,nr,orig_div);
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: drivers/i2c/chips/adm1026.c:970:
+		fixup_fan_min(dev,nr,orig_div);
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: drivers/i2c/chips/adm1026.c:970:
+		fixup_fan_min(dev,nr,orig_div);
 		                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#1128: FILE: drivers/i2c/chips/adm1026.c:976:
+#define fan_offset_div(offset)                                          \
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)  \
+{                                                                       \
+	return show_fan_div(dev, buf, offset - 1);                      \
+}                                                                       \
+static ssize_t set_fan_##offset##_div (struct device *dev,              \
+	const char *buf, size_t count)                                  \
+{                                                                       \
+	return set_fan_div(dev, buf, count, offset - 1);                \
+}                                                                       \
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR,                \
+		show_fan_##offset##_div, set_fan_##offset##_div);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1128: FILE: drivers/i2c/chips/adm1026.c:976:
+#define fan_offset_div(offset)                                          \
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)  \
+{                                                                       \
+	return show_fan_div(dev, buf, offset - 1);                      \
+}                                                                       \
+static ssize_t set_fan_##offset##_div (struct device *dev,              \
+	const char *buf, size_t count)                                  \
+{                                                                       \
+	return set_fan_div(dev, buf, count, offset - 1);                \
+}                                                                       \
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR,                \
+		show_fan_##offset##_div, set_fan_##offset##_div);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1128: FILE: drivers/i2c/chips/adm1026.c:976:
+#define fan_offset_div(offset)                                          \
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)  \
+{                                                                       \
+	return show_fan_div(dev, buf, offset - 1);                      \
+}                                                                       \
+static ssize_t set_fan_##offset##_div (struct device *dev,              \
+	const char *buf, size_t count)                                  \
+{                                                                       \
+	return set_fan_div(dev, buf, count, offset - 1);                \
+}                                                                       \
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR,                \
+		show_fan_##offset##_div, set_fan_##offset##_div);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1129: FILE: drivers/i2c/chips/adm1026.c:977:
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)  \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1133: FILE: drivers/i2c/chips/adm1026.c:981:
+static ssize_t set_fan_##offset##_div (struct device *dev,              \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1138: FILE: drivers/i2c/chips/adm1026.c:986:
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR,                \

WARNING:LINE_SPACING: Missing a blank line after declarations
#1154: FILE: drivers/i2c/chips/adm1026.c:1002:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp[nr]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1154: FILE: drivers/i2c/chips/adm1026.c:1002:
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp[nr]));
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1156: FILE: drivers/i2c/chips/adm1026.c:1004:
+}
+static ssize_t show_temp_min(struct device *dev, char *buf, int nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1159: FILE: drivers/i2c/chips/adm1026.c:1007:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_min[nr]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1159: FILE: drivers/i2c/chips/adm1026.c:1007:
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_min[nr]));
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1161: FILE: drivers/i2c/chips/adm1026.c:1009:
+}
+static ssize_t set_temp_min(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1162: FILE: drivers/i2c/chips/adm1026.c:1010:
+static ssize_t set_temp_min(struct device *dev, const char *buf,
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1169: FILE: drivers/i2c/chips/adm1026.c:1017:
+	val = simple_strtol(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1172: FILE: drivers/i2c/chips/adm1026.c:1020:
+	adm1026_write_value(client, ADM1026_REG_TEMP_MIN[nr],
+		data->temp_min[nr]);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1176: FILE: drivers/i2c/chips/adm1026.c:1024:
+}
+static ssize_t show_temp_max(struct device *dev, char *buf, int nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1179: FILE: drivers/i2c/chips/adm1026.c:1027:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_max[nr]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1179: FILE: drivers/i2c/chips/adm1026.c:1027:
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_max[nr]));
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1181: FILE: drivers/i2c/chips/adm1026.c:1029:
+}
+static ssize_t set_temp_max(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1182: FILE: drivers/i2c/chips/adm1026.c:1030:
+static ssize_t set_temp_max(struct device *dev, const char *buf,
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1189: FILE: drivers/i2c/chips/adm1026.c:1037:
+	val = simple_strtol(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1192: FILE: drivers/i2c/chips/adm1026.c:1040:
+	adm1026_write_value(client, ADM1026_REG_TEMP_MAX[nr],
+		data->temp_max[nr]);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1196: FILE: drivers/i2c/chips/adm1026.c:1044:
+}
+#define temp_reg(offset)                                                      \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#1196: FILE: drivers/i2c/chips/adm1026.c:1044:
+#define temp_reg(offset)                                                      \
+static ssize_t show_temp_##offset (struct device *dev, char *buf)             \
+{                                                                             \
+	return show_temp(dev, buf, offset - 1);                               \
+}                                                                             \
+static ssize_t show_temp_##offset##_min (struct device *dev, char *buf)       \
+{                                                                             \
+	return show_temp_min(dev, buf, offset - 1);                           \
+}                                                                             \
+static ssize_t show_temp_##offset##_max (struct device *dev, char *buf)       \
+{                                                                             \
+	return show_temp_max(dev, buf, offset - 1);                           \
+}                                                                             \
+static ssize_t set_temp_##offset##_min (struct device *dev,                   \
+	const char *buf, size_t count)                                        \
+{                                                                             \
+	return set_temp_min(dev, buf, count, offset - 1);                     \
+}                                                                             \
+static ssize_t set_temp_##offset##_max (struct device *dev,                   \
+	const char *buf, size_t count)                                        \
+{                                                                             \
+	return set_temp_max(dev, buf, count, offset - 1);                     \
+}                                                                             \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, show_temp_##offset, NULL);  \
+static DEVICE_ATTR(temp##offset##_min, S_IRUGO | S_IWUSR,                     \
+		show_temp_##offset##_min, set_temp_##offset##_min);           \
+static DEVICE_ATTR(temp##offset##_max, S_IRUGO | S_IWUSR,                     \
+		show_temp_##offset##_max, set_temp_##offset##_max);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1196: FILE: drivers/i2c/chips/adm1026.c:1044:
+#define temp_reg(offset)                                                      \
+static ssize_t show_temp_##offset (struct device *dev, char *buf)             \
+{                                                                             \
+	return show_temp(dev, buf, offset - 1);                               \
+}                                                                             \
+static ssize_t show_temp_##offset##_min (struct device *dev, char *buf)       \
+{                                                                             \
+	return show_temp_min(dev, buf, offset - 1);                           \
+}                                                                             \
+static ssize_t show_temp_##offset##_max (struct device *dev, char *buf)       \
+{                                                                             \
+	return show_temp_max(dev, buf, offset - 1);                           \
+}                                                                             \
+static ssize_t set_temp_##offset##_min (struct device *dev,                   \
+	const char *buf, size_t count)                                        \
+{                                                                             \
+	return set_temp_min(dev, buf, count, offset - 1);                     \
+}                                                                             \
+static ssize_t set_temp_##offset##_max (struct device *dev,                   \
+	const char *buf, size_t count)                                        \
+{                                                                             \
+	return set_temp_max(dev, buf, count, offset - 1);                     \
+}                                                                             \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, show_temp_##offset, NULL);  \
+static DEVICE_ATTR(temp##offset##_min, S_IRUGO | S_IWUSR,                     \
+		show_temp_##offset##_min, set_temp_##offset##_min);           \
+static DEVICE_ATTR(temp##offset##_max, S_IRUGO | S_IWUSR,                     \
+		show_temp_##offset##_max, set_temp_##offset##_max);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1196: FILE: drivers/i2c/chips/adm1026.c:1044:
+#define temp_reg(offset)                                                      \
+static ssize_t show_temp_##offset (struct device *dev, char *buf)             \
+{                                                                             \
+	return show_temp(dev, buf, offset - 1);                               \
+}                                                                             \
+static ssize_t show_temp_##offset##_min (struct device *dev, char *buf)       \
+{                                                                             \
+	return show_temp_min(dev, buf, offset - 1);                           \
+}                                                                             \
+static ssize_t show_temp_##offset##_max (struct device *dev, char *buf)       \
+{                                                                             \
+	return show_temp_max(dev, buf, offset - 1);                           \
+}                                                                             \
+static ssize_t set_temp_##offset##_min (struct device *dev,                   \
+	const char *buf, size_t count)                                        \
+{                                                                             \
+	return set_temp_min(dev, buf, count, offset - 1);                     \
+}                                                                             \
+static ssize_t set_temp_##offset##_max (struct device *dev,                   \
+	const char *buf, size_t count)                                        \
+{                                                                             \
+	return set_temp_max(dev, buf, count, offset - 1);                     \
+}                                                                             \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, show_temp_##offset, NULL);  \
+static DEVICE_ATTR(temp##offset##_min, S_IRUGO | S_IWUSR,                     \
+		show_temp_##offset##_min, set_temp_##offset##_min);           \
+static DEVICE_ATTR(temp##offset##_max, S_IRUGO | S_IWUSR,                     \
+		show_temp_##offset##_max, set_temp_##offset##_max);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1197: FILE: drivers/i2c/chips/adm1026.c:1045:
+static ssize_t show_temp_##offset (struct device *dev, char *buf)             \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1201: FILE: drivers/i2c/chips/adm1026.c:1049:
+static ssize_t show_temp_##offset##_min (struct device *dev, char *buf)       \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1205: FILE: drivers/i2c/chips/adm1026.c:1053:
+static ssize_t show_temp_##offset##_max (struct device *dev, char *buf)       \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1209: FILE: drivers/i2c/chips/adm1026.c:1057:
+static ssize_t set_temp_##offset##_min (struct device *dev,                   \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1214: FILE: drivers/i2c/chips/adm1026.c:1062:
+static ssize_t set_temp_##offset##_max (struct device *dev,                   \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1219: FILE: drivers/i2c/chips/adm1026.c:1067:
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, show_temp_##offset, NULL);  \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1220: FILE: drivers/i2c/chips/adm1026.c:1068:
+static DEVICE_ATTR(temp##offset##_min, S_IRUGO | S_IWUSR,                     \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1222: FILE: drivers/i2c/chips/adm1026.c:1070:
+static DEVICE_ATTR(temp##offset##_max, S_IRUGO | S_IWUSR,                     \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1225: FILE: drivers/i2c/chips/adm1026.c:1073:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1233: FILE: drivers/i2c/chips/adm1026.c:1081:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_offset[nr]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1233: FILE: drivers/i2c/chips/adm1026.c:1081:
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_offset[nr]));
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1235: FILE: drivers/i2c/chips/adm1026.c:1083:
+}
+static ssize_t set_temp_offset(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1236: FILE: drivers/i2c/chips/adm1026.c:1084:
+static ssize_t set_temp_offset(struct device *dev, const char *buf,
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1243: FILE: drivers/i2c/chips/adm1026.c:1091:
+	val = simple_strtol(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1246: FILE: drivers/i2c/chips/adm1026.c:1094:
+	adm1026_write_value(client, ADM1026_REG_TEMP_OFFSET[nr],
+		data->temp_offset[nr]);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#1251: FILE: drivers/i2c/chips/adm1026.c:1099:
+#define temp_offset_reg(offset)                                             \
+static ssize_t show_temp_##offset##_offset (struct device *dev, char *buf)  \
+{                                                                           \
+	return show_temp_offset(dev, buf, offset - 1);                      \
+}                                                                           \
+static ssize_t set_temp_##offset##_offset (struct device *dev,              \
+	const char *buf, size_t count)                                      \
+{                                                                           \
+	return set_temp_offset(dev, buf, count, offset - 1);                \
+}                                                                           \
+static DEVICE_ATTR(temp##offset##_offset, S_IRUGO | S_IWUSR,                \
+		show_temp_##offset##_offset, set_temp_##offset##_offset);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1251: FILE: drivers/i2c/chips/adm1026.c:1099:
+#define temp_offset_reg(offset)                                             \
+static ssize_t show_temp_##offset##_offset (struct device *dev, char *buf)  \
+{                                                                           \
+	return show_temp_offset(dev, buf, offset - 1);                      \
+}                                                                           \
+static ssize_t set_temp_##offset##_offset (struct device *dev,              \
+	const char *buf, size_t count)                                      \
+{                                                                           \
+	return set_temp_offset(dev, buf, count, offset - 1);                \
+}                                                                           \
+static DEVICE_ATTR(temp##offset##_offset, S_IRUGO | S_IWUSR,                \
+		show_temp_##offset##_offset, set_temp_##offset##_offset);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1251: FILE: drivers/i2c/chips/adm1026.c:1099:
+#define temp_offset_reg(offset)                                             \
+static ssize_t show_temp_##offset##_offset (struct device *dev, char *buf)  \
+{                                                                           \
+	return show_temp_offset(dev, buf, offset - 1);                      \
+}                                                                           \
+static ssize_t set_temp_##offset##_offset (struct device *dev,              \
+	const char *buf, size_t count)                                      \
+{                                                                           \
+	return set_temp_offset(dev, buf, count, offset - 1);                \
+}                                                                           \
+static DEVICE_ATTR(temp##offset##_offset, S_IRUGO | S_IWUSR,                \
+		show_temp_##offset##_offset, set_temp_##offset##_offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1252: FILE: drivers/i2c/chips/adm1026.c:1100:
+static ssize_t show_temp_##offset##_offset (struct device *dev, char *buf)  \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1256: FILE: drivers/i2c/chips/adm1026.c:1104:
+static ssize_t set_temp_##offset##_offset (struct device *dev,              \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1261: FILE: drivers/i2c/chips/adm1026.c:1109:
+static DEVICE_ATTR(temp##offset##_offset, S_IRUGO | S_IWUSR,                \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1269: FILE: drivers/i2c/chips/adm1026.c:1117:
+static ssize_t show_temp_auto_point1_temp_hyst(struct device *dev, char *buf,
+		int nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1272: FILE: drivers/i2c/chips/adm1026.c:1120:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1272: FILE: drivers/i2c/chips/adm1026.c:1120:
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1272: FILE: drivers/i2c/chips/adm1026.c:1120:
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1275: FILE: drivers/i2c/chips/adm1026.c:1123:
+}
+static ssize_t show_temp_auto_point2_temp(struct device *dev, char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1276: FILE: drivers/i2c/chips/adm1026.c:1124:
+static ssize_t show_temp_auto_point2_temp(struct device *dev, char *buf,
+		int nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1279: FILE: drivers/i2c/chips/adm1026.c:1127:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_tmin[nr] +

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1279: FILE: drivers/i2c/chips/adm1026.c:1127:
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_tmin[nr] +
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1282: FILE: drivers/i2c/chips/adm1026.c:1130:
+}
+static ssize_t show_temp_auto_point1_temp(struct device *dev, char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1283: FILE: drivers/i2c/chips/adm1026.c:1131:
+static ssize_t show_temp_auto_point1_temp(struct device *dev, char *buf,
+		int nr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1286: FILE: drivers/i2c/chips/adm1026.c:1134:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_tmin[nr]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1286: FILE: drivers/i2c/chips/adm1026.c:1134:
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_tmin[nr]));
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1288: FILE: drivers/i2c/chips/adm1026.c:1136:
+}
+static ssize_t set_temp_auto_point1_temp(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1289: FILE: drivers/i2c/chips/adm1026.c:1137:
+static ssize_t set_temp_auto_point1_temp(struct device *dev, const char *buf,
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1296: FILE: drivers/i2c/chips/adm1026.c:1144:
+	val = simple_strtol(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1299: FILE: drivers/i2c/chips/adm1026.c:1147:
+	adm1026_write_value(client, ADM1026_REG_TEMP_TMIN[nr],
+		data->temp_tmin[nr]);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#1304: FILE: drivers/i2c/chips/adm1026.c:1152:
+#define temp_auto_point(offset)                                             \
+static ssize_t show_temp##offset##_auto_point1_temp (struct device *dev,    \
+	char *buf)                                                          \
+{                                                                           \
+	return show_temp_auto_point1_temp(dev, buf, offset - 1);            \
+}                                                                           \
+static ssize_t set_temp##offset##_auto_point1_temp (struct device *dev,     \
+	const char *buf, size_t count)                                      \
+{                                                                           \
+	return set_temp_auto_point1_temp(dev, buf, count, offset - 1);      \
+}                                                                           \
+static ssize_t show_temp##offset##_auto_point1_temp_hyst (struct device     \
+	*dev, char *buf)                                                    \
+{                                                                           \
+	return show_temp_auto_point1_temp_hyst(dev, buf, offset - 1);       \
+}                                                                           \
+static ssize_t show_temp##offset##_auto_point2_temp (struct device *dev,    \
+	 char *buf)                                                         \
+{                                                                           \
+	return show_temp_auto_point2_temp(dev, buf, offset - 1);            \
+}                                                                           \
+static DEVICE_ATTR(temp##offset##_auto_point1_temp, S_IRUGO | S_IWUSR,      \
+		show_temp##offset##_auto_point1_temp,                       \
+		set_temp##offset##_auto_point1_temp);                       \
+static DEVICE_ATTR(temp##offset##_auto_point1_temp_hyst, S_IRUGO,           \
+		show_temp##offset##_auto_point1_temp_hyst, NULL);           \
+static DEVICE_ATTR(temp##offset##_auto_point2_temp, S_IRUGO,                \
+		show_temp##offset##_auto_point2_temp, NULL);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1304: FILE: drivers/i2c/chips/adm1026.c:1152:
+#define temp_auto_point(offset)                                             \
+static ssize_t show_temp##offset##_auto_point1_temp (struct device *dev,    \
+	char *buf)                                                          \
+{                                                                           \
+	return show_temp_auto_point1_temp(dev, buf, offset - 1);            \
+}                                                                           \
+static ssize_t set_temp##offset##_auto_point1_temp (struct device *dev,     \
+	const char *buf, size_t count)                                      \
+{                                                                           \
+	return set_temp_auto_point1_temp(dev, buf, count, offset - 1);      \
+}                                                                           \
+static ssize_t show_temp##offset##_auto_point1_temp_hyst (struct device     \
+	*dev, char *buf)                                                    \
+{                                                                           \
+	return show_temp_auto_point1_temp_hyst(dev, buf, offset - 1);       \
+}                                                                           \
+static ssize_t show_temp##offset##_auto_point2_temp (struct device *dev,    \
+	 char *buf)                                                         \
+{                                                                           \
+	return show_temp_auto_point2_temp(dev, buf, offset - 1);            \
+}                                                                           \
+static DEVICE_ATTR(temp##offset##_auto_point1_temp, S_IRUGO | S_IWUSR,      \
+		show_temp##offset##_auto_point1_temp,                       \
+		set_temp##offset##_auto_point1_temp);                       \
+static DEVICE_ATTR(temp##offset##_auto_point1_temp_hyst, S_IRUGO,           \
+		show_temp##offset##_auto_point1_temp_hyst, NULL);           \
+static DEVICE_ATTR(temp##offset##_auto_point2_temp, S_IRUGO,                \
+		show_temp##offset##_auto_point2_temp, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1304: FILE: drivers/i2c/chips/adm1026.c:1152:
+#define temp_auto_point(offset)                                             \
+static ssize_t show_temp##offset##_auto_point1_temp (struct device *dev,    \
+	char *buf)                                                          \
+{                                                                           \
+	return show_temp_auto_point1_temp(dev, buf, offset - 1);            \
+}                                                                           \
+static ssize_t set_temp##offset##_auto_point1_temp (struct device *dev,     \
+	const char *buf, size_t count)                                      \
+{                                                                           \
+	return set_temp_auto_point1_temp(dev, buf, count, offset - 1);      \
+}                                                                           \
+static ssize_t show_temp##offset##_auto_point1_temp_hyst (struct device     \
+	*dev, char *buf)                                                    \
+{                                                                           \
+	return show_temp_auto_point1_temp_hyst(dev, buf, offset - 1);       \
+}                                                                           \
+static ssize_t show_temp##offset##_auto_point2_temp (struct device *dev,    \
+	 char *buf)                                                         \
+{                                                                           \
+	return show_temp_auto_point2_temp(dev, buf, offset - 1);            \
+}                                                                           \
+static DEVICE_ATTR(temp##offset##_auto_point1_temp, S_IRUGO | S_IWUSR,      \
+		show_temp##offset##_auto_point1_temp,                       \
+		set_temp##offset##_auto_point1_temp);                       \
+static DEVICE_ATTR(temp##offset##_auto_point1_temp_hyst, S_IRUGO,           \
+		show_temp##offset##_auto_point1_temp_hyst, NULL);           \
+static DEVICE_ATTR(temp##offset##_auto_point2_temp, S_IRUGO,                \
+		show_temp##offset##_auto_point2_temp, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1305: FILE: drivers/i2c/chips/adm1026.c:1153:
+static ssize_t show_temp##offset##_auto_point1_temp (struct device *dev,    \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1310: FILE: drivers/i2c/chips/adm1026.c:1158:
+static ssize_t set_temp##offset##_auto_point1_temp (struct device *dev,     \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1315: FILE: drivers/i2c/chips/adm1026.c:1163:
+static ssize_t show_temp##offset##_auto_point1_temp_hyst (struct device     \

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#1316: FILE: drivers/i2c/chips/adm1026.c:1164:
+	*dev, char *buf)                                                    \
 	^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1320: FILE: drivers/i2c/chips/adm1026.c:1168:
+static ssize_t show_temp##offset##_auto_point2_temp (struct device *dev,    \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1325: FILE: drivers/i2c/chips/adm1026.c:1173:
+static DEVICE_ATTR(temp##offset##_auto_point1_temp, S_IRUGO | S_IWUSR,      \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1328: FILE: drivers/i2c/chips/adm1026.c:1176:
+static DEVICE_ATTR(temp##offset##_auto_point1_temp_hyst, S_IRUGO,           \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1330: FILE: drivers/i2c/chips/adm1026.c:1178:
+static DEVICE_ATTR(temp##offset##_auto_point2_temp, S_IRUGO,                \

WARNING:LINE_SPACING: Missing a blank line after declarations
#1340: FILE: drivers/i2c/chips/adm1026.c:1188:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", (data->config1 & CFG1_THERM_HOT) >> 4);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1340: FILE: drivers/i2c/chips/adm1026.c:1188:
+	return sprintf(buf,"%d\n", (data->config1 & CFG1_THERM_HOT) >> 4);
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1342: FILE: drivers/i2c/chips/adm1026.c:1190:
+}
+static ssize_t set_temp_crit_enable(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1343: FILE: drivers/i2c/chips/adm1026.c:1191:
+static ssize_t set_temp_crit_enable(struct device *dev, const char *buf,
+		size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1349: FILE: drivers/i2c/chips/adm1026.c:1197:
+	val = simple_strtol(buf, NULL, 10);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1350: FILE: drivers/i2c/chips/adm1026.c:1198:
+	if ((val == 1) || (val==0)) {
 	                      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == 1'
#1350: FILE: drivers/i2c/chips/adm1026.c:1198:
+	if ((val == 1) || (val==0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val==0'
#1350: FILE: drivers/i2c/chips/adm1026.c:1198:
+	if ((val == 1) || (val==0)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1353: FILE: drivers/i2c/chips/adm1026.c:1201:
+^I^Iadm1026_write_value(client, ADM1026_REG_CONFIG1, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1354: FILE: drivers/i2c/chips/adm1026.c:1202:
+		adm1026_write_value(client, ADM1026_REG_CONFIG1, 
+			data->config1);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_crit_enable' to 'temp1_crit_enable_show' 'set_temp_crit_enable' to 'temp1_crit_enable_store'
#1358: FILE: drivers/i2c/chips/adm1026.c:1206:
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1360: FILE: drivers/i2c/chips/adm1026.c:1208:
+static DEVICE_ATTR(temp1_crit_enable, S_IRUGO | S_IWUSR, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1360: FILE: drivers/i2c/chips/adm1026.c:1208:
+static DEVICE_ATTR(temp1_crit_enable, S_IRUGO | S_IWUSR, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1363: FILE: drivers/i2c/chips/adm1026.c:1211:
+static DEVICE_ATTR(temp2_crit_enable, S_IRUGO | S_IWUSR, $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_crit_enable' to 'temp2_crit_enable_show' 'set_temp_crit_enable' to 'temp2_crit_enable_store'
#1363: FILE: drivers/i2c/chips/adm1026.c:1211:
+static DEVICE_ATTR(temp2_crit_enable, S_IRUGO | S_IWUSR, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1363: FILE: drivers/i2c/chips/adm1026.c:1211:
+static DEVICE_ATTR(temp2_crit_enable, S_IRUGO | S_IWUSR, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1366: FILE: drivers/i2c/chips/adm1026.c:1214:
+static DEVICE_ATTR(temp3_crit_enable, S_IRUGO | S_IWUSR, $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_crit_enable' to 'temp3_crit_enable_show' 'set_temp_crit_enable' to 'temp3_crit_enable_store'
#1366: FILE: drivers/i2c/chips/adm1026.c:1214:
+static DEVICE_ATTR(temp3_crit_enable, S_IRUGO | S_IWUSR, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1366: FILE: drivers/i2c/chips/adm1026.c:1214:
+static DEVICE_ATTR(temp3_crit_enable, S_IRUGO | S_IWUSR, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1369: FILE: drivers/i2c/chips/adm1026.c:1217:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1373: FILE: drivers/i2c/chips/adm1026.c:1221:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_crit[nr]));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1373: FILE: drivers/i2c/chips/adm1026.c:1221:
+	return sprintf(buf,"%d\n", TEMP_FROM_REG(data->temp_crit[nr]));
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1375: FILE: drivers/i2c/chips/adm1026.c:1223:
+}
+static ssize_t set_temp_crit(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1376: FILE: drivers/i2c/chips/adm1026.c:1224:
+static ssize_t set_temp_crit(struct device *dev, const char *buf,
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1383: FILE: drivers/i2c/chips/adm1026.c:1231:
+	val = simple_strtol(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1386: FILE: drivers/i2c/chips/adm1026.c:1234:
+	adm1026_write_value(client, ADM1026_REG_TEMP_THERM[nr],
+		data->temp_crit[nr]);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#1391: FILE: drivers/i2c/chips/adm1026.c:1239:
+#define temp_crit_reg(offset)                                             \
+static ssize_t show_temp_##offset##_crit (struct device *dev, char *buf)  \
+{                                                                         \
+	return show_temp_crit(dev, buf, offset - 1);                      \
+}                                                                         \
+static ssize_t set_temp_##offset##_crit (struct device *dev,              \
+	const char *buf, size_t count)                                    \
+{                                                                         \
+	return set_temp_crit(dev, buf, count, offset - 1);                \
+}                                                                         \
+static DEVICE_ATTR(temp##offset##_crit, S_IRUGO | S_IWUSR,                \
+		show_temp_##offset##_crit, set_temp_##offset##_crit);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1391: FILE: drivers/i2c/chips/adm1026.c:1239:
+#define temp_crit_reg(offset)                                             \
+static ssize_t show_temp_##offset##_crit (struct device *dev, char *buf)  \
+{                                                                         \
+	return show_temp_crit(dev, buf, offset - 1);                      \
+}                                                                         \
+static ssize_t set_temp_##offset##_crit (struct device *dev,              \
+	const char *buf, size_t count)                                    \
+{                                                                         \
+	return set_temp_crit(dev, buf, count, offset - 1);                \
+}                                                                         \
+static DEVICE_ATTR(temp##offset##_crit, S_IRUGO | S_IWUSR,                \
+		show_temp_##offset##_crit, set_temp_##offset##_crit);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1391: FILE: drivers/i2c/chips/adm1026.c:1239:
+#define temp_crit_reg(offset)                                             \
+static ssize_t show_temp_##offset##_crit (struct device *dev, char *buf)  \
+{                                                                         \
+	return show_temp_crit(dev, buf, offset - 1);                      \
+}                                                                         \
+static ssize_t set_temp_##offset##_crit (struct device *dev,              \
+	const char *buf, size_t count)                                    \
+{                                                                         \
+	return set_temp_crit(dev, buf, count, offset - 1);                \
+}                                                                         \
+static DEVICE_ATTR(temp##offset##_crit, S_IRUGO | S_IWUSR,                \
+		show_temp_##offset##_crit, set_temp_##offset##_crit);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1392: FILE: drivers/i2c/chips/adm1026.c:1240:
+static ssize_t show_temp_##offset##_crit (struct device *dev, char *buf)  \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1396: FILE: drivers/i2c/chips/adm1026.c:1244:
+static ssize_t set_temp_##offset##_crit (struct device *dev,              \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1401: FILE: drivers/i2c/chips/adm1026.c:1249:
+static DEVICE_ATTR(temp##offset##_crit, S_IRUGO | S_IWUSR,                \

WARNING:LINE_SPACING: Missing a blank line after declarations
#1411: FILE: drivers/i2c/chips/adm1026.c:1259:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", DAC_FROM_REG(data->analog_out));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1411: FILE: drivers/i2c/chips/adm1026.c:1259:
+	return sprintf(buf,"%d\n", DAC_FROM_REG(data->analog_out));
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1413: FILE: drivers/i2c/chips/adm1026.c:1261:
+}
+static ssize_t set_analog_out_reg(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1414: FILE: drivers/i2c/chips/adm1026.c:1262:
+static ssize_t set_analog_out_reg(struct device *dev, const char *buf,
+		size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1421: FILE: drivers/i2c/chips/adm1026.c:1269:
+	val = simple_strtol(buf, NULL, 10);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_analog_out_reg' to 'analog_out_show' 'set_analog_out_reg' to 'analog_out_store'
#1426: FILE: drivers/i2c/chips/adm1026.c:1274:
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1428: FILE: drivers/i2c/chips/adm1026.c:1276:
+static DEVICE_ATTR(analog_out, S_IRUGO | S_IWUSR, show_analog_out_reg, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1428: FILE: drivers/i2c/chips/adm1026.c:1276:
+static DEVICE_ATTR(analog_out, S_IRUGO | S_IWUSR, show_analog_out_reg, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#1434: FILE: drivers/i2c/chips/adm1026.c:1282:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", vid_from_reg(data->vid & 0x3f, data->vrm));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1434: FILE: drivers/i2c/chips/adm1026.c:1282:
+	return sprintf(buf,"%d\n", vid_from_reg(data->vid & 0x3f, data->vrm));
 	                  ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_vid_reg' to 'vid_show'
#1435: FILE: drivers/i2c/chips/adm1026.c:1283:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1437: FILE: drivers/i2c/chips/adm1026.c:1285:
+static DEVICE_ATTR(vid, S_IRUGO, show_vid_reg, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1442: FILE: drivers/i2c/chips/adm1026.c:1290:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", data->vrm);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1442: FILE: drivers/i2c/chips/adm1026.c:1290:
+	return sprintf(buf,"%d\n", data->vrm);
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1444: FILE: drivers/i2c/chips/adm1026.c:1292:
+}
+static ssize_t store_vrm_reg(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1445: FILE: drivers/i2c/chips/adm1026.c:1293:
+static ssize_t store_vrm_reg(struct device *dev, const char *buf,
+		size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1450: FILE: drivers/i2c/chips/adm1026.c:1298:
+	data->vrm = simple_strtol(buf, NULL, 10);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_vrm_reg' to 'vrm_show' 'store_vrm_reg' to 'vrm_store'
#1452: FILE: drivers/i2c/chips/adm1026.c:1300:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1454: FILE: drivers/i2c/chips/adm1026.c:1302:
+static DEVICE_ATTR(vrm, S_IRUGO | S_IWUSR, show_vrm_reg, store_vrm_reg);

CHECK:SPACING: No space is necessary after a cast
#1459: FILE: drivers/i2c/chips/adm1026.c:1307:
+	return sprintf(buf, "%ld\n", (long) (data->alarms));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1459: FILE: drivers/i2c/chips/adm1026.c:1307:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf, "%ld\n", (long) (data->alarms));

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarms_reg' to 'alarms_show'
#1460: FILE: drivers/i2c/chips/adm1026.c:1308:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1462: FILE: drivers/i2c/chips/adm1026.c:1310:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms_reg, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1467: FILE: drivers/i2c/chips/adm1026.c:1315:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%ld\n", data->alarm_mask);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1467: FILE: drivers/i2c/chips/adm1026.c:1315:
+	return sprintf(buf,"%ld\n", data->alarm_mask);
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1469: FILE: drivers/i2c/chips/adm1026.c:1317:
+}
+static ssize_t set_alarm_mask(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1470: FILE: drivers/i2c/chips/adm1026.c:1318:
+static ssize_t set_alarm_mask(struct device *dev, const char *buf,
+		size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1478: FILE: drivers/i2c/chips/adm1026.c:1326:
+	val = simple_strtol(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1483: FILE: drivers/i2c/chips/adm1026.c:1331:
+	adm1026_write_value(client, ADM1026_REG_MASK1,
+		mask & 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1486: FILE: drivers/i2c/chips/adm1026.c:1334:
+	adm1026_write_value(client, ADM1026_REG_MASK2,
+		mask & 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1489: FILE: drivers/i2c/chips/adm1026.c:1337:
+	adm1026_write_value(client, ADM1026_REG_MASK3,
+		mask & 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1492: FILE: drivers/i2c/chips/adm1026.c:1340:
+	adm1026_write_value(client, ADM1026_REG_MASK4,
+		mask & 0xff);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarm_mask' to 'alarm_mask_show' 'set_alarm_mask' to 'alarm_mask_store'
#1495: FILE: drivers/i2c/chips/adm1026.c:1343:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1497: FILE: drivers/i2c/chips/adm1026.c:1345:
+static DEVICE_ATTR(alarm_mask, S_IRUGO | S_IWUSR, show_alarm_mask,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1500: FILE: drivers/i2c/chips/adm1026.c:1348:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1504: FILE: drivers/i2c/chips/adm1026.c:1352:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%ld\n", data->gpio);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1504: FILE: drivers/i2c/chips/adm1026.c:1352:
+	return sprintf(buf,"%ld\n", data->gpio);
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1506: FILE: drivers/i2c/chips/adm1026.c:1354:
+}
+static ssize_t set_gpio(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1507: FILE: drivers/i2c/chips/adm1026.c:1355:
+static ssize_t set_gpio(struct device *dev, const char *buf,
+		size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1515: FILE: drivers/i2c/chips/adm1026.c:1363:
+	val = simple_strtol(buf, NULL, 10);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: drivers/i2c/chips/adm1026.c:1366:
+	adm1026_write_value(client, ADM1026_REG_GPIO_STATUS_0_7,gpio & 0xff);
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1520: FILE: drivers/i2c/chips/adm1026.c:1368:
+	adm1026_write_value(client, ADM1026_REG_GPIO_STATUS_8_15,gpio & 0xff);
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1522: FILE: drivers/i2c/chips/adm1026.c:1370:
+	adm1026_write_value(client, ADM1026_REG_STATUS4,gpio & 0xff);
 	                                               ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_gpio' to 'gpio_show' 'set_gpio' to 'gpio_store'
#1525: FILE: drivers/i2c/chips/adm1026.c:1373:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1527: FILE: drivers/i2c/chips/adm1026.c:1375:
+static DEVICE_ATTR(gpio, S_IRUGO | S_IWUSR, show_gpio, set_gpio);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1529: FILE: drivers/i2c/chips/adm1026.c:1377:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1533: FILE: drivers/i2c/chips/adm1026.c:1381:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%ld\n", data->gpio_mask);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1533: FILE: drivers/i2c/chips/adm1026.c:1381:
+	return sprintf(buf,"%ld\n", data->gpio_mask);
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1535: FILE: drivers/i2c/chips/adm1026.c:1383:
+}
+static ssize_t set_gpio_mask(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1536: FILE: drivers/i2c/chips/adm1026.c:1384:
+static ssize_t set_gpio_mask(struct device *dev, const char *buf,
+		size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1544: FILE: drivers/i2c/chips/adm1026.c:1392:
+	val = simple_strtol(buf, NULL, 10);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1547: FILE: drivers/i2c/chips/adm1026.c:1395:
+	adm1026_write_value(client, ADM1026_REG_GPIO_MASK_0_7,mask & 0xff);
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1549: FILE: drivers/i2c/chips/adm1026.c:1397:
+	adm1026_write_value(client, ADM1026_REG_GPIO_MASK_8_15,mask & 0xff);
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1551: FILE: drivers/i2c/chips/adm1026.c:1399:
+	adm1026_write_value(client, ADM1026_REG_MASK1,mask & 0xff);
 	                                             ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_gpio_mask' to 'gpio_mask_show' 'set_gpio_mask' to 'gpio_mask_store'
#1554: FILE: drivers/i2c/chips/adm1026.c:1402:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1556: FILE: drivers/i2c/chips/adm1026.c:1404:
+static DEVICE_ATTR(gpio_mask, S_IRUGO | S_IWUSR, show_gpio_mask, set_gpio_mask);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1561: FILE: drivers/i2c/chips/adm1026.c:1409:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", PWM_FROM_REG(data->pwm1.pwm));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1561: FILE: drivers/i2c/chips/adm1026.c:1409:
+	return sprintf(buf,"%d\n", PWM_FROM_REG(data->pwm1.pwm));
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1563: FILE: drivers/i2c/chips/adm1026.c:1411:
+}
+static ssize_t set_pwm_reg(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1564: FILE: drivers/i2c/chips/adm1026.c:1412:
+static ssize_t set_pwm_reg(struct device *dev, const char *buf,
+		size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1572: FILE: drivers/i2c/chips/adm1026.c:1420:
+		val = simple_strtol(buf, NULL, 10);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1579: FILE: drivers/i2c/chips/adm1026.c:1427:
+}
+static ssize_t show_auto_pwm_min(struct device *dev, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1582: FILE: drivers/i2c/chips/adm1026.c:1430:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", data->pwm1.auto_pwm_min);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1582: FILE: drivers/i2c/chips/adm1026.c:1430:
+	return sprintf(buf,"%d\n", data->pwm1.auto_pwm_min);
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1584: FILE: drivers/i2c/chips/adm1026.c:1432:
+}
+static ssize_t set_auto_pwm_min(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1585: FILE: drivers/i2c/chips/adm1026.c:1433:
+static ssize_t set_auto_pwm_min(struct device *dev, const char *buf,
+		size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1592: FILE: drivers/i2c/chips/adm1026.c:1440:
+	val = simple_strtol(buf, NULL, 10);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1593: FILE: drivers/i2c/chips/adm1026.c:1441:
+	data->pwm1.auto_pwm_min = SENSORS_LIMIT(val,0,255);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1593: FILE: drivers/i2c/chips/adm1026.c:1441:
+	data->pwm1.auto_pwm_min = SENSORS_LIMIT(val,0,255);
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1596: FILE: drivers/i2c/chips/adm1026.c:1444:
+^I^I^IPWM_MIN_TO_REG(data->pwm1.auto_pwm_min)); $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1602: FILE: drivers/i2c/chips/adm1026.c:1450:
+}
+static ssize_t show_auto_pwm_max(struct device *dev, char *buf)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1604: FILE: drivers/i2c/chips/adm1026.c:1452:
+	return sprintf(buf,"%d\n", ADM1026_PWM_MAX);
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1606: FILE: drivers/i2c/chips/adm1026.c:1454:
+}
+static ssize_t show_pwm_enable(struct device *dev, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1609: FILE: drivers/i2c/chips/adm1026.c:1457:
+	struct adm1026_data *data = adm1026_update_device(dev);
+	return sprintf(buf,"%d\n", data->pwm1.enable);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1609: FILE: drivers/i2c/chips/adm1026.c:1457:
+	return sprintf(buf,"%d\n", data->pwm1.enable);
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1611: FILE: drivers/i2c/chips/adm1026.c:1459:
+}
+static ssize_t set_pwm_enable(struct device *dev, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1612: FILE: drivers/i2c/chips/adm1026.c:1460:
+static ssize_t set_pwm_enable(struct device *dev, const char *buf,
+		size_t count)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val >= 0'
#1619: FILE: drivers/i2c/chips/adm1026.c:1467:
+	if ((val >= 0) && (val < 3)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val < 3'
#1619: FILE: drivers/i2c/chips/adm1026.c:1467:
+	if ((val >= 0) && (val < 3)) {

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1622: FILE: drivers/i2c/chips/adm1026.c:1470:
+		val = simple_strtol(buf, NULL, 10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1627: FILE: drivers/i2c/chips/adm1026.c:1475:
+		adm1026_write_value(client, ADM1026_REG_CONFIG1,
+			data->config1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1630: FILE: drivers/i2c/chips/adm1026.c:1478:
+^I^I^I^IPWM_MIN_TO_REG(data->pwm1.auto_pwm_min)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1631: FILE: drivers/i2c/chips/adm1026.c:1479:
+^I^I^Iadm1026_write_value(client, ADM1026_REG_PWM, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1632: FILE: drivers/i2c/chips/adm1026.c:1480:
+			adm1026_write_value(client, ADM1026_REG_PWM, 
+				data->pwm1.pwm);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1636: FILE: drivers/i2c/chips/adm1026.c:1484:
+^I^I^Iadm1026_write_value(client, ADM1026_REG_PWM, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1637: FILE: drivers/i2c/chips/adm1026.c:1485:
+			adm1026_write_value(client, ADM1026_REG_PWM, 
+				data->pwm1.pwm);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pwm_reg' to 'pwm1_show' 'set_pwm_reg' to 'pwm1_store'
#1642: FILE: drivers/i2c/chips/adm1026.c:1490:
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1645: FILE: drivers/i2c/chips/adm1026.c:1493:
+static DEVICE_ATTR(pwm1, S_IRUGO | S_IWUSR, show_pwm_reg, set_pwm_reg); $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1645: FILE: drivers/i2c/chips/adm1026.c:1493:
+static DEVICE_ATTR(pwm1, S_IRUGO | S_IWUSR, show_pwm_reg, set_pwm_reg); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1646: FILE: drivers/i2c/chips/adm1026.c:1494:
+static DEVICE_ATTR(pwm2, S_IRUGO | S_IWUSR, show_pwm_reg, set_pwm_reg); $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pwm_reg' to 'pwm2_show' 'set_pwm_reg' to 'pwm2_store'
#1646: FILE: drivers/i2c/chips/adm1026.c:1494:
+static DEVICE_ATTR(pwm2, S_IRUGO | S_IWUSR, show_pwm_reg, set_pwm_reg); 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1646: FILE: drivers/i2c/chips/adm1026.c:1494:
+static DEVICE_ATTR(pwm2, S_IRUGO | S_IWUSR, show_pwm_reg, set_pwm_reg); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1647: FILE: drivers/i2c/chips/adm1026.c:1495:
+static DEVICE_ATTR(pwm3, S_IRUGO | S_IWUSR, show_pwm_reg, set_pwm_reg); $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pwm_reg' to 'pwm3_show' 'set_pwm_reg' to 'pwm3_store'
#1647: FILE: drivers/i2c/chips/adm1026.c:1495:
+static DEVICE_ATTR(pwm3, S_IRUGO | S_IWUSR, show_pwm_reg, set_pwm_reg); 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1647: FILE: drivers/i2c/chips/adm1026.c:1495:
+static DEVICE_ATTR(pwm3, S_IRUGO | S_IWUSR, show_pwm_reg, set_pwm_reg); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1648: FILE: drivers/i2c/chips/adm1026.c:1496:
+static DEVICE_ATTR(pwm1_enable, S_IRUGO | S_IWUSR, show_pwm_enable, $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pwm_enable' to 'pwm1_enable_show' 'set_pwm_enable' to 'pwm1_enable_store'
#1648: FILE: drivers/i2c/chips/adm1026.c:1496:
+static DEVICE_ATTR(pwm1_enable, S_IRUGO | S_IWUSR, show_pwm_enable, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1648: FILE: drivers/i2c/chips/adm1026.c:1496:
+static DEVICE_ATTR(pwm1_enable, S_IRUGO | S_IWUSR, show_pwm_enable, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1650: FILE: drivers/i2c/chips/adm1026.c:1498:
+static DEVICE_ATTR(pwm2_enable, S_IRUGO | S_IWUSR, show_pwm_enable, $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pwm_enable' to 'pwm2_enable_show' 'set_pwm_enable' to 'pwm2_enable_store'
#1650: FILE: drivers/i2c/chips/adm1026.c:1498:
+static DEVICE_ATTR(pwm2_enable, S_IRUGO | S_IWUSR, show_pwm_enable, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1650: FILE: drivers/i2c/chips/adm1026.c:1498:
+static DEVICE_ATTR(pwm2_enable, S_IRUGO | S_IWUSR, show_pwm_enable, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1652: FILE: drivers/i2c/chips/adm1026.c:1500:
+static DEVICE_ATTR(pwm3_enable, S_IRUGO | S_IWUSR, show_pwm_enable, $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pwm_enable' to 'pwm3_enable_show' 'set_pwm_enable' to 'pwm3_enable_store'
#1652: FILE: drivers/i2c/chips/adm1026.c:1500:
+static DEVICE_ATTR(pwm3_enable, S_IRUGO | S_IWUSR, show_pwm_enable, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1652: FILE: drivers/i2c/chips/adm1026.c:1500:
+static DEVICE_ATTR(pwm3_enable, S_IRUGO | S_IWUSR, show_pwm_enable, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1654: FILE: drivers/i2c/chips/adm1026.c:1502:
+static DEVICE_ATTR(temp1_auto_point1_pwm, S_IRUGO | S_IWUSR, $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_auto_pwm_min' to 'temp1_auto_point1_pwm_show' 'set_auto_pwm_min' to 'temp1_auto_point1_pwm_store'
#1654: FILE: drivers/i2c/chips/adm1026.c:1502:
+static DEVICE_ATTR(temp1_auto_point1_pwm, S_IRUGO | S_IWUSR, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1654: FILE: drivers/i2c/chips/adm1026.c:1502:
+static DEVICE_ATTR(temp1_auto_point1_pwm, S_IRUGO | S_IWUSR, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1656: FILE: drivers/i2c/chips/adm1026.c:1504:
+static DEVICE_ATTR(temp2_auto_point1_pwm, S_IRUGO | S_IWUSR, $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_auto_pwm_min' to 'temp2_auto_point1_pwm_show' 'set_auto_pwm_min' to 'temp2_auto_point1_pwm_store'
#1656: FILE: drivers/i2c/chips/adm1026.c:1504:
+static DEVICE_ATTR(temp2_auto_point1_pwm, S_IRUGO | S_IWUSR, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1656: FILE: drivers/i2c/chips/adm1026.c:1504:
+static DEVICE_ATTR(temp2_auto_point1_pwm, S_IRUGO | S_IWUSR, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1658: FILE: drivers/i2c/chips/adm1026.c:1506:
+static DEVICE_ATTR(temp3_auto_point1_pwm, S_IRUGO | S_IWUSR, $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_auto_pwm_min' to 'temp3_auto_point1_pwm_show' 'set_auto_pwm_min' to 'temp3_auto_point1_pwm_store'
#1658: FILE: drivers/i2c/chips/adm1026.c:1506:
+static DEVICE_ATTR(temp3_auto_point1_pwm, S_IRUGO | S_IWUSR, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1658: FILE: drivers/i2c/chips/adm1026.c:1506:
+static DEVICE_ATTR(temp3_auto_point1_pwm, S_IRUGO | S_IWUSR, 

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_auto_pwm_max' to 'temp1_auto_point2_pwm_show'
#1661: FILE: drivers/i2c/chips/adm1026.c:1509:
+static DEVICE_ATTR(temp1_auto_point2_pwm, S_IRUGO, show_auto_pwm_max, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1661: FILE: drivers/i2c/chips/adm1026.c:1509:
+static DEVICE_ATTR(temp1_auto_point2_pwm, S_IRUGO, show_auto_pwm_max, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_auto_pwm_max' to 'temp2_auto_point2_pwm_show'
#1662: FILE: drivers/i2c/chips/adm1026.c:1510:
+static DEVICE_ATTR(temp2_auto_point2_pwm, S_IRUGO, show_auto_pwm_max, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1662: FILE: drivers/i2c/chips/adm1026.c:1510:
+static DEVICE_ATTR(temp2_auto_point2_pwm, S_IRUGO, show_auto_pwm_max, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_auto_pwm_max' to 'temp3_auto_point2_pwm_show'
#1663: FILE: drivers/i2c/chips/adm1026.c:1511:
+static DEVICE_ATTR(temp3_auto_point2_pwm, S_IRUGO, show_auto_pwm_max, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1663: FILE: drivers/i2c/chips/adm1026.c:1511:
+static DEVICE_ATTR(temp3_auto_point2_pwm, S_IRUGO, show_auto_pwm_max, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1666: FILE: drivers/i2c/chips/adm1026.c:1514:
+int adm1026_detect(struct i2c_adapter *adapter, int address,
+		int kind)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1680: FILE: drivers/i2c/chips/adm1026.c:1528:
+	/* OK. For now, we presume we have a valid client. We now create the
+	   client structure, even though we cannot fill it completely yet.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1681: FILE: drivers/i2c/chips/adm1026.c:1529:
+	   But it allows us to access adm1026_{read,write}_value. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1683: FILE: drivers/i2c/chips/adm1026.c:1531:
+	if (!(data = kmalloc(sizeof(struct adm1026_data), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct adm1026_data)...)
#1683: FILE: drivers/i2c/chips/adm1026.c:1531:
+	if (!(data = kmalloc(sizeof(struct adm1026_data), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPLIT_STRING: quoted string split across lines
#1703: FILE: drivers/i2c/chips/adm1026.c:1551:
+	dev_dbg(&new_client->dev, "Detecting device at %d,0x%02x with"
+		" COMPANY: 0x%02x and VERSTEP: 0x%02x\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1710: FILE: drivers/i2c/chips/adm1026.c:1558:
+		dev_dbg(&new_client->dev, "Autodetecting device at %d,0x%02x "
+			"...\n", i2c_adapter_id(adapter), address);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1712: FILE: drivers/i2c/chips/adm1026.c:1560:
+		if (company == ADM1026_COMPANY_ANALOG_DEV
+		    && verstep == ADM1026_VERSTEP_ADM1026) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1715: FILE: drivers/i2c/chips/adm1026.c:1563:
+		} else if (company == ADM1026_COMPANY_ANALOG_DEV
+			&& (verstep & 0xf0) == ADM1026_VERSTEP_GENERIC) {

WARNING:SPLIT_STRING: quoted string split across lines
#1717: FILE: drivers/i2c/chips/adm1026.c:1565:
+			dev_err(&adapter->dev, ": Unrecognized stepping "
+				"0x%02x. Defaulting to ADM1026.\n", verstep);

WARNING:SPLIT_STRING: quoted string split across lines
#1721: FILE: drivers/i2c/chips/adm1026.c:1569:
+			dev_err(&adapter->dev, ": Found version/stepping "
+				"0x%02x. Assuming generic ADM1026.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1726: FILE: drivers/i2c/chips/adm1026.c:1574:
+			dev_dbg(&new_client->dev, ": Autodetection "
+				"failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1730: FILE: drivers/i2c/chips/adm1026.c:1578:
+				dev_err(&adapter->dev, "Generic ADM1026 not "
+					"found at %d,0x%02x.  Try "

WARNING:SPLIT_STRING: quoted string split across lines
#1731: FILE: drivers/i2c/chips/adm1026.c:1579:
+					"found at %d,0x%02x.  Try "
+					"force_adm1026.\n",

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1741: FILE: drivers/i2c/chips/adm1026.c:1589:
+	case any_chip :
 	              ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1744: FILE: drivers/i2c/chips/adm1026.c:1592:
+	case adm1026 :
 	             ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1747: FILE: drivers/i2c/chips/adm1026.c:1595:
+	default :
 	        ^

WARNING:SPLIT_STRING: quoted string split across lines
#1749: FILE: drivers/i2c/chips/adm1026.c:1597:
+		dev_err(&adapter->dev, ": Internal error, invalid "
+			"kind (%d)!", kind);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1753: FILE: drivers/i2c/chips/adm1026.c:1601:
+	strlcpy(new_client->name, type_name, I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1767: FILE: drivers/i2c/chips/adm1026.c:1615:
+	if ((err = i2c_attach_client(new_client)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1864: FILE: drivers/i2c/chips/adm1026.c:1712:
+^Idevice_create_file(&new_client->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1865: FILE: drivers/i2c/chips/adm1026.c:1713:
+	device_create_file(&new_client->dev, 
+		&dev_attr_temp1_auto_point1_temp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1866: FILE: drivers/i2c/chips/adm1026.c:1714:
+^Idevice_create_file(&new_client->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1867: FILE: drivers/i2c/chips/adm1026.c:1715:
+	device_create_file(&new_client->dev, 
+		&dev_attr_temp2_auto_point1_temp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1868: FILE: drivers/i2c/chips/adm1026.c:1716:
+^Idevice_create_file(&new_client->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1869: FILE: drivers/i2c/chips/adm1026.c:1717:
+	device_create_file(&new_client->dev, 
+		&dev_attr_temp3_auto_point1_temp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1871: FILE: drivers/i2c/chips/adm1026.c:1719:
+	device_create_file(&new_client->dev,
+		&dev_attr_temp1_auto_point1_temp_hyst);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1873: FILE: drivers/i2c/chips/adm1026.c:1721:
+	device_create_file(&new_client->dev,
+		&dev_attr_temp2_auto_point1_temp_hyst);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1875: FILE: drivers/i2c/chips/adm1026.c:1723:
+	device_create_file(&new_client->dev,
+		&dev_attr_temp3_auto_point1_temp_hyst);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1876: FILE: drivers/i2c/chips/adm1026.c:1724:
+^Idevice_create_file(&new_client->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1877: FILE: drivers/i2c/chips/adm1026.c:1725:
+	device_create_file(&new_client->dev, 
+		&dev_attr_temp1_auto_point2_temp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1878: FILE: drivers/i2c/chips/adm1026.c:1726:
+^Idevice_create_file(&new_client->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1879: FILE: drivers/i2c/chips/adm1026.c:1727:
+	device_create_file(&new_client->dev, 
+		&dev_attr_temp2_auto_point2_temp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1880: FILE: drivers/i2c/chips/adm1026.c:1728:
+^Idevice_create_file(&new_client->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1881: FILE: drivers/i2c/chips/adm1026.c:1729:
+	device_create_file(&new_client->dev, 
+		&dev_attr_temp3_auto_point2_temp);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1915: FILE: drivers/i2c/chips/adm1026.c:1763:
+}
+static int __init sm_adm1026_init(void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1927: FILE: drivers/i2c/chips/adm1026.c:1775:
+              "Justin Thiessen <jthiessen@penguincomputing.com>");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1927: FILE: drivers/i2c/chips/adm1026.c:1775:
+              "Justin Thiessen <jthiessen@penguincomputing.com>");$

WARNING:SPLIT_STRING: quoted string split across lines
#1927: FILE: drivers/i2c/chips/adm1026.c:1775:
+MODULE_AUTHOR("Philip Pokorny <ppokorny@penguincomputing.com>, "
+              "Justin Thiessen <jthiessen@penguincomputing.com>");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228301.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 201 errors, 186 warnings, 165 checks, 1801 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228301.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
