WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#48: 
This patch applies on top of my clocksource managment patch.
                                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'inbetween' may be misspelled - perhaps 'between'?
#124: FILE: Documentation/timekeeping.txt:43:
+But just storing this info isn't very useful, we also want to make it available to be used elsewhere. So how do we provide a notion of how much time has passed inbetween calls to timeofday_periodic_hook()?
                                                                                                                                                                 ^^^^^^^^^

WARNING:TYPO_SPELLING: 'Implmenting' may be misspelled - perhaps 'Implementing'?
#189: FILE: Documentation/timekeeping.txt:108:
+2. Implmenting the following functions
    ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'exeptions' may be misspelled - perhaps 'exceptions'?
#199: FILE: Documentation/timekeeping.txt:118:
+The exeptions to the above are:
     ^^^^^^^^^

WARNING:TYPO_SPELLING: 'aproximate' may be misspelled - perhaps 'approximate'?
#224: FILE: Documentation/timekeeping.txt:143:
+	5. A mult and shift pair that aproximate the counter frequency
 	                              ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'overrided' may be misspelled - perhaps 'overrode'?
#237: FILE: Documentation/timekeeping.txt:156:
+	The clocksource's name should be unique since it is used for both identification as well as for manually overriding the default clocksource selection. The name length must be shorter then 32 characters in order for it to be properly overrided.
 	                                                                                                                                                                                                                                         ^^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#273: FILE: Documentation/timekeeping.txt:192:
+	A 32bit counter can be found at the MMIO address 0xFEEDF000. It runs at 100Mhz. To enable it, the the low bit of the address 0xFEEDF0F0 must be set to one.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#356: FILE: include/asm-generic/timeofday.h:1:
+/*  linux/include/asm-generic/timeofday.h

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#356: FILE: include/asm-generic/timeofday.h:1:
+/*  linux/include/asm-generic/timeofday.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/asm-generic/timeofday.h:18:
+extern nsec_t read_persistent_clock(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#374: FILE: include/asm-generic/timeofday.h:19:
+extern void sync_persistent_clock(struct timespec ts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#377: FILE: include/asm-generic/timeofday.h:22:
+extern void arch_update_vsyscall_gtod(struct timespec wall_time,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: include/asm-generic/timeofday.h:23:
+extern void arch_update_vsyscall_gtod(struct timespec wall_time,
+				cycle_t offset_base, struct clocksource* clock,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#378: FILE: include/asm-generic/timeofday.h:23:
+				cycle_t offset_base, struct clocksource* clock,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: include/asm-generic/timeofday.h:26:
+# define arch_update_vsyscall_gtod(x,y,z,w) do { } while(0)
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: include/asm-generic/timeofday.h:26:
+# define arch_update_vsyscall_gtod(x,y,z,w) do { } while(0)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: include/asm-generic/timeofday.h:26:
+# define arch_update_vsyscall_gtod(x,y,z,w) do { } while(0)
                                         ^

ERROR:SPACING: space required before the open parenthesis '('
#381: FILE: include/asm-generic/timeofday.h:26:
+# define arch_update_vsyscall_gtod(x,y,z,w) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#431: FILE: include/linux/time.h:122:
+	while(unlikely(ns >= NSEC_PER_SEC)) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#446: FILE: include/linux/timeofday.h:1:
+/*  linux/include/linux/timeofday.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#446: FILE: include/linux/timeofday.h:1:
+/*  linux/include/linux/timeofday.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#461: FILE: include/linux/timeofday.h:16:
+extern ktime_t get_monotonic_clock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#462: FILE: include/linux/timeofday.h:17:
+extern ktime_t get_realtime_clock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#463: FILE: include/linux/timeofday.h:18:
+extern ktime_t get_realtime_offset(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#466: FILE: include/linux/timeofday.h:21:
+extern void get_realtime_clock_ts(struct timespec *ts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#467: FILE: include/linux/timeofday.h:22:
+extern void get_monotonic_clock_ts(struct timespec *ts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#471: FILE: include/linux/timeofday.h:26:
+extern void getnstimeofday(struct timespec *ts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#472: FILE: include/linux/timeofday.h:27:
+extern void do_gettimeofday(struct timeval *tv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#473: FILE: include/linux/timeofday.h:28:
+extern int do_settimeofday(struct timespec *ts);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#476: FILE: include/linux/timeofday.h:31:
+extern int timeofday_is_continuous(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#477: FILE: include/linux/timeofday.h:32:
+extern void timeofday_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#482: FILE: include/linux/timeofday.h:37:
+extern unsigned long arch_getoffset(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#487: FILE: include/linux/timeofday.h:42:
+extern void getnstimeofday(struct timespec *ts);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#572: FILE: kernel/time/timeofday.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#573: FILE: kernel/time/timeofday.c:2:
+ * linux/kernel/time/timeofday.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#591: FILE: kernel/time/timeofday.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#592: FILE: kernel/time/timeofday.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'teh' may be misspelled - perhaps 'the'?
#624: FILE: kernel/time/timeofday.c:53:
+ * These variables mirror teh ktime_t based variables to avoid
                           ^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#654: FILE: kernel/time/timeofday.c:83:
+#define INTERVAL_LEN ((PERIODIC_INTERVAL_MS-1)*1000000)
                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#654: FILE: kernel/time/timeofday.c:83:
+#define INTERVAL_LEN ((PERIODIC_INTERVAL_MS-1)*1000000)
                                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#675: FILE: kernel/time/timeofday.c:104:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: kernel/time/timeofday.c:141:
+	set_normalized_timespec(&wall_to_monotonic,
+		-monotonic_time_offset_ts.tv_sec,

WARNING:LINE_SPACING: Missing a blank line after declarations
#761: FILE: kernel/time/timeofday.c:190:
+	nsec_t offset = __get_nsec_offset();
+	return ktime_add_ns(system_time, offset);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#786: FILE: kernel/time/timeofday.c:215:
+EXPORT_SYMBOL_GPL(get_monotonic_clock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#815: FILE: kernel/time/timeofday.c:244:
+ * represents the offset of the realtime clock to the the monotonic clock

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#889: FILE: kernel/time/timeofday.c:318:
+EXPORT_SYMBOL(get_realtime_clock_ts);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#903: FILE: kernel/time/timeofday.c:332:
+	tv->tv_usec = now.tv_nsec/1000;
 	                         ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#906: FILE: kernel/time/timeofday.c:335:
+EXPORT_SYMBOL(do_gettimeofday);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#928: FILE: kernel/time/timeofday.c:357:
+	ktime_to_timespec(&wall_time_ts,
+				ktime_add(system_time, wall_time_offset));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#942: FILE: kernel/time/timeofday.c:371:
+EXPORT_SYMBOL(do_settimeofday);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#972: FILE: kernel/time/timeofday.c:401:
+	BUG_ON(time_suspend_state != TIME_RUNNING);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1005: FILE: kernel/time/timeofday.c:434:
+	BUG_ON(time_suspend_state != TIME_SUSPENDED);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1069: FILE: kernel/time/timeofday.c:498:
+static void timeofday_periodic_hook(void* unused)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1078: FILE: kernel/time/timeofday.c:507:
+	struct clocksource* next;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1095: FILE: kernel/time/timeofday.c:524:
+	cycle_last = (cycle_now - cycle_delta)&clock->mask;
 	                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1110: FILE: kernel/time/timeofday.c:539:
+			wall_time_offset = ktime_add_ns(wall_time_offset,
+						leapsecond * NSEC_PER_SEC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1130: FILE: kernel/time/timeofday.c:559:
+		printk(KERN_INFO "Time: %s clocksource has been installed.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1131: FILE: kernel/time/timeofday.c:560:
+		printk(KERN_INFO "Time: %s clocksource has been installed.\n",
+					clock->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1180: FILE: kernel/time/timeofday.c:609:
+		ts_interval = calculate_clocksource_interval(clock, ntp_adj,
+					INTERVAL_LEN);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1188: FILE: kernel/time/timeofday.c:617:
+	expire_time = ktime_set(0, PERIODIC_INTERVAL_MS*1000000);
 	                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1233: FILE: kernel/time/timeofday.c:662:
+	ktime_to_timespec(&wall_time_ts,
+				ktime_add(system_time, wall_time_offset));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1240: FILE: kernel/time/timeofday.c:669:
+	ts_interval = calculate_clocksource_interval(clock, ntp_adj,
+				INTERVAL_LEN);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1249: FILE: kernel/time/timeofday.c:678:
+	expire_time = ktime_set(0, PERIODIC_INTERVAL_MS*1000000);
 	                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1278: FILE: kernel/time.c:144:
+         be checked  -johnstul@us.ibm.com$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1278: FILE: kernel/time.c:144:
+/* XXX - this is somewhat cracked out and should
+         be checked  -johnstul@us.ibm.com

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#1283: FILE: kernel/time.c:149:
+	struct timespec ts;
+	getnstimeofday(&ts);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 25 warnings, 30 checks, 1193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
