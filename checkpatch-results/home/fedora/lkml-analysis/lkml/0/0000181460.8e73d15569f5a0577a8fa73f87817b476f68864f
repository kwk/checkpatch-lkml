WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#84: FILE: kernel/Kconfig.preempt:2:
+choice
+	prompt "Preemption Model"
+	default PREEMPT_NONE
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#101: FILE: kernel/Kconfig.preempt:19:
+config PREEMPT_VOLUNTARY
+	bool "Voluntary Kernel Preemption (Desktop)"
 	help
+	  This option reduces the latency of the kernel by adding more
+	  This option reduces the latency of the kernel by adding more
+	  This option reduces the latency of the kernel by adding more
+	  This option reduces the latency of the kernel by adding more
+	  This option reduces the latency of the kernel by adding more
+	  "explicit preemption points" to the kernel code. These new
+	  preemption points have been selected to reduce the maximum
+	  latency of rescheduling, providing faster application reactions,
+	  at the cost of slighly lower throughput.
+
+	  This allows reaction to interactive events by allowing a
+	  low priority process to voluntarily preempt itself even if it
+	  is in kernel mode executing a system call. This allows
+	  applications to run more 'smoothly' even when the system is
 	  under load.
 
+	  Select this if you are building a kernel for a desktop system.
+	  Select this if you are building a kernel for a desktop system.
+	  Select this if you are building a kernel for a desktop system.
+

WARNING:TYPO_SPELLING: 'slighly' may be misspelled - perhaps 'slightly'?
#112: FILE: kernel/Kconfig.preempt:26:
+	  at the cost of slighly lower throughput.
 	                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'slighly' may be misspelled - perhaps 'slightly'?
#134: FILE: kernel/Kconfig.preempt:46:
+	  system is under load, at the cost of slighly lower throughput
 	                                       ^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#152: FILE: include/linux/kernel.h:62:
+extern int cond_resched(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: include/linux/kernel.h:69:
+  void __might_sleep(char *file, int line);$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#168: FILE: include/linux/kernel.h:73:
+# define might_sleep() do { might_resched(); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181460.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 1 checks, 92 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181460.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
