WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#50: FILE: net/key/af_key.c:1569:
+	/* The order of template creation is important (RFC2401/RFC3173):
+		Transport templates first

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#54: FILE: net/key/af_key.c:1573:
+		Tunnel templates in any order */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#55: FILE: net/key/af_key.c:1574:
+	len = pol->sadb_x_policy_len*8 - sizeof(struct sadb_x_policy);
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#56: FILE: net/key/af_key.c:1575:
+	rq = (void*)(pol+1);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#56: FILE: net/key/af_key.c:1575:
+	rq = (void*)(pol+1);
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#62: FILE: net/key/af_key.c:1579:
+			if ((err = parse_ipsecrequest(xp, rq)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#66: FILE: net/key/af_key.c:1583:
+		rq = (void*)((u8*)rq + rq->sadb_x_ipsecrequest_len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#66: FILE: net/key/af_key.c:1583:
+		rq = (void*)((u8*)rq + rq->sadb_x_ipsecrequest_len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: net/key/af_key.c:1585:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#69: FILE: net/key/af_key.c:1586:
+	len = pol->sadb_x_policy_len*8 - sizeof(struct sadb_x_policy);
 	                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#70: FILE: net/key/af_key.c:1587:
+	rq = (void*)(pol+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#70: FILE: net/key/af_key.c:1587:
+	rq = (void*)(pol+1);
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#74: FILE: net/key/af_key.c:1591:
+			if ((err = parse_ipsecrequest(xp, rq)) < 0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#78: FILE: net/key/af_key.c:1595:
+		rq = (void*)((u8*)rq + rq->sadb_x_ipsecrequest_len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#78: FILE: net/key/af_key.c:1595:
+		rq = (void*)((u8*)rq + rq->sadb_x_ipsecrequest_len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: net/key/af_key.c:1597:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#81: FILE: net/key/af_key.c:1598:
+	len = pol->sadb_x_policy_len*8 - sizeof(struct sadb_x_policy);
 	                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#82: FILE: net/key/af_key.c:1599:
+	rq = (void*)(pol+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#82: FILE: net/key/af_key.c:1599:
+	rq = (void*)(pol+1);
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#86: FILE: net/key/af_key.c:1603:
+			if ((err = parse_ipsecrequest(xp, rq)) < 0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#90: FILE: net/key/af_key.c:1607:
+		rq = (void*)((u8*)rq + rq->sadb_x_ipsecrequest_len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#90: FILE: net/key/af_key.c:1607:
+		rq = (void*)((u8*)rq + rq->sadb_x_ipsecrequest_len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: net/key/af_key.c:1609:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#93: FILE: net/key/af_key.c:1610:
+	len = pol->sadb_x_policy_len*8 - sizeof(struct sadb_x_policy);
 	                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#94: FILE: net/key/af_key.c:1611:
+	rq = (void*)(pol+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#94: FILE: net/key/af_key.c:1611:
+	rq = (void*)(pol+1);
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#97: FILE: net/key/af_key.c:1614:
+			if ((err = parse_ipsecrequest(xp, rq)) < 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000392093.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 2 warnings, 8 checks, 62 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000392093.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
