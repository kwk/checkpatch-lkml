ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#52: FILE: drivers/net/e1000/e1000_ethtool.c:1055:
+	if (!(txdr->buffer_info = kcalloc(size, sizeof(struct e1000_buffer),

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: drivers/net/e1000/e1000_ethtool.c:1056:
+	if (!(txdr->buffer_info = kcalloc(size, sizeof(struct e1000_buffer),
+					GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#67: FILE: drivers/net/e1000/e1000_ethtool.c:1110:
+	if (!(rxdr->buffer_info = kcalloc(rxdr->count, sizeof(struct e1000_buffer),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: drivers/net/e1000/e1000_ethtool.c:1111:
+	if (!(rxdr->buffer_info = kcalloc(rxdr->count, sizeof(struct e1000_buffer),
+					GFP_KERNEL))) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#80: FILE: drivers/net/e1000/e1000_main.c:1225:
 static int __devinit

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: drivers/net/e1000/e1000_main.c:1228:
+^Iadapter->tx_ring = kcalloc(adapter->num_tx_queues, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/net/e1000/e1000_main.c:1229:
+	adapter->tx_ring = kcalloc(adapter->num_tx_queues, 
+		sizeof(struct e1000_tx_ring), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/net/e1000/e1000_main.c:1234:
+	adapter->rx_ring = kcalloc(adapter->num_rx_queues,
+		sizeof(struct e1000_rx_ring), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: drivers/net/e1000/e1000_main.c:1242:
+	adapter->polling_netdev = kcalloc(adapter->num_rx_queues,
+		sizeof(struct net_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*rxdr->buffer_info)...) over vmalloc(sizeof(struct e1000_buffer)...)
#126: FILE: drivers/net/e1000/e1000_main.c:1614:
+	rxdr->buffer_info = vmalloc(sizeof(struct e1000_buffer) * rxdr->count);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: drivers/net/e1000/e1000_main.c:1623:
+	rxdr->ps_page = kcalloc(rxdr->count, sizeof(struct e1000_ps_page),
+		GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/net/e1000/e1000_main.c:1632:
+	rxdr->ps_page_dma = kcalloc(rxdr->count, sizeof(struct e1000_ps_page_dma),
+		GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000009954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 1 warnings, 8 checks, 114 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000009954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
