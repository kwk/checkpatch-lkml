ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: kernel/sched.c:218:
+  ^Iint prio;^I^I^I/* Priority of the task-group */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: kernel/sched.c:218:
+  ^Iint prio;^I^I^I/* Priority of the task-group */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/sched.c:218:
+  ^Iint prio;^I^I^I/* Priority of the task-group */$

CHECK:SPACING: No space is necessary after a cast
#148: FILE: kernel/sched.c:717:
+#define NUM_LONG_TICKS  (unsigned short) (CPU_CONTROL_LONG_WINDOW /	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#148: FILE: kernel/sched.c:717:
+#define NUM_LONG_TICKS  (unsigned short) (CPU_CONTROL_LONG_WINDOW /	\
+						CPU_CONTROL_SHORT_WINDOW)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'grp' may be better as '(grp)' to avoid precedence issues
#151: FILE: kernel/sched.c:720:
+#define greedy_grp(grp) (!grp->long_ticks)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#172: FILE: kernel/sched.c:776:
+#define TASK_PREEMPTS_CURR(p, rq) \
+	(idle_cpu(task_cpu(p)) || \
+	 (greedy_task((rq)->curr) && !greedy_task(p)) || \
+	 ((task_grp_rq(p)->rq_array == task_grp_rq((rq)->curr)->rq_array) && \
+                                          (((p)->prio < (rq)->curr->prio))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rq' - possible side-effects?
#172: FILE: kernel/sched.c:776:
+#define TASK_PREEMPTS_CURR(p, rq) \
+	(idle_cpu(task_cpu(p)) || \
+	 (greedy_task((rq)->curr) && !greedy_task(p)) || \
+	 ((task_grp_rq(p)->rq_array == task_grp_rq((rq)->curr)->rq_array) && \
+                                          (((p)->prio < (rq)->curr->prio))))

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: kernel/sched.c:780:
+                                          (((p)->prio < (rq)->curr->prio))))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/sched.c:780:
+                                          (((p)->prio < (rq)->curr->prio))))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: kernel/sched.c:785:
+^I^I        ((p)->prio < (rq)->curr->prio)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: kernel/sched.c:3143:
+static inline void move_task_grp_list(struct prio_array *src,
+					struct prio_array *dst)

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: kernel/sched.c:3264:
+                struct prio_array *target;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: kernel/sched.c:3264:
+                struct prio_array *target;$

CHECK:BRACES: Unbalanced braces around else statement
#232: FILE: kernel/sched.c:3272:
+		} else /* should be in rq->greedy_active */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: kernel/sched.c:3571:
+				switch_array(rq->greedy_active,
+						rq->greedy_expired);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#313: FILE: kernel/sched.c:7049:
+		rq->last_update = tgrq->last_update = jiffies;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000033897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 4 warnings, 8 checks, 211 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000033897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
