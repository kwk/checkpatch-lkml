WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#35: 
I'm still undecided wether it is better to have a list
                    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#111: FILE: arch/powerpc/platforms/cell/spufs/run.c:116:
+		printk(KERN_WARNING "%s: unexpected return code %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: arch/powerpc/platforms/cell/spufs/run.c:117:
+		printk(KERN_WARNING "%s: unexpected return code %ld\n",
+			__FUNCTION__, *spu_ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#112: FILE: arch/powerpc/platforms/cell/spufs/run.c:117:
+			__FUNCTION__, *spu_ret);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#129: FILE: arch/powerpc/platforms/cell/spufs/run.c:134:
+	ls_pointer = *(u32*)(ls + npc);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: arch/powerpc/platforms/cell/spufs/run.c:137:
+	memcpy(&s, ls + ls_pointer, sizeof (s));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#136: FILE: arch/powerpc/platforms/cell/spufs/run.c:141:
+	spu_ret = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#143: FILE: arch/powerpc/platforms/cell/spufs/run.c:148:
+		if (spu_ret <= -ERESTARTSYS) {
+			ret = spu_handle_restartsys(ctx, &spu_ret, &npc);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: arch/powerpc/platforms/cell/spufs/run.c:157:
+	memcpy(ls + ls_pointer, &spu_ret, sizeof (spu_ret));

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#186: FILE: include/asm-powerpc/spu.h:155:
+	u64 parm[6];
 	    ^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#188: FILE: include/asm-powerpc/spu.h:157:
+};
+extern long spu_sys_callback(struct spu_syscall_block *s);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#188: FILE: include/asm-powerpc/spu.h:157:
+extern long spu_sys_callback(struct spu_syscall_block *s);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#207: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#536: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:330:
+		pr_debug("%s: invalid syscall #%ld", __FUNCTION__, s->nr_ret);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#537: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:331:
+		return -ENOSYS;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#542: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:336:
+	printk("syscall%ld(%lx, %lx, %lx, %lx, %lx, %lx)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:337:
+	printk("syscall%ld(%lx, %lx, %lx, %lx, %lx, %lx)\n",
+			s->nr_ret,

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#544: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:338:
+			s->parm[0], s->parm[1], s->parm[2],
 			   ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#544: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:338:
+			s->parm[0], s->parm[1], s->parm[2],
 			               ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#544: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:338:
+			s->parm[0], s->parm[1], s->parm[2],
 			                           ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#545: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:339:
+			s->parm[3], s->parm[4], s->parm[5]);
 			   ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#545: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:339:
+			s->parm[3], s->parm[4], s->parm[5]);
 			               ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#545: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:339:
+			s->parm[3], s->parm[4], s->parm[5]);
 			                           ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#548: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:342:
+	return syscall(s->parm[0], s->parm[1], s->parm[2],
 	                  ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#548: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:342:
+	return syscall(s->parm[0], s->parm[1], s->parm[2],
 	                              ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#548: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:342:
+	return syscall(s->parm[0], s->parm[1], s->parm[2],
 	                                          ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#549: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:343:
+		       s->parm[3], s->parm[4], s->parm[5]);
 		          ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#549: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:343:
+		       s->parm[3], s->parm[4], s->parm[5]);
 		                      ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#549: FILE: arch/powerpc/platforms/cell/spu_callbacks.c:343:
+		       s->parm[3], s->parm[4], s->parm[5]);
 		                                  ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091225.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 24 warnings, 4 checks, 482 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091225.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
