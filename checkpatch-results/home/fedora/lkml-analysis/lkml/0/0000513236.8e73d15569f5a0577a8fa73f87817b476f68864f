ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: net/ipv4/devinet.c:23:
+ *^I^IMatthias Andree:^Iin devinet_ioctl, compare label and $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#124: FILE: net/ipv4/devinet.c:546:
+			/* note: we only do this for a limited set of ioctls
+			   and only if the original address family was AF_INET.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#125: FILE: net/ipv4/devinet.c:547:
+			   This is checked above. */

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#126: FILE: net/ipv4/devinet.c:548:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#126: FILE: net/ipv4/devinet.c:548:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#126: FILE: net/ipv4/devinet.c:548:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			                                 ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#126: FILE: net/ipv4/devinet.c:548:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#126: FILE: net/ipv4/devinet.c:548:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			                                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#126: FILE: net/ipv4/devinet.c:548:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			                                                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sin_orig.sin_addr.s_addr == ifa->ifa_address'
#127: FILE: net/ipv4/devinet.c:549:
+				if ((strcmp(ifr.ifr_name, ifa->ifa_label) == 0)
+				    && (sin_orig.sin_addr.s_addr == ifa->ifa_address)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#128: FILE: net/ipv4/devinet.c:550:
+				if ((strcmp(ifr.ifr_name, ifa->ifa_label) == 0)
+				    && (sin_orig.sin_addr.s_addr == ifa->ifa_address)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: net/ipv4/devinet.c:558:
+^I^I   4.3BSD-style and passed in junk so we fall back to $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#136: FILE: net/ipv4/devinet.c:558:
+		/* we didn't get a match, maybe the application is
+		   4.3BSD-style and passed in junk so we fall back to 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#137: FILE: net/ipv4/devinet.c:559:
+		   comparing just the label */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ifa"
#138: FILE: net/ipv4/devinet.c:560:
+		if (ifa == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#139: FILE: net/ipv4/devinet.c:561:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next)
 			         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#139: FILE: net/ipv4/devinet.c:561:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next)
 			          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#139: FILE: net/ipv4/devinet.c:561:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next)
 			                                 ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#139: FILE: net/ipv4/devinet.c:561:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next)
 			                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#139: FILE: net/ipv4/devinet.c:561:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next)
 			                                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#139: FILE: net/ipv4/devinet.c:561:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next)
 			                                                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513236.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 4 warnings, 3 checks, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513236.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
