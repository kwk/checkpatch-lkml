WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
o Saving the cpu registers of all cpus before booting in to the crash kernel.

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#35: 
  panic has occured. One of the concerns ppc64 folks raised is that after
            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#53: 
Signed-off-by:Murali M Chakravarthy <muralim@in.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: arch/x86_64/Kconfig:405:
+config CRASH_DUMP
+	bool "kernel crash dumps (EXPERIMENTAL)"
+	depends on EMBEDDED
+	depends on EXPERIMENTAL
+	help
+		Generate crash dump after being started by kexec.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#99: FILE: arch/x86_64/kernel/crash.c:30:
+static u32 *append_elf_note(u32 *buf, char *name, unsigned type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: arch/x86_64/kernel/crash.c:31:
+static u32 *append_elf_note(u32 *buf, char *name, unsigned type,
+						void *data, size_t data_len)

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#108: FILE: arch/x86_64/kernel/crash.c:39:
+	buf += (sizeof(note) +3)/4;
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#108: FILE: arch/x86_64/kernel/crash.c:39:
+	buf += (sizeof(note) +3)/4;
 	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#110: FILE: arch/x86_64/kernel/crash.c:41:
+	buf += (note.n_namesz + 3)/4;
 	                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#112: FILE: arch/x86_64/kernel/crash.c:43:
+	buf += (note.n_descsz + 3)/4;
 	                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu < 0'
#132: FILE: arch/x86_64/kernel/crash.c:63:
+	if ((cpu < 0) || (cpu >= NR_CPUS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu >= NR_CPUS'
#132: FILE: arch/x86_64/kernel/crash.c:63:
+	if ((cpu < 0) || (cpu >= NR_CPUS))

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#132: FILE: arch/x86_64/kernel/crash.c:63:
+	if ((cpu < 0) || (cpu >= NR_CPUS))

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#140: FILE: arch/x86_64/kernel/crash.c:71:
+	 * all of that that no need to invent something new.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#143: FILE: arch/x86_64/kernel/crash.c:74:
+	buf = (u32*)per_cpu_ptr(crash_notes, cpu);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: arch/x86_64/kernel/crash.c:83:
+	buf = append_elf_note(buf, "CORE", NT_PRSTATUS, &prstatus,
+					sizeof(prstatus));

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#197: FILE: include/asm-x86_64/kexec.h:32:
+ * Saving the registers of the cpu on which panic occured in
                                                   ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: include/asm-x86_64/kexec.h:38:
+static inline void crash_setup_regs(struct pt_regs *newregs,
+						struct pt_regs *oldregs)

CHECK:BRACES: braces {} should be used on all arms of this statement
#205: FILE: include/asm-x86_64/kexec.h:40:
+	if (oldregs)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#207: FILE: include/asm-x86_64/kexec.h:42:
+	else {

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#224: FILE: include/asm-x86_64/kexec.h:59:
+		__asm__ __volatile__("movl %%ss, %%eax;" :"=a"(newregs->ss));
 		                                         ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#225: FILE: include/asm-x86_64/kexec.h:60:
+		__asm__ __volatile__("movl %%cs, %%eax;" :"=a"(newregs->cs));
 		                                         ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#226: FILE: include/asm-x86_64/kexec.h:61:
+		__asm__ __volatile__("pushfq; popq %0" :"=m"(newregs->eflags));
 		                                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133752.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 11 checks, 154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133752.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
