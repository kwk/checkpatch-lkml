WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> > does not take processes into account which fork a lot of child processes.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: mm/oom_kill.c:59:
+^I * Processes which fork a lot of child processes are likely $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#91: FILE: mm/oom_kill.c:60:
+	 * a good choice. We add the vmsize of the childs if they
 	                                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#93: FILE: mm/oom_kill.c:62:
+	 * machine with an endless amount of childs
 	                                     ^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#97: FILE: mm/oom_kill.c:66:
+		struct task_struct *chld;
+		chld = list_entry(tsk, struct task_struct, sibling);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#142: FILE: mm/oom_kill.c:168:
+		printk(KERN_WARNING "tried to kill init!\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: mm/oom_kill.c:201:
+	task_t * g, * q;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#154: FILE: mm/oom_kill.c:201:
+	task_t * g, * q;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: mm/oom_kill.c:225:
+ ^Istruct mm_struct *mm;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: mm/oom_kill.c:225:
+ ^Istruct mm_struct *mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: mm/oom_kill.c:225:
+ ^Istruct mm_struct *mm;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#207: FILE: mm/oom_kill.c:252:
+	task_t * p;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: mm/page_alloc.c:617:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#353: FILE: mm/page_alloc.c:642:
+		if (page) {
 			goto got_pg;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#402: FILE: mm/page_alloc.c:709:
+			min += (1<<order) + z->protection[alloc_type];
 			         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#423: FILE: mm/page_alloc.c:727:
+			min += (1<<order) + z->protection[alloc_type];
 			         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#445: FILE: mm/swap_state.c:62:
+	printk("Free swap  = %lukB\n", nr_swap_pages << (PAGE_SHIFT - 10));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#446: FILE: mm/swap_state.c:63:
+	printk("Total swap = %lukB\n", total_swap_pages << (PAGE_SHIFT - 10));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 10 warnings, 2 checks, 370 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
