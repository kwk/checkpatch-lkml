WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#15: 
Subject: [PATCH: 003/012] Memory hotplug for new nodes v.2. (Wait table and zonelists initalization)
                                                                                      ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#39: 
 Signed-off-by: Dave Hansen <haveblue@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#40: 
 Signed-off-by: Hiroyuki Kamezawa <kamezawa.hiroyu@jp.fujitsu.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#41: 
 Signed-off-by: Yasunori Goto <y-goto@jp.fujitsu.com>

ERROR:SPACING: space required before the open brace '{'
#73: FILE: mm/page_alloc.c:2088:
+	if (hotadd){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#77: FILE: mm/page_alloc.c:2092:
+		while (size){

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#78: FILE: mm/page_alloc.c:2093:
+			p = kmalloc(size * sizeof(wait_queue_head_t),
+				    GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: mm/page_alloc.c:2108:
+^I^I^I^I^I        * sizeof(wait_queue_head_t));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: mm/page_alloc.c:2859:
+	int i;
+	for_each_online_node(i)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: mm/page_alloc.c:2871:
+	unsigned long flags;
+	spin_lock_irqsave(&zone_init_lock,flags);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: mm/page_alloc.c:2871:
+	spin_lock_irqsave(&zone_init_lock,flags);
 	                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#141: FILE: mm/page_alloc.c:2877:
+	printk(KERN_DEBUG "hot add zone init %lx %lx.....\n",

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#155: FILE: mm/page_alloc.c:2891:
+	stop_machine_run(__build_all_zonelists, zone->zone_pgdat, NR_CPUS);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#170: FILE: include/linux/mmzone.h:407:
+	/* When hot-add, present page is 0 at this point.
+	   So check spanned_pages instead of present_pages */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#170: FILE: include/linux/mmzone.h:407:
+	   So check spanned_pages instead of present_pages */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#196: FILE: include/linux/memory_hotplug.h:92:
+extern int hot_add_zone_init(struct zone *, unsigned long, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zone *' should also have an identifier name
#196: FILE: include/linux/memory_hotplug.h:92:
+extern int hot_add_zone_init(struct zone *, unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#196: FILE: include/linux/memory_hotplug.h:92:
+extern int hot_add_zone_init(struct zone *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#196: FILE: include/linux/memory_hotplug.h:92:
+extern int hot_add_zone_init(struct zone *, unsigned long, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 1 checks, 133 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
