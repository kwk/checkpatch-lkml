WARNING:TYPO_SPELLING: 'approch' may be misspelled - perhaps 'approach'?
#30: 
I find the dynamic syscall approch in some vendor kernel out there
                           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#34: 
@@ -636,6 +637,12 @@

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#160: FILE: fs/aio.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#165: FILE: fs/aio.c:6:
+asmlinkage long sys_io_setup(unsigned nr_reqs, aio_context_t *ctxp)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#167: FILE: fs/aio.c:8:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#172: FILE: fs/aio.c:13:
+	return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#177: FILE: fs/aio.c:18:
+	return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#182: FILE: fs/aio.c:23:
+	return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#188: FILE: fs/aio.c:29:
+	return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#196: FILE: fs/aio.c:37:
+	return -ENOSYS;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#219: FILE: include/linux/aio.h:1:
+#ifndef __LINUX__AIO_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#229: FILE: include/linux/aio_abi.h:1:
+/* linux/aio_abi.h

WARNING:NEW_TYPEDEFS: do not add new typedefs
#257: FILE: include/linux/aio_abi.h:29:
+typedef unsigned long	aio_context_t;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: include/linux/aio_abi.h:50:
+#define PADDED(x,y)	x, y
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#278: FILE: include/linux/aio_abi.h:50:
+#define PADDED(x,y)	x, y

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: include/linux/aio_abi.h:52:
+#define PADDED(x,y)	y, x
                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#280: FILE: include/linux/aio_abi.h:52:
+#define PADDED(x,y)	y, x

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: include/linux/aio_abi.h:66:
+	__u64	aio_data;	/* data to be returned in event's data */
+	__u32	PADDED(aio_key, aio_reserved1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'aio_key' should also have an identifier name
#294: FILE: include/linux/aio_abi.h:66:
+	__u32	PADDED(aio_key, aio_reserved1);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'aio_reserved1' should also have an identifier name
#294: FILE: include/linux/aio_abi.h:66:
+	__u32	PADDED(aio_key, aio_reserved1);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 15 warnings, 0 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
