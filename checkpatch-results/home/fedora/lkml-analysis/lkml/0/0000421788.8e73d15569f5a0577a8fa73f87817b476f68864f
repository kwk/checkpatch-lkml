WARNING:TYPO_SPELLING: 'realy' may be misspelled - perhaps 'really'?
#70: 
NOTE!! The attached "patch" is not realy a patch its complete files.
                                   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: include/linux/id.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#78: FILE: include/linux/id.h:2:
+ * include/linux/id.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: include/linux/id.h:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#89: FILE: include/linux/id.h:13:
+#define ID_MASK ((1 << ID_BITS)-1)
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#90: FILE: include/linux/id.h:14:
+#define ID_FULL ((1 << (1 << ID_BITS))-1)
                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#96: FILE: include/linux/id.h:20:
+	unsigned int	bitmap: (1<<ID_BITS);
 	            	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#97: FILE: include/linux/id.h:21:
+	struct id_layer	*ary[1<<ID_BITS];
 	               	      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#116: FILE: include/linux/id.h:40:
+		p->bitmap |= 1<<bit;
 		              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#118: FILE: include/linux/id.h:42:
+		p->bitmap &= ~(1<<bit);
 		                ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#127: FILE: kernel/id.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#128: FILE: kernel/id.c:2:
+ * linux/kernel/id.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: kernel/id.c:8:
+ * Small id to pointer translation service.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: kernel/id.c:10:
+ * It uses a radix tree like structure as a sparse array indexed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: kernel/id.c:12:
+ * an new id quick.  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: kernel/id.c:15:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#163: FILE: kernel/id.c:37:
+	if (!(p = id_free))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: kernel/id.c:38:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#168: FILE: kernel/id.c:42:
+	return(p);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#191: FILE: kernel/id.c:65:
+		return(NULL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#206: FILE: kernel/id.c:80:
+	int id_base = id & ~((1 << (shift+ID_BITS))-1);
 	                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#206: FILE: kernel/id.c:80:
+	int id_base = id & ~((1 << (shift+ID_BITS))-1);
 	                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: kernel/id.c:82:
+^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#214: FILE: kernel/id.c:88:
+			p->bitmap |= 1<<n;
 			              ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#215: FILE: kernel/id.c:89:
+			return(id);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#219: FILE: kernel/id.c:93:
+		if ((v = sub_alloc(p->ary[n], shift-ID_BITS, id, ptr))) {
 		                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#219: FILE: kernel/id.c:93:
+		if ((v = sub_alloc(p->ary[n], shift-ID_BITS, id, ptr))) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#221: FILE: kernel/id.c:95:
+			return(v);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: kernel/id.c:105:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#235: FILE: kernel/id.c:109:
+	while (id_free_cnt < n+1) {
 	                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#246: FILE: kernel/id.c:120:
+	if ((last == ((1 << n)-1) && last < idp->min_wrap) ||
 	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: kernel/id.c:121:
+	if ((last == ((1 << n)-1) && last < idp->min_wrap) ||
+		idp->count == (1 << n)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#255: FILE: kernel/id.c:129:
+	if (last >= ((1 << n)-1))
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: kernel/id.c:136:
+	id = last+1;
 	         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#263: FILE: kernel/id.c:137:
+	if (!(v = sub_alloc(idp->top, n-ID_BITS, id, ptr)))
 	                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#263: FILE: kernel/id.c:137:
+	if (!(v = sub_alloc(idp->top, n-ID_BITS, id, ptr)))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#264: FILE: kernel/id.c:138:
+		v = sub_alloc(idp->top, n-ID_BITS, 1, ptr);
 		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#268: FILE: kernel/id.c:142:
+	return(v+1);
 	        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#271: FILE: kernel/id.c:145:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: kernel/id.c:150:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#277: FILE: kernel/id.c:151:
+if (!p) {
+printk("in sub_remove for id=%d called with null pointer.\n", id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#278: FILE: kernel/id.c:152:
+printk("in sub_remove for id=%d called with null pointer.\n", id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sub_remove', this function's name, in a string
#278: FILE: kernel/id.c:152:
+printk("in sub_remove for id=%d called with null pointer.\n", id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#279: FILE: kernel/id.c:153:
+return(0);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#281: FILE: kernel/id.c:155:
+}
+	rv = 0;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#282: FILE: kernel/id.c:156:
+	bitmap = p->bitmap & ~(1<<n);
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#288: FILE: kernel/id.c:162:
+		if (sub_remove(p->ary[n], shift-ID_BITS, id)) {
 		                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#309: FILE: kernel/id.c:183:
+	sub_remove(idp->top, (idp->layers-1)*ID_BITS, id);
 	                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#309: FILE: kernel/id.c:183:
+	sub_remove(idp->top, (idp->layers-1)*ID_BITS, id);
 	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: kernel/id.c:186:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#312: FILE: kernel/id.c:186:
+	if (id_free_cnt >= ID_FREE_MAX) {
+		

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: kernel/id.c:198:
+^I^Iid_layer_cache = kmem_cache_create("id_layer_cache", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: kernel/id.c:199:
+		id_layer_cache = kmem_cache_create("id_layer_cache", 
+			sizeof(struct id_layer), 0, 0, 0, 0);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#340: FILE: kernel/id.c:214:
+__initcall(init_id_cache);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#345: FILE: kernel/posix-timers.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: kernel/posix-timers.c:4:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: kernel/posix-timers.c:10:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: kernel/posix-timers.c:12:
+ *^I     -^IAdd a separate queue for posix timers.  Its a $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#358: FILE: kernel/posix-timers.c:14:
+ * ^I^Ilinked list & a rbtree as an index into the list.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#365: FILE: kernel/posix-timers.c:21:
+ * ^IThis is an experimental change.  I'm sending it out to$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: kernel/posix-timers.c:22:
+ *^Ithe mailing list in the hope that it will stimulate $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: kernel/posix-timers.c:26:
+/* These are all the functions necessary to implement $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#380: FILE: kernel/posix-timers.c:36:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#389: FILE: kernel/posix-timers.c:45:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: kernel/posix-timers.c:49:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: kernel/posix-timers.c:49:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#393: FILE: kernel/posix-timers.c:49:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
+		       u64 result = dividend;		\
+		       *remainder = do_div(result,divisor); \
+		       result; })

WARNING:TABSTOP: Statements should start on a tabstop
#394: FILE: kernel/posix-timers.c:50:
+		       u64 result = dividend;		\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: kernel/posix-timers.c:51:
+		       *remainder = do_div(result,divisor); \
 		                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#400: FILE: kernel/posix-timers.c:56:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: kernel/posix-timers.c:66:
+^Istruct rb_node it_pq_node;^I$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#437: FILE: kernel/posix-timers.c:93:
+	spinlock_t		lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#446: FILE: kernel/posix-timers.c:102:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#447: FILE: kernel/posix-timers.c:103:
+#if 0

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#454: FILE: kernel/posix-timers.c:110:
+	int ( *clock_set)(struct timespec *tp);

ERROR:SPACING: space prohibited after that open parenthesis '('
#454: FILE: kernel/posix-timers.c:110:
+	int ( *clock_set)(struct timespec *tp);

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#455: FILE: kernel/posix-timers.c:111:
+	int ( *clock_get)(struct timespec *tp);

ERROR:SPACING: space prohibited after that open parenthesis '('
#455: FILE: kernel/posix-timers.c:111:
+	int ( *clock_get)(struct timespec *tp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: kernel/posix-timers.c:112:
+^Iint ( *nsleep)(   int flags, $

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#456: FILE: kernel/posix-timers.c:112:
+	int ( *nsleep)(   int flags, 

ERROR:SPACING: space prohibited after that open parenthesis '('
#456: FILE: kernel/posix-timers.c:112:
+	int ( *nsleep)(   int flags, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: kernel/posix-timers.c:113:
+	int ( *nsleep)(   int flags, 
+			   struct timespec*new_setting,

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#457: FILE: kernel/posix-timers.c:113:
+			   struct timespec*new_setting,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#459: FILE: kernel/posix-timers.c:115:
+	int ( *timer_set)(struct k_itimer *timr, int flags,

ERROR:SPACING: space prohibited after that open parenthesis '('
#459: FILE: kernel/posix-timers.c:115:
+	int ( *timer_set)(struct k_itimer *timr, int flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: kernel/posix-timers.c:116:
+	int ( *timer_set)(struct k_itimer *timr, int flags,
+			   struct itimerspec *new_setting,

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#462: FILE: kernel/posix-timers.c:118:
+	int  ( *timer_del)(struct k_itimer *timr);

ERROR:SPACING: space prohibited after that open parenthesis '('
#462: FILE: kernel/posix-timers.c:118:
+	int  ( *timer_del)(struct k_itimer *timr);

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#463: FILE: kernel/posix-timers.c:119:
+	void ( *timer_get)(struct k_itimer *timr,

ERROR:SPACING: space prohibited after that open parenthesis '('
#463: FILE: kernel/posix-timers.c:119:
+	void ( *timer_get)(struct k_itimer *timr,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#467: FILE: kernel/posix-timers.c:123:
+int do_posix_clock_monotonic_gettime(struct timespec *tp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#468: FILE: kernel/posix-timers.c:124:
+int do_posix_clock_monotonic_settime(struct timespec *tp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#481: FILE: kernel/posix-timers.c:137:
+void run_posix_timers(unsigned long dummy);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#488: FILE: kernel/posix-timers.c:144:
+	.res = NSEC_PER_SEC/HZ,
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#493: FILE: kernel/posix-timers.c:149:
+	.res= NSEC_PER_SEC/HZ,
 	    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#493: FILE: kernel/posix-timers.c:149:
+	.res= NSEC_PER_SEC/HZ,
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: kernel/posix-timers.c:150:
+^I.clock_get = do_posix_clock_monotonic_gettime, $

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#500: FILE: kernel/posix-timers.c:156:
+	struct rb_node ** p = &pq->rb_root.rb_node;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#501: FILE: kernel/posix-timers.c:157:
+	struct rb_node * parent = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#504: FILE: kernel/posix-timers.c:160:
+	struct list_head *prev;
+	prev = &pq->head;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#507: FILE: kernel/posix-timers.c:163:
+		BUG();

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#509: FILE: kernel/posix-timers.c:165:
+	while (*p)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#512: FILE: kernel/posix-timers.c:168:
+		cur = rb_entry(parent, struct k_itimer , it_pq_node);
 		                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: kernel/posix-timers.c:175:
+		if (t->it_v.it_value.tv_sec < cur->it_v.it_value.tv_sec  ||
+			(t->it_v.it_value.tv_sec == cur->it_v.it_value.tv_sec &&

CHECK:BRACES: Unbalanced braces around else statement
#522: FILE: kernel/posix-timers.c:178:
+		else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#557: FILE: kernel/posix-timers.c:213:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: kernel/posix-timers.c:231:
+ * If we are late delivering a periodic timer we may $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: kernel/posix-timers.c:232:
+ * have missed several expiries.  We want to calculate the $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#587: FILE: kernel/posix-timers.c:243:
+#if 0

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#591: FILE: kernel/posix-timers.c:247:
+	in =  (long long)t->it_v.it_interval.tv_sec*1000000000 +
 	                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#594: FILE: kernel/posix-timers.c:250:
+	ovr = ldt/in + 1;
 	         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: kernel/posix-timers.c:266:
+^I^I(dt.tv_sec == t->it_v.it_interval.tv_sec && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: kernel/posix-timers.c:266:
+	while (dt.tv_sec > t->it_v.it_interval.tv_sec ||
+		(dt.tv_sec == t->it_v.it_interval.tv_sec && 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#614: FILE: kernel/posix-timers.c:270:
+		if (dt.tv_nsec < 0) {
+			 dt.tv_sec--;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: kernel/posix-timers.c:291:
+ * JIM - ovr is a count of over-runs when the processing of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: kernel/posix-timers.c:292:
+ * expiry has been delayed more than the timer interval.  $

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#644: FILE: kernel/posix-timers.c:300:
+	if (! (timr->it_sigev_notify & SIGEV_NONE)) {
 	    ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#645: FILE: kernel/posix-timers.c:301:
+	if (! (timr->it_sigev_notify & SIGEV_NONE)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#665: FILE: kernel/posix-timers.c:321:
+			printk(KERN_WARNING "sending signal failed: %d\n", ret);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#682: FILE: kernel/posix-timers.c:338:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: kernel/posix-timers.c:339:
+ * Check if the timer at the head of the priority queue has $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#696: FILE: kernel/posix-timers.c:352:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#710: FILE: kernel/posix-timers.c:366:
+			nsec = dt.tv_sec ? 1000000000-dt.tv_nsec : -dt.tv_nsec;
 			                             ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#712: FILE: kernel/posix-timers.c:368:
+			return(nsec);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: kernel/posix-timers.c:383:
+^I^I^I   (dt.tv_sec == t->it_v.it_interval.tv_sec && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#727: FILE: kernel/posix-timers.c:383:
+			if (dt.tv_sec > t->it_v.it_interval.tv_sec ||
+			   (dt.tv_sec == t->it_v.it_interval.tv_sec && 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#773: FILE: kernel/posix-timers.c:429:
+	do_gettimeofday((struct timeval*)&now);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: kernel/posix-timers.c:437:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#782: FILE: kernel/posix-timers.c:438:
+	
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: kernel/posix-timers.c:441:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: kernel/posix-timers.c:457:
+ $

WARNING:TYPO_SPELLING: 'underlaying' may be misspelled - perhaps 'underlying'?
#805: FILE: kernel/posix-timers.c:461:
+ *	    resolution may depend on the underlaying clock hardware and
   	                                 ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#819: FILE: kernel/posix-timers.c:475:
+ *^I    fields are not modified by timer code. $

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#831: FILE: kernel/posix-timers.c:487:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                        ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#831: FILE: kernel/posix-timers.c:487:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	                       ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#831: FILE: kernel/posix-timers.c:487:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                       ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#831: FILE: kernel/posix-timers.c:487:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	 ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#831: FILE: kernel/posix-timers.c:487:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#831: FILE: kernel/posix-timers.c:487:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'clock_fun' - possible side-effects?
#831: FILE: kernel/posix-timers.c:487:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'clock_fun' may be better as '(clock_fun)' to avoid precedence issues
#831: FILE: kernel/posix-timers.c:487:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'parms' - possible side-effects?
#831: FILE: kernel/posix-timers.c:487:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#832: FILE: kernel/posix-timers.c:488:
+							      clock_fun parms
 							                ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#834: FILE: kernel/posix-timers.c:490:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#834: FILE: kernel/posix-timers.c:490:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \
                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#834: FILE: kernel/posix-timers.c:490:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#836: FILE: kernel/posix-timers.c:492:
+					     (a,b))
 					       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#838: FILE: kernel/posix-timers.c:494:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#838: FILE: kernel/posix-timers.c:494:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#838: FILE: kernel/posix-timers.c:494:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#838: FILE: kernel/posix-timers.c:494:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#840: FILE: kernel/posix-timers.c:496:
+					    (a,b,c))
 					      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#840: FILE: kernel/posix-timers.c:496:
+					    (a,b,c))
 					        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#842: FILE: kernel/posix-timers.c:498:
+#define p_timer_del( clock,a) if_clock_do((clock)->timer_del, \
                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#842: FILE: kernel/posix-timers.c:498:
+#define p_timer_del( clock,a) if_clock_do((clock)->timer_del, \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#846: FILE: kernel/posix-timers.c:502:
+void register_posix_clock(int clock_id, struct k_clock * new_clock);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#846: FILE: kernel/posix-timers.c:502:
+void register_posix_clock(int clock_id, struct k_clock * new_clock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#850: FILE: kernel/posix-timers.c:506:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#851: FILE: kernel/posix-timers.c:507:
+void register_posix_clock(int clock_id,struct k_clock * new_clock)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#851: FILE: kernel/posix-timers.c:507:
+void register_posix_clock(int clock_id,struct k_clock * new_clock)
                                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#853: FILE: kernel/posix-timers.c:509:
+	if ( (unsigned)clock_id >= MAX_CLOCKS){

ERROR:SPACING: space required before the open brace '{'
#853: FILE: kernel/posix-timers.c:509:
+	if ( (unsigned)clock_id >= MAX_CLOCKS){

ERROR:SPACING: space prohibited after that open parenthesis '('
#853: FILE: kernel/posix-timers.c:509:
+	if ( (unsigned)clock_id >= MAX_CLOCKS){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#854: FILE: kernel/posix-timers.c:510:
+		printk("POSIX clock register failed for clock_id %d\n",clock_id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#854: FILE: kernel/posix-timers.c:510:
+		printk("POSIX clock register failed for clock_id %d\n",clock_id);
 		                                                      ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#862: FILE: kernel/posix-timers.c:518:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: kernel/posix-timers.c:520:
+	posix_timers_cache = kmem_cache_create("posix_timers_cache",
+		sizeof(struct k_itimer), 0, 0, 0, 0);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#867: FILE: kernel/posix-timers.c:523:
+	register_posix_clock(CLOCK_REALTIME,&clock_realtime);
 	                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#867: FILE: kernel/posix-timers.c:523:
+	register_posix_clock(CLOCK_REALTIME,&clock_realtime);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#868: FILE: kernel/posix-timers.c:524:
+	register_posix_clock(CLOCK_MONOTONIC,&clock_monotonic);
 	                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#868: FILE: kernel/posix-timers.c:524:
+	register_posix_clock(CLOCK_MONOTONIC,&clock_monotonic);
 	                                     ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#869: FILE: kernel/posix-timers.c:525:
+#if 0

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#876: FILE: kernel/posix-timers.c:532:
+__initcall(init_posix_timers);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#879: FILE: kernel/posix-timers.c:535:
+ * For some reason mips/mips64 define the SIGEV constants plus 128.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#880: FILE: kernel/posix-timers.c:536:
+ * Here we define a mask to get rid of the common bits.^I The $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#883: FILE: kernel/posix-timers.c:539:
+#if (ARCH == mips) || (ARCH == mips64)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#889: FILE: kernel/posix-timers.c:545:
+#define MIPS_SIGEV (int)-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#892: FILE: kernel/posix-timers.c:548:
+static inline struct task_struct * good_sigevent(sigevent_t *event)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#894: FILE: kernel/posix-timers.c:550:
+	struct task_struct * rtn = current;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#896: FILE: kernel/posix-timers.c:552:
+	if (event->sigev_notify & SIGEV_THREAD_ID & MIPS_SIGEV ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#897: FILE: kernel/posix-timers.c:553:
+^I^Iif ( !(rtn = $

ERROR:SPACING: space prohibited after that open parenthesis '('
#897: FILE: kernel/posix-timers.c:553:
+		if ( !(rtn = 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#897: FILE: kernel/posix-timers.c:553:
+		if ( !(rtn = 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#904: FILE: kernel/posix-timers.c:560:
+		if ((unsigned)(event->sigev_signo > SIGRTMAX))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#907: FILE: kernel/posix-timers.c:563:
+	if (event->sigev_notify & ~(SIGEV_SIGNAL | SIGEV_THREAD_ID )) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#907: FILE: kernel/posix-timers.c:563:
+	if (event->sigev_notify & ~(SIGEV_SIGNAL | SIGEV_THREAD_ID )) {
+		return NULL;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#913: FILE: kernel/posix-timers.c:569:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#915: FILE: kernel/posix-timers.c:571:
+static struct k_itimer * alloc_posix_timer(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#918: FILE: kernel/posix-timers.c:574:
+	struct k_itimer *tmr;
+	tmr = kmem_cache_alloc(posix_timers_cache, GFP_KERNEL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#920: FILE: kernel/posix-timers.c:576:
+	return(tmr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: kernel/posix-timers.c:585:
+^I^I^I $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#939: FILE: kernel/posix-timers.c:595:
+	struct task_struct * process = current;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: kernel/posix-timers.c:599:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#943: FILE: kernel/posix-timers.c:599:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#943: FILE: kernel/posix-timers.c:599:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#944: FILE: kernel/posix-timers.c:600:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#947: FILE: kernel/posix-timers.c:603:
+	if (new_timer == NULL) return -EAGAIN;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_timer"
#947: FILE: kernel/posix-timers.c:603:
+	if (new_timer == NULL) return -EAGAIN;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#956: FILE: kernel/posix-timers.c:612:
+		if ((process = good_sigevent(&event)) == NULL) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#964: FILE: kernel/posix-timers.c:620:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#964: FILE: kernel/posix-timers.c:620:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#976: FILE: kernel/posix-timers.c:632:
+^Iif (copy_to_user(created_timer_id, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#977: FILE: kernel/posix-timers.c:633:
+^I^I^I &new_timer_id, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#991: FILE: kernel/posix-timers.c:647:
+	if (error) {
+		release_posix_timer(new_timer);
+	}

ERROR:SPACING: space required before the open brace '{'
#1002: FILE: kernel/posix-timers.c:658:
+	if (sys_timer_delete(timer->it_id)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1002: FILE: kernel/posix-timers.c:658:
+	if (sys_timer_delete(timer->it_id)){
+		BUG();
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1003: FILE: kernel/posix-timers.c:659:
+		BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#1011: FILE: kernel/posix-timers.c:667:
+	while (tsk->posix_timers.next != &tsk->posix_timers){
+		 tmr = list_entry(tsk->posix_timers.next,

ERROR:SPACING: space required before the open brace '{'
#1011: FILE: kernel/posix-timers.c:667:
+	while (tsk->posix_timers.next != &tsk->posix_timers){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1013: FILE: kernel/posix-timers.c:669:
+		 tmr = list_entry(tsk->posix_timers.next,
+			struct k_itimer,it_task_list);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1013: FILE: kernel/posix-timers.c:669:
+			struct k_itimer,it_task_list);
 			               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1033: FILE: kernel/posix-timers.c:689:
+^Iif ((ts == NULL) || $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ts == NULL'
#1033: FILE: kernel/posix-timers.c:689:
+	if ((ts == NULL) || 
+	    (ts->tv_sec < 0) ||
+	    ((unsigned)ts->tv_nsec >= NSEC_PER_SEC))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ts->tv_sec < 0'
#1033: FILE: kernel/posix-timers.c:689:
+	if ((ts == NULL) || 
+	    (ts->tv_sec < 0) ||
+	    ((unsigned)ts->tv_nsec >= NSEC_PER_SEC))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ts"
#1033: FILE: kernel/posix-timers.c:689:
+	if ((ts == NULL) || 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1035: FILE: kernel/posix-timers.c:691:
+	    ((unsigned)ts->tv_nsec >= NSEC_PER_SEC))

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1045: FILE: kernel/posix-timers.c:701:
+static struct k_itimer* lock_timer( timer_t timer_id)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1045: FILE: kernel/posix-timers.c:701:
+static struct k_itimer* lock_timer( timer_t timer_id)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1052: FILE: kernel/posix-timers.c:708:
+	return(timr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1055: FILE: kernel/posix-timers.c:711:
+/* $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1060: FILE: kernel/posix-timers.c:716:
+void inline do_timer_gettime(struct k_itimer *timr,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1073: FILE: kernel/posix-timers.c:729:
+		ts.tv_sec = ts.tv_nsec = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1085: FILE: kernel/posix-timers.c:741:
+	if (!timr) return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1087: FILE: kernel/posix-timers.c:743:
+	p_timer_get(&posix_clocks[timr->it_clock],timr, &cur_setting);
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1090: FILE: kernel/posix-timers.c:746:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1096: FILE: kernel/posix-timers.c:752:
+}
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1112: FILE: kernel/posix-timers.c:768:
+	struct task_struct * t;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1114: FILE: kernel/posix-timers.c:770:
+	timr = lock_timer( timer_id);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1115: FILE: kernel/posix-timers.c:771:
+	if (!timr) return -EINVAL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1120: FILE: kernel/posix-timers.c:776:
+^Ifor (sig_queue = &t->sig->shared_pending, i = 2; i; $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'q->info.si_code == SI_TIMER'
#1123: FILE: kernel/posix-timers.c:779:
+			if ((q->info.si_code == SI_TIMER) &&
+			    (q->info.si_tid == timr->it_id)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'q->info.si_tid == timr->it_id'
#1123: FILE: kernel/posix-timers.c:779:
+			if ((q->info.si_code == SI_TIMER) &&
+			    (q->info.si_tid == timr->it_id)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1125: FILE: kernel/posix-timers.c:781:
+			    (q->info.si_tid == timr->it_id)) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1133: FILE: kernel/posix-timers.c:789:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1138: FILE: kernel/posix-timers.c:794:
+}
+/* Adjust for absolute time */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1147: FILE: kernel/posix-timers.c:803:
+static int  adjust_abs_time(struct k_clock *clock,struct timespec *tp, int abs)
                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1151: FILE: kernel/posix-timers.c:807:
+	struct timespec oc;
+	do_posix_clock_monotonic_gettime(&now);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1153: FILE: kernel/posix-timers.c:809:
+	if ( abs &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get'
#1153: FILE: kernel/posix-timers.c:809:
+	if ( abs &&
+	     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1154: FILE: kernel/posix-timers.c:810:
+^I     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1154: FILE: kernel/posix-timers.c:810:
+	if ( abs &&
+	     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ 

ERROR:SPACING: space required before the open brace '{'
#1154: FILE: kernel/posix-timers.c:810:
+	     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ 

ERROR:SPACING: space required before the open brace '{'
#1155: FILE: kernel/posix-timers.c:811:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1155: FILE: kernel/posix-timers.c:811:
+	}else{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1156: FILE: kernel/posix-timers.c:812:
+	}else{
+

ERROR:SPACING: space required before the open brace '{'
#1157: FILE: kernel/posix-timers.c:813:
+		if (abs){

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1157: FILE: kernel/posix-timers.c:813:
+		if (abs){
[...]
+		}else{
[...]

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1158: FILE: kernel/posix-timers.c:814:
+			do_posix_gettime(clock,&oc);
 			                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1158: FILE: kernel/posix-timers.c:814:
+			do_posix_gettime(clock,&oc);
 			                       ^

ERROR:SPACING: space required before the open brace '{'
#1159: FILE: kernel/posix-timers.c:815:
+		}else{

ERROR:SPACING: space required after that close brace '}'
#1159: FILE: kernel/posix-timers.c:815:
+		}else{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1160: FILE: kernel/posix-timers.c:816:
+			oc.tv_nsec = oc.tv_sec =0;
 			                       ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1160: FILE: kernel/posix-timers.c:816:
+			oc.tv_nsec = oc.tv_sec =0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1165: FILE: kernel/posix-timers.c:821:
+^I^I/* $

ERROR:SPACING: space required before the open brace '{'
#1168: FILE: kernel/posix-timers.c:824:
+		if (( tp->tv_nsec - NSEC_PER_SEC) >= 0){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1168: FILE: kernel/posix-timers.c:824:
+		if (( tp->tv_nsec - NSEC_PER_SEC) >= 0){

ERROR:SPACING: space required before the open brace '{'
#1172: FILE: kernel/posix-timers.c:828:
+		if (( tp->tv_nsec ) < 0){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1172: FILE: kernel/posix-timers.c:828:
+		if (( tp->tv_nsec ) < 0){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1172: FILE: kernel/posix-timers.c:828:
+		if (( tp->tv_nsec ) < 0){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->tv_nsec '
#1172: FILE: kernel/posix-timers.c:828:
+		if (( tp->tv_nsec ) < 0){

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1184: FILE: kernel/posix-timers.c:840:
+	if ((unsigned)(tp->tv_sec - now.tv_sec) > (MAX_JIFFY_OFFSET / HZ)){

ERROR:SPACING: space required before the open brace '{'
#1184: FILE: kernel/posix-timers.c:840:
+	if ((unsigned)(tp->tv_sec - now.tv_sec) > (MAX_JIFFY_OFFSET / HZ)){

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1185: FILE: kernel/posix-timers.c:841:
+		if ( (unsigned)tp->tv_sec < now.tv_sec){

ERROR:SPACING: space required before the open brace '{'
#1185: FILE: kernel/posix-timers.c:841:
+		if ( (unsigned)tp->tv_sec < now.tv_sec){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1185: FILE: kernel/posix-timers.c:841:
+		if ( (unsigned)tp->tv_sec < now.tv_sec){

ERROR:SPACING: space required before the open brace '{'
#1188: FILE: kernel/posix-timers.c:844:
+		}else{

ERROR:SPACING: space required after that close brace '}'
#1188: FILE: kernel/posix-timers.c:844:
+		}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1193: FILE: kernel/posix-timers.c:849:
+^I^I^I * possible overflows).  We assume such a large $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1197: FILE: kernel/posix-timers.c:853:
+^I^I^I */ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1210: FILE: kernel/posix-timers.c:866:
+	struct k_clock * clock = &posix_clocks[timr->it_clock];

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1213: FILE: kernel/posix-timers.c:869:
+	if (old_setting) {
+		do_timer_gettime(timr, old_setting);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1216: FILE: kernel/posix-timers.c:872:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1217: FILE: kernel/posix-timers.c:873:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1217: FILE: kernel/posix-timers.c:873:
+	
+	

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_setting->it_value.tv_sec == 0'
#1219: FILE: kernel/posix-timers.c:875:
+	if ((new_setting->it_value.tv_sec == 0) &&
+		(new_setting->it_value.tv_nsec == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_setting->it_value.tv_nsec == 0'
#1219: FILE: kernel/posix-timers.c:875:
+	if ((new_setting->it_value.tv_sec == 0) &&
+		(new_setting->it_value.tv_nsec == 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1220: FILE: kernel/posix-timers.c:876:
+	if ((new_setting->it_value.tv_sec == 0) &&
+		(new_setting->it_value.tv_nsec == 0)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1225: FILE: kernel/posix-timers.c:881:
+	if( adjust_abs_time(clock, &new_setting->it_value,

ERROR:SPACING: space required before the open parenthesis '('
#1225: FILE: kernel/posix-timers.c:881:
+	if( adjust_abs_time(clock, &new_setting->it_value,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1230: FILE: kernel/posix-timers.c:886:
+^Itimr->it_overrun_deferred = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1231: FILE: kernel/posix-timers.c:887:
+^I^Itimr->it_overrun_last = $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1237: FILE: kernel/posix-timers.c:893:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1248: FILE: kernel/posix-timers.c:904:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1249: FILE: kernel/posix-timers.c:905:
+	if (new_setting == NULL) {
+		return -EINVAL;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_setting"
#1249: FILE: kernel/posix-timers.c:905:
+	if (new_setting == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1253: FILE: kernel/posix-timers.c:909:
+	if (copy_from_user(&new_spec, new_setting, sizeof(new_spec))) {
+		return -EFAULT;
+	}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1262: FILE: kernel/posix-timers.c:918:
+	timr = lock_timer( timer_id);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1266: FILE: kernel/posix-timers.c:922:
+	if (! posix_clocks[timr->it_clock].timer_set) {
 	    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1267: FILE: kernel/posix-timers.c:923:
+		error = do_timer_settime(timr, flags, &new_spec, rtn );

ERROR:SPACING: space required before the open brace '{'
#1268: FILE: kernel/posix-timers.c:924:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1268: FILE: kernel/posix-timers.c:924:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1269: FILE: kernel/posix-timers.c:925:
+^I^Ierror = posix_clocks[timr->it_clock].timer_set(timr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1270: FILE: kernel/posix-timers.c:926:
+^I^I^I^I^I^I^I       flags, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1271: FILE: kernel/posix-timers.c:927:
+^I^I^I^I^I^I^I       &new_spec, $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1272: FILE: kernel/posix-timers.c:928:
+							       rtn );

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1276: FILE: kernel/posix-timers.c:932:
+	if (old_setting && ! error) {
 	                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1277: FILE: kernel/posix-timers.c:933:
+		if (copy_to_user(old_setting, &old_spec, sizeof(old_spec))) {
+			error = -EFAULT;
+		}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1287: FILE: kernel/posix-timers.c:943:
+	struct k_clock * clock = &posix_clocks[timer->it_clock];

ERROR:SPACING: space prohibited after that open parenthesis '('
#1298: FILE: kernel/posix-timers.c:954:
+	timer = lock_timer( timer_id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1302: FILE: kernel/posix-timers.c:958:
+	p_timer_del(&posix_clocks[timer->it_clock],timer);
 	                                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1317: FILE: kernel/posix-timers.c:973:
+}
+/*

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1326: FILE: kernel/posix-timers.c:982:
+{
+

ERROR:SPACING: space required before the open brace '{'
#1327: FILE: kernel/posix-timers.c:983:
+	if (clock->clock_get){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1327: FILE: kernel/posix-timers.c:983:
+	if (clock->clock_get){
+		return clock->clock_get(tp);
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1331: FILE: kernel/posix-timers.c:987:
+	do_gettimeofday((struct timeval*)tp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1348: FILE: kernel/posix-timers.c:1004:
+#if (BITS_PER_LONG > 32) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1359: FILE: kernel/posix-timers.c:1015:
+		unsigned long flags;
+		read_lock_irqsave(&xtime_lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1362: FILE: kernel/posix-timers.c:1018:
+
+

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1365: FILE: kernel/posix-timers.c:1021:
+#elif ! defined(CONFIG_SMP) && (BITS_PER_LONG < 64)
       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1367: FILE: kernel/posix-timers.c:1023:
+	unsigned long jiffies_f;
+	do {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1371: FILE: kernel/posix-timers.c:1027:
+	} while (unlikely(jiffies_f != jiffies));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1373: FILE: kernel/posix-timers.c:1029:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1375: FILE: kernel/posix-timers.c:1031:
+	tp->tv_sec = div_long_long_rem(jiffies_64_f,HZ,&sub_sec);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1375: FILE: kernel/posix-timers.c:1031:
+	tp->tv_sec = div_long_long_rem(jiffies_64_f,HZ,&sub_sec);
 	                                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1375: FILE: kernel/posix-timers.c:1031:
+	tp->tv_sec = div_long_long_rem(jiffies_64_f,HZ,&sub_sec);
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1386: FILE: kernel/posix-timers.c:1042:
+asmlinkage int sys_clock_settime(clockid_t which_clock,const struct timespec *tp)
                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1390: FILE: kernel/posix-timers.c:1046:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1390: FILE: kernel/posix-timers.c:1046:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1390: FILE: kernel/posix-timers.c:1046:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1391: FILE: kernel/posix-timers.c:1047:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:SPACING: space required before the open brace '{'
#1394: FILE: kernel/posix-timers.c:1050:
+	if ( posix_clocks[which_clock].clock_set){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1394: FILE: kernel/posix-timers.c:1050:
+	if ( posix_clocks[which_clock].clock_set){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1394: FILE: kernel/posix-timers.c:1050:
+	if ( posix_clocks[which_clock].clock_set){
+		return posix_clocks[which_clock].clock_set(&new_tp);
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1398: FILE: kernel/posix-timers.c:1054:
+	return do_sys_settimeofday((struct timeval*)&new_tp,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1398: FILE: kernel/posix-timers.c:1054:
+	return do_sys_settimeofday((struct timeval*)&new_tp,NULL);
 	                                                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1400: FILE: kernel/posix-timers.c:1056:
+}
+asmlinkage int sys_clock_gettime(clockid_t which_clock, struct timespec *tp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1404: FILE: kernel/posix-timers.c:1060:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1405: FILE: kernel/posix-timers.c:1061:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1405: FILE: kernel/posix-timers.c:1061:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1405: FILE: kernel/posix-timers.c:1061:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1406: FILE: kernel/posix-timers.c:1062:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1408: FILE: kernel/posix-timers.c:1064:
+	error = do_posix_gettime(&posix_clocks[which_clock],&rtn_tp);
 	                                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1408: FILE: kernel/posix-timers.c:1064:
+	error = do_posix_gettime(&posix_clocks[which_clock],&rtn_tp);
 	                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1409: FILE: kernel/posix-timers.c:1065:
+^I $

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1410: FILE: kernel/posix-timers.c:1066:
+	if ( ! error) {
 	     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1410: FILE: kernel/posix-timers.c:1066:
+	if ( ! error) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1411: FILE: kernel/posix-timers.c:1067:
+		if (copy_to_user(tp, &rtn_tp, sizeof(rtn_tp))) {
+			error = -EFAULT;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1416: FILE: kernel/posix-timers.c:1072:
+^I^I $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1417: FILE: kernel/posix-timers.c:1073:
+		 
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1418: FILE: kernel/posix-timers.c:1074:
+}
+asmlinkage int	 sys_clock_getres(clockid_t which_clock, struct timespec *tp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1422: FILE: kernel/posix-timers.c:1078:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1422: FILE: kernel/posix-timers.c:1078:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1422: FILE: kernel/posix-timers.c:1078:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1423: FILE: kernel/posix-timers.c:1079:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:SPACING: space required before the open brace '{'
#1427: FILE: kernel/posix-timers.c:1083:
+	if ( tp){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1427: FILE: kernel/posix-timers.c:1083:
+	if ( tp){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1428: FILE: kernel/posix-timers.c:1084:
+		if (copy_to_user(tp, &rtn_tp, sizeof(rtn_tp))) {
+			return -EFAULT;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1433: FILE: kernel/posix-timers.c:1089:
+^I $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1434: FILE: kernel/posix-timers.c:1090:
+	 
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1435: FILE: kernel/posix-timers.c:1091:
+}
+static void nanosleep_wake_up(unsigned long __data)

CHECK:SPACING: No space is necessary after a cast
#1437: FILE: kernel/posix-timers.c:1093:
+	struct task_struct * p = (struct task_struct *) __data;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1437: FILE: kernel/posix-timers.c:1093:
+	struct task_struct * p = (struct task_struct *) __data;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1441: FILE: kernel/posix-timers.c:1097:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1444: FILE: kernel/posix-timers.c:1100:
+ * For each nanosleep call that needs it (only absolute and not on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1450: FILE: kernel/posix-timers.c:1106:
+ * On locking, clock_was_set() is called from update_wall_clock which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1451: FILE: kernel/posix-timers.c:1107:
+ * holds (or has held for it) a write_lock_irq( xtime_lock) and is $

ERROR:SPACING: space required before the open brace '{'
#1469: FILE: kernel/posix-timers.c:1125:
+	list_for_each(pos, &nanosleep_abs_list){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1470: FILE: kernel/posix-timers.c:1126:
+		wake_up_process(list_entry(pos,struct abs_struct,list)->t);
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1470: FILE: kernel/posix-timers.c:1126:
+		wake_up_process(list_entry(pos,struct abs_struct,list)->t);
 		                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1475: FILE: kernel/posix-timers.c:1131:
+static inline int tstojiffie(struct timespec *tp, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1490: FILE: kernel/posix-timers.c:1146:
+^I * bits.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1494: FILE: kernel/posix-timers.c:1150:
+^I * Do the res thing. (Don't forget the add in the declaration of nsec) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1502: FILE: kernel/posix-timers.c:1158:
+^I * We trust that the optimizer will use the remainder from the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1503: FILE: kernel/posix-timers.c:1159:
+^I * above div in the following operation as long as they are close. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1508: FILE: kernel/posix-timers.c:1164:
+#if 0^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1508: FILE: kernel/posix-timers.c:1164:
+#if 0	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1511: FILE: kernel/posix-timers.c:1167:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: kernel/posix-timers.c:1167:
+  $

WARNING:TYPO_SPELLING: 'paramerts' may be misspelled - perhaps 'parameters'?
#1515: FILE: kernel/posix-timers.c:1171:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#1515: FILE: kernel/posix-timers.c:1171:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                                                      ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1515: FILE: kernel/posix-timers.c:1171:
+// Some systems may find these paramerts in other ways than as entry parms, $

WARNING:TYPO_SPELLING: 'paramerters' may be misspelled - perhaps 'parameters'?
#1517: FILE: kernel/posix-timers.c:1173:
+// first parameter, where as other archs pass it as one of the paramerters.
                                                                ^^^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1522: FILE: kernel/posix-timers.c:1178:
+	CLOCK_NANOSLEEP_ENTRY(	struct timespec t;

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#1525: FILE: kernel/posix-timers.c:1181:
+				struct abs_struct abs_struct = {list: {next :0}};
 				                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1526: FILE: kernel/posix-timers.c:1182:
+^I^I^I^Iint abs; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1530: FILE: kernel/posix-timers.c:1186:
+^I^I//asmlinkage int  sys_clock_nanosleep(clockid_t which_clock, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1535: FILE: kernel/posix-timers.c:1191:
+^I^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1535: FILE: kernel/posix-timers.c:1191:
+		if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1535: FILE: kernel/posix-timers.c:1191:
+		if ((unsigned)which_clock >= MAX_CLOCKS || 
+		    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1536: FILE: kernel/posix-timers.c:1192:
+		    ! posix_clocks[which_clock].res) return -EINVAL;
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#1538: FILE: kernel/posix-timers.c:1194:
+	if(copy_from_user(&tsave, rqtp, sizeof(struct timespec)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1541: FILE: kernel/posix-timers.c:1197:
+	if ((unsigned)tsave.tv_nsec >= NSEC_PER_SEC || tsave.tv_sec < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1543: FILE: kernel/posix-timers.c:1199:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1550: FILE: kernel/posix-timers.c:1206:
+^Iif ( abs && (posix_clocks[which_clock].clock_get != $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1550: FILE: kernel/posix-timers.c:1206:
+	if ( abs && (posix_clocks[which_clock].clock_get != 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'posix_clocks[which_clock].clock_get != 
 		     posix_clocks[CLOCK_MONOTONIC].clock_get'
#1550: FILE: kernel/posix-timers.c:1206:
+	if ( abs && (posix_clocks[which_clock].clock_get != 
+		     posix_clocks[CLOCK_MONOTONIC].clock_get) ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1551: FILE: kernel/posix-timers.c:1207:
+		     posix_clocks[CLOCK_MONOTONIC].clock_get) ){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1559: FILE: kernel/posix-timers.c:1215:
+		if ( (abs || !new_timer.expires) &&
[...]
+				tstojiffie(&t,

ERROR:SPACING: space prohibited after that open parenthesis '('
#1559: FILE: kernel/posix-timers.c:1215:
+		if ( (abs || !new_timer.expires) &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1559: FILE: kernel/posix-timers.c:1215:
+		if ( (abs || !new_timer.expires) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1560: FILE: kernel/posix-timers.c:1216:
+		if ( (abs || !new_timer.expires) &&
+		     !(rtn = adjust_abs_time(&posix_clocks[which_clock],

ERROR:SPACING: space required before the open brace '{'
#1574: FILE: kernel/posix-timers.c:1230:
+		if (new_timer.expires ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1574: FILE: kernel/posix-timers.c:1230:
+		if (new_timer.expires ){

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#1581: FILE: kernel/posix-timers.c:1237:
+	while((active = del_timer_sync(&new_timer)) && !_do_signal());
+	 

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required before the open parenthesis '('
#1581: FILE: kernel/posix-timers.c:1237:
+	while((active = del_timer_sync(&new_timer)) && !_do_signal());

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#1581: FILE: kernel/posix-timers.c:1237:
+	}
+	while((active = del_timer_sync(&new_timer)) && !_do_signal());

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1582: FILE: kernel/posix-timers.c:1238:
+^I $

ERROR:SPACING: space required before the open brace '{'
#1583: FILE: kernel/posix-timers.c:1239:
+	if ( abs_struct.list.next ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1583: FILE: kernel/posix-timers.c:1239:
+	if ( abs_struct.list.next ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1583: FILE: kernel/posix-timers.c:1239:
+	if ( abs_struct.list.next ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1588: FILE: kernel/posix-timers.c:1244:
+	if (active && rmtp ) {

ERROR:SPACING: space required before the open brace '{'
#1593: FILE: kernel/posix-timers.c:1249:
+		while (t.tv_nsec < 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1596: FILE: kernel/posix-timers.c:1252:
+^I^I} $

ERROR:SPACING: space required before the open brace '{'
#1597: FILE: kernel/posix-timers.c:1253:
+		if (t.tv_sec < 0){

ERROR:SPACING: space required before the open brace '{'
#1601: FILE: kernel/posix-timers.c:1257:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1601: FILE: kernel/posix-timers.c:1257:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1605: FILE: kernel/posix-timers.c:1261:
+^Iif (!rtn && !abs && rmtp && $

ERROR:SPACING: space required before the open brace '{'
#1606: FILE: kernel/posix-timers.c:1262:
+	    copy_to_user(rmtp, &t, sizeof(struct timespec))){

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1609: FILE: kernel/posix-timers.c:1265:
+	if (active) return -EINTR;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 242 errors, 76 warnings, 91 checks, 1528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
