WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
diff -ruN linux-2.6.8.1.splitold/include/net/dst.h linux-2.6.8.1.multipath_cached/include/net/dst.h

CHECK:LINE_SPACING: Please don't use multiple blank lines
#88: FILE: include/net/route.h:203:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/net/route.h:205:
+extern void __multipath_remove(struct rtable *rt);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#91: FILE: include/net/route.h:206:
+static inline void multipath_remove(struct rtable *rt) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#92: FILE: include/net/route.h:207:
+	if ( rt->u.dst.flags & DST_BALANCED ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#92: FILE: include/net/route.h:207:
+	if ( rt->u.dst.flags & DST_BALANCED ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#92: FILE: include/net/route.h:207:
+	if ( rt->u.dst.flags & DST_BALANCED ) {
+		__multipath_remove( rt );
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#93: FILE: include/net/route.h:208:
+		__multipath_remove( rt );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#93: FILE: include/net/route.h:208:
+		__multipath_remove( rt );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#100: FILE: include/net/route.h:215:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: include/net/route.h:217:
+extern void __multipath_selectroute(const struct flowi *flp,

ERROR:SPACING: space prohibited after that open parenthesis '('
#108: FILE: include/net/route.h:223:
+	if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#108: FILE: include/net/route.h:223:
+	if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#109: FILE: include/net/route.h:224:
+		__multipath_selectroute( flp, rth, rp );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#109: FILE: include/net/route.h:224:
+		__multipath_selectroute( flp, rth, rp );

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#112: FILE: include/net/route.h:227:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#112: FILE: include/net/route.h:227:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: include/net/route.h:239:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: net/ipv4/Kconfig:103:
+^I  in the routing cache and on cache lookup route is chosen in $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: net/ipv4/Kconfig:110:
+# $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#147: FILE: net/ipv4/Kconfig:111:
+choice
+	prompt "Multipath policy"
+	depends on IP_ROUTE_MULTIPATH_CACHED
+	default IP_ROUTE_MULTIPATH_RR
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#152: FILE: net/ipv4/Kconfig:116:
+config IP_ROUTE_MULTIPATH_RR
+	bool "round robin (EXPERIMENTAL)"
+	help
+	  Mulitpath routes are chosen according to Round Robin
+

WARNING:TYPO_SPELLING: 'Mulitpath' may be misspelled - perhaps 'Multipath'?
#155: FILE: net/ipv4/Kconfig:119:
+	  Mulitpath routes are chosen according to Round Robin
 	  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#157: FILE: net/ipv4/Kconfig:121:
+config IP_ROUTE_MULTIPATH_RANDOM
+	bool "random multipath (EXPERIMENTAL)"
+	help
+	  Multipath routes are chosen in a random fashion (naive 
+	  implementation)
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: net/ipv4/Kconfig:124:
+^I  Multipath routes are chosen in a random fashion (naive $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#187: FILE: net/ipv4/multipath_random.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#191: FILE: net/ipv4/multipath_random.c:5:
+ * Version:	$Id: multipath.c,v 1.1.2.1 2004/09/02 20:01:27 elueck Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#203: FILE: net/ipv4/multipath_random.c:17:
+#include <asm/uaccess.h>

CHECK:CAMELCASE: Avoid CamelCase: <RTprint>
#235: FILE: net/ipv4/multipath_random.c:49:
+#define RTprint(a...)	// printk(KERN_DEBUG a)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#239: FILE: net/ipv4/multipath_random.c:53:
+
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#240: FILE: net/ipv4/multipath_random.c:54:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline__
#240: FILE: net/ipv4/multipath_random.c:54:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#240: FILE: net/ipv4/multipath_random.c:54:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,
+					    const struct flowi *flp2) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: net/ipv4/multipath_random.c:66:
+void __multipath_selectroute(const struct flowi *flp, $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#252: FILE: net/ipv4/multipath_random.c:66:
+void __multipath_selectroute(const struct flowi *flp, 
+			     struct rtable *first, 
+			     struct rtable **rp) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: net/ipv4/multipath_random.c:67:
+^I^I^I     struct rtable *first, $

ERROR:SPACING: space prohibited after that open parenthesis '('
#260: FILE: net/ipv4/multipath_random.c:74:
+	RTprint( KERN_DEBUG"%s called\n", __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#260: FILE: net/ipv4/multipath_random.c:74:
+	RTprint( KERN_DEBUG"%s called\n", __FUNCTION__ );

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#260: FILE: net/ipv4/multipath_random.c:74:
+	RTprint( KERN_DEBUG"%s called\n", __FUNCTION__ );

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#260: FILE: net/ipv4/multipath_random.c:74:
+	RTprint( KERN_DEBUG"%s called\n", __FUNCTION__ );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: net/ipv4/multipath_random.c:79:
+^I^Iif ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#265: FILE: net/ipv4/multipath_random.c:79:
+		if ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#265: FILE: net/ipv4/multipath_random.c:79:
+		if ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: net/ipv4/multipath_random.c:80:
+		if ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && 
+		     multipath_comparekeys(&rt->fl, flp) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#266: FILE: net/ipv4/multipath_random.c:80:
+		     multipath_comparekeys(&rt->fl, flp) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#270: FILE: net/ipv4/multipath_random.c:84:
+		if ( candidate_count >= MULTIPATH_MAX_CANDIDATES ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#270: FILE: net/ipv4/multipath_random.c:84:
+		if ( candidate_count >= MULTIPATH_MAX_CANDIDATES ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#270: FILE: net/ipv4/multipath_random.c:84:
+		if ( candidate_count >= MULTIPATH_MAX_CANDIDATES ) {
+			break;
+		}

ERROR:SPACING: space prohibited after that open parenthesis '('
#277: FILE: net/ipv4/multipath_random.c:91:
+	if ( candidate_count > 1 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#277: FILE: net/ipv4/multipath_random.c:91:
+	if ( candidate_count > 1 ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: net/ipv4/multipath_random.c:94:
+		unsigned char candidate_no = net_random() % candidate_count;
+		decision = candidate[candidate_no];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: net/ipv4/multipath_random.c:95:
+^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#283: FILE: net/ipv4/multipath_random.c:97:
+		for ( i = 0; i < candidate_count; ++i ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#283: FILE: net/ipv4/multipath_random.c:97:
+		for ( i = 0; i < candidate_count; ++i ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#283: FILE: net/ipv4/multipath_random.c:97:
+		for ( i = 0; i < candidate_count; ++i ) {
+			candidate[i]->u.dst.lastuse = jiffies;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: net/ipv4/multipath_random.c:101:
+^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#292: FILE: net/ipv4/multipath_random.c:106:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#298: FILE: net/ipv4/multipath_rr.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#302: FILE: net/ipv4/multipath_rr.c:5:
+ * Version:	$Id: multipath.c,v 1.1.2.1 2004/09/02 20:01:27 elueck Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#314: FILE: net/ipv4/multipath_rr.c:17:
+#include <asm/uaccess.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#347: FILE: net/ipv4/multipath_rr.c:50:
+struct rt_cache_candidate
+{

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#357: FILE: net/ipv4/multipath_rr.c:60:
+static struct rt_cache_candidate *multipath_state = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: net/ipv4/multipath_rr.c:61:
+static int multipath_state_entrycount = 0;/* FIXME remove: is just for debug purposes */^I^I^I^I^I   $

WARNING:LONG_LINE_COMMENT: line length of 131 exceeds 100 columns
#358: FILE: net/ipv4/multipath_rr.c:61:
+static int multipath_state_entrycount = 0;/* FIXME remove: is just for debug purposes */					   

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#358: FILE: net/ipv4/multipath_rr.c:61:
+static int multipath_state_entrycount = 0;/* FIXME remove: is just for debug purposes */					   

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#360: FILE: net/ipv4/multipath_rr.c:63:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

WARNING:INLINE: plain inline is preferred over __inline__
#360: FILE: net/ipv4/multipath_rr.c:63:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#360: FILE: net/ipv4/multipath_rr.c:63:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,
+					    const struct flowi *flp2) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#372: FILE: net/ipv4/multipath_rr.c:75:
+void __multipath_remove(struct rtable* rt) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#372: FILE: net/ipv4/multipath_rr.c:75:
+void __multipath_remove(struct rtable* rt) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#377: FILE: net/ipv4/multipath_rr.c:80:
+	if ( !( rt->u.dst.flags & DST_BALANCED ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#377: FILE: net/ipv4/multipath_rr.c:80:
+	if ( !( rt->u.dst.flags & DST_BALANCED ) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#379: FILE: net/ipv4/multipath_rr.c:82:
+		RTprint( KERN_DEBUG"%s: unexpected argument\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#379: FILE: net/ipv4/multipath_rr.c:82:
+		RTprint( KERN_DEBUG"%s: unexpected argument\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: net/ipv4/multipath_rr.c:83:
+		RTprint( KERN_DEBUG"%s: unexpected argument\n",
+			 __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#380: FILE: net/ipv4/multipath_rr.c:83:
+			 __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#380: FILE: net/ipv4/multipath_rr.c:83:
+			 __FUNCTION__ );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: net/ipv4/multipath_rr.c:89:
+^Ifor ( candidate = multipath_state; candidate != NULL; $

ERROR:SPACING: space prohibited after that open parenthesis '('
#386: FILE: net/ipv4/multipath_rr.c:89:
+	for ( candidate = multipath_state; candidate != NULL; 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "candidate"
#386: FILE: net/ipv4/multipath_rr.c:89:
+	for ( candidate = multipath_state; candidate != NULL; 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited before that close parenthesis ')'
#387: FILE: net/ipv4/multipath_rr.c:90:
+	      candidate = candidate->next ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#388: FILE: net/ipv4/multipath_rr.c:91:
+		if ( multipath_comparekeys(&candidate->candidate->fl,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#389: FILE: net/ipv4/multipath_rr.c:92:
+					   &rt->fl) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#390: FILE: net/ipv4/multipath_rr.c:93:
+			if ( candidate == multipath_state ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#390: FILE: net/ipv4/multipath_rr.c:93:
+			if ( candidate == multipath_state ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#390: FILE: net/ipv4/multipath_rr.c:93:
+			if ( candidate == multipath_state ) {
[...]
+			else {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#393: FILE: net/ipv4/multipath_rr.c:96:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#393: FILE: net/ipv4/multipath_rr.c:96:
+			else {

ERROR:SPACING: space prohibited after that open parenthesis '('
#397: FILE: net/ipv4/multipath_rr.c:100:
+			kfree( candidate );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#397: FILE: net/ipv4/multipath_rr.c:100:
+			kfree( candidate );

ERROR:SPACING: space prohibited after that open parenthesis '('
#398: FILE: net/ipv4/multipath_rr.c:101:
+			RTprint( KERN_DEBUG"%s: removed entry. Entry " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#398: FILE: net/ipv4/multipath_rr.c:101:
+			RTprint( KERN_DEBUG"%s: removed entry. Entry " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#398: FILE: net/ipv4/multipath_rr.c:101:
+			RTprint( KERN_DEBUG"%s: removed entry. Entry " \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#399: FILE: net/ipv4/multipath_rr.c:102:
+				 "count: %d\n", __FUNCTION__,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#400: FILE: net/ipv4/multipath_rr.c:103:
+				 multipath_state_entrycount );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: net/ipv4/multipath_rr.c:106:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: net/ipv4/multipath_rr.c:113:
+void __multipath_selectroute(const struct flowi *flp, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: net/ipv4/multipath_rr.c:114:
+^I^I^I     struct rtable *first, struct rtable **rp) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: net/ipv4/multipath_rr.c:119:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#420: FILE: net/ipv4/multipath_rr.c:123:
+	for ( cand = multipath_state; cand != NULL; cand = cand->next ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#420: FILE: net/ipv4/multipath_rr.c:123:
+	for ( cand = multipath_state; cand != NULL; cand = cand->next ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cand"
#420: FILE: net/ipv4/multipath_rr.c:123:
+	for ( cand = multipath_state; cand != NULL; cand = cand->next ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#421: FILE: net/ipv4/multipath_rr.c:124:
+		if ( multipath_comparekeys(&cand->candidate->fl, flp) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#421: FILE: net/ipv4/multipath_rr.c:124:
+		if ( multipath_comparekeys(&cand->candidate->fl, flp) ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#422: FILE: net/ipv4/multipath_rr.c:125:
+		if ( multipath_comparekeys(&cand->candidate->fl, flp) ) {
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#423: FILE: net/ipv4/multipath_rr.c:126:
+			RTprint( KERN_CRIT"%s: determined candidate " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#423: FILE: net/ipv4/multipath_rr.c:126:
+			RTprint( KERN_CRIT"%s: determined candidate " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#423: FILE: net/ipv4/multipath_rr.c:126:
+			RTprint( KERN_CRIT"%s: determined candidate " \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#425: FILE: net/ipv4/multipath_rr.c:128:
+				 __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#425: FILE: net/ipv4/multipath_rr.c:128:
+				 __FUNCTION__ );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#430: FILE: net/ipv4/multipath_rr.c:133:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#436: FILE: net/ipv4/multipath_rr.c:139:
+		if ( ( nh->u.dst.flags & DST_BALANCED ) != 0 &&

ERROR:SPACING: space prohibited before that close parenthesis ')'
#436: FILE: net/ipv4/multipath_rr.c:139:
+		if ( ( nh->u.dst.flags & DST_BALANCED ) != 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: net/ipv4/multipath_rr.c:140:
+		if ( ( nh->u.dst.flags & DST_BALANCED ) != 0 &&
+		     multipath_comparekeys(&nh->fl, flp ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#437: FILE: net/ipv4/multipath_rr.c:140:
+		     multipath_comparekeys(&nh->fl, flp ) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#440: FILE: net/ipv4/multipath_rr.c:143:
+			RTprint( KERN_CRIT"%s: found balanced entry\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#440: FILE: net/ipv4/multipath_rr.c:143:
+			RTprint( KERN_CRIT"%s: found balanced entry\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: net/ipv4/multipath_rr.c:144:
+			RTprint( KERN_CRIT"%s: found balanced entry\n",
+				 __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#441: FILE: net/ipv4/multipath_rr.c:144:
+				 __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#441: FILE: net/ipv4/multipath_rr.c:144:
+				 __FUNCTION__ );

ERROR:SPACING: space prohibited after that open parenthesis '('
#444: FILE: net/ipv4/multipath_rr.c:147:
+			if ( !(flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#444: FILE: net/ipv4/multipath_rr.c:147:
+			if ( !(flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#445: FILE: net/ipv4/multipath_rr.c:148:
+				if ( found_old && !result ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#445: FILE: net/ipv4/multipath_rr.c:148:
+				if ( found_old && !result ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: net/ipv4/multipath_rr.c:151:
+^I^I^I^Ielse if ( cand != NULL && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#448: FILE: net/ipv4/multipath_rr.c:151:
+				else if ( cand != NULL && 

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#448: FILE: net/ipv4/multipath_rr.c:151:
+				}
+				else if ( cand != NULL && 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cand"
#448: FILE: net/ipv4/multipath_rr.c:151:
+				else if ( cand != NULL && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: net/ipv4/multipath_rr.c:152:
+				else if ( cand != NULL && 
+					  nh == cand->candidate ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#449: FILE: net/ipv4/multipath_rr.c:152:
+					  nh == cand->candidate ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#457: FILE: net/ipv4/multipath_rr.c:160:
+	if ( result == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#457: FILE: net/ipv4/multipath_rr.c:160:
+	if ( result == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!result"
#457: FILE: net/ipv4/multipath_rr.c:160:
+	if ( result == NULL ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#458: FILE: net/ipv4/multipath_rr.c:161:
+		RTprint( KERN_CRIT"%s: reach end of"\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#458: FILE: net/ipv4/multipath_rr.c:161:
+		RTprint( KERN_CRIT"%s: reach end of"\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#458: FILE: net/ipv4/multipath_rr.c:161:
+		RTprint( KERN_CRIT"%s: reach end of"\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#460: FILE: net/ipv4/multipath_rr.c:163:
+			 __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#460: FILE: net/ipv4/multipath_rr.c:163:
+			 __FUNCTION__ );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: net/ipv4/multipath_rr.c:164:
+^I^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#464: FILE: net/ipv4/multipath_rr.c:167:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#464: FILE: net/ipv4/multipath_rr.c:167:
+	else {

ERROR:SPACING: space prohibited after that open parenthesis '('
#465: FILE: net/ipv4/multipath_rr.c:168:
+		RTprint( KERN_CRIT"%s: found new " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#465: FILE: net/ipv4/multipath_rr.c:168:
+		RTprint( KERN_CRIT"%s: found new " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#465: FILE: net/ipv4/multipath_rr.c:168:
+		RTprint( KERN_CRIT"%s: found new " \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#467: FILE: net/ipv4/multipath_rr.c:170:
+			 __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#467: FILE: net/ipv4/multipath_rr.c:170:
+			 __FUNCTION__ );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#470: FILE: net/ipv4/multipath_rr.c:173:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: net/ipv4/multipath_rr.c:175:
+^Iif ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#472: FILE: net/ipv4/multipath_rr.c:175:
+	if ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#472: FILE: net/ipv4/multipath_rr.c:175:
+	if ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: net/ipv4/multipath_rr.c:176:
+	if ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && 
+	     cand != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#473: FILE: net/ipv4/multipath_rr.c:176:
+	     cand != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cand"
#473: FILE: net/ipv4/multipath_rr.c:176:
+	     cand != NULL ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#474: FILE: net/ipv4/multipath_rr.c:177:
+		RTprint( KERN_CRIT"%s: holding route \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#474: FILE: net/ipv4/multipath_rr.c:177:
+		RTprint( KERN_CRIT"%s: holding route \n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#474: FILE: net/ipv4/multipath_rr.c:177:
+		RTprint( KERN_CRIT"%s: holding route \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: net/ipv4/multipath_rr.c:178:
+		RTprint( KERN_CRIT"%s: holding route \n",
+			 __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#475: FILE: net/ipv4/multipath_rr.c:178:
+			 __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#475: FILE: net/ipv4/multipath_rr.c:178:
+			 __FUNCTION__ );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: net/ipv4/multipath_rr.c:182:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#479: FILE: net/ipv4/multipath_rr.c:182:
+
+	

ERROR:SPACING: space prohibited after that open parenthesis '('
#481: FILE: net/ipv4/multipath_rr.c:184:
+	if ( cand == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#481: FILE: net/ipv4/multipath_rr.c:184:
+	if ( cand == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cand"
#481: FILE: net/ipv4/multipath_rr.c:184:
+	if ( cand == NULL ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: net/ipv4/multipath_rr.c:185:
+                /* create new state entry if necessary */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#483: FILE: net/ipv4/multipath_rr.c:186:
+		cand = (struct rt_cachec_andidate*)

ERROR:SPACING: space prohibited after that open parenthesis '('
#484: FILE: net/ipv4/multipath_rr.c:187:
+			kmalloc( sizeof(struct rt_cache_candidate),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: net/ipv4/multipath_rr.c:188:
+			kmalloc( sizeof(struct rt_cache_candidate),
+				 GFP_KERNEL );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#485: FILE: net/ipv4/multipath_rr.c:188:
+				 GFP_KERNEL );

ERROR:SPACING: space prohibited after that open parenthesis '('
#489: FILE: net/ipv4/multipath_rr.c:192:
+		RTprint( KERN_CRIT"%s: entrycount: %d\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#489: FILE: net/ipv4/multipath_rr.c:192:
+		RTprint( KERN_CRIT"%s: entrycount: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: net/ipv4/multipath_rr.c:193:
+		RTprint( KERN_CRIT"%s: entrycount: %d\n",
+			 __FUNCTION__, multipath_state_entrycount );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#490: FILE: net/ipv4/multipath_rr.c:193:
+			 __FUNCTION__, multipath_state_entrycount );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#490: FILE: net/ipv4/multipath_rr.c:193:
+			 __FUNCTION__, multipath_state_entrycount );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: net/ipv4/multipath_rr.c:196:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: net/ipv4/multipath_rr.c:198:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#499: FILE: net/ipv4/multipath_rr.c:202:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#523: FILE: net/ipv4/route.c:546:
+			if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#523: FILE: net/ipv4/route.c:546:
+			if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#524: FILE: net/ipv4/route.c:547:
+				struct rtable* first = rth;

ERROR:SPACING: space prohibited after that open parenthesis '('
#526: FILE: net/ipv4/route.c:549:
+				while ( (*rthp)->u.dst.flags & DST_BALANCED &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: net/ipv4/route.c:550:
+^I^I^I^I^Icompare_keys(&(*rthp)->fl, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: net/ipv4/route.c:550:
+				while ( (*rthp)->u.dst.flags & DST_BALANCED &&
+					compare_keys(&(*rthp)->fl, 

ERROR:SPACING: space prohibited after that open parenthesis '('
#531: FILE: net/ipv4/route.c:554:
+					rt_free( rth );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#531: FILE: net/ipv4/route.c:554:
+					rt_free( rth );

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#535: FILE: net/ipv4/route.c:558:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#535: FILE: net/ipv4/route.c:558:
+			else {

ERROR:SPACING: space prohibited after that open parenthesis '('
#552: FILE: net/ipv4/route.c:733:
+			if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#552: FILE: net/ipv4/route.c:733:
+			if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#553: FILE: net/ipv4/route.c:734:
+				struct rtable* first = rth;

ERROR:SPACING: space prohibited after that open parenthesis '('
#555: FILE: net/ipv4/route.c:736:
+				while ( (*rthp)->u.dst.flags & DST_BALANCED &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#556: FILE: net/ipv4/route.c:737:
+^I^I^I^I^Icompare_keys(&(*rthp)->fl, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: net/ipv4/route.c:737:
+				while ( (*rthp)->u.dst.flags & DST_BALANCED &&
+					compare_keys(&(*rthp)->fl, 

ERROR:SPACING: space prohibited after that open parenthesis '('
#560: FILE: net/ipv4/route.c:741:
+					rt_free( rth );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#560: FILE: net/ipv4/route.c:741:
+					rt_free( rth );

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#564: FILE: net/ipv4/route.c:745:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#564: FILE: net/ipv4/route.c:745:
+			else {

ERROR:SPACING: space prohibited after that open parenthesis '('
#593: FILE: net/ipv4/route.c:1673:
+	if ( res->fi->fib_nhs > 1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#593: FILE: net/ipv4/route.c:1673:
+	if ( res->fi->fib_nhs > 1 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#594: FILE: net/ipv4/route.c:1674:
+		RTprint( KERN_DEBUG"%s: balanced entry created: %d\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#594: FILE: net/ipv4/route.c:1674:
+		RTprint( KERN_DEBUG"%s: balanced entry created: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: net/ipv4/route.c:1675:
+		RTprint( KERN_DEBUG"%s: balanced entry created: %d\n",
+			 __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#595: FILE: net/ipv4/route.c:1675:
+			 __FUNCTION__,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: net/ipv4/route.c:1676:
+^I^I^I rth ); $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#596: FILE: net/ipv4/route.c:1676:
+			 rth ); 

ERROR:SPACING: space prohibited after that open parenthesis '('
#601: FILE: net/ipv4/route.c:1681:
+	if ( res->fi->fib_nhs > 1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#601: FILE: net/ipv4/route.c:1681:
+	if ( res->fi->fib_nhs > 1 )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: net/ipv4/route.c:1752:
+#ifdef CONFIG_IP_ROUTE_MULTIPATH_CACHED $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#612: FILE: net/ipv4/route.c:1753:
+	struct rtable* rth;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#615: FILE: net/ipv4/route.c:1756:
+	unsigned hash;

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: net/ipv4/route.c:1757:
+	unsigned hash;
+	hopcount = res->fi->fib_nhs;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: net/ipv4/route.c:1761:
+^Iif ( hopcount < 2 ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#620: FILE: net/ipv4/route.c:1761:
+	if ( hopcount < 2 ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#620: FILE: net/ipv4/route.c:1761:
+	if ( hopcount < 2 ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: net/ipv4/route.c:1762:
+^I^Ireturn ip_mkroute_input_def(skb, res, fl, in_dev, daddr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: net/ipv4/route.c:1764:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#624: FILE: net/ipv4/route.c:1765:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", __FUNCTION__,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#624: FILE: net/ipv4/route.c:1765:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#624: FILE: net/ipv4/route.c:1765:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: net/ipv4/route.c:1766:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", __FUNCTION__,
+		 hopcount);

ERROR:SPACING: space prohibited after that open parenthesis '('
#628: FILE: net/ipv4/route.c:1769:
+	for ( hop = 0; hop < hopcount; ++hop ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#628: FILE: net/ipv4/route.c:1769:
+	for ( hop = 0; hop < hopcount; ++hop ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: net/ipv4/route.c:1772:
+^I^IRTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", $

ERROR:SPACING: space prohibited after that open parenthesis '('
#631: FILE: net/ipv4/route.c:1772:
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#631: FILE: net/ipv4/route.c:1772:
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#632: FILE: net/ipv4/route.c:1773:
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", 
+			 __FUNCTION__, hopcount);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#632: FILE: net/ipv4/route.c:1773:
+			 __FUNCTION__, hopcount);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: net/ipv4/route.c:1776:
+^I^Ierr = __mkroute_input( skb, res, in_dev, daddr, saddr, tos, $

ERROR:SPACING: space prohibited after that open parenthesis '('
#635: FILE: net/ipv4/route.c:1776:
+		err = __mkroute_input( skb, res, in_dev, daddr, saddr, tos, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: net/ipv4/route.c:1777:
+		err = __mkroute_input( skb, res, in_dev, daddr, saddr, tos, 
+					 &rth );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#636: FILE: net/ipv4/route.c:1777:
+					 &rth );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: net/ipv4/route.c:1778:
+^I^Iif ( err ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#637: FILE: net/ipv4/route.c:1778:
+		if ( err ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#637: FILE: net/ipv4/route.c:1778:
+		if ( err ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: net/ipv4/route.c:1780:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#640: FILE: net/ipv4/route.c:1781:
+	
+

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#642: FILE: net/ipv4/route.c:1783:
+		hash = rt_hash_code(daddr, saddr ^ (fl->iif << 5), tos);
 		                                        ^^^

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#643: FILE: net/ipv4/route.c:1784:
+		err = rt_intern_hash(hash, rth, (struct rtable**)&skb->dst);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#644: FILE: net/ipv4/route.c:1785:
+^I^Iif ( err ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#644: FILE: net/ipv4/route.c:1785:
+		if ( err ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#644: FILE: net/ipv4/route.c:1785:
+		if ( err ) 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#647: FILE: net/ipv4/route.c:1788:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: net/ipv4/route.c:1789:
+^I^I/* only for the last hop the reference count is handled $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#649: FILE: net/ipv4/route.c:1790:
+		/* only for the last hop the reference count is handled 
+		   outside */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#649: FILE: net/ipv4/route.c:1790:
+		   outside */

ERROR:SPACING: space prohibited after that open parenthesis '('
#650: FILE: net/ipv4/route.c:1791:
+		RTprint( KERN_DEBUG"%s: balanced entry created: %d\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#650: FILE: net/ipv4/route.c:1791:
+		RTprint( KERN_DEBUG"%s: balanced entry created: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#651: FILE: net/ipv4/route.c:1792:
+		RTprint( KERN_DEBUG"%s: balanced entry created: %d\n",
+			 __FUNCTION__, rth );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#651: FILE: net/ipv4/route.c:1792:
+			 __FUNCTION__, rth );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#651: FILE: net/ipv4/route.c:1792:
+			 __FUNCTION__, rth );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#652: FILE: net/ipv4/route.c:1793:
+^I^Iif ( hop == lasthop ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#652: FILE: net/ipv4/route.c:1793:
+		if ( hop == lasthop ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#652: FILE: net/ipv4/route.c:1793:
+		if ( hop == lasthop ) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around skb->dst->__refcnt
#653: FILE: net/ipv4/route.c:1794:
+			atomic_set(&(skb->dst->__refcnt), 1);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: net/ipv4/route.c:1797:
+#else /* CONFIG_IP_ROUTE_MULTIPATH_CACHED  */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#675: FILE: net/ipv4/route.c:2017:
+			/* check if the route is a multipath route and if so
+			   select one of the alternatives */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#675: FILE: net/ipv4/route.c:2017:
+			   select one of the alternatives */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#676: FILE: net/ipv4/route.c:2018:
+^I^I^Iif ( multipath_selectroute( $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#676: FILE: net/ipv4/route.c:2018:
+			if ( multipath_selectroute( 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: net/ipv4/route.c:2019:
+^I^I^I^I     &rth->fl, rth, $

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#678: FILE: net/ipv4/route.c:2020:
+				     (struct rtable**)&skb->dst) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#678: FILE: net/ipv4/route.c:2020:
+				     (struct rtable**)&skb->dst) ) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#706: FILE: net/ipv4/route.c:2230:
+	unsigned hash;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#709: FILE: net/ipv4/route.c:2233:
+	struct rtable* rth;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: net/ipv4/route.c:2235:
+^IRTprint( KERN_DEBUG"%s: entered (hopcount: %d, fl->oif: %d)\n", $

ERROR:SPACING: space prohibited after that open parenthesis '('
#711: FILE: net/ipv4/route.c:2235:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d, fl->oif: %d)\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#711: FILE: net/ipv4/route.c:2235:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d, fl->oif: %d)\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: net/ipv4/route.c:2236:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d, fl->oif: %d)\n", 
+		 __FUNCTION__, hopcount, fl->oif);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#712: FILE: net/ipv4/route.c:2236:
+		 __FUNCTION__, hopcount, fl->oif);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: net/ipv4/route.c:2238:
+^Iif (res->fi->fib_nhs > 1) {^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#715: FILE: net/ipv4/route.c:2239:
+		for ( hop = 0; hop < hopcount; ++hop ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#715: FILE: net/ipv4/route.c:2239:
+		for ( hop = 0; hop < hopcount; ++hop ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#717: FILE: net/ipv4/route.c:2241:
+			struct net_device *dev2nexthop;
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,

ERROR:SPACING: space prohibited after that open parenthesis '('
#717: FILE: net/ipv4/route.c:2241:
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#717: FILE: net/ipv4/route.c:2241:
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#717: FILE: net/ipv4/route.c:2241:
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: net/ipv4/route.c:2242:
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,
+				 hop, hopcount );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#718: FILE: net/ipv4/route.c:2242:
+				 hop, hopcount );

ERROR:SPACING: space prohibited after that open parenthesis '('
#727: FILE: net/ipv4/route.c:2251:
+			RTprint( KERN_DEBUG"%s: balanced entry created: %d " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#727: FILE: net/ipv4/route.c:2251:
+			RTprint( KERN_DEBUG"%s: balanced entry created: %d " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#727: FILE: net/ipv4/route.c:2251:
+			RTprint( KERN_DEBUG"%s: balanced entry created: %d " \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#729: FILE: net/ipv4/route.c:2253:
+				 __FUNCTION__,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#731: FILE: net/ipv4/route.c:2255:
+				 FIB_RES_GW(*res) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: net/ipv4/route.c:2257:
+^I^I^Ierr = __mkroute_output(&rth, res, fl, oldflp, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#734: FILE: net/ipv4/route.c:2258:
+			err = __mkroute_output(&rth, res, fl, oldflp, 
+						 dev2nexthop, flags);

ERROR:SPACING: space prohibited after that open parenthesis '('
#735: FILE: net/ipv4/route.c:2259:
+			if ( err != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#735: FILE: net/ipv4/route.c:2259:
+			if ( err != 0 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#735: FILE: net/ipv4/route.c:2259:
+			if ( err != 0 ) {
+				goto cleanup;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: net/ipv4/route.c:2263:
+^I^I^IRTprint( KERN_DEBUG"%s: created successfully %d\n", $

ERROR:SPACING: space prohibited after that open parenthesis '('
#739: FILE: net/ipv4/route.c:2263:
+			RTprint( KERN_DEBUG"%s: created successfully %d\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#739: FILE: net/ipv4/route.c:2263:
+			RTprint( KERN_DEBUG"%s: created successfully %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#740: FILE: net/ipv4/route.c:2264:
+			RTprint( KERN_DEBUG"%s: created successfully %d\n", 
+				 __FUNCTION__, hop );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#740: FILE: net/ipv4/route.c:2264:
+				 __FUNCTION__, hop );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#740: FILE: net/ipv4/route.c:2264:
+				 __FUNCTION__, hop );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#741: FILE: net/ipv4/route.c:2265:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#742: FILE: net/ipv4/route.c:2266:
+^I^I^Ihash = rt_hash_code(oldflp->fl4_dst, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: net/ipv4/route.c:2267:
+^I^I^I^I^I    oldflp->fl4_src ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: net/ipv4/route.c:2270:
+^I^I^IRTprint( KERN_DEBUG"%s: hashed  %d\n", $

ERROR:SPACING: space prohibited after that open parenthesis '('
#746: FILE: net/ipv4/route.c:2270:
+			RTprint( KERN_DEBUG"%s: hashed  %d\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#746: FILE: net/ipv4/route.c:2270:
+			RTprint( KERN_DEBUG"%s: hashed  %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: net/ipv4/route.c:2271:
+			RTprint( KERN_DEBUG"%s: hashed  %d\n", 
+				 __FUNCTION__, hop );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#747: FILE: net/ipv4/route.c:2271:
+				 __FUNCTION__, hop );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#747: FILE: net/ipv4/route.c:2271:
+				 __FUNCTION__, hop );

WARNING:INDENTED_LABEL: labels should not be indented
#749: FILE: net/ipv4/route.c:2273:
+		cleanup:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: net/ipv4/route.c:2276:
+^I^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#753: FILE: net/ipv4/route.c:2277:
+			if ( err != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#753: FILE: net/ipv4/route.c:2277:
+			if ( err != 0 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#753: FILE: net/ipv4/route.c:2277:
+			if ( err != 0 ) {
+				return err;
+			}

ERROR:SPACING: space prohibited after that open parenthesis '('
#757: FILE: net/ipv4/route.c:2281:
+		RTprint( KERN_DEBUG"%s: exited loop\n", __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#757: FILE: net/ipv4/route.c:2281:
+		RTprint( KERN_DEBUG"%s: exited loop\n", __FUNCTION__ );

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#757: FILE: net/ipv4/route.c:2281:
+		RTprint( KERN_DEBUG"%s: exited loop\n", __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#757: FILE: net/ipv4/route.c:2281:
+		RTprint( KERN_DEBUG"%s: exited loop\n", __FUNCTION__ );

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#761: FILE: net/ipv4/route.c:2285:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#761: FILE: net/ipv4/route.c:2285:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#762: FILE: net/ipv4/route.c:2286:
+^I^Ireturn ip_mkroute_output_def(rp, res, fl, oldflp, dev_out, $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#775: FILE: net/ipv4/route.c:2504:
 			    (IPTOS_RT_MASK | RTO_ONLINK))) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#777: FILE: net/ipv4/route.c:2506:
+			/* check for multipath routes and choose one if
+			   necessary */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#777: FILE: net/ipv4/route.c:2506:
+			   necessary */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000250055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 190 errors, 58 warnings, 70 checks, 698 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000250055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
