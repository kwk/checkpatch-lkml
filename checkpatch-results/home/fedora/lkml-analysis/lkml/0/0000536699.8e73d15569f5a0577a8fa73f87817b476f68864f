WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: include/asm-alpha/rwsem.h:1:
+#ifndef _ALPHA_RWSEM_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/asm-alpha/rwsem.h:20:
+extern struct rw_semaphore *rwsem_down_read_failed(struct rw_semaphore *sem);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/asm-alpha/rwsem.h:21:
+extern struct rw_semaphore *rwsem_down_write_failed(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#63: FILE: include/asm-alpha/rwsem.h:22:
+extern struct rw_semaphore *rwsem_wake(struct rw_semaphore *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#63: FILE: include/asm-alpha/rwsem.h:22:
+extern struct rw_semaphore *rwsem_wake(struct rw_semaphore *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#76: FILE: include/asm-alpha/rwsem.h:35:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#84: FILE: include/asm-alpha/rwsem.h:43:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#84: FILE: include/asm-alpha/rwsem.h:43:
+#define __RWSEM_DEBUG_INIT      , 0

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#93: FILE: include/asm-alpha/rwsem.h:52:
+#define DECLARE_RWSEM(name) \
+	struct rw_semaphore name = __RWSEM_INITIALIZER(name)

WARNING:LINE_SPACING: Missing a blank line after declarations
#109: FILE: include/asm-alpha/rwsem.h:68:
+	long count;
+	count = atomic_inc_return(&sem->count);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: include/asm-alpha/rwsem.h:76:
+	long prev, cmp;
+	prev = atomic_add_return_prev(RWSEM_ACTIVE_WRITE_BIAS, &sem->count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: include/asm-alpha/rwsem.h:85:
+	long count;
+	count = atomic_dec_return(&sem->count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: include/asm-alpha/rwsem.h:94:
+	long count, cmp;
+	count = atomic_sub_return(RWSEM_ACTIVE_WRITE_BIAS, &sem->count);

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#170: FILE: include/asm-alpha/atomic.h:100:
+	:"Ir" (i), "m" (v->counter) : "memory");
 	^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: include/asm-alpha/atomic.h:107:
+static __inline__ long atomic_add_return_prev(int i, atomic_t * v)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#177: FILE: include/asm-alpha/atomic.h:107:
+static __inline__ long atomic_add_return_prev(int i, atomic_t * v)

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: include/asm-alpha/atomic.h:110:
+	long temp, result;
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#180: FILE: include/asm-alpha/atomic.h:110:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#191: FILE: include/asm-alpha/atomic.h:121:
+	:"=&r" (result), "=m" (v->counter), "=&r" (temp)
 	^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000536699.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 6 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000536699.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
