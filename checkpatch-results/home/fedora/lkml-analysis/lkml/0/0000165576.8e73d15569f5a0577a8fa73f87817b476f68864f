WARNING:LONG_LINE_COMMENT: line length of 125 exceeds 100 columns
#94: FILE: include/linux/mm.h:159:
+#define VM_RESERVED	0x00080000	/* Pages and ptes in region aren't managed with regular pagecache or rmap routines */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#113: FILE: include/linux/mm.h:716:
+		__invalid_pfn(__FUNCTION__, pte, vm_flags, vaddr)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#127: FILE: mm/madvise.c:129:
+	if ((vma->vm_flags & (VM_LOCKED|VM_RESERVED)) || is_vm_hugetlb_page(vma))
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: mm/memory.c:343:
+void __invalid_pfn(const char *errfunc, pte_t pte,
+				unsigned long vm_flags, unsigned long vaddr)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#148: FILE: mm/memory.c:345:
+	printk(KERN_ERR "%s: pte does not point to valid memory. "

WARNING:SPLIT_STRING: quoted string split across lines
#149: FILE: mm/memory.c:346:
+	printk(KERN_ERR "%s: pte does not point to valid memory. "
+		"process = %s, pte = %08lx, vm_flags = %lx, vaddr = %lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: mm/memory.c:538:
+static void zap_pte_range(struct mmu_gather *tlb,
+				struct vm_area_struct *vma, pmd_t *pmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: mm/memory.c:613:
+static inline void zap_pmd_range(struct mmu_gather *tlb,
+				struct vm_area_struct *vma, pud_t *pud,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: mm/memory.c:630:
+static inline void zap_pud_range(struct mmu_gather *tlb,
+				struct vm_area_struct *vma, pgd_t *pgd,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#317: FILE: mm/memory.c:1253:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!old_page"
#348: FILE: mm/memory.c:1297:
+	if (old_page == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#359: FILE: mm/memory.c:1313:
+		if (old_page == NULL)
[...]
-		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!old_page"
#359: FILE: mm/memory.c:1313:
+		if (old_page == NULL)

CHECK:BRACES: Unbalanced braces around else statement
#362: FILE: mm/memory.c:1315:
+		else {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#431: FILE: mm/page_alloc.c:117:
+			1 << PG_reserved );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#449: FILE: mm/page_alloc.c:330:
+			1 << PG_reserved )))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#459: FILE: mm/page_alloc.c:459:
+			1 << PG_reserved )))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#542: FILE: mm/fremap.c:71:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#551: FILE: mm/fremap.c:130:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#604: FILE: mm/rmap.c:470:
+	BUG_ON(!pfn_valid(page_to_pfn(page)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#656: FILE: drivers/scsi/sg.c:1893:
+		BUG_ON(PageReserved(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#681: FILE: drivers/scsi/st.c:4441:
+		BUG_ON(PageReserved(page));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#736: FILE: mm/mmap.c:1078:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "

WARNING:SPLIT_STRING: quoted string split across lines
#737: FILE: mm/mmap.c:1079:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "
+				"PROT_WRITE mmap of VM_RESERVED memory, which "

WARNING:SPLIT_STRING: quoted string split across lines
#738: FILE: mm/mmap.c:1080:
+				"PROT_WRITE mmap of VM_RESERVED memory, which "
+				"is deprecated. Please report this to "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#739: FILE: mm/mmap.c:1081:
+				"linux-kernel@vger.kernel.org\n",current->comm);
 				                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#739: FILE: mm/mmap.c:1081:
+				"is deprecated. Please report this to "
+				"linux-kernel@vger.kernel.org\n",current->comm);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#757: FILE: mm/mprotect.c:135:
+			BUG_ON(oldflags & VM_WRITE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#758: FILE: mm/mprotect.c:136:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "

WARNING:SPLIT_STRING: quoted string split across lines
#759: FILE: mm/mprotect.c:137:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "
+				"PROT_WRITE mprotect of VM_RESERVED memory, "

WARNING:SPLIT_STRING: quoted string split across lines
#760: FILE: mm/mprotect.c:138:
+				"PROT_WRITE mprotect of VM_RESERVED memory, "
+				"which is deprecated. Please report this to "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#761: FILE: mm/mprotect.c:139:
+				"linux-kernel@vger.kernel.org\n",current->comm);
 				                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#761: FILE: mm/mprotect.c:139:
+				"which is deprecated. Please report this to "
+				"linux-kernel@vger.kernel.org\n",current->comm);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000165576.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 19 warnings, 9 checks, 682 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000165576.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
