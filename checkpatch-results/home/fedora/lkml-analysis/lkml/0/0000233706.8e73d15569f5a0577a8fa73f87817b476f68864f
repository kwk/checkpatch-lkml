WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: security/stacker.c:1:
+/* "Stacker" Linux security module (LSM).

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#83: FILE: security/stacker.c:11:
modify

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:TYPO_SPELLING: 'semaphor' may be misspelled - perhaps 'semaphore'?
#115: FILE: security/stacker.c:40:
+ * This approach uses a multiple reader - one writer semaphor;
                                                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#148: FILE: security/stacker.c:69:
+/* TODO: I'm using semaphore and down_interruptable. Are there
+   any hooks that can be called inside an interrupt where it is NOT

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#159: FILE: security/stacker.c:80:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#163: FILE: security/stacker.c:83:
+static int short_circuit_restrictive;   /* = 0; if 1, short-circuit
+					     hooks */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#163: FILE: security/stacker.c:83:
+					     hooks */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#166: FILE: security/stacker.c:85:
+static int short_circuit_capable;       /* = 0; if 1, short-circuit
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#169: FILE: security/stacker.c:88:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#171: FILE: security/stacker.c:90:
+/* The set of LSM modules stacked by this "stacker" module
+   is stored as a singly linked list of module_entries whose head is

CHECK:LINE_SPACING: Please don't use multiple blank lines
#176: FILE: security/stacker.c:94:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#191: FILE: security/stacker.c:108:
+ * */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: security/stacker.c:111:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#206: FILE: security/stacker.c:123:
+	for (m=stacked_modules; m; m = m->next) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#207: FILE: security/stacker.c:124:
+		if (m->namelen == e-s && strncmp(m->module_name, s, e-s)==0)
 		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#207: FILE: security/stacker.c:124:
+		if (m->namelen == e-s && strncmp(m->module_name, s, e-s)==0)
 		                                                     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#207: FILE: security/stacker.c:124:
+		if (m->namelen == e-s && strncmp(m->module_name, s, e-s)==0)
 		                                                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#221: FILE: security/stacker.c:137:
+ * why this is a good idea.  */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: security/stacker.c:139:
+#define RETURN_ERROR_IF_ANY_ERROR(BASE_FUNC,FUNC_WITH_ARGS) do { \
                                            ^

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#223: FILE: security/stacker.c:139:
+#define RETURN_ERROR_IF_ANY_ERROR(BASE_FUNC,FUNC_WITH_ARGS) do { \
+	int final_result = 0; \
+	int result; \
+	struct module_entry *m; \
+	LOCK_STACKER_FOR_READING; \
+	for (m = stacked_modules; m; m = m->next) { \
+		if (!m->module_operations.BASE_FUNC) \
+			continue; \
+		result = m->module_operations.FUNC_WITH_ARGS; \
+		if (result && !final_result) { \
+			final_result = result; \
+			if (short_circuit_restrictive) break; \
+		} \
+	} \
+	UNLOCK_STACKER_FOR_READING; \
+	return final_result; } while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#234: FILE: security/stacker.c:150:
+			if (short_circuit_restrictive) break; \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#240: FILE: security/stacker.c:156:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: security/stacker.c:159:
+#define CALL_ALL(BASE_FUNC,FUNC_WITH_ARGS) do { \
                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: security/stacker.c:168:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#255: FILE: security/stacker.c:171:
+	printk(KERN_INFO "add_module_entry: starting\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_module_entry', this function's name, in a string
#255: FILE: security/stacker.c:171:
+	printk(KERN_INFO "add_module_entry: starting\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: Unbalanced braces around else statement
#259: FILE: security/stacker.c:175:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#269: FILE: security/stacker.c:185:
+	printk(KERN_INFO "add_module_entry: done\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_module_entry', this function's name, in a string
#269: FILE: security/stacker.c:185:
+	printk(KERN_INFO "add_module_entry: done\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: security/stacker.c:188:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: security/stacker.c:189:
+static int stacker_ptrace (struct task_struct *parent, struct

ERROR:SPACING: space required after that ',' (ctx:VxV)
#276: FILE: security/stacker.c:191:
+	RETURN_ERROR_IF_ANY_ERROR(ptrace,ptrace(parent, child));
 	                                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: security/stacker.c:194:
+static int stacker_capget (struct task_struct *target, kernel_cap_t *

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#281: FILE: security/stacker.c:195:
+			 kernel_cap_t * inheritable, kernel_cap_t * permitted)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#281: FILE: security/stacker.c:195:
+			 kernel_cap_t * inheritable, kernel_cap_t * permitted)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: security/stacker.c:197:
+	RETURN_ERROR_IF_ANY_ERROR(capget,capget(target, effective,
 	                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: security/stacker.c:198:
+	RETURN_ERROR_IF_ANY_ERROR(capget,capget(target, effective,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: security/stacker.c:200:
+static int stacker_capset_check (struct task_struct *target,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: security/stacker.c:201:
+static int stacker_capset_check (struct task_struct *target,
+			       kernel_cap_t * effective,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#288: FILE: security/stacker.c:201:
+			       kernel_cap_t * effective,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#289: FILE: security/stacker.c:202:
+			       kernel_cap_t * inheritable,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#290: FILE: security/stacker.c:203:
+			       kernel_cap_t * permitted)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#292: FILE: security/stacker.c:205:
+	RETURN_ERROR_IF_ANY_ERROR(capset_check,capset_check(target, effective,
 	                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: security/stacker.c:206:
+	RETURN_ERROR_IF_ANY_ERROR(capset_check,capset_check(target, effective,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: security/stacker.c:208:
+static void stacker_capset_set (struct task_struct *target,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: security/stacker.c:209:
+static void stacker_capset_set (struct task_struct *target,
+			      kernel_cap_t * effective,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#297: FILE: security/stacker.c:209:
+			      kernel_cap_t * effective,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: security/stacker.c:210:
+			      kernel_cap_t * inheritable,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: security/stacker.c:211:
+			      kernel_cap_t * permitted)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: security/stacker.c:213:
+	CALL_ALL(capset_set,capset_set(target, effective, inheritable,
 	                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: security/stacker.c:214:
+	CALL_ALL(capset_set,capset_set(target, effective, inheritable,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: security/stacker.c:216:
+static int stacker_acct (struct file *file)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: security/stacker.c:218:
+	RETURN_ERROR_IF_ANY_ERROR(acct,acct(file));
 	                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: security/stacker.c:221:
+static int stacker_capable (struct task_struct *tsk, int cap)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: security/stacker.c:239:
+^Iint final_result = -EPERM; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: security/stacker.c:240:
+^Iint result; $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#334: FILE: security/stacker.c:245:
+		if (cap_is_fs_cap (cap) ? tsk->fsuid == 0 : tsk->euid == 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: security/stacker.c:253:
+^ILOCK_STACKER_FOR_READING; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: security/stacker.c:254:
+^Ifor (m = stacked_modules; m; m = m->next) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: security/stacker.c:255:
+^I^Iresult = (m->module_operations).capable(tsk,cap); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: security/stacker.c:255:
+		result = (m->module_operations).capable(tsk,cap); 
 		                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: security/stacker.c:262:
+^I^I^Ifinal_result = 0; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#352: FILE: security/stacker.c:263:
+			if (short_circuit_capable) break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: security/stacker.c:265:
+^I} $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#360: FILE: security/stacker.c:271:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#361: FILE: security/stacker.c:272:
+static int stacker_sysctl (struct ctl_table * table, int op)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#361: FILE: security/stacker.c:272:
+static int stacker_sysctl (struct ctl_table * table, int op)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: security/stacker.c:274:
+	RETURN_ERROR_IF_ANY_ERROR(sysctl,sysctl(table, op));
 	                                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#366: FILE: security/stacker.c:277:
+static int stacker_quotactl (int cmds, int type, int id, struct

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: security/stacker.c:279:
+	RETURN_ERROR_IF_ANY_ERROR(quotactl,quotactl(cmds,type,id,sb));
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: security/stacker.c:279:
+	RETURN_ERROR_IF_ANY_ERROR(quotactl,quotactl(cmds,type,id,sb));
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: security/stacker.c:279:
+	RETURN_ERROR_IF_ANY_ERROR(quotactl,quotactl(cmds,type,id,sb));
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: security/stacker.c:279:
+	RETURN_ERROR_IF_ANY_ERROR(quotactl,quotactl(cmds,type,id,sb));
 	                                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#372: FILE: security/stacker.c:282:
+static int stacker_quota_on (struct file *f)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#374: FILE: security/stacker.c:284:
+	RETURN_ERROR_IF_ANY_ERROR(quota_on,quota_on(f));
 	                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: security/stacker.c:287:
+static int stacker_syslog (int type)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: security/stacker.c:289:
+	RETURN_ERROR_IF_ANY_ERROR(syslog,syslog(type));
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: security/stacker.c:294:
+	RETURN_ERROR_IF_ANY_ERROR(vm_enough_memory,vm_enough_memory(pages));
 	                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: security/stacker.c:297:
+static int stacker_netlink_send (struct sock *sk, struct sk_buff *skb)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#390: FILE: security/stacker.c:300:
+	/* NOTE: The dummy module does this:
+		if (current->euid == 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#395: FILE: security/stacker.c:305:
+	 * your administrators what to do. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: security/stacker.c:307:
+	RETURN_ERROR_IF_ANY_ERROR(netlink_send,netlink_send(sk,skb));
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: security/stacker.c:307:
+	RETURN_ERROR_IF_ANY_ERROR(netlink_send,netlink_send(sk,skb));
 	                                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#400: FILE: security/stacker.c:310:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#401: FILE: security/stacker.c:311:
+static int stacker_netlink_recv (struct sk_buff *skb)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: security/stacker.c:313:
+	RETURN_ERROR_IF_ANY_ERROR(netlink_recv,netlink_recv(skb));
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#406: FILE: security/stacker.c:316:
+static int stacker_bprm_alloc_security (struct linux_binprm *bprm)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: security/stacker.c:318:
+	RETURN_ERROR_IF_ANY_ERROR(bprm_alloc_security,bprm_alloc_security(bprm));
 	                                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#411: FILE: security/stacker.c:321:
+static void stacker_bprm_free_security (struct linux_binprm *bprm)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: security/stacker.c:323:
+	CALL_ALL(bprm_free_security,bprm_free_security(bprm));
 	                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#416: FILE: security/stacker.c:326:
+static void stacker_bprm_apply_creds (struct linux_binprm *bprm, int

ERROR:SPACING: space required after that ',' (ctx:VxV)
#419: FILE: security/stacker.c:328:
+	CALL_ALL(bprm_apply_creds,bprm_apply_creds(bprm, unsafe));
 	                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#422: FILE: security/stacker.c:331:
+static int stacker_bprm_set_security (struct linux_binprm *bprm)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: security/stacker.c:333:
+	RETURN_ERROR_IF_ANY_ERROR(bprm_set_security,bprm_set_security(bprm));
 	                                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#427: FILE: security/stacker.c:336:
+static int stacker_bprm_check_security (struct linux_binprm *bprm)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#429: FILE: security/stacker.c:338:
+	RETURN_ERROR_IF_ANY_ERROR(bprm_check_security,bprm_check_security(bprm));
 	                                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#432: FILE: security/stacker.c:341:
+static int stacker_bprm_secureexec (struct linux_binprm *bprm)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#434: FILE: security/stacker.c:343:
+	RETURN_ERROR_IF_ANY_ERROR(bprm_secureexec,bprm_secureexec(bprm));
 	                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: security/stacker.c:346:
+static int stacker_sb_alloc_security (struct super_block *sb)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#439: FILE: security/stacker.c:348:
+	RETURN_ERROR_IF_ANY_ERROR(sb_alloc_security,sb_alloc_security(sb));
 	                                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#442: FILE: security/stacker.c:351:
+static void stacker_sb_free_security (struct super_block *sb)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: security/stacker.c:353:
+	CALL_ALL(sb_free_security,sb_free_security(sb));
 	                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#447: FILE: security/stacker.c:356:
+static int stacker_sb_copy_data (struct file_system_type *type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: security/stacker.c:357:
+static int stacker_sb_copy_data (struct file_system_type *type,
+			void *orig, void *copy)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: security/stacker.c:359:
+	RETURN_ERROR_IF_ANY_ERROR(sb_copy_data,sb_copy_data(type,orig,copy));
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: security/stacker.c:359:
+	RETURN_ERROR_IF_ANY_ERROR(sb_copy_data,sb_copy_data(type,orig,copy));
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: security/stacker.c:359:
+	RETURN_ERROR_IF_ANY_ERROR(sb_copy_data,sb_copy_data(type,orig,copy));
 	                                                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#453: FILE: security/stacker.c:362:
+static int stacker_sb_kern_mount (struct super_block *sb, void *data)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#455: FILE: security/stacker.c:364:
+	RETURN_ERROR_IF_ANY_ERROR(sb_kern_mount,sb_kern_mount(sb, data));
 	                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#458: FILE: security/stacker.c:367:
+static int stacker_sb_statfs (struct super_block *sb)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#460: FILE: security/stacker.c:369:
+	RETURN_ERROR_IF_ANY_ERROR(sb_statfs,sb_statfs(sb));
 	                                   ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#463: FILE: security/stacker.c:372:
+static int stacker_mount (char *dev_name, struct nameidata *nd, char
                                                             ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: security/stacker.c:372:
+static int stacker_mount (char *dev_name, struct nameidata *nd, char

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#467: FILE: security/stacker.c:375:
+	RETURN_ERROR_IF_ANY_ERROR(sb_mount,sb_mount(dev_name, nd, type, flags,
 	                                                      ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#467: FILE: security/stacker.c:375:
+	RETURN_ERROR_IF_ANY_ERROR(sb_mount,sb_mount(dev_name, nd, type, flags,
 	                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: security/stacker.c:376:
+	RETURN_ERROR_IF_ANY_ERROR(sb_mount,sb_mount(dev_name, nd, type, flags,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: security/stacker.c:378:
+static int stacker_check_sb (struct vfsmount *mnt, struct nameidata

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#474: FILE: security/stacker.c:380:
+	RETURN_ERROR_IF_ANY_ERROR(sb_check_sb,sb_check_sb(mnt, nd));
 	                                                       ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#474: FILE: security/stacker.c:380:
+	RETURN_ERROR_IF_ANY_ERROR(sb_check_sb,sb_check_sb(mnt, nd));
 	                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#477: FILE: security/stacker.c:383:
+static int stacker_umount (struct vfsmount *mnt, int flags)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: security/stacker.c:385:
+	RETURN_ERROR_IF_ANY_ERROR(sb_umount,sb_umount(mnt, flags));
 	                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#482: FILE: security/stacker.c:388:
+static void stacker_umount_close (struct vfsmount *mnt)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#484: FILE: security/stacker.c:390:
+	CALL_ALL(sb_umount_close,sb_umount_close(mnt));
 	                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#487: FILE: security/stacker.c:393:
+static void stacker_umount_busy (struct vfsmount *mnt)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#489: FILE: security/stacker.c:395:
+	CALL_ALL(sb_umount_busy,sb_umount_busy(mnt));
 	                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#492: FILE: security/stacker.c:398:
+static void stacker_post_remount (struct vfsmount *mnt, unsigned long

ERROR:SPACING: space required after that ',' (ctx:VxV)
#496: FILE: security/stacker.c:401:
+	CALL_ALL(sb_post_remount,sb_post_remount(mnt, flags, data));
 	                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#499: FILE: security/stacker.c:404:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#500: FILE: security/stacker.c:405:
+static void stacker_post_mountroot (void)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#502: FILE: security/stacker.c:407:
+	CALL_ALL(sb_post_mountroot,sb_post_mountroot());
 	                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#505: FILE: security/stacker.c:410:
+static void stacker_post_addmount (struct vfsmount *mnt, struct

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#508: FILE: security/stacker.c:412:
+	CALL_ALL(sb_post_addmount,sb_post_addmount(mnt, nd));
 	                                                ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#508: FILE: security/stacker.c:412:
+	CALL_ALL(sb_post_addmount,sb_post_addmount(mnt, nd));
 	                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#511: FILE: security/stacker.c:415:
+static int stacker_pivotroot (struct nameidata *old_nd, struct

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: security/stacker.c:417:
+	RETURN_ERROR_IF_ANY_ERROR(sb_pivotroot,sb_pivotroot(old_nd, new_nd));
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#517: FILE: security/stacker.c:420:
+static void stacker_post_pivotroot (struct nameidata *old_nd, struct

ERROR:SPACING: space required after that ',' (ctx:VxV)
#520: FILE: security/stacker.c:422:
+	CALL_ALL(sb_post_pivotroot,sb_post_pivotroot(old_nd, new_nd));
 	                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#523: FILE: security/stacker.c:425:
+static int stacker_inode_alloc_security (struct inode *inode)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#525: FILE: security/stacker.c:427:
+	RETURN_ERROR_IF_ANY_ERROR(inode_alloc_security,inode_alloc_security(inode));
 	                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#528: FILE: security/stacker.c:430:
+static void stacker_inode_free_security (struct inode *inode)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#530: FILE: security/stacker.c:432:
+	CALL_ALL(inode_free_security,inode_free_security(inode));
 	                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: security/stacker.c:435:
+static int stacker_inode_create (struct inode *inode, struct dentry

ERROR:SPACING: space required after that ',' (ctx:VxV)
#537: FILE: security/stacker.c:438:
+	RETURN_ERROR_IF_ANY_ERROR(inode_create,inode_create(inode, dentry,
 	                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: security/stacker.c:439:
+	RETURN_ERROR_IF_ANY_ERROR(inode_create,inode_create(inode, dentry,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: security/stacker.c:441:
+static void stacker_inode_post_create (struct inode *inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: security/stacker.c:442:
+static void stacker_inode_post_create (struct inode *inode,
+	    struct dentry *dentry, int mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#544: FILE: security/stacker.c:444:
+	CALL_ALL(inode_post_create,inode_post_create(inode, dentry, mask));
 	                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#547: FILE: security/stacker.c:447:
+static int stacker_inode_link (struct dentry *old_dentry, struct inode

ERROR:SPACING: space required after that ',' (ctx:VxV)
#551: FILE: security/stacker.c:450:
+	RETURN_ERROR_IF_ANY_ERROR(inode_link,inode_link(old_dentry, inode,
 	                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: security/stacker.c:451:
+	RETURN_ERROR_IF_ANY_ERROR(inode_link,inode_link(old_dentry, inode,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: security/stacker.c:453:
+static void stacker_inode_post_link (struct dentry *old_dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: security/stacker.c:454:
+static void stacker_inode_post_link (struct dentry *old_dentry,
+				   struct inode *inode,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#559: FILE: security/stacker.c:457:
+	CALL_ALL(inode_post_link,inode_post_link(old_dentry, inode,
 	                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: security/stacker.c:458:
+	CALL_ALL(inode_post_link,inode_post_link(old_dentry, inode,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#563: FILE: security/stacker.c:460:
+static int stacker_inode_unlink (struct inode *inode, struct dentry

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: security/stacker.c:462:
+	RETURN_ERROR_IF_ANY_ERROR(inode_unlink,inode_unlink(inode, dentry));
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#569: FILE: security/stacker.c:465:
+static int stacker_inode_symlink (struct inode *inode, struct dentry

ERROR:SPACING: space required after that ',' (ctx:VxV)
#573: FILE: security/stacker.c:468:
+	RETURN_ERROR_IF_ANY_ERROR(inode_symlink,inode_symlink(inode, dentry,
 	                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#575: FILE: security/stacker.c:469:
+	RETURN_ERROR_IF_ANY_ERROR(inode_symlink,inode_symlink(inode, dentry,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#577: FILE: security/stacker.c:471:
+static void stacker_inode_post_symlink (struct inode *inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: security/stacker.c:472:
+static void stacker_inode_post_symlink (struct inode *inode,
+				      struct dentry *dentry, const char *name)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#580: FILE: security/stacker.c:474:
+	CALL_ALL(inode_post_symlink,inode_post_symlink(inode, dentry, name));
 	                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#583: FILE: security/stacker.c:477:
+static int stacker_inode_mkdir (struct inode *inode, struct dentry

ERROR:SPACING: space required after that ',' (ctx:VxV)
#587: FILE: security/stacker.c:480:
+	RETURN_ERROR_IF_ANY_ERROR(inode_mkdir,inode_mkdir(inode, dentry,
 	                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: security/stacker.c:481:
+	RETURN_ERROR_IF_ANY_ERROR(inode_mkdir,inode_mkdir(inode, dentry,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#591: FILE: security/stacker.c:483:
+static void stacker_inode_post_mkdir (struct inode *inode,

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: security/stacker.c:484:
+^I    ^Istruct dentry *dentry, int mask)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#592: FILE: security/stacker.c:484:
+^I    ^Istruct dentry *dentry, int mask)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: security/stacker.c:484:
+static void stacker_inode_post_mkdir (struct inode *inode,
+	    	struct dentry *dentry, int mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#594: FILE: security/stacker.c:486:
+	CALL_ALL(inode_post_mkdir,inode_post_mkdir(inode, dentry, mask));
 	                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#597: FILE: security/stacker.c:489:
+static int stacker_inode_rmdir (struct inode *inode, struct dentry

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: security/stacker.c:491:
+	RETURN_ERROR_IF_ANY_ERROR(inode_rmdir,inode_rmdir(inode, dentry));
 	                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: security/stacker.c:494:
+static int stacker_inode_mknod (struct inode *inode, struct dentry

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: security/stacker.c:497:
+	RETURN_ERROR_IF_ANY_ERROR(inode_mknod,inode_mknod(inode, dentry,
 	                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: security/stacker.c:498:
+	RETURN_ERROR_IF_ANY_ERROR(inode_mknod,inode_mknod(inode, dentry,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#611: FILE: security/stacker.c:500:
+static void stacker_inode_post_mknod (struct inode *inode,

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: security/stacker.c:501:
+^I       ^Istruct dentry *dentry, int major, dev_t minor)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#612: FILE: security/stacker.c:501:
+^I       ^Istruct dentry *dentry, int major, dev_t minor)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#612: FILE: security/stacker.c:501:
+static void stacker_inode_post_mknod (struct inode *inode,
+	       	struct dentry *dentry, int major, dev_t minor)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#614: FILE: security/stacker.c:503:
+	CALL_ALL(inode_post_mknod,inode_post_mknod(inode, dentry, major,
 	                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: security/stacker.c:504:
+	CALL_ALL(inode_post_mknod,inode_post_mknod(inode, dentry, major,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#618: FILE: security/stacker.c:506:
+static int stacker_inode_rename (struct inode *old_inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: security/stacker.c:507:
+static int stacker_inode_rename (struct inode *old_inode,
+			       struct dentry *old_dentry,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#623: FILE: security/stacker.c:511:
+	RETURN_ERROR_IF_ANY_ERROR(inode_rename,inode_rename(old_inode,
 	                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: security/stacker.c:512:
+	RETURN_ERROR_IF_ANY_ERROR(inode_rename,inode_rename(old_inode,
+				  new_inode, new_dentry));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#628: FILE: security/stacker.c:515:
+static void stacker_inode_post_rename (struct inode *old_inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: security/stacker.c:516:
+static void stacker_inode_post_rename (struct inode *old_inode,
+				     struct dentry *old_dentry,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: security/stacker.c:520:
+	CALL_ALL(inode_post_rename,inode_post_rename(old_inode, old_dentry,
 	                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: security/stacker.c:521:
+	CALL_ALL(inode_post_rename,inode_post_rename(old_inode, old_dentry,
+				  new_inode, new_dentry));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#637: FILE: security/stacker.c:524:
+static int stacker_inode_readlink (struct dentry *dentry)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#639: FILE: security/stacker.c:526:
+	RETURN_ERROR_IF_ANY_ERROR(inode_readlink,inode_readlink(dentry));
 	                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#642: FILE: security/stacker.c:529:
+static int stacker_inode_follow_link (struct dentry *dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: security/stacker.c:530:
+static int stacker_inode_follow_link (struct dentry *dentry,
+				    struct nameidata *nameidata)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#645: FILE: security/stacker.c:532:
+	RETURN_ERROR_IF_ANY_ERROR(inode_follow_link,inode_follow_link(dentry,
 	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: security/stacker.c:533:
+	RETURN_ERROR_IF_ANY_ERROR(inode_follow_link,inode_follow_link(dentry,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: security/stacker.c:535:
+static int stacker_inode_permission (struct inode *inode, int mask,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#650: FILE: security/stacker.c:536:
+		struct nameidata *nd)
 		                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: security/stacker.c:536:
+static int stacker_inode_permission (struct inode *inode, int mask,
+		struct nameidata *nd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#652: FILE: security/stacker.c:538:
+	RETURN_ERROR_IF_ANY_ERROR(inode_permission,inode_permission(inode,
 	                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: security/stacker.c:539:
+	RETURN_ERROR_IF_ANY_ERROR(inode_permission,inode_permission(inode,
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#656: FILE: security/stacker.c:541:
+static int stacker_inode_setattr (struct dentry *dentry, struct iattr

ERROR:SPACING: space required after that ',' (ctx:VxV)
#659: FILE: security/stacker.c:543:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setattr,inode_setattr(dentry, iattr));
 	                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#662: FILE: security/stacker.c:546:
+static int stacker_inode_getattr (struct vfsmount *mnt, struct dentry

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: security/stacker.c:548:
+	RETURN_ERROR_IF_ANY_ERROR(inode_getattr,inode_getattr(mnt,dentry));
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: security/stacker.c:548:
+	RETURN_ERROR_IF_ANY_ERROR(inode_getattr,inode_getattr(mnt,dentry));
 	                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#668: FILE: security/stacker.c:551:
+static void stacker_inode_delete (struct inode *ino)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#670: FILE: security/stacker.c:553:
+	CALL_ALL(inode_delete,inode_delete(ino));
 	                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#673: FILE: security/stacker.c:556:
+static int stacker_inode_setxattr (struct dentry *dentry, char *name,

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: security/stacker.c:557:
+^I        ^Ivoid *value, size_t size, int flags)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#674: FILE: security/stacker.c:557:
+^I        ^Ivoid *value, size_t size, int flags)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: security/stacker.c:557:
+static int stacker_inode_setxattr (struct dentry *dentry, char *name,
+	        	void *value, size_t size, int flags)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#676: FILE: security/stacker.c:559:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setxattr,inode_setxattr(dentry,name,value,size,flags));
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#676: FILE: security/stacker.c:559:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setxattr,inode_setxattr(dentry,name,value,size,flags));
 	                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#676: FILE: security/stacker.c:559:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setxattr,inode_setxattr(dentry,name,value,size,flags));
 	                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#676: FILE: security/stacker.c:559:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setxattr,inode_setxattr(dentry,name,value,size,flags));
 	                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#676: FILE: security/stacker.c:559:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setxattr,inode_setxattr(dentry,name,value,size,flags));
 	                                                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#679: FILE: security/stacker.c:562:
+static void stacker_inode_post_setxattr (struct dentry *dentry, char

ERROR:SPACING: space required after that ',' (ctx:VxV)
#683: FILE: security/stacker.c:565:
+	CALL_ALL(inode_post_setxattr,inode_post_setxattr(dentry,name,value,size,flags));
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#683: FILE: security/stacker.c:565:
+	CALL_ALL(inode_post_setxattr,inode_post_setxattr(dentry,name,value,size,flags));
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#683: FILE: security/stacker.c:565:
+	CALL_ALL(inode_post_setxattr,inode_post_setxattr(dentry,name,value,size,flags));
 	                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#683: FILE: security/stacker.c:565:
+	CALL_ALL(inode_post_setxattr,inode_post_setxattr(dentry,name,value,size,flags));
 	                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#683: FILE: security/stacker.c:565:
+	CALL_ALL(inode_post_setxattr,inode_post_setxattr(dentry,name,value,size,flags));
 	                                                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#686: FILE: security/stacker.c:568:
+static int stacker_inode_getxattr (struct dentry *dentry, char *name)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#688: FILE: security/stacker.c:570:
+	RETURN_ERROR_IF_ANY_ERROR(inode_getxattr,inode_getxattr(dentry,name));
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#688: FILE: security/stacker.c:570:
+	RETURN_ERROR_IF_ANY_ERROR(inode_getxattr,inode_getxattr(dentry,name));
 	                                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#691: FILE: security/stacker.c:573:
+static int stacker_inode_listxattr (struct dentry *dentry)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#693: FILE: security/stacker.c:575:
+	RETURN_ERROR_IF_ANY_ERROR(inode_listxattr,inode_listxattr(dentry));
 	                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#696: FILE: security/stacker.c:578:
+static int stacker_inode_removexattr (struct dentry *dentry, char

ERROR:SPACING: space required after that ',' (ctx:VxV)
#699: FILE: security/stacker.c:580:
+	RETURN_ERROR_IF_ANY_ERROR(inode_removexattr,inode_removexattr(dentry,name));
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#699: FILE: security/stacker.c:580:
+	RETURN_ERROR_IF_ANY_ERROR(inode_removexattr,inode_removexattr(dentry,name));
 	                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#705: FILE: security/stacker.c:585:
+	RETURN_ERROR_IF_ANY_ERROR(inode_getsecurity,inode_getsecurity(inode,name,buffer,size));
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#705: FILE: security/stacker.c:585:
+	RETURN_ERROR_IF_ANY_ERROR(inode_getsecurity,inode_getsecurity(inode,name,buffer,size));
 	                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#705: FILE: security/stacker.c:585:
+	RETURN_ERROR_IF_ANY_ERROR(inode_getsecurity,inode_getsecurity(inode,name,buffer,size));
 	                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#705: FILE: security/stacker.c:585:
+	RETURN_ERROR_IF_ANY_ERROR(inode_getsecurity,inode_getsecurity(inode,name,buffer,size));
 	                                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#711: FILE: security/stacker.c:590:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setsecurity,inode_setsecurity(inode,name,value,size,flags));
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#711: FILE: security/stacker.c:590:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setsecurity,inode_setsecurity(inode,name,value,size,flags));
 	                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#711: FILE: security/stacker.c:590:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setsecurity,inode_setsecurity(inode,name,value,size,flags));
 	                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#711: FILE: security/stacker.c:590:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setsecurity,inode_setsecurity(inode,name,value,size,flags));
 	                                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#711: FILE: security/stacker.c:590:
+	RETURN_ERROR_IF_ANY_ERROR(inode_setsecurity,inode_setsecurity(inode,name,value,size,flags));
 	                                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#717: FILE: security/stacker.c:595:
+	RETURN_ERROR_IF_ANY_ERROR(inode_listsecurity,inode_listsecurity(inode,buffer,buffer_size));
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#717: FILE: security/stacker.c:595:
+	RETURN_ERROR_IF_ANY_ERROR(inode_listsecurity,inode_listsecurity(inode,buffer,buffer_size));
 	                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#717: FILE: security/stacker.c:595:
+	RETURN_ERROR_IF_ANY_ERROR(inode_listsecurity,inode_listsecurity(inode,buffer,buffer_size));
 	                                                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#720: FILE: security/stacker.c:598:
+static int stacker_file_permission (struct file *file, int mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#722: FILE: security/stacker.c:600:
+	RETURN_ERROR_IF_ANY_ERROR(file_permission,file_permission(file,mask));
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#722: FILE: security/stacker.c:600:
+	RETURN_ERROR_IF_ANY_ERROR(file_permission,file_permission(file,mask));
 	                                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#725: FILE: security/stacker.c:603:
+static int stacker_file_alloc_security (struct file *file)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#727: FILE: security/stacker.c:605:
+	RETURN_ERROR_IF_ANY_ERROR(file_alloc_security,file_alloc_security(file));
 	                                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#730: FILE: security/stacker.c:608:
+static void stacker_file_free_security (struct file *file)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#732: FILE: security/stacker.c:610:
+	CALL_ALL(file_free_security,file_free_security(file));
 	                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#735: FILE: security/stacker.c:613:
+static int stacker_file_ioctl (struct file *file, unsigned int command,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: security/stacker.c:614:
+static int stacker_file_ioctl (struct file *file, unsigned int command,
+			     unsigned long arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#738: FILE: security/stacker.c:616:
+	RETURN_ERROR_IF_ANY_ERROR(file_ioctl,file_ioctl(file,command,arg));
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#738: FILE: security/stacker.c:616:
+	RETURN_ERROR_IF_ANY_ERROR(file_ioctl,file_ioctl(file,command,arg));
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#738: FILE: security/stacker.c:616:
+	RETURN_ERROR_IF_ANY_ERROR(file_ioctl,file_ioctl(file,command,arg));
 	                                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#741: FILE: security/stacker.c:619:
+static int stacker_file_mmap (struct file *file, unsigned long prot,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: security/stacker.c:620:
+static int stacker_file_mmap (struct file *file, unsigned long prot,
+			    unsigned long flags)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#744: FILE: security/stacker.c:622:
+	RETURN_ERROR_IF_ANY_ERROR(file_mmap,file_mmap(file, prot, flags));
 	                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: security/stacker.c:625:
+static int stacker_file_mprotect (struct vm_area_struct *vma,

ERROR:CODE_INDENT: code indent should use tabs where possible
#748: FILE: security/stacker.c:626:
+^I       ^Iunsigned long prot)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#748: FILE: security/stacker.c:626:
+^I       ^Iunsigned long prot)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: security/stacker.c:626:
+static int stacker_file_mprotect (struct vm_area_struct *vma,
+	       	unsigned long prot)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#750: FILE: security/stacker.c:628:
+	RETURN_ERROR_IF_ANY_ERROR(file_mprotect,file_mprotect(vma,prot));
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#750: FILE: security/stacker.c:628:
+	RETURN_ERROR_IF_ANY_ERROR(file_mprotect,file_mprotect(vma,prot));
 	                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#753: FILE: security/stacker.c:631:
+static int stacker_file_lock (struct file *file, unsigned int cmd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#755: FILE: security/stacker.c:633:
+	RETURN_ERROR_IF_ANY_ERROR(file_lock,file_lock(file,cmd));
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#755: FILE: security/stacker.c:633:
+	RETURN_ERROR_IF_ANY_ERROR(file_lock,file_lock(file,cmd));
 	                                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#758: FILE: security/stacker.c:636:
+static int stacker_file_fcntl (struct file *file, unsigned int cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#759: FILE: security/stacker.c:637:
+static int stacker_file_fcntl (struct file *file, unsigned int cmd,
+			     unsigned long arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#761: FILE: security/stacker.c:639:
+	RETURN_ERROR_IF_ANY_ERROR(file_fcntl,file_fcntl(file,cmd,arg));
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#761: FILE: security/stacker.c:639:
+	RETURN_ERROR_IF_ANY_ERROR(file_fcntl,file_fcntl(file,cmd,arg));
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#761: FILE: security/stacker.c:639:
+	RETURN_ERROR_IF_ANY_ERROR(file_fcntl,file_fcntl(file,cmd,arg));
 	                                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#766: FILE: security/stacker.c:644:
+static int stacker_file_set_fowner (struct file *file)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#768: FILE: security/stacker.c:646:
+	RETURN_ERROR_IF_ANY_ERROR(file_set_fowner,file_set_fowner(file));
 	                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#771: FILE: security/stacker.c:649:
+static int stacker_file_send_sigiotask (struct task_struct *tsk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#772: FILE: security/stacker.c:650:
+static int stacker_file_send_sigiotask (struct task_struct *tsk,
+				      struct fown_struct *fown,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#775: FILE: security/stacker.c:653:
+	RETURN_ERROR_IF_ANY_ERROR(file_send_sigiotask,file_send_sigiotask(tsk,fown,sig));
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#775: FILE: security/stacker.c:653:
+	RETURN_ERROR_IF_ANY_ERROR(file_send_sigiotask,file_send_sigiotask(tsk,fown,sig));
 	                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#775: FILE: security/stacker.c:653:
+	RETURN_ERROR_IF_ANY_ERROR(file_send_sigiotask,file_send_sigiotask(tsk,fown,sig));
 	                                                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#778: FILE: security/stacker.c:656:
+static int stacker_file_receive (struct file *file)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#780: FILE: security/stacker.c:658:
+	RETURN_ERROR_IF_ANY_ERROR(file_receive,file_receive(file));
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#783: FILE: security/stacker.c:661:
+static int stacker_task_create (unsigned long clone_flags)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#785: FILE: security/stacker.c:663:
+	RETURN_ERROR_IF_ANY_ERROR(task_create,task_create(clone_flags));
 	                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#788: FILE: security/stacker.c:666:
+static int stacker_task_alloc_security (struct task_struct *p)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#790: FILE: security/stacker.c:668:
+	RETURN_ERROR_IF_ANY_ERROR(task_alloc_security,task_alloc_security(p));
 	                                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#793: FILE: security/stacker.c:671:
+static void stacker_task_free_security (struct task_struct *p)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#795: FILE: security/stacker.c:673:
+	CALL_ALL(task_free_security,task_free_security(p));
 	                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#798: FILE: security/stacker.c:676:
+static int stacker_task_setuid (uid_t id0, uid_t id1, uid_t id2, int

ERROR:SPACING: space required after that ',' (ctx:VxV)
#801: FILE: security/stacker.c:678:
+	RETURN_ERROR_IF_ANY_ERROR(task_setuid,task_setuid(id0,id1,id2,flags));
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#801: FILE: security/stacker.c:678:
+	RETURN_ERROR_IF_ANY_ERROR(task_setuid,task_setuid(id0,id1,id2,flags));
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#801: FILE: security/stacker.c:678:
+	RETURN_ERROR_IF_ANY_ERROR(task_setuid,task_setuid(id0,id1,id2,flags));
 	                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#801: FILE: security/stacker.c:678:
+	RETURN_ERROR_IF_ANY_ERROR(task_setuid,task_setuid(id0,id1,id2,flags));
 	                                                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#804: FILE: security/stacker.c:681:
+static int stacker_task_post_setuid (uid_t id0, uid_t id1, uid_t id2,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: security/stacker.c:682:
+static int stacker_task_post_setuid (uid_t id0, uid_t id1, uid_t id2,
+{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: security/stacker.c:683:
+	RETURN_ERROR_IF_ANY_ERROR(task_post_setuid,task_post_setuid(id0,id1,id2,flags));
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: security/stacker.c:683:
+	RETURN_ERROR_IF_ANY_ERROR(task_post_setuid,task_post_setuid(id0,id1,id2,flags));
 	                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: security/stacker.c:683:
+	RETURN_ERROR_IF_ANY_ERROR(task_post_setuid,task_post_setuid(id0,id1,id2,flags));
 	                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#807: FILE: security/stacker.c:683:
+	RETURN_ERROR_IF_ANY_ERROR(task_post_setuid,task_post_setuid(id0,id1,id2,flags));
 	                                                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#810: FILE: security/stacker.c:686:
+static int stacker_task_setgid (gid_t id0, gid_t id1, gid_t id2, int

ERROR:SPACING: space required after that ',' (ctx:VxV)
#813: FILE: security/stacker.c:688:
+	RETURN_ERROR_IF_ANY_ERROR(task_setgid,task_setgid(id0,id1,id2,flags));
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#813: FILE: security/stacker.c:688:
+	RETURN_ERROR_IF_ANY_ERROR(task_setgid,task_setgid(id0,id1,id2,flags));
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#813: FILE: security/stacker.c:688:
+	RETURN_ERROR_IF_ANY_ERROR(task_setgid,task_setgid(id0,id1,id2,flags));
 	                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#813: FILE: security/stacker.c:688:
+	RETURN_ERROR_IF_ANY_ERROR(task_setgid,task_setgid(id0,id1,id2,flags));
 	                                                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#816: FILE: security/stacker.c:691:
+static int stacker_task_setpgid (struct task_struct *p, pid_t pgid)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#818: FILE: security/stacker.c:693:
+	RETURN_ERROR_IF_ANY_ERROR(task_setpgid,task_setpgid(p,pgid));
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#818: FILE: security/stacker.c:693:
+	RETURN_ERROR_IF_ANY_ERROR(task_setpgid,task_setpgid(p,pgid));
 	                                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#821: FILE: security/stacker.c:696:
+static int stacker_task_getpgid (struct task_struct *p)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#823: FILE: security/stacker.c:698:
+	RETURN_ERROR_IF_ANY_ERROR(task_getpgid,task_getpgid(p));
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#826: FILE: security/stacker.c:701:
+static int stacker_task_getsid (struct task_struct *p)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#828: FILE: security/stacker.c:703:
+	RETURN_ERROR_IF_ANY_ERROR(task_getsid,task_getsid(p));
 	                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#831: FILE: security/stacker.c:706:
+static int stacker_task_setgroups (struct group_info *group_info)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#833: FILE: security/stacker.c:708:
+	RETURN_ERROR_IF_ANY_ERROR(task_setgroups,task_setgroups(group_info));
 	                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#836: FILE: security/stacker.c:711:
+static int stacker_task_setnice (struct task_struct *p, int nice)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#838: FILE: security/stacker.c:713:
+	RETURN_ERROR_IF_ANY_ERROR(task_setnice,task_setnice(p,nice));
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#838: FILE: security/stacker.c:713:
+	RETURN_ERROR_IF_ANY_ERROR(task_setnice,task_setnice(p,nice));
 	                                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#841: FILE: security/stacker.c:716:
+static int stacker_task_setrlimit (unsigned int resource, struct rlimit

ERROR:SPACING: space required after that ',' (ctx:VxV)
#844: FILE: security/stacker.c:718:
+	RETURN_ERROR_IF_ANY_ERROR(task_setrlimit,task_setrlimit(resource,new_rlim));
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#844: FILE: security/stacker.c:718:
+	RETURN_ERROR_IF_ANY_ERROR(task_setrlimit,task_setrlimit(resource,new_rlim));
 	                                                                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#847: FILE: security/stacker.c:721:
+static int stacker_task_setscheduler (struct task_struct *p, int

ERROR:SPACING: space required after that ',' (ctx:VxV)
#851: FILE: security/stacker.c:724:
+	RETURN_ERROR_IF_ANY_ERROR(task_setscheduler,task_setscheduler(p,policy,lp));
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#851: FILE: security/stacker.c:724:
+	RETURN_ERROR_IF_ANY_ERROR(task_setscheduler,task_setscheduler(p,policy,lp));
 	                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#851: FILE: security/stacker.c:724:
+	RETURN_ERROR_IF_ANY_ERROR(task_setscheduler,task_setscheduler(p,policy,lp));
 	                                                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#854: FILE: security/stacker.c:727:
+static int stacker_task_getscheduler (struct task_struct *p)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#856: FILE: security/stacker.c:729:
+	RETURN_ERROR_IF_ANY_ERROR(task_getscheduler,task_getscheduler(p));
 	                                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#859: FILE: security/stacker.c:732:
+static int stacker_task_wait (struct task_struct *p)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#861: FILE: security/stacker.c:734:
+	RETURN_ERROR_IF_ANY_ERROR(task_wait,task_wait(p));
 	                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#864: FILE: security/stacker.c:737:
+static int stacker_task_kill (struct task_struct *p, struct siginfo

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: security/stacker.c:740:
+	RETURN_ERROR_IF_ANY_ERROR(task_kill,task_kill(p,info,sig));
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: security/stacker.c:740:
+	RETURN_ERROR_IF_ANY_ERROR(task_kill,task_kill(p,info,sig));
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: security/stacker.c:740:
+	RETURN_ERROR_IF_ANY_ERROR(task_kill,task_kill(p,info,sig));
 	                                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#871: FILE: security/stacker.c:743:
+static int stacker_task_prctl (int option, unsigned long arg2, unsigned

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: security/stacker.c:746:
+	RETURN_ERROR_IF_ANY_ERROR(task_prctl,task_prctl(option,arg2,arg3,arg4,arg5));
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: security/stacker.c:746:
+	RETURN_ERROR_IF_ANY_ERROR(task_prctl,task_prctl(option,arg2,arg3,arg4,arg5));
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: security/stacker.c:746:
+	RETURN_ERROR_IF_ANY_ERROR(task_prctl,task_prctl(option,arg2,arg3,arg4,arg5));
 	                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: security/stacker.c:746:
+	RETURN_ERROR_IF_ANY_ERROR(task_prctl,task_prctl(option,arg2,arg3,arg4,arg5));
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: security/stacker.c:746:
+	RETURN_ERROR_IF_ANY_ERROR(task_prctl,task_prctl(option,arg2,arg3,arg4,arg5));
 	                                                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#878: FILE: security/stacker.c:749:
+static void stacker_task_reparent_to_init (struct task_struct *p)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#881: FILE: security/stacker.c:752:
+	 *	p->euid = p->fsuid = 0; */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#883: FILE: security/stacker.c:754:
+	CALL_ALL(task_reparent_to_init,task_reparent_to_init(p));
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#889: FILE: security/stacker.c:759:
+	CALL_ALL(task_to_inode,task_to_inode(p, inode));
 	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#893: FILE: security/stacker.c:763:
+static int stacker_socket_create (int family, int type, int protocol,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#895: FILE: security/stacker.c:764:
+static int stacker_socket_create (int family, int type, int protocol,
+{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#896: FILE: security/stacker.c:765:
+	RETURN_ERROR_IF_ANY_ERROR(socket_create,socket_create(family,type,protocol,kern));
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#896: FILE: security/stacker.c:765:
+	RETURN_ERROR_IF_ANY_ERROR(socket_create,socket_create(family,type,protocol,kern));
 	                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#896: FILE: security/stacker.c:765:
+	RETURN_ERROR_IF_ANY_ERROR(socket_create,socket_create(family,type,protocol,kern));
 	                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#896: FILE: security/stacker.c:765:
+	RETURN_ERROR_IF_ANY_ERROR(socket_create,socket_create(family,type,protocol,kern));
 	                                                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#899: FILE: security/stacker.c:768:
+static void stacker_socket_post_create (struct socket *sock, int

ERROR:CODE_INDENT: code indent should use tabs where possible
#901: FILE: security/stacker.c:769:
+^I       ^I^I^Iint type, int protocol, int kern)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#901: FILE: security/stacker.c:769:
+^I       ^I^I^Iint type, int protocol, int kern)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: security/stacker.c:771:
+	CALL_ALL(socket_post_create,socket_post_create(sock,family,type,protocol,kern));
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: security/stacker.c:771:
+	CALL_ALL(socket_post_create,socket_post_create(sock,family,type,protocol,kern));
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: security/stacker.c:771:
+	CALL_ALL(socket_post_create,socket_post_create(sock,family,type,protocol,kern));
 	                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: security/stacker.c:771:
+	CALL_ALL(socket_post_create,socket_post_create(sock,family,type,protocol,kern));
 	                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: security/stacker.c:771:
+	CALL_ALL(socket_post_create,socket_post_create(sock,family,type,protocol,kern));
 	                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: security/stacker.c:777:
+	RETURN_ERROR_IF_ANY_ERROR(socket_bind,socket_bind(sock,address,addrlen));
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: security/stacker.c:777:
+	RETURN_ERROR_IF_ANY_ERROR(socket_bind,socket_bind(sock,address,addrlen));
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: security/stacker.c:777:
+	RETURN_ERROR_IF_ANY_ERROR(socket_bind,socket_bind(sock,address,addrlen));
 	                                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#913: FILE: security/stacker.c:780:
+static int stacker_socket_connect (struct socket *sock,

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: security/stacker.c:781:
+^I       ^Istruct sockaddr *address, int addrlen)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#914: FILE: security/stacker.c:781:
+^I       ^Istruct sockaddr *address, int addrlen)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#914: FILE: security/stacker.c:781:
+static int stacker_socket_connect (struct socket *sock,
+	       	struct sockaddr *address, int addrlen)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#916: FILE: security/stacker.c:783:
+	RETURN_ERROR_IF_ANY_ERROR(socket_connect,socket_connect(sock,address,addrlen));
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#916: FILE: security/stacker.c:783:
+	RETURN_ERROR_IF_ANY_ERROR(socket_connect,socket_connect(sock,address,addrlen));
 	                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#916: FILE: security/stacker.c:783:
+	RETURN_ERROR_IF_ANY_ERROR(socket_connect,socket_connect(sock,address,addrlen));
 	                                                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#919: FILE: security/stacker.c:786:
+static int stacker_socket_listen (struct socket *sock, int backlog)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#921: FILE: security/stacker.c:788:
+	RETURN_ERROR_IF_ANY_ERROR(socket_listen,socket_listen(sock,backlog));
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#921: FILE: security/stacker.c:788:
+	RETURN_ERROR_IF_ANY_ERROR(socket_listen,socket_listen(sock,backlog));
 	                                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#924: FILE: security/stacker.c:791:
+static int stacker_socket_accept (struct socket *sock, struct socket

ERROR:SPACING: space required after that ',' (ctx:VxV)
#927: FILE: security/stacker.c:793:
+	RETURN_ERROR_IF_ANY_ERROR(socket_accept,socket_accept(sock,newsock));
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#927: FILE: security/stacker.c:793:
+	RETURN_ERROR_IF_ANY_ERROR(socket_accept,socket_accept(sock,newsock));
 	                                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: security/stacker.c:796:
+static void stacker_socket_post_accept (struct socket *sock, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: security/stacker.c:796:
+static void stacker_socket_post_accept (struct socket *sock, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#931: FILE: security/stacker.c:797:
+static void stacker_socket_post_accept (struct socket *sock, 
+				      struct socket *newsock)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#933: FILE: security/stacker.c:799:
+	CALL_ALL(socket_post_accept,socket_post_accept(sock,newsock));
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#933: FILE: security/stacker.c:799:
+	CALL_ALL(socket_post_accept,socket_post_accept(sock,newsock));
 	                                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#936: FILE: security/stacker.c:802:
+static int stacker_socket_sendmsg (struct socket *sock, struct msghdr

ERROR:SPACING: space required after that ',' (ctx:VxV)
#940: FILE: security/stacker.c:805:
+	RETURN_ERROR_IF_ANY_ERROR(socket_sendmsg,socket_sendmsg(sock,msg,size));
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#940: FILE: security/stacker.c:805:
+	RETURN_ERROR_IF_ANY_ERROR(socket_sendmsg,socket_sendmsg(sock,msg,size));
 	                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#940: FILE: security/stacker.c:805:
+	RETURN_ERROR_IF_ANY_ERROR(socket_sendmsg,socket_sendmsg(sock,msg,size));
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#947: FILE: security/stacker.c:811:
+	RETURN_ERROR_IF_ANY_ERROR(socket_recvmsg,socket_recvmsg(sock,msg,size,flags));
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#947: FILE: security/stacker.c:811:
+	RETURN_ERROR_IF_ANY_ERROR(socket_recvmsg,socket_recvmsg(sock,msg,size,flags));
 	                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#947: FILE: security/stacker.c:811:
+	RETURN_ERROR_IF_ANY_ERROR(socket_recvmsg,socket_recvmsg(sock,msg,size,flags));
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#947: FILE: security/stacker.c:811:
+	RETURN_ERROR_IF_ANY_ERROR(socket_recvmsg,socket_recvmsg(sock,msg,size,flags));
 	                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#952: FILE: security/stacker.c:816:
+	RETURN_ERROR_IF_ANY_ERROR(socket_getsockname,socket_getsockname(sock));
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: security/stacker.c:821:
+	RETURN_ERROR_IF_ANY_ERROR(socket_getpeername,socket_getpeername(sock));
 	                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#960: FILE: security/stacker.c:824:
+static int stacker_socket_setsockopt (struct socket *sock, int level,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#962: FILE: security/stacker.c:825:
+static int stacker_socket_setsockopt (struct socket *sock, int level,
+{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#963: FILE: security/stacker.c:826:
+	RETURN_ERROR_IF_ANY_ERROR(socket_setsockopt,socket_setsockopt(sock,level,optname));
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#963: FILE: security/stacker.c:826:
+	RETURN_ERROR_IF_ANY_ERROR(socket_setsockopt,socket_setsockopt(sock,level,optname));
 	                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#963: FILE: security/stacker.c:826:
+	RETURN_ERROR_IF_ANY_ERROR(socket_setsockopt,socket_setsockopt(sock,level,optname));
 	                                                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#966: FILE: security/stacker.c:829:
+static int stacker_socket_getsockopt (struct socket *sock, int level,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#968: FILE: security/stacker.c:830:
+static int stacker_socket_getsockopt (struct socket *sock, int level,
+{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#969: FILE: security/stacker.c:831:
+	RETURN_ERROR_IF_ANY_ERROR(socket_getsockopt,socket_getsockopt(sock,level,optname));
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#969: FILE: security/stacker.c:831:
+	RETURN_ERROR_IF_ANY_ERROR(socket_getsockopt,socket_getsockopt(sock,level,optname));
 	                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#969: FILE: security/stacker.c:831:
+	RETURN_ERROR_IF_ANY_ERROR(socket_getsockopt,socket_getsockopt(sock,level,optname));
 	                                                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#972: FILE: security/stacker.c:834:
+static int stacker_socket_shutdown (struct socket *sock, int how)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#974: FILE: security/stacker.c:836:
+	RETURN_ERROR_IF_ANY_ERROR(socket_shutdown,socket_shutdown(sock,how));
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#974: FILE: security/stacker.c:836:
+	RETURN_ERROR_IF_ANY_ERROR(socket_shutdown,socket_shutdown(sock,how));
 	                                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#977: FILE: security/stacker.c:839:
+static int stacker_socket_sock_rcv_skb (struct sock *sk, struct sk_buff

ERROR:SPACING: space required after that ',' (ctx:VxV)
#980: FILE: security/stacker.c:841:
+	RETURN_ERROR_IF_ANY_ERROR(socket_sock_rcv_skb,socket_sock_rcv_skb(sk,skb));
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#980: FILE: security/stacker.c:841:
+	RETURN_ERROR_IF_ANY_ERROR(socket_sock_rcv_skb,socket_sock_rcv_skb(sk,skb));
 	                                                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#983: FILE: security/stacker.c:844:
+static int stacker_unix_stream_connect (struct socket *sock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#984: FILE: security/stacker.c:845:
+static int stacker_unix_stream_connect (struct socket *sock,
+			     struct socket *other, struct sock *newsk)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: security/stacker.c:847:
+	RETURN_ERROR_IF_ANY_ERROR(unix_stream_connect,unix_stream_connect(sock,other,newsk));
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: security/stacker.c:847:
+	RETURN_ERROR_IF_ANY_ERROR(unix_stream_connect,unix_stream_connect(sock,other,newsk));
 	                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: security/stacker.c:847:
+	RETURN_ERROR_IF_ANY_ERROR(unix_stream_connect,unix_stream_connect(sock,other,newsk));
 	                                                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#990: FILE: security/stacker.c:851:
+static int stacker_unix_may_send (struct socket *sock,
+				       struct socket *other)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#992: FILE: security/stacker.c:853:
+	RETURN_ERROR_IF_ANY_ERROR(unix_may_send,unix_may_send(sock,other));
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#992: FILE: security/stacker.c:853:
+	RETURN_ERROR_IF_ANY_ERROR(unix_may_send,unix_may_send(sock,other));
 	                                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#996: FILE: security/stacker.c:857:
+static int stacker_socket_getpeersec(struct socket *sock,
+	char __user *optval, int __user *optlen, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#996: FILE: security/stacker.c:857:
+	char __user *optval, int __user *optlen, unsigned len)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#998: FILE: security/stacker.c:859:
+	RETURN_ERROR_IF_ANY_ERROR(socket_getpeersec,socket_getpeersec(sock,optval,optlen,len));
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#998: FILE: security/stacker.c:859:
+	RETURN_ERROR_IF_ANY_ERROR(socket_getpeersec,socket_getpeersec(sock,optval,optlen,len));
 	                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#998: FILE: security/stacker.c:859:
+	RETURN_ERROR_IF_ANY_ERROR(socket_getpeersec,socket_getpeersec(sock,optval,optlen,len));
 	                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#998: FILE: security/stacker.c:859:
+	RETURN_ERROR_IF_ANY_ERROR(socket_getpeersec,socket_getpeersec(sock,optval,optlen,len));
 	                                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1002: FILE: security/stacker.c:863:
+static int stacker_sk_alloc_security(struct sock *sk, int family,
+			int priority)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1004: FILE: security/stacker.c:865:
+	RETURN_ERROR_IF_ANY_ERROR(sk_alloc_security,sk_alloc_security(sk,family,priority));
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1004: FILE: security/stacker.c:865:
+	RETURN_ERROR_IF_ANY_ERROR(sk_alloc_security,sk_alloc_security(sk,family,priority));
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1004: FILE: security/stacker.c:865:
+	RETURN_ERROR_IF_ANY_ERROR(sk_alloc_security,sk_alloc_security(sk,family,priority));
 	                                                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1007: FILE: security/stacker.c:868:
+static void stacker_sk_free_security (struct sock *sk)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1009: FILE: security/stacker.c:870:
+	CALL_ALL(sk_free_security,sk_free_security(sk));
 	                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1014: FILE: security/stacker.c:875:
+static int stacker_ipc_permission (struct kern_ipc_perm *ipcp, short

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1017: FILE: security/stacker.c:877:
+	RETURN_ERROR_IF_ANY_ERROR(ipc_permission,ipc_permission(ipcp,flag));
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1017: FILE: security/stacker.c:877:
+	RETURN_ERROR_IF_ANY_ERROR(ipc_permission,ipc_permission(ipcp,flag));
 	                                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1020: FILE: security/stacker.c:880:
+static int stacker_msg_msg_alloc_security (struct msg_msg *msg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1022: FILE: security/stacker.c:882:
+	RETURN_ERROR_IF_ANY_ERROR(msg_msg_alloc_security,msg_msg_alloc_security(msg));
 	                                                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1025: FILE: security/stacker.c:885:
+static void stacker_msg_msg_free_security (struct msg_msg *msg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1027: FILE: security/stacker.c:887:
+	CALL_ALL(msg_msg_free_security,msg_msg_free_security(msg));
 	                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1030: FILE: security/stacker.c:890:
+static int stacker_msg_queue_alloc_security (struct msg_queue *msq)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1032: FILE: security/stacker.c:892:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_alloc_security,msg_queue_alloc_security(msq));
 	                                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1035: FILE: security/stacker.c:895:
+static void stacker_msg_queue_free_security (struct msg_queue *msq)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1037: FILE: security/stacker.c:897:
+	CALL_ALL(msg_queue_free_security,msg_queue_free_security(msq));
 	                                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1040: FILE: security/stacker.c:900:
+static int stacker_msg_queue_associate (struct msg_queue *msq, int

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1043: FILE: security/stacker.c:902:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_associate,msg_queue_associate(msq,msqflg));
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1043: FILE: security/stacker.c:902:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_associate,msg_queue_associate(msq,msqflg));
 	                                                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1046: FILE: security/stacker.c:905:
+static int stacker_msg_queue_msgctl (struct msg_queue *msq, int cmd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1048: FILE: security/stacker.c:907:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgctl,msg_queue_msgctl(msq,cmd));
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1048: FILE: security/stacker.c:907:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgctl,msg_queue_msgctl(msq,cmd));
 	                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1055: FILE: security/stacker.c:913:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgsnd,msg_queue_msgsnd(msq,msg,msgflg));
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1055: FILE: security/stacker.c:913:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgsnd,msg_queue_msgsnd(msq,msg,msgflg));
 	                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1055: FILE: security/stacker.c:913:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgsnd,msg_queue_msgsnd(msq,msg,msgflg));
 	                                                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1058: FILE: security/stacker.c:916:
+static int stacker_msg_queue_msgrcv (struct msg_queue *msq, struct

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: security/stacker.c:920:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgrcv,msg_queue_msgrcv(msq,msg,target,type,mode));
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: security/stacker.c:920:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgrcv,msg_queue_msgrcv(msq,msg,target,type,mode));
 	                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: security/stacker.c:920:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgrcv,msg_queue_msgrcv(msq,msg,target,type,mode));
 	                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: security/stacker.c:920:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgrcv,msg_queue_msgrcv(msq,msg,target,type,mode));
 	                                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: security/stacker.c:920:
+	RETURN_ERROR_IF_ANY_ERROR(msg_queue_msgrcv,msg_queue_msgrcv(msq,msg,target,type,mode));
 	                                                                               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1066: FILE: security/stacker.c:923:
+static int stacker_shm_alloc_security (struct shmid_kernel *shp)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1068: FILE: security/stacker.c:925:
+	RETURN_ERROR_IF_ANY_ERROR(shm_alloc_security,shm_alloc_security(shp));
 	                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1071: FILE: security/stacker.c:928:
+static void stacker_shm_free_security (struct shmid_kernel *shp)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1073: FILE: security/stacker.c:930:
+	CALL_ALL(shm_free_security,shm_free_security(shp));
 	                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1076: FILE: security/stacker.c:933:
+static int stacker_shm_associate (struct shmid_kernel *shp, int shmflg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1078: FILE: security/stacker.c:935:
+	RETURN_ERROR_IF_ANY_ERROR(shm_associate,shm_associate(shp,shmflg));
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1078: FILE: security/stacker.c:935:
+	RETURN_ERROR_IF_ANY_ERROR(shm_associate,shm_associate(shp,shmflg));
 	                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1081: FILE: security/stacker.c:938:
+static int stacker_shm_shmctl (struct shmid_kernel *shp, int cmd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1083: FILE: security/stacker.c:940:
+	RETURN_ERROR_IF_ANY_ERROR(shm_shmctl,shm_shmctl(shp,cmd));
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1083: FILE: security/stacker.c:940:
+	RETURN_ERROR_IF_ANY_ERROR(shm_shmctl,shm_shmctl(shp,cmd));
 	                                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1086: FILE: security/stacker.c:943:
+static int stacker_shm_shmat (struct shmid_kernel *shp, char *shmaddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1087: FILE: security/stacker.c:944:
+static int stacker_shm_shmat (struct shmid_kernel *shp, char *shmaddr,
+			    int shmflg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1089: FILE: security/stacker.c:946:
+	RETURN_ERROR_IF_ANY_ERROR(shm_shmat,shm_shmat(shp,shmaddr,shmflg));
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1089: FILE: security/stacker.c:946:
+	RETURN_ERROR_IF_ANY_ERROR(shm_shmat,shm_shmat(shp,shmaddr,shmflg));
 	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1089: FILE: security/stacker.c:946:
+	RETURN_ERROR_IF_ANY_ERROR(shm_shmat,shm_shmat(shp,shmaddr,shmflg));
 	                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1092: FILE: security/stacker.c:949:
+static int stacker_sem_alloc_security (struct sem_array *sma)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1094: FILE: security/stacker.c:951:
+	RETURN_ERROR_IF_ANY_ERROR(sem_alloc_security,sem_alloc_security(sma));
 	                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1097: FILE: security/stacker.c:954:
+static void stacker_sem_free_security (struct sem_array *sma)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1099: FILE: security/stacker.c:956:
+	CALL_ALL(sem_free_security,sem_free_security(sma));
 	                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1102: FILE: security/stacker.c:959:
+static int stacker_sem_associate (struct sem_array *sma, int semflg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1104: FILE: security/stacker.c:961:
+	RETURN_ERROR_IF_ANY_ERROR(sem_associate,sem_associate(sma,semflg));
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1104: FILE: security/stacker.c:961:
+	RETURN_ERROR_IF_ANY_ERROR(sem_associate,sem_associate(sma,semflg));
 	                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1107: FILE: security/stacker.c:964:
+static int stacker_sem_semctl (struct sem_array *sma, int cmd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1109: FILE: security/stacker.c:966:
+	RETURN_ERROR_IF_ANY_ERROR(sem_semctl,sem_semctl(sma,cmd));
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1109: FILE: security/stacker.c:966:
+	RETURN_ERROR_IF_ANY_ERROR(sem_semctl,sem_semctl(sma,cmd));
 	                                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1112: FILE: security/stacker.c:969:
+static int stacker_sem_semop (struct sem_array *sma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1113: FILE: security/stacker.c:970:
+static int stacker_sem_semop (struct sem_array *sma,
+			    struct sembuf *sops, unsigned nsops, int alter)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1113: FILE: security/stacker.c:970:
+			    struct sembuf *sops, unsigned nsops, int alter)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1115: FILE: security/stacker.c:972:
+	RETURN_ERROR_IF_ANY_ERROR(sem_semop,sem_semop(sma,sops,nsops,alter));
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1115: FILE: security/stacker.c:972:
+	RETURN_ERROR_IF_ANY_ERROR(sem_semop,sem_semop(sma,sops,nsops,alter));
 	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1115: FILE: security/stacker.c:972:
+	RETURN_ERROR_IF_ANY_ERROR(sem_semop,sem_semop(sma,sops,nsops,alter));
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1115: FILE: security/stacker.c:972:
+	RETURN_ERROR_IF_ANY_ERROR(sem_semop,sem_semop(sma,sops,nsops,alter));
 	                                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1118: FILE: security/stacker.c:975:
+static void stacker_d_instantiate (struct dentry *dentry, struct inode

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1121: FILE: security/stacker.c:977:
+	CALL_ALL(d_instantiate,d_instantiate(dentry,inode));
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1121: FILE: security/stacker.c:977:
+	CALL_ALL(d_instantiate,d_instantiate(dentry,inode));
 	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1127: FILE: security/stacker.c:982:
+stacker_getprocattr(struct task_struct *p, char *name, void *value,
+{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1132: FILE: security/stacker.c:987:
+	for (m=stacked_modules; m && ret<size; m = m->next) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1132: FILE: security/stacker.c:987:
+	for (m=stacked_modules; m && ret<size; m = m->next) {
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1134: FILE: security/stacker.c:989:
+			if (m->namelen+2+ret >= size)
 			              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1134: FILE: security/stacker.c:989:
+			if (m->namelen+2+ret >= size)
 			                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1136: FILE: security/stacker.c:991:
+			ret += sprintf(value+ret, "%s:", m->module_name);
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1137: FILE: security/stacker.c:992:
+			ret += m->module_operations.getprocattr(p,name,
 			                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1138: FILE: security/stacker.c:993:
+				value+ret, size-ret);
 				     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1138: FILE: security/stacker.c:993:
+				value+ret, size-ret);
 				               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1139: FILE: security/stacker.c:994:
+			if (ret+1<size)
 			       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1139: FILE: security/stacker.c:994:
+			if (ret+1<size)
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1140: FILE: security/stacker.c:995:
+				((char *)value)[ret++]='\n';
 				                      ^

WARNING:TYPO_SPELLING: 'couln't' may be misspelled - perhaps 'couldn't'?
#1157: FILE: security/stacker.c:1011:
+		printk(KERN_INFO "%s: couln't find module name end\n",
 		                      ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1157: FILE: security/stacker.c:1011:
+		printk(KERN_INFO "%s: couln't find module name end\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1158: FILE: security/stacker.c:1012:
+		printk(KERN_INFO "%s: couln't find module name end\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1158: FILE: security/stacker.c:1012:
+			__FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1161: FILE: security/stacker.c:1015:
+	m = find_lsm_module_by_name(s,e);
 	                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1165: FILE: security/stacker.c:1019:
+		printk(KERN_INFO "%s: Bad module name, %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1166: FILE: security/stacker.c:1020:
+		printk(KERN_INFO "%s: Bad module name, %s\n",
+			__FUNCTION__, modname);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1166: FILE: security/stacker.c:1020:
+			__FUNCTION__, modname);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1169: FILE: security/stacker.c:1023:
+	s = e+1;
 	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1170: FILE: security/stacker.c:1024:
+	while ((void *)s < value+size && *s == ' ')
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1172: FILE: security/stacker.c:1026:
+	if (s == value+size) {
 	              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1173: FILE: security/stacker.c:1027:
+		printk(KERN_INFO "%s: no data after module name\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1173: FILE: security/stacker.c:1027:
+		printk(KERN_INFO "%s: no data after module name\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1177: FILE: security/stacker.c:1031:
+	printk(KERN_INFO "%s: sending to module\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1177: FILE: security/stacker.c:1031:
+	printk(KERN_INFO "%s: sending to module\n", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1178: FILE: security/stacker.c:1032:
+	ret = m->module_operations.setprocattr(p,name,s,len);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1178: FILE: security/stacker.c:1032:
+	ret = m->module_operations.setprocattr(p,name,s,len);
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1178: FILE: security/stacker.c:1032:
+	ret = m->module_operations.setprocattr(p,name,s,len);
 	                                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1179: FILE: security/stacker.c:1033:
+	printk(KERN_INFO "%s: ret was %d, returning %d\n", __FUNCTION__, ret,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1179: FILE: security/stacker.c:1033:
+	printk(KERN_INFO "%s: ret was %d, returning %d\n", __FUNCTION__, ret,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1181: FILE: security/stacker.c:1034:
+	printk(KERN_INFO "%s: ret was %d, returning %d\n", __FUNCTION__, ret,
+	if (ret < 0)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1183: FILE: security/stacker.c:1036:
+	return ret + (size-len);
 	                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1186: FILE: security/stacker.c:1039:
+static int stacker_register (const char *name, struct

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1190: FILE: security/stacker.c:1042:
+	/* This function is the primary reason for the stacker module.
+	   Add the stacked module (as specified by name and ops)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1191: FILE: security/stacker.c:1043:
+	   according to the current ordering policy. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1201: FILE: security/stacker.c:1053:
+		printk(KERN_INFO "%s: module stacking is forbidding.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1202: FILE: security/stacker.c:1054:
+		printk(KERN_INFO "%s: module stacking is forbidding.\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1202: FILE: security/stacker.c:1054:
+			__FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1207: FILE: security/stacker.c:1059:
+	/* TODO: What should I check on re: security?  Should I check
+	   for euid == 0? Has that already been checked?   (dwheeler)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1219: FILE: security/stacker.c:1071:
+	new_module_name = kmalloc(namelen+1, GFP_KERNEL);
 	                                 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_module_entry)...) over kmalloc(sizeof(struct module_entry)...)
#1220: FILE: security/stacker.c:1072:
+	new_module_entry = kmalloc(sizeof(struct module_entry), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1223: FILE: security/stacker.c:1075:
+		printk (KERN_INFO

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1223: FILE: security/stacker.c:1075:
+		printk (KERN_INFO

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1225: FILE: security/stacker.c:1077:
+			__FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1237: FILE: security/stacker.c:1089:
+	memcpy(&new_module_entry->module_operations, ops,
+			sizeof(struct security_operations));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1245: FILE: security/stacker.c:1097:
+	 * inactive list is valid before releasing the locking. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1248: FILE: security/stacker.c:1100:
+	printk(KERN_INFO "%s: registered %s module\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1248: FILE: security/stacker.c:1100:
+	printk(KERN_INFO "%s: registered %s module\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1249: FILE: security/stacker.c:1101:
+	printk(KERN_INFO "%s: registered %s module\n", __FUNCTION__,
+		new_module_entry->module_name);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1250: FILE: security/stacker.c:1102:
+	return num_stacked_modules-1;
 	                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: security/stacker.c:1105:
+/* $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1257: FILE: security/stacker.c:1109:
+static int stacker_unregister (const char *name, struct

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1260: FILE: security/stacker.c:1111:
+	struct module_entry *m, *b=NULL, *bb=NULL;
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1260: FILE: security/stacker.c:1111:
+	struct module_entry *m, *b=NULL, *bb=NULL;
 	                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1267: FILE: security/stacker.c:1118:
+		if (m->namelen == len && strncmp(m->module_name, name, len)==0)
 		                                                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1274: FILE: security/stacker.c:1125:
+		printk(KERN_INFO "%s: could not find module %s.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1275: FILE: security/stacker.c:1126:
+		printk(KERN_INFO "%s: could not find module %s.\n",
+			__FUNCTION__, name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1275: FILE: security/stacker.c:1126:
+			__FUNCTION__, name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1299: FILE: security/stacker.c:1150:
+
+

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1300: FILE: security/stacker.c:1151:
+#if 1

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1314: FILE: security/stacker.c:1165:
+^I.bprm_alloc_security ^I=^Istacker_bprm_alloc_security,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1315: FILE: security/stacker.c:1166:
+^I.bprm_free_security ^I=^Istacker_bprm_free_security,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1316: FILE: security/stacker.c:1167:
+^I.bprm_apply_creds ^I=^Istacker_bprm_apply_creds,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1317: FILE: security/stacker.c:1168:
+^I.bprm_set_security ^I^I=^Istacker_bprm_set_security,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1318: FILE: security/stacker.c:1169:
+^I.bprm_check_security ^I=^Istacker_bprm_check_security,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1321: FILE: security/stacker.c:1172:
+^I.sb_alloc_security ^I^I=^Istacker_sb_alloc_security,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1322: FILE: security/stacker.c:1173:
+^I.sb_free_security ^I^I=^Istacker_sb_free_security,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1358: FILE: security/stacker.c:1209:
+^I.inode_getattr ^I ^I^I = stacker_inode_getattr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1359: FILE: security/stacker.c:1210:
+^I.inode_delete ^I^I^I = stacker_inode_delete,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1360: FILE: security/stacker.c:1211:
+^I.inode_setxattr ^I^I = stacker_inode_setxattr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1361: FILE: security/stacker.c:1212:
+^I.inode_post_setxattr ^I = stacker_inode_post_setxattr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1362: FILE: security/stacker.c:1213:
+^I.inode_getxattr ^I^I = stacker_inode_getxattr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1363: FILE: security/stacker.c:1214:
+^I.inode_listxattr ^I^I = stacker_inode_listxattr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1364: FILE: security/stacker.c:1215:
+^I.inode_removexattr ^I^I = stacker_inode_removexattr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1401: FILE: security/stacker.c:1252:
+^I.ipc_permission ^I^I= stacker_ipc_permission,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1423: FILE: security/stacker.c:1274:
+^I.netlink_send ^I^I^I= stacker_netlink_send,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1424: FILE: security/stacker.c:1275:
+^I.netlink_recv ^I^I^I= stacker_netlink_recv,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1430: FILE: security/stacker.c:1281:
+  ^I.getprocattr^I^I^I = stacker_getprocattr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1430: FILE: security/stacker.c:1281:
+  ^I.getprocattr^I^I^I = stacker_getprocattr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1430: FILE: security/stacker.c:1281:
+  ^I.getprocattr^I^I^I = stacker_getprocattr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1431: FILE: security/stacker.c:1282:
+  ^I.setprocattr^I^I^I = stacker_setprocattr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1431: FILE: security/stacker.c:1282:
+  ^I.setprocattr^I^I^I = stacker_setprocattr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: security/stacker.c:1282:
+  ^I.setprocattr^I^I^I = stacker_setprocattr,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1452: FILE: security/stacker.c:1303:
+^I.sk_alloc_security = ^I^Istacker_sk_alloc_security,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1463: FILE: security/stacker.c:1314:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stacker_kobj *' should also have an identifier name
#1476: FILE: security/stacker.c:1327:
+	ssize_t (*show)(struct stacker_kobj *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1476: FILE: security/stacker.c:1327:
+	ssize_t (*show)(struct stacker_kobj *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stacker_kobj *' should also have an identifier name
#1477: FILE: security/stacker.c:1328:
+	ssize_t (*store)(struct stacker_kobj *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1477: FILE: security/stacker.c:1328:
+	ssize_t (*store)(struct stacker_kobj *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1477: FILE: security/stacker.c:1328:
+	ssize_t (*store)(struct stacker_kobj *, const char *, size_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1483: FILE: security/stacker.c:1334:
+void unregister_sysfs_files(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1486: FILE: security/stacker.c:1337:
+ssize_t stacker_attr_store(struct kobject *kobj,
+		struct attribute *attr, const char *buf, size_t len)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1492: FILE: security/stacker.c:1343:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1497: FILE: security/stacker.c:1348:
+static ssize_t stacker_attr_show(struct kobject *kobj,
+		struct attribute *attr, char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1503: FILE: security/stacker.c:1354:
+^I$

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1507: FILE: security/stacker.c:1358:
+struct sysfs_ops stacker_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1519: FILE: security/stacker.c:1370:
+static ssize_t lockdown_read (struct stacker_kobj *obj, char *buff)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1531: FILE: security/stacker.c:1382:
+static ssize_t lockdown_write (struct stacker_kobj *obj, const char

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1534: FILE: security/stacker.c:1384:
+	if (count>0)
 	         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1541: FILE: security/stacker.c:1391:
+	.attr = {.name = "lockdown", .mode = S_IFREG | S_IRUGO | S_IWUSR},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1547: FILE: security/stacker.c:1397:
+static ssize_t listmodules_read (struct stacker_kobj *obj, char *buff)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1554: FILE: security/stacker.c:1404:
+		len += snprintf(buff+len, PAGE_SIZE - len, "%s\n", m->module_name);
 		                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1560: FILE: security/stacker.c:1410:
+static ssize_t listmodules_write (struct stacker_kobj *obj, const char

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1567: FILE: security/stacker.c:1416:
+	.attr = {.name = "list_modules", .mode = S_IFREG | S_IRUGO | S_IWUSR},

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1573: FILE: security/stacker.c:1422:
+static ssize_t stop_responding_read (struct stacker_kobj *obj, char

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1583: FILE: security/stacker.c:1431:
+static ssize_t stop_responding_write (struct stacker_kobj *obj, const

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1586: FILE: security/stacker.c:1433:
+	if (count>0) {
 	         ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1586: FILE: security/stacker.c:1433:
+	if (count>0) {
+		unregister_sysfs_files();
+	}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1594: FILE: security/stacker.c:1441:
+	.attr = {.name = "stop_responding", .mode = S_IFREG | S_IRUGO |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1601: FILE: security/stacker.c:1447:
+static ssize_t shortcircuit_restrictive_read (struct stacker_kobj *obj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1603: FILE: security/stacker.c:1448:
+static ssize_t shortcircuit_restrictive_read (struct stacker_kobj *obj,
+{

CHECK:CAMELCASE: Avoid CamelCase: <Restrictive>
#1610: FILE: security/stacker.c:1454:
+		len = sprintf(buff, "Restrictive hooks are not being

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1616: FILE: security/stacker.c:1459:
+static ssize_t shortcircuit_restrictive_write (struct stacker_kobj

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1619: FILE: security/stacker.c:1461:
+	if (count==0)
 	         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1628: FILE: security/stacker.c:1470:
+	.attr = {.name = "shortcircuit_restrictive", .mode = S_IFREG | S_IRUGO

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1635: FILE: security/stacker.c:1476:
+static ssize_t shortcircuit_capable_read (struct stacker_kobj *obj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1637: FILE: security/stacker.c:1477:
+static ssize_t shortcircuit_capable_read (struct stacker_kobj *obj,
+{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1648: FILE: security/stacker.c:1488:
+static ssize_t shortcircuit_capable_write (struct stacker_kobj *obj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1650: FILE: security/stacker.c:1489:
+static ssize_t shortcircuit_capable_write (struct stacker_kobj *obj,
+{

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1651: FILE: security/stacker.c:1490:
+	if (count==0)
 	         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1660: FILE: security/stacker.c:1499:
+	.attr = {.name = "shortcircuit_capable", .mode = S_IFREG | S_IRUGO |

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1689: FILE: security/stacker.c:1527:
+		printk(KERN_NOTICE "Error (%d) registering stacker sysfssubsystem\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1690: FILE: security/stacker.c:1528:
+		printk(KERN_NOTICE "Error (%d) registering stacker sysfssubsystem\n",
+				result);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1694: FILE: security/stacker.c:1532:
+^Isysfs_create_file(&stacker_subsys.kset.kobj, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1695: FILE: security/stacker.c:1533:
+	sysfs_create_file(&stacker_subsys.kset.kobj, 
+			&stacker_attr_lockdown.attr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1696: FILE: security/stacker.c:1534:
+^Isysfs_create_file(&stacker_subsys.kset.kobj, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1697: FILE: security/stacker.c:1535:
+	sysfs_create_file(&stacker_subsys.kset.kobj, 
+			&stacker_attr_listmodules.attr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1698: FILE: security/stacker.c:1536:
+^Isysfs_create_file(&stacker_subsys.kset.kobj, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1699: FILE: security/stacker.c:1537:
+	sysfs_create_file(&stacker_subsys.kset.kobj, 
+			&stacker_attr_stop_responding.attr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1700: FILE: security/stacker.c:1538:
+^Isysfs_create_file(&stacker_subsys.kset.kobj, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1701: FILE: security/stacker.c:1539:
+	sysfs_create_file(&stacker_subsys.kset.kobj, 
+			&stacker_attr_shortcircuit_restr.attr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1702: FILE: security/stacker.c:1540:
+^Isysfs_create_file(&stacker_subsys.kset.kobj, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1703: FILE: security/stacker.c:1541:
+	sysfs_create_file(&stacker_subsys.kset.kobj, 
+			&stacker_attr_shortcircuit_cap.attr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1705: FILE: security/stacker.c:1543:
+	printk(KERN_NOTICE "sysfs files registered\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1711: FILE: security/stacker.c:1549:
+/* $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1722: FILE: security/stacker.c:1560:
+static int __init stacker_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1734: FILE: security/stacker.c:1572:
+	if (register_security (&stacker_ops)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&stacker_ops'
#1734: FILE: security/stacker.c:1572:
+	if (register_security (&stacker_ops)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1739: FILE: security/stacker.c:1577:
+		printk (KERN_INFO "Failure registering stacker module "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1739: FILE: security/stacker.c:1577:
+		printk (KERN_INFO "Failure registering stacker module "

WARNING:SPLIT_STRING: quoted string split across lines
#1740: FILE: security/stacker.c:1578:
+		printk (KERN_INFO "Failure registering stacker module "
+			"with primary security module.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1743: FILE: security/stacker.c:1581:
+	printk(KERN_INFO "Stacker LSM initialized\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1748: FILE: security/stacker.c:1586:
+static void __exit stacker_exit (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1756: FILE: security/stacker.c:1594:
+	if (unregister_security (&stacker_ops)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&stacker_ops'
#1756: FILE: security/stacker.c:1594:
+	if (unregister_security (&stacker_ops)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1757: FILE: security/stacker.c:1595:
+		printk (KERN_INFO

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1757: FILE: security/stacker.c:1595:
+		printk (KERN_INFO

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1762: FILE: security/stacker.c:1600:
+security_initcall (stacker_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1763: FILE: security/stacker.c:1601:
+module_exit (stacker_exit);

CHECK:CAMELCASE: Avoid CamelCase: <David>
#1767: FILE: security/stacker.c:1604:
+MODULE_AUTHOR("David A. Wheeler, Serge Hallyn");

CHECK:CAMELCASE: Avoid CamelCase: <Wheeler>
#1767: FILE: security/stacker.c:1604:
+MODULE_AUTHOR("David A. Wheeler, Serge Hallyn");

CHECK:CAMELCASE: Avoid CamelCase: <Serge>
#1767: FILE: security/stacker.c:1604:
+MODULE_AUTHOR("David A. Wheeler, Serge Hallyn");

CHECK:CAMELCASE: Avoid CamelCase: <Hallyn>
#1767: FILE: security/stacker.c:1604:
+MODULE_AUTHOR("David A. Wheeler, Serge Hallyn");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1776: FILE: security/stacker.h:1:
+#ifndef __STACKER_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1799: FILE: security/stacker.h:23:
+ * it's one less allocation and one less pointer to follow. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000233706.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 298 errors, 240 warnings, 100 checks, 1749 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000233706.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
