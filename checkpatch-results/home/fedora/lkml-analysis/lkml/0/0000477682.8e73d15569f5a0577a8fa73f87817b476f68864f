WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
    Make sure all reiserfs_find_entry users correctly understand IO_ERROR retval.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#33: FILE: fs/reiserfs/namei.c:343:
+    struct inode * inode = NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#33: FILE: fs/reiserfs/namei.c:343:
+    struct inode * inode = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: fs/reiserfs/namei.c:361:
+    if ( retval == IO_ERROR ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#41: FILE: fs/reiserfs/namei.c:361:
+    if ( retval == IO_ERROR ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#41: FILE: fs/reiserfs/namei.c:361:
+    if ( retval == IO_ERROR ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#41: FILE: fs/reiserfs/namei.c:361:
+    if ( retval == IO_ERROR ) {
+	return ERR_PTR(-EIO);
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: fs/reiserfs/namei.c:363:
+    }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#51: FILE: fs/reiserfs/namei.c:449:
+	if ( retval == IO_ERROR ) {
+	    return -EIO;

ERROR:SPACING: space prohibited after that open parenthesis '('
#51: FILE: fs/reiserfs/namei.c:449:
+	if ( retval == IO_ERROR ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#51: FILE: fs/reiserfs/namei.c:449:
+	if ( retval == IO_ERROR ) {

WARNING:TABSTOP: Statements should start on a tabstop
#52: FILE: fs/reiserfs/namei.c:450:
+	    return -EIO;

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#63: FILE: fs/reiserfs/namei.c:725:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: fs/reiserfs/namei.c:725:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#63: FILE: fs/reiserfs/namei.c:725:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#63: FILE: fs/reiserfs/namei.c:725:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#63: FILE: fs/reiserfs/namei.c:725:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/reiserfs/namei.c:728:
+    } else if ( retval == IO_ERROR) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#66: FILE: fs/reiserfs/namei.c:728:
+    } else if ( retval == IO_ERROR) {

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#79: FILE: fs/reiserfs/namei.c:814:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/reiserfs/namei.c:814:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: fs/reiserfs/namei.c:814:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#79: FILE: fs/reiserfs/namei.c:814:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#79: FILE: fs/reiserfs/namei.c:814:
+    if ( (retval = reiserfs_find_entry (dir, dentry->d_name.name, dentry->d_name.len, &path, &de)) == NAME_NOT_FOUND) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/reiserfs/namei.c:817:
+    } else if (retval == IO_ERROR) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: fs/reiserfs/namei.c:1082:
+    if (retval == IO_ERROR)$

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#104: FILE: fs/reiserfs/namei.c:1157:
+	// reiserfs_add_entry should not return IO_ERROR, because it is called with essentially same parameters from

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: fs/reiserfs/namei.c:1158:
+        // reiserfs_add_entry above, and we'll catch any i/o errors before we get here.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477682.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 17 warnings, 0 checks, 74 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477682.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
