WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#31: FILE: drivers/pci/pcie/aer/aerdrv_core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#51: FILE: drivers/pci/pcie/aer/aerdrv_core.c:21:
+static int aer_init_flag = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: drivers/pci/pcie/aer/aerdrv_core.c:29:
+ * to calling. ^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#59: FILE: drivers/pci/pcie/aer/aerdrv_core.c:29:
+ * to calling. ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: drivers/pci/pcie/aer/aerdrv_core.c:43:
+^I^I^IAER_DEVICE_FUNC(dev->requestor_id)); $

WARNING:SPLIT_STRING: quoted string split across lines
#78: FILE: drivers/pci/pcie/aer/aerdrv_core.c:48:
+			p += sprintf(p, "    COR_ERR %d, NONFATAL_ERR %d,"
+				" FATAL_ERR %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: drivers/pci/pcie/aer/aerdrv_core.c:49:
+^I^I^I^Idev->correctables, $

CHECK:BRACES: Unbalanced braces around else statement
#82: FILE: drivers/pci/pcie/aer/aerdrv_core.c:52:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: drivers/pci/pcie/aer/aerdrv_core.c:54:
+^I^I^I^Idev->correctables, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/pci/pcie/aer/aerdrv_core.c:59:
+^I^I^I"%d/%d/%d %d:%d:%d - %s\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#89: FILE: drivers/pci/pcie/aer/aerdrv_core.c:59:
+			p += sprintf(p, "    Last Error Detected @ "
+			"%d/%d/%d %d:%d:%d - %s\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: drivers/pci/pcie/aer/aerdrv_core.c:60:
+^I^I^Idev->time_stamp.month, dev->time_stamp.day, $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->handle"
#96: FILE: drivers/pci/pcie/aer/aerdrv_core.c:66:
+			(dev->handle != NULL) ? "Yes" : "No");

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/pci/pcie/aer/aerdrv_core.c:67:
+^I^Iif (PCIE_PORT(dev->attribute.type)) $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#101: FILE: drivers/pci/pcie/aer/aerdrv_core.c:71:
+	return p-page;
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: drivers/pci/pcie/aer/aerdrv_core.c:81:
+ * Root Port devices in Root Complex, no semaphore access lock is $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#114: FILE: drivers/pci/pcie/aer/aerdrv_core.c:84:
+static struct aer_rpc* search_node(unsigned short requestor_id)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '||' (ctx:VxE)
#125: FILE: drivers/pci/pcie/aer/aerdrv_core.c:95:
+			if ((bus >= tmp->secondary && bus <= tmp->subordinate)||
 			                                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: drivers/pci/pcie/aer/aerdrv_core.c:96:
+			if ((bus >= tmp->secondary && bus <= tmp->subordinate)||
+				tmp->self_id == requestor_id) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: drivers/pci/pcie/aer/aerdrv_core.c:98:
+^I^I^I^Ibreak;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: drivers/pci/pcie/aer/aerdrv_core.c:103:
+^Ireturn rpc; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/pci/pcie/aer/aerdrv_core.c:113:
+ * calling. ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: drivers/pci/pcie/aer/aerdrv_core.c:113:
+ * calling. ^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#145: FILE: drivers/pci/pcie/aer/aerdrv_core.c:115:
+static struct aer_device* search_direct_parent(struct list_head *head, u16 id)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: drivers/pci/pcie/aer/aerdrv_core.c:120:
+^Iif (list_empty(head)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: drivers/pci/pcie/aer/aerdrv_core.c:128:
+^I^Iif (!PCIE_PORT(dev->attribute.type)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/pci/pcie/aer/aerdrv_core.c:131:
+^I^Isecondary = dev->attribute.p2p.bus.secondary;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/pci/pcie/aer/aerdrv_core.c:132:
+^I^Isubordinate = dev->attribute.p2p.bus.subordinate;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/pci/pcie/aer/aerdrv_core.c:135:
+^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#166: FILE: drivers/pci/pcie/aer/aerdrv_core.c:136:
+		if (!(parent = search_direct_parent(&dev->children, id)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: drivers/pci/pcie/aer/aerdrv_core.c:149:
+ * Caller must acquire Root semaphore "rpc_sema" prior to calling. ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: drivers/pci/pcie/aer/aerdrv_core.c:149:
+ * Caller must acquire Root semaphore "rpc_sema" prior to calling. ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/pci/pcie/aer/aerdrv_core.c:158:
+^I^Iif (PCIE_PORT(dev->attribute.type)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: drivers/pci/pcie/aer/aerdrv_core.c:160:
+^I^Itail = tail->next;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: drivers/pci/pcie/aer/aerdrv_core.c:169:
+ * @id: an aer device ID to be searched $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#203: FILE: drivers/pci/pcie/aer/aerdrv_core.c:173:
+static struct aer_device* search_source_device(struct aer_rpc *rpc, u16 id)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: drivers/pci/pcie/aer/aerdrv_core.c:178:
+^Iif (list_empty(list)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/pci/pcie/aer/aerdrv_core.c:180:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: drivers/pci/pcie/aer/aerdrv_core.c:182:
+^Idown(&rpc->rpc_sema);^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#213: FILE: drivers/pci/pcie/aer/aerdrv_core.c:183:
+	if ((parent = search_direct_parent(list, id)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: drivers/pci/pcie/aer/aerdrv_core.c:188:
+^I^Iif (device->requestor_id != id) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: drivers/pci/pcie/aer/aerdrv_core.c:190:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/pci/pcie/aer/aerdrv_core.c:192:
+^I^Iup(&rpc->rpc_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: drivers/pci/pcie/aer/aerdrv_core.c:195:
+^Iup(&rpc->rpc_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: drivers/pci/pcie/aer/aerdrv_core.c:197:
+^Ireturn NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: drivers/pci/pcie/aer/aerdrv_core.c:199:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: drivers/pci/pcie/aer/aerdrv_core.c:208:
+ * prior to calling. ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#238: FILE: drivers/pci/pcie/aer/aerdrv_core.c:208:
+ * prior to calling. ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: drivers/pci/pcie/aer/aerdrv_core.c:210:
+static void reorganize_dependents(struct aer_device *parent, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/pci/pcie/aer/aerdrv_core.c:211:
+static void reorganize_dependents(struct aer_device *parent, 
+				struct aer_device *sw)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: drivers/pci/pcie/aer/aerdrv_core.c:222:
+^I^Iif (bus >= sw->attribute.p2p.bus.secondary && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/pci/pcie/aer/aerdrv_core.c:223:
+		if (bus >= sw->attribute.p2p.bus.secondary && 
+			bus <= sw->attribute.p2p.bus.subordinate) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/pci/pcie/aer/aerdrv_core.c:226:
+^I^I^Ilist_add_tail(&dev->node, &sw->children);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: drivers/pci/pcie/aer/aerdrv_core.c:229:
+}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: drivers/pci/pcie/aer/aerdrv_core.c:232:
+ * aer_device_detach - remove AER device from its associated Root Port list $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: drivers/pci/pcie/aer/aerdrv_core.c:246:
+^Idown(&rpc->rpc_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: drivers/pci/pcie/aer/aerdrv_core.c:251:
+^I^Itail = tail->next;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/pci/pcie/aer/aerdrv_core.c:254:
+^I^Ilist_add_tail(&tmp->node, &device->parent->children);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: drivers/pci/pcie/aer/aerdrv_core.c:257:
+^Iup(&rpc->rpc_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/pci/pcie/aer/aerdrv_core.c:260:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/pci/pcie/aer/aerdrv_core.c:260:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/pci/pcie/aer/aerdrv_core.c:262:
+ * add_child_to_rootport - add AER device into its associated Root Port list $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: drivers/pci/pcie/aer/aerdrv_core.c:274:
+^Idown(&rpc->rpc_sema);^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#305: FILE: drivers/pci/pcie/aer/aerdrv_core.c:275:
+	if (PCIE_ROOT_PORT(child->attribute.type))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#307: FILE: drivers/pci/pcie/aer/aerdrv_core.c:277:
+	else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#308: FILE: drivers/pci/pcie/aer/aerdrv_core.c:278:
+		if (!(parent = search_direct_parent(head, child->requestor_id)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/pci/pcie/aer/aerdrv_core.c:279:
+			parent = container_of(head->next,struct aer_device,node);
 			                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/pci/pcie/aer/aerdrv_core.c:279:
+			parent = container_of(head->next,struct aer_device,node);
 			                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: drivers/pci/pcie/aer/aerdrv_core.c:280:
+^I^Iif (PCIE_SWITCH_PORT(child->attribute.type)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: drivers/pci/pcie/aer/aerdrv_core.c:281:
+^I^I^Ireorganize_dependents(parent, child);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: drivers/pci/pcie/aer/aerdrv_core.c:285:
+^Iup(&rpc->rpc_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: drivers/pci/pcie/aer/aerdrv_core.c:292:
+ * Invoked when a Switch port device, which supports a hot link reset, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: drivers/pci/pcie/aer/aerdrv_core.c:293:
+ * detects a fatal error. Notify all downstream drivers under this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/pci/pcie/aer/aerdrv_core.c:296:
+ * Caller must acquire Root semaphore "rpc_sema" prior to calling. ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#326: FILE: drivers/pci/pcie/aer/aerdrv_core.c:296:
+ * Caller must acquire Root semaphore "rpc_sema" prior to calling. ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: drivers/pci/pcie/aer/aerdrv_core.c:305:
+^I^Iif (PCIE_PORT(dev->attribute.type)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: drivers/pci/pcie/aer/aerdrv_core.c:319:
+ * Caller must acquire Root semaphore "rpc_sema" prior to calling. ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#349: FILE: drivers/pci/pcie/aer/aerdrv_core.c:319:
+ * Caller must acquire Root semaphore "rpc_sema" prior to calling. ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/pci/pcie/aer/aerdrv_core.c:328:
+^I^Iif (PCIE_PORT(dev->attribute.type)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: drivers/pci/pcie/aer/aerdrv_core.c:350:
+^Idown(&rpc->rpc_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: drivers/pci/pcie/aer/aerdrv_core.c:359:
+^Iup(&rpc->rpc_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: drivers/pci/pcie/aer/aerdrv_core.c:366:
+ * Invoked when an AER service driver registers its AER handle with $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#399: FILE: drivers/pci/pcie/aer/aerdrv_core.c:369:
+static struct aer_device* alloc_aer_device(unsigned short requestor_id)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: drivers/pci/pcie/aer/aerdrv_core.c:373:
+^Iif (!(device = (struct aer_device *)kmalloc(sizeof(struct aer_device), $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#403: FILE: drivers/pci/pcie/aer/aerdrv_core.c:373:
+	if (!(device = (struct aer_device *)kmalloc(sizeof(struct aer_device), 

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#403: FILE: drivers/pci/pcie/aer/aerdrv_core.c:373:
+	if (!(device = (struct aer_device *)kmalloc(sizeof(struct aer_device), 

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*device)...) over kmalloc(sizeof(struct aer_device)...)
#403: FILE: drivers/pci/pcie/aer/aerdrv_core.c:373:
+	if (!(device = (struct aer_device *)kmalloc(sizeof(struct aer_device), 

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: drivers/pci/pcie/aer/aerdrv_core.c:374:
+	if (!(device = (struct aer_device *)kmalloc(sizeof(struct aer_device), 
+						GFP_KERNEL)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: drivers/pci/pcie/aer/aerdrv_core.c:381:
+^Idevice->vendor = device->device = device->class_code = 0; $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#411: FILE: drivers/pci/pcie/aer/aerdrv_core.c:381:
+	device->vendor = device->device = device->class_code = 0; 

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: drivers/pci/pcie/aer/aerdrv_core.c:382:
+^Idevice->requestor_id = requestor_id;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/pci/pcie/aer/aerdrv_core.c:383:
+^Idevice->attribute.type = 0;^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#415: FILE: drivers/pci/pcie/aer/aerdrv_core.c:385:
+	device->correctables = device->nonfatals = device->fatals = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: drivers/pci/pcie/aer/aerdrv_core.c:404:
+^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: drivers/pci/pcie/aer/aerdrv_core.c:407:
+ ^I * into an event log queue.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: drivers/pci/pcie/aer/aerdrv_core.c:407:
+ ^I * into an event log queue.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/pci/pcie/aer/aerdrv_core.c:408:
+^I */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: drivers/pci/pcie/aer/aerdrv_core.c:411:
+^I/* Process error */^I^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#442: FILE: drivers/pci/pcie/aer/aerdrv_core.c:412:
+	*(unsigned short*)&device->flags = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#449: FILE: drivers/pci/pcie/aer/aerdrv_core.c:419:
+				printk(KERN_DEBUG "AER glitch on device[%04x]\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: drivers/pci/pcie/aer/aerdrv_core.c:420:
+^I^I^I^I^Idevice->requestor_id); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: drivers/pci/pcie/aer/aerdrv_core.c:420:
+				printk(KERN_DEBUG "AER glitch on device[%04x]\n",
+					device->requestor_id); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: drivers/pci/pcie/aer/aerdrv_core.c:423:
+^I^I^Iup(&device->d_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/pci/pcie/aer/aerdrv_core.c:427:
+^I^I^Iif (!device->handle->get_header(device->requestor_id, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/pci/pcie/aer/aerdrv_core.c:428:
+			if (!device->handle->get_header(device->requestor_id, 
+				&error, &device->tlp))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: drivers/pci/pcie/aer/aerdrv_core.c:429:
+^I^I^I^Idevice->flags.tlp = 1;^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#460: FILE: drivers/pci/pcie/aer/aerdrv_core.c:430:
+			if (error.type == AER_NONFATAL)
[...]
+			else if (error.type == AER_FATAL) {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: drivers/pci/pcie/aer/aerdrv_core.c:434:
+^I^I^I^Iif (PCIE_PORT(device->attribute.type) && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: drivers/pci/pcie/aer/aerdrv_core.c:435:
+^I^I^I^I^Idevice->handle->link_reset) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: drivers/pci/pcie/aer/aerdrv_core.c:435:
+				if (PCIE_PORT(device->attribute.type) && 
+					device->handle->link_reset) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: drivers/pci/pcie/aer/aerdrv_core.c:436:
+^I^I^I^I^Idevice->flags.reset = 1;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: drivers/pci/pcie/aer/aerdrv_core.c:440:
+^Iif (error.type == AER_CORRECTABLE) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: drivers/pci/pcie/aer/aerdrv_core.c:444:
+^Idevice->flags.multi = (multi) ? 1 : 0;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: drivers/pci/pcie/aer/aerdrv_core.c:455:
+^Idevice->time_stamp.year = rtc.tm_year; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/pci/pcie/aer/aerdrv_core.c:463:
+^Iif (device->flags.reset)^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#515: FILE: drivers/pci/pcie/aer/aerdrv_core.c:485:
+	pci_read_config_word(pdev, pos+PCIE_CAP_DEVICE_STATUS_REG_OFF, &reg16);
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#516: FILE: drivers/pci/pcie/aer/aerdrv_core.c:486:
+	pci_write_config_word(pdev, pos+PCIE_CAP_DEVICE_STATUS_REG_OFF, reg16);
 	                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#523: FILE: drivers/pci/pcie/aer/aerdrv_core.c:493:
+^I/* Clear error status */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: drivers/pci/pcie/aer/aerdrv_core.c:497:
+^I/* Init Correctable Masks */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: drivers/pci/pcie/aer/aerdrv_core.c:511:
+^I/* Enable Root Port's interrupt in response to error messages */ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: drivers/pci/pcie/aer/aerdrv_core.c:513:
+	pci_write_config_dword(pdev, ROOT_ERROR_COMMAND_REG,
+		ROOT_PORT_INTR_ON_MESG_ENABLED);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: drivers/pci/pcie/aer/aerdrv_core.c:514:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#546: FILE: drivers/pci/pcie/aer/aerdrv_core.c:516:
+	pci_read_config_word(pdev, pos+PCIE_CAP_DEVICE_CONTROL_REG_OFF, &reg16);
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#547: FILE: drivers/pci/pcie/aer/aerdrv_core.c:517:
+	pci_write_config_word(pdev, pos+PCIE_CAP_DEVICE_CONTROL_REG_OFF,
 	                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/pci/pcie/aer/aerdrv_core.c:518:
+	pci_write_config_word(pdev, pos+PCIE_CAP_DEVICE_CONTROL_REG_OFF,
+		reg16 | ROOT_ERR_REPORT_ENABLE_BITS);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: drivers/pci/pcie/aer/aerdrv_core.c:532:
+^I/* Disable Root's interrupt in response to error messages */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#571: FILE: drivers/pci/pcie/aer/aerdrv_core.c:541:
+ * Return: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: drivers/pci/pcie/aer/aerdrv_core.c:542:
+ *^IZero if success. Nonzero for otherwise.^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: drivers/pci/pcie/aer/aerdrv_core.c:556:
+^I^Iif (status == AE_SUPPORT) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: drivers/pci/pcie/aer/aerdrv_core.c:558:
+^I ^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#588: FILE: drivers/pci/pcie/aer/aerdrv_core.c:558:
+^I ^Ielse$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: drivers/pci/pcie/aer/aerdrv_core.c:560:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: drivers/pci/pcie/aer/aerdrv_core.c:566:
+ * aer_device_attach - attach AER device into its associated Root Port list $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#610: FILE: drivers/pci/pcie/aer/aerdrv_core.c:580:
+	if ((tmp = search_source_device(rpc, device->requestor_id))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: drivers/pci/pcie/aer/aerdrv_core.c:581:
+^I^Iif (!tmp->handle) {^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: drivers/pci/pcie/aer/aerdrv_core.c:582:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: drivers/pci/pcie/aer/aerdrv_core.c:584:
+^I^I^I * from old copy. Then remove old copy. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#615: FILE: drivers/pci/pcie/aer/aerdrv_core.c:585:
+ ^I^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#615: FILE: drivers/pci/pcie/aer/aerdrv_core.c:585:
+ ^I^I^I */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: drivers/pci/pcie/aer/aerdrv_core.c:589:
+			memcpy(&device->time_stamp, &tmp->time_stamp,
+				sizeof(struct aer_record_time_stamp));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: drivers/pci/pcie/aer/aerdrv_core.c:592:
+^I^I^Iup(&rpc->rpc_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: drivers/pci/pcie/aer/aerdrv_core.c:593:
+^I^I^Ikfree(tmp);^I^I$

CHECK:BRACES: Unbalanced braces around else statement
#624: FILE: drivers/pci/pcie/aer/aerdrv_core.c:594:
+		} else  /* Already has a registered handle */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: drivers/pci/pcie/aer/aerdrv_core.c:595:
+^I^I^Istatus = -EINVAL;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: drivers/pci/pcie/aer/aerdrv_core.c:596:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: drivers/pci/pcie/aer/aerdrv_core.c:598:
+^I^Iadd_child_to_rootport(rpc, device); $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#639: FILE: drivers/pci/pcie/aer/aerdrv_core.c:609:
+static struct err_source* get_e_source(struct aer_rpc *rpc)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: drivers/pci/pcie/aer/aerdrv_core.c:625:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#659: FILE: drivers/pci/pcie/aer/aerdrv_core.c:629:
+struct pci_dev* get_root_pci_dev(unsigned short requestor_id)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: drivers/pci/pcie/aer/aerdrv_core.c:642:
+ * Invoked, as DPC, when root port records new detected error $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#681: FILE: drivers/pci/pcie/aer/aerdrv_core.c:651:
+	if (!(e_source = get_e_source(rpc))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: drivers/pci/pcie/aer/aerdrv_core.c:652:
+^I^Iprintk(KERN_DEBUG "%s->DPC fails to get an error source\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#682: FILE: drivers/pci/pcie/aer/aerdrv_core.c:652:
+		printk(KERN_DEBUG "%s->DPC fails to get an error source\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#683: FILE: drivers/pci/pcie/aer/aerdrv_core.c:653:
+		printk(KERN_DEBUG "%s->DPC fails to get an error source\n", 
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#683: FILE: drivers/pci/pcie/aer/aerdrv_core.c:653:
+			__FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: drivers/pci/pcie/aer/aerdrv_core.c:658:
+^I^Iif (!(device = search_source_device(rpc, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#688: FILE: drivers/pci/pcie/aer/aerdrv_core.c:658:
+		if (!(device = search_source_device(rpc, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#689: FILE: drivers/pci/pcie/aer/aerdrv_core.c:659:
+		if (!(device = search_source_device(rpc, 
+			ERR_COR_ID(e_source->id)))) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#691: FILE: drivers/pci/pcie/aer/aerdrv_core.c:661:
+			if (!(device = alloc_aer_device(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#691: FILE: drivers/pci/pcie/aer/aerdrv_core.c:661:
+			if (!(device = alloc_aer_device(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: drivers/pci/pcie/aer/aerdrv_core.c:665:
+^I^I^Iadd_child_to_rootport(rpc, device); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: drivers/pci/pcie/aer/aerdrv_core.c:667:
+^I^Ihandle_error_source(device, AER_CORRECTABLE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/pci/pcie/aer/aerdrv_core.c:668:
+		handle_error_source(device, AER_CORRECTABLE, 
+			e_source->status & 0x2);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: drivers/pci/pcie/aer/aerdrv_core.c:671:
+^I^Iif (!(device = search_source_device(rpc, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#701: FILE: drivers/pci/pcie/aer/aerdrv_core.c:671:
+		if (!(device = search_source_device(rpc, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#702: FILE: drivers/pci/pcie/aer/aerdrv_core.c:672:
+		if (!(device = search_source_device(rpc, 
+			ERR_UNCOR_ID(e_source->id)))) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#704: FILE: drivers/pci/pcie/aer/aerdrv_core.c:674:
+			if (!(device = alloc_aer_device(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#704: FILE: drivers/pci/pcie/aer/aerdrv_core.c:674:
+			if (!(device = alloc_aer_device(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: drivers/pci/pcie/aer/aerdrv_core.c:678:
+^I^I^Iadd_child_to_rootport(rpc, device); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/pci/pcie/aer/aerdrv_core.c:681:
+		handle_error_source(device, AER_UNCORRECTABLE,
+			e_source->status & 0x8);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: drivers/pci/pcie/aer/aerdrv_core.c:708:
+void aer_delete_rootport(struct aer_rpc *rpc) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: drivers/pci/pcie/aer/aerdrv_core.c:717:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: drivers/pci/pcie/aer/aerdrv_core.c:720:
+^Ilist_del(&rpc->node);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#751: FILE: drivers/pci/pcie/aer/aerdrv_core.c:721:
+^Iup(&rpc->rpc_sema);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: drivers/pci/pcie/aer/aerdrv_core.c:727:
+ * @page: pointer to a buffer holding readable display format $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: drivers/pci/pcie/aer/aerdrv_core.c:736:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: drivers/pci/pcie/aer/aerdrv_core.c:740:
+^I^I^Ip += sprintf(p, "Root Port [%d.%d.%d] Device List:\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#772: FILE: drivers/pci/pcie/aer/aerdrv_core.c:742:
+^I^I^Idown(&rpc->rpc_sema);^I/* Must acquire Root sema */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: drivers/pci/pcie/aer/aerdrv_core.c:744:
+^I^I^Iup(&rpc->rpc_sema);^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#778: FILE: drivers/pci/pcie/aer/aerdrv_core.c:748:
+	return p-page;
 	        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: drivers/pci/pcie/aer/aerdrv_core.c:752:
+ * aer_set_verbose - set a verbose mode $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: drivers/pci/pcie/aer/aerdrv_core.c:758:
+^Iif (value & VERBOSE_MASK) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: drivers/pci/pcie/aer/aerdrv_core.c:763:
+ * aer_get_verbose - return a verbose mode $

ERROR:SPACING: space required after that ';' (ctx:VxV)
#797: FILE: drivers/pci/pcie/aer/aerdrv_core.c:767:
+int aer_get_verbose(void) {return verbose;}
                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: drivers/pci/pcie/aer/aerdrv_core.c:771:
+ * @page: pointer to a buffer holding readable display format $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#815: FILE: drivers/pci/pcie/aer/aerdrv_core.c:785:
+ * aer_set_auto_mode - set an auto consumption mode $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: drivers/pci/pcie/aer/aerdrv_core.c:786:
+ * @mode: zero for manual or nonzero automatic $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#822: FILE: drivers/pci/pcie/aer/aerdrv_core.c:792:
+	if ((auto_mode = mode))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: drivers/pci/pcie/aer/aerdrv_core.c:797:
+ * aer_get_auto_mode - return an auto consumption mode $

ERROR:SPACING: space required after that ';' (ctx:VxV)
#831: FILE: drivers/pci/pcie/aer/aerdrv_core.c:801:
+int aer_get_auto_mode(void) {return auto_mode;}
                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#834: FILE: drivers/pci/pcie/aer/aerdrv_core.c:804:
+ * aer_init - provide AER initialization $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: drivers/pci/pcie/aer/aerdrv_core.c:807:
+ * Invoked when AER service driver is loaded. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: drivers/pci/pcie/aer/aerdrv_core.c:817:
+^Iif (!(status = aer_osc_setup())) { $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#847: FILE: drivers/pci/pcie/aer/aerdrv_core.c:817:
+	if (!(status = aer_osc_setup())) { 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#849: FILE: drivers/pci/pcie/aer/aerdrv_core.c:819:
+		if (!(status = aer_sysfs_init(&drv->driver))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#850: FILE: drivers/pci/pcie/aer/aerdrv_core.c:820:
+			if ((status = aer_event_log_init()))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: drivers/pci/pcie/aer/aerdrv_core.c:831:
+ * aer_cleanup - provide a cleanup $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: drivers/pci/pcie/aer/aerdrv_core.c:834:
+ * Invoked when AER service driver is unloaded from Root Ports. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: drivers/pci/pcie/aer/aerdrv_core.c:848:
+ * pcie_aer_register - provide Root API for endpoint to register its AER $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#892: FILE: drivers/pci/pcie/aer/aerdrv_core.c:862:
+	if (!(dev && handle) || !(pos = pci_find_capability(dev,PCI_CAP_ID_EXP)))
 	                                                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#892: FILE: drivers/pci/pcie/aer/aerdrv_core.c:862:
+	if (!(dev && handle) || !(pos = pci_find_capability(dev,PCI_CAP_ID_EXP)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#895: FILE: drivers/pci/pcie/aer/aerdrv_core.c:865:
+^Irequestor_id = (dev->bus->number << 8) | dev->devfn;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#896: FILE: drivers/pci/pcie/aer/aerdrv_core.c:866:
+^Iif (!(rpc = search_node(requestor_id))) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#896: FILE: drivers/pci/pcie/aer/aerdrv_core.c:866:
+	if (!(rpc = search_node(requestor_id))) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: drivers/pci/pcie/aer/aerdrv_core.c:868:
+^I^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#899: FILE: drivers/pci/pcie/aer/aerdrv_core.c:869:
+	if (!(device = alloc_aer_device(requestor_id)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#915: FILE: drivers/pci/pcie/aer/aerdrv_core.c:885:
+	if ((status = aer_device_attach(rpc, device))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#916: FILE: drivers/pci/pcie/aer/aerdrv_core.c:886:
+		printk(KERN_DEBUG "Req. AER handle is already exist. Ignore!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: drivers/pci/pcie/aer/aerdrv_core.c:891:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: drivers/pci/pcie/aer/aerdrv_core.c:894:
+ * pcie_aer_unregister - provide Root API for endpoint to unregister its AER $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#934: FILE: drivers/pci/pcie/aer/aerdrv_core.c:904:
+	if ((rpc = search_node(requestor_id))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#935: FILE: drivers/pci/pcie/aer/aerdrv_core.c:905:
+		if ((device = search_source_device(rpc, requestor_id)))

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#940: FILE: drivers/pci/pcie/aer/aerdrv_core.c:910:
+EXPORT_SYMBOL(pcie_aer_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#941: FILE: drivers/pci/pcie/aer/aerdrv_core.c:911:
+EXPORT_SYMBOL(pcie_aer_unregister);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199757.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 162 errors, 20 warnings, 32 checks, 911 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199757.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
