WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: fs/super.c:1707:
+		memcpy (name, "/dev/", 5);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: fs/super.c:1713:
+	vfsmnt->mnt_devname = kmalloc(strlen(name)+1, GFP_KERNEL);
 	                                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#217: FILE: fs/super.c:1935:
+			printk("okay\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#247: FILE: fs/super.c:1970:
+}
+static struct file_operations rootfs_dir_operations = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#247: FILE: fs/super.c:1970:
+static struct file_operations rootfs_dir_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#248: FILE: fs/super.c:1971:
+	read:		generic_read_dir,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#249: FILE: fs/super.c:1972:
+	readdir:	dcache_readdir,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#249: FILE: fs/super.c:1972:
+	readdir:	dcache_readdir,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#251: FILE: fs/super.c:1974:
+};
+static struct inode_operations rootfs_dir_inode_operations = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#251: FILE: fs/super.c:1974:
+static struct inode_operations rootfs_dir_inode_operations = {

WARNING:INDENTED_LABEL: labels should not be indented
#252: FILE: fs/super.c:1975:
+	lookup:		rootfs_lookup,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#254: FILE: fs/super.c:1977:
+};
+static struct super_block *rootfs_read_super(struct super_block * sb, void * data, int silent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: fs/super.c:1977:
+static struct super_block *rootfs_read_super(struct super_block * sb, void * data, int silent)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: fs/super.c:1977:
+static struct super_block *rootfs_read_super(struct super_block * sb, void * data, int silent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: fs/super.c:1979:
+	struct inode * inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: fs/super.c:1980:
+	struct dentry * root;

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: fs/super.c:1982:
+	static struct super_operations s_ops = {};
+	sb->s_op = &s_ops;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#263: FILE: fs/super.c:1986:
+	inode->i_mode = S_IFDIR|0555;
 	                       ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#264: FILE: fs/super.c:1987:
+	inode->i_uid = inode->i_gid = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#269: FILE: fs/super.c:1992:
+		iput(inode);
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#275: FILE: fs/super.c:1998:
+}
+static DECLARE_FSTYPE(root_fs_type, "rootfs", rootfs_read_super, FS_NOMOUNT);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513537.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 9 warnings, 7 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513537.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
