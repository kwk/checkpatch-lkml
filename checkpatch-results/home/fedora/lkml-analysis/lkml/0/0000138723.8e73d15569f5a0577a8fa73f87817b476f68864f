WARNING:TYPO_SPELLING: 'underyling' may be misspelled - perhaps 'underlying'?
#30: 
from the underyling file when needed.
         ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
--- linux-2.6.14-rc5-mm1/fs/ecryptfs/file.c	1969-12-31 18:00:00.000000000 -0600

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: fs/ecryptfs/file.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#49: FILE: fs/ecryptfs/file.c:8:
+ *   ^I^IMichael C. Thompson <mcthomps@us.ibm.com>$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: fs/ecryptfs/file.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#63: FILE: fs/ecryptfs/file.c:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: fs/ecryptfs/file.c:40:
+ * ^I^I^I(0=beginning,1=cur pos,2=end of file)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#89: FILE: fs/ecryptfs/file.c:48:
+	struct file *lower_file = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; offset = [%lld] origin = [%d]",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#91: FILE: fs/ecryptfs/file.c:50:
+	if (NULL != FILE_TO_PRIVATE(file)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#91: FILE: fs/ecryptfs/file.c:50:
+	if (NULL != FILE_TO_PRIVATE(file)) {
+		lower_file = FILE_TO_LOWER(file);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: fs/ecryptfs/file.c:77:
+static ssize_t ecryptfs_read_update_atime(struct file *file, char __user * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: fs/ecryptfs/file.c:78:
+					  size_t count, loff_t * ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#122: FILE: fs/ecryptfs/file.c:81:
+	int err = 0;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: fs/ecryptfs/file.c:90:
+ecryptfs_read(struct file *file, char __user * buf, size_t count, loff_t * ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: fs/ecryptfs/file.c:90:
+ecryptfs_read(struct file *file, char __user * buf, size_t count, loff_t * ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: fs/ecryptfs/file.c:95:
+	loff_t pos = *ppos;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; file = [%p]\n", file);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#143: FILE: fs/ecryptfs/file.c:102:
+		 * or more */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around file->f_ra
#148: FILE: fs/ecryptfs/file.c:107:
+	memcpy(&(file->f_ra), &(lower_file->f_ra),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lower_file->f_ra
#148: FILE: fs/ecryptfs/file.c:107:
+	memcpy(&(file->f_ra), &(lower_file->f_ra),

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: fs/ecryptfs/file.c:119:
+static ssize_t ecryptfs_dir_write(struct file *file, const char __user * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#161: FILE: fs/ecryptfs/file.c:120:
+				  size_t count, loff_t * ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: fs/ecryptfs/file.c:127:
+	loff_t pos = *ppos;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; file = [%p]\n", file);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count != 0'
#175: FILE: fs/ecryptfs/file.c:134:
+	if ((file->f_flags & O_APPEND) && (count != 0))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#190: FILE: fs/ecryptfs/file.c:149:
+	 * f_pos field. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: fs/ecryptfs/file.c:179:
+	int decoded_length;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter w/ name = [%.*s]\n", namelen,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#228: FILE: fs/ecryptfs/file.c:187:
+	 * obfuscation, etc.) */

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: fs/ecryptfs/file.c:212:
+	struct ecryptfs_getdents_callback buf;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; file = [%p]\n", file);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#266: FILE: fs/ecryptfs/file.c:225:
+	if (buf.filldir_called && !buf.entries_written) {
+		goto retry;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: fs/ecryptfs/file.c:235:
+static unsigned int ecryptfs_poll(struct file *file, poll_table * wait)

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: fs/ecryptfs/file.c:239:
+	struct file *lower_file = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; file = [%p]\n", file);

WARNING:LINE_SPACING: Missing a blank line after declarations
#301: FILE: fs/ecryptfs/file.c:260:
+	u64 data_size;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter w/ lower_inode = [%p]; inode = "

WARNING:SPLIT_STRING: quoted string split across lines
#302: FILE: fs/ecryptfs/file.c:261:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter w/ lower_inode = [%p]; inode = "
+			"[%p]\n", lower_inode, inode);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#307: FILE: fs/ecryptfs/file.c:266:
+		ecryptfs_printk(0, KERN_ERR, "grab_cache_page for header page "
+				"failed\n");

CHECK:SPACING: No space is necessary after a cast
#317: FILE: fs/ecryptfs/file.c:276:
+	i_size_write(inode, (loff_t) data_size);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'speciying' may be misspelled - perhaps 'specifying'?
#333: FILE: fs/ecryptfs/file.c:292:
+ * @param inode	inode speciying file to open
                	      ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: fs/ecryptfs/file.c:306:
+	int lower_flags;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; i_ino = [%lu] inode = [%p] "

WARNING:SPLIT_STRING: quoted string split across lines
#348: FILE: fs/ecryptfs/file.c:307:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; i_ino = [%lu] inode = [%p] "
+			"inode->i_size = [%lld] inode->i_count = [%d] file->"

WARNING:SPLIT_STRING: quoted string split across lines
#349: FILE: fs/ecryptfs/file.c:308:
+			"inode->i_size = [%lld] inode->i_count = [%d] file->"
+			"f_dentry = [%p] file->f_dentry->d_name.name = [%s] "

WARNING:SPLIT_STRING: quoted string split across lines
#350: FILE: fs/ecryptfs/file.c:309:
+			"f_dentry = [%p] file->f_dentry->d_name.name = [%s] "
+			"file->f_dentry->d_name.len = [%d]\n", inode->i_ino,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#356: FILE: fs/ecryptfs/file.c:315:
+	 * ecryptfs_lookup() */

WARNING:SPLIT_STRING: quoted string split across lines
#402: FILE: fs/ecryptfs/file.c:361:
+	ecryptfs_printk(1, KERN_NOTICE, "(file->f_flags & O_CREAT) = [%d] "
+			"lower_inode->i_size = [%llu] crypt_stats->struct_"

WARNING:SPLIT_STRING: quoted string split across lines
#403: FILE: fs/ecryptfs/file.c:362:
+			"lower_inode->i_size = [%llu] crypt_stats->struct_"
+			"initialized = [%d] crypt_stats->key_valid = [%d]\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#403: FILE: fs/ecryptfs/file.c:362:
+			"lower_inode->i_size = [%llu] crypt_stats->struct_"
+			"initialized = [%d] crypt_stats->key_valid = [%d]\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#411: FILE: fs/ecryptfs/file.c:370:
+	 * So.... what do we want to do? */

WARNING:SPLIT_STRING: quoted string split across lines
#430: FILE: fs/ecryptfs/file.c:389:
+		ecryptfs_printk(1, KERN_NOTICE, "crypt_stats->struct_"
+				"initialized = [%d]; crypt_stats->key_valid = "

WARNING:MISSING_SPACE: break quoted strings at a space character
#430: FILE: fs/ecryptfs/file.c:389:
+		ecryptfs_printk(1, KERN_NOTICE, "crypt_stats->struct_"
+				"initialized = [%d]; crypt_stats->key_valid = "

WARNING:SPLIT_STRING: quoted string split across lines
#431: FILE: fs/ecryptfs/file.c:390:
+				"initialized = [%d]; crypt_stats->key_valid = "
+				"[%d]\n", crypt_stats->struct_initialized,

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: fs/ecryptfs/file.c:409:
+	struct file *lower_file = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; file = [%p]\n", file);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#452: FILE: fs/ecryptfs/file.c:411:
+	if (lower_file->f_op && lower_file->f_op->flush) {
+		rc = lower_file->f_op->flush(lower_file);
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#464: FILE: fs/ecryptfs/file.c:423:
+	struct inode *lower_inode;
+	ecryptfs_printk(1, KERN_NOTICE,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "FILE_TO_PRIVATE"
#467: FILE: fs/ecryptfs/file.c:426:
+	if (FILE_TO_PRIVATE(file) != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#485: FILE: fs/ecryptfs/file.c:444:
+	struct dentry *lower_dentry;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#486: FILE: fs/ecryptfs/file.c:445:
+	if (NULL == file) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#489: FILE: fs/ecryptfs/file.c:448:
+		if (lower_dentry->d_inode->i_fop
+		    && lower_dentry->d_inode->i_fop->fsync) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#497: FILE: fs/ecryptfs/file.c:456:
+		if (NULL == FILE_TO_PRIVATE(file)) {

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: fs/ecryptfs/file.c:459:
+			ecryptfs_printk(0, KERN_ERR, "FILE_TO_PRIVATE(file="
+					"[%p]) == NULL\n", file);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == F_SETLK'
#531: FILE: fs/ecryptfs/file.c:490:
+	if ((rc != -EAGAIN) || (cmd == F_SETLK)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#531: FILE: fs/ecryptfs/file.c:490:
+	if ((rc != -EAGAIN) || (cmd == F_SETLK)) {
+		goto out;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#535: FILE: fs/ecryptfs/file.c:494:
+	if (!rc) {
+		goto lock_file;
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#548: FILE: fs/ecryptfs/file.c:507:
+	struct file *lower_file = NULL;
+	if (FILE_TO_PRIVATE(file) != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "FILE_TO_PRIVATE"
#548: FILE: fs/ecryptfs/file.c:507:
+	if (FILE_TO_PRIVATE(file) != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lower_file"
#550: FILE: fs/ecryptfs/file.c:509:
+	ASSERT(lower_file != NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#554: FILE: fs/ecryptfs/file.c:513:
+	 * and shared. */

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXGRP' are not preferred. Consider using octal permissions '0010'.
#556: FILE: fs/ecryptfs/file.c:515:
+	    (lower_inode->i_mode & (S_ISGID | S_IXGRP)) == S_ISGID &&

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#561: FILE: fs/ecryptfs/file.c:520:
+	if (cmd == F_SETLKW) {
+		fl->fl_flags |= FL_SLEEP;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#582: FILE: fs/ecryptfs/file.c:541:
+	if (rc) {
+		goto out;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lower_file->f_op->lock"
#585: FILE: fs/ecryptfs/file.c:544:
+	if (lower_file->f_op && lower_file->f_op->lock != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#592: FILE: fs/ecryptfs/file.c:551:
+	if (rc) {
+		goto out;
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#611: FILE: fs/ecryptfs/file.c:570:
+	struct file_lock *tempfl = NULL;
+	if (file->f_op && file->f_op->lock) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#618: FILE: fs/ecryptfs/file.c:577:
+	if (!tempfl) {
[...]
+	} else {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#631: FILE: fs/ecryptfs/file.c:590:
+	struct file *lower_file = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#632: FILE: fs/ecryptfs/file.c:591:
+	if (NULL != FILE_TO_PRIVATE(file))

CHECK:BRACES: braces {} should be used on all arms of this statement
#632: FILE: fs/ecryptfs/file.c:591:
+	if (NULL != FILE_TO_PRIVATE(file))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#634: FILE: fs/ecryptfs/file.c:593:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#649: FILE: fs/ecryptfs/file.c:608:
+	struct file *lower_file = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "FILE_TO_PRIVATE"
#650: FILE: fs/ecryptfs/file.c:609:
+	if (FILE_TO_PRIVATE(file) != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lower_file"
#652: FILE: fs/ecryptfs/file.c:611:
+	ASSERT(lower_file != NULL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#678: FILE: fs/ecryptfs/file.c:637:
+static ssize_t ecryptfs_sendfile(struct file *file, loff_t * ppos,

WARNING:LINE_SPACING: Missing a blank line after declarations
#683: FILE: fs/ecryptfs/file.c:642:
+	int rc = -EINVAL;
+	if (FILE_TO_PRIVATE(file) != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "FILE_TO_PRIVATE"
#683: FILE: fs/ecryptfs/file.c:642:
+	if (FILE_TO_PRIVATE(file) != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lower_file"
#685: FILE: fs/ecryptfs/file.c:644:
+	ASSERT(lower_file != NULL);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#697: FILE: fs/ecryptfs/file.c:656:
+struct file_operations ecryptfs_dir_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#713: FILE: fs/ecryptfs/file.c:672:
+struct file_operations ecryptfs_main_fops = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#739: FILE: fs/ecryptfs/file.c:698:
+	struct file *lower_file = NULL;
+	if (FILE_TO_PRIVATE(file) != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#739: FILE: fs/ecryptfs/file.c:698:
+	if (FILE_TO_PRIVATE(file) != NULL) {
+		lower_file = FILE_TO_LOWER(file);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "FILE_TO_PRIVATE"
#739: FILE: fs/ecryptfs/file.c:698:
+	if (FILE_TO_PRIVATE(file) != NULL) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138723.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 59 warnings, 17 checks, 708 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138723.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
