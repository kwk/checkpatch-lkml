WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: include/linux/rcupdate.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#72: FILE: include/linux/rcupdate.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#73: FILE: include/linux/rcupdate.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#97: FILE: include/linux/rcupdate.h:40:
+struct rcu_head
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#99: FILE: include/linux/rcupdate.h:42:
+	void (*func)(void * arg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: include/linux/rcupdate.h:43:
+	void * arg;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: include/linux/rcupdate.h:46:
+extern void call_rcu(struct rcu_head * head, void (*func)(void * arg), void * arg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: include/linux/rcupdate.h:46:
+extern void call_rcu(struct rcu_head * head, void (*func)(void * arg), void * arg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: include/linux/rcupdate.h:46:
+extern void call_rcu(struct rcu_head * head, void (*func)(void * arg), void * arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/rcupdate.h:46:
+extern void call_rcu(struct rcu_head * head, void (*func)(void * arg), void * arg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#128: FILE: kernel/rcupdate.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#142: FILE: kernel/rcupdate.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#143: FILE: kernel/rcupdate.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: kernel/rcupdate.c:49:
+        for (cpu = 0; cpu < smp_num_cpus; cpu++) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/rcupdate.c:49:
+        for (cpu = 0; cpu < smp_num_cpus; cpu++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: kernel/rcupdate.c:50:
+                if (cpu == smp_processor_id())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: kernel/rcupdate.c:50:
+                if (cpu == smp_processor_id())$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: kernel/rcupdate.c:51:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: kernel/rcupdate.c:51:
+                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: kernel/rcupdate.c:52:
+                up(&krcud_sema(cpu));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/rcupdate.c:52:
+                up(&krcud_sema(cpu));$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#193: FILE: kernel/rcupdate.c:66:
+	struct list_head * entry;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#203: FILE: kernel/rcupdate.c:76:
+		struct rcu_head * head;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#215: FILE: kernel/rcupdate.c:88:
+void call_rcu(struct rcu_head * head, void (*func)(void * arg), void * arg)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#215: FILE: kernel/rcupdate.c:88:
+void call_rcu(struct rcu_head * head, void (*func)(void * arg), void * arg)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#215: FILE: kernel/rcupdate.c:88:
+void call_rcu(struct rcu_head * head, void (*func)(void * arg), void * arg)

WARNING:TYPO_SPELLING: 'dameon' may be misspelled - perhaps 'daemon'?
#234: FILE: kernel/rcupdate.c:107:
+ * Per-CPU RCU dameon. It runs at an absurdly high priority so
                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#238: FILE: kernel/rcupdate.c:111:
+static int krcud(void * __bind_cpu)

CHECK:SPACING: No space is necessary after a cast
#240: FILE: kernel/rcupdate.c:113:
+	int bind_cpu = *(int *) __bind_cpu;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: kernel/rcupdate.c:117:
+        current->policy = SCHED_FIFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: kernel/rcupdate.c:117:
+        current->policy = SCHED_FIFO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: kernel/rcupdate.c:118:
+        current->rt_priority = 1001 + sys_sched_get_priority_max(SCHED_FIFO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: kernel/rcupdate.c:118:
+        current->rt_priority = 1001 + sys_sched_get_priority_max(SCHED_FIFO);$

WARNING:CONSIDER_COMPLETION: consider using a completion
#255: FILE: kernel/rcupdate.c:128:
+	sema_init(&krcud_sema(cpu), 0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#260: FILE: kernel/rcupdate.c:133:
+		while (down_interruptible(&krcud_sema(cpu)));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#270: FILE: kernel/rcupdate.c:143:
+		if (kernel_thread(krcud, (void *) &cpu,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: kernel/rcupdate.c:145:
+			printk("spawn_krcud() failed for cpu %d\n", cpu);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spawn_krcud', this function's name, in a string
#272: FILE: kernel/rcupdate.c:145:
+			printk("spawn_krcud() failed for cpu %d\n", cpu);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: Unbalanced braces around else statement
#273: FILE: kernel/rcupdate.c:146:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSIDER_COMPLETION: consider using a completion
#284: FILE: kernel/rcupdate.c:157:
+	sema_init(&rcu_sema, 0);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#290: FILE: kernel/rcupdate.c:163:
+__initcall(rcu_init);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#292: FILE: kernel/rcupdate.c:165:
+EXPORT_SYMBOL(call_rcu);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513952.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 15 warnings, 4 checks, 227 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513952.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
