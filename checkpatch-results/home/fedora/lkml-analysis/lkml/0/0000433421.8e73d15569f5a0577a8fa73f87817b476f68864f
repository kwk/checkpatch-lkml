WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
speaking of cleanups, I rewrote the ptrace code and moved all the psw related

CHECK:SPACING: No space is necessary after a cast
#62: FILE: arch/s390/kernel/process.c:140:
+	regs.psw.addr = (__u32) kernel_thread_starter | PSW_ADDR_AMODE31;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <FixPerRegisters>
#90: FILE: arch/s390/kernel/ptrace.c:42:
+static void FixPerRegisters(struct task_struct *task)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#101: FILE: arch/s390/kernel/ptrace.c:48:
+	per_info = (per_struct *) &task->thread.per_info;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: arch/s390/kernel/ptrace.c:62:
+^I * if any of the control reg tracing bits are on $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#248: FILE: arch/s390/kernel/ptrace.c:117:
+	if (addr <= (addr_t) &dummy->regs.orig_gpr2) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#248: FILE: arch/s390/kernel/ptrace.c:117:
+	if (addr <= (addr_t) &dummy->regs.orig_gpr2) {
[...]
+	} else if (addr >= (addr_t) &dummy->regs.fp_regs &&
[...]
+	} else if (addr >= (addr_t) &dummy->regs.per_info &&
[...]
-	if (useraddr < 0 || enduseraddr > sizeof(struct user)||
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#252: FILE: arch/s390/kernel/ptrace.c:121:
+		tmp = *(__u32 *)((addr_t) __KSTK_PTREGS(child) + addr);

CHECK:SPACING: No space is necessary after a cast
#254: FILE: arch/s390/kernel/ptrace.c:123:
+	} else if (addr >= (addr_t) &dummy->regs.fp_regs &&

CHECK:SPACING: No space is necessary after a cast
#255: FILE: arch/s390/kernel/ptrace.c:124:
+		   addr < (addr_t) (&dummy->regs.fp_regs + 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: arch/s390/kernel/ptrace.c:125:
+^I^I/* $

CHECK:SPACING: No space is necessary after a cast
#259: FILE: arch/s390/kernel/ptrace.c:128:
+		offset = addr - (addr_t) &dummy->regs.fp_regs;

CHECK:SPACING: No space is necessary after a cast
#260: FILE: arch/s390/kernel/ptrace.c:129:
+		tmp = *(__u32 *)((addr_t) &child->thread.fp_regs + offset);

CHECK:SPACING: No space is necessary after a cast
#262: FILE: arch/s390/kernel/ptrace.c:131:
+	} else if (addr >= (addr_t) &dummy->regs.per_info &&

CHECK:SPACING: No space is necessary after a cast
#263: FILE: arch/s390/kernel/ptrace.c:132:
+		   addr < (addr_t) (&dummy->regs.per_info + 1)) {

CHECK:SPACING: No space is necessary after a cast
#267: FILE: arch/s390/kernel/ptrace.c:136:
+		offset = addr - (addr_t) &dummy->regs.per_info;

CHECK:SPACING: No space is necessary after a cast
#268: FILE: arch/s390/kernel/ptrace.c:137:
+		tmp = *(__u32 *)((addr_t) &child->thread.per_info + offset);

CHECK:BRACES: Unbalanced braces around else statement
#324: FILE: arch/s390/kernel/ptrace.c:139:
+	} else

CHECK:SPACING: No space is necessary after a cast
#327: FILE: arch/s390/kernel/ptrace.c:142:
+	return put_user(tmp, (__u32 *) data);

CHECK:SPACING: No space is necessary after a cast
#350: FILE: arch/s390/kernel/ptrace.c:159:
+	if (addr <= (addr_t) &dummy->regs.orig_gpr2) {

CHECK:SPACING: No space is necessary after a cast
#354: FILE: arch/s390/kernel/ptrace.c:163:
+		if (addr == (addr_t) &dummy->regs.psw.mask &&

CHECK:SPACING: No space is necessary after a cast
#358: FILE: arch/s390/kernel/ptrace.c:167:
+		if (addr == (addr_t) &dummy->regs.psw.addr)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#360: FILE: arch/s390/kernel/ptrace.c:169:
+			/* I'd like to reject addresses without the
+			   high order bit but older gdb's rely on it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#360: FILE: arch/s390/kernel/ptrace.c:169:
+			   high order bit but older gdb's rely on it */

CHECK:SPACING: No space is necessary after a cast
#362: FILE: arch/s390/kernel/ptrace.c:171:
+		*(__u32 *)((addr_t) __KSTK_PTREGS(child) + addr) = data;

CHECK:SPACING: No space is necessary after a cast
#364: FILE: arch/s390/kernel/ptrace.c:173:
+	} else if (addr >= (addr_t) &dummy->regs.fp_regs &&

CHECK:SPACING: No space is necessary after a cast
#365: FILE: arch/s390/kernel/ptrace.c:174:
+		   addr < (addr_t) (&dummy->regs.fp_regs + 1)) {

CHECK:SPACING: No space is necessary after a cast
#369: FILE: arch/s390/kernel/ptrace.c:178:
+		if (addr == (addr_t) &dummy->regs.fp_regs.fpc &&

CHECK:SPACING: No space is necessary after a cast
#372: FILE: arch/s390/kernel/ptrace.c:181:
+		offset = addr - (addr_t) &dummy->regs.fp_regs;

CHECK:SPACING: No space is necessary after a cast
#373: FILE: arch/s390/kernel/ptrace.c:182:
+		*(__u32 *)((addr_t) &child->thread.fp_regs + offset) = data;

CHECK:SPACING: No space is necessary after a cast
#375: FILE: arch/s390/kernel/ptrace.c:184:
+	} else if (addr >= (addr_t) &dummy->regs.per_info &&

CHECK:SPACING: No space is necessary after a cast
#376: FILE: arch/s390/kernel/ptrace.c:185:
+		   addr < (addr_t) (&dummy->regs.per_info + 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: arch/s390/kernel/ptrace.c:187:
+^I^I * per_info is found in the thread structure $

CHECK:SPACING: No space is necessary after a cast
#380: FILE: arch/s390/kernel/ptrace.c:189:
+		offset = addr - (addr_t) &dummy->regs.per_info;

CHECK:SPACING: No space is necessary after a cast
#381: FILE: arch/s390/kernel/ptrace.c:190:
+		*(__u32 *)((addr_t) &child->thread.per_info + offset) = data;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#383: FILE: arch/s390/kernel/ptrace.c:192:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: arch/s390/kernel/ptrace.c:202:
+^Iptrace_area parea; $

CHECK:SPACING: No space is necessary after a cast
#477: FILE: arch/s390/kernel/ptrace.c:228:
+		return put_user(tmp, (unsigned long *) data);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#504: FILE: arch/s390/kernel/ptrace.c:237:
+		copied = access_process_vm(child, addr, &data, sizeof(data),1);
 		                                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#539: FILE: arch/s390/kernel/ptrace.c:264:
+^I^I * make the child exit.  Best I can do is send it a sigkill. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: arch/s390/kernel/ptrace.c:265:
+^I^I * perhaps it should be put in the status that it wants to $

CHECK:SPACING: No space is necessary after a cast
#584: FILE: arch/s390/kernel/ptrace.c:293:
+		if (!copy_from_user(&parea, (void *) addr, sizeof(parea)))

CHECK:SPACING: No space is necessary after a cast
#704: FILE: arch/s390/kernel/setup.c:455:
+	lc = (struct _lowcore *) __alloc_bootmem(PAGE_SIZE, PAGE_SIZE, 0);

CHECK:SPACING: No space is necessary after a cast
#707: FILE: arch/s390/kernel/setup.c:458:
+	lc->restart_psw.addr = PSW_ADDR_AMODE31 + (__u32) restart_int_handler;

CHECK:SPACING: No space is necessary after a cast
#709: FILE: arch/s390/kernel/setup.c:460:
+	lc->external_new_psw.addr = PSW_ADDR_AMODE31 + (__u32) ext_int_handler;

CHECK:SPACING: No space is necessary after a cast
#711: FILE: arch/s390/kernel/setup.c:462:
+	lc->svc_new_psw.addr = PSW_ADDR_AMODE31 + (__u32) system_call;

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: arch/s390/kernel/setup.c:465:
+        lc->mcck_new_psw.mask = PSW_KERNEL_BITS;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: arch/s390/kernel/setup.c:465:
+        lc->mcck_new_psw.mask = PSW_KERNEL_BITS;$

CHECK:SPACING: No space is necessary after a cast
#715: FILE: arch/s390/kernel/setup.c:466:
+	lc->mcck_new_psw.addr = PSW_ADDR_AMODE31 + (__u32) mcck_int_handler;

CHECK:SPACING: No space is necessary after a cast
#717: FILE: arch/s390/kernel/setup.c:468:
+	lc->io_new_psw.addr = PSW_ADDR_AMODE31 + (__u32) io_int_handler;

CHECK:SPACING: No space is necessary after a cast
#719: FILE: arch/s390/kernel/setup.c:470:
+	lc->kernel_stack = ((__u32) &init_thread_union) + 8192;

CHECK:SPACING: No space is necessary after a cast
#725: FILE: arch/s390/kernel/setup.c:474:
+	set_prefix((__u32) lc);

ERROR:CODE_INDENT: code indent should use tabs where possible
#748: FILE: arch/s390/kernel/signal.c:301:
+                regs->gprs[14] = (__u32) ka->sa.sa_restorer | PSW_ADDR_AMODE31;$

CHECK:SPACING: No space is necessary after a cast
#748: FILE: arch/s390/kernel/signal.c:301:
+                regs->gprs[14] = (__u32) ka->sa.sa_restorer | PSW_ADDR_AMODE31;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: arch/s390/kernel/signal.c:301:
+                regs->gprs[14] = (__u32) ka->sa.sa_restorer | PSW_ADDR_AMODE31;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#751: FILE: arch/s390/kernel/signal.c:303:
+                regs->gprs[14] = (__u32) frame->retcode | PSW_ADDR_AMODE31;$

CHECK:SPACING: No space is necessary after a cast
#751: FILE: arch/s390/kernel/signal.c:303:
+                regs->gprs[14] = (__u32) frame->retcode | PSW_ADDR_AMODE31;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: arch/s390/kernel/signal.c:303:
+                regs->gprs[14] = (__u32) frame->retcode | PSW_ADDR_AMODE31;$

CHECK:SPACING: No space is necessary after a cast
#762: FILE: arch/s390/kernel/signal.c:314:
+	regs->gprs[15] = (__u32) frame;

CHECK:SPACING: No space is necessary after a cast
#763: FILE: arch/s390/kernel/signal.c:315:
+	regs->psw.addr = (__u32) ka->sa.sa_handler | PSW_ADDR_AMODE31;

CHECK:SPACING: No space is necessary after a cast
#768: FILE: arch/s390/kernel/signal.c:319:
+	regs->gprs[3] = (__u32) &frame->sc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#777: FILE: arch/s390/kernel/signal.c:359:
+                regs->gprs[14] = (__u32) ka->sa.sa_restorer | PSW_ADDR_AMODE31;$

CHECK:SPACING: No space is necessary after a cast
#777: FILE: arch/s390/kernel/signal.c:359:
+                regs->gprs[14] = (__u32) ka->sa.sa_restorer | PSW_ADDR_AMODE31;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: arch/s390/kernel/signal.c:359:
+                regs->gprs[14] = (__u32) ka->sa.sa_restorer | PSW_ADDR_AMODE31;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#780: FILE: arch/s390/kernel/signal.c:361:
+                regs->gprs[14] = (__u32) frame->retcode | PSW_ADDR_AMODE31;$

CHECK:SPACING: No space is necessary after a cast
#780: FILE: arch/s390/kernel/signal.c:361:
+                regs->gprs[14] = (__u32) frame->retcode | PSW_ADDR_AMODE31;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: arch/s390/kernel/signal.c:361:
+                regs->gprs[14] = (__u32) frame->retcode | PSW_ADDR_AMODE31;$

CHECK:SPACING: No space is necessary after a cast
#791: FILE: arch/s390/kernel/signal.c:371:
+	regs->gprs[15] = (__u32) frame;

CHECK:SPACING: No space is necessary after a cast
#792: FILE: arch/s390/kernel/signal.c:372:
+	regs->psw.addr = (__u32) ka->sa.sa_handler | PSW_ADDR_AMODE31;

CHECK:SPACING: No space is necessary after a cast
#798: FILE: arch/s390/kernel/signal.c:376:
+	regs->gprs[3] = (__u32) &frame->info;

CHECK:SPACING: No space is necessary after a cast
#799: FILE: arch/s390/kernel/signal.c:377:
+	regs->gprs[4] = (__u32) &frame->uc;

CHECK:SPACING: No space is necessary after a cast
#811: FILE: arch/s390/kernel/traps.c:119:
+	low_addr = ((unsigned long) stack) & PSW_ADDR_INSN;

CHECK:SPACING: No space is necessary after a cast
#815: FILE: arch/s390/kernel/traps.c:122:
+	backchain = *((unsigned long *) low_addr) & PSW_ADDR_INSN;

CHECK:SPACING: No space is necessary after a cast
#821: FILE: arch/s390/kernel/traps.c:127:
+		ret_addr = *((unsigned long *) (backchain+56)) & PSW_ADDR_INSN;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#821: FILE: arch/s390/kernel/traps.c:127:
+		ret_addr = *((unsigned long *) (backchain+56)) & PSW_ADDR_INSN;
 		                                         ^

CHECK:SPACING: No space is necessary after a cast
#829: FILE: arch/s390/kernel/traps.c:134:
+		backchain = *((unsigned long *) backchain) & PSW_ADDR_INSN;

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: arch/s390/kernel/traps.c:282:
+        if (regs->psw.mask & PSW_MASK_PSTATE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: arch/s390/kernel/traps.c:282:
+        if (regs->psw.mask & PSW_MASK_PSTATE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: arch/s390/kernel/traps.c:285:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: arch/s390/kernel/traps.c:285:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#869: FILE: arch/s390/kernel/traps.c:317:
+	return (void *)((regs->psw.addr-S390_lowcore.pgm_ilc) & PSW_ADDR_INSN);
 	                               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#875: FILE: arch/s390/kernel/traps.c:322:
+	if(regs->psw.mask&PSW_MASK_PSTATE)
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#875: FILE: arch/s390/kernel/traps.c:322:
+	if(regs->psw.mask&PSW_MASK_PSTATE)

ERROR:CODE_INDENT: code indent should use tabs where possible
#897: FILE: arch/s390/kernel/traps.c:431:
+        else if (regs->psw.mask & PSW_MASK_PSTATE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: arch/s390/kernel/traps.c:431:
+        else if (regs->psw.mask & PSW_MASK_PSTATE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: arch/s390/kernel/traps.c:482:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: arch/s390/kernel/traps.c:482:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#928: FILE: arch/s390/kernel/traps.c:550:
+        else if (regs->psw.mask & PSW_MASK_PSTATE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#928: FILE: arch/s390/kernel/traps.c:550:
+        else if (regs->psw.mask & PSW_MASK_PSTATE) {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#946: FILE: arch/s390/kernel/traps.c:680:
+	if (do_debugger_trap(regs,SIGTRAP)) {
 	                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#965: FILE: arch/s390/mm/extable.c:51:
+	if (ret) ret = ret | PSW_ADDR_AMODE31;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: arch/s390/mm/fault.c:170:
+ ^I^Iif (!(regs->psw.mask & PSW_MASK_PSTATE)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#986: FILE: arch/s390/mm/fault.c:170:
+ ^I^Iif (!(regs->psw.mask & PSW_MASK_PSTATE)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: arch/s390/mm/fault.c:170:
+ ^I^Iif (!(regs->psw.mask & PSW_MASK_PSTATE)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: arch/s390/mm/fault.c:262:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: arch/s390/mm/fault.c:262:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1022: FILE: arch/s390/mm/fault.c:397:
+                if (!(regs->psw.mask & PSW_MASK_PSTATE)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: arch/s390/mm/fault.c:397:
+                if (!(regs->psw.mask & PSW_MASK_PSTATE)) {$

CHECK:SPACING: No space is necessary after a cast
#1155: FILE: arch/s390x/kernel/ptrace.c:53:
+	per_info = (per_struct *) &task->thread.per_info;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1190: FILE: arch/s390x/kernel/ptrace.c:72:
+^I * if any of the control reg tracing bits are on $

CHECK:SPACING: No space is necessary after a cast
#1254: FILE: arch/s390x/kernel/ptrace.c:131:
+	if (addr <= (addr_t) &dummy->regs.orig_gpr2) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1254: FILE: arch/s390x/kernel/ptrace.c:131:
+	if (addr <= (addr_t) &dummy->regs.orig_gpr2) {
[...]
+	} else if (addr >= (addr_t) &dummy->regs.fp_regs &&
[...]
+	} else if (addr >= (addr_t) &dummy->regs.per_info &&
[...]
-	if (mask != -1L) {
[...]

CHECK:SPACING: No space is necessary after a cast
#1258: FILE: arch/s390x/kernel/ptrace.c:135:
+		tmp = *(__u64 *)((addr_t) __KSTK_PTREGS(child) + addr);

CHECK:SPACING: No space is necessary after a cast
#1260: FILE: arch/s390x/kernel/ptrace.c:137:
+	} else if (addr >= (addr_t) &dummy->regs.fp_regs &&

CHECK:SPACING: No space is necessary after a cast
#1261: FILE: arch/s390x/kernel/ptrace.c:138:
+		   addr < (addr_t) (&dummy->regs.fp_regs + 1)) {

CHECK:SPACING: No space is necessary after a cast
#1265: FILE: arch/s390x/kernel/ptrace.c:142:
+		offset = addr - (addr_t) &dummy->regs.fp_regs;

CHECK:SPACING: No space is necessary after a cast
#1266: FILE: arch/s390x/kernel/ptrace.c:143:
+		tmp = *(__u64 *)((addr_t) &child->thread.fp_regs + offset);

CHECK:SPACING: No space is necessary after a cast
#1268: FILE: arch/s390x/kernel/ptrace.c:145:
+	} else if (addr >= (addr_t) &dummy->regs.per_info &&

CHECK:SPACING: No space is necessary after a cast
#1269: FILE: arch/s390x/kernel/ptrace.c:146:
+		   addr < (addr_t) (&dummy->regs.per_info + 1)) {

CHECK:SPACING: No space is necessary after a cast
#1273: FILE: arch/s390x/kernel/ptrace.c:150:
+		offset = addr - (addr_t) &dummy->regs.per_info;

CHECK:SPACING: No space is necessary after a cast
#1274: FILE: arch/s390x/kernel/ptrace.c:151:
+		tmp = *(__u64 *)((addr_t) &child->thread.per_info + offset);

CHECK:BRACES: Unbalanced braces around else statement
#1303: FILE: arch/s390x/kernel/ptrace.c:153:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1307: FILE: arch/s390x/kernel/ptrace.c:156:
+	return put_user(tmp, (__u64 *) data);

CHECK:SPACING: No space is necessary after a cast
#1436: FILE: arch/s390x/kernel/ptrace.c:173:
+	if (addr <= (addr_t) &dummy->regs.orig_gpr2) {

CHECK:SPACING: No space is necessary after a cast
#1440: FILE: arch/s390x/kernel/ptrace.c:177:
+		if (addr == (addr_t) &dummy->regs.psw.mask &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1441: FILE: arch/s390x/kernel/ptrace.c:178:
+		if (addr == (addr_t) &dummy->regs.psw.mask &&
+#ifdef CONFIG_S390_SUPPORT

CHECK:SPACING: No space is necessary after a cast
#1447: FILE: arch/s390x/kernel/ptrace.c:184:
+		*(__u64 *)((addr_t) __KSTK_PTREGS(child) + addr) = data;

CHECK:SPACING: No space is necessary after a cast
#1449: FILE: arch/s390x/kernel/ptrace.c:186:
+	} else if (addr >= (addr_t) &dummy->regs.fp_regs &&

CHECK:SPACING: No space is necessary after a cast
#1450: FILE: arch/s390x/kernel/ptrace.c:187:
+		   addr < (addr_t) (&dummy->regs.fp_regs + 1)) {

CHECK:SPACING: No space is necessary after a cast
#1454: FILE: arch/s390x/kernel/ptrace.c:191:
+		if (addr == (addr_t) &dummy->regs.fp_regs.fpc &&

CHECK:SPACING: No space is necessary after a cast
#1458: FILE: arch/s390x/kernel/ptrace.c:195:
+		offset = addr - (addr_t) &dummy->regs.fp_regs;

CHECK:SPACING: No space is necessary after a cast
#1459: FILE: arch/s390x/kernel/ptrace.c:196:
+		*(__u64 *)((addr_t) &child->thread.fp_regs + offset) = data;

CHECK:SPACING: No space is necessary after a cast
#1461: FILE: arch/s390x/kernel/ptrace.c:198:
+	} else if (addr >= (addr_t) &dummy->regs.per_info &&

CHECK:SPACING: No space is necessary after a cast
#1462: FILE: arch/s390x/kernel/ptrace.c:199:
+		   addr < (addr_t) (&dummy->regs.per_info + 1)) {

CHECK:SPACING: No space is necessary after a cast
#1466: FILE: arch/s390x/kernel/ptrace.c:203:
+		offset = addr - (addr_t) &dummy->regs.per_info;

CHECK:SPACING: No space is necessary after a cast
#1467: FILE: arch/s390x/kernel/ptrace.c:204:
+		*(__u64 *)((addr_t) &child->thread.per_info + offset) = data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1588: FILE: arch/s390x/kernel/ptrace.c:216:
+^Iptrace_area parea; $

CHECK:SPACING: No space is necessary after a cast
#1598: FILE: arch/s390x/kernel/ptrace.c:226:
+		return put_user(tmp, (unsigned long *) data);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1607: FILE: arch/s390x/kernel/ptrace.c:235:
+		copied = access_process_vm(child, addr, &data, sizeof(data),1);
 		                                                           ^

CHECK:SPACING: No space is necessary after a cast
#1618: FILE: arch/s390x/kernel/ptrace.c:246:
+		if (!copy_from_user(&parea, (void *) addr, sizeof(parea)))

CHECK:SPACING: No space is necessary after a cast
#1697: FILE: arch/s390x/kernel/ptrace.c:296:
+	if (addr <= (addr_t) &dummy32->regs.orig_gpr2) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1697: FILE: arch/s390x/kernel/ptrace.c:296:
+	if (addr <= (addr_t) &dummy32->regs.orig_gpr2) {
[...]
+	} else if (addr >= (addr_t) &dummy32->regs.fp_regs &&
[...]
+	} else if (addr >= (addr_t) &dummy32->regs.per_info &&
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1701: FILE: arch/s390x/kernel/ptrace.c:300:
+		if (addr == (addr_t) &dummy32->regs.psw.mask) {

CHECK:SPACING: No space is necessary after a cast
#1705: FILE: arch/s390x/kernel/ptrace.c:304:
+		} else if (addr == (addr_t) &dummy32->regs.psw.addr) {

CHECK:SPACING: No space is necessary after a cast
#1707: FILE: arch/s390x/kernel/ptrace.c:306:
+			tmp = (__u32) __KSTK_PTREGS(child)->psw.addr |

CHECK:BRACES: Unbalanced braces around else statement
#1709: FILE: arch/s390x/kernel/ptrace.c:308:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1710: FILE: arch/s390x/kernel/ptrace.c:309:
+^I^I^Itmp = *(__u32 *)((addr_t) __KSTK_PTREGS(child) + $

CHECK:SPACING: No space is necessary after a cast
#1710: FILE: arch/s390x/kernel/ptrace.c:309:
+			tmp = *(__u32 *)((addr_t) __KSTK_PTREGS(child) + 

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1711: FILE: arch/s390x/kernel/ptrace.c:310:
+					 addr*2 + 4);
 					     ^

CHECK:SPACING: No space is necessary after a cast
#1712: FILE: arch/s390x/kernel/ptrace.c:311:
+	} else if (addr >= (addr_t) &dummy32->regs.fp_regs &&

CHECK:SPACING: No space is necessary after a cast
#1713: FILE: arch/s390x/kernel/ptrace.c:312:
+		   addr < (addr_t) (&dummy32->regs.fp_regs + 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1715: FILE: arch/s390x/kernel/ptrace.c:314:
+^I^I * floating point regs. are stored in the thread structure $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1717: FILE: arch/s390x/kernel/ptrace.c:316:
+^I        offset = addr - (addr_t) &dummy32->regs.fp_regs;$

CHECK:SPACING: No space is necessary after a cast
#1717: FILE: arch/s390x/kernel/ptrace.c:316:
+	        offset = addr - (addr_t) &dummy32->regs.fp_regs;

CHECK:SPACING: No space is necessary after a cast
#1718: FILE: arch/s390x/kernel/ptrace.c:317:
+		tmp = *(__u32 *)((addr_t) &child->thread.fp_regs + offset);

CHECK:SPACING: No space is necessary after a cast
#1720: FILE: arch/s390x/kernel/ptrace.c:319:
+	} else if (addr >= (addr_t) &dummy32->regs.per_info &&

CHECK:SPACING: No space is necessary after a cast
#1721: FILE: arch/s390x/kernel/ptrace.c:320:
+		   addr < (addr_t) (&dummy32->regs.per_info + 1)) {

CHECK:SPACING: No space is necessary after a cast
#1725: FILE: arch/s390x/kernel/ptrace.c:324:
+		offset = addr - (addr_t) &dummy32->regs.per_info;

CHECK:SPACING: No space is necessary after a cast
#1727: FILE: arch/s390x/kernel/ptrace.c:326:
+		if ((offset >= (addr_t) &dummy_per32->control_regs &&

CHECK:SPACING: No space is necessary after a cast
#1728: FILE: arch/s390x/kernel/ptrace.c:327:
+		     offset < (addr_t) (&dummy_per32->control_regs + 1)) ||

CHECK:SPACING: No space is necessary after a cast
#1729: FILE: arch/s390x/kernel/ptrace.c:328:
+		    (offset >= (addr_t) &dummy_per32->starting_addr &&

CHECK:SPACING: No space is necessary after a cast
#1730: FILE: arch/s390x/kernel/ptrace.c:329:
+		     offset <= (addr_t) &dummy_per32->ending_addr) ||

CHECK:SPACING: No space is necessary after a cast
#1731: FILE: arch/s390x/kernel/ptrace.c:330:
+		    offset == (addr_t) &dummy_per32->lowcore.words.address)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1732: FILE: arch/s390x/kernel/ptrace.c:331:
+			offset = offset*2 + 4;
 			               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1734: FILE: arch/s390x/kernel/ptrace.c:333:
+			offset = offset*2;
 			               ^

CHECK:SPACING: No space is necessary after a cast
#1735: FILE: arch/s390x/kernel/ptrace.c:334:
+		tmp = *(__u32 *)((addr_t) &child->thread.per_info + offset);

CHECK:BRACES: Unbalanced braces around else statement
#1737: FILE: arch/s390x/kernel/ptrace.c:336:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1740: FILE: arch/s390x/kernel/ptrace.c:339:
+	return put_user(tmp, (__u32 *) data);

CHECK:SPACING: No space is necessary after a cast
#1763: FILE: arch/s390x/kernel/ptrace.c:357:
+	tmp = (__u32) data;

CHECK:SPACING: No space is necessary after a cast
#1765: FILE: arch/s390x/kernel/ptrace.c:359:
+	if (addr <= (addr_t) &dummy32->regs.orig_gpr2) {

CHECK:SPACING: No space is necessary after a cast
#1769: FILE: arch/s390x/kernel/ptrace.c:363:
+		if (addr == (addr_t) &dummy32->regs.psw.mask) {

CHECK:SPACING: No space is necessary after a cast
#1776: FILE: arch/s390x/kernel/ptrace.c:370:
+		} else if (addr == (addr_t) &dummy32->regs.psw.addr) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1778: FILE: arch/s390x/kernel/ptrace.c:372:
+^I^I^I__KSTK_PTREGS(child)->psw.addr = $

CHECK:SPACING: No space is necessary after a cast
#1779: FILE: arch/s390x/kernel/ptrace.c:373:
+				(__u64) tmp & PSW32_ADDR_INSN;

CHECK:BRACES: Unbalanced braces around else statement
#1780: FILE: arch/s390x/kernel/ptrace.c:374:
+		} else

CHECK:SPACING: No space is necessary after a cast
#1781: FILE: arch/s390x/kernel/ptrace.c:375:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + addr*2 + 4) =

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1781: FILE: arch/s390x/kernel/ptrace.c:375:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + addr*2 + 4) =

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1781: FILE: arch/s390x/kernel/ptrace.c:375:
+			*(__u32*)((addr_t) __KSTK_PTREGS(child) + addr*2 + 4) =
 			                                              ^

CHECK:SPACING: No space is necessary after a cast
#1783: FILE: arch/s390x/kernel/ptrace.c:377:
+	} else if (addr >= (addr_t) &dummy32->regs.fp_regs &&

CHECK:SPACING: No space is necessary after a cast
#1784: FILE: arch/s390x/kernel/ptrace.c:378:
+		   addr < (addr_t) (&dummy32->regs.fp_regs + 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1786: FILE: arch/s390x/kernel/ptrace.c:380:
+^I^I * floating point regs. are stored in the thread structure $

CHECK:SPACING: No space is necessary after a cast
#1788: FILE: arch/s390x/kernel/ptrace.c:382:
+		if (addr == (addr_t) &dummy32->regs.fp_regs.fpc &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#1792: FILE: arch/s390x/kernel/ptrace.c:386:
+^I        offset = addr - (addr_t) &dummy32->regs.fp_regs;$

CHECK:SPACING: No space is necessary after a cast
#1792: FILE: arch/s390x/kernel/ptrace.c:386:
+	        offset = addr - (addr_t) &dummy32->regs.fp_regs;

CHECK:SPACING: No space is necessary after a cast
#1793: FILE: arch/s390x/kernel/ptrace.c:387:
+		*(__u32 *)((addr_t) &child->thread.fp_regs + offset) = tmp;

CHECK:SPACING: No space is necessary after a cast
#1795: FILE: arch/s390x/kernel/ptrace.c:389:
+	} else if (addr >= (addr_t) &dummy32->regs.per_info &&

CHECK:SPACING: No space is necessary after a cast
#1796: FILE: arch/s390x/kernel/ptrace.c:390:
+		   addr < (addr_t) (&dummy32->regs.per_info + 1)) {

CHECK:SPACING: No space is necessary after a cast
#1800: FILE: arch/s390x/kernel/ptrace.c:394:
+		offset = addr - (addr_t) &dummy32->regs.per_info;

CHECK:SPACING: No space is necessary after a cast
#1809: FILE: arch/s390x/kernel/ptrace.c:403:
+		if ((offset >= (addr_t) &dummy_per32->control_regs &&

CHECK:SPACING: No space is necessary after a cast
#1810: FILE: arch/s390x/kernel/ptrace.c:404:
+		     offset < (addr_t) (&dummy_per32->control_regs + 1)) ||

CHECK:SPACING: No space is necessary after a cast
#1811: FILE: arch/s390x/kernel/ptrace.c:405:
+		    (offset >= (addr_t) &dummy_per32->starting_addr &&

CHECK:SPACING: No space is necessary after a cast
#1812: FILE: arch/s390x/kernel/ptrace.c:406:
+		     offset <= (addr_t) &dummy_per32->ending_addr) ||

CHECK:SPACING: No space is necessary after a cast
#1813: FILE: arch/s390x/kernel/ptrace.c:407:
+		    offset == (addr_t) &dummy_per32->lowcore.words.address)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1814: FILE: arch/s390x/kernel/ptrace.c:408:
+			offset = offset*2 + 4;
 			               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1816: FILE: arch/s390x/kernel/ptrace.c:410:
+			offset = offset*2;
 			               ^

CHECK:SPACING: No space is necessary after a cast
#1817: FILE: arch/s390x/kernel/ptrace.c:411:
+		*(__u32 *)((addr_t) &child->thread.per_info + offset) = tmp;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1819: FILE: arch/s390x/kernel/ptrace.c:413:
 
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1880: FILE: arch/s390x/kernel/ptrace.c:423:
+^Iptrace_area_emu31 parea; $

CHECK:SPACING: No space is necessary after a cast
#1890: FILE: arch/s390x/kernel/ptrace.c:433:
+		return put_user(tmp, (unsigned int *) data);

CHECK:SPACING: No space is necessary after a cast
#1911: FILE: arch/s390x/kernel/ptrace.c:454:
+		if (!copy_from_user(&parea, (void *) addr, sizeof(parea)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2019: FILE: arch/s390x/kernel/ptrace.c:514:
+^I^I * make the child exit.  Best I can do is send it a sigkill. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2020: FILE: arch/s390x/kernel/ptrace.c:515:
+^I^I * perhaps it should be put in the status that it wants to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2093: FILE: arch/s390x/kernel/ptrace.c:554:
+^I^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2160: FILE: arch/s390x/kernel/ptrace32.h:1:
+#ifndef _PTRACE32_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2165: FILE: arch/s390x/kernel/ptrace32.h:6:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2166: FILE: arch/s390x/kernel/ptrace32.h:7:
+typedef struct
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2168: FILE: arch/s390x/kernel/ptrace32.h:9:
+} per_cr_words32  __attribute__((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2170: FILE: arch/s390x/kernel/ptrace32.h:11:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2171: FILE: arch/s390x/kernel/ptrace32.h:12:
+typedef struct
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2175: FILE: arch/s390x/kernel/ptrace32.h:16:
+} per_lowcore_words32  __attribute__((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2177: FILE: arch/s390x/kernel/ptrace32.h:18:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2178: FILE: arch/s390x/kernel/ptrace32.h:19:
+typedef struct
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2181: FILE: arch/s390x/kernel/ptrace32.h:22:
+	} control_regs  __attribute__((packed));

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#2189: FILE: arch/s390x/kernel/ptrace32.h:30:
+	unsigned                    : 30;
 	                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2198: FILE: arch/s390x/kernel/ptrace32.h:39:
+^I} lowcore; $

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2199: FILE: arch/s390x/kernel/ptrace32.h:40:
+} per_struct32 __attribute__((packed));

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2202: FILE: arch/s390x/kernel/ptrace32.h:43:
+struct user_regs_struct32
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2214: FILE: arch/s390x/kernel/ptrace32.h:55:
+^Iu32  ieee_instruction_pointer; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2220: FILE: arch/s390x/kernel/ptrace32.h:61:
+	/* We start with the registers, to mimic the way that "memory"
+	   is returned from the ptrace(3,...) function.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2220: FILE: arch/s390x/kernel/ptrace32.h:61:
+	   is returned from the ptrace(3,...) function.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2228: FILE: arch/s390x/kernel/ptrace32.h:69:
+	u32 start_stack;	/* Starting virtual address of stack area.
+				   This is actually the bottom of the stack,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2230: FILE: arch/s390x/kernel/ptrace32.h:71:
+				   esp register.  */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2231: FILE: arch/s390x/kernel/ptrace32.h:72:
+^Is32 signal;     ^I /* Signal that caused the core dump. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2233: FILE: arch/s390x/kernel/ptrace32.h:74:
+^I                         /* the registers. */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2238: FILE: arch/s390x/kernel/ptrace32.h:79:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2239: FILE: arch/s390x/kernel/ptrace32.h:80:
+typedef struct
+{

CHECK:SPACING: No space is necessary after a cast
#2280: FILE: arch/s390x/kernel/setup.c:445:
+	lc = (struct _lowcore *) __alloc_bootmem(2*PAGE_SIZE, 2*PAGE_SIZE, 0);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2280: FILE: arch/s390x/kernel/setup.c:445:
+	lc = (struct _lowcore *) __alloc_bootmem(2*PAGE_SIZE, 2*PAGE_SIZE, 0);
 	                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2280: FILE: arch/s390x/kernel/setup.c:445:
+	lc = (struct _lowcore *) __alloc_bootmem(2*PAGE_SIZE, 2*PAGE_SIZE, 0);
 	                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2281: FILE: arch/s390x/kernel/setup.c:446:
+	memset(lc, 0, 2*PAGE_SIZE);
 	               ^

CHECK:SPACING: No space is necessary after a cast
#2283: FILE: arch/s390x/kernel/setup.c:448:
+	lc->restart_psw.addr = (addr_t) &restart_int_handler;

CHECK:SPACING: No space is necessary after a cast
#2285: FILE: arch/s390x/kernel/setup.c:450:
+	lc->external_new_psw.addr = (addr_t) &ext_int_handler;

CHECK:SPACING: No space is necessary after a cast
#2287: FILE: arch/s390x/kernel/setup.c:452:
+	lc->svc_new_psw.addr = (addr_t) &system_call;

CHECK:SPACING: No space is necessary after a cast
#2289: FILE: arch/s390x/kernel/setup.c:454:
+	lc->program_new_psw.addr = (addr_t) &pgm_check_handler;

CHECK:SPACING: No space is necessary after a cast
#2291: FILE: arch/s390x/kernel/setup.c:456:
+	lc->mcck_new_psw.addr = (addr_t) &mcck_int_handler;

CHECK:SPACING: No space is necessary after a cast
#2293: FILE: arch/s390x/kernel/setup.c:458:
+	lc->io_new_psw.addr = (addr_t) &io_int_handler;

CHECK:SPACING: No space is necessary after a cast
#2295: FILE: arch/s390x/kernel/setup.c:460:
+	lc->kernel_stack = ((__u64) &init_thread_union) + 16384;

CHECK:SPACING: No space is necessary after a cast
#2305: FILE: arch/s390x/kernel/setup.c:468:
+	set_prefix((__u32)(__u64) lc);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2326: FILE: arch/s390x/kernel/signal.c:295:
+                regs->gprs[14] = (__u64) ka->sa.sa_restorer;$

CHECK:SPACING: No space is necessary after a cast
#2326: FILE: arch/s390x/kernel/signal.c:295:
+                regs->gprs[14] = (__u64) ka->sa.sa_restorer;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2326: FILE: arch/s390x/kernel/signal.c:295:
+                regs->gprs[14] = (__u64) ka->sa.sa_restorer;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2329: FILE: arch/s390x/kernel/signal.c:297:
+                regs->gprs[14] = (__u64) frame->retcode;$

CHECK:SPACING: No space is necessary after a cast
#2329: FILE: arch/s390x/kernel/signal.c:297:
+                regs->gprs[14] = (__u64) frame->retcode;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2329: FILE: arch/s390x/kernel/signal.c:297:
+                regs->gprs[14] = (__u64) frame->retcode;$

CHECK:SPACING: No space is necessary after a cast
#2340: FILE: arch/s390x/kernel/signal.c:308:
+	regs->gprs[15] = (__u64) frame;

CHECK:SPACING: No space is necessary after a cast
#2341: FILE: arch/s390x/kernel/signal.c:309:
+	regs->psw.addr = (__u64) ka->sa.sa_handler;

CHECK:SPACING: No space is necessary after a cast
#2346: FILE: arch/s390x/kernel/signal.c:313:
+	regs->gprs[3] = (__u64) &frame->sc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2355: FILE: arch/s390x/kernel/signal.c:353:
+                regs->gprs[14] = (__u64) ka->sa.sa_restorer;$

CHECK:SPACING: No space is necessary after a cast
#2355: FILE: arch/s390x/kernel/signal.c:353:
+                regs->gprs[14] = (__u64) ka->sa.sa_restorer;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2355: FILE: arch/s390x/kernel/signal.c:353:
+                regs->gprs[14] = (__u64) ka->sa.sa_restorer;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2358: FILE: arch/s390x/kernel/signal.c:355:
+                regs->gprs[14] = (__u64) frame->retcode;$

CHECK:SPACING: No space is necessary after a cast
#2358: FILE: arch/s390x/kernel/signal.c:355:
+                regs->gprs[14] = (__u64) frame->retcode;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2358: FILE: arch/s390x/kernel/signal.c:355:
+                regs->gprs[14] = (__u64) frame->retcode;$

CHECK:SPACING: No space is necessary after a cast
#2369: FILE: arch/s390x/kernel/signal.c:365:
+	regs->gprs[15] = (__u64) frame;

CHECK:SPACING: No space is necessary after a cast
#2370: FILE: arch/s390x/kernel/signal.c:366:
+	regs->psw.addr = (__u64) ka->sa.sa_handler;

CHECK:SPACING: No space is necessary after a cast
#2376: FILE: arch/s390x/kernel/signal.c:370:
+	regs->gprs[3] = (__u64) &frame->info;

CHECK:SPACING: No space is necessary after a cast
#2377: FILE: arch/s390x/kernel/signal.c:371:
+	regs->gprs[4] = (__u64) &frame->uc;

CHECK:SPACING: No space is necessary after a cast
#2410: FILE: arch/s390x/kernel/signal32.c:297:
+	regs32.psw.addr = PSW32_ADDR_AMODE31 | (__u32) regs->psw.addr;

CHECK:SPACING: No space is necessary after a cast
#2432: FILE: arch/s390x/kernel/signal32.c:465:
+		regs->gprs[14] = (__u64) ka->sa.sa_restorer;

CHECK:SPACING: No space is necessary after a cast
#2435: FILE: arch/s390x/kernel/signal32.c:467:
+		regs->gprs[14] = (__u64) frame->retcode;

CHECK:SPACING: No space is necessary after a cast
#2446: FILE: arch/s390x/kernel/signal32.c:478:
+	regs->gprs[15] = (__u64) frame;

CHECK:SPACING: No space is necessary after a cast
#2447: FILE: arch/s390x/kernel/signal32.c:479:
+	regs->psw.addr = (__u64) ka->sa.sa_handler;

CHECK:SPACING: No space is necessary after a cast
#2452: FILE: arch/s390x/kernel/signal32.c:483:
+	regs->gprs[3] = (__u64) &frame->sc;

CHECK:SPACING: No space is necessary after a cast
#2461: FILE: arch/s390x/kernel/signal32.c:523:
+		regs->gprs[14] = (__u64) ka->sa.sa_restorer;

CHECK:SPACING: No space is necessary after a cast
#2464: FILE: arch/s390x/kernel/signal32.c:525:
+		regs->gprs[14] = (__u64) frame->retcode;

CHECK:SPACING: No space is necessary after a cast
#2475: FILE: arch/s390x/kernel/signal32.c:535:
+	regs->gprs[15] = (__u64) frame;

CHECK:SPACING: No space is necessary after a cast
#2476: FILE: arch/s390x/kernel/signal32.c:536:
+	regs->psw.addr = (__u64) ka->sa.sa_handler;

CHECK:SPACING: No space is necessary after a cast
#2482: FILE: arch/s390x/kernel/signal32.c:540:
+	regs->gprs[3] = (__u64) &frame->info;

CHECK:SPACING: No space is necessary after a cast
#2483: FILE: arch/s390x/kernel/signal32.c:541:
+	regs->gprs[4] = (__u64) &frame->uc;

CHECK:SPACING: No space is necessary after a cast
#2495: FILE: arch/s390x/kernel/traps.c:121:
+	low_addr = (unsigned long) stack;

CHECK:SPACING: No space is necessary after a cast
#2499: FILE: arch/s390x/kernel/traps.c:124:
+	backchain = *(unsigned long *) low_addr;

CHECK:SPACING: No space is necessary after a cast
#2505: FILE: arch/s390x/kernel/traps.c:129:
+		ret_addr = *(unsigned long *) (backchain+112);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2505: FILE: arch/s390x/kernel/traps.c:129:
+		ret_addr = *(unsigned long *) (backchain+112);
 		                                        ^

CHECK:SPACING: No space is necessary after a cast
#2513: FILE: arch/s390x/kernel/traps.c:136:
+		backchain = *(unsigned long *) backchain;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2544: FILE: arch/s390x/kernel/traps.c:287:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2544: FILE: arch/s390x/kernel/traps.c:287:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2559: FILE: arch/s390x/kernel/traps.c:323:
+	if(regs->psw.mask&PSW_MASK_PSTATE)
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#2559: FILE: arch/s390x/kernel/traps.c:323:
+	if(regs->psw.mask&PSW_MASK_PSTATE)

ERROR:SPACING: space required before the open parenthesis '('
#2577: FILE: arch/s390x/kernel/traps.c:428:
+	if(regs->psw.mask & PSW_MASK_PSTATE)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2596: FILE: arch/s390x/kernel/traps.c:522:
+	if (regs->psw.mask&PSW_MASK_PSTATE) {
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2604: FILE: arch/s390x/kernel/traps.c:528:
+	if (do_debugger_trap(regs,SIGTRAP)) {
 	                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2623: FILE: arch/s390x/mm/fault.c:170:
+ ^I^Iif (!(regs->psw.mask & PSW_MASK_PSTATE)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2623: FILE: arch/s390x/mm/fault.c:170:
+ ^I^Iif (!(regs->psw.mask & PSW_MASK_PSTATE)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2623: FILE: arch/s390x/mm/fault.c:170:
+ ^I^Iif (!(regs->psw.mask & PSW_MASK_PSTATE)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2632: FILE: arch/s390x/mm/fault.c:262:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2632: FILE: arch/s390x/mm/fault.c:262:
+        if (regs->psw.mask & PSW_MASK_PSTATE) {$

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#2800: FILE: include/asm-s390/lowcore.h:60:
+#include <asm/processor.h>

CHECK:SPACING: No space is necessary after a cast
#2808: FILE: include/asm-s390/lowcore.h:150:
+#define S390_lowcore (*((struct _lowcore *) 0))

ERROR:CODE_INDENT: code indent should use tabs where possible
#2843: FILE: include/asm-s390/processor.h:104:
+        regs->psw.mask  = PSW_USER_BITS;                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2843: FILE: include/asm-s390/processor.h:104:
+        regs->psw.mask  = PSW_USER_BITS;                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2844: FILE: include/asm-s390/processor.h:105:
+        regs->psw.addr  = new_psw | PSW_ADDR_AMODE31;           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2844: FILE: include/asm-s390/processor.h:105:
+        regs->psw.addr  = new_psw | PSW_ADDR_AMODE31;           \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2883: FILE: include/asm-s390/processor.h:191:
+        dw_psw->mask = PSW_BASE_BITS | PSW_MASK_WAIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2883: FILE: include/asm-s390/processor.h:191:
+        dw_psw->mask = PSW_BASE_BITS | PSW_MASK_WAIT;$

CHECK:SPACING: No space is necessary after a cast
#2986: FILE: include/asm-s390x/lowcore.h:171:
+#define S390_lowcore (*((struct _lowcore *) 0))

ERROR:CODE_INDENT: code indent should use tabs where possible
#3020: FILE: include/asm-s390x/processor.h:114:
+        regs->psw.mask  = PSW_USER_BITS;                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3020: FILE: include/asm-s390x/processor.h:114:
+        regs->psw.mask  = PSW_USER_BITS;                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3066: FILE: include/asm-s390x/processor.h:205:
+        dw_psw->mask = PSW_BASE_BITS | PSW_MASK_WAIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3066: FILE: include/asm-s390x/processor.h:205:
+        dw_psw->mask = PSW_BASE_BITS | PSW_MASK_WAIT;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433421.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 45 warnings, 183 checks, 2927 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433421.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
