WARNING:TYPO_SPELLING: 'an user' may be misspelled - perhaps 'a user'?
#55: 
total processes in the system and an user has got M processes, we should
                                  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#141: 
This patch is a forward port of the fairsched-2.4.19 patch by Rik van Riel, which

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#185: FILE: include/linux/sysctl.h:132:
+	KERN_FAIRSCHED=57,		/* turn per-user fair cpu scheduler on/off */
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#186: FILE: include/linux/sysctl.h:133:
+	KERN_MAX_TIMESLICE_USER=58,	/* maximum user timeslice */
 	                       ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#201: FILE: kernel/sched.c:40:
+int fairsched = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: kernel/sched.c:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#221: FILE: kernel/sched.c:330:
+	if(fairsched){

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: kernel/sched.c:330:
+	if(fairsched){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#221: FILE: kernel/sched.c:330:
+	if(fairsched){
+		/* special processing for per-user fair scheduler */
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#233: FILE: kernel/sched.c:1206:
+static struct user_struct fairsched_last_user = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required before the open parenthesis '('
#253: FILE: kernel/sched.c:1270:
+	if(fairsched) {

ERROR:SPACING: space required after that close brace '}'
#256: FILE: kernel/sched.c:1273:
+	}else

CHECK:BRACES: Unbalanced braces around else statement
#256: FILE: kernel/sched.c:1273:
+	}else

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#272: FILE: kernel/sched.c:1303:
+	extern struct list_head user_list;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: kernel/sched.c:1309:
+	if(!fairsched) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#278: FILE: kernel/sched.c:1309:
+	if(!fairsched) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#287: FILE: kernel/sched.c:1318:
+	if(user)

ERROR:SPACING: space required before the open parenthesis '('
#288: FILE: kernel/sched.c:1319:
+		if(user->time_slice > 0)

ERROR:SPACING: space required before the open parenthesis '('
#295: FILE: kernel/sched.c:1326:
+	if(!user)

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#296: FILE: kernel/sched.c:1327:
+		goto out:
 		        ^

ERROR:SPACING: space required before the open parenthesis '('
#303: FILE: kernel/sched.c:1334:
+	if(new_user_time_slice > MAX_TIMESLICE_USER)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#306: FILE: kernel/sched.c:1337:
+	if(old_user_time_slice != new_user_time_slice)
+			user->time_slice = new_user_time_slice;

ERROR:SPACING: space required before the open parenthesis '('
#306: FILE: kernel/sched.c:1337:
+	if(old_user_time_slice != new_user_time_slice)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#312: FILE: kernel/sched.c:1343:
+	list_add_tail(&user->uid_list,&uid_list);
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#312: FILE: kernel/sched.c:1343:
+	list_add_tail(&user->uid_list,&uid_list);
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#342: FILE: kernel/sched.c:1437:
+	if(fairsched && !next->user->time_slice){

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: kernel/sched.c:1437:
+	if(fairsched && !next->user->time_slice){

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#357: FILE: kernel/sysctl.c:60:
+extern int fairsched;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#358: FILE: kernel/sysctl.c:61:
+extern int max_timeslice_user;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#366: FILE: kernel/sysctl.c:268:
+	{KERN_FAIRSCHED, "fairsched", &fairsched, sizeof (int),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#368: FILE: kernel/sysctl.c:270:
+	{KERN_MAX_TIMESLICE_USER, "max_timeslice_user", &max_timeslice_user, sizeof (int),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380780.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 9 warnings, 2 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380780.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
