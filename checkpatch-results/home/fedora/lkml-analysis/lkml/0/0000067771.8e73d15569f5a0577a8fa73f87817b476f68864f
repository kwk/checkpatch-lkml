WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#105: FILE: arch/powerpc/platforms/cell/Kconfig:19:
+config CBE_RAS
+	bool "RAS features for bare metal Cell BE"
+	default y
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pregs"
#154: FILE: arch/powerpc/platforms/cell/pervasive.c:52:
+	if (pregs == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#300: FILE: arch/powerpc/platforms/cell/ras.c:1:
+#define DEBUG

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#308: FILE: arch/powerpc/platforms/cell/ras.c:9:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#315: FILE: arch/powerpc/platforms/cell/ras.c:16:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pregs"
#321: FILE: arch/powerpc/platforms/cell/ras.c:22:
+	if (pregs == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#327: FILE: arch/powerpc/platforms/cell/ras.c:28:
+	printk(KERN_ERR "Global Checkstop FIR    : 0x%016lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#329: FILE: arch/powerpc/platforms/cell/ras.c:30:
+	printk(KERN_ERR "Global Recoverable FIR  : 0x%016lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#331: FILE: arch/powerpc/platforms/cell/ras.c:32:
+	printk(KERN_ERR "Global MachineCheck FIR : 0x%016lx\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iregs"
#334: FILE: arch/powerpc/platforms/cell/ras.c:35:
+	if (iregs == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#336: FILE: arch/powerpc/platforms/cell/ras.c:37:
+	printk(KERN_ERR "IOC FIR                 : 0x%016lx\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#339: FILE: arch/powerpc/platforms/cell/ras.c:40:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#345: FILE: arch/powerpc/platforms/cell/ras.c:46:
+	printk(KERN_ERR "System Error Interrupt on CPU %d !\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#358: FILE: arch/powerpc/platforms/cell/ras.c:59:
+	printk(KERN_ERR "Unhandled Maintenance interrupt on CPU %d !\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#370: FILE: arch/powerpc/platforms/cell/ras.c:71:
+	printk(KERN_ERR "Unhandled Thermal interrupt on CPU %d !\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#378: FILE: arch/powerpc/platforms/cell/ras.c:79:
+	printk(KERN_ERR "Machine Check Interrupt on CPU %d !\n", cpu);

WARNING:MEMORY_BARRIER: memory barrier without comment
#397: FILE: arch/powerpc/platforms/cell/ras.c:98:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#404: FILE: arch/powerpc/platforms/cell/ras.c:105:
+	mb();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#417: FILE: arch/powerpc/platforms/cell/ras.h:1:
+#ifndef RAS_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: arch/powerpc/platforms/cell/ras.h:4:
+extern void cbe_system_error_exception(struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#421: FILE: arch/powerpc/platforms/cell/ras.h:5:
+extern void cbe_maintenance_exception(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: arch/powerpc/platforms/cell/ras.h:6:
+extern void cbe_thermal_exception(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#423: FILE: arch/powerpc/platforms/cell/ras.h:7:
+extern void cbe_ras_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#516: FILE: arch/powerpc/platforms/cell/pervasive.h:28:
+extern void cbe_pervasive_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#517: FILE: arch/powerpc/platforms/cell/pervasive.h:29:
+extern void cbe_system_error_exception(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#518: FILE: arch/powerpc/platforms/cell/pervasive.h:30:
+extern void cbe_maintenance_exception(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#519: FILE: arch/powerpc/platforms/cell/pervasive.h:31:
+extern void cbe_thermal_exception(struct pt_regs *regs);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#527: FILE: arch/powerpc/platforms/cell/cbe_regs.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#551: FILE: arch/powerpc/platforms/cell/cbe_regs.h:25:
+
+

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#587: FILE: arch/powerpc/platforms/cell/cbe_regs.h:61:
+	u8   pad_0x0898_0x0c00 [0x0c00 - 0x0898];		/* 0x0898 */

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#596: FILE: arch/powerpc/platforms/cell/cbe_regs.h:70:
+	u8   pad_0x0c28_0x1000 [0x1000 - 0x0c28];		/* 0x0c28 */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#599: FILE: arch/powerpc/platforms/cell/cbe_regs.h:73:
+extern struct cbe_pmd_regs __iomem *cbe_get_pmd_regs(struct device_node *np);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#600: FILE: arch/powerpc/platforms/cell/cbe_regs.h:74:
+extern struct cbe_pmd_regs __iomem *cbe_get_cpu_pmd_regs(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#647: FILE: arch/powerpc/platforms/cell/cbe_regs.h:121:
+extern struct cbe_iic_regs __iomem *cbe_get_iic_regs(struct device_node *np);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#648: FILE: arch/powerpc/platforms/cell/cbe_regs.h:122:
+extern struct cbe_iic_regs __iomem *cbe_get_cpu_iic_regs(int cpu);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#650: FILE: arch/powerpc/platforms/cell/cbe_regs.h:124:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#652: FILE: arch/powerpc/platforms/cell/cbe_regs.h:126:
+extern void cbe_regs_init(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#654: FILE: arch/powerpc/platforms/cell/cbe_regs.h:128:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#734: FILE: arch/powerpc/platforms/cell/interrupt.c:251:
+ ^I^Iiic->regs = ioremap(regs[0], sizeof(struct cbe_iic_thread_regs));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#734: FILE: arch/powerpc/platforms/cell/interrupt.c:251:
+ ^I^Iiic->regs = ioremap(regs[0], sizeof(struct cbe_iic_thread_regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: arch/powerpc/platforms/cell/interrupt.c:251:
+ ^I^Iiic->regs = ioremap(regs[0], sizeof(struct cbe_iic_thread_regs));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: arch/powerpc/platforms/cell/interrupt.c:256:
+ ^I^Iiic->regs = ioremap(regs[2], sizeof(struct cbe_iic_thread_regs));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#740: FILE: arch/powerpc/platforms/cell/interrupt.c:256:
+ ^I^Iiic->regs = ioremap(regs[2], sizeof(struct cbe_iic_thread_regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: arch/powerpc/platforms/cell/interrupt.c:256:
+ ^I^Iiic->regs = ioremap(regs[2], sizeof(struct cbe_iic_thread_regs));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#752: FILE: arch/powerpc/kernel/prom.c:2099:
 
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!intserv"
#773: FILE: arch/powerpc/kernel/prom.c:2120:
+		if (intserv == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#775: FILE: arch/powerpc/kernel/prom.c:2122:
+			u32 *reg = (u32 *)get_property(np, "reg", NULL);
+			if (reg == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reg"
#775: FILE: arch/powerpc/kernel/prom.c:2122:
+			if (reg == NULL)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#800: FILE: arch/powerpc/platforms/cell/cbe_regs.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#808: FILE: arch/powerpc/platforms/cell/cbe_regs.c:9:
+
+

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#813: FILE: arch/powerpc/platforms/cell/cbe_regs.c:14:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#814: FILE: arch/powerpc/platforms/cell/cbe_regs.c:15:
+#include <asm/pgtable.h>

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#841: FILE: arch/powerpc/platforms/cell/cbe_regs.c:42:
+} cbe_thread_map[NR_CPUS];

WARNING:LINE_SPACING: Missing a blank line after declarations
#856: FILE: arch/powerpc/platforms/cell/cbe_regs.c:57:
+	struct cbe_regs_map *map = cbe_find_map(np);
+	if (map == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#856: FILE: arch/powerpc/platforms/cell/cbe_regs.c:57:
+	if (map == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#864: FILE: arch/powerpc/platforms/cell/cbe_regs.c:65:
+	struct cbe_regs_map *map = cbe_thread_map[cpu].regs;
+	if (map == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#864: FILE: arch/powerpc/platforms/cell/cbe_regs.c:65:
+	if (map == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#869: FILE: arch/powerpc/platforms/cell/cbe_regs.c:70:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#873: FILE: arch/powerpc/platforms/cell/cbe_regs.c:74:
+	struct cbe_regs_map *map = cbe_find_map(np);
+	if (map == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#873: FILE: arch/powerpc/platforms/cell/cbe_regs.c:74:
+	if (map == NULL)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#877: FILE: arch/powerpc/platforms/cell/cbe_regs.c:78:
+}
+struct cbe_iic_regs __iomem *cbe_get_cpu_iic_regs(int cpu)

WARNING:LINE_SPACING: Missing a blank line after declarations
#880: FILE: arch/powerpc/platforms/cell/cbe_regs.c:81:
+	struct cbe_regs_map *map = cbe_thread_map[cpu].regs;
+	if (map == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#880: FILE: arch/powerpc/platforms/cell/cbe_regs.c:81:
+	if (map == NULL)

WARNING:REPEATED_WORD: Possible repeated word: 'die'
#898: FILE: arch/powerpc/platforms/cell/cbe_regs.c:99:
+		/* That hack must die die die ! */

WARNING:REPEATED_WORD: Possible repeated word: 'die'
#898: FILE: arch/powerpc/platforms/cell/cbe_regs.c:99:
+		/* That hack must die die die ! */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#902: FILE: arch/powerpc/platforms/cell/cbe_regs.c:103:
+		} __attribute__((packed)) *prop;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#904: FILE: arch/powerpc/platforms/cell/cbe_regs.c:105:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#906: FILE: arch/powerpc/platforms/cell/cbe_regs.c:107:
+			printk(KERN_ERR "cbe_regs: More BE chips than supported"

WARNING:SPLIT_STRING: quoted string split across lines
#907: FILE: arch/powerpc/platforms/cell/cbe_regs.c:108:
+			printk(KERN_ERR "cbe_regs: More BE chips than supported"
+			       "!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "prop"
#918: FILE: arch/powerpc/platforms/cell/cbe_regs.c:119:
+		if (prop != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "prop"
#923: FILE: arch/powerpc/platforms/cell/cbe_regs.c:124:
+		if (prop != NULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067771.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 30 warnings, 37 checks, 825 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067771.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
