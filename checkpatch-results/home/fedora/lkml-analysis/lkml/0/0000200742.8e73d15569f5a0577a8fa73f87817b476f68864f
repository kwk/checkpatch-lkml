WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#88: 
diff -Nuar linux-2.6.11.org/drivers/serial/jsm/jsm_driver.h linux-2.6.11.new/drivers/serial/jsm/jsm_driver.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: drivers/serial/jsm/jsm_driver.h:1:
+/************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/serial/jsm/jsm_driver.h:10:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/serial/jsm/jsm_driver.h:12:
+ * but WITHOUT ANY WARRANTY, EXPRESS OR IMPLIED; without even the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/serial/jsm/jsm_driver.h:13:
+ * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: drivers/serial/jsm/jsm_driver.h:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: drivers/serial/jsm/jsm_driver.h:16:
+ * You should have received a copy of the GNU General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/serial/jsm/jsm_driver.h:17:
+ * along with this program; if not, write to the Free Software $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#108: FILE: drivers/serial/jsm/jsm_driver.h:17:
+ * along with this program; if not, write to the Free Software $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#152: FILE: drivers/serial/jsm/jsm_driver.h:61:
+#define jsm_printk(nlevel, klevel, pdev, fmt, args...) \
+	if ((DBG_##nlevel & jsm_debug))  		\
+	dev_printk(KERN_##klevel, pdev->dev, fmt, ## args)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pdev' may be better as '(pdev)' to avoid precedence issues
#152: FILE: drivers/serial/jsm/jsm_driver.h:61:
+#define jsm_printk(nlevel, klevel, pdev, fmt, args...) \
+	if ((DBG_##nlevel & jsm_debug))  		\
+	dev_printk(KERN_##klevel, pdev->dev, fmt, ## args)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: drivers/serial/jsm/jsm_driver.h:62:
+^Iif ((DBG_##nlevel & jsm_debug))  ^I^I\$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#153: FILE: drivers/serial/jsm/jsm_driver.h:62:
+	if ((DBG_##nlevel & jsm_debug))  		\
+	dev_printk(KERN_##klevel, pdev->dev, fmt, ## args)

WARNING:SPACING: Unnecessary space before function pointer arguments
#215: FILE: drivers/serial/jsm/jsm_driver.h:124:
+	irqreturn_t (*intr) (int irq, void *voidbrd, struct pt_regs *regs);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#216: FILE: drivers/serial/jsm/jsm_driver.h:125:
+	void (*uart_init) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#217: FILE: drivers/serial/jsm/jsm_driver.h:126:
+	void (*uart_off) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#218: FILE: drivers/serial/jsm/jsm_driver.h:127:
+	void (*param) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#219: FILE: drivers/serial/jsm/jsm_driver.h:128:
+	void (*assert_modem_signals) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#220: FILE: drivers/serial/jsm/jsm_driver.h:129:
+	void (*flush_uart_write) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#221: FILE: drivers/serial/jsm/jsm_driver.h:130:
+	void (*flush_uart_read) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#222: FILE: drivers/serial/jsm/jsm_driver.h:131:
+	void (*disable_receiver) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#223: FILE: drivers/serial/jsm/jsm_driver.h:132:
+	void (*enable_receiver) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#224: FILE: drivers/serial/jsm/jsm_driver.h:133:
+	void (*send_break) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#225: FILE: drivers/serial/jsm/jsm_driver.h:134:
+	void (*clear_break) (struct jsm_channel *ch, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#225: FILE: drivers/serial/jsm/jsm_driver.h:134:
+	void (*clear_break) (struct jsm_channel *ch, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#226: FILE: drivers/serial/jsm/jsm_driver.h:135:
+	void (*send_start_character) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#227: FILE: drivers/serial/jsm/jsm_driver.h:136:
+	void (*send_stop_character) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#228: FILE: drivers/serial/jsm/jsm_driver.h:137:
+	void (*copy_data_from_queue_to_uart) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#229: FILE: drivers/serial/jsm/jsm_driver.h:138:
+	u32 (*get_uart_bytes_left) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#230: FILE: drivers/serial/jsm/jsm_driver.h:139:
+	void (*send_immediate_char) (struct jsm_channel *ch, unsigned char);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#230: FILE: drivers/serial/jsm/jsm_driver.h:139:
+	void (*send_immediate_char) (struct jsm_channel *ch, unsigned char);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#237: FILE: drivers/serial/jsm/jsm_driver.h:146:
+struct jsm_board
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#248: FILE: drivers/serial/jsm/jsm_driver.h:157:
+	spinlock_t	bd_intr_lock;	/* Used to protect the poller tasklet and

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#275: FILE: drivers/serial/jsm/jsm_driver.h:184:
+	char		*flipbuf;	/* Our flip buffer, alloced if board is found */
 	    		         	                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: drivers/serial/jsm/jsm_driver.h:196:
+/************************************************************************ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#316: FILE: drivers/serial/jsm/jsm_driver.h:225:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: drivers/serial/jsm/jsm_driver.h:226:
+/************************************************************************ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#373: FILE: drivers/serial/jsm/jsm_driver.h:282:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: drivers/serial/jsm/jsm_driver.h:295:
+/************************************************************************ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: drivers/serial/jsm/jsm_driver.h:300:
+ *^IW = read write^I^IR = read only^I^I^I^I* $

WARNING:TABSTOP: Statements should start on a tabstop
#396: FILE: drivers/serial/jsm/jsm_driver.h:305:
+	 u8 txrx;		/* WR	RHR/THR - Holding Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#397: FILE: drivers/serial/jsm/jsm_driver.h:306:
+	 u8 ier;		/* WR	IER - Interrupt Enable Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#398: FILE: drivers/serial/jsm/jsm_driver.h:307:
+	 u8 isr_fcr;		/* WR	ISR/FCR - Interrupt Status Reg/Fifo Control Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#399: FILE: drivers/serial/jsm/jsm_driver.h:308:
+	 u8 lcr;		/* WR	LCR - Line Control Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#400: FILE: drivers/serial/jsm/jsm_driver.h:309:
+	 u8 mcr;		/* WR	MCR - Modem Control Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#401: FILE: drivers/serial/jsm/jsm_driver.h:310:
+	 u8 lsr;		/* WR	LSR - Line Status Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#402: FILE: drivers/serial/jsm/jsm_driver.h:311:
+	 u8 msr;		/* WR	MSR - Modem Status Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#403: FILE: drivers/serial/jsm/jsm_driver.h:312:
+	 u8 spr;		/* WR	SPR - Scratch Pad Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#404: FILE: drivers/serial/jsm/jsm_driver.h:313:
+	 u8 fctr;		/* WR	FCTR - Feature Control Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#405: FILE: drivers/serial/jsm/jsm_driver.h:314:
+	 u8 efr;		/* WR	EFR - Enhanced Function Reg */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: drivers/serial/jsm/jsm_driver.h:315:
+^I u8 tfifo;^I^I/* WR^ITXCNT/TXTRG - Transmit FIFO Reg */^I$

WARNING:TABSTOP: Statements should start on a tabstop
#406: FILE: drivers/serial/jsm/jsm_driver.h:315:
+	 u8 tfifo;		/* WR	TXCNT/TXTRG - Transmit FIFO Reg */	

WARNING:TYPO_SPELLING: 'Recieve' may be misspelled - perhaps 'Receive'?
#407: FILE: drivers/serial/jsm/jsm_driver.h:316:
+	 u8 rfifo;		/* WR	RXCNT/RXTRG - Recieve FIFO Reg */
 	          		     	              ^^^^^^^

WARNING:TABSTOP: Statements should start on a tabstop
#407: FILE: drivers/serial/jsm/jsm_driver.h:316:
+	 u8 rfifo;		/* WR	RXCNT/RXTRG - Recieve FIFO Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#408: FILE: drivers/serial/jsm/jsm_driver.h:317:
+	 u8 xoffchar1;		/* WR	XOFF 1 - XOff Character 1 Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#409: FILE: drivers/serial/jsm/jsm_driver.h:318:
+	 u8 xoffchar2;		/* WR	XOFF 2 - XOff Character 2 Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#410: FILE: drivers/serial/jsm/jsm_driver.h:319:
+	 u8 xonchar1;		/* WR	XON 1 - Xon Character 1 Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#411: FILE: drivers/serial/jsm/jsm_driver.h:320:
+	 u8 xonchar2;		/* WR	XON 2 - XOn Character 2 Reg */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#529: FILE: drivers/serial/jsm/jsm_driver.h:438:
+int jsm_tty_init(struct jsm_board *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#530: FILE: drivers/serial/jsm/jsm_driver.h:439:
+int jsm_uart_port_init(struct jsm_board *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#531: FILE: drivers/serial/jsm/jsm_driver.h:440:
+int jsm_remove_uart_port(struct jsm_board *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#533: FILE: drivers/serial/jsm/jsm_driver.h:442:
+void jsm_tty_uninit(struct jsm_board *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device_driver *' should also have an identifier name
#539: FILE: drivers/serial/jsm/jsm_driver.h:448:
+void jsm_create_driver_sysfiles(struct device_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device_driver *' should also have an identifier name
#540: FILE: drivers/serial/jsm/jsm_driver.h:449:
+void jsm_remove_driver_sysfiles(struct device_driver *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: drivers/serial/jsm/jsm_driver.h:452:
+ * All structures for management ports of adapters^I^I^I* $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#605: FILE: drivers/serial/jsm/jsm_driver.h:514:
+#define DIGI_GETDD	('d'<<8) | 248		/* get driver info      */
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#605: FILE: drivers/serial/jsm/jsm_driver.h:514:
+#define DIGI_GETDD	('d'<<8) | 248		/* get driver info      */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#606: FILE: drivers/serial/jsm/jsm_driver.h:515:
+#define DIGI_GETBD	('d'<<8) | 249		/* get board info       */
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#606: FILE: drivers/serial/jsm/jsm_driver.h:515:
+#define DIGI_GETBD	('d'<<8) | 249		/* get board info       */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#607: FILE: drivers/serial/jsm/jsm_driver.h:516:
+#define DIGI_GET_NI_INFO ('d'<<8) | 250		/* nonintelligent state snfo */
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#607: FILE: drivers/serial/jsm/jsm_driver.h:516:
+#define DIGI_GET_NI_INFO ('d'<<8) | 250		/* nonintelligent state snfo */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200742.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 46 warnings, 7 checks, 518 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200742.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
