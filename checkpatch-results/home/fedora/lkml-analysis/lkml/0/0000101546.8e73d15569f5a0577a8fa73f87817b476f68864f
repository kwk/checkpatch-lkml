CHECK:SPACING: No space is necessary after a cast
#56: FILE: drivers/scsi/libata-scsi.c:417:
+	struct ata_port *ap = (struct ata_port *) &sdev->host->hostdata[0];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#82: FILE: drivers/scsi/libata-core.c:4348:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/linux/libata.h:504:
+extern int ata_scsi_device_shutdown(struct scsi_device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#109: FILE: include/linux/libata.h:504:
+extern int ata_scsi_device_shutdown(struct scsi_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: include/linux/libata.h:507:
+extern int ata_device_shutdown(struct ata_port *, struct ata_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_port *' should also have an identifier name
#112: FILE: include/linux/libata.h:507:
+extern int ata_device_shutdown(struct ata_port *, struct ata_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#112: FILE: include/linux/libata.h:507:
+extern int ata_device_shutdown(struct ata_port *, struct ata_device *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: drivers/scsi/scsi_sysfs.c:305:
+static void scsi_bus_shutdown(struct device * dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#130: FILE: drivers/scsi/scsi_sysfs.c:313:
+		printk(KERN_DEBUG "%s: error (0x%x) during shutdown\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/scsi/scsi_sysfs.c:314:
+		printk(KERN_DEBUG "%s: error (0x%x) during shutdown\n",
+			__FUNCTION__, err);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#131: FILE: drivers/scsi/scsi_sysfs.c:314:
+			__FUNCTION__, err);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_device *' should also have an identifier name
#152: FILE: include/scsi/scsi_host.h:304:
+	int (*shutdown)(struct scsi_device *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000101546.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 6 warnings, 5 checks, 106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000101546.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
