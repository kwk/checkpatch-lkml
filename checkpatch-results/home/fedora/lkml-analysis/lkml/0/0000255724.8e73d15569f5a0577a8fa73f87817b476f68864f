WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#54: FILE: kernel/cpu.c:159:
+	BUG_ON(notifier_call_chain(&cpu_chain, CPU_DEAD, (void *)(long)cpu)

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#65: FILE: kernel/cpu.c:205:
+	BUG_ON(!cpu_online(cpu));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#76: FILE: kernel/exit.c:506:
+	BUG_ON(mm != tsk->active_mm);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#89: FILE: kernel/exit.c:880:
+	BUG_ON(!p->sighand);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#90: FILE: kernel/exit.c:881:
+	BUG_ON(!spin_is_locked(&p->sighand->siglock) &&

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#90: FILE: kernel/exit.c:881:
+	BUG_ON(!spin_is_locked(&p->sighand->siglock) &&

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: kernel/exit.c:882:
+	BUG_ON(!spin_is_locked(&p->sighand->siglock) &&
+				!rwlock_is_locked(&tasklist_lock));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#101: FILE: kernel/exit.c:1350:
+		BUG_ON(tsk->signal != current->signal);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#113: FILE: kernel/fork.c:812:
+	BUG_ON(!files);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: kernel/module.c:658:
+	BUG_ON(!__find_symbol(symbol, &owner, &crc, 1));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#135: FILE: kernel/module.c:669:
+	BUG_ON(!kernel_text_address((unsigned long)addr));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#145: FILE: kernel/module.c:906:
+	BUG_ON(!__find_symbol("struct_module", &owner, &crc, 1));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: kernel/power/pm.c:159:
+	BUG_ON(in_interrupt());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#169: FILE: kernel/printk.c:421:
+	BUG_ON(((long)(start - end)) > 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#179: FILE: kernel/printk.c:598:
+	BUG_ON(in_interrupt());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#191: FILE: kernel/ptrace.c:31:
+	BUG_ON(!list_empty(&child->ptrace_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#201: FILE: kernel/ptrace.c:48:
+	BUG_ON(!child->ptrace);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#215: FILE: kernel/signal.c:349:
+	BUG_ON(!sig);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#216: FILE: kernel/signal.c:350:
+	BUG_ON(!atomic_read(&sig->count));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#226: FILE: kernel/signal.c:817:
+	BUG_ON(!irqs_disabled());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#230: FILE: kernel/signal.c:819:
+	BUG_ON(!spin_is_locked(&t->sighand->siglock));

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#230: FILE: kernel/signal.c:819:
+	BUG_ON(!spin_is_locked(&t->sighand->siglock));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#240: FILE: kernel/signal.c:1007:
+	BUG_ON(!spin_is_locked(&p->sighand->siglock));

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#240: FILE: kernel/signal.c:1007:
+	BUG_ON(!spin_is_locked(&p->sighand->siglock));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#250: FILE: kernel/signal.c:1376:
+		BUG_ON(q->info.si_code != SI_TIMER);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#260: FILE: kernel/signal.c:1422:
+		BUG_ON(q->info.si_code != SI_TIMER);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#270: FILE: kernel/signal.c:1470:
+		BUG_ON(tsk->signal != parent->signal);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#280: FILE: kernel/signal.c:1485:
+	BUG_ON(sig == -1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#292: FILE: kernel/softirq.c:243:
+				BUG_ON(!test_and_clear_bit(TASKLET_STATE_SCHED, &t->state));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#302: FILE: kernel/softirq.c:275:
+				BUG_ON(!test_and_clear_bit(TASKLET_STATE_SCHED, &t->state));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#314: FILE: kernel/timer.c:1377:
+	BUG_ON(old_base->running_timer);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 30 warnings, 1 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
