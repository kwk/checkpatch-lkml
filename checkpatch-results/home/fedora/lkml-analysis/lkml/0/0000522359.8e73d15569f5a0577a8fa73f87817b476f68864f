WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#35: 
I think this code may be usefull for novices. Please test.
                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix 'scripts' exists, appears to be a -p0 patch

ERROR:SPACING: space prohibited after that open parenthesis '('
#79: FILE: tkcond.c:287:
+static int ynm_strcmp( const char *s1, const char *s2)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: tkcond.c:289:
+    if ( !strcmp( s2, "CONSTANT_N") )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#81: FILE: tkcond.c:289:
+    if ( !strcmp( s2, "CONSTANT_N") )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#81: FILE: tkcond.c:289:
+    if ( !strcmp( s2, "CONSTANT_N") )

ERROR:SPACING: space prohibited after that open parenthesis '('
#82: FILE: tkcond.c:290:
+	return strcmp( s1, "n" ) && strcmp( s1, "N" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#82: FILE: tkcond.c:290:
+	return strcmp( s1, "n" ) && strcmp( s1, "N" );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: tkcond.c:291:
+    else if ( !strcmp( s2, "CONSTANT_M") )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#83: FILE: tkcond.c:291:
+    else if ( !strcmp( s2, "CONSTANT_M") )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#83: FILE: tkcond.c:291:
+    else if ( !strcmp( s2, "CONSTANT_M") )

ERROR:SPACING: space prohibited after that open parenthesis '('
#84: FILE: tkcond.c:292:
+	return strcmp( s1, "m" ) && strcmp( s1, "M" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#84: FILE: tkcond.c:292:
+	return strcmp( s1, "m" ) && strcmp( s1, "M" );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: tkcond.c:293:
+    else if ( !strcmp( s2, "CONSTANT_Y") )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#85: FILE: tkcond.c:293:
+    else if ( !strcmp( s2, "CONSTANT_Y") )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#85: FILE: tkcond.c:293:
+    else if ( !strcmp( s2, "CONSTANT_Y") )

ERROR:SPACING: space prohibited after that open parenthesis '('
#86: FILE: tkcond.c:294:
+	return strcmp( s1, "y" ) && strcmp( s1, "Y" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#86: FILE: tkcond.c:294:
+	return strcmp( s1, "y" ) && strcmp( s1, "Y" );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: tkcond.c:295:
+    else if ( !strcmp( s2, "CONSTANT_E") )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#87: FILE: tkcond.c:295:
+    else if ( !strcmp( s2, "CONSTANT_E") )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#87: FILE: tkcond.c:295:
+    else if ( !strcmp( s2, "CONSTANT_E") )

ERROR:SPACING: space prohibited after that open parenthesis '('
#88: FILE: tkcond.c:296:
+	return strcmp( s1, "" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#88: FILE: tkcond.c:296:
+	return strcmp( s1, "" );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: tkcond.c:297:
+    else$

ERROR:SPACING: space prohibited after that open parenthesis '('
#90: FILE: tkcond.c:298:
+	return strcmp( s1, s2 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#90: FILE: tkcond.c:298:
+	return strcmp( s1, s2 );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#93: FILE: tkcond.c:301:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: tkcond.c:306:
+ * Eliminating parts of conditions with ARCH = <not current> $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#103: FILE: tkcond.c:309:
+static struct condition *parse_eliminate_part( struct condition *list )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#103: FILE: tkcond.c:309:
+static struct condition *parse_eliminate_part( struct condition *list )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: tkcond.c:311:
+    struct condition *cond1a = list, *cond1b = NULL, *cond1c = NULL;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#116: FILE: tkcond.c:324:
+	if ( cond1c->op == op_constant )
 	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#116: FILE: tkcond.c:324:
+	if ( cond1c->op == op_constant )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#116: FILE: tkcond.c:324:
+	if ( cond1c->op == op_constant )

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#131: FILE: tkcond.c:331:
 	    else if ( (cond1b->op == op_neq && strcmp( cond1c->str, current_arch ))
+		 || (cond1b->op == op_eq && ! strcmp( cond1c->str, current_arch )) )

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#131: FILE: tkcond.c:331:
+		 || (cond1b->op == op_eq && ! strcmp( cond1c->str, current_arch )) )
 		                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#131: FILE: tkcond.c:331:
+		 || (cond1b->op == op_eq && ! strcmp( cond1c->str, current_arch )) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#131: FILE: tkcond.c:331:
+		 || (cond1b->op == op_eq && ! strcmp( cond1c->str, current_arch )) )

WARNING:TABSTOP: Statements should start on a tabstop
#138: FILE: tkcond.c:334:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#138: FILE: tkcond.c:334:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )
+	    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#138: FILE: tkcond.c:334:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#138: FILE: tkcond.c:334:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )

WARNING:TABSTOP: Statements should start on a tabstop
#139: FILE: tkcond.c:335:
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#142: FILE: tkcond.c:338:
+		free_cond( cond1a );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#142: FILE: tkcond.c:338:
+		free_cond( cond1a );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: tkcond.c:342:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: tkcond.c:343:
+    else if ( cond1a->op == op_variable && ! vartable[cond1a->nameindex].defined )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#148: FILE: tkcond.c:343:
+    else if ( cond1a->op == op_variable && ! vartable[cond1a->nameindex].defined )
+    {

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#148: FILE: tkcond.c:343:
+    else if ( cond1a->op == op_variable && ! vartable[cond1a->nameindex].defined )
                                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#148: FILE: tkcond.c:343:
+    else if ( cond1a->op == op_variable && ! vartable[cond1a->nameindex].defined )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#148: FILE: tkcond.c:343:
+    else if ( cond1a->op == op_variable && ! vartable[cond1a->nameindex].defined )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#148: FILE: tkcond.c:343:
+    }
+    else if ( cond1a->op == op_variable && ! vartable[cond1a->nameindex].defined )

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: tkcond.c:344:
+    {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#150: FILE: tkcond.c:345:
+	cond1b = cond1a->next; if ( cond1b == NULL ) goto done;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#150: FILE: tkcond.c:345:
+	cond1b = cond1a->next; if ( cond1b == NULL ) goto done;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cond1b"
#150: FILE: tkcond.c:345:
+	cond1b = cond1a->next; if ( cond1b == NULL ) goto done;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#151: FILE: tkcond.c:346:
+	cond1c = cond1b->next; if ( cond1c == NULL ) goto done;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#151: FILE: tkcond.c:346:
+	cond1c = cond1b->next; if ( cond1c == NULL ) goto done;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cond1c"
#151: FILE: tkcond.c:346:
+	cond1c = cond1b->next; if ( cond1c == NULL ) goto done;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#152: FILE: tkcond.c:347:
+	if ( cond1c->op == op_constant )
 	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#152: FILE: tkcond.c:347:
+	if ( cond1c->op == op_constant )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#152: FILE: tkcond.c:347:
+	if ( cond1c->op == op_constant )

WARNING:TABSTOP: Statements should start on a tabstop
#156: FILE: tkcond.c:349:
+	    if ( (cond1b->op == op_eq && strcmp( cond1c->str, "" ))

ERROR:SPACING: space prohibited after that open parenthesis '('
#156: FILE: tkcond.c:349:
+	    if ( (cond1b->op == op_eq && strcmp( cond1c->str, "" ))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#156: FILE: tkcond.c:349:
+	    if ( (cond1b->op == op_eq && strcmp( cond1c->str, "" ))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#157: FILE: tkcond.c:350:
+	    if ( (cond1b->op == op_eq && strcmp( cond1c->str, "" ))
+	    ||   (cond1b->op == op_neq && ! strcmp( cond1c->str, "" )) )

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#157: FILE: tkcond.c:350:
+	    ||   (cond1b->op == op_neq && ! strcmp( cond1c->str, "" )) )
 	                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#157: FILE: tkcond.c:350:
+	    ||   (cond1b->op == op_neq && ! strcmp( cond1c->str, "" )) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#157: FILE: tkcond.c:350:
+	    ||   (cond1b->op == op_neq && ! strcmp( cond1c->str, "" )) )

WARNING:TABSTOP: Statements should start on a tabstop
#159: FILE: tkcond.c:352:
+	    else if ( (cond1b->op == op_neq && strcmp( cond1c->str, "" ))

ERROR:SPACING: space prohibited after that open parenthesis '('
#159: FILE: tkcond.c:352:
+	    else if ( (cond1b->op == op_neq && strcmp( cond1c->str, "" ))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#159: FILE: tkcond.c:352:
+	    else if ( (cond1b->op == op_neq && strcmp( cond1c->str, "" ))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#160: FILE: tkcond.c:353:
+	    else if ( (cond1b->op == op_neq && strcmp( cond1c->str, "" ))
+	    ||   (cond1b->op == op_eq && ! strcmp( cond1c->str, "" )) )

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#160: FILE: tkcond.c:353:
+	    ||   (cond1b->op == op_eq && ! strcmp( cond1c->str, "" )) )
 	                                 ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#160: FILE: tkcond.c:353:
+	    ||   (cond1b->op == op_eq && ! strcmp( cond1c->str, "" )) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#160: FILE: tkcond.c:353:
+	    ||   (cond1b->op == op_eq && ! strcmp( cond1c->str, "" )) )

WARNING:TABSTOP: Statements should start on a tabstop
#162: FILE: tkcond.c:355:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )

ERROR:SPACING: space prohibited after that open parenthesis '('
#162: FILE: tkcond.c:355:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#162: FILE: tkcond.c:355:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: tkcond.c:363:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: tkcond.c:364:
+    else if ( cond1a->op == op_variable$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#177: FILE: tkcond.c:364:
+    else if ( cond1a->op == op_variable
+         && vartable[cond1a->nameindex].constant == 1 )
+    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#177: FILE: tkcond.c:364:
+    else if ( cond1a->op == op_variable

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#177: FILE: tkcond.c:364:
+    }
+    else if ( cond1a->op == op_variable

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: tkcond.c:365:
+         && vartable[cond1a->nameindex].constant == 1 )$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#178: FILE: tkcond.c:365:
+    else if ( cond1a->op == op_variable
+         && vartable[cond1a->nameindex].constant == 1 )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: tkcond.c:365:
+         && vartable[cond1a->nameindex].constant == 1 )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#178: FILE: tkcond.c:365:
+         && vartable[cond1a->nameindex].constant == 1 )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: tkcond.c:366:
+    {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#180: FILE: tkcond.c:367:
+	cond1b = cond1a->next; if ( cond1b == NULL ) goto done;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#180: FILE: tkcond.c:367:
+	cond1b = cond1a->next; if ( cond1b == NULL ) goto done;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cond1b"
#180: FILE: tkcond.c:367:
+	cond1b = cond1a->next; if ( cond1b == NULL ) goto done;

ERROR:SPACING: space prohibited after that open parenthesis '('
#181: FILE: tkcond.c:368:
+	cond1c = cond1b->next; if ( cond1c == NULL ) goto done;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#181: FILE: tkcond.c:368:
+	cond1c = cond1b->next; if ( cond1c == NULL ) goto done;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cond1c"
#181: FILE: tkcond.c:368:
+	cond1c = cond1b->next; if ( cond1c == NULL ) goto done;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#182: FILE: tkcond.c:369:
+	if ( cond1c->op == op_constant  )
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#182: FILE: tkcond.c:369:
+	if ( cond1c->op == op_constant  )
+	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#182: FILE: tkcond.c:369:
+	if ( cond1c->op == op_constant  )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#182: FILE: tkcond.c:369:
+	if ( cond1c->op == op_constant  )

WARNING:TABSTOP: Statements should start on a tabstop
#184: FILE: tkcond.c:371:
+	    if ( (cond1b->op == op_eq

ERROR:SPACING: space prohibited after that open parenthesis '('
#184: FILE: tkcond.c:371:
+	    if ( (cond1b->op == op_eq

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: tkcond.c:372:
+^I         && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#185: FILE: tkcond.c:372:
+	    if ( (cond1b->op == op_eq
+	         && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))

ERROR:SPACING: space prohibited after that open parenthesis '('
#185: FILE: tkcond.c:372:
+	         && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#185: FILE: tkcond.c:372:
+	         && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#186: FILE: tkcond.c:373:
+	         && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))
+	    ||   (cond1b->op == op_neq

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: tkcond.c:374:
+^I         && ! ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value )) )$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#187: FILE: tkcond.c:374:
+	    ||   (cond1b->op == op_neq
+	         && ! ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value )) )

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#187: FILE: tkcond.c:374:
+	         && ! ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value )) )
 	            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#187: FILE: tkcond.c:374:
+	         && ! ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value )) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#187: FILE: tkcond.c:374:
+	         && ! ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value )) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: tkcond.c:375:
+^I^I/* This is for another value than the defined for this variable */ $

WARNING:TABSTOP: Statements should start on a tabstop
#190: FILE: tkcond.c:377:
+	    else if ( (cond1b->op == op_neq

ERROR:SPACING: space prohibited after that open parenthesis '('
#190: FILE: tkcond.c:377:
+	    else if ( (cond1b->op == op_neq

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: tkcond.c:378:
+^I              && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#191: FILE: tkcond.c:378:
+	    else if ( (cond1b->op == op_neq
+	              && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))

ERROR:SPACING: space prohibited after that open parenthesis '('
#191: FILE: tkcond.c:378:
+	              && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#191: FILE: tkcond.c:378:
+	              && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#192: FILE: tkcond.c:379:
+	              && ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value ))
+		 ||   (cond1b->op == op_eq

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#193: FILE: tkcond.c:380:
+		 ||   (cond1b->op == op_eq
+		      && ! ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value )) )

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#193: FILE: tkcond.c:380:
+		      && ! ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value )) )
 		         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#193: FILE: tkcond.c:380:
+		      && ! ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value )) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#193: FILE: tkcond.c:380:
+		      && ! ynm_strcmp( cond1c->str, vartable[cond1a->nameindex].value )) )

WARNING:TABSTOP: Statements should start on a tabstop
#196: FILE: tkcond.c:383:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )

ERROR:SPACING: space prohibited after that open parenthesis '('
#196: FILE: tkcond.c:383:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#196: FILE: tkcond.c:383:
+	    if ( cond1b->op == op_eq || cond1b->op == op_neq )

ERROR:SPACING: space prohibited after that open parenthesis '('
#205: FILE: tkcond.c:387:
+		free_cond( cond1a );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#205: FILE: tkcond.c:387:
+		free_cond( cond1a );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: tkcond.c:391:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: tkcond.c:393:
+    return list;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#215: FILE: tkcond.c:396:
+
+

WARNING:TYPO_SPELLING: 'expresion' may be misspelled - perhaps 'expression'?
#218: FILE: tkcond.c:399:
+ * Extracting an expresion from condition; returns its last element.
                  ^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#220: FILE: tkcond.c:401:
+static struct condition *xtract_expr( struct condition *list )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#220: FILE: tkcond.c:401:
+static struct condition *xtract_expr( struct condition *list )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: tkcond.c:403:
+    struct condition *conda, *condb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: tkcond.c:405:
+    if ( list->op == op_true || list->op == op_false )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#224: FILE: tkcond.c:405:
+    if ( list->op == op_true || list->op == op_false )
+    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#224: FILE: tkcond.c:405:
+    if ( list->op == op_true || list->op == op_false )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#224: FILE: tkcond.c:405:
+    if ( list->op == op_true || list->op == op_false )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: tkcond.c:406:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: tkcond.c:409:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: tkcond.c:410:
+    else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#229: FILE: tkcond.c:410:
+    else
+    {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#229: FILE: tkcond.c:410:
+    }
+    else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: tkcond.c:411:
+    {$

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#231: FILE: tkcond.c:412:
+	conda = list->next; if ( ! conda ) return list;
 	                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#231: FILE: tkcond.c:412:
+	conda = list->next; if ( ! conda ) return list;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#231: FILE: tkcond.c:412:
+	conda = list->next; if ( ! conda ) return list;

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#232: FILE: tkcond.c:413:
+	condb = conda->next; if ( ! condb ) return list;
 	                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#232: FILE: tkcond.c:413:
+	condb = conda->next; if ( ! condb ) return list;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#232: FILE: tkcond.c:413:
+	condb = conda->next; if ( ! condb ) return list;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#233: FILE: tkcond.c:414:
+	if ( list->op == op_variable
[...]
 	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#233: FILE: tkcond.c:414:
+	if ( list->op == op_variable

CHECK:BRACES: braces {} should be used on all arms of this statement
#233: FILE: tkcond.c:414:
+	if ( list->op == op_variable
[...]
+	    return condb;
[...]
-		    /* Expression too complex - don't touch */
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#234: FILE: tkcond.c:415:
+	if ( list->op == op_variable
+	&&   ( conda->op == op_eq || conda->op == op_neq )

ERROR:SPACING: space prohibited after that open parenthesis '('
#234: FILE: tkcond.c:415:
+	&&   ( conda->op == op_eq || conda->op == op_neq )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#234: FILE: tkcond.c:415:
+	&&   ( conda->op == op_eq || conda->op == op_neq )

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#235: FILE: tkcond.c:416:
+	&&   ( conda->op == op_eq || conda->op == op_neq )
+	&&   ( condb->op == op_constant || condb->op == op_variable ) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#235: FILE: tkcond.c:416:
+	&&   ( condb->op == op_constant || condb->op == op_variable ) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#235: FILE: tkcond.c:416:
+	&&   ( condb->op == op_constant || condb->op == op_variable ) )

WARNING:TABSTOP: Statements should start on a tabstop
#239: FILE: tkcond.c:418:
+	    return condb;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#241: FILE: tkcond.c:420:
+	else if ( list->op == op_lparen )
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#241: FILE: tkcond.c:420:
+	else if ( list->op == op_lparen )
+	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#241: FILE: tkcond.c:420:
+	else if ( list->op == op_lparen )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#241: FILE: tkcond.c:420:
+	else if ( list->op == op_lparen )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#241: FILE: tkcond.c:420:
+	}
+	else if ( list->op == op_lparen )

WARNING:TABSTOP: Statements should start on a tabstop
#243: FILE: tkcond.c:422:
+	    int level = 1;

WARNING:TABSTOP: Statements should start on a tabstop
#244: FILE: tkcond.c:423:
+	    for ( conda = list->next, condb = list; level > 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#244: FILE: tkcond.c:423:
+	    int level = 1;
+	    for ( conda = list->next, condb = list; level > 0;

ERROR:SPACING: space prohibited after that open parenthesis '('
#244: FILE: tkcond.c:423:
+	    for ( conda = list->next, condb = list; level > 0;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#245: FILE: tkcond.c:424:
+		  condb = conda, conda = condb->next )

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#264: FILE: tkcond.c:426:
+		if ( ! conda )
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#264: FILE: tkcond.c:426:
+		if ( ! conda )
+		{

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#264: FILE: tkcond.c:426:
+		if ( ! conda )
 		     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#264: FILE: tkcond.c:426:
+		if ( ! conda )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#264: FILE: tkcond.c:426:
+		if ( ! conda )

ERROR:SPACING: space prohibited after that open parenthesis '('
#266: FILE: tkcond.c:428:
+		    fprintf( stderr, "error in condition: brackets not paired\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#266: FILE: tkcond.c:428:
+		    fprintf( stderr, "error in condition: brackets not paired\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#267: FILE: tkcond.c:429:
+		    exit( 1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#267: FILE: tkcond.c:429:
+		    exit( 1 );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#282: FILE: tkcond.c:431:
+		else if ( conda->op == op_lparen )
+		    level ++;

ERROR:SPACING: space prohibited after that open parenthesis '('
#282: FILE: tkcond.c:431:
+		else if ( conda->op == op_lparen )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#282: FILE: tkcond.c:431:
+		else if ( conda->op == op_lparen )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#282: FILE: tkcond.c:431:
 		}
+		else if ( conda->op == op_lparen )

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#283: FILE: tkcond.c:432:
+		    level ++;
 		          ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#284: FILE: tkcond.c:433:
+		else if ( conda->op == op_rparen )
+		    level --;

ERROR:SPACING: space prohibited after that open parenthesis '('
#284: FILE: tkcond.c:433:
+		else if ( conda->op == op_rparen )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#284: FILE: tkcond.c:433:
+		else if ( conda->op == op_rparen )

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#285: FILE: tkcond.c:434:
+		    level --;
 		          ^

WARNING:TABSTOP: Statements should start on a tabstop
#287: FILE: tkcond.c:436:
+	    return condb;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#289: FILE: tkcond.c:438:
+	else
+	    return NULL;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#289: FILE: tkcond.c:438:
 	}
+	else

WARNING:TABSTOP: Statements should start on a tabstop
#290: FILE: tkcond.c:439:
+	    return NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#295: FILE: tkcond.c:443:
+
+

WARNING:TYPO_SPELLING: 'expresion' may be misspelled - perhaps 'expression'?
#298: FILE: tkcond.c:446:
+ * Removing an expresion from beginning of the condition.
                ^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#300: FILE: tkcond.c:448:
+static struct condition *skip_expr( struct condition *list )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#300: FILE: tkcond.c:448:
+static struct condition *skip_expr( struct condition *list )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: tkcond.c:450:
+    struct condition *conda, *condb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: tkcond.c:452:
+    condb = xtract_expr( list );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#304: FILE: tkcond.c:452:
+    condb = xtract_expr( list );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#304: FILE: tkcond.c:452:
+    condb = xtract_expr( list );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: tkcond.c:453:
+    if ( condb )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#305: FILE: tkcond.c:453:
+    if ( condb )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#305: FILE: tkcond.c:453:
+    if ( condb )

ERROR:SPACING: space prohibited after that open parenthesis '('
#312: FILE: tkcond.c:457:
+	free_cond( list );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#312: FILE: tkcond.c:457:
+	free_cond( list );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: tkcond.c:459:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: tkcond.c:460:
+    return list;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: tkcond.c:463:
 
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#327: FILE: tkcond.c:470:
+static struct condition *skip_one_back( struct condition **cond, struct condition *list )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#327: FILE: tkcond.c:470:
+static struct condition *skip_one_back( struct condition **cond, struct condition *list )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: tkcond.c:472:
+    struct condition *conda, *condb, *prev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: tkcond.c:474:
+    for ( conda = list; conda; prev = conda, conda = conda->next )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#331: FILE: tkcond.c:474:
+    for ( conda = list; conda; prev = conda, conda = conda->next )
+    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#331: FILE: tkcond.c:474:
+    for ( conda = list; conda; prev = conda, conda = conda->next )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#331: FILE: tkcond.c:474:
+    for ( conda = list; conda; prev = conda, conda = conda->next )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: tkcond.c:475:
+    {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#333: FILE: tkcond.c:476:
+	if ( conda->op == op_lparen || conda->op == op_variable ||
[...]
 	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#333: FILE: tkcond.c:476:
+	if ( conda->op == op_lparen || conda->op == op_variable ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: tkcond.c:477:
+	if ( conda->op == op_lparen || conda->op == op_variable ||
+	     conda->op == op_true || conda->op == op_false )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#334: FILE: tkcond.c:477:
+	     conda->op == op_true || conda->op == op_false )

ERROR:SPACING: space prohibited after that open parenthesis '('
#337: FILE: tkcond.c:479:
+	    condb = xtract_expr( conda );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#337: FILE: tkcond.c:479:
+	    condb = xtract_expr( conda );

WARNING:TABSTOP: Statements should start on a tabstop
#338: FILE: tkcond.c:480:
+	    if ( condb && condb->next == *cond )

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#338: FILE: tkcond.c:480:
+	    if ( condb && condb->next == *cond )
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#338: FILE: tkcond.c:480:
+	    if ( condb && condb->next == *cond )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#338: FILE: tkcond.c:480:
+	    if ( condb && condb->next == *cond )

WARNING:TABSTOP: Statements should start on a tabstop
#339: FILE: tkcond.c:481:
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#342: FILE: tkcond.c:484:
+	    }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: tkcond.c:486:
+    }^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: tkcond.c:486:
+    }^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: tkcond.c:487:
+    return NULL;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#348: FILE: tkcond.c:490:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#355: FILE: tkcond.c:497:
+static struct condition *skip_conj_back( struct condition **cond, struct condition *list )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#355: FILE: tkcond.c:497:
+static struct condition *skip_conj_back( struct condition **cond, struct condition *list )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: tkcond.c:499:
+    struct condition *prev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: tkcond.c:501:
+    {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#360: FILE: tkcond.c:502:
+	prev = skip_one_back( cond, list );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#360: FILE: tkcond.c:502:
+	prev = skip_one_back( cond, list );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: tkcond.c:503:
+    } while ( *cond && (*cond)->op == op_and );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#361: FILE: tkcond.c:503:
+    } while ( *cond && (*cond)->op == op_and );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#361: FILE: tkcond.c:503:
+    } while ( *cond && (*cond)->op == op_and );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: tkcond.c:504:
+    return prev;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#365: FILE: tkcond.c:507:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#370: FILE: tkcond.c:512:
+static struct condition *eliminate_unneeded( struct condition *list, int level )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#370: FILE: tkcond.c:512:
+static struct condition *eliminate_unneeded( struct condition *list, int level )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: tkcond.c:514:
+    struct condition *conda = list, *condb = NULL, *condc = NULL, *prev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: tkcond.c:515:
+    int start, eliminated = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: tkcond.c:517:
+    list = parse_eliminate_part( list );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#375: FILE: tkcond.c:517:
+    list = parse_eliminate_part( list );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#375: FILE: tkcond.c:517:
+    list = parse_eliminate_part( list );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: tkcond.c:518:
+    for ( conda = list; conda && conda->next; conda = conda->next )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#376: FILE: tkcond.c:518:
+    for ( conda = list; conda && conda->next; conda = conda->next )
+    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#376: FILE: tkcond.c:518:
+    for ( conda = list; conda && conda->next; conda = conda->next )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#376: FILE: tkcond.c:518:
+    for ( conda = list; conda && conda->next; conda = conda->next )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: tkcond.c:519:
+    {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#378: FILE: tkcond.c:520:
+	if ( conda->op == op_and || conda->op == op_or
[...]
+	    conda->next = parse_eliminate_part( conda->next );

ERROR:SPACING: space prohibited after that open parenthesis '('
#378: FILE: tkcond.c:520:
+	if ( conda->op == op_and || conda->op == op_or

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#379: FILE: tkcond.c:521:
+	if ( conda->op == op_and || conda->op == op_or
+	||   conda->op == op_lparen )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#379: FILE: tkcond.c:521:
+	||   conda->op == op_lparen )

ERROR:SPACING: space prohibited after that open parenthesis '('
#380: FILE: tkcond.c:522:
+	    conda->next = parse_eliminate_part( conda->next );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#380: FILE: tkcond.c:522:
+	    conda->next = parse_eliminate_part( conda->next );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: tkcond.c:523:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: tkcond.c:524:
+    while (eliminated)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#382: FILE: tkcond.c:524:
+    while (eliminated)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: tkcond.c:525:
+    {$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#386: FILE: tkcond.c:528:
+	for ( conda = list; conda && conda->next;
+	      prev = conda, conda = conda->next, start = 0 )
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#386: FILE: tkcond.c:528:
+	for ( conda = list; conda && conda->next;
[...]
+repeat:

ERROR:SPACING: space prohibited after that open parenthesis '('
#386: FILE: tkcond.c:528:
+	for ( conda = list; conda && conda->next;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#387: FILE: tkcond.c:529:
+	      prev = conda, conda = conda->next, start = 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#390: FILE: tkcond.c:532:
+	    condb = conda->next; if ( condb == NULL ) goto done;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#390: FILE: tkcond.c:532:
+	    condb = conda->next; if ( condb == NULL ) goto done;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!condb"
#390: FILE: tkcond.c:532:
+	    condb = conda->next; if ( condb == NULL ) goto done;

ERROR:SPACING: space prohibited after that open parenthesis '('
#391: FILE: tkcond.c:533:
+	    condc = condb->next; if ( condc == NULL ) goto done;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#391: FILE: tkcond.c:533:
+	    condc = condb->next; if ( condc == NULL ) goto done;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!condc"
#391: FILE: tkcond.c:533:
+	    condc = condb->next; if ( condc == NULL ) goto done;

WARNING:TABSTOP: Statements should start on a tabstop
#392: FILE: tkcond.c:534:
+	    if ( conda->op == op_lparen )

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#392: FILE: tkcond.c:534:
+	    if ( conda->op == op_lparen )
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#392: FILE: tkcond.c:534:
+	    if ( conda->op == op_lparen )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#392: FILE: tkcond.c:534:
+	    if ( conda->op == op_lparen )

CHECK:BRACES: braces {} should be used on all arms of this statement
#392: FILE: tkcond.c:534:
+	    if ( conda->op == op_lparen )
[...]
+	    else if ( level > 0 && conda->op == op_rparen )
[...]
+	    else if ( (conda->op == op_false && condb->op == op_or && start)
[...]
+	    else if ( (conda->op == op_false && condb->op == op_and)
[...]
+	    else if ( conda->op == op_or && condb->op == op_true
[...]
+	    else if ( conda->op == op_or && condb->op == op_false
[...]
+	    else if ( conda->op == op_and && condb->op == op_true )
[...]
+		free_cond( conda );
[...]

WARNING:TABSTOP: Statements should start on a tabstop
#393: FILE: tkcond.c:535:
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#394: FILE: tkcond.c:536:
+		conda->next = eliminate_unneeded( conda->next, level + 1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#394: FILE: tkcond.c:536:
+		conda->next = eliminate_unneeded( conda->next, level + 1 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#395: FILE: tkcond.c:537:
+		condb = conda->next; if ( condb == NULL ) goto done;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#395: FILE: tkcond.c:537:
+		condb = conda->next; if ( condb == NULL ) goto done;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!condb"
#395: FILE: tkcond.c:537:
+		condb = conda->next; if ( condb == NULL ) goto done;

ERROR:SPACING: space prohibited after that open parenthesis '('
#396: FILE: tkcond.c:538:
+		condc = condb->next; if ( condc == NULL ) goto done;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#396: FILE: tkcond.c:538:
+		condc = condb->next; if ( condc == NULL ) goto done;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!condc"
#396: FILE: tkcond.c:538:
+		condc = condb->next; if ( condc == NULL ) goto done;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#397: FILE: tkcond.c:539:
+		if ( conda->op == op_lparen
+		&&  (condb->op == op_true || condb->op == op_false) 
+		&&   condc->op == op_rparen )
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#397: FILE: tkcond.c:539:
+		if ( conda->op == op_lparen
[...]
+		{

ERROR:SPACING: space prohibited after that open parenthesis '('
#397: FILE: tkcond.c:539:
+		if ( conda->op == op_lparen

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: tkcond.c:540:
+^I^I&&  (condb->op == op_true || condb->op == op_false) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#398: FILE: tkcond.c:540:
+		if ( conda->op == op_lparen
+		&&  (condb->op == op_true || condb->op == op_false) 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#399: FILE: tkcond.c:541:
+		&&  (condb->op == op_true || condb->op == op_false) 
+		&&   condc->op == op_rparen )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#399: FILE: tkcond.c:541:
+		&&   condc->op == op_rparen )

ERROR:SPACING: space prohibited after that open parenthesis '('
#404: FILE: tkcond.c:546:
+		    free_cond( condb );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#404: FILE: tkcond.c:546:
+		    free_cond( condb );

WARNING:TABSTOP: Statements should start on a tabstop
#407: FILE: tkcond.c:549:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#408: FILE: tkcond.c:550:
+	    else if ( level > 0 && conda->op == op_rparen )

ERROR:SPACING: space prohibited after that open parenthesis '('
#408: FILE: tkcond.c:550:
+	    else if ( level > 0 && conda->op == op_rparen )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#408: FILE: tkcond.c:550:
+	    else if ( level > 0 && conda->op == op_rparen )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#408: FILE: tkcond.c:550:
+	    }
+	    else if ( level > 0 && conda->op == op_rparen )

WARNING:TABSTOP: Statements should start on a tabstop
#410: FILE: tkcond.c:552:
+	    else if ( (conda->op == op_false && condb->op == op_or && start)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#410: FILE: tkcond.c:552:
+	    else if ( (conda->op == op_false && condb->op == op_or && start)
+		 ||   (conda->op == op_true && condb->op == op_and) )
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#410: FILE: tkcond.c:552:
+	    else if ( (conda->op == op_false && condb->op == op_or && start)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#411: FILE: tkcond.c:553:
+	    else if ( (conda->op == op_false && condb->op == op_or && start)
+		 ||   (conda->op == op_true && condb->op == op_and) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#411: FILE: tkcond.c:553:
+		 ||   (conda->op == op_true && condb->op == op_and) )

WARNING:TABSTOP: Statements should start on a tabstop
#412: FILE: tkcond.c:554:
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#414: FILE: tkcond.c:556:
+		free_cond( conda );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#414: FILE: tkcond.c:556:
+		free_cond( conda );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#416: FILE: tkcond.c:558:
+		if (start)
+		    list = conda;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#418: FILE: tkcond.c:560:
+		else
+		    prev->next = conda;

WARNING:TABSTOP: Statements should start on a tabstop
#422: FILE: tkcond.c:564:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#423: FILE: tkcond.c:565:
+	    else if ( (conda->op == op_false && condb->op == op_and)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#423: FILE: tkcond.c:565:
+	    else if ( (conda->op == op_false && condb->op == op_and)
+		 ||   (conda->op == op_true && condb->op == op_or && start) )
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#423: FILE: tkcond.c:565:
+	    else if ( (conda->op == op_false && condb->op == op_and)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#423: FILE: tkcond.c:565:
+	    }
+	    else if ( (conda->op == op_false && condb->op == op_and)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#424: FILE: tkcond.c:566:
+	    else if ( (conda->op == op_false && condb->op == op_and)
+		 ||   (conda->op == op_true && condb->op == op_or && start) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#424: FILE: tkcond.c:566:
+		 ||   (conda->op == op_true && condb->op == op_or && start) )

WARNING:TABSTOP: Statements should start on a tabstop
#425: FILE: tkcond.c:567:
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#427: FILE: tkcond.c:569:
+		free_cond( condb );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#427: FILE: tkcond.c:569:
+		free_cond( condb );

ERROR:SPACING: space prohibited after that open parenthesis '('
#428: FILE: tkcond.c:570:
+		conda->next = skip_expr( condc );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#428: FILE: tkcond.c:570:
+		conda->next = skip_expr( condc );

WARNING:TABSTOP: Statements should start on a tabstop
#430: FILE: tkcond.c:572:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#431: FILE: tkcond.c:573:
+	    else if ( conda->op == op_or && condb->op == op_true

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#431: FILE: tkcond.c:573:
+	    else if ( conda->op == op_or && condb->op == op_true
+	         &&   condc->op == op_or )
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#431: FILE: tkcond.c:573:
+	    else if ( conda->op == op_or && condb->op == op_true

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#431: FILE: tkcond.c:573:
+	    }
+	    else if ( conda->op == op_or && condb->op == op_true

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: tkcond.c:574:
+^I         &&   condc->op == op_or )$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#432: FILE: tkcond.c:574:
+	    else if ( conda->op == op_or && condb->op == op_true
+	         &&   condc->op == op_or )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#432: FILE: tkcond.c:574:
+	         &&   condc->op == op_or )

WARNING:TABSTOP: Statements should start on a tabstop
#433: FILE: tkcond.c:575:
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#434: FILE: tkcond.c:576:
+		condb->next = skip_expr( condc->next );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#434: FILE: tkcond.c:576:
+		condb->next = skip_expr( condc->next );

ERROR:SPACING: space prohibited after that open parenthesis '('
#436: FILE: tkcond.c:578:
+		free_cond( condc );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#436: FILE: tkcond.c:578:
+		free_cond( condc );

WARNING:TABSTOP: Statements should start on a tabstop
#439: FILE: tkcond.c:581:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#440: FILE: tkcond.c:582:
+	    else if ( conda->op == op_or && condb->op == op_false

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#440: FILE: tkcond.c:582:
+	    else if ( conda->op == op_or && condb->op == op_false
+	         &&   condc->op == op_or )
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#440: FILE: tkcond.c:582:
+	    else if ( conda->op == op_or && condb->op == op_false

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#440: FILE: tkcond.c:582:
+	    }
+	    else if ( conda->op == op_or && condb->op == op_false

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: tkcond.c:583:
+^I         &&   condc->op == op_or )$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#441: FILE: tkcond.c:583:
+	    else if ( conda->op == op_or && condb->op == op_false
+	         &&   condc->op == op_or )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#441: FILE: tkcond.c:583:
+	         &&   condc->op == op_or )

WARNING:TABSTOP: Statements should start on a tabstop
#442: FILE: tkcond.c:584:
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#445: FILE: tkcond.c:587:
+		free_cond( condb );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#445: FILE: tkcond.c:587:
+		free_cond( condb );

WARNING:TABSTOP: Statements should start on a tabstop
#447: FILE: tkcond.c:589:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#448: FILE: tkcond.c:590:
+	    else if ( conda->op == op_and && condb->op == op_true )

ERROR:SPACING: space prohibited after that open parenthesis '('
#448: FILE: tkcond.c:590:
+	    else if ( conda->op == op_and && condb->op == op_true )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#448: FILE: tkcond.c:590:
+	    else if ( conda->op == op_and && condb->op == op_true )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#448: FILE: tkcond.c:590:
+	    }
+	    else if ( conda->op == op_and && condb->op == op_true )

ERROR:SPACING: space prohibited after that open parenthesis '('
#456: FILE: tkcond.c:594:
+		free_cond( conda );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#456: FILE: tkcond.c:594:
+		free_cond( conda );

WARNING:TABSTOP: Statements should start on a tabstop
#459: FILE: tkcond.c:597:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#460: FILE: tkcond.c:598:
+	    else if ( conda->op == op_and && condb->op == op_false )

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#460: FILE: tkcond.c:598:
+	    else if ( conda->op == op_and && condb->op == op_false )
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#460: FILE: tkcond.c:598:
+	    else if ( conda->op == op_and && condb->op == op_false )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#460: FILE: tkcond.c:598:
+	    else if ( conda->op == op_and && condb->op == op_false )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#460: FILE: tkcond.c:598:
+	    }
+	    else if ( conda->op == op_and && condb->op == op_false )

WARNING:TABSTOP: Statements should start on a tabstop
#461: FILE: tkcond.c:599:
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#463: FILE: tkcond.c:601:
+		prev = skip_one_back( &condc, list );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#463: FILE: tkcond.c:601:
+		prev = skip_one_back( &condc, list );

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#464: FILE: tkcond.c:602:
+		if ( prev )
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#464: FILE: tkcond.c:602:
+		if ( prev )
+		{

ERROR:SPACING: space prohibited after that open parenthesis '('
#464: FILE: tkcond.c:602:
+		if ( prev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#464: FILE: tkcond.c:602:
+		if ( prev )

WARNING:TABSTOP: Statements should start on a tabstop
#467: FILE: tkcond.c:605:
+		    if ( condc )

ERROR:SPACING: space prohibited after that open parenthesis '('
#467: FILE: tkcond.c:605:
+		    if ( condc )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#467: FILE: tkcond.c:605:
+		    if ( condc )

WARNING:TABSTOP: Statements should start on a tabstop
#469: FILE: tkcond.c:607:
+		    else

ERROR:SPACING: space prohibited after that open parenthesis '('
#471: FILE: tkcond.c:609:
+		    free_cond( prev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#471: FILE: tkcond.c:609:
+		    free_cond( prev );

WARNING:TABSTOP: Statements should start on a tabstop
#473: FILE: tkcond.c:611:
+		    goto done2;

WARNING:TABSTOP: Statements should start on a tabstop
#475: FILE: tkcond.c:613:
+	    }

WARNING:TYPO_SPELLING: 'expresion' may be misspelled - perhaps 'expression'?
#478: FILE: tkcond.c:616:
+	/* Processing elimination at the end of the expresion */
 	                                            ^^^^^^^^^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#479: FILE: tkcond.c:617:
+	if ( conda && ((conda->op == op_and && condb && condb->op == op_true)
+	||   (conda->op == op_or && condb && condb->op == op_false &&
+	     (!condc || condc->op != op_and))) )
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#479: FILE: tkcond.c:617:
+	if ( conda && ((conda->op == op_and && condb && condb->op == op_true)
[...]
+	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#479: FILE: tkcond.c:617:
+	if ( conda && ((conda->op == op_and && condb && condb->op == op_true)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#480: FILE: tkcond.c:618:
+	if ( conda && ((conda->op == op_and && condb && condb->op == op_true)
+	||   (conda->op == op_or && condb && condb->op == op_false &&

ERROR:SPACING: space prohibited before that close parenthesis ')'
#481: FILE: tkcond.c:619:
+	     (!condc || condc->op != op_and))) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#485: FILE: tkcond.c:623:
+	    free_cond( conda );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#485: FILE: tkcond.c:623:
+	    free_cond( conda );

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#488: FILE: tkcond.c:626:
+	else if ( conda && conda->op == op_and && condb && condb->op == op_false )
+	{	

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#488: FILE: tkcond.c:626:
+	else if ( conda && conda->op == op_and && condb && condb->op == op_false )
+	{	

ERROR:SPACING: space prohibited after that open parenthesis '('
#488: FILE: tkcond.c:626:
+	else if ( conda && conda->op == op_and && condb && condb->op == op_false )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#488: FILE: tkcond.c:626:
+	else if ( conda && conda->op == op_and && condb && condb->op == op_false )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#488: FILE: tkcond.c:626:
+	}
+	else if ( conda && conda->op == op_and && condb && condb->op == op_false )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: tkcond.c:627:
+^I{^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#491: FILE: tkcond.c:629:
+	    prev = skip_one_back( &condc, list );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#491: FILE: tkcond.c:629:
+	    prev = skip_one_back( &condc, list );

WARNING:TABSTOP: Statements should start on a tabstop
#492: FILE: tkcond.c:630:
+	    if ( prev )

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#492: FILE: tkcond.c:630:
+	    if ( prev )
+	    {

ERROR:SPACING: space prohibited after that open parenthesis '('
#492: FILE: tkcond.c:630:
+	    if ( prev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#492: FILE: tkcond.c:630:
+	    if ( prev )

WARNING:TABSTOP: Statements should start on a tabstop
#493: FILE: tkcond.c:631:
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#495: FILE: tkcond.c:633:
+		if ( condc )
+		    condc->next = condb;

ERROR:SPACING: space prohibited after that open parenthesis '('
#495: FILE: tkcond.c:633:
+		if ( condc )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#495: FILE: tkcond.c:633:
+		if ( condc )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#497: FILE: tkcond.c:635:
+		else
+		    list = condb;

ERROR:SPACING: space prohibited after that open parenthesis '('
#499: FILE: tkcond.c:637:
+		free_cond( prev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#499: FILE: tkcond.c:637:
+		free_cond( prev );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#504: FILE: tkcond.c:641:
+	else if ( conda && conda->op == op_or && condb && condb->op == op_true
[...]
 	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#504: FILE: tkcond.c:641:
+	else if ( conda && conda->op == op_or && condb && condb->op == op_true

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#504: FILE: tkcond.c:641:
 	}
+	else if ( conda && conda->op == op_or && condb && condb->op == op_true

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#505: FILE: tkcond.c:642:
+	else if ( conda && conda->op == op_or && condb && condb->op == op_true
+	     &&   (!condc || condc->op != op_and) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#505: FILE: tkcond.c:642:
+	     &&   (!condc || condc->op != op_and) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#509: FILE: tkcond.c:645:
+	    prev = skip_conj_back( &condc, list );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#509: FILE: tkcond.c:645:
+	    prev = skip_conj_back( &condc, list );

WARNING:TABSTOP: Statements should start on a tabstop
#510: FILE: tkcond.c:646:
+	    if ( prev )

ERROR:SPACING: space prohibited after that open parenthesis '('
#510: FILE: tkcond.c:646:
+	    if ( prev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#510: FILE: tkcond.c:646:
+	    if ( prev )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#517: FILE: tkcond.c:649:
+		if ( condc )
+		    condc->next = condb;

ERROR:SPACING: space prohibited after that open parenthesis '('
#517: FILE: tkcond.c:649:
+		if ( condc )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#517: FILE: tkcond.c:649:
+		if ( condc )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#519: FILE: tkcond.c:651:
+		else
+		    list = condb;

ERROR:SPACING: space prohibited after that open parenthesis '('
#521: FILE: tkcond.c:653:
+		free_cond( prev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#521: FILE: tkcond.c:653:
+		free_cond( prev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#536: FILE: tkcond.c:700:
+		    remove_bang( eliminate_unneeded( cfg->cond, 0 ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#536: FILE: tkcond.c:700:
+		    remove_bang( eliminate_unneeded( cfg->cond, 0 ) );

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#553: FILE: tkcond.c:742:
+		if ( cfg->cond == NULL && cfg->nameindex > 0 )
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#553: FILE: tkcond.c:742:
+		if ( cfg->cond == NULL && cfg->nameindex > 0 )
+		{

ERROR:SPACING: space prohibited after that open parenthesis '('
#553: FILE: tkcond.c:742:
+		if ( cfg->cond == NULL && cfg->nameindex > 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#553: FILE: tkcond.c:742:
+		if ( cfg->cond == NULL && cfg->nameindex > 0 )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfg->cond"
#553: FILE: tkcond.c:742:
+		if ( cfg->cond == NULL && cfg->nameindex > 0 )

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#555: FILE: tkcond.c:744:
+		    vartable[cfg->nameindex].constant --;
 		                                      ^

WARNING:TABSTOP: Statements should start on a tabstop
#558: FILE: tkcond.c:747:
+	    case token_bool:

WARNING:TABSTOP: Statements should start on a tabstop
#559: FILE: tkcond.c:748:
+	    case token_choice_item:

WARNING:TABSTOP: Statements should start on a tabstop
#560: FILE: tkcond.c:749:
+	    case token_choice_header:

WARNING:TABSTOP: Statements should start on a tabstop
#561: FILE: tkcond.c:750:
+	    case token_comment:

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#569: FILE: tkcond.c:758:
+		if ( cfg->nameindex > 0 )
+		    vartable[cfg->nameindex].constant += 2;

ERROR:SPACING: space prohibited after that open parenthesis '('
#569: FILE: tkcond.c:758:
+		if ( cfg->nameindex > 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#569: FILE: tkcond.c:758:
+		if ( cfg->nameindex > 0 )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#578: FILE: tkcond.c:778:
+		if ( cfg->nameindex > 0 )
+		    vartable[cfg->nameindex].constant += 2;

ERROR:SPACING: space prohibited after that open parenthesis '('
#578: FILE: tkcond.c:778:
+		if ( cfg->nameindex > 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#578: FILE: tkcond.c:778:
+		if ( cfg->nameindex > 0 )

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#583: FILE: tkcond.c:782:
+		    cond_stack [depth] = eliminate_unneeded( cfg->cond, 0 );

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: space prohibited after that open parenthesis '('
#583: FILE: tkcond.c:782:
+		    cond_stack [depth] = eliminate_unneeded( cfg->cond, 0 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#583: FILE: tkcond.c:782:
+		    cond_stack [depth] = eliminate_unneeded( cfg->cond, 0 );

WARNING:TABSTOP: Statements should start on a tabstop
#592: FILE: tkcond.c:792:
+		    if ( prev )

ERROR:SPACING: space prohibited after that open parenthesis '('
#592: FILE: tkcond.c:792:
+		    if ( prev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#592: FILE: tkcond.c:792:
+		    if ( prev )

ERROR:SPACING: space prohibited after that open parenthesis '('
#601: FILE: tkcond.c:821:
+	    printf( " \"%s\"", tmp->str );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#601: FILE: tkcond.c:821:
+	    printf( " \"%s\"", tmp->str );

WARNING:PATCH_PREFIX: patch prefix 'scripts' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: tkgen.c:359:
+^I/* $

ERROR:SPACING: space prohibited after that open parenthesis '('
#616: FILE: tkgen.c:363:
+	case op_true:   printf( "\"1\" == \"1\""    );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#616: FILE: tkgen.c:363:
+	case op_true:   printf( "\"1\" == \"1\""    );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#616: FILE: tkgen.c:363:
+	case op_true:   printf( "\"1\" == \"1\""    );

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited after that open parenthesis '('
#617: FILE: tkgen.c:364:
+	    fprintf( stderr, "Condition optimization problem\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#617: FILE: tkgen.c:364:
+	    fprintf( stderr, "Condition optimization problem\n" );

WARNING:TABSTOP: Statements should start on a tabstop
#618: FILE: tkgen.c:365:
+	    break;

ERROR:SPACING: space prohibited after that open parenthesis '('
#619: FILE: tkgen.c:366:
+	case op_false:  printf( "\"1\" == \"0\""    );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#619: FILE: tkgen.c:366:
+	case op_false:  printf( "\"1\" == \"0\""    );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#619: FILE: tkgen.c:366:
+	case op_false:  printf( "\"1\" == \"0\""    );

ERROR:SPACING: space prohibited after that open parenthesis '('
#620: FILE: tkgen.c:367:
+	    fprintf( stderr, "Condition optimization problem\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#620: FILE: tkgen.c:367:
+	    fprintf( stderr, "Condition optimization problem\n" );

WARNING:TABSTOP: Statements should start on a tabstop
#621: FILE: tkgen.c:368:
+	    break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: tkgen.c:737:
+^I    /* $

WARNING:TABSTOP: Statements should start on a tabstop
#635: FILE: tkgen.c:741:
+	    case op_true:   printf( "\"1\" == \"1\""    );

ERROR:SPACING: space prohibited after that open parenthesis '('
#635: FILE: tkgen.c:741:
+	    case op_true:   printf( "\"1\" == \"1\""    );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#635: FILE: tkgen.c:741:
+	    case op_true:   printf( "\"1\" == \"1\""    );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#635: FILE: tkgen.c:741:
+	    case op_true:   printf( "\"1\" == \"1\""    );

ERROR:SPACING: space prohibited after that open parenthesis '('
#636: FILE: tkgen.c:742:
+		fprintf( stderr, "Condition optimization problem\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#636: FILE: tkgen.c:742:
+		fprintf( stderr, "Condition optimization problem\n" );

WARNING:TABSTOP: Statements should start on a tabstop
#638: FILE: tkgen.c:744:
+	    case op_false:  printf( "\"1\" == \"0\""    );

ERROR:SPACING: space prohibited after that open parenthesis '('
#638: FILE: tkgen.c:744:
+	    case op_false:  printf( "\"1\" == \"0\""    );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#638: FILE: tkgen.c:744:
+	    case op_false:  printf( "\"1\" == \"0\""    );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#638: FILE: tkgen.c:744:
+	    case op_false:  printf( "\"1\" == \"0\""    );

ERROR:SPACING: space prohibited after that open parenthesis '('
#639: FILE: tkgen.c:745:
+		fprintf( stderr, "Condition optimization problem\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#639: FILE: tkgen.c:745:
+		fprintf( stderr, "Condition optimization problem\n" );

WARNING:PATCH_PREFIX: patch prefix 'scripts' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: tkparse.h:116:
+    int^I^Iconstant;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: tkparse.h:117:
+    char *^Ivalue;$

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#652: FILE: tkparse.h:117:
+    char *	value;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000522359.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 308 errors, 131 warnings, 39 checks, 573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000522359.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
