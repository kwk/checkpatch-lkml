WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
Perhaps the following patch might be more to your liking.  I'm sorry I haven't

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#97: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#98: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#99: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#100: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#101: 
#	           ChangeSet	1.1767  -> 1.1769

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#102: 
#	  include/linux/fs.h	1.295   -> 1.296

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#103: 
#	         mm/memory.c	1.154   -> 1.155

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#104: 
#	include/linux/hugetlb.h	1.23    -> 1.24

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#105: 
#	arch/ia64/mm/hugetlbpage.c	1.19    -> 1.21

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#106: 
#	fs/hugetlbfs/inode.c	1.40    -> 1.41

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#107: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#108: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#109: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#110: 
# 04/04/02	raybry@tomahawk.engr.sgi.com	1.1768

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#111: 
# memory.c:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#112: 
#   Change handle_mm_fault() to call hugetlb_do_no_page() if this the fault

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#113: 
#   is for a hugetlb vma.  Change call to follow_hugetlb_page() to match the new

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#114: 
#   definition of same in hugetlbpage.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#115: 
# hugetlb.h:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#116: 
#   Header changes related to hugetlbpage.c allocate on fault changes.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#117: 
# fs.h:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#118: 
#   Add union member "data" to union "u" in inode struct.  This overlays

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#119: 
#   void *generic_ip.  Used to hold reservation of hugetlbpages assigned

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#120: 
#   to this inode.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#121: 
# inode.c:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#122: 
#   Rewrite hugetlbfs_file_mmap() to eliminate hugetlb_prefault() and to

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#123: 
#   handle reservation of hugetlbpages via htlb_reserve()/unreserve()

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#124: 
# hugetlbpage.c:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#125: 
#   Eliminate hugetlb_prefault(), replace with hugetlb_do_no_page.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#126: 
#   Hugetlb pages now allocated at page fault time rather than mmap() time.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#127: 
#   Move zeroing of hugetlbpage out of alloc_hugetlb_page().

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#128: 
#   Introduce htlbpage_reserved, htlb_reserve(), hugetlb_unreserve() to manage

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#129: 
#   reservation of hugetlbpages, so we can return -ENOMEM if there will not be

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#130: 
#   enough pages to (eventually) be allocated to satisfy this request.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#131: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#132: 
# 04/04/02	raybry@tomahawk.engr.sgi.com	1.1769

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#133: 
# hugetlbpage.c:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#134: 
#   Put check into decrease nr_hugepages loop in set_hugetlb_mem_size()

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#135: 
#   to make sure we don't reduce the number of hugetlbpages below number

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#136: 
#   of reserved hugetlbpages.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#137: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#138: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#140: 
--- a/arch/ia64/mm/hugetlbpage.c	Fri Apr  2 19:31:56 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#159: FILE: arch/ia64/mm/hugetlbpage.c:73:
+	for (i = 0; i < (HPAGE_SIZE/PAGE_SIZE); ++i) {
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#159: FILE: arch/ia64/mm/hugetlbpage.c:73:
+	for (i = 0; i < (HPAGE_SIZE/PAGE_SIZE); ++i) {
+		clear_highpage(&page[i]);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#187: FILE: arch/ia64/mm/hugetlbpage.c:165:
+	for (addr=vma->vm_start; addr<vma->vm_end; addr += HPAGE_SIZE) {
 	         ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#187: FILE: arch/ia64/mm/hugetlbpage.c:165:
+	for (addr=vma->vm_start; addr<vma->vm_end; addr += HPAGE_SIZE) {
 	                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/ia64/mm/hugetlbpage.c:171:
+^I^I        continue;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: arch/ia64/mm/hugetlbpage.c:187:
+follow_hugetlb_page(struct task_struct *tsk, struct mm_struct *mm, struct vm_area_struct *vma,
  		    struct page **pages, struct vm_area_struct **vmas,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#231: FILE: arch/ia64/mm/hugetlbpage.c:206:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#245: FILE: arch/ia64/mm/hugetlbpage.c:254:
+			BUG();

WARNING:RETURN_VOID: void function return statements are not generally useful
#289: FILE: arch/ia64/mm/hugetlbpage.c:454:
+	return;
+}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#333: FILE: arch/ia64/mm/hugetlbpage.c:645:
+			HPAGE_SIZE/1024,
 			          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: arch/ia64/mm/hugetlbpage.c:672:
+int hugetlb_do_no_page(struct mm_struct * mm, struct vm_area_struct * vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: arch/ia64/mm/hugetlbpage.c:672:
+int hugetlb_do_no_page(struct mm_struct * mm, struct vm_area_struct * vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: arch/ia64/mm/hugetlbpage.c:673:
+int hugetlb_do_no_page(struct mm_struct * mm, struct vm_area_struct * vma,
+	unsigned long address, int write_access)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#358: FILE: arch/ia64/mm/hugetlbpage.c:682:
+	address &= ~(HPAGE_SIZE-1);
 	                       ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#383: FILE: arch/ia64/mm/hugetlbpage.c:707:
+	if (!page) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#387: FILE: arch/ia64/mm/hugetlbpage.c:711:
+		BUG_ON(!page);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#399: FILE: arch/ia64/mm/hugetlbpage.c:723:
+
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: fs/hugetlbfs/inode.c:61:
+ ^Ireserved_pages = (vma->vm_end - vma->vm_start) >> HPAGE_SHIFT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#429: FILE: fs/hugetlbfs/inode.c:61:
+ ^Ireserved_pages = (vma->vm_end - vma->vm_start) >> HPAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: fs/hugetlbfs/inode.c:61:
+ ^Ireserved_pages = (vma->vm_end - vma->vm_start) >> HPAGE_SHIFT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: fs/hugetlbfs/inode.c:66:
+ ^I/* a second mmap() (or a rmap()) can change the reservation */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#434: FILE: fs/hugetlbfs/inode.c:66:
+ ^I/* a second mmap() (or a rmap()) can change the reservation */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: fs/hugetlbfs/inode.c:66:
+ ^I/* a second mmap() (or a rmap()) can change the reservation */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: fs/hugetlbfs/inode.c:67:
+ ^Iprev_reserved_pages = inode->u.data;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: fs/hugetlbfs/inode.c:67:
+ ^Iprev_reserved_pages = inode->u.data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: fs/hugetlbfs/inode.c:67:
+ ^Iprev_reserved_pages = inode->u.data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: fs/hugetlbfs/inode.c:69:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: fs/hugetlbfs/inode.c:69:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: fs/hugetlbfs/inode.c:69:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: fs/hugetlbfs/inode.c:70:
+ ^I * if current mmap() is smaller than previous reservation,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#438: FILE: fs/hugetlbfs/inode.c:70:
+ ^I * if current mmap() is smaller than previous reservation,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: fs/hugetlbfs/inode.c:71:
+ ^I * we don't change reservation or quota$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#439: FILE: fs/hugetlbfs/inode.c:71:
+ ^I * we don't change reservation or quota$

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: fs/hugetlbfs/inode.c:72:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#440: FILE: fs/hugetlbfs/inode.c:72:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: fs/hugetlbfs/inode.c:73:
+ ^Iif (reserved_pages >= prev_reserved_pages) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#441: FILE: fs/hugetlbfs/inode.c:73:
+ ^Iif (reserved_pages >= prev_reserved_pages) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: fs/hugetlbfs/inode.c:73:
+ ^Iif (reserved_pages >= prev_reserved_pages) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: fs/hugetlbfs/inode.c:74:
+ ^I^Inew_reservation = reserved_pages - prev_reserved_pages;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#442: FILE: fs/hugetlbfs/inode.c:74:
+ ^I^Inew_reservation = reserved_pages - prev_reserved_pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: fs/hugetlbfs/inode.c:74:
+ ^I^Inew_reservation = reserved_pages - prev_reserved_pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: fs/hugetlbfs/inode.c:75:
+ ^I^Iif ((hugetlb_get_quota(mapping, new_reservation) < 0) ||$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#443: FILE: fs/hugetlbfs/inode.c:75:
+ ^I^Iif ((hugetlb_get_quota(mapping, new_reservation) < 0) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: fs/hugetlbfs/inode.c:75:
+ ^I^Iif ((hugetlb_get_quota(mapping, new_reservation) < 0) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#443: FILE: fs/hugetlbfs/inode.c:75:
+ 		if ((hugetlb_get_quota(mapping, new_reservation) < 0) ||
[...]
+ 				up(&inode->i_sem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: fs/hugetlbfs/inode.c:76:
+ ^I^I^I(hugetlb_reserve(new_reservation) < 0)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#444: FILE: fs/hugetlbfs/inode.c:76:
+ ^I^I^I(hugetlb_reserve(new_reservation) < 0)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: fs/hugetlbfs/inode.c:76:
+ 		if ((hugetlb_get_quota(mapping, new_reservation) < 0) ||
+ 			(hugetlb_reserve(new_reservation) < 0)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: fs/hugetlbfs/inode.c:76:
+ ^I^I^I(hugetlb_reserve(new_reservation) < 0)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: fs/hugetlbfs/inode.c:77:
+ ^I^I^I^Iup(&inode->i_sem);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: fs/hugetlbfs/inode.c:77:
+ ^I^I^I^Iup(&inode->i_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: fs/hugetlbfs/inode.c:77:
+ ^I^I^I^Iup(&inode->i_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: fs/hugetlbfs/inode.c:78:
+ ^I^I^I^Ireturn -ENOMEM;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#446: FILE: fs/hugetlbfs/inode.c:78:
+ ^I^I^I^Ireturn -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: fs/hugetlbfs/inode.c:78:
+ ^I^I^I^Ireturn -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: fs/hugetlbfs/inode.c:79:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: fs/hugetlbfs/inode.c:79:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: fs/hugetlbfs/inode.c:79:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: fs/hugetlbfs/inode.c:80:
+ ^I^Iinode->i_size = reserved_pages << HPAGE_SHIFT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#448: FILE: fs/hugetlbfs/inode.c:80:
+ ^I^Iinode->i_size = reserved_pages << HPAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: fs/hugetlbfs/inode.c:80:
+ ^I^Iinode->i_size = reserved_pages << HPAGE_SHIFT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: fs/hugetlbfs/inode.c:81:
+ ^I^Iinode->u.data = reserved_pages;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#449: FILE: fs/hugetlbfs/inode.c:81:
+ ^I^Iinode->u.data = reserved_pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: fs/hugetlbfs/inode.c:81:
+ ^I^Iinode->u.data = reserved_pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: fs/hugetlbfs/inode.c:82:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#450: FILE: fs/hugetlbfs/inode.c:82:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: fs/hugetlbfs/inode.c:82:
+ ^I}$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#482: FILE: fs/hugetlbfs/inode.c:202:
+	hugetlb_put_quota(mapping, inode->u.data-start);
 	                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#483: FILE: fs/hugetlbfs/inode.c:203:
+	hugetlb_unreserve(inode->u.data-start);
 	                               ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#528: FILE: fs/hugetlbfs/inode.c:667:
+int hugetlb_get_quota(struct address_space *mapping, unsigned long nr_pages)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#547: FILE: fs/hugetlbfs/inode.c:684:
+void hugetlb_put_quota(struct address_space *mapping, unsigned long nr_pages)
  {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#577: FILE: include/linux/hugetlb.h:15:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#577: FILE: include/linux/hugetlb.h:15:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#577: FILE: include/linux/hugetlb.h:15:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#577: FILE: include/linux/hugetlb.h:15:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct **' should also have an identifier name
#577: FILE: include/linux/hugetlb.h:15:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#577: FILE: include/linux/hugetlb.h:15:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#577: FILE: include/linux/hugetlb.h:15:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#577: FILE: include/linux/hugetlb.h:15:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#577: FILE: include/linux/hugetlb.h:15:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: include/linux/hugetlb.h:16:
+int follow_hugetlb_page(struct task_struct *, struct mm_struct *, struct vm_area_struct *,
+	struct page **, struct vm_area_struct **, unsigned long *, int *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#582: FILE: include/linux/hugetlb.h:19:
+int hugetlb_reserve(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#583: FILE: include/linux/hugetlb.h:20:
+void hugetlb_unreserve(int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#595: FILE: include/linux/hugetlb.h:118:
+extern int hugetlb_do_no_page(struct mm_struct * mm, struct vm_area_struct * vma,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#595: FILE: include/linux/hugetlb.h:118:
+extern int hugetlb_do_no_page(struct mm_struct * mm, struct vm_area_struct * vma,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#595: FILE: include/linux/hugetlb.h:118:
+extern int hugetlb_do_no_page(struct mm_struct * mm, struct vm_area_struct * vma,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: include/linux/hugetlb.h:119:
+extern int hugetlb_do_no_page(struct mm_struct * mm, struct vm_area_struct * vma,
+	unsigned long address, int write_access);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290942.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 91 warnings, 13 checks, 441 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290942.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
