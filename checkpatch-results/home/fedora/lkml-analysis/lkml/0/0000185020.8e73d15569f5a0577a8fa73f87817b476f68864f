ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: Documentation/dvb/ci.txt:5:
+existing low level CI API.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: Documentation/dvb/ci.txt:14:
+  is detected. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: Documentation/dvb/ci.txt:40:
+^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: Documentation/dvb/ci.txt:41:
+^I  $

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#108: FILE: Documentation/dvb/ci.txt:57:
+The CI module support is largely dependant upon the firmware on the cards
                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: Documentation/dvb/ci.txt:68:
+* The High level CI API $

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#132: FILE: Documentation/dvb/ci.txt:81:
+have been made in the API to accomodate this feature.
                              ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#163: FILE: Documentation/dvb/ci.txt:112:
+accomodate all other CI based devices, that fall into the other categories
 ^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/media/dvb/bt8xx/bt878.c:539:
+      .name^I= "bt878",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/media/dvb/bt8xx/bt878.c:541:
+      .probe^I= bt878_probe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/media/dvb/bt8xx/bt878.c:542:
+      .remove^I= bt878_remove,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#373: FILE: drivers/media/dvb/bt8xx/dst.c:18:
+^Ialong with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#374: FILE: drivers/media/dvb/bt8xx/dst.c:19:
+^IFoundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#377: FILE: drivers/media/dvb/bt8xx/dst.c:22:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#452: FILE: drivers/media/dvb/bt8xx/dst.c:53:
 
+

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#454: FILE: drivers/media/dvb/bt8xx/dst.c:55:
+#define dprintk	if (debug) printk

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#463: FILE: drivers/media/dvb/bt8xx/dst.c:69:
+int dst_gpio_outb(struct dst_state* state, u32 mask, u32 enbb, u32 outhigh, int delay)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#472: FILE: drivers/media/dvb/bt8xx/dst.c:78:
+		dprintk("%s: mask=[%04x], enbb=[%04x], outhigh=[%04x]\n", __FUNCTION__, mask, enbb, outhigh);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#472: FILE: drivers/media/dvb/bt8xx/dst.c:78:
+		dprintk("%s: mask=[%04x], enbb=[%04x], outhigh=[%04x]\n", __FUNCTION__, mask, enbb, outhigh);

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#476: FILE: drivers/media/dvb/bt8xx/dst.c:81:
+		dprintk("%s: dst_gpio_enb error (err == %i, mask == %02x, enb == %02x)\n", __FUNCTION__, err, mask, enbb);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#476: FILE: drivers/media/dvb/bt8xx/dst.c:81:
+		dprintk("%s: dst_gpio_enb error (err == %i, mask == %02x, enb == %02x)\n", __FUNCTION__, err, mask, enbb);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#480: FILE: drivers/media/dvb/bt8xx/dst.c:85:
+	msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#487: FILE: drivers/media/dvb/bt8xx/dst.c:92:
+		msleep(10);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#494: FILE: drivers/media/dvb/bt8xx/dst.c:98:
+		dprintk("%s: dst_gpio_outb error (err == %i, enbb == %02x, outhigh == %02x)\n", __FUNCTION__, err, enbb, outhigh);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dst_gpio_outb', this function's name, in a string
#494: FILE: drivers/media/dvb/bt8xx/dst.c:98:
+		dprintk("%s: dst_gpio_outb error (err == %i, enbb == %02x, outhigh == %02x)\n", __FUNCTION__, err, enbb, outhigh);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#494: FILE: drivers/media/dvb/bt8xx/dst.c:98:
+		dprintk("%s: dst_gpio_outb error (err == %i, enbb == %02x, outhigh == %02x)\n", __FUNCTION__, err, enbb, outhigh);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#502: FILE: drivers/media/dvb/bt8xx/dst.c:105:
+int dst_gpio_inb(struct dst_state *state, u8 * result)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#525: FILE: drivers/media/dvb/bt8xx/dst.c:125:
+		dprintk("%s: Resetting state machine\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#528: FILE: drivers/media/dvb/bt8xx/dst.c:128:
+		dprintk("%s: dst_gpio_outb ERROR !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#544: FILE: drivers/media/dvb/bt8xx/dst.c:135:
+		dprintk("%s: dst_gpio_outb ERROR !\n", __FUNCTION__);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#545: FILE: drivers/media/dvb/bt8xx/dst.c:136:
+		msleep(10);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#565: FILE: drivers/media/dvb/bt8xx/dst.c:147:
+		dprintk("%s: Resetting DST\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#568: FILE: drivers/media/dvb/bt8xx/dst.c:150:
+		dprintk("%s: dst_gpio_outb ERROR !\n", __FUNCTION__);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#571: FILE: drivers/media/dvb/bt8xx/dst.c:153:
+	msleep(1);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#574: FILE: drivers/media/dvb/bt8xx/dst.c:156:
+		dprintk("%s: dst_gpio_outb ERROR !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#594: FILE: drivers/media/dvb/bt8xx/dst.c:167:
+		dprintk("%s: dst_gpio_outb ERROR !\n", __FUNCTION__);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#597: FILE: drivers/media/dvb/bt8xx/dst.c:170:
+	msleep(1);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#606: FILE: drivers/media/dvb/bt8xx/dst.c:178:
+	if (dst_gpio_outb(state, ~0, RDC_8820_PIO_0_DISABLE, RDC_8820_PIO_0_DISABLE, NO_DELAY) < 0) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#607: FILE: drivers/media/dvb/bt8xx/dst.c:179:
+		dprintk("%s: dst_gpio_outb ERROR !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#628: FILE: drivers/media/dvb/bt8xx/dst.c:194:
+			dprintk("%s: dst_gpio_inb ERROR !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#634: FILE: drivers/media/dvb/bt8xx/dst.c:200:
+				dprintk("%s: dst wait ready after %d\n", __FUNCTION__, i);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#638: FILE: drivers/media/dvb/bt8xx/dst.c:203:
+		msleep(1);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#641: FILE: drivers/media/dvb/bt8xx/dst.c:206:
+		dprintk("%s: dst wait NOT ready after %d\n", __FUNCTION__, i);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#649: FILE: drivers/media/dvb/bt8xx/dst.c:214:
+	dprintk("%s: Trying to return from previous errors...\n", __FUNCTION__);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#651: FILE: drivers/media/dvb/bt8xx/dst.c:216:
+	msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#653: FILE: drivers/media/dvb/bt8xx/dst.c:218:
+	msleep(10);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#661: FILE: drivers/media/dvb/bt8xx/dst.c:226:
+	dprintk("%s: Trying to bailout from previous error...\n", __FUNCTION__);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#664: FILE: drivers/media/dvb/bt8xx/dst.c:229:
+	msleep(10);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#670: FILE: drivers/media/dvb/bt8xx/dst.c:235:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#671: FILE: drivers/media/dvb/bt8xx/dst.c:236:
+int dst_comm_init(struct dst_state* state)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#674: FILE: drivers/media/dvb/bt8xx/dst.c:239:
+		dprintk ("%s: Initializing DST..\n", __FUNCTION__);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#674: FILE: drivers/media/dvb/bt8xx/dst.c:239:
+		dprintk ("%s: Initializing DST..\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#676: FILE: drivers/media/dvb/bt8xx/dst.c:241:
+		dprintk("%s: PIO Enable Failed.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#680: FILE: drivers/media/dvb/bt8xx/dst.c:245:
+		dprintk("%s: RDC 8820 State RESET Failed.\n", __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'verbose > 4'
#700: FILE: drivers/media/dvb/bt8xx/dst.c:261:
+	if (debug && (verbose > 4)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#706: FILE: drivers/media/dvb/bt8xx/dst.c:264:
+			dprintk("%s writing", __FUNCTION__);

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#722: FILE: drivers/media/dvb/bt8xx/dst.c:272:
+			dprintk("%s: _write_dst error (err == %i, len == 0x%02x, b0 == 0x%02x)\n", __FUNCTION__, err, len, data[0]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#722: FILE: drivers/media/dvb/bt8xx/dst.c:272:
+			dprintk("%s: _write_dst error (err == %i, len == 0x%02x, b0 == 0x%02x)\n", __FUNCTION__, err, len, data[0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#733: FILE: drivers/media/dvb/bt8xx/dst.c:281:
+			printk("%s: RDC 8820 RESET...\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#733: FILE: drivers/media/dvb/bt8xx/dst.c:281:
+			printk("%s: RDC 8820 RESET...\n", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#744: FILE: drivers/media/dvb/bt8xx/dst.c:291:
+int read_dst(struct dst_state *state, u8 * ret, u8 len)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#753: FILE: drivers/media/dvb/bt8xx/dst.c:299:
 		if ((err = i2c_transfer(state->i2c, &msg, 1)) < 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#769: FILE: drivers/media/dvb/bt8xx/dst.c:309:
+			printk("%s: RDC 8820 RESET...\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#769: FILE: drivers/media/dvb/bt8xx/dst.c:309:
+			printk("%s: RDC 8820 RESET...\n", __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'verbose > 4'
#774: FILE: drivers/media/dvb/bt8xx/dst.c:314:
+	if (debug && (verbose > 4)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#775: FILE: drivers/media/dvb/bt8xx/dst.c:315:
+		dprintk("%s reply is 0x%x\n", __FUNCTION__, ret[0]);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#793: FILE: drivers/media/dvb/bt8xx/dst.c:479:
+u8 dst_check_sum(u8 * buf, u32 len)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#832: FILE: drivers/media/dvb/bt8xx/dst.c:502:
+		printk(" 0x%x firmware version = 1", DST_TYPE_HAS_FW_1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#834: FILE: drivers/media/dvb/bt8xx/dst.c:504:
+		printk(" 0x%x firmware version = 2", DST_TYPE_HAS_FW_2);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#836: FILE: drivers/media/dvb/bt8xx/dst.c:506:
+		printk(" 0x%x firmware version = 3", DST_TYPE_HAS_FW_3);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#842: FILE: drivers/media/dvb/bt8xx/dst.c:511:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#870: FILE: drivers/media/dvb/bt8xx/dst.c:538:
+/*
+	Known cards list

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LONG_LINE: line length of 180 exceeds 100 columns
#967: FILE: drivers/media/dvb/bt8xx/dst.c:635:
+		.type_flags = DST_TYPE_HAS_TS204 | DST_TYPE_HAS_NEWTUNE | DST_TYPE_HAS_FW_1									| DST_TYPE_HAS_FW_2,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1023: FILE: drivers/media/dvb/bt8xx/dst.c:691:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1085: FILE: drivers/media/dvb/bt8xx/dst.c:715:
+		dprintk("%s: Write not Acknowledged! [Reply=0x%02x]\n", __FUNCTION__, reply);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1101: FILE: drivers/media/dvb/bt8xx/dst.c:728:
+		dprintk("%s: Checksum failure! \n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1101: FILE: drivers/media/dvb/bt8xx/dst.c:728:
+		dprintk("%s: Checksum failure! \n", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1113: FILE: drivers/media/dvb/bt8xx/dst.c:734:
+	for (i = 0, p_dst_type = dst_tlist; i < ARRAY_SIZE (dst_tlist); i++, p_dst_type++) {

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1114: FILE: drivers/media/dvb/bt8xx/dst.c:735:
+		if (!strncmp (&state->rxbuffer[p_dst_type->offset], p_dst_type->device_id, strlen (p_dst_type->device_id))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1114: FILE: drivers/media/dvb/bt8xx/dst.c:735:
+		if (!strncmp (&state->rxbuffer[p_dst_type->offset], p_dst_type->device_id, strlen (p_dst_type->device_id))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1114: FILE: drivers/media/dvb/bt8xx/dst.c:735:
+		if (!strncmp (&state->rxbuffer[p_dst_type->offset], p_dst_type->device_id, strlen (p_dst_type->device_id))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p_dst_type->device_id'
#1114: FILE: drivers/media/dvb/bt8xx/dst.c:735:
+		if (!strncmp (&state->rxbuffer[p_dst_type->offset], p_dst_type->device_id, strlen (p_dst_type->device_id))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1120: FILE: drivers/media/dvb/bt8xx/dst.c:741:
+			printk ("%s: Recognise [%s]\n", __FUNCTION__, p_dst_type->device_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1120: FILE: drivers/media/dvb/bt8xx/dst.c:741:
+			printk ("%s: Recognise [%s]\n", __FUNCTION__, p_dst_type->device_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1120: FILE: drivers/media/dvb/bt8xx/dst.c:741:
+			printk ("%s: Recognise [%s]\n", __FUNCTION__, p_dst_type->device_id);

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(dst_tlist)
#1129: FILE: drivers/media/dvb/bt8xx/dst.c:747:
+	if (i >= sizeof (dst_tlist) / sizeof (dst_tlist [0])) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1129: FILE: drivers/media/dvb/bt8xx/dst.c:747:
+	if (i >= sizeof (dst_tlist) / sizeof (dst_tlist [0])) {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1129: FILE: drivers/media/dvb/bt8xx/dst.c:747:
+	if (i >= sizeof (dst_tlist) / sizeof (dst_tlist [0])) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1129: FILE: drivers/media/dvb/bt8xx/dst.c:747:
+	if (i >= sizeof (dst_tlist) / sizeof (dst_tlist [0])) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1130: FILE: drivers/media/dvb/bt8xx/dst.c:748:
+		printk("%s: Unable to recognize %s or %s\n", __FUNCTION__, &state->rxbuffer[0], &state->rxbuffer[1]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1130: FILE: drivers/media/dvb/bt8xx/dst.c:748:
+		printk("%s: Unable to recognize %s or %s\n", __FUNCTION__, &state->rxbuffer[0], &state->rxbuffer[1]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1130: FILE: drivers/media/dvb/bt8xx/dst.c:748:
+		printk("%s: Unable to recognize %s or %s\n", __FUNCTION__, &state->rxbuffer[0], &state->rxbuffer[1]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1131: FILE: drivers/media/dvb/bt8xx/dst.c:749:
+		printk("%s: please email linux-dvb@linuxtv.org with this type in\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1131: FILE: drivers/media/dvb/bt8xx/dst.c:749:
+		printk("%s: please email linux-dvb@linuxtv.org with this type in\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1153: FILE: drivers/media/dvb/bt8xx/dst.c:769:
+		dprintk("%s: RDC 8820 RESET Failed.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1158: FILE: drivers/media/dvb/bt8xx/dst.c:774:
+		dprintk("%s: DST Initialization Failed.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1163: FILE: drivers/media/dvb/bt8xx/dst.c:779:
+		dprintk("%s: unknown device.\n", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1170: FILE: drivers/media/dvb/bt8xx/dst.c:786:
+int dst_command(struct dst_state* state, u8 * data, u8 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1170: FILE: drivers/media/dvb/bt8xx/dst.c:786:
+int dst_command(struct dst_state* state, u8 * data, u8 len)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1175: FILE: drivers/media/dvb/bt8xx/dst.c:790:
+		dprintk("%s: DST Communication Initialization Failed.\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'Tring' may be misspelled - perhaps 'Trying'?
#1188: FILE: drivers/media/dvb/bt8xx/dst.c:796:
+			dprintk("%s: Tring to recover.. \n", __FUNCTION__);
 			             ^^^^^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1188: FILE: drivers/media/dvb/bt8xx/dst.c:796:
+			dprintk("%s: Tring to recover.. \n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1188: FILE: drivers/media/dvb/bt8xx/dst.c:796:
+			dprintk("%s: Tring to recover.. \n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1190: FILE: drivers/media/dvb/bt8xx/dst.c:798:
+			dprintk("%s: Recovery Failed.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1202: FILE: drivers/media/dvb/bt8xx/dst.c:804:
+		dprintk("%s: PIO Disable Failed.\n", __FUNCTION__);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1211: FILE: drivers/media/dvb/bt8xx/dst.c:810:
+			dprintk("%s: Trying to recover.. \n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1211: FILE: drivers/media/dvb/bt8xx/dst.c:810:
+			dprintk("%s: Trying to recover.. \n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1213: FILE: drivers/media/dvb/bt8xx/dst.c:812:
+			dprintk("%s: Recovery Failed.\n", __FUNCTION__);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1220: FILE: drivers/media/dvb/bt8xx/dst.c:819:
+		dprintk("%s: write not acknowledged 0x%02x \n", __FUNCTION__, reply);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1220: FILE: drivers/media/dvb/bt8xx/dst.c:819:
+		dprintk("%s: write not acknowledged 0x%02x \n", __FUNCTION__, reply);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1238: FILE: drivers/media/dvb/bt8xx/dst.c:829:
+			dprintk("%s: Trying to recover.. \n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1238: FILE: drivers/media/dvb/bt8xx/dst.c:829:
+			dprintk("%s: Trying to recover.. \n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1240: FILE: drivers/media/dvb/bt8xx/dst.c:831:
+			dprintk("%s: Recovery failed.\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'paket' may be misspelled - perhaps 'packet'?
#1265: FILE: drivers/media/dvb/bt8xx/dst.c:890:
+		paket[2] = 0x02;
 		^^^^^

WARNING:TYPO_SPELLING: 'paket' may be misspelled - perhaps 'packet'?
#1270: FILE: drivers/media/dvb/bt8xx/dst.c:894:
+		paket[3] = 0x02;
 		^^^^^

WARNING:TYPO_SPELLING: 'paket' may be misspelled - perhaps 'packet'?
#1272: FILE: drivers/media/dvb/bt8xx/dst.c:896:
+		paket[3] = 0;
 		^^^^^

WARNING:TYPO_SPELLING: 'paket' may be misspelled - perhaps 'packet'?
#1274: FILE: drivers/media/dvb/bt8xx/dst.c:898:
+	paket[7] = dst_check_sum (paket, 7);
 	^^^^^

WARNING:TYPO_SPELLING: 'paket' may be misspelled - perhaps 'packet'?
#1274: FILE: drivers/media/dvb/bt8xx/dst.c:898:
+	paket[7] = dst_check_sum (paket, 7);
 	                          ^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1274: FILE: drivers/media/dvb/bt8xx/dst.c:898:
+	paket[7] = dst_check_sum (paket, 7);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1291: FILE: drivers/media/dvb/bt8xx/dst.c:914:
+	msleep(10);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1316: FILE: drivers/media/dvb/bt8xx/dst.c:974:
+		dprintk("%s: DST Communication initialization failed.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1344: FILE: drivers/media/dvb/bt8xx/dst.c:993:
+		dprintk("%s: DST PIO disable failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1351: FILE: drivers/media/dvb/bt8xx/dst.c:998:
+		dprintk("%s: read verify not successful.\n", __FUNCTION__);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1355: FILE: drivers/media/dvb/bt8xx/dst.c:1002:
+		dprintk("%s: write not acknowledged 0x%02x \n", __FUNCTION__, reply);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1355: FILE: drivers/media/dvb/bt8xx/dst.c:1002:
+		dprintk("%s: write not acknowledged 0x%02x \n", __FUNCTION__, reply);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1443: FILE: drivers/media/dvb/bt8xx/dst.c:1234:
+struct dst_state* dst_attach(struct dst_state *state, struct dvb_adapter *dvb_adapter)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1451: FILE: drivers/media/dvb/bt8xx/dst.c:1240:
+		if (state)
+			kfree(state);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1472: FILE: drivers/media/dvb/bt8xx/dst.c:1259:
+		printk("%s: unknown DST type. please report to the LinuxTV.org DVB mailinglist.\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1472: FILE: drivers/media/dvb/bt8xx/dst.c:1259:
+		printk("%s: unknown DST type. please report to the LinuxTV.org DVB mailinglist.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1472: FILE: drivers/media/dvb/bt8xx/dst.c:1259:
+		printk("%s: unknown DST type. please report to the LinuxTV.org DVB mailinglist.\n", __FUNCTION__);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1474: FILE: drivers/media/dvb/bt8xx/dst.c:1261:
+		if (state)
+			kfree(state);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1490: FILE: drivers/media/dvb/bt8xx/dst.c:1273:
+EXPORT_SYMBOL(dst_attach);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1507: FILE: drivers/media/dvb/bt8xx/dst.c:1356:
 
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1564: FILE: drivers/media/dvb/bt8xx/dst_ca.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1565: FILE: drivers/media/dvb/bt8xx/dst_ca.c:2:
+/*
+	CA-driver for TwinHan DST Frontend/Card

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1580: FILE: drivers/media/dvb/bt8xx/dst_ca.c:17:
+^Ialong with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1581: FILE: drivers/media/dvb/bt8xx/dst_ca.c:18:
+^IFoundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1584: FILE: drivers/media/dvb/bt8xx/dst_ca.c:21:
+
+

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1614: FILE: drivers/media/dvb/bt8xx/dst_ca.c:51:
+#define dprintk if (debug) printk

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1616: FILE: drivers/media/dvb/bt8xx/dst_ca.c:53:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1629: FILE: drivers/media/dvb/bt8xx/dst_ca.c:66:
+
+

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#1635: FILE: drivers/media/dvb/bt8xx/dst_ca.c:72:
+		dprintk("%s: ========================= Checksum calculation ===========================\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1635: FILE: drivers/media/dvb/bt8xx/dst_ca.c:72:
+		dprintk("%s: ========================= Checksum calculation ===========================\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1636: FILE: drivers/media/dvb/bt8xx/dst_ca.c:73:
+		dprintk("%s: String Length=[0x%02x]\n", __FUNCTION__, length);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1638: FILE: drivers/media/dvb/bt8xx/dst_ca.c:75:
+		dprintk("%s: String=[", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1648: FILE: drivers/media/dvb/bt8xx/dst_ca.c:85:
+		dprintk("%s: Sum=[%02x]\n", __FUNCTION__, checksum);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1652: FILE: drivers/media/dvb/bt8xx/dst_ca.c:89:
+		dprintk("%s: Checksum=[%02x]\n", __FUNCTION__, check_string[length]);

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#1653: FILE: drivers/media/dvb/bt8xx/dst_ca.c:90:
+		dprintk("%s: ==========================================================================\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1653: FILE: drivers/media/dvb/bt8xx/dst_ca.c:90:
+		dprintk("%s: ==========================================================================\n", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1659: FILE: drivers/media/dvb/bt8xx/dst_ca.c:96:
+static int dst_ci_command(struct dst_state* state, u8 * data, u8 *ca_string, u8 len, int read)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1659: FILE: drivers/media/dvb/bt8xx/dst_ca.c:96:
+static int dst_ci_command(struct dst_state* state, u8 * data, u8 *ca_string, u8 len, int read)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1667: FILE: drivers/media/dvb/bt8xx/dst_ca.c:104:
+		dprintk("%s: Write not successful, trying to recover\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1673: FILE: drivers/media/dvb/bt8xx/dst_ca.c:110:
+		dprintk("%s: DST PIO disable failed.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1678: FILE: drivers/media/dvb/bt8xx/dst_ca.c:115:
+		dprintk("%s: Read not successful, trying to recover\n", __FUNCTION__);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1684: FILE: drivers/media/dvb/bt8xx/dst_ca.c:121:
+		if (! dst_wait_dst_ready(state, LONG_DELAY)) {
 		    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1685: FILE: drivers/media/dvb/bt8xx/dst_ca.c:122:
+			dprintk("%s: 8820 not ready\n", __FUNCTION__);

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1689: FILE: drivers/media/dvb/bt8xx/dst_ca.c:126:
+		if (read_dst(state, ca_string, 128) < 0) {	/*	Try to make this dynamic	*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1690: FILE: drivers/media/dvb/bt8xx/dst_ca.c:127:
+			dprintk("%s: Read not successful, trying to recover\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1699: FILE: drivers/media/dvb/bt8xx/dst_ca.c:136:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1707: FILE: drivers/media/dvb/bt8xx/dst_ca.c:144:
+			dprintk("%s: Put Command\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1718: FILE: drivers/media/dvb/bt8xx/dst_ca.c:155:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1726: FILE: drivers/media/dvb/bt8xx/dst_ca.c:163:
+		dprintk("%s: -->dst_put_ci FAILED !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1730: FILE: drivers/media/dvb/bt8xx/dst_ca.c:167:
+		dprintk("%s: -->dst_put_ci SUCCESS !\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#1732: FILE: drivers/media/dvb/bt8xx/dst_ca.c:169:
+		dprintk("%s: ================================ CI Module Application Info ======================================\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1732: FILE: drivers/media/dvb/bt8xx/dst_ca.c:169:
+		dprintk("%s: ================================ CI Module Application Info ======================================\n", __FUNCTION__);

WARNING:LONG_LINE_STRING: line length of 124 exceeds 100 columns
#1733: FILE: drivers/media/dvb/bt8xx/dst_ca.c:170:
+		dprintk("%s: Application Type=[%d], Application Vendor=[%d], Vendor Code=[%d]\n%s: Application info=[%s]\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1734: FILE: drivers/media/dvb/bt8xx/dst_ca.c:171:
+			__FUNCTION__, state->messages[7], (state->messages[8] << 8) | state->messages[9],

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1734: FILE: drivers/media/dvb/bt8xx/dst_ca.c:171:
+			__FUNCTION__, state->messages[7], (state->messages[8] << 8) | state->messages[9],

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1735: FILE: drivers/media/dvb/bt8xx/dst_ca.c:172:
+			(state->messages[10] << 8) | state->messages[11], __FUNCTION__, (char *)(&state->messages[11]));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1735: FILE: drivers/media/dvb/bt8xx/dst_ca.c:172:
+			(state->messages[10] << 8) | state->messages[11], __FUNCTION__, (char *)(&state->messages[11]));

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#1736: FILE: drivers/media/dvb/bt8xx/dst_ca.c:173:
+		dprintk("%s: ==================================================================================================\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1736: FILE: drivers/media/dvb/bt8xx/dst_ca.c:173:
+		dprintk("%s: ==================================================================================================\n", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1749: FILE: drivers/media/dvb/bt8xx/dst_ca.c:186:
+	if ((dst_put_ci(state, slot_command, sizeof (slot_command), slot_cap, GET_REPLY)) < 0) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1750: FILE: drivers/media/dvb/bt8xx/dst_ca.c:187:
+		dprintk("%s: -->dst_put_ci FAILED !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1754: FILE: drivers/media/dvb/bt8xx/dst_ca.c:191:
+		dprintk("%s: -->dst_put_ci SUCCESS !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1759: FILE: drivers/media/dvb/bt8xx/dst_ca.c:196:
+		dprintk("%s: Slot cap = [%d]\n", __FUNCTION__, slot_cap[7]);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1771: FILE: drivers/media/dvb/bt8xx/dst_ca.c:208:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1772: FILE: drivers/media/dvb/bt8xx/dst_ca.c:209:
+	if (copy_to_user((struct ca_caps *)arg, p_ca_caps, sizeof (struct ca_caps))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1772: FILE: drivers/media/dvb/bt8xx/dst_ca.c:209:
+	if (copy_to_user((struct ca_caps *)arg, p_ca_caps, sizeof (struct ca_caps))) {
+		return -EFAULT;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1779: FILE: drivers/media/dvb/bt8xx/dst_ca.c:216:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1785: FILE: drivers/media/dvb/bt8xx/dst_ca.c:222:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1794: FILE: drivers/media/dvb/bt8xx/dst_ca.c:231:
+	if ((dst_put_ci(state, slot_command, sizeof (slot_command), slot_info, GET_REPLY)) < 0) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1795: FILE: drivers/media/dvb/bt8xx/dst_ca.c:232:
+		dprintk("%s: -->dst_put_ci FAILED !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1799: FILE: drivers/media/dvb/bt8xx/dst_ca.c:236:
+		dprintk("%s: -->dst_put_ci SUCCESS !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1804: FILE: drivers/media/dvb/bt8xx/dst_ca.c:241:
+		dprintk("%s: Slot info = [%d]\n", __FUNCTION__, slot_info[3]);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1816: FILE: drivers/media/dvb/bt8xx/dst_ca.c:253:
+	}
+	else if (slot_info[4] & 0x40) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1821: FILE: drivers/media/dvb/bt8xx/dst_ca.c:258:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1821: FILE: drivers/media/dvb/bt8xx/dst_ca.c:258:
+	else {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1825: FILE: drivers/media/dvb/bt8xx/dst_ca.c:262:
+	if (copy_to_user((struct ca_slot_info *)arg, p_ca_slot_info, sizeof (struct ca_slot_info))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1825: FILE: drivers/media/dvb/bt8xx/dst_ca.c:262:
+	if (copy_to_user((struct ca_slot_info *)arg, p_ca_slot_info, sizeof (struct ca_slot_info))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1825: FILE: drivers/media/dvb/bt8xx/dst_ca.c:262:
+	if (copy_to_user((struct ca_slot_info *)arg, p_ca_slot_info, sizeof (struct ca_slot_info))) {
+		return -EFAULT;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1832: FILE: drivers/media/dvb/bt8xx/dst_ca.c:269:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1834: FILE: drivers/media/dvb/bt8xx/dst_ca.c:271:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1840: FILE: drivers/media/dvb/bt8xx/dst_ca.c:277:
+	if (copy_from_user(p_ca_message, (void *)arg, sizeof (struct ca_msg)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1843: FILE: drivers/media/dvb/bt8xx/dst_ca.c:280:
+
+

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#1846: FILE: drivers/media/dvb/bt8xx/dst_ca.c:283:
+			dprintk("Message = [%02x %02x %02x]\n", p_ca_message->msg[0], p_ca_message->msg[1], p_ca_message->msg[2]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1854: FILE: drivers/media/dvb/bt8xx/dst_ca.c:291:
+			dprintk("%s:Command=[0x%x]\n", __FUNCTION__, command);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1856: FILE: drivers/media/dvb/bt8xx/dst_ca.c:293:
+		switch (command) {
+			case CA_APP_INFO:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1859: FILE: drivers/media/dvb/bt8xx/dst_ca.c:296:
+				if (copy_to_user((void *)arg, p_ca_message, sizeof (struct ca_msg)) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1859: FILE: drivers/media/dvb/bt8xx/dst_ca.c:296:
+				if (copy_to_user((void *)arg, p_ca_message, sizeof (struct ca_msg)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1859: FILE: drivers/media/dvb/bt8xx/dst_ca.c:296:
+				if (copy_to_user((void *)arg, p_ca_message, sizeof (struct ca_msg)) )

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1871: FILE: drivers/media/dvb/bt8xx/dst_ca.c:308:
+		hw_buffer->msg[2] = p_ca_message->msg[1];		/*		MSB			*/

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1872: FILE: drivers/media/dvb/bt8xx/dst_ca.c:309:
+		hw_buffer->msg[3] = p_ca_message->msg[2];		/*		LSB			*/

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1874: FILE: drivers/media/dvb/bt8xx/dst_ca.c:311:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1874: FILE: drivers/media/dvb/bt8xx/dst_ca.c:311:
+	else {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1885: FILE: drivers/media/dvb/bt8xx/dst_ca.c:322:
+	dprintk("%s:Debug=[", __FUNCTION__);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1895: FILE: drivers/media/dvb/bt8xx/dst_ca.c:332:
+	if ((dst_put_ci(state, hw_buffer->msg, (hw_buffer->length + 1), hw_buffer->msg, reply)) < 0) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1896: FILE: drivers/media/dvb/bt8xx/dst_ca.c:333:
+		dprintk("%s: DST-CI Command failed.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1897: FILE: drivers/media/dvb/bt8xx/dst_ca.c:334:
+		dprintk("%s: Resetting DST.\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'succes' may be misspelled - perhaps 'success'?
#1902: FILE: drivers/media/dvb/bt8xx/dst_ca.c:339:
+		dprintk("%s: DST-CI Command succes.\n", __FUNCTION__);
 		                            ^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1902: FILE: drivers/media/dvb/bt8xx/dst_ca.c:339:
+		dprintk("%s: DST-CI Command succes.\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1907: FILE: drivers/media/dvb/bt8xx/dst_ca.c:344:
+
+

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1908: FILE: drivers/media/dvb/bt8xx/dst_ca.c:345:
+static int ca_set_pmt(struct dst_state *state, struct ca_msg *p_ca_message, struct ca_msg *hw_buffer, u8 reply, u8 query)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1912: FILE: drivers/media/dvb/bt8xx/dst_ca.c:349:
+	u8 found_prog_ca_desc = 0, found_stream_ca_desc = 0, error_condition = 0, hw_buffer_length = 0;

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1915: FILE: drivers/media/dvb/bt8xx/dst_ca.c:352:
+		dprintk("%s, p_ca_message length %d (0x%x)\n", __FUNCTION__,p_ca_message->length,p_ca_message->length );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1915: FILE: drivers/media/dvb/bt8xx/dst_ca.c:352:
+		dprintk("%s, p_ca_message length %d (0x%x)\n", __FUNCTION__,p_ca_message->length,p_ca_message->length );
 		                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1915: FILE: drivers/media/dvb/bt8xx/dst_ca.c:352:
+		dprintk("%s, p_ca_message length %d (0x%x)\n", __FUNCTION__,p_ca_message->length,p_ca_message->length );
 		                                                                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1915: FILE: drivers/media/dvb/bt8xx/dst_ca.c:352:
+		dprintk("%s, p_ca_message length %d (0x%x)\n", __FUNCTION__,p_ca_message->length,p_ca_message->length );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1915: FILE: drivers/media/dvb/bt8xx/dst_ca.c:352:
+		dprintk("%s, p_ca_message length %d (0x%x)\n", __FUNCTION__,p_ca_message->length,p_ca_message->length );

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1917: FILE: drivers/media/dvb/bt8xx/dst_ca.c:354:
+	handle_en50221_tag(p_ca_message, hw_buffer);			/*	EN50221 tag		*/

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1920: FILE: drivers/media/dvb/bt8xx/dst_ca.c:357:
+	if (!(p_ca_message->msg[3] & 0x80)) {				/*	Length = 1		*/

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1922: FILE: drivers/media/dvb/bt8xx/dst_ca.c:359:
+		words = 0;						/*	domi's suggestion	*/

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1924: FILE: drivers/media/dvb/bt8xx/dst_ca.c:361:
+	else {								/*	Length = words		*/

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1924: FILE: drivers/media/dvb/bt8xx/dst_ca.c:361:
+	}
+	else {								/*	Length = words		*/

CHECK:BRACES: Unbalanced braces around else statement
#1924: FILE: drivers/media/dvb/bt8xx/dst_ca.c:361:
+	else {								/*	Length = words		*/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1932: FILE: drivers/media/dvb/bt8xx/dst_ca.c:369:
+		dprintk("%s:Length=[%d (0x%x)], Words=[%d]\n", __FUNCTION__, length,length, words);
 		                                                                   ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1932: FILE: drivers/media/dvb/bt8xx/dst_ca.c:369:
+		dprintk("%s:Length=[%d (0x%x)], Words=[%d]\n", __FUNCTION__, length,length, words);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1945: FILE: drivers/media/dvb/bt8xx/dst_ca.c:382:
+		dprintk("\n%s:Program Header=[", __FUNCTION__);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#1956: FILE: drivers/media/dvb/bt8xx/dst_ca.c:393:
+	program_info_length = (((program_info_length | p_ca_message->msg[words + 8]) & 0x0f) << 8) | p_ca_message->msg[words + 9];

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1958: FILE: drivers/media/dvb/bt8xx/dst_ca.c:395:
+		dprintk("%s:Program info Length=[%d][%02x], hw_offset=[%d], buf_offset=[%d] \n",

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1959: FILE: drivers/media/dvb/bt8xx/dst_ca.c:396:
+			__FUNCTION__, program_info_length, program_info_length, hw_offset, buf_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1959: FILE: drivers/media/dvb/bt8xx/dst_ca.c:396:
+			__FUNCTION__, program_info_length, program_info_length, hw_offset, buf_offset);

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1961: FILE: drivers/media/dvb/bt8xx/dst_ca.c:398:
+	if (program_info_length && (program_info_length < 256)) {	/*	If program_info_length		*/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'program_info_length < 256'
#1961: FILE: drivers/media/dvb/bt8xx/dst_ca.c:398:
+	if (program_info_length && (program_info_length < 256)) {	/*	If program_info_length		*/

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1962: FILE: drivers/media/dvb/bt8xx/dst_ca.c:399:
+		hw_buffer->msg[11] = hw_buffer->msg[11] & 0x0f;		/*	req only 4 bits			*/

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1963: FILE: drivers/media/dvb/bt8xx/dst_ca.c:400:
+		hw_buffer->msg[12] = hw_buffer->msg[12] + 1;		/*	increment! ASIC bug!		*/

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1965: FILE: drivers/media/dvb/bt8xx/dst_ca.c:402:
+		if (p_ca_message->msg[buf_offset + 1] == 0x09) {	/*	Check CA descriptor		*/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1968: FILE: drivers/media/dvb/bt8xx/dst_ca.c:405:
+				dprintk("%s: Found CA descriptor @ Program level\n", __FUNCTION__);

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1971: FILE: drivers/media/dvb/bt8xx/dst_ca.c:408:
+		if (found_prog_ca_desc) {				/*	Command only if CA descriptor	*/

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1972: FILE: drivers/media/dvb/bt8xx/dst_ca.c:409:
+			hw_buffer->msg[13] = p_ca_message->msg[buf_offset];	/*	CA PMT command ID	*/

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1978: FILE: drivers/media/dvb/bt8xx/dst_ca.c:415:
+			dprintk("%s:**********>buf_offset=[%d], hw_offset=[%d]\n", __FUNCTION__, buf_offset, hw_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1978: FILE: drivers/media/dvb/bt8xx/dst_ca.c:415:
+			dprintk("%s:**********>buf_offset=[%d], hw_offset=[%d]\n", __FUNCTION__, buf_offset, hw_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1979: FILE: drivers/media/dvb/bt8xx/dst_ca.c:416:
+			dprintk("%s:Program descriptors=[", __FUNCTION__);

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1981: FILE: drivers/media/dvb/bt8xx/dst_ca.c:418:
+		while (program_info_length && !error_condition) {		/*	Copy prog descriptors	*/

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#1982: FILE: drivers/media/dvb/bt8xx/dst_ca.c:419:
+			if (program_info_length > p_ca_message->length) {	/*	Error situation		*/

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#1983: FILE: drivers/media/dvb/bt8xx/dst_ca.c:420:
+				dprintk ("%s:\"WARNING\" Length error, line=[%d], prog_info_length=[%d]\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1983: FILE: drivers/media/dvb/bt8xx/dst_ca.c:420:
+				dprintk ("%s:\"WARNING\" Length error, line=[%d], prog_info_length=[%d]\n",

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1984: FILE: drivers/media/dvb/bt8xx/dst_ca.c:421:
+								__FUNCTION__, __LINE__, program_info_length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1984: FILE: drivers/media/dvb/bt8xx/dst_ca.c:421:
+				dprintk ("%s:\"WARNING\" Length error, line=[%d], prog_info_length=[%d]\n",
+								__FUNCTION__, __LINE__, program_info_length);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1984: FILE: drivers/media/dvb/bt8xx/dst_ca.c:421:
+								__FUNCTION__, __LINE__, program_info_length);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1985: FILE: drivers/media/dvb/bt8xx/dst_ca.c:422:
+				dprintk("%s:\"WARNING\" Bailing out of possible loop\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1985: FILE: drivers/media/dvb/bt8xx/dst_ca.c:422:
+				dprintk("%s:\"WARNING\" Bailing out of possible loop\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1996: FILE: drivers/media/dvb/bt8xx/dst_ca.c:433:
+			dprintk("%s:**********>buf_offset=[%d], hw_offset=[%d]\n", __FUNCTION__, buf_offset, hw_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1996: FILE: drivers/media/dvb/bt8xx/dst_ca.c:433:
+			dprintk("%s:**********>buf_offset=[%d], hw_offset=[%d]\n", __FUNCTION__, buf_offset, hw_offset);

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#2000: FILE: drivers/media/dvb/bt8xx/dst_ca.c:437:
+				hw_buffer->msg[13] = 0x01;		/*	OK descrambling			*/

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2004: FILE: drivers/media/dvb/bt8xx/dst_ca.c:441:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#2004: FILE: drivers/media/dvb/bt8xx/dst_ca.c:441:
+			else {

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#2005: FILE: drivers/media/dvb/bt8xx/dst_ca.c:442:
+				hw_buffer->msg[13] = 0x02;		/*	Ok MMI				*/

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#2010: FILE: drivers/media/dvb/bt8xx/dst_ca.c:447:
+				hw_buffer->msg[13] = 0x03;		/*	Query				*/

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2016: FILE: drivers/media/dvb/bt8xx/dst_ca.c:453:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#2016: FILE: drivers/media/dvb/bt8xx/dst_ca.c:453:
+	else {

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#2017: FILE: drivers/media/dvb/bt8xx/dst_ca.c:454:
+		hw_buffer->msg[11] = hw_buffer->msg[11] & 0xf0;		/*	Don't write to ASIC		*/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2018: FILE: drivers/media/dvb/bt8xx/dst_ca.c:455:
+		hw_buffer->msg[12] = hw_buffer->msg[12] = 0x00;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#2021: FILE: drivers/media/dvb/bt8xx/dst_ca.c:458:
+		dprintk("%s:**********>p_ca_message->length=[%d], buf_offset=[%d], hw_offset=[%d]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2022: FILE: drivers/media/dvb/bt8xx/dst_ca.c:459:
+		dprintk("%s:**********>p_ca_message->length=[%d], buf_offset=[%d], hw_offset=[%d]\n",
+					__FUNCTION__, p_ca_message->length, buf_offset, hw_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2022: FILE: drivers/media/dvb/bt8xx/dst_ca.c:459:
+					__FUNCTION__, p_ca_message->length, buf_offset, hw_offset);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2026: FILE: drivers/media/dvb/bt8xx/dst_ca.c:463:
+		if ((es_info_length > p_ca_message->length) || (buf_offset > p_ca_message->length)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'es_info_length > p_ca_message->length'
#2026: FILE: drivers/media/dvb/bt8xx/dst_ca.c:463:
+		if ((es_info_length > p_ca_message->length) || (buf_offset > p_ca_message->length)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf_offset > p_ca_message->length'
#2026: FILE: drivers/media/dvb/bt8xx/dst_ca.c:463:
+		if ((es_info_length > p_ca_message->length) || (buf_offset > p_ca_message->length)) {

WARNING:LONG_LINE_STRING: line length of 115 exceeds 100 columns
#2027: FILE: drivers/media/dvb/bt8xx/dst_ca.c:464:
+			dprintk("%s:\"WARNING\" Length error, line=[%d], prog_info_length=[%d], buf_offset=[%d]\n",

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#2028: FILE: drivers/media/dvb/bt8xx/dst_ca.c:465:
+							__FUNCTION__, __LINE__, program_info_length, buf_offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2028: FILE: drivers/media/dvb/bt8xx/dst_ca.c:465:
+			dprintk("%s:\"WARNING\" Length error, line=[%d], prog_info_length=[%d], buf_offset=[%d]\n",
+							__FUNCTION__, __LINE__, program_info_length, buf_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2028: FILE: drivers/media/dvb/bt8xx/dst_ca.c:465:
+							__FUNCTION__, __LINE__, program_info_length, buf_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2030: FILE: drivers/media/dvb/bt8xx/dst_ca.c:467:
+			dprintk("%s:\"WARNING\" Bailing out of possible loop\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2037: FILE: drivers/media/dvb/bt8xx/dst_ca.c:474:
+		for (k = 0; k < 5; k++) {
+			hw_buffer->msg[hw_offset + k] = p_ca_message->msg[buf_offset + k];
+		}

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#2042: FILE: drivers/media/dvb/bt8xx/dst_ca.c:479:
+		es_info_length = (es_info_length | (p_ca_message->msg[buf_offset + 3] & 0x0f)) << 8 | p_ca_message->msg[buf_offset + 4];

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2045: FILE: drivers/media/dvb/bt8xx/dst_ca.c:482:
+			dprintk("\n%s:----->Stream header=[%02x %02x %02x %02x %02x]\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2045: FILE: drivers/media/dvb/bt8xx/dst_ca.c:482:
+			dprintk("\n%s:----->Stream header=[%02x %02x %02x %02x %02x]\n", __FUNCTION__,

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2046: FILE: drivers/media/dvb/bt8xx/dst_ca.c:483:
+				p_ca_message->msg[buf_offset + 0], p_ca_message->msg[buf_offset + 1],

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2047: FILE: drivers/media/dvb/bt8xx/dst_ca.c:484:
+				p_ca_message->msg[buf_offset + 2], p_ca_message->msg[buf_offset + 3],

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#2050: FILE: drivers/media/dvb/bt8xx/dst_ca.c:487:
+			dprintk("%s:----->Stream type=[%02x], es length=[%d (0x%x)], Chars=[%02x] [%02x], buf_offset=[%d]\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2050: FILE: drivers/media/dvb/bt8xx/dst_ca.c:487:
+			dprintk("%s:----->Stream type=[%02x], es length=[%d (0x%x)], Chars=[%02x] [%02x], buf_offset=[%d]\n", __FUNCTION__,

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#2052: FILE: drivers/media/dvb/bt8xx/dst_ca.c:489:
+				p_ca_message->msg[buf_offset + 3], p_ca_message->msg[buf_offset + 4], buf_offset);

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#2055: FILE: drivers/media/dvb/bt8xx/dst_ca.c:492:
+		hw_buffer->msg[hw_offset + 3] &= 0x0f;			/*	req only 4 bits			*/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2067: FILE: drivers/media/dvb/bt8xx/dst_ca.c:504:
+				dprintk("%s:Found CA descriptor @ Stream level\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2073: FILE: drivers/media/dvb/bt8xx/dst_ca.c:510:
+		if (es_info_length && !error_condition && !found_prog_ca_desc && found_stream_ca_desc) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#2073: FILE: drivers/media/dvb/bt8xx/dst_ca.c:510:
+		if (es_info_length && !error_condition && !found_prog_ca_desc && found_stream_ca_desc) {
[...]
+				hw_buffer->msg[hw_offset] = p_ca_message->msg[buf_offset];	/*	CA PMT cmd(es)	*/

WARNING:LONG_LINE_COMMENT: line length of 122 exceeds 100 columns
#2075: FILE: drivers/media/dvb/bt8xx/dst_ca.c:512:
+				hw_buffer->msg[hw_offset] = p_ca_message->msg[buf_offset];	/*	CA PMT cmd(es)	*/

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#2077: FILE: drivers/media/dvb/bt8xx/dst_ca.c:514:
+					printk("%s:----->CA PMT Command ID=[%02x]\n", __FUNCTION__, p_ca_message->msg[buf_offset]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2077: FILE: drivers/media/dvb/bt8xx/dst_ca.c:514:
+					printk("%s:----->CA PMT Command ID=[%02x]\n", __FUNCTION__, p_ca_message->msg[buf_offset]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2077: FILE: drivers/media/dvb/bt8xx/dst_ca.c:514:
+					printk("%s:----->CA PMT Command ID=[%02x]\n", __FUNCTION__, p_ca_message->msg[buf_offset]);

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#2078: FILE: drivers/media/dvb/bt8xx/dst_ca.c:515:
+//				hw_offset++, buf_offset++, hw_buffer_length++, es_info_length--, ca_pmt_done = 1;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2082: FILE: drivers/media/dvb/bt8xx/dst_ca.c:519:
+				dprintk("%s:----->ES descriptors=[", __FUNCTION__);

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#2084: FILE: drivers/media/dvb/bt8xx/dst_ca.c:521:
+			while (es_info_length && !error_condition) {	/*	ES descriptors			*/

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#2085: FILE: drivers/media/dvb/bt8xx/dst_ca.c:522:
+				if ((es_info_length > p_ca_message->length) || (buf_offset > p_ca_message->length)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'es_info_length > p_ca_message->length'
#2085: FILE: drivers/media/dvb/bt8xx/dst_ca.c:522:
+				if ((es_info_length > p_ca_message->length) || (buf_offset > p_ca_message->length)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf_offset > p_ca_message->length'
#2085: FILE: drivers/media/dvb/bt8xx/dst_ca.c:522:
+				if ((es_info_length > p_ca_message->length) || (buf_offset > p_ca_message->length)) {

WARNING:LONG_LINE_STRING: line length of 140 exceeds 100 columns
#2087: FILE: drivers/media/dvb/bt8xx/dst_ca.c:524:
+						dprintk("%s:\"WARNING\" ES Length error, line=[%d], es_info_length=[%d], buf_offset=[%d]\n",

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#2088: FILE: drivers/media/dvb/bt8xx/dst_ca.c:525:
+										__FUNCTION__, __LINE__, es_info_length, buf_offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2088: FILE: drivers/media/dvb/bt8xx/dst_ca.c:525:
+						dprintk("%s:\"WARNING\" ES Length error, line=[%d], es_info_length=[%d], buf_offset=[%d]\n",
+										__FUNCTION__, __LINE__, es_info_length, buf_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2088: FILE: drivers/media/dvb/bt8xx/dst_ca.c:525:
+										__FUNCTION__, __LINE__, es_info_length, buf_offset);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2090: FILE: drivers/media/dvb/bt8xx/dst_ca.c:527:
+						dprintk("%s:\"WARNING\" Bailing out of possible loop\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2090: FILE: drivers/media/dvb/bt8xx/dst_ca.c:527:
+						dprintk("%s:\"WARNING\" Bailing out of possible loop\n", __FUNCTION__);

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#2101: FILE: drivers/media/dvb/bt8xx/dst_ca.c:538:
+			found_stream_ca_desc = 0;			/*	unset for new streams		*/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2115: FILE: drivers/media/dvb/bt8xx/dst_ca.c:552:
+
+

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#2122: FILE: drivers/media/dvb/bt8xx/dst_ca.c:559:
+		dprintk("%s:======================DEBUGGING================================\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2122: FILE: drivers/media/dvb/bt8xx/dst_ca.c:559:
+		dprintk("%s:======================DEBUGGING================================\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2123: FILE: drivers/media/dvb/bt8xx/dst_ca.c:560:
+		dprintk("%s: Actual Length=[%d]\n", __FUNCTION__, hw_buffer_length);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2129: FILE: drivers/media/dvb/bt8xx/dst_ca.c:566:
+		dprintk("%s: Reply = [%d]\n", __FUNCTION__, reply);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2136: FILE: drivers/media/dvb/bt8xx/dst_ca.c:573:
+static int dst_check_ca_pmt(struct dst_state *state, struct ca_msg *p_ca_message, struct ca_msg *hw_buffer)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2143: FILE: drivers/media/dvb/bt8xx/dst_ca.c:580:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2147: FILE: drivers/media/dvb/bt8xx/dst_ca.c:584:
+			dprintk("%s: ca_set_pmt.. failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2153: FILE: drivers/media/dvb/bt8xx/dst_ca.c:590:
+		dprintk("%s: Not there yet\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2158: FILE: drivers/media/dvb/bt8xx/dst_ca.c:595:
+			dprintk("%s: ca_set_pmt.. failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2162: FILE: drivers/media/dvb/bt8xx/dst_ca.c:599:
+			dprintk("%s: ca_set_pmt.. success !\n", __FUNCTION__);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2165: FILE: drivers/media/dvb/bt8xx/dst_ca.c:602:
+
+	}

CHECK:SPACING: No space is necessary after a cast
#2177: FILE: drivers/media/dvb/bt8xx/dst_ca.c:614:
+	if ((hw_buffer = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2177: FILE: drivers/media/dvb/bt8xx/dst_ca.c:614:
+	if ((hw_buffer = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2177: FILE: drivers/media/dvb/bt8xx/dst_ca.c:614:
+	if ((hw_buffer = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2177: FILE: drivers/media/dvb/bt8xx/dst_ca.c:614:
+	if ((hw_buffer = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hw_buffer)...) over kmalloc(sizeof (struct ca_msg)...)
#2177: FILE: drivers/media/dvb/bt8xx/dst_ca.c:614:
+	if ((hw_buffer = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2178: FILE: drivers/media/dvb/bt8xx/dst_ca.c:615:
+		printk("%s: Memory allocation failure\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2178: FILE: drivers/media/dvb/bt8xx/dst_ca.c:615:
+		printk("%s: Memory allocation failure\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2182: FILE: drivers/media/dvb/bt8xx/dst_ca.c:619:
+		dprintk("%s\n", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2184: FILE: drivers/media/dvb/bt8xx/dst_ca.c:621:
+	if (copy_from_user(p_ca_message, (void *)arg, sizeof (struct ca_msg)))

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#2188: FILE: drivers/media/dvb/bt8xx/dst_ca.c:625:
+		ca_message_header_len = p_ca_message->length;	/*	Restore it back when you are done	*/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2198: FILE: drivers/media/dvb/bt8xx/dst_ca.c:635:
+			dprintk("%s:Command=[0x%x]\n", __FUNCTION__, command);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2200: FILE: drivers/media/dvb/bt8xx/dst_ca.c:637:
+		switch (command) {
+			case CA_PMT:
[...]
+			case CA_PMT_REPLY:
[...]
+			case CA_APP_INFO_ENQUIRY:		// only for debugging

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2205: FILE: drivers/media/dvb/bt8xx/dst_ca.c:642:
+					dprintk("%s: -->CA_PMT Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2209: FILE: drivers/media/dvb/bt8xx/dst_ca.c:646:
+					dprintk("%s: -->CA_PMT Success !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2219: FILE: drivers/media/dvb/bt8xx/dst_ca.c:656:
+					dprintk("%s: -->CA_PMT_REPLY Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2223: FILE: drivers/media/dvb/bt8xx/dst_ca.c:660:
+					dprintk("%s: -->CA_PMT_REPLY Success !\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2230: FILE: drivers/media/dvb/bt8xx/dst_ca.c:667:
+					dprintk("%s: Getting Cam Application information\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2230: FILE: drivers/media/dvb/bt8xx/dst_ca.c:667:
+					dprintk("%s: Getting Cam Application information\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2233: FILE: drivers/media/dvb/bt8xx/dst_ca.c:670:
+					dprintk("%s: -->CA_APP_INFO_ENQUIRY Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2233: FILE: drivers/media/dvb/bt8xx/dst_ca.c:670:
+					dprintk("%s: -->CA_APP_INFO_ENQUIRY Failed !\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2237: FILE: drivers/media/dvb/bt8xx/dst_ca.c:674:
+					printk("%s: -->CA_APP_INFO_ENQUIRY Success !\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2237: FILE: drivers/media/dvb/bt8xx/dst_ca.c:674:
+					printk("%s: -->CA_APP_INFO_ENQUIRY Success !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2237: FILE: drivers/media/dvb/bt8xx/dst_ca.c:674:
+					printk("%s: -->CA_APP_INFO_ENQUIRY Success !\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#2247: FILE: drivers/media/dvb/bt8xx/dst_ca.c:684:
+	struct dvb_device* dvbdev = (struct dvb_device*) file->private_data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2247: FILE: drivers/media/dvb/bt8xx/dst_ca.c:684:
+	struct dvb_device* dvbdev = (struct dvb_device*) file->private_data;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2247: FILE: drivers/media/dvb/bt8xx/dst_ca.c:684:
+	struct dvb_device* dvbdev = (struct dvb_device*) file->private_data;

CHECK:SPACING: No space is necessary after a cast
#2248: FILE: drivers/media/dvb/bt8xx/dst_ca.c:685:
+	struct dst_state* state = (struct dst_state*) dvbdev->priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2248: FILE: drivers/media/dvb/bt8xx/dst_ca.c:685:
+	struct dst_state* state = (struct dst_state*) dvbdev->priv;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2248: FILE: drivers/media/dvb/bt8xx/dst_ca.c:685:
+	struct dst_state* state = (struct dst_state*) dvbdev->priv;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2253: FILE: drivers/media/dvb/bt8xx/dst_ca.c:690:
+	if ((p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

CHECK:SPACING: No space is necessary after a cast
#2253: FILE: drivers/media/dvb/bt8xx/dst_ca.c:690:
+	if ((p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2253: FILE: drivers/media/dvb/bt8xx/dst_ca.c:690:
+	if ((p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2253: FILE: drivers/media/dvb/bt8xx/dst_ca.c:690:
+	if ((p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2253: FILE: drivers/media/dvb/bt8xx/dst_ca.c:690:
+	if ((p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p_ca_message)...) over kmalloc(sizeof (struct ca_msg)...)
#2253: FILE: drivers/media/dvb/bt8xx/dst_ca.c:690:
+	if ((p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL)) == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2254: FILE: drivers/media/dvb/bt8xx/dst_ca.c:691:
+		printk("%s: Memory allocation failure\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2254: FILE: drivers/media/dvb/bt8xx/dst_ca.c:691:
+		printk("%s: Memory allocation failure\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#2258: FILE: drivers/media/dvb/bt8xx/dst_ca.c:695:
+	if ((p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL)) == NULL) {

CHECK:SPACING: No space is necessary after a cast
#2258: FILE: drivers/media/dvb/bt8xx/dst_ca.c:695:
+	if ((p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL)) == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2258: FILE: drivers/media/dvb/bt8xx/dst_ca.c:695:
+	if ((p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2258: FILE: drivers/media/dvb/bt8xx/dst_ca.c:695:
+	if ((p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL)) == NULL) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2258: FILE: drivers/media/dvb/bt8xx/dst_ca.c:695:
+	if ((p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p_ca_slot_info)...) over kmalloc(sizeof (struct ca_slot_info)...)
#2258: FILE: drivers/media/dvb/bt8xx/dst_ca.c:695:
+	if ((p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL)) == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2259: FILE: drivers/media/dvb/bt8xx/dst_ca.c:696:
+		printk("%s: Memory allocation failure\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2259: FILE: drivers/media/dvb/bt8xx/dst_ca.c:696:
+		printk("%s: Memory allocation failure\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#2263: FILE: drivers/media/dvb/bt8xx/dst_ca.c:700:
+	if ((p_ca_caps = (struct ca_caps *) kmalloc(sizeof (struct ca_caps), GFP_KERNEL)) == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2263: FILE: drivers/media/dvb/bt8xx/dst_ca.c:700:
+	if ((p_ca_caps = (struct ca_caps *) kmalloc(sizeof (struct ca_caps), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2263: FILE: drivers/media/dvb/bt8xx/dst_ca.c:700:
+	if ((p_ca_caps = (struct ca_caps *) kmalloc(sizeof (struct ca_caps), GFP_KERNEL)) == NULL) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2263: FILE: drivers/media/dvb/bt8xx/dst_ca.c:700:
+	if ((p_ca_caps = (struct ca_caps *) kmalloc(sizeof (struct ca_caps), GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p_ca_caps)...) over kmalloc(sizeof (struct ca_caps)...)
#2263: FILE: drivers/media/dvb/bt8xx/dst_ca.c:700:
+	if ((p_ca_caps = (struct ca_caps *) kmalloc(sizeof (struct ca_caps), GFP_KERNEL)) == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2264: FILE: drivers/media/dvb/bt8xx/dst_ca.c:701:
+		printk("%s: Memory allocation failure\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2264: FILE: drivers/media/dvb/bt8xx/dst_ca.c:701:
+		printk("%s: Memory allocation failure\n", __FUNCTION__);

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#2268: FILE: drivers/media/dvb/bt8xx/dst_ca.c:705:
+	/*	We have now only the standard ioctl's, the driver is upposed to handle internals.	*/

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2269: FILE: drivers/media/dvb/bt8xx/dst_ca.c:706:
+	switch (cmd) {
+		case CA_SEND_MSG:
[...]
+		case CA_GET_MSG:
[...]
+		case CA_RESET:
[...]
+		case CA_GET_SLOT_INFO:
[...]
+		case CA_GET_CAP:
[...]
+		case CA_GET_DESCR_INFO:
[...]
+		case CA_SET_DESCR:
[...]
+		case CA_SET_PID:
[...]
+		default:

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2272: FILE: drivers/media/dvb/bt8xx/dst_ca.c:709:
+				dprintk("%s: Sending message\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2274: FILE: drivers/media/dvb/bt8xx/dst_ca.c:711:
+				dprintk("%s: -->CA_SEND_MSG Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2282: FILE: drivers/media/dvb/bt8xx/dst_ca.c:719:
+				dprintk("%s: Getting message\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2284: FILE: drivers/media/dvb/bt8xx/dst_ca.c:721:
+				dprintk("%s: -->CA_GET_MSG Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2288: FILE: drivers/media/dvb/bt8xx/dst_ca.c:725:
+				dprintk("%s: -->CA_GET_MSG Success !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2294: FILE: drivers/media/dvb/bt8xx/dst_ca.c:731:
+				dprintk("%s: Resetting DST\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2302: FILE: drivers/media/dvb/bt8xx/dst_ca.c:739:
+				dprintk("%s: Getting Slot info\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2304: FILE: drivers/media/dvb/bt8xx/dst_ca.c:741:
+				dprintk("%s: -->CA_GET_SLOT_INFO Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2308: FILE: drivers/media/dvb/bt8xx/dst_ca.c:745:
+				dprintk("%s: -->CA_GET_SLOT_INFO Success !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2314: FILE: drivers/media/dvb/bt8xx/dst_ca.c:751:
+				dprintk("%s: Getting Slot capabilities\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2316: FILE: drivers/media/dvb/bt8xx/dst_ca.c:753:
+				dprintk("%s: -->CA_GET_CAP Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2320: FILE: drivers/media/dvb/bt8xx/dst_ca.c:757:
+				dprintk("%s: -->CA_GET_CAP Success !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2326: FILE: drivers/media/dvb/bt8xx/dst_ca.c:763:
+				dprintk("%s: Getting descrambler description\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2328: FILE: drivers/media/dvb/bt8xx/dst_ca.c:765:
+				dprintk("%s: -->CA_GET_DESCR_INFO Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2332: FILE: drivers/media/dvb/bt8xx/dst_ca.c:769:
+				dprintk("%s: -->CA_GET_DESCR_INFO Success !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2338: FILE: drivers/media/dvb/bt8xx/dst_ca.c:775:
+				dprintk("%s: Setting descrambler\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2340: FILE: drivers/media/dvb/bt8xx/dst_ca.c:777:
+				dprintk("%s: -->CA_SET_DESCR Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2344: FILE: drivers/media/dvb/bt8xx/dst_ca.c:781:
+				dprintk("%s: -->CA_SET_DESCR Success !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2350: FILE: drivers/media/dvb/bt8xx/dst_ca.c:787:
+				dprintk("%s: Setting PID\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2352: FILE: drivers/media/dvb/bt8xx/dst_ca.c:789:
+				dprintk("%s: -->CA_SET_PID Failed !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2356: FILE: drivers/media/dvb/bt8xx/dst_ca.c:793:
+				dprintk("%s: -->CA_SET_PID Success !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2368: FILE: drivers/media/dvb/bt8xx/dst_ca.c:805:
+		dprintk("%s:Device opened [%p]\n", __FUNCTION__, file);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2377: FILE: drivers/media/dvb/bt8xx/dst_ca.c:814:
+		dprintk("%s:Device closed.\n", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2383: FILE: drivers/media/dvb/bt8xx/dst_ca.c:820:
+static int dst_ca_read(struct file *file, char __user * buffer, size_t length, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2383: FILE: drivers/media/dvb/bt8xx/dst_ca.c:820:
+static int dst_ca_read(struct file *file, char __user * buffer, size_t length, loff_t * offset)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2388: FILE: drivers/media/dvb/bt8xx/dst_ca.c:825:
+		dprintk("%s:Device read.\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2393: FILE: drivers/media/dvb/bt8xx/dst_ca.c:830:
+static int dst_ca_write(struct file *file, const char __user * buffer, size_t length, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2393: FILE: drivers/media/dvb/bt8xx/dst_ca.c:830:
+static int dst_ca_write(struct file *file, const char __user * buffer, size_t length, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2393: FILE: drivers/media/dvb/bt8xx/dst_ca.c:830:
+static int dst_ca_write(struct file *file, const char __user * buffer, size_t length, loff_t * offset)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2396: FILE: drivers/media/dvb/bt8xx/dst_ca.c:833:
+		dprintk("%s:Device write.\n", __FUNCTION__);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#2401: FILE: drivers/media/dvb/bt8xx/dst_ca.c:838:
+static struct file_operations dst_ca_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#2421: FILE: drivers/media/dvb/bt8xx/dst_ca.c:858:
+	struct dvb_device *dvbdev;
+	if (verbose > 4)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2422: FILE: drivers/media/dvb/bt8xx/dst_ca.c:859:
+		dprintk("%s:registering DST-CA device\n", __FUNCTION__);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2427: FILE: drivers/media/dvb/bt8xx/dst_ca.c:864:
+EXPORT_SYMBOL(dst_ca_attach);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2437: FILE: drivers/media/dvb/bt8xx/dst_ca.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2438: FILE: drivers/media/dvb/bt8xx/dst_ca.h:2:
+/*
+	CA-driver for TwinHan DST Frontend/Card

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2453: FILE: drivers/media/dvb/bt8xx/dst_ca.h:17:
+^Ialong with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2454: FILE: drivers/media/dvb/bt8xx/dst_ca.h:18:
+^IFoundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2462: FILE: drivers/media/dvb/bt8xx/dst_ca.h:26:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2487: FILE: drivers/media/dvb/bt8xx/dst_ca.h:51:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2493: FILE: drivers/media/dvb/bt8xx/dst_ca.h:57:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2500: FILE: drivers/media/dvb/bt8xx/dst_common.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2501: FILE: drivers/media/dvb/bt8xx/dst_common.h:2:
+/*
+	Frontend-driver for TwinHan DST Frontend

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2517: FILE: drivers/media/dvb/bt8xx/dst_common.h:18:
+^Ialong with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2518: FILE: drivers/media/dvb/bt8xx/dst_common.h:19:
+^IFoundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2530: FILE: drivers/media/dvb/bt8xx/dst_common.h:31:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2549: FILE: drivers/media/dvb/bt8xx/dst_common.h:50:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2561: FILE: drivers/media/dvb/bt8xx/dst_common.h:62:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2577: FILE: drivers/media/dvb/bt8xx/dst_common.h:78:
+struct dst_state {
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2578: FILE: drivers/media/dvb/bt8xx/dst_common.h:79:
+	struct i2c_adapter* i2c;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2580: FILE: drivers/media/dvb/bt8xx/dst_common.h:81:
+	struct bt878* bt;

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#2582: FILE: drivers/media/dvb/bt8xx/dst_common.h:83:
+	struct dvb_frontend_ops ops;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2585: FILE: drivers/media/dvb/bt8xx/dst_common.h:86:
+	const struct dst_config* config;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2623: FILE: drivers/media/dvb/bt8xx/dst_common.h:124:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2626: FILE: drivers/media/dvb/bt8xx/dst_common.h:127:
+struct dst_config
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2631: FILE: drivers/media/dvb/bt8xx/dst_common.h:132:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2638: FILE: drivers/media/dvb/bt8xx/dst_common.h:139:
+int dst_error_recovery(struct dst_state* state);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2640: FILE: drivers/media/dvb/bt8xx/dst_common.h:141:
+int dst_comm_init(struct dst_state* state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2642: FILE: drivers/media/dvb/bt8xx/dst_common.h:143:
+int write_dst(struct dst_state *state, u8 * data, u8 len);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2643: FILE: drivers/media/dvb/bt8xx/dst_common.h:144:
+int read_dst(struct dst_state *state, u8 * ret, u8 len);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2644: FILE: drivers/media/dvb/bt8xx/dst_common.h:145:
+u8 dst_check_sum(u8 * buf, u32 len);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2645: FILE: drivers/media/dvb/bt8xx/dst_common.h:146:
+struct dst_state* dst_attach(struct dst_state* state, struct dvb_adapter *dvb_adapter);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2645: FILE: drivers/media/dvb/bt8xx/dst_common.h:146:
+struct dst_state* dst_attach(struct dst_state* state, struct dvb_adapter *dvb_adapter);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2647: FILE: drivers/media/dvb/bt8xx/dst_common.h:148:
+int dst_gpio_outb(struct dst_state* state, u32 mask, u32 enbb, u32 outhigh, int delay);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2649: FILE: drivers/media/dvb/bt8xx/dst_common.h:150:
+int dst_command(struct dst_state* state, u8 * data, u8 len);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2649: FILE: drivers/media/dvb/bt8xx/dst_common.h:150:
+int dst_command(struct dst_state* state, u8 * data, u8 len);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2651: FILE: drivers/media/dvb/bt8xx/dst_common.h:152:
+
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2680: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:164:
+	if (params->frequency == 0) bs = 0x03;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2689: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:193:
+	       1576000,1718000,1856000,2036000,2150000};
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2689: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:193:
+	       1576000,1718000,1856000,2036000,2150000};
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2689: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:193:
+	       1576000,1718000,1856000,2036000,2150000};
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2689: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:193:
+	       1576000,1718000,1856000,2036000,2150000};
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2693: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:195:
+	       0x00102000,0x00104000,0x00108000,0x00110000,
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2693: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:195:
+	       0x00102000,0x00104000,0x00108000,0x00110000,
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2693: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:195:
+	       0x00102000,0x00104000,0x00108000,0x00110000,
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2694: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:196:
+	       0x00120000,0x00140000};
 	                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2698: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:199:
+	printk("cx24108 debug: entering SetTunerFreq, freq=%d\n",freq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2698: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:199:
+	printk("cx24108 debug: entering SetTunerFreq, freq=%d\n",freq);
 	                                                        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2705: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:203:
+	if(freq<950000) freq=950000; /* kHz */
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2705: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:203:
+	if(freq<950000) freq=950000; /* kHz */
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#2705: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:203:
+	if(freq<950000) freq=950000; /* kHz */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2705: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:203:
+	if(freq<950000) freq=950000; /* kHz */

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#2706: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:204:
+	if(freq>2150000) freq=2150000; /* satellite IF is 950..2150MHz */
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2706: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:204:
+	if(freq>2150000) freq=2150000; /* satellite IF is 950..2150MHz */
 	                     ^

ERROR:SPACING: space required before the open parenthesis '('
#2706: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:204:
+	if(freq>2150000) freq=2150000; /* satellite IF is 950..2150MHz */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2706: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:204:
+	if(freq>2150000) freq=2150000; /* satellite IF is 950..2150MHz */

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(osci)
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);
 	          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);
 	                       ^

ERROR:SPACING: spaces required around that '&&' (ctx:VxV)
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);
 	                                        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);
 	                                                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);
 	                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2734: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:207:
+	for(i=1;(i<sizeof(osci)/sizeof(osci[0]))&&(osci[i]<freq);i++);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2735: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:208:
+	printk("cx24108 debug: select vco #%d (f=%d)\n",i,freq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2735: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:208:
+	printk("cx24108 debug: select vco #%d (f=%d)\n",i,freq);
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2735: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:208:
+	printk("cx24108 debug: select vco #%d (f=%d)\n",i,freq);
 	                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2736: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:209:
+	band=bandsel[i];
 	    ^

WARNING:TYPO_SPELLING: 'Conexant' may be misspelled - perhaps 'Connexant'?
#2738: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:211:
+	/* compute the pll divider needed, from Conexant data sheet,
 	                                        ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2739: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:212:
+	/* compute the pll divider needed, from Conexant data sheet,
+	   resolved for (n*32+a), remember f(vco) is f(receive) *2 or *4,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2741: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:214:
+	   bands  */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2742: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:215:
+	n=((i<=2?2:1)*freq*10L)/(XTAL/100);
 	 ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#2742: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:215:
+	n=((i<=2?2:1)*freq*10L)/(XTAL/100);
 	     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2742: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:215:
+	n=((i<=2?2:1)*freq*10L)/(XTAL/100);
 	        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2742: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:215:
+	n=((i<=2?2:1)*freq*10L)/(XTAL/100);
 	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2742: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:215:
+	n=((i<=2?2:1)*freq*10L)/(XTAL/100);
 	             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2742: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:215:
+	n=((i<=2?2:1)*freq*10L)/(XTAL/100);
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2742: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:215:
+	n=((i<=2?2:1)*freq*10L)/(XTAL/100);
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2742: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:215:
+	n=((i<=2?2:1)*freq*10L)/(XTAL/100);
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2743: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:216:
+	a=n%32; n/=32; if(a==0) n--;
 	 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2743: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:216:
+	a=n%32; n/=32; if(a==0) n--;
 	   ^

ERROR:SPACING: spaces required around that '/=' (ctx:VxV)
#2743: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:216:
+	a=n%32; n/=32; if(a==0) n--;
 	         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2743: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:216:
+	a=n%32; n/=32; if(a==0) n--;
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#2743: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:216:
+	a=n%32; n/=32; if(a==0) n--;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2744: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:217:
+	pump=(freq<(osci[i-1]+osci[i])/2);
 	    ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2744: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:217:
+	pump=(freq<(osci[i-1]+osci[i])/2);
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2744: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:217:
+	pump=(freq<(osci[i-1]+osci[i])/2);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2744: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:217:
+	pump=(freq<(osci[i-1]+osci[i])/2);
 	                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2744: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:217:
+	pump=(freq<(osci[i-1]+osci[i])/2);
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2745: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:218:
+	pll=0xf8000000|
 	   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#2745: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:218:
+	pll=0xf8000000|
 	              ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2746: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:219:
+	    ((pump?1:2)<<(14+11))|
 	          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2746: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:219:
+	    ((pump?1:2)<<(14+11))|
 	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2746: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:219:
+	    ((pump?1:2)<<(14+11))|
 	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2746: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:219:
+	    ((pump?1:2)<<(14+11))|
 	                    ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#2746: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:219:
+	    ((pump?1:2)<<(14+11))|
 	                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2747: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:220:
+	    ((n&0x1ff)<<(5+11))|
 	       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2747: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:220:
+	    ((n&0x1ff)<<(5+11))|
 	              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2747: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:220:
+	    ((n&0x1ff)<<(5+11))|
 	                  ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#2747: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:220:
+	    ((n&0x1ff)<<(5+11))|
 	                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2748: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:221:
+	    ((a&0x1f)<<11);
 	       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2748: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:221:
+	    ((a&0x1f)<<11);
 	             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2750: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:223:
+	/* everything is shifted left 11 bits to left-align the bits in the
+	   32bit word. Output to the tuner goes MSB-aligned, after all */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2750: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:223:
+	   32bit word. Output to the tuner goes MSB-aligned, after all */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2751: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:224:
+	printk("cx24108 debug: pump=%d, n=%d, a=%d\n",pump,n,a);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2751: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:224:
+	printk("cx24108 debug: pump=%d, n=%d, a=%d\n",pump,n,a);
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2751: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:224:
+	printk("cx24108 debug: pump=%d, n=%d, a=%d\n",pump,n,a);
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2751: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:224:
+	printk("cx24108 debug: pump=%d, n=%d, a=%d\n",pump,n,a);
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2752: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:225:
+	cx24110_pll_write(fe,band);
 	                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2754: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:227:
+	/* set vga and vca to their widest-band settings, as a precaution.
+	   SetSymbolrate might not be called to set this up */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2754: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:227:
+	   SetSymbolrate might not be called to set this up */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2755: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:228:
+	cx24110_pll_write(fe,0x500c0000);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2756: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:229:
+	cx24110_pll_write(fe,0x83f1f800);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2757: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:230:
+	cx24110_pll_write(fe,pll);
 	                    ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2775: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:467:
+	struct dst_state* state = NULL;

CHECK:SPACING: No space is necessary after a cast
#2786: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:510:
+		state = (struct dst_state *) kmalloc(sizeof (struct dst_state), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2786: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:510:
+		state = (struct dst_state *) kmalloc(sizeof (struct dst_state), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2786: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:510:
+		state = (struct dst_state *) kmalloc(sizeof (struct dst_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*state)...) over kmalloc(sizeof (struct dst_state)...)
#2786: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:510:
+		state = (struct dst_state *) kmalloc(sizeof (struct dst_state), GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2794: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:518:
+			printk("%s: Could not find a Twinhan DST.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2794: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:518:
+			printk("%s: Could not find a Twinhan DST.\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2801: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:525:
+		if (state->dst_hw_cap & DST_TYPE_HAS_CA) {
+			ret = dst_ca_attach(state, &card->dvb_adapter);
+		}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2812: FILE: drivers/media/dvb/bt8xx/dvb-bt8xx.c:672:
+			      BT878_DA_IOM=1,BT878_DA_APP to enable serial highspeed mode. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185020.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 113 errors, 327 warnings, 85 checks, 2666 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185020.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
