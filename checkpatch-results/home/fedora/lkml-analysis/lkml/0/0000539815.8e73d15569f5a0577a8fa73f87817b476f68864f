ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#41: 
--- a/fs/attr.c	Wed Apr 18 18:33:44 2001

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#47: FILE: fs/attr.c:114:
+int generic_inode_setattr(struct inode *inode, struct iattr * attr) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#47: FILE: fs/attr.c:114:
+int generic_inode_setattr(struct inode *inode, struct iattr * attr) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited before semicolon
#48: FILE: fs/attr.c:115:
+	int error  ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#59: FILE: fs/attr.c:126:
+	return error ;

WARNING:SPACING: space prohibited before semicolon
#77: FILE: fs/attr.c:149:
+		error = generic_inode_setattr(inode, attr) ;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#88: FILE: fs/reiserfs/file.c:109:
+static int reiserfs_setattr(struct dentry *dentry, struct iattr *attr) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: fs/reiserfs/file.c:110:
+    struct inode *inode = dentry->d_inode ;$

WARNING:SPACING: space prohibited before semicolon
#89: FILE: fs/reiserfs/file.c:110:
+    struct inode *inode = dentry->d_inode ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#90: FILE: fs/reiserfs/file.c:111:
+    struct inode *inode = dentry->d_inode ;
+    if (attr->ia_valid & ATTR_SIZE) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/reiserfs/file.c:111:
+    if (attr->ia_valid & ATTR_SIZE) {$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#92: FILE: fs/reiserfs/file.c:113:
+	/* version 2 items will be caught by the s_maxbytes check
+	** done for us in vmtruncate

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: fs/reiserfs/file.c:115:
+        if (inode_items_version(inode) == ITEM_VERSION_1 && $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: fs/reiserfs/file.c:115:
+        if (inode_items_version(inode) == ITEM_VERSION_1 && $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: fs/reiserfs/file.c:115:
+        if (inode_items_version(inode) == ITEM_VERSION_1 && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#94: FILE: fs/reiserfs/file.c:115:
+        if (inode_items_version(inode) == ITEM_VERSION_1 && 
[...]
+            return -EFBIG ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: fs/reiserfs/file.c:117:
+            return -EFBIG ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: fs/reiserfs/file.c:117:
+            return -EFBIG ;$

WARNING:SPACING: space prohibited before semicolon
#96: FILE: fs/reiserfs/file.c:117:
+            return -EFBIG ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: fs/reiserfs/file.c:118:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: fs/reiserfs/file.c:119:
+    return generic_inode_setattr(inode, attr) ;$

WARNING:SPACING: space prohibited before semicolon
#98: FILE: fs/reiserfs/file.c:119:
+    return generic_inode_setattr(inode, attr) ;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#107: FILE: fs/reiserfs/file.c:134:
+    setattr:    reiserfs_setattr,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#107: FILE: fs/reiserfs/file.c:134:
+    setattr:    reiserfs_setattr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/reiserfs/super.c:415:
+    s->s_maxbytes = MAX_NON_LFS; /* old format is always limited at 2GB */$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#130: FILE: fs/reiserfs/super.c:498:
+    /* new format is limited by the 32 bit wide i_blocks field, want to
+    ** be one full block below that.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: fs/reiserfs/super.c:500:
+    s->s_maxbytes = (512LL << 32) - s->s_blocksize ;$

WARNING:SPACING: space prohibited before semicolon
#132: FILE: fs/reiserfs/super.c:500:
+    s->s_maxbytes = (512LL << 32) - s->s_blocksize ;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: include/linux/fs.h:1362:
+extern int generic_inode_setattr(struct inode *, struct iattr *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#143: FILE: include/linux/fs.h:1362:
+extern int generic_inode_setattr(struct inode *, struct iattr *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iattr *' should also have an identifier name
#143: FILE: include/linux/fs.h:1362:
+extern int generic_inode_setattr(struct inode *, struct iattr *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000539815.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 22 warnings, 1 checks, 95 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000539815.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
