CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#120: FILE: arch/i386/kernel/suspend.c:74:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: arch/i386/kernel/suspend.c:106:
+	struct tss_struct * t = init_tss + cpu;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#154: FILE: arch/i386/kernel/suspend.c:108:
+	set_tss_desc(cpu,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
 	                    	                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#154: FILE: arch/i386/kernel/suspend.c:108:
+	set_tss_desc(cpu,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
 	                    	                                                                       ^^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 189 exceeds 100 columns
#154: FILE: arch/i386/kernel/suspend.c:108:
+	set_tss_desc(cpu,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: arch/i386/kernel/suspend.c:108:
+	set_tss_desc(cpu,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/i386/kernel/suspend.c:109:
+        cpu_gdt_table[cpu][GDT_ENTRY_TSS].b &= 0xfffffdff;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/i386/kernel/suspend.c:109:
+        cpu_gdt_table[cpu][GDT_ENTRY_TSS].b &= 0xfffffdff;$

ERROR:SPACING: space required before the open brace '{'
#163: FILE: arch/i386/kernel/suspend.c:117:
+	if (current->thread.debugreg[7]){

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/i386/kernel/suspend.c:118:
+                loaddebug(&current->thread, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/i386/kernel/suspend.c:118:
+                loaddebug(&current->thread, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/i386/kernel/suspend.c:119:
+                loaddebug(&current->thread, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/i386/kernel/suspend.c:119:
+                loaddebug(&current->thread, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: arch/i386/kernel/suspend.c:120:
+                loaddebug(&current->thread, 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/i386/kernel/suspend.c:120:
+                loaddebug(&current->thread, 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/i386/kernel/suspend.c:121:
+                loaddebug(&current->thread, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/i386/kernel/suspend.c:121:
+                loaddebug(&current->thread, 3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/i386/kernel/suspend.c:122:
+                /* no 4 and 5 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/i386/kernel/suspend.c:123:
+                loaddebug(&current->thread, 6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/i386/kernel/suspend.c:123:
+                loaddebug(&current->thread, 6);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/i386/kernel/suspend.c:124:
+                loaddebug(&current->thread, 7);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/i386/kernel/suspend.c:124:
+                loaddebug(&current->thread, 7);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#173: FILE: arch/i386/kernel/suspend.c:127:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: arch/i386/kernel/suspend.c:131:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: arch/i386/kernel/suspend.c:136:
+ * many assumptions about the layout of the stack this far down.) Also, the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: arch/i386/kernel/suspend.c:137:
+ * handy little __builtin_frame_pointer(level) where level > 0, is blatantly $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: arch/i386/kernel/suspend.c:138:
+ * buggy - it returns the value of the stack at the proper location, not the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: arch/i386/kernel/suspend.c:140:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: arch/i386/kernel/suspend.c:145:
+ * place. $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: arch/i386/kernel/suspend.c:147:
+static inline void save_processor_context (void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: arch/i386/kernel/suspend.c:157:
+^I * so it's avoided. $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#294: FILE: arch/i386/kernel/suspend.c:239:
+	printk(KERN_CRIT  "do_suspend_lowlevel okay\n");

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#331: FILE: arch/i386/kernel/suspend.c:248:
+int loop2 __nosavedata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#333: FILE: arch/i386/kernel/suspend.c:250:
+#if 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#345: FILE: arch/i386/kernel/suspend_asm.S:1:
+.text

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: arch/i386/kernel/suspend_asm.S:50:
+^Imovl %cr3, %eax;              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: arch/i386/kernel/suspend_asm.S:51:
+movl %eax, %cr3;  # flush TLB $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#455: FILE: include/asm-i386/suspend.h:38:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#465: FILE: kernel/suspend.c:238:
+	BUG_ON(in_atomic());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: kernel/suspend.c:503:
+^I^I^Iif ((ADDRESS(pfn) >= (unsigned long) &__nosave_begin) && $

CHECK:SPACING: No space is necessary after a cast
#484: FILE: kernel/suspend.c:503:
+			if ((ADDRESS(pfn) >= (unsigned long) &__nosave_begin) && 

CHECK:SPACING: No space is necessary after a cast
#485: FILE: kernel/suspend.c:504:
+			    (ADDRESS(pfn) <  (unsigned long) &__nosave_end)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#547: FILE: kernel/suspend.c:812:
+	BUG_ON(in_atomic());

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414978.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 16 warnings, 5 checks, 497 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414978.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
