WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#71: FILE: drivers/net/via-rhine.c:392:
+static struct rhine_chip_info rhine_chip_info[] __devinitdata =

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#162: FILE: drivers/net/via-rhine.c:627:
+static int __devinit rhine_init_one (struct pci_dev *pdev,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: drivers/net/via-rhine.c:627:
+static int __devinit rhine_init_one (struct pci_dev *pdev,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: drivers/net/via-rhine.c:628:
+static int __devinit rhine_init_one (struct pci_dev *pdev,
 					 const struct pci_device_id *ent)

CHECK:CAMELCASE: Avoid CamelCase: <HasWOL>
#196: FILE: drivers/net/via-rhine.c:714:
+	if (rhine_chip_info[chip_id].drv_flags & HasWOL) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#215: FILE: drivers/net/via-rhine.c:773:
+	spin_lock_init (&rp->lock);

CHECK:CAMELCASE: Avoid CamelCase: <ReqTxAlign>
#249: FILE: drivers/net/via-rhine.c:799:
+	if (rp->drv_flags & ReqTxAlign)

CHECK:CAMELCASE: Avoid CamelCase: <CanHaveMII>
#285: FILE: drivers/net/via-rhine.c:832:
+	if (rp->drv_flags & CanHaveMII) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/net/via-rhine.c:871:
+				mdio_write(dev, rp->phys[0], MII_BMCR,
 						   ((option & 0x300) ? 0x2000 : 0) |  /* 100mbps? */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/net/via-rhine.c:906:
+		rp->tx_bufs = pci_alloc_consistent(rp->pdev, PKT_BUF_SZ * TX_RING_SIZE,
+								   &rp->tx_bufs_dma);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp->tx_bufs"
#360: FILE: drivers/net/via-rhine.c:907:
+		if (rp->tx_bufs == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: drivers/net/via-rhine.c:909:
+			pci_free_consistent(rp->pdev,
 				    RX_RING_SIZE * sizeof(struct rx_desc) +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/net/via-rhine.c:936:
+		pci_free_consistent(rp->pdev, PKT_BUF_SZ * TX_RING_SIZE,
+							rp->tx_bufs, rp->tx_bufs_dma);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#415: FILE: drivers/net/via-rhine.c:948:
+	rp->dirty_rx = rp->cur_rx = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#438: FILE: drivers/net/via-rhine.c:963:
+	rp->rx_ring[i-1].next_desc = cpu_to_le32(rp->rx_ring_dma);
 	             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#445: FILE: drivers/net/via-rhine.c:968:
+		struct sk_buff *skb = dev_alloc_skb(rp->rx_buf_sz);
+		rp->rx_skbuff[i] = skb;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/net/via-rhine.c:975:
+			pci_map_single(rp->pdev, skb->tail, rp->rx_buf_sz,
 						   PCI_DMA_FROMDEVICE);

CHECK:CAMELCASE: Avoid CamelCase: <DescOwn>
#459: FILE: drivers/net/via-rhine.c:978:
+		rp->rx_ring[i].rx_status = cpu_to_le32(DescOwn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/net/via-rhine.c:994:
+			pci_unmap_single(rp->pdev,
+							 rp->rx_skbuff_dma[i],

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#502: FILE: drivers/net/via-rhine.c:1008:
+	rp->dirty_tx = rp->cur_tx = 0;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#518: FILE: drivers/net/via-rhine.c:1018:
+	rp->tx_ring[i-1].next_desc = cpu_to_le32(rp->tx_ring_dma);
 	             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: drivers/net/via-rhine.c:1034:
+				pci_unmap_single(rp->pdev,
+								 rp->tx_skbuff_dma[i],

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#544: FILE: drivers/net/via-rhine.c:1035:
+								 rp->tx_skbuff[i]->len, PCI_DMA_TODEVICE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <RxRingPtr>
#580: FILE: drivers/net/via-rhine.c:1064:
+	writel(rp->rx_ring_dma, ioaddr + RxRingPtr);

CHECK:CAMELCASE: Avoid CamelCase: <TxRingPtr>
#581: FILE: drivers/net/via-rhine.c:1065:
+	writel(rp->tx_ring_dma, ioaddr + TxRingPtr);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#596: FILE: drivers/net/via-rhine.c:1076:
+	rp->chip_cmd = CmdStart|CmdTxOn|CmdRxOn|CmdNoTxPoll;
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#596: FILE: drivers/net/via-rhine.c:1076:
+	rp->chip_cmd = CmdStart|CmdTxOn|CmdRxOn|CmdNoTxPoll;
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#596: FILE: drivers/net/via-rhine.c:1076:
+	rp->chip_cmd = CmdStart|CmdTxOn|CmdRxOn|CmdNoTxPoll;
 	                                       ^

CHECK:CAMELCASE: Avoid CamelCase: <CmdStart>
#596: FILE: drivers/net/via-rhine.c:1076:
+	rp->chip_cmd = CmdStart|CmdTxOn|CmdRxOn|CmdNoTxPoll;

CHECK:CAMELCASE: Avoid CamelCase: <CmdTxOn>
#596: FILE: drivers/net/via-rhine.c:1076:
+	rp->chip_cmd = CmdStart|CmdTxOn|CmdRxOn|CmdNoTxPoll;

CHECK:CAMELCASE: Avoid CamelCase: <CmdRxOn>
#596: FILE: drivers/net/via-rhine.c:1076:
+	rp->chip_cmd = CmdStart|CmdTxOn|CmdRxOn|CmdNoTxPoll;

CHECK:CAMELCASE: Avoid CamelCase: <CmdNoTxPoll>
#596: FILE: drivers/net/via-rhine.c:1076:
+	rp->chip_cmd = CmdStart|CmdTxOn|CmdRxOn|CmdNoTxPoll;

CHECK:CAMELCASE: Avoid CamelCase: <CmdFDuplex>
#598: FILE: drivers/net/via-rhine.c:1078:
+		rp->chip_cmd |= CmdFDuplex;

CHECK:CAMELCASE: Avoid CamelCase: <ChipCmd>
#599: FILE: drivers/net/via-rhine.c:1079:
+	writew(rp->chip_cmd, ioaddr + ChipCmd);

CHECK:CAMELCASE: Avoid CamelCase: <HasESIPhy>
#610: FILE: drivers/net/via-rhine.c:1087:
+			   (rp->drv_flags & HasESIPhy) ? 0x0080 : 0x0001);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#663: FILE: drivers/net/via-rhine.c:1154:
+		printk(KERN_DEBUG "%s: rhine_open() irq %d.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rhine_open', this function's name, in a string
#663: FILE: drivers/net/via-rhine.c:1154:
+		printk(KERN_DEBUG "%s: rhine_open() irq %d.\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: drivers/net/via-rhine.c:1155:
+		printk(KERN_DEBUG "%s: rhine_open() irq %d.\n",
+			   dev->name, rp->pdev->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#676: FILE: drivers/net/via-rhine.c:1165:
+		printk(KERN_DEBUG "%s: Done rhine_open(), status %4.4x "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rhine_open', this function's name, in a string
#676: FILE: drivers/net/via-rhine.c:1165:
+		printk(KERN_DEBUG "%s: Done rhine_open(), status %4.4x "

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#691: FILE: drivers/net/via-rhine.c:1174:
+	rp->timer.expires = jiffies + 2 * HZ/100;
 	                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#750: FILE: drivers/net/via-rhine.c:1221:
+	spin_lock_irq (&rp->lock);

ERROR:SPACING: space prohibited after that open parenthesis '('
#759: FILE: drivers/net/via-rhine.c:1227:
+	if ( (mii_status & BMSR_LSTATUS) != (rp->mii_status & BMSR_LSTATUS) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#759: FILE: drivers/net/via-rhine.c:1227:
+	if ( (mii_status & BMSR_LSTATUS) != (rp->mii_status & BMSR_LSTATUS) ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#769: FILE: drivers/net/via-rhine.c:1235:
+	spin_unlock_irq (&rp->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#779: FILE: drivers/net/via-rhine.c:1242:
+static void rhine_tx_timeout (struct net_device *dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#789: FILE: drivers/net/via-rhine.c:1250:
+		mdio_read (dev, rp->phys[0], MII_BMSR));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#847: FILE: drivers/net/via-rhine.c:1301:
+	if ((rp->drv_flags & ReqTxAlign) &&
 		(((long)skb->data & 3) || skb_shinfo(skb)->nr_frags != 0 || skb->ip_summed == CHECKSUM_HW)

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#866: FILE: drivers/net/via-rhine.c:1314:
+										  (rp->tx_buf[entry] - rp->tx_bufs));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#882: FILE: drivers/net/via-rhine.c:1325:
+	spin_lock_irq (&rp->lock);

CHECK:CAMELCASE: Avoid CamelCase: <CmdTxDemand>
#898: FILE: drivers/net/via-rhine.c:1340:
+		writew(CmdTxDemand | rp->chip_cmd, dev->base_addr + ChipCmd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#909: FILE: drivers/net/via-rhine.c:1349:
+	spin_unlock_irq (&rp->lock);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#914: FILE: drivers/net/via-rhine.c:1353:
+			   dev->name, rp->cur_tx-1, entry);
 			                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#940: FILE: drivers/net/via-rhine.c:1394:
+					printk(KERN_WARNING "%s: rhine_interrupt() "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#970: FILE: drivers/net/via-rhine.c:1428:
+	spin_lock (&rp->lock);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#991: FILE: drivers/net/via-rhine.c:1443:
+			if (txstatus & 0x0400) rp->stats.tx_carrier_errors++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#992: FILE: drivers/net/via-rhine.c:1444:
+			if (txstatus & 0x0200) rp->stats.tx_window_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#993: FILE: drivers/net/via-rhine.c:1445:
+			if (txstatus & 0x0100) rp->stats.tx_aborted_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#994: FILE: drivers/net/via-rhine.c:1446:
+			if (txstatus & 0x0080) rp->stats.tx_heartbeat_errors++;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rp->chip_id == VT86C100A'
#995: FILE: drivers/net/via-rhine.c:1447:
+			if (((rp->chip_id == VT86C100A) && txstatus & 0x0002) ||
 				(txstatus & 0x0800) || (txstatus & 0x1000)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#996: FILE: drivers/net/via-rhine.c:1448:
+			if (((rp->chip_id == VT86C100A) && txstatus & 0x0002) ||
 				(txstatus & 0x0800) || (txstatus & 0x1000)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1028: FILE: drivers/net/via-rhine.c:1469:
+			pci_unmap_single(rp->pdev,
+							 rp->tx_skbuff_dma[entry],

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1029: FILE: drivers/net/via-rhine.c:1470:
+							 rp->tx_skbuff[entry]->len, PCI_DMA_TODEVICE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1043: FILE: drivers/net/via-rhine.c:1479:
+	spin_unlock (&rp->lock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1061: FILE: drivers/net/via-rhine.c:1491:
+		printk(KERN_DEBUG "%s: rhine_rx(), entry %d status %8.8x.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rhine_rx', this function's name, in a string
#1061: FILE: drivers/net/via-rhine.c:1491:
+		printk(KERN_DEBUG "%s: rhine_rx(), entry %d status %8.8x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1062: FILE: drivers/net/via-rhine.c:1492:
+		printk(KERN_DEBUG "%s: rhine_rx(), entry %d status %8.8x.\n",
+			   dev->name, entry, le32_to_cpu(rp->rx_head_desc->rx_status));

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1068: FILE: drivers/net/via-rhine.c:1496:
+	while ( ! (rp->rx_head_desc->rx_status & cpu_to_le32(DescOwn))) {
 	        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1068: FILE: drivers/net/via-rhine.c:1496:
+	while ( ! (rp->rx_head_desc->rx_status & cpu_to_le32(DescOwn))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1075: FILE: drivers/net/via-rhine.c:1502:
+			printk(KERN_DEBUG "  rhine_rx() status is %8.8x.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rhine_rx', this function's name, in a string
#1075: FILE: drivers/net/via-rhine.c:1502:
+			printk(KERN_DEBUG "  rhine_rx() status is %8.8x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1076: FILE: drivers/net/via-rhine.c:1503:
+			printk(KERN_DEBUG "  rhine_rx() status is %8.8x.\n",
 				   desc_status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1091: FILE: drivers/net/via-rhine.c:1517:
+					printk(KERN_DEBUG "  rhine_rx() Rx error was %8.8x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1092: FILE: drivers/net/via-rhine.c:1518:
+					printk(KERN_DEBUG "  rhine_rx() Rx error was %8.8x.\n",
 						   desc_status);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1098: FILE: drivers/net/via-rhine.c:1520:
+				if (desc_status & 0x0030) rp->stats.rx_length_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1099: FILE: drivers/net/via-rhine.c:1521:
+				if (desc_status & 0x0048) rp->stats.rx_fifo_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1100: FILE: drivers/net/via-rhine.c:1522:
+				if (desc_status & 0x0004) rp->stats.rx_frame_errors++;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1106: FILE: drivers/net/via-rhine.c:1525:
+					spin_lock (&rp->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1108: FILE: drivers/net/via-rhine.c:1527:
+					spin_unlock (&rp->lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1119: FILE: drivers/net/via-rhine.c:1542:
+				pci_dma_sync_single_for_cpu(rp->pdev, rp->rx_skbuff_dma[entry],
+						    rp->rx_buf_sz, PCI_DMA_FROMDEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1131: FILE: drivers/net/via-rhine.c:1552:
+				memcpy(skb_put(skb, pkt_len), rp->rx_skbuff[entry]->tail,
 					   pkt_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1136: FILE: drivers/net/via-rhine.c:1555:
+				pci_dma_sync_single_for_device(rp->pdev, rp->rx_skbuff_dma[entry],
+						    rp->rx_buf_sz, PCI_DMA_FROMDEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1151: FILE: drivers/net/via-rhine.c:1566:
+				pci_unmap_single(rp->pdev, rp->rx_skbuff_dma[entry],
+								 rp->rx_buf_sz, PCI_DMA_FROMDEVICE);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp->rx_skbuff[entry]"
#1176: FILE: drivers/net/via-rhine.c:1582:
+		if (rp->rx_skbuff[entry] == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1186: FILE: drivers/net/via-rhine.c:1590:
+				pci_map_single(rp->pdev, skb->tail, rp->rx_buf_sz,
 							   PCI_DMA_FROMDEVICE);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1201: FILE: drivers/net/via-rhine.c:1612:
+static void rhine_restart_tx(struct net_device *dev) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1215: FILE: drivers/net/via-rhine.c:1628:
+		writel(rp->tx_ring_dma + entry * sizeof(struct tx_desc),
 			   ioaddr + TxRingPtr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1225: FILE: drivers/net/via-rhine.c:1636:
+			printk(KERN_WARNING "%s: rhine_restart_tx() "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1240: FILE: drivers/net/via-rhine.c:1648:
+	spin_lock (&rp->lock);

CHECK:CAMELCASE: Avoid CamelCase: <HasDavicomPhy>
#1247: FILE: drivers/net/via-rhine.c:1653:
+			if (rp->drv_flags & HasDavicomPhy)

CHECK:CAMELCASE: Avoid CamelCase: <RxCRCErrs>
#1263: FILE: drivers/net/via-rhine.c:1664:
+		rp->stats.rx_crc_errors	+= readw(ioaddr + RxCRCErrs);

CHECK:CAMELCASE: Avoid CamelCase: <RxMissed>
#1264: FILE: drivers/net/via-rhine.c:1665:
+		rp->stats.rx_missed_errors	+= readw(ioaddr + RxMissed);

CHECK:CAMELCASE: Avoid CamelCase: <TxConfig>
#1275: FILE: drivers/net/via-rhine.c:1675:
+			writeb(rp->tx_thresh += 0x20, ioaddr + TxConfig);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1290: FILE: drivers/net/via-rhine.c:1689:
+		if (rp->tx_thresh < 0xE0) {
+			writeb(rp->tx_thresh += 0x20, ioaddr + TxConfig);
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1311: FILE: drivers/net/via-rhine.c:1709:
+	spin_unlock (&rp->lock);

CHECK:CAMELCASE: Avoid CamelCase: <RxConfig>
#1349: FILE: drivers/net/via-rhine.c:1760:
+	writeb(rp->rx_thresh | rx_mode, ioaddr + RxConfig);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1360: FILE: drivers/net/via-rhine.c:1769:
+	strcpy (info->bus_info, pci_name(rp->pdev));

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1493: FILE: drivers/net/via-rhine.c:1895:
+static void __devexit rhine_remove_one (struct pci_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1493: FILE: drivers/net/via-rhine.c:1895:
+static void __devexit rhine_remove_one (struct pci_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1514: FILE: drivers/net/via-rhine.c:1921:
+static int __init rhine_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1521: FILE: drivers/net/via-rhine.c:1927:
+	return pci_module_init (&rhine_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1526: FILE: drivers/net/via-rhine.c:1931:
+static void __exit rhine_cleanup (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1529: FILE: drivers/net/via-rhine.c:1933:
+	pci_unregister_driver (&rhine_driver);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000280183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 39 warnings, 52 checks, 1450 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000280183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
