WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#84: FILE: mm/mempolicy.c:1519:
+static const char *policy_types[] = { "default", "prefer", "bind",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: mm/mempolicy.c:1553:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: mm/mempolicy.c:1558:
+ ^Iif (buffer + maxlen < p + l + 1)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: mm/mempolicy.c:1558:
+ ^Iif (buffer + maxlen < p + l + 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: mm/mempolicy.c:1558:
+ ^Iif (buffer + maxlen < p + l + 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: mm/mempolicy.c:1559:
+ ^I^Ireturn -ENOSPC;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: mm/mempolicy.c:1559:
+ ^I^Ireturn -ENOSPC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: mm/mempolicy.c:1559:
+ ^I^Ireturn -ENOSPC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: mm/mempolicy.c:1568:
+^I ^Ip += nodelist_scnprintf(p, buffer + maxlen - p, nodes);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#133: FILE: mm/mempolicy.c:1568:
+^I ^Ip += nodelist_scnprintf(p, buffer + maxlen - p, nodes);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*md)...) over kzalloc(sizeof(struct numa_maps)...)
#177: FILE: mm/mempolicy.c:1612:
+	md = kzalloc(sizeof(struct numa_maps), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: mm/mempolicy.c:1617:
+	check_pgd_range(vma, vma->vm_start, vma->vm_end,
+		    &node_online_map, MPOL_MF_STATS, md);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: mm/mempolicy.c:1628:
+			seq_printf(m," anon=%lu",md->anon);
 			            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: mm/mempolicy.c:1628:
+			seq_printf(m," anon=%lu",md->anon);
 			                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: fs/proc/task_mmu.c:396:
+        .start  = m_start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: fs/proc/task_mmu.c:396:
+        .start  = m_start,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: fs/proc/task_mmu.c:397:
+        .next   = m_next,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: fs/proc/task_mmu.c:397:
+        .next   = m_next,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: fs/proc/task_mmu.c:398:
+        .stop   = m_stop,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: fs/proc/task_mmu.c:398:
+        .stop   = m_stop,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: fs/proc/task_mmu.c:399:
+        .show   = show_numa_map$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: fs/proc/task_mmu.c:399:
+        .show   = show_numa_map$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132487.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 11 warnings, 2 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132487.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
