WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#37: 
Signed-Off-By: H. Peter Anvin <hpa@zytor.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#59: FILE: fs/fat/dir.c:642:
+		return fat_generic_ioctl(inode, filp, cmd, arg);
 		                                ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited after that open parenthesis '('
#95: FILE: fs/fat/inode.c:280:
+	if ( MSDOS_SB(sb)->options.isvfat ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#95: FILE: fs/fat/inode.c:280:
+	if ( MSDOS_SB(sb)->options.isvfat ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: fs/fat/inode.c:285:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#132: FILE: fs/fat/inode.c:1346:
+int fat_generic_ioctl(struct inode * inode, struct file * filp,
                                                           ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: fs/fat/inode.c:1346:
+int fat_generic_ioctl(struct inode * inode, struct file * filp,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: fs/fat/inode.c:1346:
+int fat_generic_ioctl(struct inode * inode, struct file * filp,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: fs/fat/inode.c:1356:
+^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#143: FILE: fs/fat/inode.c:1357:
+		if ( inode->i_ino == MSDOS_ROOT_INO )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#143: FILE: fs/fat/inode.c:1357:
+		if ( inode->i_ino == MSDOS_ROOT_INO )

ERROR:SPACING: space prohibited after that open parenthesis '('
#160: FILE: fs/fat/inode.c:1374:
+		if ( (err = get_user(attr, (u32 *)arg)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#160: FILE: fs/fat/inode.c:1374:
+		if ( (err = get_user(attr, (u32 *)arg)) )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#160: FILE: fs/fat/inode.c:1374:
+		if ( (err = get_user(attr, (u32 *)arg)) )

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: fs/fat/inode.c:1376:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#171: FILE: fs/fat/inode.c:1385:
+		/* ATTR_VOLUME and ATTR_DIR cannot be changed; this also
+		   prevents the user from turning us into a VFAT

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#173: FILE: fs/fat/inode.c:1387:
+		   any of the NTFS attributes in the high 24 bits. */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#174: FILE: fs/fat/inode.c:1388:
+		attr &= 0xff & ~(ATTR_VOLUME|ATTR_DIR);
 		                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: fs/fat/inode.c:1397:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: fs/fat/inode.c:1400:
+			ia.ia_mode = MSDOS_MKMODE(attr,
+				S_IRWXUGO & ~sbi->options.fs_dmask)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#186: FILE: fs/fat/inode.c:1400:
+				S_IRWXUGO & ~sbi->options.fs_dmask)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: fs/fat/inode.c:1404:
+			ia.ia_mode = MSDOS_MKMODE(attr,
+				(S_IRUGO|S_IWUGO|(inode->i_mode & S_IXUGO))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#190: FILE: fs/fat/inode.c:1404:
+				(S_IRUGO|S_IWUGO|(inode->i_mode & S_IXUGO))
 				        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#190: FILE: fs/fat/inode.c:1404:
+				(S_IRUGO|S_IWUGO|(inode->i_mode & S_IXUGO))
 				                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#190: FILE: fs/fat/inode.c:1404:
+				(S_IRUGO|S_IWUGO|(inode->i_mode & S_IXUGO))

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXUGO' are not preferred. Consider using octal permissions '0111'.
#190: FILE: fs/fat/inode.c:1404:
+				(S_IRUGO|S_IWUGO|(inode->i_mode & S_IXUGO))

ERROR:SPACING: space prohibited after that open parenthesis '('
#196: FILE: fs/fat/inode.c:1410:
+		if ( inode->i_ino == MSDOS_ROOT_INO && attr != ATTR_DIR ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#196: FILE: fs/fat/inode.c:1410:
+		if ( inode->i_ino == MSDOS_ROOT_INO && attr != ATTR_DIR ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#202: FILE: fs/fat/inode.c:1416:
+			if ( ((attr|oldattr) & ATTR_SYS) ) {
 			           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#202: FILE: fs/fat/inode.c:1416:
+			if ( ((attr|oldattr) & ATTR_SYS) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#202: FILE: fs/fat/inode.c:1416:
+			if ( ((attr|oldattr) & ATTR_SYS) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#211: FILE: fs/fat/inode.c:1425:
+		if ( (err = notify_change(filp->f_dentry, &ia)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#211: FILE: fs/fat/inode.c:1425:
+		if ( (err = notify_change(filp->f_dentry, &ia)) )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#211: FILE: fs/fat/inode.c:1425:
+		if ( (err = notify_change(filp->f_dentry, &ia)) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: fs/fat/inode.c:1427:
+^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#215: FILE: fs/fat/inode.c:1429:
+			if ( attr & ATTR_SYS )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#215: FILE: fs/fat/inode.c:1429:
+			if ( attr & ATTR_SYS )

WARNING:INDENTED_LABEL: labels should not be indented
#222: FILE: fs/fat/inode.c:1436:
+	up:

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#290: FILE: include/linux/msdos_fs.h:280:
+	return ((inode->i_mode & S_IWUGO) ? ATTR_NONE : ATTR_RO) |

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#302: FILE: include/linux/msdos_fs.h:353:
+extern int fat_generic_ioctl(struct inode * inode, struct file * filp,
                                                                  ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#302: FILE: include/linux/msdos_fs.h:353:
+extern int fat_generic_ioctl(struct inode * inode, struct file * filp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#302: FILE: include/linux/msdos_fs.h:353:
+extern int fat_generic_ioctl(struct inode * inode, struct file * filp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: include/linux/msdos_fs.h:353:
+extern int fat_generic_ioctl(struct inode * inode, struct file * filp,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000209552.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 11 warnings, 7 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000209552.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
