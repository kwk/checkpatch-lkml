WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#18: 
Splits up into seperate files per implementation, and
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
diff -urpN --exclude-from=/home/davej/.exclude bk-linus/arch/i386/config.in linux-2.5/arch/i386/config.in

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#598: FILE: arch/i386/kernel/cpu/mcheck/k7.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: arch/i386/kernel/cpu/mcheck/k7.c:15:
+#include <asm/processor.h> $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#612: FILE: arch/i386/kernel/cpu/mcheck/k7.c:15:
+#include <asm/processor.h> 

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#621: FILE: arch/i386/kernel/cpu/mcheck/k7.c:24:
+static void k7_machine_check(struct pt_regs * regs, long error_code)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#623: FILE: arch/i386/kernel/cpu/mcheck/k7.c:26:
+	int recover=1;
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#624: FILE: arch/i386/kernel/cpu/mcheck/k7.c:27:
+	u32 alow, ahigh, high, low;
 	    ^^^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#629: FILE: arch/i386/kernel/cpu/mcheck/k7.c:32:
+	if(mcgstl&(1<<0))	/* Recoverable ? */
 	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#629: FILE: arch/i386/kernel/cpu/mcheck/k7.c:32:
+	if(mcgstl&(1<<0))	/* Recoverable ? */
 	            ^

ERROR:SPACING: space required before the open parenthesis '('
#629: FILE: arch/i386/kernel/cpu/mcheck/k7.c:32:
+	if(mcgstl&(1<<0))	/* Recoverable ? */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#630: FILE: arch/i386/kernel/cpu/mcheck/k7.c:33:
+		recover=0;
 		       ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#632: FILE: arch/i386/kernel/cpu/mcheck/k7.c:35:
+	printk(KERN_EMERG "CPU %d: Machine Check Exception: %08x%08x\n", smp_processor_id(), mcgsth, mcgstl);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#632: FILE: arch/i386/kernel/cpu/mcheck/k7.c:35:
+	printk(KERN_EMERG "CPU %d: Machine Check Exception: %08x%08x\n", smp_processor_id(), mcgsth, mcgstl);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#634: FILE: arch/i386/kernel/cpu/mcheck/k7.c:37:
+	for (i=0;i<banks;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#634: FILE: arch/i386/kernel/cpu/mcheck/k7.c:37:
+	for (i=0;i<banks;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#634: FILE: arch/i386/kernel/cpu/mcheck/k7.c:37:
+	for (i=0;i<banks;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#634: FILE: arch/i386/kernel/cpu/mcheck/k7.c:37:
+	for (i=0;i<banks;i++) {
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#635: FILE: arch/i386/kernel/cpu/mcheck/k7.c:38:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4,low, high);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#635: FILE: arch/i386/kernel/cpu/mcheck/k7.c:38:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4,low, high);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#635: FILE: arch/i386/kernel/cpu/mcheck/k7.c:38:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4,low, high);
 		                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#636: FILE: arch/i386/kernel/cpu/mcheck/k7.c:39:
+		if(high&(1<<31)) {
 		       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#636: FILE: arch/i386/kernel/cpu/mcheck/k7.c:39:
+		if(high&(1<<31)) {
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#636: FILE: arch/i386/kernel/cpu/mcheck/k7.c:39:
+		if(high&(1<<31)) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#637: FILE: arch/i386/kernel/cpu/mcheck/k7.c:40:
+			if(high&(1<<29))
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#637: FILE: arch/i386/kernel/cpu/mcheck/k7.c:40:
+			if(high&(1<<29))
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#637: FILE: arch/i386/kernel/cpu/mcheck/k7.c:40:
+			if(high&(1<<29))

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#638: FILE: arch/i386/kernel/cpu/mcheck/k7.c:41:
+				recover|=1;
 				       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#639: FILE: arch/i386/kernel/cpu/mcheck/k7.c:42:
+			if(high&(1<<25))
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#639: FILE: arch/i386/kernel/cpu/mcheck/k7.c:42:
+			if(high&(1<<25))
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#639: FILE: arch/i386/kernel/cpu/mcheck/k7.c:42:
+			if(high&(1<<25))

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#640: FILE: arch/i386/kernel/cpu/mcheck/k7.c:43:
+				recover|=2;
 				       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#641: FILE: arch/i386/kernel/cpu/mcheck/k7.c:44:
+			printk(KERN_EMERG "Bank %d: %08x%08x", i, high, low);

ERROR:SPACING: spaces required around that '&=' (ctx:VxO)
#642: FILE: arch/i386/kernel/cpu/mcheck/k7.c:45:
+			high&=~(1<<31);
 			    ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#642: FILE: arch/i386/kernel/cpu/mcheck/k7.c:45:
+			high&=~(1<<31);
 			      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#642: FILE: arch/i386/kernel/cpu/mcheck/k7.c:45:
+			high&=~(1<<31);
 			         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#643: FILE: arch/i386/kernel/cpu/mcheck/k7.c:46:
+			if(high&(1<<27)) {
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#643: FILE: arch/i386/kernel/cpu/mcheck/k7.c:46:
+			if(high&(1<<27)) {
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#643: FILE: arch/i386/kernel/cpu/mcheck/k7.c:46:
+			if(high&(1<<27)) {

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#644: FILE: arch/i386/kernel/cpu/mcheck/k7.c:47:
+				rdmsr(MSR_IA32_MC0_MISC+i*4, alow, ahigh);
 				                             ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#644: FILE: arch/i386/kernel/cpu/mcheck/k7.c:47:
+				rdmsr(MSR_IA32_MC0_MISC+i*4, alow, ahigh);
 				                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#644: FILE: arch/i386/kernel/cpu/mcheck/k7.c:47:
+				rdmsr(MSR_IA32_MC0_MISC+i*4, alow, ahigh);
 				                         ^

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#645: FILE: arch/i386/kernel/cpu/mcheck/k7.c:48:
+				printk("[%08x%08x]", ahigh, alow);
 				                            ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: arch/i386/kernel/cpu/mcheck/k7.c:48:
+				printk("[%08x%08x]", ahigh, alow);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#647: FILE: arch/i386/kernel/cpu/mcheck/k7.c:50:
+			if(high&(1<<26)) {
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#647: FILE: arch/i386/kernel/cpu/mcheck/k7.c:50:
+			if(high&(1<<26)) {
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#647: FILE: arch/i386/kernel/cpu/mcheck/k7.c:50:
+			if(high&(1<<26)) {

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#648: FILE: arch/i386/kernel/cpu/mcheck/k7.c:51:
+				rdmsr(MSR_IA32_MC0_ADDR+i*4, alow, ahigh);
 				                             ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#648: FILE: arch/i386/kernel/cpu/mcheck/k7.c:51:
+				rdmsr(MSR_IA32_MC0_ADDR+i*4, alow, ahigh);
 				                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#648: FILE: arch/i386/kernel/cpu/mcheck/k7.c:51:
+				rdmsr(MSR_IA32_MC0_ADDR+i*4, alow, ahigh);
 				                         ^

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#649: FILE: arch/i386/kernel/cpu/mcheck/k7.c:52:
+				printk(" at %08x%08x", ahigh, alow);
 				                              ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#649: FILE: arch/i386/kernel/cpu/mcheck/k7.c:52:
+				printk(" at %08x%08x", ahigh, alow);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#651: FILE: arch/i386/kernel/cpu/mcheck/k7.c:54:
+			printk("\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#653: FILE: arch/i386/kernel/cpu/mcheck/k7.c:56:
+			wrmsr(MSR_IA32_MC0_STATUS+i*4, 0UL, 0UL);
 			                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#653: FILE: arch/i386/kernel/cpu/mcheck/k7.c:56:
+			wrmsr(MSR_IA32_MC0_STATUS+i*4, 0UL, 0UL);
 			                           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#659: FILE: arch/i386/kernel/cpu/mcheck/k7.c:62:
+	if(recover&2)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#659: FILE: arch/i386/kernel/cpu/mcheck/k7.c:62:
+	if(recover&2)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#661: FILE: arch/i386/kernel/cpu/mcheck/k7.c:64:
+	if(recover&1)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#661: FILE: arch/i386/kernel/cpu/mcheck/k7.c:64:
+	if(recover&1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#663: FILE: arch/i386/kernel/cpu/mcheck/k7.c:66:
+	printk(KERN_EMERG "Attempting to continue.\n");

ERROR:SPACING: spaces required around that '&=' (ctx:VxO)
#664: FILE: arch/i386/kernel/cpu/mcheck/k7.c:67:
+	mcgstl&=~(1<<2);
 	      ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#664: FILE: arch/i386/kernel/cpu/mcheck/k7.c:67:
+	mcgstl&=~(1<<2);
 	        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#664: FILE: arch/i386/kernel/cpu/mcheck/k7.c:67:
+	mcgstl&=~(1<<2);
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: arch/i386/kernel/cpu/mcheck/k7.c:68:
+	wrmsr(MSR_IA32_MCG_STATUS,mcgstl, mcgsth);
 	                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#668: FILE: arch/i386/kernel/cpu/mcheck/k7.c:71:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#671: FILE: arch/i386/kernel/cpu/mcheck/k7.c:74:
+static int timerset = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#673: FILE: arch/i386/kernel/cpu/mcheck/k7.c:76:
+#define MCE_RATE	15*HZ	/* timer rate is 15s */
                 	  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#673: FILE: arch/i386/kernel/cpu/mcheck/k7.c:76:
+#define MCE_RATE	15*HZ	/* timer rate is 15s */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#675: FILE: arch/i386/kernel/cpu/mcheck/k7.c:78:
+static void mce_checkregs (void *info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: arch/i386/kernel/cpu/mcheck/k7.c:83:
+^Ipreempt_disable(); $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#681: FILE: arch/i386/kernel/cpu/mcheck/k7.c:84:
+	for (i=0; i<banks; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#681: FILE: arch/i386/kernel/cpu/mcheck/k7.c:84:
+	for (i=0; i<banks; i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#682: FILE: arch/i386/kernel/cpu/mcheck/k7.c:85:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4, low, high);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#682: FILE: arch/i386/kernel/cpu/mcheck/k7.c:85:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4, low, high);
 		                           ^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#685: FILE: arch/i386/kernel/cpu/mcheck/k7.c:88:
+			printk (KERN_EMERG "MCE: The hardware reports a non fatal, correctable incident occured on CPU %d.\n", smp_processor_id());
 			                                                                                ^^^^^^^

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#685: FILE: arch/i386/kernel/cpu/mcheck/k7.c:88:
+			printk (KERN_EMERG "MCE: The hardware reports a non fatal, correctable incident occured on CPU %d.\n", smp_processor_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#685: FILE: arch/i386/kernel/cpu/mcheck/k7.c:88:
+			printk (KERN_EMERG "MCE: The hardware reports a non fatal, correctable incident occured on CPU %d.\n", smp_processor_id());

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#685: FILE: arch/i386/kernel/cpu/mcheck/k7.c:88:
+			printk (KERN_EMERG "MCE: The hardware reports a non fatal, correctable incident occured on CPU %d.\n", smp_processor_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#686: FILE: arch/i386/kernel/cpu/mcheck/k7.c:89:
+			printk (KERN_EMERG "Bank %d: %08x%08x\n", i, high, low);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#686: FILE: arch/i386/kernel/cpu/mcheck/k7.c:89:
+			printk (KERN_EMERG "Bank %d: %08x%08x\n", i, high, low);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#689: FILE: arch/i386/kernel/cpu/mcheck/k7.c:92:
+			wrmsr(MSR_IA32_MC0_STATUS+i*4, 0UL, 0UL);
 			                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#689: FILE: arch/i386/kernel/cpu/mcheck/k7.c:92:
+			wrmsr(MSR_IA32_MC0_STATUS+i*4, 0UL, 0UL);
 			                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: arch/i386/kernel/cpu/mcheck/k7.c:102:
+{ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#700: FILE: arch/i386/kernel/cpu/mcheck/k7.c:103:
+	smp_call_function (mce_checkregs, NULL, 1, 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: arch/i386/kernel/cpu/mcheck/k7.c:104:
+} $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: arch/i386/kernel/cpu/mcheck/k7.c:108:
+static void mce_timerfunc (unsigned long data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: arch/i386/kernel/cpu/mcheck/k7.c:111:
+^Iif (num_online_cpus() > 1) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: arch/i386/kernel/cpu/mcheck/k7.c:112:
+^I^Ischedule_work(&mce_work); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#714: FILE: arch/i386/kernel/cpu/mcheck/k7.c:117:
+	add_timer (&mce_timer);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: arch/i386/kernel/cpu/mcheck/k7.c:118:
+}^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#718: FILE: arch/i386/kernel/cpu/mcheck/k7.c:121:
+
+

WARNING:MEMORY_BARRIER: memory barrier without comment
#726: FILE: arch/i386/kernel/cpu/mcheck/k7.c:129:
+	wmb();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#728: FILE: arch/i386/kernel/cpu/mcheck/k7.c:131:
+	printk(KERN_INFO "Intel machine check architecture supported.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#730: FILE: arch/i386/kernel/cpu/mcheck/k7.c:133:
+	if(l&(1<<8))	/* Control register present ? */
 	    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#730: FILE: arch/i386/kernel/cpu/mcheck/k7.c:133:
+	if(l&(1<<8))	/* Control register present ? */
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#730: FILE: arch/i386/kernel/cpu/mcheck/k7.c:133:
+	if(l&(1<<8))	/* Control register present ? */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#732: FILE: arch/i386/kernel/cpu/mcheck/k7.c:135:
+	banks = l&0xff;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#734: FILE: arch/i386/kernel/cpu/mcheck/k7.c:137:
+	for(i=0; i<banks; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#734: FILE: arch/i386/kernel/cpu/mcheck/k7.c:137:
+	for(i=0; i<banks; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#734: FILE: arch/i386/kernel/cpu/mcheck/k7.c:137:
+	for(i=0; i<banks; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#735: FILE: arch/i386/kernel/cpu/mcheck/k7.c:138:
+		wrmsr(MSR_IA32_MC0_CTL+4*i, 0xffffffff, 0xffffffff);
 		                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#735: FILE: arch/i386/kernel/cpu/mcheck/k7.c:138:
+		wrmsr(MSR_IA32_MC0_CTL+4*i, 0xffffffff, 0xffffffff);
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#737: FILE: arch/i386/kernel/cpu/mcheck/k7.c:140:
+	for(i=0; i<banks; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#737: FILE: arch/i386/kernel/cpu/mcheck/k7.c:140:
+	for(i=0; i<banks; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#737: FILE: arch/i386/kernel/cpu/mcheck/k7.c:140:
+	for(i=0; i<banks; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#738: FILE: arch/i386/kernel/cpu/mcheck/k7.c:141:
+		wrmsr(MSR_IA32_MC0_STATUS+4*i, 0x0, 0x0);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#738: FILE: arch/i386/kernel/cpu/mcheck/k7.c:141:
+		wrmsr(MSR_IA32_MC0_STATUS+4*i, 0x0, 0x0);
 		                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#741: FILE: arch/i386/kernel/cpu/mcheck/k7.c:144:
+	printk(KERN_INFO "Intel machine check reporting enabled on CPU#%d.\n", smp_processor_id());

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#746: FILE: arch/i386/kernel/cpu/mcheck/k7.c:149:
+		/* Set the timer to check for non-fatal
+		   errors every MCE_RATE seconds */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#746: FILE: arch/i386/kernel/cpu/mcheck/k7.c:149:
+		   errors every MCE_RATE seconds */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: arch/i386/kernel/cpu/mcheck/k7.c:150:
+		init_timer (&mce_timer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#751: FILE: arch/i386/kernel/cpu/mcheck/k7.c:154:
+		add_timer (&mce_timer);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#753: FILE: arch/i386/kernel/cpu/mcheck/k7.c:156:
+		printk(KERN_INFO "Machine check exception polling timer started.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#761: FILE: arch/i386/kernel/cpu/mcheck/mce.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: arch/i386/kernel/cpu/mcheck/mce.c:10:
+#include <asm/processor.h> $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#770: FILE: arch/i386/kernel/cpu/mcheck/mce.c:10:
+#include <asm/processor.h> 

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/thread_info.h> instead of <asm/thread_info.h>
#772: FILE: arch/i386/kernel/cpu/mcheck/mce.c:12:
+#include <asm/thread_info.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#778: FILE: arch/i386/kernel/cpu/mcheck/mce.c:18:
+int mce_disabled __initdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#781: FILE: arch/i386/kernel/cpu/mcheck/mce.c:21:
+static void unexpected_machine_check(struct pt_regs * regs, long error_code)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: arch/i386/kernel/cpu/mcheck/mce.c:22:
+{^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#783: FILE: arch/i386/kernel/cpu/mcheck/mce.c:23:
+	printk(KERN_ERR "CPU#%d: Unexpected int18 (Machine Check).\n", smp_processor_id());

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#789: FILE: arch/i386/kernel/cpu/mcheck/mce.c:29:
+asmlinkage void do_machine_check(struct pt_regs * regs, long error_code)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#797: FILE: arch/i386/kernel/cpu/mcheck/mce.c:37:
+	if(mce_disabled==1)
 	               ^

ERROR:SPACING: space required before the open parenthesis '('
#797: FILE: arch/i386/kernel/cpu/mcheck/mce.c:37:
+	if(mce_disabled==1)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#800: FILE: arch/i386/kernel/cpu/mcheck/mce.c:40:
+	switch(c->x86_vendor) {
+		case X86_VENDOR_AMD:
[...]
+		case X86_VENDOR_INTEL:
[...]
+		case X86_VENDOR_CENTAUR:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#800: FILE: arch/i386/kernel/cpu/mcheck/mce.c:40:
+	switch(c->x86_vendor) {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#802: FILE: arch/i386/kernel/cpu/mcheck/mce.c:42:
+			if (c->x86==6 || c->x86==15)
 			          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#802: FILE: arch/i386/kernel/cpu/mcheck/mce.c:42:
+			if (c->x86==6 || c->x86==15)
 			                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#807: FILE: arch/i386/kernel/cpu/mcheck/mce.c:47:
+			if (c->x86==5)
 			          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#809: FILE: arch/i386/kernel/cpu/mcheck/mce.c:49:
+			if (c->x86==6)
 			          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#811: FILE: arch/i386/kernel/cpu/mcheck/mce.c:51:
+			if (c->x86==15)
 			          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#816: FILE: arch/i386/kernel/cpu/mcheck/mce.c:56:
+			if (c->x86==5)
 			          ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#837: FILE: arch/i386/kernel/cpu/mcheck/mce.c:77:
+__setup("nomce", mcheck_disable);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#838: FILE: arch/i386/kernel/cpu/mcheck/mce.c:78:
+__setup("mce", mcheck_enable);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#841: FILE: arch/i386/kernel/cpu/mcheck/mce.c:81:
+asmlinkage void do_machine_check(struct pt_regs * regs, long error_code) {}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#849: FILE: arch/i386/kernel/cpu/mcheck/mce.h:1:
+#include <linux/init.h>

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#858: FILE: arch/i386/kernel/cpu/mcheck/mce.h:10:
+extern void (*machine_check_vector)(struct pt_regs *, long error_code);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#865: FILE: arch/i386/kernel/cpu/mcheck/p4.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#877: FILE: arch/i386/kernel/cpu/mcheck/p4.c:13:
+#include <asm/processor.h> $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#877: FILE: arch/i386/kernel/cpu/mcheck/p4.c:13:
+#include <asm/processor.h> 

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#899: FILE: arch/i386/kernel/cpu/mcheck/p4.c:35:
+static int mce_num_extended_msrs = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#902: FILE: arch/i386/kernel/cpu/mcheck/p4.c:38:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: arch/i386/kernel/cpu/mcheck/p4.c:41:
+{^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#906: FILE: arch/i386/kernel/cpu/mcheck/p4.c:42:
+	printk(KERN_ERR "CPU#%d: Unexpected LVT TMR interrupt!\n", smp_processor_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#919: FILE: arch/i386/kernel/cpu/mcheck/p4.c:55:
+		printk(KERN_EMERG "CPU#%d: Temperature above threshold\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#920: FILE: arch/i386/kernel/cpu/mcheck/p4.c:56:
+		printk(KERN_EMERG "CPU#%d: Running in modulated clock mode\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#922: FILE: arch/i386/kernel/cpu/mcheck/p4.c:58:
+		printk(KERN_INFO "CPU#%d: Temperature/speed normal\n", cpu);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#956: FILE: arch/i386/kernel/cpu/mcheck/p4.c:92:
+	if ((l & (1<<3)) && (h & APIC_DM_SMI)) {
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#957: FILE: arch/i386/kernel/cpu/mcheck/p4.c:93:
+		printk(KERN_DEBUG "CPU#%d: Thermal monitoring handled by SMI\n", cpu);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#961: FILE: arch/i386/kernel/cpu/mcheck/p4.c:97:
+^I/* check whether a vector already exists, temporarily masked? */^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#963: FILE: arch/i386/kernel/cpu/mcheck/p4.c:99:
+		printk(KERN_DEBUG "CPU#%d: Thermal LVT vector (%#x) already installed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#964: FILE: arch/i386/kernel/cpu/mcheck/p4.c:100:
+		printk(KERN_DEBUG "CPU#%d: Thermal LVT vector (%#x) already installed\n",
+			cpu, (h & APIC_VECTOR_MASK));

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#974: FILE: arch/i386/kernel/cpu/mcheck/p4.c:110:
+	wrmsr(MSR_IA32_THERM_INTERRUPT, l | 0x03 , h);
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#978: FILE: arch/i386/kernel/cpu/mcheck/p4.c:114:
+^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#980: FILE: arch/i386/kernel/cpu/mcheck/p4.c:116:
+	wrmsr(MSR_IA32_MISC_ENABLE, l | (1<<3), h);
 	                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: arch/i386/kernel/cpu/mcheck/p4.c:117:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#984: FILE: arch/i386/kernel/cpu/mcheck/p4.c:120:
+	printk(KERN_INFO "CPU#%d: Thermal monitoring enabled\n", cpu);

WARNING:RETURN_VOID: void function return statements are not generally useful
#986: FILE: arch/i386/kernel/cpu/mcheck/p4.c:122:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#989: FILE: arch/i386/kernel/cpu/mcheck/p4.c:125:
+
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#991: FILE: arch/i386/kernel/cpu/mcheck/p4.c:127:
+static int inline intel_get_extended_msrs(struct intel_mce_extended_msrs *r)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1016: FILE: arch/i386/kernel/cpu/mcheck/p4.c:152:
+static void intel_machine_check(struct pt_regs * regs, long error_code)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1018: FILE: arch/i386/kernel/cpu/mcheck/p4.c:154:
+	int recover=1;
 	           ^

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1019: FILE: arch/i386/kernel/cpu/mcheck/p4.c:155:
+	u32 alow, ahigh, high, low;
 	    ^^^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1025: FILE: arch/i386/kernel/cpu/mcheck/p4.c:161:
+	if(mcgstl&(1<<0))	/* Recoverable ? */
 	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1025: FILE: arch/i386/kernel/cpu/mcheck/p4.c:161:
+	if(mcgstl&(1<<0))	/* Recoverable ? */
 	            ^

ERROR:SPACING: space required before the open parenthesis '('
#1025: FILE: arch/i386/kernel/cpu/mcheck/p4.c:161:
+	if(mcgstl&(1<<0))	/* Recoverable ? */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1026: FILE: arch/i386/kernel/cpu/mcheck/p4.c:162:
+		recover=0;
 		       ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1028: FILE: arch/i386/kernel/cpu/mcheck/p4.c:164:
+	printk(KERN_EMERG "CPU %d: Machine Check Exception: %08x%08x\n", smp_processor_id(), mcgsth, mcgstl);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1028: FILE: arch/i386/kernel/cpu/mcheck/p4.c:164:
+	printk(KERN_EMERG "CPU %d: Machine Check Exception: %08x%08x\n", smp_processor_id(), mcgsth, mcgstl);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1031: FILE: arch/i386/kernel/cpu/mcheck/p4.c:167:
+		printk(KERN_DEBUG "CPU %d: EIP: %08x EFLAGS: %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1032: FILE: arch/i386/kernel/cpu/mcheck/p4.c:168:
+		printk(KERN_DEBUG "CPU %d: EIP: %08x EFLAGS: %08x\n",
+			smp_processor_id(), dbg.eip, dbg.eflags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1033: FILE: arch/i386/kernel/cpu/mcheck/p4.c:169:
+		printk(KERN_DEBUG "\teax: %08x ebx: %08x ecx: %08x edx: %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1034: FILE: arch/i386/kernel/cpu/mcheck/p4.c:170:
+		printk(KERN_DEBUG "\teax: %08x ebx: %08x ecx: %08x edx: %08x\n",
+			dbg.eax, dbg.ebx, dbg.ecx, dbg.edx);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1035: FILE: arch/i386/kernel/cpu/mcheck/p4.c:171:
+		printk(KERN_DEBUG "\tesi: %08x edi: %08x ebp: %08x esp: %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1036: FILE: arch/i386/kernel/cpu/mcheck/p4.c:172:
+		printk(KERN_DEBUG "\tesi: %08x edi: %08x ebp: %08x esp: %08x\n",
+			dbg.esi, dbg.edi, dbg.ebp, dbg.esp);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1039: FILE: arch/i386/kernel/cpu/mcheck/p4.c:175:
+	for (i=0;i<banks;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1039: FILE: arch/i386/kernel/cpu/mcheck/p4.c:175:
+	for (i=0;i<banks;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1039: FILE: arch/i386/kernel/cpu/mcheck/p4.c:175:
+	for (i=0;i<banks;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1039: FILE: arch/i386/kernel/cpu/mcheck/p4.c:175:
+	for (i=0;i<banks;i++) {
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1040: FILE: arch/i386/kernel/cpu/mcheck/p4.c:176:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4,low, high);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1040: FILE: arch/i386/kernel/cpu/mcheck/p4.c:176:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4,low, high);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1040: FILE: arch/i386/kernel/cpu/mcheck/p4.c:176:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4,low, high);
 		                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1041: FILE: arch/i386/kernel/cpu/mcheck/p4.c:177:
+		if(high&(1<<31)) {
 		       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1041: FILE: arch/i386/kernel/cpu/mcheck/p4.c:177:
+		if(high&(1<<31)) {
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#1041: FILE: arch/i386/kernel/cpu/mcheck/p4.c:177:
+		if(high&(1<<31)) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1042: FILE: arch/i386/kernel/cpu/mcheck/p4.c:178:
+			if(high&(1<<29))
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1042: FILE: arch/i386/kernel/cpu/mcheck/p4.c:178:
+			if(high&(1<<29))
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#1042: FILE: arch/i386/kernel/cpu/mcheck/p4.c:178:
+			if(high&(1<<29))

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#1043: FILE: arch/i386/kernel/cpu/mcheck/p4.c:179:
+				recover|=1;
 				       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1044: FILE: arch/i386/kernel/cpu/mcheck/p4.c:180:
+			if(high&(1<<25))
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1044: FILE: arch/i386/kernel/cpu/mcheck/p4.c:180:
+			if(high&(1<<25))
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#1044: FILE: arch/i386/kernel/cpu/mcheck/p4.c:180:
+			if(high&(1<<25))

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#1045: FILE: arch/i386/kernel/cpu/mcheck/p4.c:181:
+				recover|=2;
 				       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1046: FILE: arch/i386/kernel/cpu/mcheck/p4.c:182:
+			printk(KERN_EMERG "Bank %d: %08x%08x", i, high, low);

ERROR:SPACING: spaces required around that '&=' (ctx:VxO)
#1047: FILE: arch/i386/kernel/cpu/mcheck/p4.c:183:
+			high&=~(1<<31);
 			    ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#1047: FILE: arch/i386/kernel/cpu/mcheck/p4.c:183:
+			high&=~(1<<31);
 			      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1047: FILE: arch/i386/kernel/cpu/mcheck/p4.c:183:
+			high&=~(1<<31);
 			         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1048: FILE: arch/i386/kernel/cpu/mcheck/p4.c:184:
+			if(high&(1<<27)) {
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1048: FILE: arch/i386/kernel/cpu/mcheck/p4.c:184:
+			if(high&(1<<27)) {
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#1048: FILE: arch/i386/kernel/cpu/mcheck/p4.c:184:
+			if(high&(1<<27)) {

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1049: FILE: arch/i386/kernel/cpu/mcheck/p4.c:185:
+				rdmsr(MSR_IA32_MC0_MISC+i*4, alow, ahigh);
 				                             ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1049: FILE: arch/i386/kernel/cpu/mcheck/p4.c:185:
+				rdmsr(MSR_IA32_MC0_MISC+i*4, alow, ahigh);
 				                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1049: FILE: arch/i386/kernel/cpu/mcheck/p4.c:185:
+				rdmsr(MSR_IA32_MC0_MISC+i*4, alow, ahigh);
 				                         ^

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1050: FILE: arch/i386/kernel/cpu/mcheck/p4.c:186:
+				printk("[%08x%08x]", ahigh, alow);
 				                            ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1050: FILE: arch/i386/kernel/cpu/mcheck/p4.c:186:
+				printk("[%08x%08x]", ahigh, alow);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1052: FILE: arch/i386/kernel/cpu/mcheck/p4.c:188:
+			if(high&(1<<26)) {
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1052: FILE: arch/i386/kernel/cpu/mcheck/p4.c:188:
+			if(high&(1<<26)) {
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#1052: FILE: arch/i386/kernel/cpu/mcheck/p4.c:188:
+			if(high&(1<<26)) {

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1053: FILE: arch/i386/kernel/cpu/mcheck/p4.c:189:
+				rdmsr(MSR_IA32_MC0_ADDR+i*4, alow, ahigh);
 				                             ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1053: FILE: arch/i386/kernel/cpu/mcheck/p4.c:189:
+				rdmsr(MSR_IA32_MC0_ADDR+i*4, alow, ahigh);
 				                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1053: FILE: arch/i386/kernel/cpu/mcheck/p4.c:189:
+				rdmsr(MSR_IA32_MC0_ADDR+i*4, alow, ahigh);
 				                         ^

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1054: FILE: arch/i386/kernel/cpu/mcheck/p4.c:190:
+				printk(" at %08x%08x", ahigh, alow);
 				                              ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1054: FILE: arch/i386/kernel/cpu/mcheck/p4.c:190:
+				printk(" at %08x%08x", ahigh, alow);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1056: FILE: arch/i386/kernel/cpu/mcheck/p4.c:192:
+			printk("\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1058: FILE: arch/i386/kernel/cpu/mcheck/p4.c:194:
+			wrmsr(MSR_IA32_MC0_STATUS+i*4, 0UL, 0UL);
 			                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1058: FILE: arch/i386/kernel/cpu/mcheck/p4.c:194:
+			wrmsr(MSR_IA32_MC0_STATUS+i*4, 0UL, 0UL);
 			                           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1064: FILE: arch/i386/kernel/cpu/mcheck/p4.c:200:
+	if(recover&2)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1064: FILE: arch/i386/kernel/cpu/mcheck/p4.c:200:
+	if(recover&2)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1066: FILE: arch/i386/kernel/cpu/mcheck/p4.c:202:
+	if(recover&1)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1066: FILE: arch/i386/kernel/cpu/mcheck/p4.c:202:
+	if(recover&1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1068: FILE: arch/i386/kernel/cpu/mcheck/p4.c:204:
+	printk(KERN_EMERG "Attempting to continue.\n");

ERROR:SPACING: spaces required around that '&=' (ctx:VxO)
#1069: FILE: arch/i386/kernel/cpu/mcheck/p4.c:205:
+	mcgstl&=~(1<<2);
 	      ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#1069: FILE: arch/i386/kernel/cpu/mcheck/p4.c:205:
+	mcgstl&=~(1<<2);
 	        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1069: FILE: arch/i386/kernel/cpu/mcheck/p4.c:205:
+	mcgstl&=~(1<<2);
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1070: FILE: arch/i386/kernel/cpu/mcheck/p4.c:206:
+	wrmsr(MSR_IA32_MCG_STATUS,mcgstl, mcgsth);
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: arch/i386/kernel/cpu/mcheck/p4.c:213:
+^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#1079: FILE: arch/i386/kernel/cpu/mcheck/p4.c:215:
+	wmb();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1081: FILE: arch/i386/kernel/cpu/mcheck/p4.c:217:
+	printk(KERN_INFO "Intel machine check architecture supported.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1083: FILE: arch/i386/kernel/cpu/mcheck/p4.c:219:
+	if(l&(1<<8))	/* Control register present ? */
 	    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1083: FILE: arch/i386/kernel/cpu/mcheck/p4.c:219:
+	if(l&(1<<8))	/* Control register present ? */
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#1083: FILE: arch/i386/kernel/cpu/mcheck/p4.c:219:
+	if(l&(1<<8))	/* Control register present ? */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1085: FILE: arch/i386/kernel/cpu/mcheck/p4.c:221:
+	banks = l&0xff;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1087: FILE: arch/i386/kernel/cpu/mcheck/p4.c:223:
+	for(i=1; i<banks; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1087: FILE: arch/i386/kernel/cpu/mcheck/p4.c:223:
+	for(i=1; i<banks; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1087: FILE: arch/i386/kernel/cpu/mcheck/p4.c:223:
+	for(i=1; i<banks; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1088: FILE: arch/i386/kernel/cpu/mcheck/p4.c:224:
+		wrmsr(MSR_IA32_MC0_CTL+4*i, 0xffffffff, 0xffffffff);
 		                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1088: FILE: arch/i386/kernel/cpu/mcheck/p4.c:224:
+		wrmsr(MSR_IA32_MC0_CTL+4*i, 0xffffffff, 0xffffffff);
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1090: FILE: arch/i386/kernel/cpu/mcheck/p4.c:226:
+	for(i=0; i<banks; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1090: FILE: arch/i386/kernel/cpu/mcheck/p4.c:226:
+	for(i=0; i<banks; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1090: FILE: arch/i386/kernel/cpu/mcheck/p4.c:226:
+	for(i=0; i<banks; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1091: FILE: arch/i386/kernel/cpu/mcheck/p4.c:227:
+		wrmsr(MSR_IA32_MC0_STATUS+4*i, 0x0, 0x0);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1091: FILE: arch/i386/kernel/cpu/mcheck/p4.c:227:
+		wrmsr(MSR_IA32_MC0_STATUS+4*i, 0x0, 0x0);
 		                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1094: FILE: arch/i386/kernel/cpu/mcheck/p4.c:230:
+	printk(KERN_INFO "Intel machine check reporting enabled on CPU#%d.\n", smp_processor_id());

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1098: FILE: arch/i386/kernel/cpu/mcheck/p4.c:234:
+	if (l & (1<<9))	{/* MCG_EXT_P */
 	          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1100: FILE: arch/i386/kernel/cpu/mcheck/p4.c:236:
+		printk(KERN_INFO "CPU#%d: Intel P4/Xeon Extended MCE MSRs (%d) available\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1101: FILE: arch/i386/kernel/cpu/mcheck/p4.c:237:
+		printk(KERN_INFO "CPU#%d: Intel P4/Xeon Extended MCE MSRs (%d) available\n",
+			smp_processor_id(), mce_num_extended_msrs);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1113: FILE: arch/i386/kernel/cpu/mcheck/p5.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1124: FILE: arch/i386/kernel/cpu/mcheck/p5.c:12:
+#include <asm/processor.h> $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#1124: FILE: arch/i386/kernel/cpu/mcheck/p5.c:12:
+#include <asm/processor.h> 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1131: FILE: arch/i386/kernel/cpu/mcheck/p5.c:19:
+static void pentium_machine_check(struct pt_regs * regs, long error_code)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1134: FILE: arch/i386/kernel/cpu/mcheck/p5.c:22:
+	u32 loaddr, hi, lotype;
+	rdmsr(MSR_IA32_P5_MC_ADDR, loaddr, hi);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1136: FILE: arch/i386/kernel/cpu/mcheck/p5.c:24:
+	printk(KERN_EMERG "CPU#%d: Machine Check Exception:  0x%8X (type 0x%8X).\n", smp_processor_id(), loaddr, lotype);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1136: FILE: arch/i386/kernel/cpu/mcheck/p5.c:24:
+	printk(KERN_EMERG "CPU#%d: Machine Check Exception:  0x%8X (type 0x%8X).\n", smp_processor_id(), loaddr, lotype);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1137: FILE: arch/i386/kernel/cpu/mcheck/p5.c:25:
+	if(lotype&(1<<5))
 	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1137: FILE: arch/i386/kernel/cpu/mcheck/p5.c:25:
+	if(lotype&(1<<5))
 	            ^

ERROR:SPACING: space required before the open parenthesis '('
#1137: FILE: arch/i386/kernel/cpu/mcheck/p5.c:25:
+	if(lotype&(1<<5))

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1138: FILE: arch/i386/kernel/cpu/mcheck/p5.c:26:
+		printk(KERN_EMERG "CPU#%d: Possible thermal failure (CPU on fire ?).\n", smp_processor_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1138: FILE: arch/i386/kernel/cpu/mcheck/p5.c:26:
+		printk(KERN_EMERG "CPU#%d: Possible thermal failure (CPU on fire ?).\n", smp_processor_id());

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1145: FILE: arch/i386/kernel/cpu/mcheck/p5.c:33:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1147: FILE: arch/i386/kernel/cpu/mcheck/p5.c:35:
+	if( !cpu_has(c, X86_FEATURE_MCE) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1147: FILE: arch/i386/kernel/cpu/mcheck/p5.c:35:
+	if( !cpu_has(c, X86_FEATURE_MCE) )

ERROR:SPACING: space required before the open parenthesis '('
#1147: FILE: arch/i386/kernel/cpu/mcheck/p5.c:35:
+	if( !cpu_has(c, X86_FEATURE_MCE) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1148: FILE: arch/i386/kernel/cpu/mcheck/p5.c:36:
+^I^Ireturn;^I$

ERROR:SPACING: space required before the open parenthesis '('
#1151: FILE: arch/i386/kernel/cpu/mcheck/p5.c:39:
+	if(mce_disabled != -1)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1154: FILE: arch/i386/kernel/cpu/mcheck/p5.c:42:
+	wmb();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1159: FILE: arch/i386/kernel/cpu/mcheck/p5.c:47:
+	printk(KERN_INFO "Intel old style machine check architecture supported.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1161: FILE: arch/i386/kernel/cpu/mcheck/p5.c:49:
+ ^I/* Enable MCE */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1161: FILE: arch/i386/kernel/cpu/mcheck/p5.c:49:
+ ^I/* Enable MCE */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1161: FILE: arch/i386/kernel/cpu/mcheck/p5.c:49:
+ ^I/* Enable MCE */$

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1163: FILE: arch/i386/kernel/cpu/mcheck/p5.c:51:
+	printk(KERN_INFO "Intel old style machine check reporting enabled on CPU#%d.\n", smp_processor_id());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1163: FILE: arch/i386/kernel/cpu/mcheck/p5.c:51:
+	printk(KERN_INFO "Intel old style machine check reporting enabled on CPU#%d.\n", smp_processor_id());

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1169: FILE: arch/i386/kernel/cpu/mcheck/p6.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1180: FILE: arch/i386/kernel/cpu/mcheck/p6.c:12:
+#include <asm/processor.h> $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#1180: FILE: arch/i386/kernel/cpu/mcheck/p6.c:12:
+#include <asm/processor.h> 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1189: FILE: arch/i386/kernel/cpu/mcheck/p6.c:21:
+static void intel_machine_check(struct pt_regs * regs, long error_code)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1191: FILE: arch/i386/kernel/cpu/mcheck/p6.c:23:
+	int recover=1;
 	           ^

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1192: FILE: arch/i386/kernel/cpu/mcheck/p6.c:24:
+	u32 alow, ahigh, high, low;
 	    ^^^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1197: FILE: arch/i386/kernel/cpu/mcheck/p6.c:29:
+	if(mcgstl&(1<<0))	/* Recoverable ? */
 	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1197: FILE: arch/i386/kernel/cpu/mcheck/p6.c:29:
+	if(mcgstl&(1<<0))	/* Recoverable ? */
 	            ^

ERROR:SPACING: space required before the open parenthesis '('
#1197: FILE: arch/i386/kernel/cpu/mcheck/p6.c:29:
+	if(mcgstl&(1<<0))	/* Recoverable ? */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1198: FILE: arch/i386/kernel/cpu/mcheck/p6.c:30:
+		recover=0;
 		       ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1200: FILE: arch/i386/kernel/cpu/mcheck/p6.c:32:
+	printk(KERN_EMERG "CPU %d: Machine Check Exception: %08x%08x\n", smp_processor_id(), mcgsth, mcgstl);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1200: FILE: arch/i386/kernel/cpu/mcheck/p6.c:32:
+	printk(KERN_EMERG "CPU %d: Machine Check Exception: %08x%08x\n", smp_processor_id(), mcgsth, mcgstl);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1202: FILE: arch/i386/kernel/cpu/mcheck/p6.c:34:
+	for (i=0;i<banks;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1202: FILE: arch/i386/kernel/cpu/mcheck/p6.c:34:
+	for (i=0;i<banks;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1202: FILE: arch/i386/kernel/cpu/mcheck/p6.c:34:
+	for (i=0;i<banks;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1202: FILE: arch/i386/kernel/cpu/mcheck/p6.c:34:
+	for (i=0;i<banks;i++) {
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1203: FILE: arch/i386/kernel/cpu/mcheck/p6.c:35:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4,low, high);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1203: FILE: arch/i386/kernel/cpu/mcheck/p6.c:35:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4,low, high);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1203: FILE: arch/i386/kernel/cpu/mcheck/p6.c:35:
+		rdmsr(MSR_IA32_MC0_STATUS+i*4,low, high);
 		                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1204: FILE: arch/i386/kernel/cpu/mcheck/p6.c:36:
+		if(high&(1<<31)) {
 		       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1204: FILE: arch/i386/kernel/cpu/mcheck/p6.c:36:
+		if(high&(1<<31)) {
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#1204: FILE: arch/i386/kernel/cpu/mcheck/p6.c:36:
+		if(high&(1<<31)) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1205: FILE: arch/i386/kernel/cpu/mcheck/p6.c:37:
+			if(high&(1<<29))
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1205: FILE: arch/i386/kernel/cpu/mcheck/p6.c:37:
+			if(high&(1<<29))
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#1205: FILE: arch/i386/kernel/cpu/mcheck/p6.c:37:
+			if(high&(1<<29))

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#1206: FILE: arch/i386/kernel/cpu/mcheck/p6.c:38:
+				recover|=1;
 				       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1207: FILE: arch/i386/kernel/cpu/mcheck/p6.c:39:
+			if(high&(1<<25))
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1207: FILE: arch/i386/kernel/cpu/mcheck/p6.c:39:
+			if(high&(1<<25))
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#1207: FILE: arch/i386/kernel/cpu/mcheck/p6.c:39:
+			if(high&(1<<25))

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#1208: FILE: arch/i386/kernel/cpu/mcheck/p6.c:40:
+				recover|=2;
 				       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1209: FILE: arch/i386/kernel/cpu/mcheck/p6.c:41:
+			printk(KERN_EMERG "Bank %d: %08x%08x", i, high, low);

ERROR:SPACING: spaces required around that '&=' (ctx:VxO)
#1210: FILE: arch/i386/kernel/cpu/mcheck/p6.c:42:
+			high&=~(1<<31);
 			    ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#1210: FILE: arch/i386/kernel/cpu/mcheck/p6.c:42:
+			high&=~(1<<31);
 			      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1210: FILE: arch/i386/kernel/cpu/mcheck/p6.c:42:
+			high&=~(1<<31);
 			         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1211: FILE: arch/i386/kernel/cpu/mcheck/p6.c:43:
+			if(high&(1<<27)) {
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1211: FILE: arch/i386/kernel/cpu/mcheck/p6.c:43:
+			if(high&(1<<27)) {
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#1211: FILE: arch/i386/kernel/cpu/mcheck/p6.c:43:
+			if(high&(1<<27)) {

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1212: FILE: arch/i386/kernel/cpu/mcheck/p6.c:44:
+				rdmsr(MSR_IA32_MC0_MISC+i*4, alow, ahigh);
 				                             ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1212: FILE: arch/i386/kernel/cpu/mcheck/p6.c:44:
+				rdmsr(MSR_IA32_MC0_MISC+i*4, alow, ahigh);
 				                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1212: FILE: arch/i386/kernel/cpu/mcheck/p6.c:44:
+				rdmsr(MSR_IA32_MC0_MISC+i*4, alow, ahigh);
 				                         ^

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1213: FILE: arch/i386/kernel/cpu/mcheck/p6.c:45:
+				printk("[%08x%08x]", ahigh, alow);
 				                            ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1213: FILE: arch/i386/kernel/cpu/mcheck/p6.c:45:
+				printk("[%08x%08x]", ahigh, alow);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1215: FILE: arch/i386/kernel/cpu/mcheck/p6.c:47:
+			if(high&(1<<26)) {
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1215: FILE: arch/i386/kernel/cpu/mcheck/p6.c:47:
+			if(high&(1<<26)) {
 			          ^

ERROR:SPACING: space required before the open parenthesis '('
#1215: FILE: arch/i386/kernel/cpu/mcheck/p6.c:47:
+			if(high&(1<<26)) {

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1216: FILE: arch/i386/kernel/cpu/mcheck/p6.c:48:
+				rdmsr(MSR_IA32_MC0_ADDR+i*4, alow, ahigh);
 				                             ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1216: FILE: arch/i386/kernel/cpu/mcheck/p6.c:48:
+				rdmsr(MSR_IA32_MC0_ADDR+i*4, alow, ahigh);
 				                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1216: FILE: arch/i386/kernel/cpu/mcheck/p6.c:48:
+				rdmsr(MSR_IA32_MC0_ADDR+i*4, alow, ahigh);
 				                         ^

WARNING:TYPO_SPELLING: 'alow' may be misspelled - perhaps 'allow'?
#1217: FILE: arch/i386/kernel/cpu/mcheck/p6.c:49:
+				printk(" at %08x%08x", ahigh, alow);
 				                              ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1217: FILE: arch/i386/kernel/cpu/mcheck/p6.c:49:
+				printk(" at %08x%08x", ahigh, alow);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1219: FILE: arch/i386/kernel/cpu/mcheck/p6.c:51:
+			printk("\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1221: FILE: arch/i386/kernel/cpu/mcheck/p6.c:53:
+			wrmsr(MSR_IA32_MC0_STATUS+i*4, 0UL, 0UL);
 			                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1221: FILE: arch/i386/kernel/cpu/mcheck/p6.c:53:
+			wrmsr(MSR_IA32_MC0_STATUS+i*4, 0UL, 0UL);
 			                           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1227: FILE: arch/i386/kernel/cpu/mcheck/p6.c:59:
+	if(recover&2)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1227: FILE: arch/i386/kernel/cpu/mcheck/p6.c:59:
+	if(recover&2)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1229: FILE: arch/i386/kernel/cpu/mcheck/p6.c:61:
+	if(recover&1)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1229: FILE: arch/i386/kernel/cpu/mcheck/p6.c:61:
+	if(recover&1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1231: FILE: arch/i386/kernel/cpu/mcheck/p6.c:63:
+	printk(KERN_EMERG "Attempting to continue.\n");

ERROR:SPACING: spaces required around that '&=' (ctx:VxO)
#1232: FILE: arch/i386/kernel/cpu/mcheck/p6.c:64:
+	mcgstl&=~(1<<2);
 	      ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#1232: FILE: arch/i386/kernel/cpu/mcheck/p6.c:64:
+	mcgstl&=~(1<<2);
 	        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1232: FILE: arch/i386/kernel/cpu/mcheck/p6.c:64:
+	mcgstl&=~(1<<2);
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1233: FILE: arch/i386/kernel/cpu/mcheck/p6.c:65:
+	wrmsr(MSR_IA32_MCG_STATUS,mcgstl, mcgsth);
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1241: FILE: arch/i386/kernel/cpu/mcheck/p6.c:73:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1243: FILE: arch/i386/kernel/cpu/mcheck/p6.c:75:
+	if( !cpu_has(c, X86_FEATURE_MCE) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1243: FILE: arch/i386/kernel/cpu/mcheck/p6.c:75:
+	if( !cpu_has(c, X86_FEATURE_MCE) )

ERROR:SPACING: space required before the open parenthesis '('
#1243: FILE: arch/i386/kernel/cpu/mcheck/p6.c:75:
+	if( !cpu_has(c, X86_FEATURE_MCE) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1244: FILE: arch/i386/kernel/cpu/mcheck/p6.c:76:
+^I^Ireturn;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1247: FILE: arch/i386/kernel/cpu/mcheck/p6.c:79:
+ ^Iif( !cpu_has(c, X86_FEATURE_MCA) )$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1247: FILE: arch/i386/kernel/cpu/mcheck/p6.c:79:
+ ^Iif( !cpu_has(c, X86_FEATURE_MCA) )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1247: FILE: arch/i386/kernel/cpu/mcheck/p6.c:79:
+ ^Iif( !cpu_has(c, X86_FEATURE_MCA) )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1247: FILE: arch/i386/kernel/cpu/mcheck/p6.c:79:
+ 	if( !cpu_has(c, X86_FEATURE_MCA) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1247: FILE: arch/i386/kernel/cpu/mcheck/p6.c:79:
+ 	if( !cpu_has(c, X86_FEATURE_MCA) )

ERROR:SPACING: space required before the open parenthesis '('
#1247: FILE: arch/i386/kernel/cpu/mcheck/p6.c:79:
+ 	if( !cpu_has(c, X86_FEATURE_MCA) )

WARNING:MEMORY_BARRIER: memory barrier without comment
#1252: FILE: arch/i386/kernel/cpu/mcheck/p6.c:84:
+	wmb();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1254: FILE: arch/i386/kernel/cpu/mcheck/p6.c:86:
+	printk(KERN_INFO "Intel machine check architecture supported.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1256: FILE: arch/i386/kernel/cpu/mcheck/p6.c:88:
+	if(l&(1<<8))	/* Control register present ? */
 	    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1256: FILE: arch/i386/kernel/cpu/mcheck/p6.c:88:
+	if(l&(1<<8))	/* Control register present ? */
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#1256: FILE: arch/i386/kernel/cpu/mcheck/p6.c:88:
+	if(l&(1<<8))	/* Control register present ? */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1258: FILE: arch/i386/kernel/cpu/mcheck/p6.c:90:
+	banks = l&0xff;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1261: FILE: arch/i386/kernel/cpu/mcheck/p6.c:93:
+	for(i=1; i<banks; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1261: FILE: arch/i386/kernel/cpu/mcheck/p6.c:93:
+	for(i=1; i<banks; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1261: FILE: arch/i386/kernel/cpu/mcheck/p6.c:93:
+	for(i=1; i<banks; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1262: FILE: arch/i386/kernel/cpu/mcheck/p6.c:94:
+		wrmsr(MSR_IA32_MC0_CTL+4*i, 0xffffffff, 0xffffffff);
 		                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1262: FILE: arch/i386/kernel/cpu/mcheck/p6.c:94:
+		wrmsr(MSR_IA32_MC0_CTL+4*i, 0xffffffff, 0xffffffff);
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1264: FILE: arch/i386/kernel/cpu/mcheck/p6.c:96:
+	for(i=0; i<banks; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1264: FILE: arch/i386/kernel/cpu/mcheck/p6.c:96:
+	for(i=0; i<banks; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1264: FILE: arch/i386/kernel/cpu/mcheck/p6.c:96:
+	for(i=0; i<banks; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1265: FILE: arch/i386/kernel/cpu/mcheck/p6.c:97:
+		wrmsr(MSR_IA32_MC0_STATUS+4*i, 0x0, 0x0);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1265: FILE: arch/i386/kernel/cpu/mcheck/p6.c:97:
+		wrmsr(MSR_IA32_MC0_STATUS+4*i, 0x0, 0x0);
 		                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1268: FILE: arch/i386/kernel/cpu/mcheck/p6.c:100:
+	printk(KERN_INFO "Intel machine check reporting enabled on CPU#%d.\n", smp_processor_id());

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1274: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1284: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:11:
+#include <asm/processor.h> $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#1284: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:11:
+#include <asm/processor.h> 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1291: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:18:
+static void winchip_machine_check(struct pt_regs * regs, long error_code)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1293: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:20:
+	printk(KERN_EMERG "CPU0: Machine Check Exception.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1300: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:27:
+	u32 lo, hi;
+	machine_check_vector = winchip_machine_check;

WARNING:MEMORY_BARRIER: memory barrier without comment
#1301: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:28:
+	wmb();

ERROR:SPACING: spaces required around that '|=' (ctx:VxW)
#1303: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:30:
+	lo|= (1<<2);	/* Enable EIERRINT (int 18 MCE) */
 	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1303: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:30:
+	lo|= (1<<2);	/* Enable EIERRINT (int 18 MCE) */
 	       ^

ERROR:SPACING: spaces required around that '&=' (ctx:VxW)
#1304: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:31:
+	lo&= ~(1<<4);	/* Enable MCE */
 	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1304: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:31:
+	lo&= ~(1<<4);	/* Enable MCE */
 	        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1307: FILE: arch/i386/kernel/cpu/mcheck/winchip.c:34:
+	printk(KERN_INFO "Winchip machine check reporting enabled on CPU#0.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 150 errors, 100 warnings, 123 checks, 725 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
