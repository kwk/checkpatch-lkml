WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
aio_read support.  A few cleanups are required to make exec() use vfs_read() 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: drivers/net/ns83820.c:1:
+#define _VERSION "0.20"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#91: FILE: drivers/net/ns83820.c:6:
+ * $Revision: 1.34.2.23 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#120: FILE: drivers/net/ns83820.c:118:
+static int reset_phy = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#121: FILE: drivers/net/ns83820.c:119:
+static int lnksts = 0;		/* CFG_LNKSTS bit polarity */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: drivers/net/ns83820.c:156:
+ * onto the next one!! */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'Dont'' may be misspelled - perhaps 'Don't'?
#172: FILE: drivers/net/ns83820.c:234:
+/* Ramit : Dont' ever use AUTO_1000, it never works and is buggy.
            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#173: FILE: drivers/net/ns83820.c:235:
+ * Read the Phy response and then configure the MAC accordingly */

CHECK:BIT_MACRO: Prefer using the BIT macro
#189: FILE: drivers/net/ns83820.c:271:
+#define PCR_PSEN	(1 << 31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#190: FILE: drivers/net/ns83820.c:272:
+#define PCR_PS_MCAST	(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#191: FILE: drivers/net/ns83820.c:273:
+#define PCR_PS_DA	(1 << 29)

CHECK:BIT_MACRO: Prefer using the BIT macro
#193: FILE: drivers/net/ns83820.c:275:
+#define PCR_STLO_4	(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#195: FILE: drivers/net/ns83820.c:277:
+#define PCR_FFLO_4K	(1 << 21)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#239: FILE: drivers/net/ns83820.c:408:
+#define DESC_BUFPTR		(DESC_LINK + HW_ADDR_LEN/4)
                    		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#240: FILE: drivers/net/ns83820.c:409:
+#define DESC_CMDSTS		(DESC_BUFPTR + HW_ADDR_LEN/4)
                    		                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#241: FILE: drivers/net/ns83820.c:410:
+#define DESC_EXTSTS		(DESC_CMDSTS + 4/4)
                    		                ^

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#287: FILE: drivers/net/ns83820.c:499:
+static inline void build_rx_desc(struct ns83820 *dev, u32 *desc, dma_addr_t link, dma_addr_t buf, u32 cmdsts, u32 extsts)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#329: FILE: drivers/net/ns83820.c:811:
+		printk(KERN_DEBUG "%s: BAD\n", dev->net_dev.name);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#394: FILE: drivers/net/ns83820.c:940:
+	       !(CMDSTS_OWN & (cmdsts = le32_to_cpu(desc[DESC_CMDSTS]))) ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#439: FILE: drivers/net/ns83820.c:1000:
+			u32 *desc = dev->tx_descs + (i * DESC_SIZE);
+			pci_unmap_single(dev->pci_dev,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/net/ns83820.c:1001:
+			pci_unmap_single(dev->pci_dev,
+					desc_addr_get(desc + DESC_BUFPTR),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#458: FILE: drivers/net/ns83820.c:1023:
+	unsigned tx_done_idx, last_idx;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#467: FILE: drivers/net/ns83820.c:1042:
+	last_idx = free_idx = dev->tx_free_idx;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: drivers/net/ns83820.c:1303:
+^I^I * and the descriptor update from the cpu.  Just in case, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: drivers/net/ns83820.c:1304:
+^I^I * kick the transmitter if the hardware thinks it is on a $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->tx_done_idx == dev->tx_free_idx'
#579: FILE: drivers/net/ns83820.c:1319:
+		if ((dev->tx_done_idx == dev->tx_free_idx) &&
+		    (dev->IMR_cache & ISR_TXOK)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: drivers/net/ns83820.c:1330:
+^I * of TxDesc and TxIdle and leave TxOk disabled (since it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: drivers/net/ns83820.c:1331:
+^I * occurs on every packet), but when no further irqs of this $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->tx_done_idx != dev->tx_free_idx'
#594: FILE: drivers/net/ns83820.c:1334:
+	if ((ISR_TXIDLE & isr) && (dev->tx_done_idx != dev->tx_free_idx)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: drivers/net/ns83820.c:1398:
+        u32 tx_done_idx, *desc;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: drivers/net/ns83820.c:1398:
+        u32 tx_done_idx, *desc;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#643: FILE: drivers/net/ns83820.c:1406:
+	printk(KERN_INFO "%s: tx_timeout: tx_done_idx=%d free_idx=%d cmdsts=%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: drivers/net/ns83820.c:1407:
+	printk(KERN_INFO "%s: tx_timeout: tx_done_idx=%d free_idx=%d cmdsts=%08x\n",
+		dev->net_dev.name,

WARNING:LINE_SPACING: Missing a blank line after declarations
#650: FILE: drivers/net/ns83820.c:1413:
+		u32 isr;
+		isr = readl(dev->base + ISR);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#651: FILE: drivers/net/ns83820.c:1414:
+		printk("irq: %08x imr: %08x\n", isr, dev->IMR_cache);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#661: FILE: drivers/net/ns83820.c:1424:
+	printk(KERN_INFO "%s: after: tx_done_idx=%d free_idx=%d cmdsts=%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#662: FILE: drivers/net/ns83820.c:1425:
+	printk(KERN_INFO "%s: after: tx_done_idx=%d free_idx=%d cmdsts=%08x\n",
+		dev->net_dev.name,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#673: FILE: drivers/net/ns83820.c:1436:
+	printk("ns83820_tx_watch: %u %u %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ns83820_tx_watch', this function's name, in a string
#673: FILE: drivers/net/ns83820.c:1436:
+	printk("ns83820_tx_watch: %u %u %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: drivers/net/ns83820.c:1437:
+	printk("ns83820_tx_watch: %u %u %d\n",
+		dev->tx_done_idx, dev->tx_free_idx, atomic_read(&dev->nr_tx_skbs)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#678: FILE: drivers/net/ns83820.c:1441:
+	if (time_after(jiffies, dev->net_dev.trans_start + 1*HZ) &&
 	                                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#680: FILE: drivers/net/ns83820.c:1443:
+		printk(KERN_DEBUG "%s: ns83820_tx_watch: %u %u %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ns83820_tx_watch', this function's name, in a string
#680: FILE: drivers/net/ns83820.c:1443:
+		printk(KERN_DEBUG "%s: ns83820_tx_watch: %u %u %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#681: FILE: drivers/net/ns83820.c:1444:
+		printk(KERN_DEBUG "%s: ns83820_tx_watch: %u %u %d\n",
+			dev->net_dev.name,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#687: FILE: drivers/net/ns83820.c:1450:
+	mod_timer(&dev->tx_watchdog, jiffies + 2*HZ);
 	                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#710: FILE: drivers/net/ns83820.c:1485:
+	mod_timer(&dev->tx_watchdog, jiffies + 2*HZ);
 	                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#782: FILE: drivers/net/ns83820.c:1579:
+		printk(KERN_INFO "%s: %s failed! (0x%08x & 0x%08x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#783: FILE: drivers/net/ns83820.c:1580:
+		printk(KERN_INFO "%s: %s failed! (0x%08x & 0x%08x)\n",
+			dev->net_dev.name, name, status, fail);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#785: FILE: drivers/net/ns83820.c:1582:
+		printk(KERN_INFO "%s: run_bist %s timed out! (%08x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#786: FILE: drivers/net/ns83820.c:1583:
+		printk(KERN_INFO "%s: run_bist %s timed out! (%08x)\n",
+			dev->net_dev.name, name, status);

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#795: FILE: drivers/net/ns83820.c:1592:
+	writel(dev->MEAR_cache, dev->base + MEAR);
 	                                    ^^^^

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#796: FILE: drivers/net/ns83820.c:1593:
+	readl(dev->base + MEAR);
 	                  ^^^^

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#806: FILE: drivers/net/ns83820.c:1603:
+	writel(dev->MEAR_cache, dev->base + MEAR);
 	                                    ^^^^

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#807: FILE: drivers/net/ns83820.c:1604:
+	readl(dev->base + MEAR);
 	                  ^^^^

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#814: FILE: drivers/net/ns83820.c:1611:
+	writel(dev->MEAR_cache, dev->base + MEAR);
 	                                    ^^^^

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#815: FILE: drivers/net/ns83820.c:1612:
+	readl(dev->base + MEAR);
 	                  ^^^^

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#828: FILE: drivers/net/ns83820.c:1625:
+	writel(dev->MEAR_cache, dev->base + MEAR);
 	                                    ^^^^

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#829: FILE: drivers/net/ns83820.c:1626:
+	readl(dev->base + MEAR);
 	                  ^^^^

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#835: FILE: drivers/net/ns83820.c:1632:
+	bit = (readl(dev->base + MEAR) & MEAR_MDIO) ? 1 : 0;
 	                         ^^^^

WARNING:TYPO_SPELLING: 'MEAR' may be misspelled - perhaps 'WEAR'?
#837: FILE: drivers/net/ns83820.c:1634:
+	writel(dev->MEAR_cache, dev->base + MEAR);
 	                                    ^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#845: FILE: drivers/net/ns83820.c:1642:
+static unsigned ns83820_mii_read_reg(struct ns83820 *dev, unsigned phy, unsigned reg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#845: FILE: drivers/net/ns83820.c:1642:
+static unsigned ns83820_mii_read_reg(struct ns83820 *dev, unsigned phy, unsigned reg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#845: FILE: drivers/net/ns83820.c:1642:
+static unsigned ns83820_mii_read_reg(struct ns83820 *dev, unsigned phy, unsigned reg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#847: FILE: drivers/net/ns83820.c:1644:
+	unsigned data = 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#851: FILE: drivers/net/ns83820.c:1648:
+	for (i=0; i<64; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#851: FILE: drivers/net/ns83820.c:1648:
+	for (i=0; i<64; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#860: FILE: drivers/net/ns83820.c:1657:
+	for (i=0; i<5; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#860: FILE: drivers/net/ns83820.c:1657:
+	for (i=0; i<5; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#864: FILE: drivers/net/ns83820.c:1661:
+	for (i=0; i<5; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#864: FILE: drivers/net/ns83820.c:1661:
+	for (i=0; i<5; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#871: FILE: drivers/net/ns83820.c:1668:
+	for (i=0; i<16; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#871: FILE: drivers/net/ns83820.c:1668:
+	for (i=0; i<16; i++) {
 	           ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#879: FILE: drivers/net/ns83820.c:1676:
+static unsigned ns83820_mii_write_reg(struct ns83820 *dev, unsigned phy, unsigned reg, unsigned data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#879: FILE: drivers/net/ns83820.c:1676:
+static unsigned ns83820_mii_write_reg(struct ns83820 *dev, unsigned phy, unsigned reg, unsigned data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#879: FILE: drivers/net/ns83820.c:1676:
+static unsigned ns83820_mii_write_reg(struct ns83820 *dev, unsigned phy, unsigned reg, unsigned data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#879: FILE: drivers/net/ns83820.c:1676:
+static unsigned ns83820_mii_write_reg(struct ns83820 *dev, unsigned phy, unsigned reg, unsigned data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#879: FILE: drivers/net/ns83820.c:1676:
+static unsigned ns83820_mii_write_reg(struct ns83820 *dev, unsigned phy, unsigned reg, unsigned data)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#884: FILE: drivers/net/ns83820.c:1681:
+	for (i=0; i<64; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#884: FILE: drivers/net/ns83820.c:1681:
+	for (i=0; i<64; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#893: FILE: drivers/net/ns83820.c:1690:
+	for (i=0; i<5; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#893: FILE: drivers/net/ns83820.c:1690:
+	for (i=0; i<5; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#897: FILE: drivers/net/ns83820.c:1694:
+	for (i=0; i<5; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#897: FILE: drivers/net/ns83820.c:1694:
+	for (i=0; i<5; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#904: FILE: drivers/net/ns83820.c:1701:
+	for (i=0; i<16; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#904: FILE: drivers/net/ns83820.c:1701:
+	for (i=0; i<16; i++)
 	           ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#917: FILE: drivers/net/ns83820.c:1714:
+#if 0

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#919: FILE: drivers/net/ns83820.c:1716:
+		unsigned tmp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#920: FILE: drivers/net/ns83820.c:1717:
+		unsigned tmp;
+		ns83820_mii_read_reg(dev, 1, 0x09);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#925: FILE: drivers/net/ns83820.c:1722:
+		udelay(1300);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#931: FILE: drivers/net/ns83820.c:1728:
+	for (i=1; i<2; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#931: FILE: drivers/net/ns83820.c:1728:
+	for (i=1; i<2; i++) {
 	           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#933: FILE: drivers/net/ns83820.c:1730:
+		unsigned a, b;

WARNING:LINE_SPACING: Missing a blank line after declarations
#934: FILE: drivers/net/ns83820.c:1731:
+		unsigned a, b;
+		a = ns83820_mii_read_reg(dev, i, MII_PHYIDR1);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#940: FILE: drivers/net/ns83820.c:1737:
+		for (j=0; j<0x16; j+=4) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#940: FILE: drivers/net/ns83820.c:1737:
+		for (j=0; j<0x16; j+=4) {
 		           ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#940: FILE: drivers/net/ns83820.c:1737:
+		for (j=0; j<0x16; j+=4) {
 		                   ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#951: FILE: drivers/net/ns83820.c:1748:
+		unsigned a, b;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#964: FILE: drivers/net/ns83820.c:1761:
 static int __devinit ns83820_init_one(struct pci_dev *pci_dev, const struct pci_device_id *id)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#980: FILE: drivers/net/ns83820.c:1797:
+		printk(KERN_INFO "ns83820: pci_enable_dev failed: %d\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#999: FILE: drivers/net/ns83820.c:1836:
+		printk(KERN_INFO "ns83820: unable to register netdev: %d\n", err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1003: FILE: drivers/net/ns83820.c:1840:
+	printk("%s: ns83820.c: 0x22c: %08x, subsystem: %04x:%04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1004: FILE: drivers/net/ns83820.c:1841:
+	printk("%s: ns83820.c: 0x22c: %08x, subsystem: %04x:%04x\n",
+		dev->net_dev.name, le32_to_cpu(readl(dev->base + 0x22c)),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1049: FILE: drivers/net/ns83820.c:1870:
+		printk(KERN_INFO "%s: detected 64 bit PCI data bus.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: drivers/net/ns83820.c:1871:
+		printk(KERN_INFO "%s: detected 64 bit PCI data bus.\n",
 			dev->net_dev.name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1054: FILE: drivers/net/ns83820.c:1874:
+			printk(KERN_INFO "%s: EEPROM did not enable 64 bit bus.  Disabled.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1055: FILE: drivers/net/ns83820.c:1875:
+			printk(KERN_INFO "%s: EEPROM did not enable 64 bit bus.  Disabled.\n",
 				dev->net_dev.name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1075: FILE: drivers/net/ns83820.c:1902:
+		printk(KERN_INFO "%s: enabling optical transceiver\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1076: FILE: drivers/net/ns83820.c:1903:
+		printk(KERN_INFO "%s: enabling optical transceiver\n",
+			dev->net_dev.name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1085: FILE: drivers/net/ns83820.c:1924:
+		printk(KERN_INFO "%s: resetting phy\n", dev->net_dev.name);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1088: FILE: drivers/net/ns83820.c:1927:
+		schedule_timeout((HZ+99)/100);
 		                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1088: FILE: drivers/net/ns83820.c:1927:
+		schedule_timeout((HZ+99)/100);
 		                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1100: FILE: drivers/net/ns83820.c:1943:
+^I/* Ramit : 1024 DMA is not a good idea, it ends up banging $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1101: FILE: drivers/net/ns83820.c:1944:
+	 * some DELL and COMPAQ SMP systems */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1113: FILE: drivers/net/ns83820.c:1957:
+^I/* Ramit : 1024 DMA is not a good idea, it ends up banging $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1114: FILE: drivers/net/ns83820.c:1958:
+^I * some DELL and COMPAQ SMP systems $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1115: FILE: drivers/net/ns83820.c:1959:
+	 * Turn on ALP, only we are accpeting Jumbo Packets */

WARNING:TYPO_SPELLING: 'discrards' may be misspelled - perhaps 'discards'?
#1134: FILE: drivers/net/ns83820.c:1978:
+	 * it discrards it!.  These guys......
 	      ^^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1165: FILE: drivers/net/ns83820.c:2059:
 static struct pci_device_id ns83820_pci_tbl[] __devinitdata = {

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#1193: FILE: fs/aio.c:38:
+#include <asm/mmu_context.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1210: FILE: fs/aio.c:181:
 
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1238: FILE: fs/aio.c:190:
+	unsigned pos = (nr) + AIO_EVENTS_OFFSET;			\

ERROR:SPACING: space required before the open parenthesis '('
#1250: FILE: fs/aio.c:202:
+} while(0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1335: FILE: fs/aio.c:552:
+	struct mm_struct *active_mm = current->active_mm;
+	atomic_inc(&mm->mm_count);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1368: FILE: fs/aio.c:585:
+		iocb->ki_users ++;
 		               ^

CHECK:CAMELCASE: Avoid CamelCase: <kiocbClearKicked>
#1371: FILE: fs/aio.c:588:
+		kiocbClearKicked(iocb);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1379: FILE: fs/aio.c:596:
+		if (NULL != iocb)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1391: FILE: fs/aio.c:608:
+^I/* sync iocbs are easy: they can only ever be executing from a $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1392: FILE: fs/aio.c:609:
+	 * single context. */

CHECK:CAMELCASE: Avoid CamelCase: <kiocbSetKicked>
#1394: FILE: fs/aio.c:611:
+		kiocbSetKicked(iocb);

CHECK:CAMELCASE: Avoid CamelCase: <kiocbTryKick>
#1399: FILE: fs/aio.c:616:
+	if (!kiocbTryKick(iocb)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1401: FILE: fs/aio.c:618:
+		long flags;
+		spin_lock_irqsave(&ctx->ctx_lock, flags);

ERROR:SPACING: space required before the open parenthesis '('
#1482: FILE: fs/exec.c:134:
+	if(file->f_op) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1584: FILE: fs/nfs/file.c:94:
+nfs_file_read(struct kiocb *iocb, char * buf, size_t count, loff_t pos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1587: FILE: fs/nfs/file.c:96:
+	struct dentry * dentry = iocb->ki_filp->f_dentry;

CHECK:SPACING: No space is necessary after a cast
#1594: FILE: fs/nfs/file.c:102:
+		(unsigned long) count, (unsigned long) pos);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1611: FILE: fs/nfs/file.c:216:
+	struct dentry * dentry = iocb->ki_filp->f_dentry;

CHECK:SPACING: No space is necessary after a cast
#1618: FILE: fs/nfs/file.c:222:
+		inode->i_ino, (unsigned long) count, (unsigned long) pos);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1638: FILE: fs/read_write.c:179:
+ssize_t do_sync_read(struct file *filp, char *buf, size_t len, loff_t *ppos)
                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1643: FILE: fs/read_write.c:184:
+	init_sync_kiocb(&kiocb, filp);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1679: FILE: fs/read_write.c:219:
+ssize_t do_sync_write(struct file *filp, const char *buf, size_t len, loff_t *ppos)
                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1684: FILE: fs/read_write.c:224:
+	init_sync_kiocb(&kiocb, filp);
 	                        ^^^^

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1728: FILE: include/linux/aio.h:8:
+#include <asm/atomic.h>

CHECK:CAMELCASE: Avoid CamelCase: <kiocbTryLock>
#1745: FILE: include/linux/aio.h:33:
+#define kiocbTryLock(iocb)	test_and_set_bit(KIF_LOCKED, &(iocb)->ki_flags)

CHECK:CAMELCASE: Avoid CamelCase: <kiocbSetLocked>
#1748: FILE: include/linux/aio.h:36:
+#define kiocbSetLocked(iocb)	set_bit(KIF_LOCKED, &(iocb)->ki_flags)

CHECK:CAMELCASE: Avoid CamelCase: <kiocbSetCancelled>
#1750: FILE: include/linux/aio.h:38:
+#define kiocbSetCancelled(iocb)	set_bit(KIF_CANCELLED, &(iocb)->ki_flags)

CHECK:CAMELCASE: Avoid CamelCase: <kiocbClearLocked>
#1752: FILE: include/linux/aio.h:40:
+#define kiocbClearLocked(iocb)	set_bit(KIF_LOCKED, &(iocb)->ki_flags)

CHECK:CAMELCASE: Avoid CamelCase: <kiocbClearCancelled>
#1754: FILE: include/linux/aio.h:42:
+#define kiocbClearCancelled(iocb)	set_bit(KIF_CANCELLED, &(iocb)->ki_flags)

CHECK:CAMELCASE: Avoid CamelCase: <kiocbIsLocked>
#1756: FILE: include/linux/aio.h:44:
+#define kiocbIsLocked(iocb)	test_bit(0, &(iocb)->ki_flags)

CHECK:CAMELCASE: Avoid CamelCase: <kiocbIsKicked>
#1757: FILE: include/linux/aio.h:45:
+#define kiocbIsKicked(iocb)	test_bit(1, &(iocb)->ki_flags)

CHECK:CAMELCASE: Avoid CamelCase: <kiocbIsCancelled>
#1758: FILE: include/linux/aio.h:46:
+#define kiocbIsCancelled(iocb)	test_bit(2, &(iocb)->ki_flags)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#1769: FILE: include/linux/aio.h:57:
+	long			(*ki_retry)(struct kiocb *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1773: FILE: include/linux/aio.h:60:
+						 * for cancellation */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1810: FILE: include/linux/aio.h:145:
+extern void FASTCALL(kick_iocb(struct kiocb *iocb));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: Unnecessary space before function pointer arguments
#1822: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#1822: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1822: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1822: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#1822: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const char *, size_t, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1830: FILE: include/linux/fs.h:1242:
+extern ssize_t generic_file_aio_read(struct kiocb *, char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#1830: FILE: include/linux/fs.h:1242:
+extern ssize_t generic_file_aio_read(struct kiocb *, char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1830: FILE: include/linux/fs.h:1242:
+extern ssize_t generic_file_aio_read(struct kiocb *, char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1830: FILE: include/linux/fs.h:1242:
+extern ssize_t generic_file_aio_read(struct kiocb *, char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#1830: FILE: include/linux/fs.h:1242:
+extern ssize_t generic_file_aio_read(struct kiocb *, char *, size_t, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1831: FILE: include/linux/fs.h:1243:
+extern ssize_t generic_file_aio_write(struct kiocb *, const char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#1831: FILE: include/linux/fs.h:1243:
+extern ssize_t generic_file_aio_write(struct kiocb *, const char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1831: FILE: include/linux/fs.h:1243:
+extern ssize_t generic_file_aio_write(struct kiocb *, const char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1831: FILE: include/linux/fs.h:1243:
+extern ssize_t generic_file_aio_write(struct kiocb *, const char *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#1831: FILE: include/linux/fs.h:1243:
+extern ssize_t generic_file_aio_write(struct kiocb *, const char *, size_t, loff_t);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1832: FILE: include/linux/fs.h:1244:
+extern ssize_t do_sync_read(struct file *filp, char *buf, size_t len, loff_t *ppos);
                                          ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1832: FILE: include/linux/fs.h:1244:
+extern ssize_t do_sync_read(struct file *filp, char *buf, size_t len, loff_t *ppos);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1833: FILE: include/linux/fs.h:1245:
+extern ssize_t do_sync_write(struct file *filp, const char *buf, size_t len, loff_t *ppos);
                                           ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1833: FILE: include/linux/fs.h:1245:
+extern ssize_t do_sync_write(struct file *filp, const char *buf, size_t len, loff_t *ppos);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1844: FILE: include/linux/kernel.h:204:
+extern void BUILD_BUG(void);

ERROR:SPACING: space required before the open parenthesis '('
#1845: FILE: include/linux/kernel.h:205:
+#define BUILD_BUG_ON(condition) do { if (condition) BUILD_BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1863: FILE: mm/filemap.c:892:
+	BUG_ON(iocb->ki_pos != pos);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425252.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 40 errors, 87 warnings, 48 checks, 1681 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425252.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
