WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Oops, I read only SubmittingPatches. So this file should be changed in point 7

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: drivers/char/isicom.c:76:
+ *  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: drivers/char/isicom.c:84:
+ *  $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: drivers/char/isicom.c:86:
+ *  ^I^I^I^I^ITaken care of license warning.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/char/isicom.c:101:
+ * $

CHECK:CAMELCASE: Avoid CamelCase: <InterruptTheCard>
#174: FILE: drivers/char/isicom.c:139:
+#define InterruptTheCard(base) outw(0, (base) + 0xc)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ClearInterrupt>
#175: FILE: drivers/char/isicom.c:140:
+#define ClearInterrupt(base) inw((base) + 0x0a)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#178: FILE: drivers/char/isicom.c:143:
+#define pr_deb(str, ...) printk((str), ##args);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#178: FILE: drivers/char/isicom.c:143:
+#define pr_deb(str, ...) printk((str), ##args);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#186: FILE: drivers/char/isicom.c:151:
+static void __devexit isicom_remove(struct pci_dev*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#186: FILE: drivers/char/isicom.c:151:
+static void __devexit isicom_remove(struct pci_dev*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: drivers/char/isicom.c:214:
+^Istruct tty_struct ^I*tty;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#322: FILE: drivers/char/isicom.c:255:
+^Iu16 ^I^Ibase = card->base;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#405: FILE: drivers/char/isicom.c:325:
 }
+static inline void drop_rts(struct isi_port *port)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#728: FILE: drivers/char/isicom.c:394:
+static inline int __isicom_paranoia_check(struct isi_port const *port,
+	char *name, const char *routine)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#737: FILE: drivers/char/isicom.c:397:
+		printk(KERN_WARNING "ISICOM: Warning: bad isicom magic for "

WARNING:SPLIT_STRING: quoted string split across lines
#738: FILE: drivers/char/isicom.c:398:
+		printk(KERN_WARNING "ISICOM: Warning: bad isicom magic for "
+			"dev %s in %s.\n", name, routine);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#743: FILE: drivers/char/isicom.c:402:
+		printk(KERN_WARNING "ISICOM: Warning: NULL isicom port for "

WARNING:SPLIT_STRING: quoted string split across lines
#744: FILE: drivers/char/isicom.c:403:
+		printk(KERN_WARNING "ISICOM: Warning: NULL isicom port for "
+			"dev %s in %s.\n", name, routine);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#807: FILE: drivers/char/isicom.c:450:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: drivers/char/isicom.c:466:
+		pr_deb(KERN_DEBUG "ISICOM: txing %d bytes, port%d.\n",
+				txcount, port->channel+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#831: FILE: drivers/char/isicom.c:466:
+				txcount, port->channel+1);
 				                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: drivers/char/isicom.c:468:
+		outw((port->channel << isi_card[card].shift_count) | txcount,
+			base);

WARNING:RETURN_VOID: void function return statements are not generally useful
#908: FILE: drivers/char/isicom.c:528:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#914: FILE: drivers/char/isicom.c:532:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#931: FILE: drivers/char/isicom.c:543:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#932: FILE: drivers/char/isicom.c:544:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: drivers/char/isicom.c:544:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#986: FILE: drivers/char/isicom.c:580:
+		printk(KERN_WARNING "ISICOM: isicom_interrupt(0x%x): "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isicom_interrupt', this function's name, in a string
#986: FILE: drivers/char/isicom.c:580:
+		printk(KERN_WARNING "ISICOM: isicom_interrupt(0x%x): "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#987: FILE: drivers/char/isicom.c:581:
+		printk(KERN_WARNING "ISICOM: isicom_interrupt(0x%x): "
+			"%d(channel) > port_count.\n", base, channel + 1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#992: FILE: drivers/char/isicom.c:585:
+			outw(0x0000, base+0x04); /* enable interrupts */
 			                 ^

WARNING:SPLIT_STRING: quoted string split across lines
#1053: FILE: drivers/char/isicom.c:624:
+						pr_deb(KERN_DEBUG "ISICOM: "
+							"interrupt: "

WARNING:SPLIT_STRING: quoted string split across lines
#1054: FILE: drivers/char/isicom.c:625:
+							"interrupt: "
+							"DCD->low.\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#1081: FILE: drivers/char/isicom.c:629:
+				} else if (header & ISI_DCD) {
[...]
+						pr_deb(KERN_DEBUG "ISICOM: "

WARNING:SPLIT_STRING: quoted string split across lines
#1084: FILE: drivers/char/isicom.c:632:
+						pr_deb(KERN_DEBUG "ISICOM: "
+							"interrupt: "

WARNING:SPLIT_STRING: quoted string split across lines
#1085: FILE: drivers/char/isicom.c:633:
+							"interrupt: "
+							"DCD->high.\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1087: FILE: drivers/char/isicom.c:635:
+						wake_up_interruptible(

CHECK:BRACES: braces {} should be used on all arms of this statement
#1104: FILE: drivers/char/isicom.c:645:
+			if (port->flags & ASYNC_CTS_FLOW) {
[...]
+			} else if (header & ISI_CTS)
[...]
 				else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#1113: FILE: drivers/char/isicom.c:654:
+				} else if (!(header & ISI_CTS)) {
+						port->tty->hw_stopped = 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#1119: FILE: drivers/char/isicom.c:660:
+			} else if (header & ISI_CTS)
+					port->status |= ISI_CTS;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1165: FILE: drivers/char/isicom.c:685:
+			printk(KERN_DEBUG "ISICOM: isicom_interrupt: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isicom_interrupt', this function's name, in a string
#1165: FILE: drivers/char/isicom.c:685:
+			printk(KERN_DEBUG "ISICOM: isicom_interrupt: "

WARNING:SPLIT_STRING: quoted string split across lines
#1166: FILE: drivers/char/isicom.c:686:
+			printk(KERN_DEBUG "ISICOM: isicom_interrupt: "
+				"stats!!!.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1170: FILE: drivers/char/isicom.c:690:
+			printk(KERN_WARNING "ISICOM: Intr: Unknown code in "

WARNING:SPLIT_STRING: quoted string split across lines
#1171: FILE: drivers/char/isicom.c:691:
+			printk(KERN_WARNING "ISICOM: Intr: Unknown code in "
+				"status packet.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1180: FILE: drivers/char/isicom.c:698:
+		pr_deb(KERN_DEBUG "ISICOM: Intr: Can rx %d of %d bytes.\n",
 					count, byte_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1188: FILE: drivers/char/isicom.c:704:
+			tty_insert_flip_char(tty,  inw(base) & 0xff,
+				TTY_NORMAL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1194: FILE: drivers/char/isicom.c:708:
+			printk(KERN_DEBUG "ISICOM: Intr(0x%x:%d): Flip buffer "

WARNING:SPLIT_STRING: quoted string split across lines
#1195: FILE: drivers/char/isicom.c:709:
+			printk(KERN_DEBUG "ISICOM: Intr(0x%x:%d): Flip buffer "
+					"overflow! dropping bytes...\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1204: FILE: drivers/char/isicom.c:721:
+		outw(0x0000, base+0x04); /* enable interrupts */
 		                 ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1248: FILE: drivers/char/isicom.c:751:
 	if (baud == 15) {
+

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1271: FILE: drivers/char/isicom.c:766:
+		return;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#1271: FILE: drivers/char/isicom.c:766:
+	} else

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1385: FILE: drivers/char/isicom.c:870:
+		port->xmit_buf = (u8*)page;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1414: FILE: drivers/char/isicom.c:891:
+static int block_til_ready(struct tty_struct *tty, struct file *filp,
                                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1415: FILE: drivers/char/isicom.c:892:
+static int block_til_ready(struct tty_struct *tty, struct file *filp,
+	struct isi_port *port)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'block_til_ready', this function's name, in a string
#1429: FILE: drivers/char/isicom.c:902:
+		pr_deb(KERN_DEBUG "ISICOM: block_til_ready: close in "

WARNING:SPLIT_STRING: quoted string split across lines
#1430: FILE: drivers/char/isicom.c:903:
+		pr_deb(KERN_DEBUG "ISICOM: block_til_ready: close in "
+			"progress.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1447: FILE: drivers/char/isicom.c:914:
+	if ((filp->f_flags & O_NONBLOCK) ||
+			(tty->flags & (1 << TTY_IO_ERROR))) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'block_til_ready', this function's name, in a string
#1448: FILE: drivers/char/isicom.c:915:
+		pr_deb(KERN_DEBUG "ISICOM: block_til_ready: non-block mode.\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1476: FILE: drivers/char/isicom.c:938:
+		if (tty_hung_up_p(filp) || !(port->flags & ASYNC_INITIALIZED)) {
 		                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1506: FILE: drivers/char/isicom.c:968:
+static int isicom_open(struct tty_struct *tty, struct file *filp)
                                                             ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1547: FILE: drivers/char/isicom.c:1002:
+^Ireturn 0;      $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1615: FILE: drivers/char/isicom.c:1055:
+		printk(KERN_DEBUG "ISICOM: isicom_shutdown_port: bad "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isicom_shutdown_port', this function's name, in a string
#1615: FILE: drivers/char/isicom.c:1055:
+		printk(KERN_DEBUG "ISICOM: isicom_shutdown_port: bad "

WARNING:SPLIT_STRING: quoted string split across lines
#1616: FILE: drivers/char/isicom.c:1056:
+		printk(KERN_DEBUG "ISICOM: isicom_shutdown_port: bad "
+			"board(0x%x) count %d.\n", card->base, card->count);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1629: FILE: drivers/char/isicom.c:1067:
+static void isicom_close(struct tty_struct *tty, struct file *filp)
                                                               ^^^^

CHECK:SPACING: No space is necessary after a cast
#1633: FILE: drivers/char/isicom.c:1069:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1666: FILE: drivers/char/isicom.c:1093:
+		printk(KERN_WARNING "ISICOM:(0x%x) isicom_close: bad port "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isicom_close', this function's name, in a string
#1666: FILE: drivers/char/isicom.c:1093:
+		printk(KERN_WARNING "ISICOM:(0x%x) isicom_close: bad port "

WARNING:SPLIT_STRING: quoted string split across lines
#1667: FILE: drivers/char/isicom.c:1094:
+		printk(KERN_WARNING "ISICOM:(0x%x) isicom_close: bad port "
+			"count for channel%d = %d", card->base, port->channel,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1678: FILE: drivers/char/isicom.c:1102:
+^I} $

WARNING:SPLIT_STRING: quoted string split across lines
#1712: FILE: drivers/char/isicom.c:1130:
+			pr_deb(KERN_DEBUG "ISICOM: scheduling until time "
+				"out.\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1713: FILE: drivers/char/isicom.c:1131:
+			msleep_interruptible(

ERROR:SPACING: space required before the open parenthesis '('
#1753: FILE: drivers/char/isicom.c:1158:
+	while(1) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1821: FILE: drivers/char/isicom.c:1212:
+	if (port->xmit_cnt <= 0 || tty->stopped || tty->hw_stopped ||
+			!port->xmit_buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1863: FILE: drivers/char/isicom.c:1246:
+static inline void isicom_send_break(struct isi_port *port,
+	unsigned long length)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1923: FILE: drivers/char/isicom.c:1301:
+static int isicom_set_serial_info(struct isi_port *port,
+	struct serial_struct __user *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1974: FILE: drivers/char/isicom.c:1334:
+static int isicom_get_serial_info(struct isi_port *port,
+	struct serial_struct __user *info)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1995: FILE: drivers/char/isicom.c:1352:
+static int isicom_ioctl(struct tty_struct *tty, struct file *filp,
                                                              ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1996: FILE: drivers/char/isicom.c:1353:
+static int isicom_ioctl(struct tty_struct *tty, struct file *filp,
+	unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2053: FILE: drivers/char/isicom.c:1406:
+static void isicom_set_termios(struct tty_struct *tty,
+	struct termios *old_termios)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2214: FILE: drivers/char/isicom.c:1527:
+static int __devinit isicom_register_ioregion(struct isi_board *board,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2215: FILE: drivers/char/isicom.c:1528:
+static int __devinit isicom_register_ioregion(struct isi_board *board,
+	const unsigned int index)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2230: FILE: drivers/char/isicom.c:1534:
+		printk(KERN_DEBUG "ISICOM: I/O Region 0x%x-0x%x is busy. "

WARNING:SPLIT_STRING: quoted string split across lines
#2231: FILE: drivers/char/isicom.c:1535:
+		printk(KERN_DEBUG "ISICOM: I/O Region 0x%x-0x%x is busy. "
+			"Card%d will be disabled.\n", board->base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2242: FILE: drivers/char/isicom.c:1544:
+static void isicom_unregister_ioregion(struct isi_board *board,
+	const unsigned int index)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2258: FILE: drivers/char/isicom.c:1552:
+	pr_deb(KERN_DEBUG "ISICOM: I/O Region 0x%x-0x%x released for Card%d.\n",
+		board->base, board->base + 15, index + 1);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2298: FILE: drivers/char/isicom.c:1575:
+static int __devinit isicom_register_tty_driver(void)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2321: FILE: drivers/char/isicom.c:1585:
+^Iisicom_normal->name ^I^I^I= "ttyM";$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2322: FILE: drivers/char/isicom.c:1586:
+^Iisicom_normal->devfs_name^I ^I= "isicom/";$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2337: FILE: drivers/char/isicom.c:1597:
+	if ((error = tty_register_driver(isicom_normal))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2338: FILE: drivers/char/isicom.c:1598:
+		printk(KERN_DEBUG "ISICOM: Couldn't register the dialin "

WARNING:SPLIT_STRING: quoted string split across lines
#2339: FILE: drivers/char/isicom.c:1599:
+		printk(KERN_DEBUG "ISICOM: Couldn't register the dialin "
+			"driver, error=%d\n", error);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2356: FILE: drivers/char/isicom.c:1610:
+	if ((error = tty_unregister_driver(isicom_normal)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2357: FILE: drivers/char/isicom.c:1611:
+		printk(KERN_DEBUG "ISICOM: couldn't unregister normal driver, "

WARNING:SPLIT_STRING: quoted string split across lines
#2358: FILE: drivers/char/isicom.c:1612:
+		printk(KERN_DEBUG "ISICOM: couldn't unregister normal driver, "
+			"error=%d.\n", error);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2364: FILE: drivers/char/isicom.c:1617:
+static int __devinit isicom_register_isr(struct isi_board *board,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2365: FILE: drivers/char/isicom.c:1618:
+static int __devinit isicom_register_isr(struct isi_board *board,
+	const unsigned int index)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2400: FILE: drivers/char/isicom.c:1630:
+	retval = request_irq(board->irq, isicom_interrupt, irqflags,
+		ISICOM_NAME, board);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2402: FILE: drivers/char/isicom.c:1632:
+		printk(KERN_WARNING "ISICOM: Could not install handler at Irq "

WARNING:SPLIT_STRING: quoted string split across lines
#2403: FILE: drivers/char/isicom.c:1633:
+		printk(KERN_WARNING "ISICOM: Could not install handler at Irq "
+			"%d. Card%d will be disabled.\n", board->irq,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2424: FILE: drivers/char/isicom.c:1647:
+static inline int __devinit WaitTillCardIsFree(u16 base)

CHECK:CAMELCASE: Avoid CamelCase: <WaitTillCardIsFree>
#2424: FILE: drivers/char/isicom.c:1647:
+static inline int __devinit WaitTillCardIsFree(u16 base)

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#2429: FILE: drivers/char/isicom.c:1652:
+		msleep(1);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2435: FILE: drivers/char/isicom.c:1657:
+static int __devinit reset_card(struct isi_board *board,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2436: FILE: drivers/char/isicom.c:1658:
+static int __devinit reset_card(struct isi_board *board,
+	const unsigned int card, unsigned int *signature)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2464: FILE: drivers/char/isicom.c:1664:
+	printk(KERN_DEBUG "ISILoad:Resetting Card%d at 0x%x\n", card + 1, base);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2479: FILE: drivers/char/isicom.c:1679:
+			pr_deb(KERN_DEBUG "base+0x2=0x%x, base+0xe=0x%x",
+				inw(base + 0x2), inw(base + 0xe));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2480: FILE: drivers/char/isicom.c:1680:
+			printk(KERN_ERR "ISILoad:ISA Card%d reset failure "

WARNING:SPLIT_STRING: quoted string split across lines
#2481: FILE: drivers/char/isicom.c:1681:
+			printk(KERN_ERR "ISILoad:ISA Card%d reset failure "
+				"(Possible bad I/O Port Address 0x%x).\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'portcount != 0'
#2488: FILE: drivers/char/isicom.c:1688:
+		if (!(inw(base + 0xe) & 0x1) || ((portcount != 0) &&
+				(portcount != 4) && (portcount != 8))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'portcount != 4'
#2488: FILE: drivers/char/isicom.c:1688:
+		if (!(inw(base + 0xe) & 0x1) || ((portcount != 0) &&
+				(portcount != 4) && (portcount != 8))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'portcount != 8'
#2488: FILE: drivers/char/isicom.c:1688:
+		if (!(inw(base + 0xe) & 0x1) || ((portcount != 0) &&
+				(portcount != 4) && (portcount != 8))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2489: FILE: drivers/char/isicom.c:1689:
+		if (!(inw(base + 0xe) & 0x1) || ((portcount != 0) &&
+				(portcount != 4) && (portcount != 8))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2491: FILE: drivers/char/isicom.c:1691:
+			pr_deb("\nbase+0x2=0x%x , base+0xe=0x%x",
+				inw(base + 0x2), inw(base + 0xe));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2492: FILE: drivers/char/isicom.c:1692:
+			printk("\nISILoad:PCI Card%d reset failure (Possible "

WARNING:SPLIT_STRING: quoted string split across lines
#2493: FILE: drivers/char/isicom.c:1693:
+			printk("\nISILoad:PCI Card%d reset failure (Possible "
+				"bad I/O Port Address 0x%x).\n", card + 1,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2518: FILE: drivers/char/isicom.c:1713:
+		printk(KERN_WARNING "ISILoad:Card%d reset failure (Possible "

WARNING:SPLIT_STRING: quoted string split across lines
#2519: FILE: drivers/char/isicom.c:1714:
+		printk(KERN_WARNING "ISILoad:Card%d reset failure (Possible "
+			"bad I/O Port Address 0x%x).\n", card + 1, base);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2523: FILE: drivers/char/isicom.c:1718:
+	printk(KERN_INFO "-Done\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2529: FILE: drivers/char/isicom.c:1724:
+static int __devinit load_firmware(struct isi_board *board,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2530: FILE: drivers/char/isicom.c:1725:
+static int __devinit load_firmware(struct isi_board *board,
+	const unsigned int index, const unsigned int signature)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2561: FILE: drivers/char/isicom.c:1756:
+		printk(KERN_ERR "Unknown signature.\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2575: FILE: drivers/char/isicom.c:1764:
+	for (frame = (struct stframe*)fw->data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2576: FILE: drivers/char/isicom.c:1765:
+			frame < (struct stframe*)(fw->data + fw->size);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2589: FILE: drivers/char/isicom.c:1778:
+		udelay(100); /* 0x2f */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2594: FILE: drivers/char/isicom.c:1783:
+		if ((status = inw(base + 0x4)) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2595: FILE: drivers/char/isicom.c:1784:
+			printk(KERN_WARNING "ISILoad:Card%d rejected load "

WARNING:SPLIT_STRING: quoted string split across lines
#2596: FILE: drivers/char/isicom.c:1785:
+			printk(KERN_WARNING "ISILoad:Card%d rejected load "
+				"header:\nAddress:0x%x \nCount:0x%x \n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2596: FILE: drivers/char/isicom.c:1785:
+				"header:\nAddress:0x%x \nCount:0x%x \n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2597: FILE: drivers/char/isicom.c:1786:
+				"Status:0x%x \n", index + 1, frame->addr,

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2605: FILE: drivers/char/isicom.c:1794:
+		udelay(50); /* 0x0f */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2610: FILE: drivers/char/isicom.c:1799:
+		if ((status = inw(base + 0x4)) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2611: FILE: drivers/char/isicom.c:1800:
+			printk(KERN_ERR "ISILoad:Card%d got out of sync.Card "

WARNING:SPLIT_STRING: quoted string split across lines
#2612: FILE: drivers/char/isicom.c:1801:
+			printk(KERN_ERR "ISILoad:Card%d got out of sync.Card "
+				"Status:0x%x\n", index + 1, status);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2653: FILE: drivers/char/isicom.c:1819:
+ * in load firmware package? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2654: FILE: drivers/char/isicom.c:1820:
+	for (frame = (struct stframe*)fw->data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2655: FILE: drivers/char/isicom.c:1821:
+			frame < (struct stframe*)(fw->data + fw->size);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2668: FILE: drivers/char/isicom.c:1834:
+		udelay(50); /* 0xf */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2673: FILE: drivers/char/isicom.c:1839:
+		if ((status = inw(base + 0x4)) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2674: FILE: drivers/char/isicom.c:1840:
+			printk(KERN_WARNING "ISILoad:Card%d rejected verify "

WARNING:SPLIT_STRING: quoted string split across lines
#2675: FILE: drivers/char/isicom.c:1841:
+			printk(KERN_WARNING "ISILoad:Card%d rejected verify "
+				"header:\nAddress:0x%x \nCount:0x%x\nStatus: "

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2675: FILE: drivers/char/isicom.c:1841:
+				"header:\nAddress:0x%x \nCount:0x%x\nStatus: "

WARNING:SPLIT_STRING: quoted string split across lines
#2676: FILE: drivers/char/isicom.c:1842:
+				"header:\nAddress:0x%x \nCount:0x%x\nStatus: "
+				"0x%x \n", index + 1, frame->addr, frame->count,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2676: FILE: drivers/char/isicom.c:1842:
+				"0x%x \n", index + 1, frame->addr, frame->count,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2689: FILE: drivers/char/isicom.c:1855:
+				printk(KERN_ERR "ISILoad:Card%d, firmware "

WARNING:SPLIT_STRING: quoted string split across lines
#2690: FILE: drivers/char/isicom.c:1856:
+				printk(KERN_ERR "ISILoad:Card%d, firmware "
+					"upload failed\n", index + 1);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2695: FILE: drivers/char/isicom.c:1861:
+		udelay(50); /* 0xf */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2700: FILE: drivers/char/isicom.c:1866:
+		if ((status = inw(base + 0x4)) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2701: FILE: drivers/char/isicom.c:1867:
+			printk(KERN_ERR "ISILoad:Card%d verify got out of "

WARNING:SPLIT_STRING: quoted string split across lines
#2702: FILE: drivers/char/isicom.c:1868:
+			printk(KERN_ERR "ISILoad:Card%d verify got out of "
+				"sync. Card Status:0x%x\n", index + 1, status);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2731: FILE: drivers/char/isicom.c:1889:
+static int __devinit isicom_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2732: FILE: drivers/char/isicom.c:1890:
+static int __devinit isicom_probe(struct pci_dev *pdev,
+	const struct pci_device_id *ent)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2745: FILE: drivers/char/isicom.c:1903:
+	printk(KERN_INFO "ISI PCI Card(Device ID 0x%x)\n", ent->device);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2787: FILE: drivers/char/isicom.c:1945:
+static void __devexit isicom_remove(struct pci_dev *pdev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2802: FILE: drivers/char/isicom.c:1960:
 static int __devinit isicom_setup(void)

ERROR:SPACING: space required before the open parenthesis '('
#2876: FILE: drivers/char/isicom.c:1968:
+	for(idx = 0; idx < BOARD_COUNT; idx++) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2884: FILE: drivers/char/isicom.c:1976:
+			port->close_delay = 50 * HZ/100;
 			                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2885: FILE: drivers/char/isicom.c:1977:
+			port->closing_wait = 3000 * HZ/100;
 			                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2908: FILE: drivers/char/isicom.c:1993:
+		if (irq[idx] == 2 || irq[idx] == 3 || irq[idx] == 4	||
+				irq[idx] == 5	|| irq[idx] == 7	||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2911: FILE: drivers/char/isicom.c:1996:
+			printk(KERN_ERR "ISICOM: ISA not supported yet.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2914: FILE: drivers/char/isicom.c:1999:
+/*			isi_card[idx].base = io[idx];
+			isi_card[idx].irq = irq[idx];

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2919: FILE: drivers/char/isicom.c:2004:
+			card++;*/

CHECK:BRACES: Unbalanced braces around else statement
#2920: FILE: drivers/char/isicom.c:2005:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2921: FILE: drivers/char/isicom.c:2006:
+			printk(KERN_ERR "ISICOM: Irq %d unsupported. "

WARNING:SPLIT_STRING: quoted string split across lines
#2922: FILE: drivers/char/isicom.c:2007:
+			printk(KERN_ERR "ISICOM: Irq %d unsupported. "
+				"Disabling Card%d...\n", irq[idx], idx + 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2939: FILE: drivers/char/isicom.c:2016:
+		printk(KERN_ERR "ISICOM: Unable to register pci driver.\n");

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#2974: FILE: drivers/char/isicom.c:2040:
+		msleep(10);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000152363.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 99 warnings, 50 checks, 2994 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000152363.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
