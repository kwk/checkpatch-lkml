WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
    I've run into a stack overflow problem during boot that is caused by the

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: drivers/pci/probe.c:500:
+       struct pci_dev *dev, *dev0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: drivers/pci/probe.c:506:
+       dev0 = kmalloc(sizeof(struct pci_dev), GFP_ATOMIC);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev0)...) over kmalloc(sizeof(struct pci_dev)...)
#64: FILE: drivers/pci/probe.c:506:
+       dev0 = kmalloc(sizeof(struct pci_dev), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: drivers/pci/probe.c:507:
+       if (dev0 == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#65: FILE: drivers/pci/probe.c:507:
+       if (dev0 == NULL)
+               BUG();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev0"
#65: FILE: drivers/pci/probe.c:507:
+       if (dev0 == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: drivers/pci/probe.c:508:
+               BUG();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: drivers/pci/probe.c:508:
+               BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#66: FILE: drivers/pci/probe.c:508:
+               BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/pci/probe.c:509:
+       memset(dev0, 0, sizeof(dev0));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: drivers/pci/probe.c:510:
+       dev0->bus = bus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: drivers/pci/probe.c:511:
+       dev0->sysdata = bus->sysdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/pci/probe.c:512:
+       dev0->dev.parent = bus->dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: drivers/pci/probe.c:513:
+       dev0->dev.bus = &pci_bus_type;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#74: FILE: drivers/pci/probe.c:516:
        for (devfn = 0; devfn < 0x100; devfn += 8) {
+               dev0->devfn = devfn;

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/pci/probe.c:517:
+               dev0->devfn = devfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/pci/probe.c:517:
+               dev0->devfn = devfn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: drivers/pci/probe.c:518:
+               pci_scan_slot(dev0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/pci/probe.c:518:
+               pci_scan_slot(dev0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: drivers/pci/probe.c:520:
+       kfree(dev0);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439730.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 16 warnings, 2 checks, 35 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439730.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
