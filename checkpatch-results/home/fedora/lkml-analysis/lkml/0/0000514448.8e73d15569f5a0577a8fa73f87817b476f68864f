WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -urN linux-2.4.10-pre3/Documentation/Configure.help linux/Documentation/Configure.help

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: Documentation/filesystems/devfs/README:1791:
+http://home.nownuri.net/~viatoris/devfs/devfs.html $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH' are not preferred. Consider using octal permissions '0066'.
#476: FILE: drivers/char/tty_io.c:2024:
+				mode |= S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/scsi/hosts.h:509:
+    unsigned int *majors;         /* Array of majors used by driver */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: drivers/scsi/hosts.h:510:
+    unsigned int num_majors;      /* Number of majors used by driver */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#546: FILE: drivers/scsi/scsi_lib.c:792:
+		int i;
+		if (!spnt->blk || !spnt->majors) continue;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#546: FILE: drivers/scsi/scsi_lib.c:792:
+		if (!spnt->blk || !spnt->majors) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#548: FILE: drivers/scsi/scsi_lib.c:794:
+			if (spnt->majors[i] == major) return spnt;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#591: FILE: drivers/scsi/sd.c:123:
+static inline int sd_devnum_to_index (int devnum)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: drivers/scsi/sd.c:125:
+    int i, major = MAJOR (devnum);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: drivers/scsi/sd.c:125:
+    int i, major = MAJOR (devnum);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/scsi/sd.c:127:
+    for (i = 0; i < sd_template.num_majors; ++i)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#595: FILE: drivers/scsi/sd.c:127:
+    for (i = 0; i < sd_template.num_majors; ++i)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: drivers/scsi/sd.c:128:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: drivers/scsi/sd.c:129:
+        if (sd_template.majors[i] != major) continue;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/scsi/sd.c:129:
+        if (sd_template.majors[i] != major) continue;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#597: FILE: drivers/scsi/sd.c:129:
+        if (sd_template.majors[i] != major) continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: drivers/scsi/sd.c:130:
+        return (i << 4) | (MINOR (devnum) >> 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: drivers/scsi/sd.c:130:
+        return (i << 4) | (MINOR (devnum) >> 4);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: drivers/scsi/sd.c:130:
+        return (i << 4) | (MINOR (devnum) >> 4);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: drivers/scsi/sd.c:131:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: drivers/scsi/sd.c:132:
+    return -ENODEV;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: drivers/scsi/sd.c:1066:
+static int sd_alloc_majors (void)

ERROR:SPACING: space prohibited after that open parenthesis '('
#616: FILE: drivers/scsi/sd.c:1072:
+	if ( ( sd_template.majors =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#616: FILE: drivers/scsi/sd.c:1072:
+	if ( ( sd_template.majors =

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#617: FILE: drivers/scsi/sd.c:1073:
+	       kmalloc (sizeof *sd_template.majors * N_USED_SD_MAJORS,

WARNING:SIZEOF_PARENTHESIS: sizeof *sd_template.majors should be sizeof(*sd_template.majors)
#617: FILE: drivers/scsi/sd.c:1073:
+	       kmalloc (sizeof *sd_template.majors * N_USED_SD_MAJORS,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#618: FILE: drivers/scsi/sd.c:1074:
+			GFP_KERNEL) ) == NULL ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#619: FILE: drivers/scsi/sd.c:1075:
+		printk ("sd.c: unable to allocate major array\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#619: FILE: drivers/scsi/sd.c:1075:
+		printk ("sd.c: unable to allocate major array\n");

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#623: FILE: drivers/scsi/sd.c:1079:
+	for (i = 1; (i < N_USED_SD_MAJORS) && (i <N_SD_PREASSIGNED_MAJORS);++i)
 	                                         ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#623: FILE: drivers/scsi/sd.c:1079:
+	for (i = 1; (i < N_USED_SD_MAJORS) && (i <N_SD_PREASSIGNED_MAJORS);++i)
 	                                                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#626: FILE: drivers/scsi/sd.c:1082:
+		if ( ( major = devfs_alloc_major (DEVFS_SPECIAL_BLK) ) < 0 ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#626: FILE: drivers/scsi/sd.c:1082:
+		if ( ( major = devfs_alloc_major (DEVFS_SPECIAL_BLK) ) < 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#626: FILE: drivers/scsi/sd.c:1082:
+		if ( ( major = devfs_alloc_major (DEVFS_SPECIAL_BLK) ) < 0 ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#626: FILE: drivers/scsi/sd.c:1082:
+		if ( ( major = devfs_alloc_major (DEVFS_SPECIAL_BLK) ) < 0 ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#627: FILE: drivers/scsi/sd.c:1083:
+			printk (KERN_WARNING __FUNCTION__ "() major[%d] allocation failed\n", i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#627: FILE: drivers/scsi/sd.c:1083:
+			printk (KERN_WARNING __FUNCTION__ "() major[%d] allocation failed\n", i);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#627: FILE: drivers/scsi/sd.c:1083:
+			printk (KERN_WARNING __FUNCTION__ "() major[%d] allocation failed\n", i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#637: FILE: drivers/scsi/sd.c:1093:
+static void sd_dealloc_majors (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#644: FILE: drivers/scsi/sd.c:1100:
+		devfs_dealloc_major (DEVFS_SPECIAL_BLK, sd_template.majors[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#656: FILE: drivers/scsi/sd.c:1118:
+		if ( in_interrupt () ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#656: FILE: drivers/scsi/sd.c:1118:
+		if ( in_interrupt () ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#656: FILE: drivers/scsi/sd.c:1118:
+		if ( in_interrupt () ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#657: FILE: drivers/scsi/sd.c:1119:
+			printk (__FUNCTION__ "(): called from interrupt\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#657: FILE: drivers/scsi/sd.c:1119:
+			printk (__FUNCTION__ "(): called from interrupt\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#657: FILE: drivers/scsi/sd.c:1119:
+			printk (__FUNCTION__ "(): called from interrupt\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#664: FILE: drivers/scsi/sd.c:1123:
+		if ( sd_alloc_majors() ) return 1;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#664: FILE: drivers/scsi/sd.c:1123:
+		if ( sd_alloc_majors() ) return 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#664: FILE: drivers/scsi/sd.c:1123:
+		if ( sd_alloc_majors() ) return 1;

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Disk>
#680: FILE: drivers/scsi/sd.c:1140:
+	rscsi_disks = vmalloc(sd_template.dev_max * sizeof(Scsi_Disk));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#759: FILE: drivers/scsi/sd.h:48:
+#define SD_PARTITION(i)		((sd_devnum_to_index((i)) << 4) | ((i)&0x0f))
                        		                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#759: FILE: drivers/scsi/sd.h:48:
+#define SD_PARTITION(i)		((sd_devnum_to_index((i)) << 4) | ((i)&0x0f))

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#793: FILE: drivers/scsi/sr.c:79:
+	majors:&sr_major,
 	      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#793: FILE: drivers/scsi/sr.c:79:
+	majors:&sr_major,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#793: FILE: drivers/scsi/sr.c:79:
+	majors:&sr_major,

CHECK:CAMELCASE: Avoid CamelCase: <Added>
#817: FILE: fs/devfs/base.c:391:
+	       Added DEVFS_FL_WAIT flag.

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: fs/devfs/base.c:533:
+               Removed unused DEVFS_FL_SHOW_UNREG flag.$

ERROR:SPACING: space prohibited after that open parenthesis '('
#888: FILE: fs/devfs/base.c:590:
+#define IS_HIDDEN(de) (( ((de)->hide && !is_devfsd_or_child(fs_info)) || !(de)->registered))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'de' - possible side-effects?
#888: FILE: fs/devfs/base.c:590:
+#define IS_HIDDEN(de) (( ((de)->hide && !is_devfsd_or_child(fs_info)) || !(de)->registered))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: fs/devfs/base.c:659:
+    atomic_t refcount;           /*  When this drops to zero, it's unused    */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: fs/devfs/base.c:660:
+    rwlock_t lock;               /*  Lock around the registered flag         */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#931: FILE: fs/devfs/base.c:661:
+    unsigned int length;         /*  Not including the NULL-termimator       */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: fs/devfs/base.c:662:
+    char *linkname;              /*  This is NULL-terminated                 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: fs/devfs/base.c:791:
+    struct devfs_entry *curr, *retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: fs/devfs/base.c:807:
+    read_lock (&curr->u.symlink.lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#978: FILE: fs/devfs/base.c:807:
+    read_lock (&curr->u.symlink.lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: fs/devfs/base.c:808:
+    if (!curr->registered)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#979: FILE: fs/devfs/base.c:808:
+    if (!curr->registered)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: fs/devfs/base.c:809:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#981: FILE: fs/devfs/base.c:810:
+	read_unlock (&curr->u.symlink.lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: fs/devfs/base.c:812:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: fs/devfs/base.c:813:
+    atomic_inc (&curr->u.symlink.refcount);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#984: FILE: fs/devfs/base.c:813:
+    atomic_inc (&curr->u.symlink.refcount);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: fs/devfs/base.c:814:
+    read_unlock (&curr->u.symlink.lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#985: FILE: fs/devfs/base.c:814:
+    read_unlock (&curr->u.symlink.lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: fs/devfs/base.c:815:
+    retval = search_for_entry (parent, curr->u.symlink.linkname,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#986: FILE: fs/devfs/base.c:815:
+    retval = search_for_entry (parent, curr->u.symlink.linkname,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: fs/devfs/base.c:818:
+    if ( atomic_dec_and_test (&curr->u.symlink.refcount) )$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#989: FILE: fs/devfs/base.c:818:
+    if ( atomic_dec_and_test (&curr->u.symlink.refcount) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#989: FILE: fs/devfs/base.c:818:
+    if ( atomic_dec_and_test (&curr->u.symlink.refcount) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#989: FILE: fs/devfs/base.c:818:
+    if ( atomic_dec_and_test (&curr->u.symlink.refcount) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&curr->u.symlink.refcount'
#989: FILE: fs/devfs/base.c:818:
+    if ( atomic_dec_and_test (&curr->u.symlink.refcount) )

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#990: FILE: fs/devfs/base.c:819:
+	kfree (curr->u.symlink.linkname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: fs/devfs/base.c:820:
+    return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: fs/devfs/base.c:826:
+    struct devfs_entry *new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: fs/devfs/base.c:827:
+    static unsigned long inode_counter = FIRST_INODE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: fs/devfs/base.c:828:
+    static spinlock_t counter_lock = SPIN_LOCK_UNLOCKED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: fs/devfs/base.c:836:
+    spin_lock (&counter_lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1027: FILE: fs/devfs/base.c:836:
+    spin_lock (&counter_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: fs/devfs/base.c:837:
+    new->inode.ino = inode_counter++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: fs/devfs/base.c:838:
+    spin_unlock (&counter_lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1029: FILE: fs/devfs/base.c:838:
+    spin_unlock (&counter_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: fs/devfs/base.c:1104:
+    de = inode->u.generic_ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: fs/devfs/base.c:1105:
+    if (!de) printk (__FUNCTION__ "(): NULL de for inode %ld\n", inode->i_ino);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1053: FILE: fs/devfs/base.c:1105:
+    if (!de) printk (__FUNCTION__ "(): NULL de for inode %ld\n", inode->i_ino);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1053: FILE: fs/devfs/base.c:1105:
+    if (!de) printk (__FUNCTION__ "(): NULL de for inode %ld\n", inode->i_ino);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1053: FILE: fs/devfs/base.c:1105:
+    if (!de) printk (__FUNCTION__ "(): NULL de for inode %ld\n", inode->i_ino);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1053: FILE: fs/devfs/base.c:1105:
+    if (!de) printk (__FUNCTION__ "(): NULL de for inode %ld\n", inode->i_ino);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: fs/devfs/base.c:1357:
+    de->u.fcb.autogen = FALSE;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1091: FILE: fs/devfs/base.c:1436:
+	write_lock (&de->u.symlink.lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1094: FILE: fs/devfs/base.c:1438:
+	write_unlock (&de->u.symlink.lock);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1095: FILE: fs/devfs/base.c:1439:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )
+	    kfree (de->u.symlink.linkname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1095: FILE: fs/devfs/base.c:1439:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1095: FILE: fs/devfs/base.c:1439:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1095: FILE: fs/devfs/base.c:1439:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&de->u.symlink.refcount'
#1095: FILE: fs/devfs/base.c:1439:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1096: FILE: fs/devfs/base.c:1440:
+	    kfree (de->u.symlink.linkname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: fs/devfs/base.c:1491:
+    char *newlink;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1117: FILE: fs/devfs/base.c:1510:
+    if ( ( newlink = kmalloc (linklength + 1, GFP_KERNEL) ) == NULL )$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1117: FILE: fs/devfs/base.c:1510:
+    if ( ( newlink = kmalloc (linklength + 1, GFP_KERNEL) ) == NULL )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1117: FILE: fs/devfs/base.c:1510:
+    if ( ( newlink = kmalloc (linklength + 1, GFP_KERNEL) ) == NULL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1117: FILE: fs/devfs/base.c:1510:
+    if ( ( newlink = kmalloc (linklength + 1, GFP_KERNEL) ) == NULL )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1117: FILE: fs/devfs/base.c:1510:
+    if ( ( newlink = kmalloc (linklength + 1, GFP_KERNEL) ) == NULL )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1119: FILE: fs/devfs/base.c:1512:
+    memcpy (newlink, link, linklength);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1119: FILE: fs/devfs/base.c:1512:
+    memcpy (newlink, link, linklength);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: fs/devfs/base.c:1513:
+    newlink[linklength] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1121: FILE: fs/devfs/base.c:1514:
+    if ( ( de = search_for_entry (dir, name, strlen (name), TRUE, TRUE,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1121: FILE: fs/devfs/base.c:1514:
+    if ( ( de = search_for_entry (dir, name, strlen (name), TRUE, TRUE,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1121: FILE: fs/devfs/base.c:1514:
+    if ( ( de = search_for_entry (dir, name, strlen (name), TRUE, TRUE,

ERROR:SPACING: space prohibited after that open parenthesis '('
#1121: FILE: fs/devfs/base.c:1514:
+    if ( ( de = search_for_entry (dir, name, strlen (name), TRUE, TRUE,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1121: FILE: fs/devfs/base.c:1514:
+    if ( ( de = search_for_entry (dir, name, strlen (name), TRUE, TRUE,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1122: FILE: fs/devfs/base.c:1515:
+				  &is_new, FALSE) ) == NULL )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1126: FILE: fs/devfs/base.c:1517:
+	kfree (newlink);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: fs/devfs/base.c:1519:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: fs/devfs/base.c:1520:
+    if (de->registered)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1129: FILE: fs/devfs/base.c:1520:
+    if (de->registered)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: fs/devfs/base.c:1521:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1131: FILE: fs/devfs/base.c:1522:
+	kfree (newlink);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1132: FILE: fs/devfs/base.c:1523:
+	printk ("%s: devfs_do_symlink(%s): entry already exists\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1132: FILE: fs/devfs/base.c:1523:
+	printk ("%s: devfs_do_symlink(%s): entry already exists\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: fs/devfs/base.c:1530:
+    de->u.symlink.linkname = newlink;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: fs/devfs/base.c:1532:
+    atomic_set (&de->u.symlink.refcount, 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1170: FILE: fs/devfs/base.c:1532:
+    atomic_set (&de->u.symlink.refcount, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1171: FILE: fs/devfs/base.c:1533:
+    rwlock_init (&de->u.symlink.lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1171: FILE: fs/devfs/base.c:1533:
+    rwlock_init (&de->u.symlink.lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1173: FILE: fs/devfs/base.c:1535:
+    if (handle != NULL) *handle = de;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1173: FILE: fs/devfs/base.c:1535:
+    if (handle != NULL) *handle = de;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "handle"
#1173: FILE: fs/devfs/base.c:1535:
+    if (handle != NULL) *handle = de;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1226: FILE: fs/devfs/base.c:2070:
+	for (i = 0; devfs_options_tab[i].name != NULL; i++)
 	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "devfs_options_tab[i].name"
#1226: FILE: fs/devfs/base.c:2070:
+	for (i = 0; devfs_options_tab[i].name != NULL; i++)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1302: FILE: fs/devfs/base.c:2243:
+static int devfs_notify_change (struct dentry *dentry, struct iattr *iattr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: fs/devfs/base.c:2245:
+    int retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1307: FILE: fs/devfs/base.c:2247:
+    struct inode *inode = dentry->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: fs/devfs/base.c:2250:
+    de = get_devfs_entry_from_vfs_inode (inode, TRUE);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1321: FILE: fs/devfs/base.c:2250:
+    de = get_devfs_entry_from_vfs_inode (inode, TRUE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: fs/devfs/base.c:2251:
+    if (de == NULL) return -ENODEV;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1322: FILE: fs/devfs/base.c:2251:
+    if (de == NULL) return -ENODEV;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!de"
#1322: FILE: fs/devfs/base.c:2251:
+    if (de == NULL) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: fs/devfs/base.c:2252:
+    retval = inode_change_ok (inode, iattr);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1323: FILE: fs/devfs/base.c:2252:
+    retval = inode_change_ok (inode, iattr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: fs/devfs/base.c:2253:
+    if (retval != 0) return retval;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1324: FILE: fs/devfs/base.c:2253:
+    if (retval != 0) return retval;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: fs/devfs/base.c:2254:
+    inode_setattr (inode, iattr);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1325: FILE: fs/devfs/base.c:2254:
+    inode_setattr (inode, iattr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: fs/devfs/base.c:2256:
+    if (devfs_debug & DEBUG_I_CHANGE)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1331: FILE: fs/devfs/base.c:2258:
+	printk ("%s: notify_change(%d): VFS inode: %p  devfs_entry: %p\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1331: FILE: fs/devfs/base.c:2258:
+	printk ("%s: notify_change(%d): VFS inode: %p  devfs_entry: %p\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1339: FILE: fs/devfs/base.c:2266:
+    /*  Inode is not on hash chains, thus must save permissions here rather
+	than in a write_inode() method  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1339: FILE: fs/devfs/base.c:2266:
+	than in a write_inode() method  */

WARNING:INDENTED_LABEL: labels should not be indented
#1370: FILE: fs/devfs/base.c:2292:
+    put_inode:     force_delete,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1379: FILE: fs/devfs/base.c:2321:
+    if ( ( inode = new_inode (sb) ) == NULL )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1379: FILE: fs/devfs/base.c:2321:
+    if ( ( inode = new_inode (sb) ) == NULL )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1379: FILE: fs/devfs/base.c:2321:
+    if ( ( inode = new_inode (sb) ) == NULL )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1379: FILE: fs/devfs/base.c:2321:
+    if ( ( inode = new_inode (sb) ) == NULL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1379: FILE: fs/devfs/base.c:2321:
+    if ( ( inode = new_inode (sb) ) == NULL )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1379: FILE: fs/devfs/base.c:2321:
+    if ( ( inode = new_inode (sb) ) == NULL )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: fs/devfs/base.c:2322:
+    {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1381: FILE: fs/devfs/base.c:2323:
+	printk ("%s: get_vfs_inode(%s): new_inode() failed, de: %p\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1381: FILE: fs/devfs/base.c:2323:
+	printk ("%s: get_vfs_inode(%s): new_inode() failed, de: %p\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1384: FILE: fs/devfs/base.c:2326:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: fs/devfs/base.c:2328:
+    inode->u.generic_ip = de;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: fs/devfs/base.c:2329:
+    inode->i_ino = de->inode.ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: fs/devfs/base.c:2331:
+    if (devfs_debug & DEBUG_I_GET)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1390: FILE: fs/devfs/base.c:2332:
+	printk ("%s: get_vfs_inode(%d): VFS inode: %p  devfs_entry: %p\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1390: FILE: fs/devfs/base.c:2332:
+	printk ("%s: get_vfs_inode(%d): VFS inode: %p  devfs_entry: %p\n",

CHECK:SPACING: No space is necessary after a cast
#1391: FILE: fs/devfs/base.c:2333:
+		DEVFS_NAME, (int) inode->i_ino, inode, de);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1393: FILE: fs/devfs/base.c:2335:
+    inode->i_blocks = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1394: FILE: fs/devfs/base.c:2336:
+    inode->i_blksize = 1024;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: fs/devfs/base.c:2337:
+    inode->i_op = &devfs_iops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1396: FILE: fs/devfs/base.c:2338:
+    inode->i_fop = &devfs_fops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1397: FILE: fs/devfs/base.c:2339:
+    inode->i_rdev = NODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1398: FILE: fs/devfs/base.c:2340:
+    if ( S_ISCHR (de->inode.mode) )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1398: FILE: fs/devfs/base.c:2340:
+    if ( S_ISCHR (de->inode.mode) )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1398: FILE: fs/devfs/base.c:2340:
+    if ( S_ISCHR (de->inode.mode) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1398: FILE: fs/devfs/base.c:2340:
+    if ( S_ISCHR (de->inode.mode) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1398: FILE: fs/devfs/base.c:2340:
+    if ( S_ISCHR (de->inode.mode) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->inode.mode'
#1398: FILE: fs/devfs/base.c:2340:
+    if ( S_ISCHR (de->inode.mode) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1399: FILE: fs/devfs/base.c:2341:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1400: FILE: fs/devfs/base.c:2342:
+	inode->i_rdev = MKDEV (de->u.fcb.u.device.major,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1402: FILE: fs/devfs/base.c:2344:
+	inode->i_cdev = cdget (kdev_t_to_nr(inode->i_rdev));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: fs/devfs/base.c:2345:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: fs/devfs/base.c:2346:
+    else if ( S_ISBLK (de->inode.mode) )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1404: FILE: fs/devfs/base.c:2346:
+    else if ( S_ISBLK (de->inode.mode) )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1404: FILE: fs/devfs/base.c:2346:
+    else if ( S_ISBLK (de->inode.mode) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1404: FILE: fs/devfs/base.c:2346:
+    else if ( S_ISBLK (de->inode.mode) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1404: FILE: fs/devfs/base.c:2346:
+    else if ( S_ISBLK (de->inode.mode) )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1404: FILE: fs/devfs/base.c:2346:
+    }
+    else if ( S_ISBLK (de->inode.mode) )

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1405: FILE: fs/devfs/base.c:2347:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1406: FILE: fs/devfs/base.c:2348:
+	inode->i_rdev = MKDEV (de->u.fcb.u.device.major,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1408: FILE: fs/devfs/base.c:2350:
+	inode->i_bdev = bdget (kdev_t_to_nr(inode->i_rdev));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1409: FILE: fs/devfs/base.c:2351:
+	if (inode->i_bdev)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1409: FILE: fs/devfs/base.c:2351:
+	if (inode->i_bdev)
+	{

WARNING:TABSTOP: Statements should start on a tabstop
#1411: FILE: fs/devfs/base.c:2353:
+	    if (!inode->i_bdev->bd_op && de->u.fcb.ops)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1414: FILE: fs/devfs/base.c:2356:
+	else printk ("%s: get_vfs_inode(%d): no block device from bdget()\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1414: FILE: fs/devfs/base.c:2356:
+	else printk ("%s: get_vfs_inode(%d): no block device from bdget()\n",

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1414: FILE: fs/devfs/base.c:2356:
+	else printk ("%s: get_vfs_inode(%d): no block device from bdget()\n",

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1414: FILE: fs/devfs/base.c:2356:
+	}
+	else printk ("%s: get_vfs_inode(%d): no block device from bdget()\n",

CHECK:SPACING: No space is necessary after a cast
#1415: FILE: fs/devfs/base.c:2357:
+		     DEVFS_NAME, (int) inode->i_ino);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1416: FILE: fs/devfs/base.c:2358:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1417: FILE: fs/devfs/base.c:2359:
+    else if ( S_ISFIFO (de->inode.mode) ) inode->i_fop = &def_fifo_fops;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1417: FILE: fs/devfs/base.c:2359:
+    else if ( S_ISFIFO (de->inode.mode) ) inode->i_fop = &def_fifo_fops;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1417: FILE: fs/devfs/base.c:2359:
+    else if ( S_ISFIFO (de->inode.mode) ) inode->i_fop = &def_fifo_fops;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1417: FILE: fs/devfs/base.c:2359:
+    else if ( S_ISFIFO (de->inode.mode) ) inode->i_fop = &def_fifo_fops;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1417: FILE: fs/devfs/base.c:2359:
+    else if ( S_ISFIFO (de->inode.mode) ) inode->i_fop = &def_fifo_fops;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1417: FILE: fs/devfs/base.c:2359:
+    }
+    else if ( S_ISFIFO (de->inode.mode) ) inode->i_fop = &def_fifo_fops;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1418: FILE: fs/devfs/base.c:2360:
+    else if ( S_ISREG (de->inode.mode) ) inode->i_size = de->u.fcb.u.file.size;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1418: FILE: fs/devfs/base.c:2360:
+    else if ( S_ISREG (de->inode.mode) ) inode->i_size = de->u.fcb.u.file.size;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1418: FILE: fs/devfs/base.c:2360:
+    else if ( S_ISREG (de->inode.mode) ) inode->i_size = de->u.fcb.u.file.size;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1418: FILE: fs/devfs/base.c:2360:
+    else if ( S_ISREG (de->inode.mode) ) inode->i_size = de->u.fcb.u.file.size;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1418: FILE: fs/devfs/base.c:2360:
+    else if ( S_ISREG (de->inode.mode) ) inode->i_size = de->u.fcb.u.file.size;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: fs/devfs/base.c:2361:
+    else if ( S_ISDIR (de->inode.mode) )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1419: FILE: fs/devfs/base.c:2361:
+    else if ( S_ISDIR (de->inode.mode) )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1419: FILE: fs/devfs/base.c:2361:
+    else if ( S_ISDIR (de->inode.mode) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1419: FILE: fs/devfs/base.c:2361:
+    else if ( S_ISDIR (de->inode.mode) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1419: FILE: fs/devfs/base.c:2361:
+    else if ( S_ISDIR (de->inode.mode) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: fs/devfs/base.c:2362:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1422: FILE: fs/devfs/base.c:2364:
+    ^Iinode->i_fop = &devfs_dir_fops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1422: FILE: fs/devfs/base.c:2364:
+    ^Iinode->i_fop = &devfs_dir_fops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1422: FILE: fs/devfs/base.c:2364:
+    ^Iinode->i_fop = &devfs_dir_fops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1423: FILE: fs/devfs/base.c:2365:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1424: FILE: fs/devfs/base.c:2366:
+    else if ( S_ISLNK (de->inode.mode) )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1424: FILE: fs/devfs/base.c:2366:
+    else if ( S_ISLNK (de->inode.mode) )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1424: FILE: fs/devfs/base.c:2366:
+    else if ( S_ISLNK (de->inode.mode) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1424: FILE: fs/devfs/base.c:2366:
+    else if ( S_ISLNK (de->inode.mode) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1424: FILE: fs/devfs/base.c:2366:
+    else if ( S_ISLNK (de->inode.mode) )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1424: FILE: fs/devfs/base.c:2366:
+    }
+    else if ( S_ISLNK (de->inode.mode) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1425: FILE: fs/devfs/base.c:2367:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: fs/devfs/base.c:2370:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1429: FILE: fs/devfs/base.c:2371:
+    inode->i_mode = de->inode.mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1430: FILE: fs/devfs/base.c:2372:
+    inode->i_uid = de->inode.uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: fs/devfs/base.c:2373:
+    inode->i_gid = de->inode.gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1432: FILE: fs/devfs/base.c:2374:
+    inode->i_atime = de->inode.atime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1433: FILE: fs/devfs/base.c:2375:
+    inode->i_mtime = de->inode.mtime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1434: FILE: fs/devfs/base.c:2376:
+    inode->i_ctime = de->inode.ctime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: fs/devfs/base.c:2378:
+    if (devfs_debug & DEBUG_I_GET)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1437: FILE: fs/devfs/base.c:2379:
+	printk ("%s:   mode: 0%o  uid: %d  gid: %d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1437: FILE: fs/devfs/base.c:2379:
+	printk ("%s:   mode: 0%o  uid: %d  gid: %d\n",

CHECK:SPACING: No space is necessary after a cast
#1438: FILE: fs/devfs/base.c:2380:
+		DEVFS_NAME, (int) inode->i_mode,

CHECK:SPACING: No space is necessary after a cast
#1439: FILE: fs/devfs/base.c:2381:
+		(int) inode->i_uid, (int) inode->i_gid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: fs/devfs/base.c:2699:
+    if (devfs_debug & DEBUG_I_LOOKUP)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1458: FILE: fs/devfs/base.c:2700:
+	printk ("%s: lookup(%s): dentry: %p parent: %p by: \"%s\"\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1458: FILE: fs/devfs/base.c:2700:
+	printk ("%s: lookup(%s): dentry: %p parent: %p by: \"%s\"\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: fs/devfs/base.c:2793:
+    struct inode *inode = dentry->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1477: FILE: fs/devfs/base.c:2809:
+    devfsd_notify_one (de, DEVFSD_NOTIFY_DELETE, inode->i_mode,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1477: FILE: fs/devfs/base.c:2809:
+    devfsd_notify_one (de, DEVFSD_NOTIFY_DELETE, inode->i_mode,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1479: FILE: fs/devfs/base.c:2811:
+    if ( S_ISLNK (de->mode) )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1479: FILE: fs/devfs/base.c:2811:
+    if ( S_ISLNK (de->mode) )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1479: FILE: fs/devfs/base.c:2811:
+    if ( S_ISLNK (de->mode) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1479: FILE: fs/devfs/base.c:2811:
+    if ( S_ISLNK (de->mode) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1479: FILE: fs/devfs/base.c:2811:
+    if ( S_ISLNK (de->mode) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'de->mode'
#1479: FILE: fs/devfs/base.c:2811:
+    if ( S_ISLNK (de->mode) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1480: FILE: fs/devfs/base.c:2812:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1481: FILE: fs/devfs/base.c:2813:
+	write_lock (&de->u.symlink.lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1483: FILE: fs/devfs/base.c:2815:
+	write_unlock (&de->u.symlink.lock);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1484: FILE: fs/devfs/base.c:2816:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )
+	    kfree (de->u.symlink.linkname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1484: FILE: fs/devfs/base.c:2816:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1484: FILE: fs/devfs/base.c:2816:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1484: FILE: fs/devfs/base.c:2816:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&de->u.symlink.refcount'
#1484: FILE: fs/devfs/base.c:2816:
+	if ( atomic_dec_and_test (&de->u.symlink.refcount) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1485: FILE: fs/devfs/base.c:2817:
+	    kfree (de->u.symlink.linkname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1486: FILE: fs/devfs/base.c:2818:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: fs/devfs/base.c:2819:
+    else de->registered = FALSE;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1487: FILE: fs/devfs/base.c:2819:
+    else de->registered = FALSE;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1487: FILE: fs/devfs/base.c:2819:
+    }
+    else de->registered = FALSE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1497: FILE: fs/devfs/base.c:2934:
+    devfsd_notify_one (de, DEVFSD_NOTIFY_DELETE, inode->i_mode,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1497: FILE: fs/devfs/base.c:2934:
+    devfsd_notify_one (de, DEVFSD_NOTIFY_DELETE, inode->i_mode,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1507: FILE: fs/devfs/base.c:2971:
+    if (de->registered)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1528: FILE: fs/devfs/base.c:2973:
+	printk ("%s: mknod(): existing entry\n", DEVFS_NAME);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1528: FILE: fs/devfs/base.c:2973:
+	printk ("%s: mknod(): existing entry\n", DEVFS_NAME);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1530: FILE: fs/devfs/base.c:2975:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1531: FILE: fs/devfs/base.c:2976:
+    de->info = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1532: FILE: fs/devfs/base.c:2977:
+    de->mode = mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1533: FILE: fs/devfs/base.c:2978:
+    if ( S_ISBLK (mode) || S_ISCHR (mode) )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1533: FILE: fs/devfs/base.c:2978:
+    if ( S_ISBLK (mode) || S_ISCHR (mode) )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1533: FILE: fs/devfs/base.c:2978:
+    if ( S_ISBLK (mode) || S_ISCHR (mode) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1533: FILE: fs/devfs/base.c:2978:
+    if ( S_ISBLK (mode) || S_ISCHR (mode) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1533: FILE: fs/devfs/base.c:2978:
+    if ( S_ISBLK (mode) || S_ISCHR (mode) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1533: FILE: fs/devfs/base.c:2978:
+    if ( S_ISBLK (mode) || S_ISCHR (mode) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1534: FILE: fs/devfs/base.c:2979:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1535: FILE: fs/devfs/base.c:2980:
+	de->u.fcb.u.device.major = MAJOR (rdev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1536: FILE: fs/devfs/base.c:2981:
+	de->u.fcb.u.device.minor = MINOR (rdev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1543: FILE: fs/devfs/base.c:2988:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1544: FILE: fs/devfs/base.c:2989:
+    else if ( S_ISFIFO (mode) )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1544: FILE: fs/devfs/base.c:2989:
+    else if ( S_ISFIFO (mode) )
+    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1544: FILE: fs/devfs/base.c:2989:
+    else if ( S_ISFIFO (mode) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1544: FILE: fs/devfs/base.c:2989:
+    else if ( S_ISFIFO (mode) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1544: FILE: fs/devfs/base.c:2989:
+    else if ( S_ISFIFO (mode) )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1544: FILE: fs/devfs/base.c:2989:
+    }
+    else if ( S_ISFIFO (mode) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1545: FILE: fs/devfs/base.c:2990:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1562: FILE: fs/devfs/base.c:3021:
+    if (!de) return -ENODEV;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1562: FILE: fs/devfs/base.c:3021:
+    if (!de) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: fs/devfs/base.c:3022:
+    read_lock (&de->u.symlink.lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1563: FILE: fs/devfs/base.c:3022:
+    read_lock (&de->u.symlink.lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1564: FILE: fs/devfs/base.c:3023:
+    if (!de->registered)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1564: FILE: fs/devfs/base.c:3023:
+    if (!de->registered)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1565: FILE: fs/devfs/base.c:3024:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1566: FILE: fs/devfs/base.c:3025:
+	read_unlock (&de->u.symlink.lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1568: FILE: fs/devfs/base.c:3027:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1569: FILE: fs/devfs/base.c:3028:
+    atomic_inc (&de->u.symlink.refcount);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1569: FILE: fs/devfs/base.c:3028:
+    atomic_inc (&de->u.symlink.refcount);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: fs/devfs/base.c:3029:
+    read_unlock (&de->u.symlink.lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1570: FILE: fs/devfs/base.c:3029:
+    read_unlock (&de->u.symlink.lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1571: FILE: fs/devfs/base.c:3030:
+    err = vfs_readlink (dentry, buffer, buflen, de->u.symlink.linkname);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1571: FILE: fs/devfs/base.c:3030:
+    err = vfs_readlink (dentry, buffer, buflen, de->u.symlink.linkname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1572: FILE: fs/devfs/base.c:3031:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1572: FILE: fs/devfs/base.c:3031:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1572: FILE: fs/devfs/base.c:3031:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1572: FILE: fs/devfs/base.c:3031:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&de->u.symlink.refcount'
#1572: FILE: fs/devfs/base.c:3031:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1573: FILE: fs/devfs/base.c:3032:
+	kfree (de->u.symlink.linkname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: fs/devfs/base.c:3042:
+    if (!de) return -ENODEV;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1585: FILE: fs/devfs/base.c:3042:
+    if (!de) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: fs/devfs/base.c:3043:
+    read_lock (&de->u.symlink.lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1586: FILE: fs/devfs/base.c:3043:
+    read_lock (&de->u.symlink.lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1587: FILE: fs/devfs/base.c:3044:
+    if (!de->registered)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1587: FILE: fs/devfs/base.c:3044:
+    if (!de->registered)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: fs/devfs/base.c:3045:
+    {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1589: FILE: fs/devfs/base.c:3046:
+	read_unlock (&de->u.symlink.lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: fs/devfs/base.c:3048:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1592: FILE: fs/devfs/base.c:3049:
+    atomic_inc (&de->u.symlink.refcount);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1592: FILE: fs/devfs/base.c:3049:
+    atomic_inc (&de->u.symlink.refcount);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: fs/devfs/base.c:3050:
+    read_unlock (&de->u.symlink.lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1593: FILE: fs/devfs/base.c:3050:
+    read_unlock (&de->u.symlink.lock);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1594: FILE: fs/devfs/base.c:3051:
+    err = vfs_follow_link (nd, de->u.symlink.linkname);
                            ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1594: FILE: fs/devfs/base.c:3051:
+    err = vfs_follow_link (nd, de->u.symlink.linkname);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1594: FILE: fs/devfs/base.c:3051:
+    err = vfs_follow_link (nd, de->u.symlink.linkname);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1595: FILE: fs/devfs/base.c:3052:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1595: FILE: fs/devfs/base.c:3052:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1595: FILE: fs/devfs/base.c:3052:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1595: FILE: fs/devfs/base.c:3052:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&de->u.symlink.refcount'
#1595: FILE: fs/devfs/base.c:3052:
+    if ( atomic_dec_and_test (&de->u.symlink.refcount) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1596: FILE: fs/devfs/base.c:3053:
+	kfree (de->u.symlink.linkname);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1608: FILE: fs/devfs/util.c:43:
+               Documentation typo fix.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1610: FILE: fs/devfs/util.c:45:
+               Made <block_semaphore> and <char_semaphore> private.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1612: FILE: fs/devfs/util.c:47:
+               Fixed bug in <devfs_alloc_unique_number>: limited to 128 numbers$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1614: FILE: fs/devfs/util.c:49:
+               Updated major masks up to Linus' "no new majors" proclamation.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1634: FILE: fs/devfs/util.c:200:
+     0xfffffffe,  /*  Majors 64  to 95   */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1635: FILE: fs/devfs/util.c:201:
+     0xff03ffef,  /*  Majors 96  to 127  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1655: FILE: fs/devfs/util.c:220:
+     0x3f0fffff,  /*  Majors 192 to 223  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1656: FILE: fs/devfs/util.c:221:
+     0xffff007f}  /*  Majors 224 to 255  */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1681: FILE: fs/devfs/util.c:286:
+static DECLARE_MUTEX (block_semaphore);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1685: FILE: fs/devfs/util.c:289:
+static DECLARE_MUTEX (char_semaphore);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1709: FILE: fs/devfs/util.c:450:
+    --space->num_free;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000514448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 95 errors, 240 warnings, 19 checks, 1580 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000514448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
