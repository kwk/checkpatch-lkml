WARNING:TYPO_SPELLING: 'seperated' may be misspelled - perhaps 'separated'?
#21: 
Just seperated this out quickly for anyone with I2O afflictions who wants
     ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#35: FILE: drivers/pci/quirks.c:448:
+	if((pcic&6)!=6)
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#35: FILE: drivers/pci/quirks.c:448:
+	if((pcic&6)!=6)
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#35: FILE: drivers/pci/quirks.c:448:
+	if((pcic&6)!=6)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#41: FILE: drivers/pci/quirks.c:451:
+		printk(KERN_WARNING "BIOS failed to enable PCI standards compliance, fixing this error.\n");

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#44: FILE: drivers/pci/quirks.c:454:
+		pcic |= (1<<23);	/* Required in this mode */
 		          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#106: FILE: drivers/message/i2o/i2o_block.c:868:
+				printk(KERN_INFO "%s: Received event 0x%X we didn't register for\n"

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#126: FILE: drivers/message/i2o/i2o_block.c:1474:
+	i2ob_queues[unit] = (struct i2ob_iop_queue*) kmalloc(sizeof(struct i2ob_iop_queue), GFP_ATOMIC);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#126: FILE: drivers/message/i2o/i2o_block.c:1474:
+	i2ob_queues[unit] = (struct i2ob_iop_queue*) kmalloc(sizeof(struct i2ob_iop_queue), GFP_ATOMIC);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#126: FILE: drivers/message/i2o/i2o_block.c:1474:
+	i2ob_queues[unit] = (struct i2ob_iop_queue*) kmalloc(sizeof(struct i2ob_iop_queue), GFP_ATOMIC);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#126: FILE: drivers/message/i2o/i2o_block.c:1474:
+	i2ob_queues[unit] = (struct i2ob_iop_queue*) kmalloc(sizeof(struct i2ob_iop_queue), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*i2ob_queues[unit])...) over kmalloc(sizeof(struct i2ob_iop_queue)...)
#126: FILE: drivers/message/i2o/i2o_block.c:1474:
+	i2ob_queues[unit] = (struct i2ob_iop_queue*) kmalloc(sizeof(struct i2ob_iop_queue), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#131: FILE: drivers/message/i2o/i2o_block.c:1477:
+		printk(KERN_WARNING "Could not allocate request queue for I2O block device!\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#139: FILE: drivers/message/i2o/i2o_block.c:1483:
+		i2ob_queues[unit]->request_queue[i].next =  &i2ob_queues[unit]->request_queue[i+1];
 		                                                                               ^

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#178: FILE: drivers/message/i2o/i2o_block.c:1533:
+		 * from that end. This assures that within an I2O controller atleast
 		                                                             ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/message/i2o/i2o_block.c:1535:
+^I^I * mapping to same major/minor (and hence device file name) after $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: drivers/message/i2o/i2o_block.c:1537:
+^I^I * The exception being: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/message/i2o/i2o_block.c:1539:
+^I^I * 2. There was more than one I2O controller. $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#192: FILE: drivers/message/i2o/i2o_block.c:1542:
+		if(!bios)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#192: FILE: drivers/message/i2o/i2o_block.c:1542:
+		if(!bios)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#194: FILE: drivers/message/i2o/i2o_block.c:1544:
+			for (d=c->devices;d!=NULL;d=d->next)
+			if(d->next == NULL)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#194: FILE: drivers/message/i2o/i2o_block.c:1544:
+			for (d=c->devices;d!=NULL;d=d->next)
 			      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#194: FILE: drivers/message/i2o/i2o_block.c:1544:
+			for (d=c->devices;d!=NULL;d=d->next)
 			                 ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#194: FILE: drivers/message/i2o/i2o_block.c:1544:
+			for (d=c->devices;d!=NULL;d=d->next)
 			                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#194: FILE: drivers/message/i2o/i2o_block.c:1544:
+			for (d=c->devices;d!=NULL;d=d->next)
 			                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#194: FILE: drivers/message/i2o/i2o_block.c:1544:
+			for (d=c->devices;d!=NULL;d=d->next)
 			                           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "d"
#194: FILE: drivers/message/i2o/i2o_block.c:1544:
+			for (d=c->devices;d!=NULL;d=d->next)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#195: FILE: drivers/message/i2o/i2o_block.c:1545:
+			if(d->next == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d->next"
#195: FILE: drivers/message/i2o/i2o_block.c:1545:
+			if(d->next == NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#202: FILE: drivers/message/i2o/i2o_block.c:1551:
+		while(b != NULL)
+		{

ERROR:SPACING: space required before the open parenthesis '('
#202: FILE: drivers/message/i2o/i2o_block.c:1551:
+		while(b != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "b"
#202: FILE: drivers/message/i2o/i2o_block.c:1551:
+		while(b != NULL)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#204: FILE: drivers/message/i2o/i2o_block.c:1553:
+			d=b;
 			 ^

ERROR:SPACING: space required before the open parenthesis '('
#205: FILE: drivers/message/i2o/i2o_block.c:1554:
+			if(bios)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#242: FILE: drivers/message/i2o/i2o_core.c:2609:
 	else
+	{

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477778.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 8 warnings, 8 checks, 250 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477778.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
