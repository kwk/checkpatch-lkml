ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: arch/i386/Kconfig:980:
+^Ibool "PCI_EXPRESS (EXPERIMENTAL)" $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'acces' may be misspelled - perhaps 'access'?
#83: FILE: arch/i386/Kconfig:985:
+	  to acces the extended configuration space.
 	     ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#85: FILE: arch/i386/Kconfig:986:
attempt

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: No space is necessary after a cast
#113: FILE: arch/i386/kernel/acpi/boot.c:106:
+	mcfg = (struct acpi_table_mcfg *) __acpi_map_table

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#116: FILE: arch/i386/kernel/acpi/boot.c:109:
+		printk(KERN_WARNING PREFIX "Unable to map MCFG\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#121: FILE: arch/i386/kernel/acpi/boot.c:114:
+	printk(KERN_INFO PREFIX "Local  mcfg address %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: arch/i386/kernel/acpi/boot.c:115:
+	printk(KERN_INFO PREFIX "Local  mcfg address %p\n",
+			mcfg->base_address);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#136: FILE: arch/i386/kernel/acpi/boot.c:537:
+		printk(KERN_WARNING PREFIX "MCFG not present\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#139: FILE: arch/i386/kernel/acpi/boot.c:540:
+	}
+	else if (result < 0) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#140: FILE: arch/i386/kernel/acpi/boot.c:541:
+		printk(KERN_ERR PREFIX "Error parsing MCFG\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#143: FILE: arch/i386/kernel/acpi/boot.c:544:
+	}
+	else if (result > 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#144: FILE: arch/i386/kernel/acpi/boot.c:545:
+		printk(KERN_WARNING PREFIX \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#144: FILE: arch/i386/kernel/acpi/boot.c:545:
+		printk(KERN_WARNING PREFIX \

WARNING:TYPO_SPELLING: 'Incidently' may be misspelled - perhaps 'Incidentally'?
#193: FILE: arch/i386/pci/direct.c:171:
+ *We map full Page size on each request. Incidently that's the size we
                                          ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: arch/i386/pci/direct.c:175:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: arch/i386/pci/direct.c:177:
+ *the os would have scanned for mcfg table and set this variable to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/i386/pci/direct.c:178:
+ *appropriate value. If PCI Express not supported the variable will $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: arch/i386/pci/direct.c:186:
+char * mmcfg_virt_addr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: arch/i386/pci/direct.c:189:
+static int pci_express_conf_read(int seg, int bus,
+		int devfn, int reg, int len, u32 *value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: arch/i386/pci/direct.c:191:
+^Iif (!value || ((u32)bus > 255) || ((u32)devfn > 255) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#214: FILE: arch/i386/pci/direct.c:192:
+	if (!value || ((u32)bus > 255) || ((u32)devfn > 255) 
+		|| ((u32)reg > 4095)){

ERROR:SPACING: space required before the open brace '{'
#214: FILE: arch/i386/pci/direct.c:192:
+		|| ((u32)reg > 4095)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#215: FILE: arch/i386/pci/direct.c:193:
+		printk(KERN_ERR "pci_express_conf_read: \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#215: FILE: arch/i386/pci/direct.c:193:
+		printk(KERN_ERR "pci_express_conf_read: \

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: arch/i386/pci/direct.c:195:
+  ^I^Ireturn -EINVAL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: arch/i386/pci/direct.c:195:
+  ^I^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/i386/pci/direct.c:195:
+  ^I^Ireturn -EINVAL;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#221: FILE: arch/i386/pci/direct.c:199:
+	if (reg & (len-1)){
 	              ^

ERROR:SPACING: space required before the open brace '{'
#221: FILE: arch/i386/pci/direct.c:199:
+	if (reg & (len-1)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#222: FILE: arch/i386/pci/direct.c:200:
+		printk(KERN_ERR "pci_express_conf_read: \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#222: FILE: arch/i386/pci/direct.c:200:
+		printk(KERN_ERR "pci_express_conf_read: \

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: arch/i386/pci/direct.c:202:
+  ^I^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#224: FILE: arch/i386/pci/direct.c:202:
+  ^I^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/i386/pci/direct.c:202:
+  ^I^Ireturn -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: arch/i386/pci/direct.c:208:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/i386/pci/direct.c:208:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: arch/i386/pci/direct.c:209:
+static int pci_express_conf_write(int seg, int bus, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: arch/i386/pci/direct.c:210:
+static int pci_express_conf_write(int seg, int bus, 
+			int devfn, int reg, int len, u32 value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: arch/i386/pci/direct.c:212:
+^Iif (((u32)bus > 255) || ((u32)devfn > 255) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#235: FILE: arch/i386/pci/direct.c:213:
+	if (((u32)bus > 255) || ((u32)devfn > 255) 
+		|| ((u32)reg > 4095)){

ERROR:SPACING: space required before the open brace '{'
#235: FILE: arch/i386/pci/direct.c:213:
+		|| ((u32)reg > 4095)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#236: FILE: arch/i386/pci/direct.c:214:
+		printk(KERN_ERR "pci_express_conf_write: \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#236: FILE: arch/i386/pci/direct.c:214:
+		printk(KERN_ERR "pci_express_conf_write: \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#242: FILE: arch/i386/pci/direct.c:220:
+	if (reg & (len-1)){
 	              ^

ERROR:SPACING: space required before the open brace '{'
#242: FILE: arch/i386/pci/direct.c:220:
+	if (reg & (len-1)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#243: FILE: arch/i386/pci/direct.c:221:
+		printk(KERN_ERR "pci_express_conf_write: \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#243: FILE: arch/i386/pci/direct.c:221:
+		printk(KERN_ERR "pci_express_conf_write: \

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: arch/i386/pci/direct.c:223:
+  ^I^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: arch/i386/pci/direct.c:223:
+  ^I^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: arch/i386/pci/direct.c:223:
+  ^I^Ireturn -EINVAL;$

WARNING:CONST_STRUCT: struct pci_raw_ops should normally be const
#251: FILE: arch/i386/pci/direct.c:229:
+static struct pci_raw_ops pci_express_conf = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: arch/i386/pci/direct.c:312:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: arch/i386/pci/direct.c:317:
+ ^I *Check if platform we are running is pci express capable$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: arch/i386/pci/direct.c:317:
+ ^I *Check if platform we are running is pci express capable$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: arch/i386/pci/direct.c:318:
+  ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: arch/i386/pci/direct.c:318:
+  ^I */$

ERROR:SPACING: space required before the open brace '{'
#274: FILE: arch/i386/pci/direct.c:319:
+	if (mmcfg_base_address == 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: arch/i386/pci/direct.c:320:
+^I^Iprintk(KERN_INFO $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#275: FILE: arch/i386/pci/direct.c:320:
+		printk(KERN_INFO 

CHECK:SPACING: No space is necessary after a cast
#285: FILE: arch/i386/pci/direct.c:328:
+	mmcfg_virt_addr = (char *) (fix_to_virt(FIX_PCIE_MCFG));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#288: FILE: arch/i386/pci/direct.c:331:
+		printk(KERN_INFO "PCI:Using config type PCIExp\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: arch/i386/pci/pci.h:21:
+#define PCI_PROBE_ENHANCED ^I0x0$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#372: FILE: drivers/pci/proc.c:24:
+static int pci_cfg_space_size (struct pci_dev *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: drivers/pci/proc.c:28:
+^Iint is_pci_express_dev = $

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#380: FILE: drivers/pci/proc.c:32:
+		return PCI_CFG_SPACE_EXP_SIZE;
+	else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#380: FILE: drivers/pci/proc.c:32:
+	else
[...]
+	return PCI_CFG_SPACE_SIZE; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: drivers/pci/proc.c:34:
+^Ireturn PCI_CFG_SPACE_SIZE; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: drivers/pci/proc.c:79:
+ ^I^Isize = pci_cfg_space_size (dev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#414: FILE: drivers/pci/proc.c:79:
+ ^I^Isize = pci_cfg_space_size (dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/pci/proc.c:79:
+ ^I^Isize = pci_cfg_space_size (dev);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: drivers/pci/proc.c:79:
+ 		size = pci_cfg_space_size (dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#424: FILE: drivers/pci/proc.c:155:
+	int size;
+	size = pci_cfg_space_size(dev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#492: FILE: include/asm-i386/pci.h:108:
+extern char * mmcfg_virt_addr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#494: FILE: include/asm-i386/pci.h:110:
+static __inline__ void pci_exp_set_dev_base (int bus, int devfn)

WARNING:INLINE: plain inline is preferred over __inline__
#494: FILE: include/asm-i386/pci.h:110:
+static __inline__ void pci_exp_set_dev_base (int bus, int devfn)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: include/asm-i386/pci.h:112:
+^Iu32 dev_base = $

ERROR:SPACING: space required before the open brace '{'
#498: FILE: include/asm-i386/pci.h:114:
+	if (dev_base != pcie_last_accessed_device){

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#500: FILE: include/asm-i386/pci.h:116:
+		set_fixmap (FIX_PCIE_MCFG, dev_base);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: include/asm-i386/pci.h:120:
+static __inline__ void pci_express_read(int bus, int devfn, int reg, $

WARNING:INLINE: plain inline is preferred over __inline__
#504: FILE: include/asm-i386/pci.h:120:
+static __inline__ void pci_express_read(int bus, int devfn, int reg, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: include/asm-i386/pci.h:121:
+static __inline__ void pci_express_read(int bus, int devfn, int reg, 
+		int len, u32 *value)

WARNING:LINE_SPACING: Missing a blank line after declarations
#508: FILE: include/asm-i386/pci.h:124:
+	unsigned long flags;
+	spin_lock_irqsave(&pci_config_lock, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: include/asm-i386/pci.h:126:
+ ^Iswitch (len) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#510: FILE: include/asm-i386/pci.h:126:
+ ^Iswitch (len) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: include/asm-i386/pci.h:126:
+ ^Iswitch (len) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: include/asm-i386/pci.h:127:
+        case 1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: include/asm-i386/pci.h:127:
+        case 1:$

CHECK:SPACING: No space is necessary after a cast
#512: FILE: include/asm-i386/pci.h:128:
+		*value = (u8)readb((unsigned long) mmcfg_virt_addr +

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: include/asm-i386/pci.h:130:
+        case 2:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: include/asm-i386/pci.h:130:
+        case 2:$

CHECK:SPACING: No space is necessary after a cast
#516: FILE: include/asm-i386/pci.h:131:
+		*value = (u16)readw((unsigned long) mmcfg_virt_addr +

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: include/asm-i386/pci.h:133:
+        case 4:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: include/asm-i386/pci.h:133:
+        case 4:$

CHECK:SPACING: No space is necessary after a cast
#520: FILE: include/asm-i386/pci.h:134:
+		*value = (u32)readl((unsigned long) mmcfg_virt_addr +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: include/asm-i386/pci.h:140:
+static __inline__ void pci_express_write(int bus, int devfn, int reg, $

WARNING:INLINE: plain inline is preferred over __inline__
#527: FILE: include/asm-i386/pci.h:140:
+static __inline__ void pci_express_write(int bus, int devfn, int reg, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: include/asm-i386/pci.h:141:
+static __inline__ void pci_express_write(int bus, int devfn, int reg, 
+	int len, u32 value)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#534: FILE: include/asm-i386/pci.h:147:
+	switch (len) {
+		case 1:
[...]
+		case 2:
[...]
+	        case 4:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required after that ',' (ctx:VxV)
#536: FILE: include/asm-i386/pci.h:149:
+			writeb(value,(unsigned long)mmcfg_virt_addr +
 			            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#540: FILE: include/asm-i386/pci.h:152:
+			writew(value,(unsigned long)mmcfg_virt_addr +
 			            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: include/asm-i386/pci.h:154:
+^I        case 4:$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#544: FILE: include/asm-i386/pci.h:155:
+			writel(value,(unsigned long)mmcfg_virt_addr +
 			            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: include/asm-i386/pci.h:156:
+^I                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: include/asm-i386/pci.h:157:
+     ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#547: FILE: include/asm-i386/pci.h:157:
+     ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: include/asm-i386/pci.h:157:
+     ^I}$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#549: FILE: include/asm-i386/pci.h:159:
+	readl (mmcfg_virt_addr);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#565: FILE: include/linux/acpi.h:321:
+^Istruct acpi_table_header ^Iheader;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#568: FILE: include/linux/acpi.h:324:
+} __attribute__ ((packed));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#592: FILE: include/linux/pci.h:201:
+#define  PCI_CAP_ID_EXP ^I0x10^I/* PCI-Express*/$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000309711.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 53 warnings, 14 checks, 439 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000309711.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
