WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
 drivers/scsi/libata-core.c  |  187 ++++++++++++++++++++++++++++++++------------

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#108: 
--- a/drivers/scsi/libata-core.c	2005-02-06 00:34:30 -05:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#116: FILE: drivers/scsi/libata-core.c:1705:
+	printk(KERN_WARNING "ata%u: dev %u is on DMA blacklist, disabling DMA\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/scsi/libata-core.c:1706:
+	printk(KERN_WARNING "ata%u: dev %u is on DMA blacklist, disabling DMA\n",
+		ap->id, dev->devno);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#120: FILE: drivers/scsi/libata-core.c:1709:
+static const char * ata_dma_blacklist [] = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: drivers/scsi/libata-core.c:1709:
+static const char * ata_dma_blacklist [] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#120: FILE: drivers/scsi/libata-core.c:1709:
+static const char * ata_dma_blacklist [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: drivers/scsi/libata-core.c:1721:
+ ^I"CRD-84",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#132: FILE: drivers/scsi/libata-core.c:1721:
+ ^I"CRD-84",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/scsi/libata-core.c:1721:
+ ^I"CRD-84",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/scsi/libata-core.c:3597:
+ata_pci_init_legacy_mode(struct pci_dev *pdev, struct ata_port_info **port,
+    struct ata_probe_ent **ppe2)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/scsi/libata-core.c:3597:
+    struct ata_probe_ent **ppe2)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#338: FILE: drivers/scsi/libata-core.c:3630:
+	probe_ent2->port[0].bmdma_addr = pci_resource_start(pdev, 4)+8;
 	                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#353: FILE: drivers/scsi/libata-core.c:3670:
+	if ((port[0]->host_flags & ATA_FLAG_NO_LEGACY) == 0
+	    && (pdev->class >> 8) == PCI_CLASS_STORAGE_IDE) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#448: FILE: drivers/scsi/libata-scsi.c:266:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#536: FILE: drivers/scsi/sata_nv.c:138:
+		PCI_CLASS_STORAGE_IDE<<8, 0xffff00, GENERIC },
 		                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#554: FILE: drivers/scsi/sata_nv.c:156:
+		.disable_hotplug= NULL,
 		                ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#591: FILE: drivers/scsi/sata_nv.c:299:
+		return readl((void*)ap->ioaddr.scr_addr + (sc_reg * 4));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#602: FILE: drivers/scsi/sata_nv.c:313:
+		writel(val, (void*)ap->ioaddr.scr_addr + (sc_reg * 4));

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: drivers/scsi/sata_nv.c:338:
+        // Make sure this is a SATA controller by counting the number of bars$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: drivers/scsi/sata_nv.c:339:
+        // (NVIDIA SATA controllers will always have six bars).  Otherwise,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: drivers/scsi/sata_nv.c:340:
+        // it's an IDE controller and we ignore it.$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#615: FILE: drivers/scsi/sata_nv.c:341:
+	for (bar=0; bar<6; bar++)
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#615: FILE: drivers/scsi/sata_nv.c:341:
+	for (bar=0; bar<6; bar++)
 	               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 6 warnings, 6 checks, 557 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
