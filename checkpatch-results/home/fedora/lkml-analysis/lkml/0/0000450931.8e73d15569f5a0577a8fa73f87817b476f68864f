Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
diff -urN linux-2.5.21/fs/partitions/Makefile linux-2.5.21-s390/fs/partitions/Makefile

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#42: FILE: fs/partitions/Makefile:5:
+export-objs := check.o msdos.o
                        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#61: FILE: fs/partitions/check.c:93:
+int (*genhd_dasd_ioctl)(struct inode *inp, struct file *filp,
                                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#135: FILE: fs/partitions/ibm.c:59:
+extern int (*genhd_dasd_ioctl)(struct inode *inp, struct file *filp,
                                                                ^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: fs/partitions/ibm.c:63:
+ibm_ioctl_unopened(struct block_device *bdev, unsigned cmd, unsigned long arg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: fs/partitions/ibm.c:67:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!genhd_dasd_ioctl"
#144: FILE: fs/partitions/ibm.c:68:
+	if (genhd_dasd_ioctl == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#146: FILE: fs/partitions/ibm.c:70:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#155: FILE: fs/partitions/ibm.c:79:
+#if 0

CHECK:CAMELCASE: Avoid CamelCase: <Sector>
#189: FILE: fs/partitions/ibm.c:101:
+	Sector sect;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#207: FILE: fs/partitions/ibm.c:106:
+	if ((info = kmalloc(sizeof(dasd_information_t), GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#209: FILE: fs/partitions/ibm.c:108:
+	if ((geo = kmalloc(sizeof(struct hd_geometry), GFP_KERNEL)) == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*geo)...) over kmalloc(sizeof(struct hd_geometry)...)
#209: FILE: fs/partitions/ibm.c:108:
+	if ((geo = kmalloc(sizeof(struct hd_geometry), GFP_KERNEL)) == NULL)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#211: FILE: fs/partitions/ibm.c:110:
+	if ((vlabel = kmalloc(sizeof(volume_label_t), GFP_KERNEL)) == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: fs/partitions/ibm.c:116:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#221: FILE: fs/partitions/ibm.c:117:
+	if ((blocksize = bdev_hardsect_size(bdev)) <= 0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#227: FILE: fs/partitions/ibm.c:123:
+	data = read_dev_sector(bdev, info->label_block*(blocksize/512), &sect);
 	                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#227: FILE: fs/partitions/ibm.c:123:
+	data = read_dev_sector(bdev, info->label_block*(blocksize/512), &sect);
 	                                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#228: FILE: fs/partitions/ibm.c:124:
+	if (data == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!info->FBA_layout'
#238: FILE: fs/partitions/ibm.c:128:
+	if ((!info->FBA_layout) && (!strcmp(info->type, "ECKD")))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: fs/partitions/ibm.c:132:
+	memcpy (vlabel, data, sizeof(volume_label_t));

CHECK:SPACING: No space is necessary after a cast
#263: FILE: fs/partitions/ibm.c:145:
+		int *label = (int *) data;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: fs/partitions/ibm.c:148:
+			printk("CMS1/%8s(MDSK):", name);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#274: FILE: fs/partitions/ibm.c:152:
+			size = (label[7] - 1)*(blocksize >> 9);
 			                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#276: FILE: fs/partitions/ibm.c:154:
+			printk("CMS1/%8s:", name);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#304: FILE: fs/partitions/ibm.c:160:
+				 offset*(blocksize >> 9),
 				       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#305: FILE: fs/partitions/ibm.c:161:
+				 size-offset*(blocksize >> 9));
 				     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#305: FILE: fs/partitions/ibm.c:161:
+				 size-offset*(blocksize >> 9));
 				            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#313: FILE: fs/partitions/ibm.c:169:
+		printk("VOL1/%8s:", name);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#318: FILE: fs/partitions/ibm.c:174:
+		while ((data = read_dev_sector(bdev, blk*(blocksize/512),
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#318: FILE: fs/partitions/ibm.c:174:
+		while ((data = read_dev_sector(bdev, blk*(blocksize/512),
 		                                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#327: FILE: fs/partitions/ibm.c:183:
+			if (f1.DS1FMTID == _ascebc['4']
+			    || f1.DS1FMTID == _ascebc['5']

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#328: FILE: fs/partitions/ibm.c:184:
+			    || f1.DS1FMTID == _ascebc['5']
+			    || f1.DS1FMTID == _ascebc['7']) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: fs/partitions/ibm.c:185:
+^I^I^I        blk++;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: fs/partitions/ibm.c:195:
+^I^I^Isize  = cchh2blk(&f1.DS1EXT1.ulimit, geo) - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: fs/partitions/ibm.c:199:
+^I^I^Iadd_gd_partition(hd, first_part_minor + counter, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#369: FILE: fs/partitions/ibm.c:210:
+			printk ("LNX1/%8s:", name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: fs/partitions/ibm.c:210:
+			printk ("LNX1/%8s:", name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#371: FILE: fs/partitions/ibm.c:212:
+			printk("(nonl)/%8s:", name);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#376: FILE: fs/partitions/ibm.c:217:
+				 offset*(blocksize >> 9),
 				       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#377: FILE: fs/partitions/ibm.c:218:
+				 size-offset*(blocksize >> 9));
 				     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#377: FILE: fs/partitions/ibm.c:218:
+				 size-offset*(blocksize >> 9));
 				            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#383: FILE: fs/partitions/ibm.c:221:
+	printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: fs/partitions/ibm.c:226:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450931.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 15 warnings, 19 checks, 352 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450931.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
