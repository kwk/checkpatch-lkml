WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
and for ACPI_NOTIFY_DEVICE_CHECK as no major issues were identified with this patch.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#76: FILE: drivers/acpi/Kconfig:282:
+config ACPI_CONTAINER
+	tristate "ACPI0004,PNP0A05 and PNP0A06 Container Driver (EXPERIMENTAL)"
+	depends on ACPI && EXPERIMENTAL
+	default (ACPI_HOTPLUG_MEMORY || ACPI_HOTPLUG_CPU || ACPI_HOTPLUG_IO)
+	 ---help---
+	 	This is the ACPI generic container driver which supports
+		ACPI0004, PNP0A05 and PNP0A06 devices
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: include/acpi/container.h:1:
+#ifndef __ACPI_CONTAINER_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: drivers/acpi/container.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#119: FILE: drivers/acpi/container.c:3:
+ * ($Revision: )

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#140: FILE: drivers/acpi/container.c:24:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#141: FILE: drivers/acpi/container.c:25:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: drivers/acpi/container.c:47:
+ACPI_MODULE_NAME			("acpi_container")

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#184: FILE: drivers/acpi/container.c:68:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*container)...) over kmalloc(sizeof(struct acpi_container)...)
#220: FILE: drivers/acpi/container.c:104:
+	container = kmalloc(sizeof(struct acpi_container), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: drivers/acpi/container.c:105:
+	if(!container)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/acpi/container.c:107:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#230: FILE: drivers/acpi/container.c:114:
+	ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Device <%s> bid <%s>\n",	\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: drivers/acpi/container.c:117:
+
+

CHECK:SPACING: No space is necessary after a cast
#242: FILE: drivers/acpi/container.c:126:
+	pc = (struct acpi_container*) acpi_driver_data(device);

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: drivers/acpi/container.c:126:
+	struct acpi_container	*pc = NULL;
+	pc = (struct acpi_container*) acpi_driver_data(device);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#242: FILE: drivers/acpi/container.c:126:
+	pc = (struct acpi_container*) acpi_driver_data(device);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#245: FILE: drivers/acpi/container.c:129:
+	if (pc)
+		kfree(pc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: drivers/acpi/container.c:134:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: drivers/acpi/container.c:148:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#266: FILE: drivers/acpi/container.c:150:
+	if (ACPI_FAILURE(status)) {
+		return(-ENODEV);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: drivers/acpi/container.c:159:
+	sprintf(container_str, "CONTAINER=%s",pathname);
 	                                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#306: FILE: drivers/acpi/container.c:190:
+	if (acpi_get_parent(handle, &phandle)) {
+		return_VALUE(-ENODEV);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#310: FILE: drivers/acpi/container.c:194:
+	if (acpi_bus_get_device(phandle, &pdev)) {
+		return_VALUE(-ENODEV);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#314: FILE: drivers/acpi/container.c:198:
+	if (acpi_bus_add(device, pdev, handle, ACPI_BUS_TYPE_DEVICE)) {
+		return_VALUE(-ENODEV);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: drivers/acpi/container.c:218:
+^I$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#337: FILE: drivers/acpi/container.c:221:
+		/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#339: FILE: drivers/acpi/container.c:223:
+		printk("Container driver received %s event\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/acpi/container.c:224:
+		printk("Container driver received %s event\n",
+			(type == ACPI_NOTIFY_BUS_CHECK)?

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#340: FILE: drivers/acpi/container.c:224:
+			(type == ACPI_NOTIFY_BUS_CHECK)?
 			                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#341: FILE: drivers/acpi/container.c:225:
+			"ACPI_NOTIFY_BUS_CHECK":"ACPI_NOTIFY_DEVICE_CHECK");
 			                       ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#355: FILE: drivers/acpi/container.c:239:
+		if (!acpi_bus_get_device(handle, &device) && device) {
+			container_run_sbin_hotplug(device, "remove");
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/acpi/container.c:251:
+container_walk_namespace_cb(acpi_handle handle,
+	u32 lvl,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#371: FILE: drivers/acpi/container.c:255:
+^Ichar ^I^I^I^I*hid = NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#372: FILE: drivers/acpi/container.c:256:
+^Istruct acpi_buffer ^I^Ibuffer = {ACPI_ALLOCATE_BUFFER, NULL};$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#373: FILE: drivers/acpi/container.c:257:
+^Istruct acpi_device_info ^I*info;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#374: FILE: drivers/acpi/container.c:258:
+^Iacpi_status ^I^I^Istatus;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#375: FILE: drivers/acpi/container.c:259:
+^Iint ^I^I^I^I*action = context;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#380: FILE: drivers/acpi/container.c:264:
+	if (ACPI_FAILURE(status) || !buffer.pointer) {
+		return_ACPI_STATUS(AE_OK);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#388: FILE: drivers/acpi/container.c:272:
+	if (hid == NULL) {
+		goto end;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hid"
#388: FILE: drivers/acpi/container.c:272:
+	if (hid == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: drivers/acpi/container.c:277:
+	if (strcmp(hid, "ACPI0004") && strcmp(hid, "PNP0A05") &&
+			strcmp(hid, "PNP0A06")) {

ERROR:SPACING: space required before the open parenthesis '('
#397: FILE: drivers/acpi/container.c:281:
+	switch(*action) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/acpi/container.c:284:
+		acpi_install_notify_handler(handle,
+			ACPI_SYSTEM_NOTIFY,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: drivers/acpi/container.c:290:
+		acpi_remove_notify_handler(handle,
+			ACPI_SYSTEM_NOTIFY,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#419: FILE: drivers/acpi/container.c:303:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#427: FILE: drivers/acpi/container.c:311:
+	if (result < 0) {
+		return(result);
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#428: FILE: drivers/acpi/container.c:312:
+		return(result);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/acpi/container.c:317:
+	acpi_walk_namespace(ACPI_TYPE_DEVICE,
+				     ACPI_ROOT_OBJECT,

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#438: FILE: drivers/acpi/container.c:322:
+	return(0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: drivers/acpi/container.c:333:
+	acpi_walk_namespace(ACPI_TYPE_DEVICE,
+				     ACPI_ROOT_OBJECT,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246912.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 24 warnings, 16 checks, 384 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246912.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
