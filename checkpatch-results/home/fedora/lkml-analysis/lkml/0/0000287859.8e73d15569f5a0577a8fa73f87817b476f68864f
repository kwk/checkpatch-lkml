WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
The seven implementations of this have gone out of sync and are mostly buggy.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#860: FILE: arch/s390/kernel/compat_wrapper.S:666:
+^I.globl  compat_sys_readv_wrapper $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#871: FILE: arch/s390/kernel/compat_wrapper.S:673:
+^I.globl  compat_sys_writev_wrapper $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1100: FILE: arch/sparc64/kernel/sys_sunos32.c:1218:
+	ret = check_nonblock(compat_sys_readv(fd, (void*)A(vector), count), fd);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1109: FILE: arch/sparc64/kernel/sys_sunos32.c:1234:
+	ret = check_nonblock(compat_sys_writev(fd, (void*)A(vector), count), fd);

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#1264: FILE: fs/compat.c:47:
+#include <asm/mmu_context.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1273: FILE: fs/compat.c:806:
+static ssize_t compat_do_readv_writev(int type, struct file *file,
+			       const struct compat_iovec __user *uvector,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1281: FILE: fs/compat.c:814:
+	struct iovec *iov=iovstack, *vector;
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr_segs > UIO_MAXIOV'
#1302: FILE: fs/compat.c:835:
+	if ((nr_segs > UIO_MAXIOV) || (nr_segs <= 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr_segs <= 0'
#1302: FILE: fs/compat.c:835:
+	if ((nr_segs > UIO_MAXIOV) || (nr_segs <= 0))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1308: FILE: fs/compat.c:841:
+		iov = kmalloc(nr_segs*sizeof(struct iovec), GFP_KERNEL);
 		                     ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1308: FILE: fs/compat.c:841:
+		iov = kmalloc(nr_segs*sizeof(struct iovec), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1313: FILE: fs/compat.c:846:
+	if (verify_area(VERIFY_READ, uvector, nr_segs*sizeof(*uvector)))
 	                                             ^

CHECK:SPACING: No space is necessary after a cast
#1342: FILE: fs/compat.c:875:
+		vector->iov_len = (compat_size_t) len;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1353: FILE: fs/compat.c:886:
+^Iret = locks_verify_area((type == READ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1376: FILE: fs/compat.c:909:
+		void __user * base;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1388: FILE: fs/compat.c:921:
+			if (!ret) ret = nr;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == READ'
#1398: FILE: fs/compat.c:931:
+	if ((ret + (type == READ)) > 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1400: FILE: fs/compat.c:933:
+		dnotify_parent(file->f_dentry,
+				(type == READ) ? DN_ACCESS : DN_MODIFY);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1415: FILE: fs/compat.c:948:
+^I^Igoto out; $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1459: FILE: include/linux/compat.h:122:
+asmlinkage ssize_t compat_sys_readv(unsigned long fd,
+		const struct compat_iovec __user *vec, unsigned long vlen);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1461: FILE: include/linux/compat.h:124:
+asmlinkage ssize_t compat_sys_writev(unsigned long fd,
+		const struct compat_iovec __user *vec, unsigned long vlen);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287859.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 3 warnings, 10 checks, 1331 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287859.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
