WARNING:BRACES: braces {} are not necessary for single statement blocks
#72: FILE: drivers/serial/8250.c:1877:
+		if (up->port.irq == released_irq) {
+			continue;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: drivers/serial/8250.c:2160:
+        struct uart_8250_port *up;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/serial/8250.c:2160:
+        struct uart_8250_port *up;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#96: FILE: drivers/serial/8250.c:2163:
+	if (released_irq != -1) {
+		return -EBUSY;
+	}

ERROR:SPACING: space required before the open brace '{'
#100: FILE: drivers/serial/8250.c:2167:
+	for (ttyS = 0; ttyS < UART_NR; ttyS++){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ttyS>
#101: FILE: drivers/serial/8250.c:2168:
+		up =  &serial8250_ports[ttyS];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required before the open parenthesis '('
#104: FILE: drivers/serial/8250.c:2171:
+			if(up->port.lock.magic != SPINLOCK_MAGIC)

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: drivers/serial/8250.c:2176:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: drivers/serial/8250.c:2176:
+        }$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#122: FILE: drivers/serial/Kconfig:9:
+config KGDB_8250
+	bool "KGDB: On generic serial port (8250)"
+	depends on KGDB
+	help
+	  Uses generic serial port (8250) for kgdb. This is independent of the
+	  option 9250/16550 and compatible serial port.
+
 #
 # The new 8250/16550 serial drivers

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#143: FILE: drivers/serial/kgdb_8250.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#176: FILE: drivers/serial/kgdb_8250.c:34:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#178: FILE: drivers/serial/kgdb_8250.c:36:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#181: FILE: drivers/serial/kgdb_8250.c:39:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/serial/kgdb_8250.c:48:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: drivers/serial/kgdb_8250.c:53:
+ * PC values. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#202: FILE: drivers/serial/kgdb_8250.c:60:
+};
+static void (*serial_outb)(unsigned char, unsigned long);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#205: FILE: drivers/serial/kgdb_8250.c:63:
+int serial8250_release_irq(int irq);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: drivers/serial/kgdb_8250.c:110:
+	int retchar;
+	if (atomic_read(&kgdb8250_buf_in_cnt) != 0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#252: FILE: drivers/serial/kgdb_8250.c:110:
+	if (atomic_read(&kgdb8250_buf_in_cnt) != 0)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: drivers/serial/kgdb_8250.c:125:
+} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/serial/kgdb_8250.c:132:
+    while (!(serial_inb(kgdb8250_port + UART_LSR) & UART_LSR_THRE))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 28)
#274: FILE: drivers/serial/kgdb_8250.c:132:
+    while (!(serial_inb(kgdb8250_port + UART_LSR) & UART_LSR_THRE))
+	    /* Do nothing */;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/serial/kgdb_8250.c:135:
+    serial_outb(chr, kgdb8250_port+UART_TX);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#277: FILE: drivers/serial/kgdb_8250.c:135:
+    serial_outb(chr, kgdb8250_port+UART_TX);
                                   ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#279: FILE: drivers/serial/kgdb_8250.c:137:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/serial/kgdb_8250.c:162:
+static irqreturn_t kgdb8250_interrupt(int irq, void *dev_id,
+		struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#304: FILE: drivers/serial/kgdb_8250.c:162:
+		struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#309: FILE: drivers/serial/kgdb_8250.c:167:
+	do
+	{

WARNING:SPACING: space prohibited before semicolon
#313: FILE: drivers/serial/kgdb_8250.c:171:
+		if (chr < 0) continue ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#313: FILE: drivers/serial/kgdb_8250.c:171:
+		if (chr < 0) continue ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/serial/kgdb_8250.c:174:
+^I^Iif (chr == 3)                  $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#316: FILE: drivers/serial/kgdb_8250.c:174:
+		if (chr == 3)                  
+		{

WARNING:SPACING: space prohibited before semicolon
#319: FILE: drivers/serial/kgdb_8250.c:177:
+			continue ;

ERROR:SPACING: space required before the open parenthesis '('
#322: FILE: drivers/serial/kgdb_8250.c:180:
+		if(atomic_read(&kgdb_killed_or_detached)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: drivers/serial/kgdb_8250.c:181:
+^I^I^Iif (chr == '$') $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/serial/kgdb_8250.c:184:
+^I^I^I    chr == 'H') $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: drivers/serial/kgdb_8250.c:186:
+^I^I^Ielse if (kgdb8250_interrupt_iteration == kgdb8250_got_H + 1 && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: drivers/serial/kgdb_8250.c:187:
+			else if (kgdb8250_interrupt_iteration == kgdb8250_got_H + 1 && 
+				chr == 'c') {

WARNING:MEMORY_BARRIER: memory barrier without comment
#333: FILE: drivers/serial/kgdb_8250.c:191:
+				wmb();

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#343: FILE: drivers/serial/kgdb_8250.c:201:
+		if (atomic_read(&kgdb8250_buf_in_cnt) >= GDB_BUF_SIZE)
+		{

WARNING:SPACING: space prohibited before semicolon
#346: FILE: drivers/serial/kgdb_8250.c:204:
+			kgdb8250_buf_in_inx = 0 ;

WARNING:SPACING: space prohibited before semicolon
#347: FILE: drivers/serial/kgdb_8250.c:205:
+			atomic_set(&kgdb8250_buf_in_cnt, 0) ;

WARNING:SPACING: space prohibited before semicolon
#348: FILE: drivers/serial/kgdb_8250.c:206:
+			kgdb8250_buf_out_inx = 0 ;

WARNING:SPACING: space prohibited before semicolon
#349: FILE: drivers/serial/kgdb_8250.c:207:
+			break ;

WARNING:SPACING: space prohibited before semicolon
#352: FILE: drivers/serial/kgdb_8250.c:210:
+		kgdb8250_buf[kgdb8250_buf_in_inx++] = chr ;

WARNING:SPACING: space prohibited before semicolon
#353: FILE: drivers/serial/kgdb_8250.c:211:
+		kgdb8250_buf_in_inx &= (GDB_BUF_SIZE - 1) ;

WARNING:SPACING: space prohibited before semicolon
#354: FILE: drivers/serial/kgdb_8250.c:212:
+		atomic_inc(&kgdb8250_buf_in_cnt) ;

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#356: FILE: drivers/serial/kgdb_8250.c:214:
+	}
+	while (iir & UART_IIR_RDI);

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: drivers/serial/kgdb_8250.c:217:
+^I^Ikgdb8250_interrupt_iteration ++; $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#359: FILE: drivers/serial/kgdb_8250.c:217:
+		kgdb8250_interrupt_iteration ++; 
 		                             ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#363: FILE: drivers/serial/kgdb_8250.c:221:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: drivers/serial/kgdb_8250.c:223:
+/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: drivers/serial/kgdb_8250.c:230:
+        unsigned cval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/serial/kgdb_8250.c:230:
+        unsigned cval;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#372: FILE: drivers/serial/kgdb_8250.c:230:
+        unsigned cval;

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: drivers/serial/kgdb_8250.c:231:
+        int     bits = 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/serial/kgdb_8250.c:231:
+        int     bits = 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: drivers/serial/kgdb_8250.c:232:
+        int     parity = 'n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/serial/kgdb_8250.c:232:
+        int     parity = 'n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: drivers/serial/kgdb_8250.c:233:
+        int     cflag = CREAD | HUPCL | CLOCAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/serial/kgdb_8250.c:233:
+        int     cflag = CREAD | HUPCL | CLOCAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/serial/kgdb_8250.c:234:
+        int     quot = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/serial/kgdb_8250.c:234:
+        int     quot = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: drivers/serial/kgdb_8250.c:236:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: drivers/serial/kgdb_8250.c:237:
+         *      Now construct a cflag setting.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/serial/kgdb_8250.c:238:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/serial/kgdb_8250.c:239:
+        switch(baud) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/serial/kgdb_8250.c:239:
+        switch(baud) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#381: FILE: drivers/serial/kgdb_8250.c:239:
+        switch(baud) {
+                case 1200:
[...]
+                case 2400:
[...]
+                case 4800:
[...]
+                case 19200:
[...]
+                case 38400:
[...]
+                case 57600:
[...]
+                case 115200:
[...]
+                default:
[...]
+                case 9600:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#381: FILE: drivers/serial/kgdb_8250.c:239:
+        switch(baud) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: drivers/serial/kgdb_8250.c:240:
+                case 1200:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/serial/kgdb_8250.c:240:
+                case 1200:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: drivers/serial/kgdb_8250.c:241:
+                        cflag |= B1200;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/serial/kgdb_8250.c:241:
+                        cflag |= B1200;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: drivers/serial/kgdb_8250.c:242:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/serial/kgdb_8250.c:242:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/serial/kgdb_8250.c:243:
+                case 2400:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/serial/kgdb_8250.c:243:
+                case 2400:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: drivers/serial/kgdb_8250.c:244:
+                        cflag |= B2400;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/serial/kgdb_8250.c:244:
+                        cflag |= B2400;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: drivers/serial/kgdb_8250.c:245:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/serial/kgdb_8250.c:245:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: drivers/serial/kgdb_8250.c:246:
+                case 4800:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/serial/kgdb_8250.c:246:
+                case 4800:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: drivers/serial/kgdb_8250.c:247:
+                        cflag |= B4800;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/serial/kgdb_8250.c:247:
+                        cflag |= B4800;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: drivers/serial/kgdb_8250.c:248:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/serial/kgdb_8250.c:248:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/serial/kgdb_8250.c:249:
+                case 19200:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/serial/kgdb_8250.c:249:
+                case 19200:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: drivers/serial/kgdb_8250.c:250:
+                        cflag |= B19200;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/serial/kgdb_8250.c:250:
+                        cflag |= B19200;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: drivers/serial/kgdb_8250.c:251:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/serial/kgdb_8250.c:251:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: drivers/serial/kgdb_8250.c:252:
+                case 38400:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/serial/kgdb_8250.c:252:
+                case 38400:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: drivers/serial/kgdb_8250.c:253:
+                        cflag |= B38400;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/serial/kgdb_8250.c:253:
+                        cflag |= B38400;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: drivers/serial/kgdb_8250.c:254:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/serial/kgdb_8250.c:254:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: drivers/serial/kgdb_8250.c:255:
+                case 57600:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/serial/kgdb_8250.c:255:
+                case 57600:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: drivers/serial/kgdb_8250.c:256:
+                        cflag |= B57600;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/serial/kgdb_8250.c:256:
+                        cflag |= B57600;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: drivers/serial/kgdb_8250.c:257:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/serial/kgdb_8250.c:257:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: drivers/serial/kgdb_8250.c:258:
+                case 115200:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/serial/kgdb_8250.c:258:
+                case 115200:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/serial/kgdb_8250.c:259:
+                        cflag |= B115200;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/serial/kgdb_8250.c:259:
+                        cflag |= B115200;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: drivers/serial/kgdb_8250.c:260:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/serial/kgdb_8250.c:260:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/serial/kgdb_8250.c:261:
+                default:$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#405: FILE: drivers/serial/kgdb_8250.c:263:
+			/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: drivers/serial/kgdb_8250.c:264:
+                case 9600:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/serial/kgdb_8250.c:264:
+                case 9600:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: drivers/serial/kgdb_8250.c:265:
+                        cflag |= B9600;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/serial/kgdb_8250.c:265:
+                        cflag |= B9600;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: drivers/serial/kgdb_8250.c:266:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/serial/kgdb_8250.c:266:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: drivers/serial/kgdb_8250.c:267:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/serial/kgdb_8250.c:267:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: drivers/serial/kgdb_8250.c:268:
+        switch(bits) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/serial/kgdb_8250.c:268:
+        switch(bits) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#410: FILE: drivers/serial/kgdb_8250.c:268:
+        switch(bits) {
+                case 7:
[...]
+                default:
+                case 8:

ERROR:SPACING: space required before the open parenthesis '('
#410: FILE: drivers/serial/kgdb_8250.c:268:
+        switch(bits) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: drivers/serial/kgdb_8250.c:269:
+                case 7:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/serial/kgdb_8250.c:269:
+                case 7:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/serial/kgdb_8250.c:270:
+                        cflag |= CS7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/serial/kgdb_8250.c:270:
+                        cflag |= CS7;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: drivers/serial/kgdb_8250.c:271:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/serial/kgdb_8250.c:271:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: drivers/serial/kgdb_8250.c:272:
+                default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: drivers/serial/kgdb_8250.c:273:
+                case 8:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/serial/kgdb_8250.c:273:
+                case 8:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: drivers/serial/kgdb_8250.c:274:
+                        cflag |= CS8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/serial/kgdb_8250.c:274:
+                        cflag |= CS8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: drivers/serial/kgdb_8250.c:275:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/serial/kgdb_8250.c:275:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: drivers/serial/kgdb_8250.c:276:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/serial/kgdb_8250.c:276:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: drivers/serial/kgdb_8250.c:277:
+        switch(parity) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/serial/kgdb_8250.c:277:
+        switch(parity) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#419: FILE: drivers/serial/kgdb_8250.c:277:
+        switch(parity) {
+                case 'o': case 'O':
[...]
+                case 'e': case 'E':

ERROR:SPACING: space required before the open parenthesis '('
#419: FILE: drivers/serial/kgdb_8250.c:277:
+        switch(parity) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: drivers/serial/kgdb_8250.c:278:
+                case 'o': case 'O':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/serial/kgdb_8250.c:278:
+                case 'o': case 'O':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: drivers/serial/kgdb_8250.c:279:
+                        cflag |= PARODD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/serial/kgdb_8250.c:279:
+                        cflag |= PARODD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: drivers/serial/kgdb_8250.c:280:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/serial/kgdb_8250.c:280:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: drivers/serial/kgdb_8250.c:281:
+                case 'e': case 'E':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/serial/kgdb_8250.c:281:
+                case 'e': case 'E':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: drivers/serial/kgdb_8250.c:282:
+                        cflag |= PARENB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/serial/kgdb_8250.c:282:
+                        cflag |= PARENB;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: drivers/serial/kgdb_8250.c:283:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/serial/kgdb_8250.c:283:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: drivers/serial/kgdb_8250.c:284:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/serial/kgdb_8250.c:284:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: drivers/serial/kgdb_8250.c:286:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: drivers/serial/kgdb_8250.c:287:
+         *      Divisor, bytesize and parity$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: drivers/serial/kgdb_8250.c:289:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: drivers/serial/kgdb_8250.c:291:
+        quot = (1843200/16) / baud;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/serial/kgdb_8250.c:291:
+        quot = (1843200/16) / baud;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#433: FILE: drivers/serial/kgdb_8250.c:291:
+        quot = (1843200/16) / baud;
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: drivers/serial/kgdb_8250.c:292:
+        cval = cflag & (CSIZE | CSTOPB);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/serial/kgdb_8250.c:292:
+        cval = cflag & (CSIZE | CSTOPB);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: drivers/serial/kgdb_8250.c:293:
+        cval >>= 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/serial/kgdb_8250.c:293:
+        cval >>= 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: drivers/serial/kgdb_8250.c:294:
+        if (cflag & PARENB)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/serial/kgdb_8250.c:294:
+        if (cflag & PARENB)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: drivers/serial/kgdb_8250.c:295:
+                cval |= UART_LCR_PARITY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/serial/kgdb_8250.c:295:
+                cval |= UART_LCR_PARITY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: drivers/serial/kgdb_8250.c:296:
+        if (!(cflag & PARODD))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/serial/kgdb_8250.c:296:
+        if (!(cflag & PARODD))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: drivers/serial/kgdb_8250.c:297:
+                cval |= UART_LCR_EPAR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/serial/kgdb_8250.c:297:
+                cval |= UART_LCR_EPAR;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#441: FILE: drivers/serial/kgdb_8250.c:299:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: drivers/serial/kgdb_8250.c:300:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: drivers/serial/kgdb_8250.c:301:
+         *      Disable UART interrupts, set DTR and RTS high$

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: drivers/serial/kgdb_8250.c:302:
+         *      and set speed.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: drivers/serial/kgdb_8250.c:303:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: drivers/serial/kgdb_8250.c:305:
+        serial_outb(cval | UART_LCR_DLAB, kgdb8250_port + UART_LCR);       /* set DLAB */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/serial/kgdb_8250.c:305:
+        serial_outb(cval | UART_LCR_DLAB, kgdb8250_port + UART_LCR);       /* set DLAB */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: drivers/serial/kgdb_8250.c:306:
+        serial_outb(quot & 0xff, kgdb8250_port + UART_DLL);         /* LS of divisor */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/serial/kgdb_8250.c:306:
+        serial_outb(quot & 0xff, kgdb8250_port + UART_DLL);         /* LS of divisor */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: drivers/serial/kgdb_8250.c:307:
+        serial_outb(quot >> 8, kgdb8250_port + UART_DLM);           /* MS of divisor */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/serial/kgdb_8250.c:307:
+        serial_outb(quot >> 8, kgdb8250_port + UART_DLM);           /* MS of divisor */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: drivers/serial/kgdb_8250.c:308:
+        serial_outb(cval, kgdb8250_port + UART_LCR);                /* reset DLAB */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/serial/kgdb_8250.c:308:
+        serial_outb(cval, kgdb8250_port + UART_LCR);                /* reset DLAB */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: drivers/serial/kgdb_8250.c:309:
+        serial_outb(UART_IER_RDI, kgdb8250_port + UART_IER);        /* turn on interrupts*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: drivers/serial/kgdb_8250.c:309:
+        serial_outb(UART_IER_RDI, kgdb8250_port + UART_IER);        /* turn on interrupts*/$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: drivers/serial/kgdb_8250.c:310:
+        serial_outb(UART_MCR_OUT2 | UART_MCR_DTR | UART_MCR_RTS, kgdb8250_port + UART_MCR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/serial/kgdb_8250.c:310:
+        serial_outb(UART_MCR_OUT2 | UART_MCR_DTR | UART_MCR_RTS, kgdb8250_port + UART_MCR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: drivers/serial/kgdb_8250.c:312:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: drivers/serial/kgdb_8250.c:313:
+         *      If we read 0xff from the LSR, there is no UART here.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: drivers/serial/kgdb_8250.c:314:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: drivers/serial/kgdb_8250.c:315:
+        if (serial_inb(kgdb8250_port + UART_LSR) == 0xff)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/serial/kgdb_8250.c:315:
+        if (serial_inb(kgdb8250_port + UART_LSR) == 0xff)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: drivers/serial/kgdb_8250.c:316:
+                return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/serial/kgdb_8250.c:316:
+                return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: drivers/serial/kgdb_8250.c:317:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: drivers/serial/kgdb_8250.c:317:
+        return 0;$

CHECK:CAMELCASE: Avoid CamelCase: <kgdb8250_ttyS>
#469: FILE: drivers/serial/kgdb_8250.c:327:
+	kgdb8250_irq = rs_table[kgdb8250_ttyS].irq;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#470: FILE: drivers/serial/kgdb_8250.c:328:
+	switch(rs_table[kgdb8250_ttyS].iotype)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#470: FILE: drivers/serial/kgdb_8250.c:328:
+	switch(rs_table[kgdb8250_ttyS].iotype)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#484: FILE: drivers/serial/kgdb_8250.c:342:
+	if ((retval = serial8250_release_irq(kgdb8250_irq)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#488: FILE: drivers/serial/kgdb_8250.c:346:
+	if ((retval = kgdb8250_init(kgdb8250_ttyS, kgdb8250_baud)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: drivers/serial/kgdb_8250.c:350:
+                         "GDB-stub", NULL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: drivers/serial/kgdb_8250.c:350:
+	retval = request_irq(kgdb8250_irq, kgdb8250_interrupt, SA_INTERRUPT,
+                         "GDB-stub", NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/serial/kgdb_8250.c:350:
+                         "GDB-stub", NULL);$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#525: FILE: drivers/serial/kgdb_8250.c:383:
+	kgdb8250_baud = simple_strtoul(str, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#534: FILE: drivers/serial/kgdb_8250.c:392:
+	printk("Invalid syntax for option kgdb8250=\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#538: FILE: drivers/serial/kgdb_8250.c:396:
+__setup("kgdb8250=", kgdb8250_opt);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#557: FILE: include/linux/debugger.h:1:
+#ifndef _DEBUGGER_H_

CHECK:CAMELCASE: Avoid CamelCase: <exVector>
#571: FILE: include/linux/debugger.h:15:
+typedef int gdb_debug_hook(int exVector, int signo, int err_code,

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: include/linux/debugger.h:16:
+                            struct pt_regs *regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: include/linux/debugger.h:16:
+                            struct pt_regs *regs);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#574: FILE: include/linux/debugger.h:18:
+#define	CHK_DEBUGGER(trapnr,signr,error_code,regs,after)			\
        	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#574: FILE: include/linux/debugger.h:18:
+#define	CHK_DEBUGGER(trapnr,signr,error_code,regs,after)			\
        	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#574: FILE: include/linux/debugger.h:18:
+#define	CHK_DEBUGGER(trapnr,signr,error_code,regs,after)			\
        	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#574: FILE: include/linux/debugger.h:18:
+#define	CHK_DEBUGGER(trapnr,signr,error_code,regs,after)			\
        	                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'regs' - possible side-effects?
#574: FILE: include/linux/debugger.h:18:
+#define	CHK_DEBUGGER(trapnr,signr,error_code,regs,after)			\
+    {									\
+	if (linux_debug_hook != (gdb_debug_hook *) NULL && !user_mode(regs)) \
+	{								\
+		(*linux_debug_hook)(trapnr, signr, error_code, regs) ;	\
+		after;							\
+	}								\
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: include/linux/debugger.h:19:
+    {^I^I^I^I^I^I^I^I^I\$

CHECK:SPACING: No space is necessary after a cast
#576: FILE: include/linux/debugger.h:20:
+	if (linux_debug_hook != (gdb_debug_hook *) NULL && !user_mode(regs)) \

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#576: FILE: include/linux/debugger.h:20:
+	if (linux_debug_hook != (gdb_debug_hook *) NULL && !user_mode(regs)) \
+	{								\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: include/linux/debugger.h:25:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: include/linux/debugger.h:47:
+#define^ICHK_DEBUGGER(trapnr,signr,error_code,regs,after)^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#603: FILE: include/linux/debugger.h:47:
+#define	CHK_DEBUGGER(trapnr,signr,error_code,regs,after)	
        	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#603: FILE: include/linux/debugger.h:47:
+#define	CHK_DEBUGGER(trapnr,signr,error_code,regs,after)	
        	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#603: FILE: include/linux/debugger.h:47:
+#define	CHK_DEBUGGER(trapnr,signr,error_code,regs,after)	
        	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#603: FILE: include/linux/debugger.h:47:
+#define	CHK_DEBUGGER(trapnr,signr,error_code,regs,after)	
        	                                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#621: FILE: include/linux/debugger.h:65:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#626: FILE: include/linux/kgdb.h:1:
+#ifndef _KGDB_H_

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#636: FILE: include/linux/kgdb.h:11:
+#include <asm/atomic.h>

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#656: FILE: include/linux/kgdb.h:31:
+enum kgdb_bptype
+{

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#665: FILE: include/linux/kgdb.h:40:
+enum kgdb_bpstate
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: include/linux/kgdb.h:41:
+       bp_disabled,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: include/linux/kgdb.h:42:
+       bp_enabled$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#671: FILE: include/linux/kgdb.h:46:
+struct kgdb_bkpt
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: include/linux/kgdb.h:47:
+       unsigned long^I^Ibpt_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: include/linux/kgdb.h:48:
+       unsigned char^I^Isaved_instr[BREAK_INSTR_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: include/linux/kgdb.h:49:
+       enum kgdb_bptype^I^Itype;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: include/linux/kgdb.h:50:
+       enum kgdb_bpstate^Istate;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#689: FILE: include/linux/kgdb.h:64:
+ * must, provide. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: include/linux/kgdb.h:65:
+extern int kgdb_arch_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#691: FILE: include/linux/kgdb.h:66:
+extern void regs_to_gdb_regs(unsigned long *gdb_regs, struct pt_regs *regs);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#692: FILE: include/linux/kgdb.h:67:
+extern void sleeping_thread_to_gdb_regs(unsigned long *gdb_regs,struct task_struct *p);
                                                                ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#692: FILE: include/linux/kgdb.h:67:
+extern void sleeping_thread_to_gdb_regs(unsigned long *gdb_regs,struct task_struct *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#693: FILE: include/linux/kgdb.h:68:
+extern void gdb_regs_to_regs(unsigned long *gdb_regs, struct pt_regs *regs);

CHECK:CAMELCASE: Avoid CamelCase: <exceptionNo>
#694: FILE: include/linux/kgdb.h:69:
+extern void kgdb_printexceptioninfo(int exceptionNo, int errorcode,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#694: FILE: include/linux/kgdb.h:69:
+extern void kgdb_printexceptioninfo(int exceptionNo, int errorcode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: include/linux/kgdb.h:70:
+extern void kgdb_printexceptioninfo(int exceptionNo, int errorcode,
+		char *buffer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#696: FILE: include/linux/kgdb.h:71:
+extern void kgdb_disable_hw_debug(struct pt_regs *regs);

CHECK:CAMELCASE: Avoid CamelCase: <eVector>
#697: FILE: include/linux/kgdb.h:72:
+extern void kgdb_post_master_code(struct pt_regs *regs, int eVector,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#697: FILE: include/linux/kgdb.h:72:
+extern void kgdb_post_master_code(struct pt_regs *regs, int eVector,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: include/linux/kgdb.h:73:
+extern void kgdb_post_master_code(struct pt_regs *regs, int eVector,
+		int err_code);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#699: FILE: include/linux/kgdb.h:74:
+extern int kgdb_arch_handle_exception(int vector, int signo, int err_code,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: include/linux/kgdb.h:75:
+extern int kgdb_arch_handle_exception(int vector, int signo, int err_code,
+		char *InBuffer, char *outBuffer, struct pt_regs *regs);

CHECK:CAMELCASE: Avoid CamelCase: <InBuffer>
#700: FILE: include/linux/kgdb.h:75:
+		char *InBuffer, char *outBuffer, struct pt_regs *regs);

CHECK:CAMELCASE: Avoid CamelCase: <outBuffer>
#700: FILE: include/linux/kgdb.h:75:
+		char *InBuffer, char *outBuffer, struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#701: FILE: include/linux/kgdb.h:76:
+extern int kgdb_arch_set_break(unsigned long addr, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#702: FILE: include/linux/kgdb.h:77:
+extern int kgdb_arch_remove_break(unsigned long addr, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#703: FILE: include/linux/kgdb.h:78:
+extern void kgdb_correct_hw_break(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#704: FILE: include/linux/kgdb.h:79:
+extern void kgdb_shadowinfo(struct pt_regs *regs, char *buffer, unsigned threadid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#704: FILE: include/linux/kgdb.h:79:
+extern void kgdb_shadowinfo(struct pt_regs *regs, char *buffer, unsigned threadid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#705: FILE: include/linux/kgdb.h:80:
+extern struct task_struct *kgdb_get_shadow_thread(struct pt_regs *regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#706: FILE: include/linux/kgdb.h:81:
+extern struct task_struct *kgdb_get_shadow_thread(struct pt_regs *regs,
+		int threadid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#707: FILE: include/linux/kgdb.h:82:
+extern struct pt_regs *kgdb_shadow_regs(struct pt_regs *regs, int threadid);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#712: FILE: include/linux/kgdb.h:87:
+	unsigned shadowth;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#713: FILE: include/linux/kgdb.h:88:
+};^I^I^I$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#716: FILE: include/linux/kgdb.h:91:
+typedef unsigned char threadref[8];

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#720: FILE: include/linux/kgdb.h:95:
+	void (*write_char)(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:CONST_STRUCT: struct kgdb_arch should normally be const
#726: FILE: include/linux/kgdb.h:101:
+extern struct kgdb_arch arch_kgdb_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#731: FILE: include/linux/kgdb.h:106:
+extern void kgdb8250_add_port(int i, struct uart_port *serial_req);

CHECK:CAMELCASE: Avoid CamelCase: <longValue>
#733: FILE: include/linux/kgdb.h:108:
+int kgdb_hex2long(char **ptr, long *longValue);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#769: FILE: kernel/kgdbstub.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: kernel/kgdbstub.c:20:
+ * thread support, support for multiple processors,support for ia-32(x86) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: kernel/kgdbstub.c:27:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: kernel/kgdbstub.c:30:
+ *  $

WARNING:TYPO_SPELLING: 'Origianl' may be misspelled - perhaps 'Original'?
#800: FILE: kernel/kgdbstub.c:32:
+ * Origianl kgdb, compatibility with 2.1.xx kernel by David Grothe <dave@gcom.com>
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#813: FILE: kernel/kgdbstub.c:45:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#815: FILE: kernel/kgdbstub.c:47:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#818: FILE: kernel/kgdbstub.c:50:
+#include <asm/cacheflush.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#833: FILE: kernel/kgdbstub.c:65:
+int kgdb_initialized = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#834: FILE: kernel/kgdbstub.c:66:
+static volatile int kgdb_connected;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#837: FILE: kernel/kgdbstub.c:69:
+int kgdb_enter = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#840: FILE: kernel/kgdbstub.c:72:
+ * also at runtime. */

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#841: FILE: kernel/kgdbstub.c:73:
+int kgdb_useraccess = 0;

WARNING:CONST_STRUCT: struct kgdb_arch should normally be const
#851: FILE: kernel/kgdbstub.c:83:
+struct kgdb_arch *kgdb_ops = &arch_kgdb_ops;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#856: FILE: kernel/kgdbstub.c:88:
+static volatile int procindebug[KGDB_MAX_NO_CPUS];

CHECK:CAMELCASE: Avoid CamelCase: <remcomInBuffer>
#870: FILE: kernel/kgdbstub.c:102:
+static char remcomInBuffer[BUFMAX];

CHECK:CAMELCASE: Avoid CamelCase: <remcomOutBuffer>
#871: FILE: kernel/kgdbstub.c:103:
+static char remcomOutBuffer[BUFMAX];

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#876: FILE: kernel/kgdbstub.c:108:
+ * This function will handle the initalization of any architecture specific
                                  ^^^^^^^^^^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#880: FILE: kernel/kgdbstub.c:112:
+int __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#886: FILE: kernel/kgdbstub.c:118:
+void __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#891: FILE: kernel/kgdbstub.c:123:
+void __attribute__ ((weak))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#892: FILE: kernel/kgdbstub.c:124:
+sleeping_thread_to_gdb_regs(unsigned long *gdb_regs,struct task_struct *p)
                                                    ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#896: FILE: kernel/kgdbstub.c:128:
+void __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#901: FILE: kernel/kgdbstub.c:133:
+void __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#906: FILE: kernel/kgdbstub.c:138:
+void __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#911: FILE: kernel/kgdbstub.c:143:
+void __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#921: FILE: kernel/kgdbstub.c:153:
+int __attribute__ ((weak))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#923: FILE: kernel/kgdbstub.c:155:
+kgdb_arch_handle_exception(int vector, int signo, int err_code, char *InBuffer,
+		char *outBuffer, struct pt_regs *regs)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#928: FILE: kernel/kgdbstub.c:160:
+int __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#934: FILE: kernel/kgdbstub.c:166:
+int __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#940: FILE: kernel/kgdbstub.c:172:
+void __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#945: FILE: kernel/kgdbstub.c:177:
+void __attribute__ ((weak))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#946: FILE: kernel/kgdbstub.c:178:
+kgdb_shadowinfo(struct pt_regs *regs, char *buffer, unsigned threadid)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#950: FILE: kernel/kgdbstub.c:182:
+struct task_struct __attribute__ ((weak))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#956: FILE: kernel/kgdbstub.c:188:
+struct pt_regs __attribute__ ((weak))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#984: FILE: kernel/kgdbstub.c:216:
+		while ((ch = (kgdb_serial->read_char() & 0x7f)) != '$');

CHECK:BRACES: Unbalanced braces around else statement
#1007: FILE: kernel/kgdbstub.c:239:
+			else {

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#1034: FILE: kernel/kgdbstub.c:266:
+	static char gdbseq[] = "$Hc-1#09";

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1048: FILE: kernel/kgdbstub.c:280:
+			count ++;
 			      ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1049: FILE: kernel/kgdbstub.c:281:
+			send_count ++;
 			           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1080: FILE: kernel/kgdbstub.c:312:
+	} while (( ch & 0x7f) != '+');

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1082: FILE: kernel/kgdbstub.c:314:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: kernel/kgdbstub.c:320:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1089: FILE: kernel/kgdbstub.c:321:
+	if (!kgdb_useraccess && (unsigned long)addr < TASK_SIZE) {
+		return -EINVAL;
+	}

WARNING:MEMORY_BARRIER: memory barrier without comment
#1092: FILE: kernel/kgdbstub.c:324:
+	wmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1095: FILE: kernel/kgdbstub.c:327:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1096: FILE: kernel/kgdbstub.c:328:
+	if (get_user(*data, addr) != 0) {
+		ret = -EFAULT;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1099: FILE: kernel/kgdbstub.c:331:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: kernel/kgdbstub.c:340:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1109: FILE: kernel/kgdbstub.c:341:
+	if (!kgdb_useraccess && (unsigned long)addr < TASK_SIZE) {
+		return -EINVAL;
+	}

WARNING:MEMORY_BARRIER: memory barrier without comment
#1112: FILE: kernel/kgdbstub.c:344:
+	wmb();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1116: FILE: kernel/kgdbstub.c:348:
+	if (put_user(data, addr) != 0) {
+		ret = -EFAULT;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1119: FILE: kernel/kgdbstub.c:351:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1133: FILE: kernel/kgdbstub.c:365:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1135: FILE: kernel/kgdbstub.c:367:
+	for (i = 0; i < count; i++) {
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1136: FILE: kernel/kgdbstub.c:368:
+		if ((error = get_char(mem++, &ch)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: kernel/kgdbstub.c:370:
+^I^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1143: FILE: kernel/kgdbstub.c:375:
+	return (buf);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1156: FILE: kernel/kgdbstub.c:388:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1160: FILE: kernel/kgdbstub.c:392:
+^I^Iif ((error = set_char(mem++, ch)) < 0) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1160: FILE: kernel/kgdbstub.c:392:
+		if ((error = set_char(mem++, ch)) < 0) 

CHECK:CAMELCASE: Avoid CamelCase: <numChars>
#1172: FILE: kernel/kgdbstub.c:404:
+	int numChars = 0;

CHECK:CAMELCASE: Avoid CamelCase: <hexValue>
#1173: FILE: kernel/kgdbstub.c:405:
+	int hexValue;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1179: FILE: kernel/kgdbstub.c:411:
+		if (hexValue >= 0) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1182: FILE: kernel/kgdbstub.c:414:
+		} else

CHECK:SPACING: No space is necessary after a cast
#1217: FILE: kernel/kgdbstub.c:449:
+	altid = (unsigned char *) id;

CHECK:SPACING: No space is necessary after a cast
#1229: FILE: kernel/kgdbstub.c:461:
+	scan = (unsigned char *) id;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1232: FILE: kernel/kgdbstub.c:464:
+		int i = 4;
+		while (i--)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1241: FILE: kernel/kgdbstub.c:473:
+static struct task_struct *getthread(struct pt_regs *regs,int tid)
                                                          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1248: FILE: kernel/kgdbstub.c:480:
+	if (tid >= pid_max + num_online_cpus() + kgdb_ops->shadowth) {
+		return NULL;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1258: FILE: kernel/kgdbstub.c:490:
+			if (tid == pid_max + i) {
+				return p;
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1265: FILE: kernel/kgdbstub.c:497:
+	if (!tid) {
+		return NULL;
+	}

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1287: FILE: kernel/kgdbstub.c:519:
+			asm volatile ("nop": : : "memory");
 			                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1306: FILE: kernel/kgdbstub.c:538:
+static int get_mem (char *addr, unsigned char *buf, int count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1309: FILE: kernel/kgdbstub.c:541:
+	int error;
+	while (count) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1310: FILE: kernel/kgdbstub.c:542:
+^I^Iif((error = get_char(addr++, buf)) <  0) $

ERROR:SPACING: space required before the open parenthesis '('
#1310: FILE: kernel/kgdbstub.c:542:
+		if((error = get_char(addr++, buf)) <  0) 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1310: FILE: kernel/kgdbstub.c:542:
+		if((error = get_char(addr++, buf)) <  0) 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1318: FILE: kernel/kgdbstub.c:550:
+static int set_mem (char *addr,unsigned char *buf, int count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1318: FILE: kernel/kgdbstub.c:550:
+static int set_mem (char *addr,unsigned char *buf, int count)
                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1321: FILE: kernel/kgdbstub.c:553:
+	int error;
+	while (count) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1322: FILE: kernel/kgdbstub.c:554:
+^I^Iif ((error = set_char(addr++,*buf++)) < 0) $

ERROR:SPACING: space required after that ',' (ctx:OxO)
#1322: FILE: kernel/kgdbstub.c:554:
+		if ((error = set_char(addr++,*buf++)) < 0) 
 		                            ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#1322: FILE: kernel/kgdbstub.c:554:
+		if ((error = set_char(addr++,*buf++)) < 0) 
 		                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1322: FILE: kernel/kgdbstub.c:554:
+		if ((error = set_char(addr++,*buf++)) < 0) 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1329: FILE: kernel/kgdbstub.c:561:
+static int set_break (unsigned long addr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kgdb_break[i].state == bp_enabled'
#1335: FILE: kernel/kgdbstub.c:567:
+		if ((kgdb_break[i].state == bp_enabled) &&
+		    (kgdb_break[i].bpt_addr == addr)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kgdb_break[i].bpt_addr == addr'
#1335: FILE: kernel/kgdbstub.c:567:
+		if ((kgdb_break[i].state == bp_enabled) &&
+		    (kgdb_break[i].bpt_addr == addr)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kgdb_break[i].bpt_addr == addr'
#1341: FILE: kernel/kgdbstub.c:573:
+			if ((breakno == -1) || (kgdb_break[i].bpt_addr == addr))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1348: FILE: kernel/kgdbstub.c:580:
+	if ((error = get_mem((char *)addr, kgdb_break[breakno].saved_instr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1349: FILE: kernel/kgdbstub.c:581:
+	if ((error = get_mem((char *)addr, kgdb_break[breakno].saved_instr,
+				BREAK_INSTR_SIZE)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1352: FILE: kernel/kgdbstub.c:584:
+	if ((error = set_mem((char *)addr, kgdb_ops->gdb_bpt_instr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1353: FILE: kernel/kgdbstub.c:585:
+	if ((error = set_mem((char *)addr, kgdb_ops->gdb_bpt_instr,
+					BREAK_INSTR_SIZE)) < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1355: FILE: kernel/kgdbstub.c:587:
+	flush_cache_range (current->mm, addr, addr + BREAK_INSTR_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1356: FILE: kernel/kgdbstub.c:588:
+	flush_icache_range (addr, addr + BREAK_INSTR_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1361: FILE: kernel/kgdbstub.c:593:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1363: FILE: kernel/kgdbstub.c:595:
+}^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1365: FILE: kernel/kgdbstub.c:597:
+static int remove_break (unsigned long addr)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1370: FILE: kernel/kgdbstub.c:602:
+	for (i=0; i < MAX_BREAKPOINTS; i++) {
 	      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kgdb_break[i].state == bp_enabled'
#1371: FILE: kernel/kgdbstub.c:603:
+		if ((kgdb_break[i].state == bp_enabled) &&
+		   (kgdb_break[i].bpt_addr == addr)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kgdb_break[i].bpt_addr == addr'
#1371: FILE: kernel/kgdbstub.c:603:
+		if ((kgdb_break[i].state == bp_enabled) &&
+		   (kgdb_break[i].bpt_addr == addr)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1372: FILE: kernel/kgdbstub.c:604:
+		if ((kgdb_break[i].state == bp_enabled) &&
+		   (kgdb_break[i].bpt_addr == addr)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1373: FILE: kernel/kgdbstub.c:605:
+			if ((error =set_mem((char *)addr, kgdb_break[i].saved_instr,
 			           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1373: FILE: kernel/kgdbstub.c:605:
+			if ((error =set_mem((char *)addr, kgdb_break[i].saved_instr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1374: FILE: kernel/kgdbstub.c:606:
+^I^I^I        BREAK_INSTR_SIZE)) < 0)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1374: FILE: kernel/kgdbstub.c:606:
+			if ((error =set_mem((char *)addr, kgdb_break[i].saved_instr,
+			        BREAK_INSTR_SIZE)) < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1376: FILE: kernel/kgdbstub.c:608:
+			flush_cache_range (current->mm, addr, addr + BREAK_INSTR_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1377: FILE: kernel/kgdbstub.c:609:
+			flush_icache_range (addr, addr + BREAK_INSTR_SIZE);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1389: FILE: kernel/kgdbstub.c:621:
+	int error;
+	for (i=0; i < MAX_BREAKPOINTS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1389: FILE: kernel/kgdbstub.c:621:
+	for (i=0; i < MAX_BREAKPOINTS; i++) {
 	      ^

ERROR:SPACING: space required before the open parenthesis '('
#1390: FILE: kernel/kgdbstub.c:622:
+		if(kgdb_break[i].state == bp_enabled) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1392: FILE: kernel/kgdbstub.c:624:
+			unsigned long addr = kgdb_break[i].bpt_addr;
+			if ((error = set_mem((char *)addr, kgdb_break[i].saved_instr,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1392: FILE: kernel/kgdbstub.c:624:
+			if ((error = set_mem((char *)addr, kgdb_break[i].saved_instr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1393: FILE: kernel/kgdbstub.c:625:
+			if ((error = set_mem((char *)addr, kgdb_break[i].saved_instr,
+			       BREAK_INSTR_SIZE)) < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1395: FILE: kernel/kgdbstub.c:627:
+			flush_cache_range (current->mm, addr, addr + BREAK_INSTR_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1396: FILE: kernel/kgdbstub.c:628:
+			flush_icache_range (addr, addr + BREAK_INSTR_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1402: FILE: kernel/kgdbstub.c:634:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1405: FILE: kernel/kgdbstub.c:637:
+	if (realpid) {
+		return realpid;
+	}

WARNING:TYPO_SPELLING: 'procesing' may be misspelled - perhaps 'processing'?
#1412: FILE: kernel/kgdbstub.c:644:
+ * This function does all command procesing for interfacing to gdb.
                                   ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1419: FILE: kernel/kgdbstub.c:651:
+int kgdb_handle_exception(int exVector, int signo, int err_code, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1420: FILE: kernel/kgdbstub.c:652:
+                     struct pt_regs *linux_regs)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1420: FILE: kernel/kgdbstub.c:652:
+int kgdb_handle_exception(int exVector, int signo, int err_code, 
+                     struct pt_regs *linux_regs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: kernel/kgdbstub.c:652:
+                     struct pt_regs *linux_regs)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1425: FILE: kernel/kgdbstub.c:657:
+	unsigned long gdb_regs[NUMREGBYTES / sizeof (unsigned long)];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1430: FILE: kernel/kgdbstub.c:662:
+	unsigned procid;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1437: FILE: kernel/kgdbstub.c:669:
+	if (atomic_read(&debugger_active) == smp_processor_id() + 1) {
+		return 0;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1441: FILE: kernel/kgdbstub.c:673:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1446: FILE: kernel/kgdbstub.c:678:
+^I$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1453: FILE: kernel/kgdbstub.c:685:
+			asm volatile ("nop": : : "memory");
 			                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1455: FILE: kernel/kgdbstub.c:687:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1462: FILE: kernel/kgdbstub.c:694:
+	for (i = 0; i < num_online_cpus(); i++) {
+		spin_lock(&slavecpulocks[i]);
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1467: FILE: kernel/kgdbstub.c:699:
+	 * need one here */

ERROR:SPACING: spaces required around that '==' (ctx:WxV)
#1479: FILE: kernel/kgdbstub.c:711:
+		if(remcomInBuffer[0] == 'H' && remcomInBuffer[1] =='c') {
 		                                                 ^

ERROR:SPACING: space required before the open parenthesis '('
#1479: FILE: kernel/kgdbstub.c:711:
+		if(remcomInBuffer[0] == 'H' && remcomInBuffer[1] =='c') {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1479: FILE: kernel/kgdbstub.c:711:
+		if(remcomInBuffer[0] == 'H' && remcomInBuffer[1] =='c') {
[...]
+		else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1484: FILE: kernel/kgdbstub.c:716:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1487: FILE: kernel/kgdbstub.c:719:
+	} else {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1498: FILE: kernel/kgdbstub.c:730:
+^I}^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1502: FILE: kernel/kgdbstub.c:734:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1508: FILE: kernel/kgdbstub.c:740:
+		int bpt_type = 0;
+		error = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1524: FILE: kernel/kgdbstub.c:756:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: kernel/kgdbstub.c:759:
+^I^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1529: FILE: kernel/kgdbstub.c:761:
+			/* All threads that don't have debuggerinfo should be
+			   in __schedule() sleeping, since all other CPUs

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1530: FILE: kernel/kgdbstub.c:762:
+			   are in kgdb_wait, and thus have debuggerinfo. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1531: FILE: kernel/kgdbstub.c:763:
+^I^I^I   $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1534: FILE: kernel/kgdbstub.c:766:
+				regs_to_gdb_regs(gdb_regs,
+					kgdb_shadow_regs(linux_regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1535: FILE: kernel/kgdbstub.c:767:
+					kgdb_shadow_regs(linux_regs,
+						kgdb_usethreadid - pid_max -

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1538: FILE: kernel/kgdbstub.c:770:
+				if ((error = get_char(thread->thread.debuggerinfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1539: FILE: kernel/kgdbstub.c:771:
+				if ((error = get_char(thread->thread.debuggerinfo,
+					(unsigned char *)gdb_regs)) < 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1544: FILE: kernel/kgdbstub.c:776:
+				regs_to_gdb_regs(gdb_regs,
+					(struct pt_regs *)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1547: FILE: kernel/kgdbstub.c:779:
+^I^I^I^I/* Pull stuff saved during $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1550: FILE: kernel/kgdbstub.c:782:
+				 * This should be enough for a stack trace. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1553: FILE: kernel/kgdbstub.c:785:
+^I^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#1554: FILE: kernel/kgdbstub.c:786:
+			kgdb_mem2hex((char *) gdb_regs, remcomOutBuffer, NUMREGBYTES);

CHECK:SPACING: No space is necessary after a cast
#1558: FILE: kernel/kgdbstub.c:790:
+			kgdb_hex2mem(&remcomInBuffer[1], (char *) gdb_regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1559: FILE: kernel/kgdbstub.c:791:
+			kgdb_hex2mem(&remcomInBuffer[1], (char *) gdb_regs,
+				NUMREGBYTES);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1560: FILE: kernel/kgdbstub.c:792:
+^I^I^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1561: FILE: kernel/kgdbstub.c:793:
+			if (kgdb_usethread && kgdb_usethread != current)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1563: FILE: kernel/kgdbstub.c:795:
+			else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1565: FILE: kernel/kgdbstub.c:797:
+				gdb_regs_to_regs(gdb_regs,
+					(struct pt_regs *)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1575: FILE: kernel/kgdbstub.c:807:
+			if (kgdb_hex2long(&ptr, &addr) > 0 && *ptr++ == ',' &&
[...]
+			} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1577: FILE: kernel/kgdbstub.c:809:
+				if (IS_ERR(ptr = kgdb_mem2hex((char *) addr,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1577: FILE: kernel/kgdbstub.c:809:
+				if (IS_ERR(ptr = kgdb_mem2hex((char *) addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1578: FILE: kernel/kgdbstub.c:810:
+				if (IS_ERR(ptr = kgdb_mem2hex((char *) addr,
+							remcomOutBuffer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1581: FILE: kernel/kgdbstub.c:813:
+					error_packet(remcomOutBuffer,
+							PTR_ERR(ptr));

CHECK:BRACES: Unbalanced braces around else statement
#1582: FILE: kernel/kgdbstub.c:814:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1589: FILE: kernel/kgdbstub.c:821:
+			if (kgdb_hex2long(&ptr, &addr) > 0 && *(ptr++) == ','
[...]
+			} else
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1590: FILE: kernel/kgdbstub.c:822:
+			if (kgdb_hex2long(&ptr, &addr) > 0 && *(ptr++) == ','
+				&& kgdb_hex2long(&ptr, &length) > 0 &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1592: FILE: kernel/kgdbstub.c:824:
+				if (IS_ERR(ptr = kgdb_hex2mem(ptr, (char *)addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1593: FILE: kernel/kgdbstub.c:825:
+				if (IS_ERR(ptr = kgdb_hex2mem(ptr, (char *)addr,
+							length)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1595: FILE: kernel/kgdbstub.c:827:
+					error_packet(remcomOutBuffer,
+							PTR_ERR(ptr));

CHECK:BRACES: Unbalanced braces around else statement
#1596: FILE: kernel/kgdbstub.c:828:
+			} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1600: FILE: kernel/kgdbstub.c:832:
+^I^I^I/* kill or detach. KGDB should treat this like a $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1604: FILE: kernel/kgdbstub.c:836:
+			if ((error = remove_all_break()) < 0) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1624: FILE: kernel/kgdbstub.c:856:
+				if (memcmp(remcomInBuffer+2, "ThreadInfo",10))
+				{

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1624: FILE: kernel/kgdbstub.c:856:
+				if (memcmp(remcomInBuffer+2, "ThreadInfo",10))
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1624: FILE: kernel/kgdbstub.c:856:
+				if (memcmp(remcomInBuffer+2, "ThreadInfo",10))
 				                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1627: FILE: kernel/kgdbstub.c:859:
+					error_packet(remcomOutBuffer,
+							-EINVAL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1630: FILE: kernel/kgdbstub.c:862:
+				if (remcomInBuffer[1] == 'f') {
+					threadid = 1;
+				}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: kernel/kgdbstub.c:870:
+					thread = getthread(linux_regs,
+							threadid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1641: FILE: kernel/kgdbstub.c:873:
+						int_to_threadref(&thref,
+								threadid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1655: FILE: kernel/kgdbstub.c:887:
+^I^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1663: FILE: kernel/kgdbstub.c:895:
+				kgdb_printexceptioninfo(exVector, err_code,
+						remcomOutBuffer);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1666: FILE: kernel/kgdbstub.c:898:
+				if (memcmp(remcomInBuffer+1,
+					"ThreadExtraInfo,",16))
+				{

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1666: FILE: kernel/kgdbstub.c:898:
+				if (memcmp(remcomInBuffer+1,
 				                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1667: FILE: kernel/kgdbstub.c:899:
+				if (memcmp(remcomInBuffer+1,
+					"ThreadExtraInfo,",16))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1667: FILE: kernel/kgdbstub.c:899:
+					"ThreadExtraInfo,",16))
 					                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1673: FILE: kernel/kgdbstub.c:905:
+				ptr = remcomInBuffer+17;
 				                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1681: FILE: kernel/kgdbstub.c:913:
+					kgdb_mem2hex(getthread(linux_regs,
+						threadid)->comm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1686: FILE: kernel/kgdbstub.c:918:
+					kgdb_shadowinfo(linux_regs,
+						remcomOutBuffer,

WARNING:SPLIT_STRING: quoted string split across lines
#1691: FILE: kernel/kgdbstub.c:923:
+					sprintf(tmpstr, "Shadow task %d"
+						" for pid 0",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1694: FILE: kernel/kgdbstub.c:926:
+					kgdb_mem2hex(tmpstr, remcomOutBuffer,
+							strlen(tmpstr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1726: FILE: kernel/kgdbstub.c:958:
+						error_packet(remcomOutBuffer,
+								-EINVAL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1754: FILE: kernel/kgdbstub.c:986:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1757: FILE: kernel/kgdbstub.c:989:
+^I^I^I^Iif (bpt_type == bp_hardware_breakpoint && $

ERROR:SPACING: space required before the open parenthesis '('
#1764: FILE: kernel/kgdbstub.c:996:
+				if(!(kgdb_ops->flags & KGDB_HW_BREAKPOINT))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1767: FILE: kernel/kgdbstub.c:999:
+^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1773: FILE: kernel/kgdbstub.c:1005:
+					error = kgdb_arch_set_break(addr,
+							bpt_type);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1775: FILE: kernel/kgdbstub.c:1007:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#1775: FILE: kernel/kgdbstub.c:1007:
+			else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1780: FILE: kernel/kgdbstub.c:1012:
+					error = kgdb_arch_remove_break(addr,
+							bpt_type);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1782: FILE: kernel/kgdbstub.c:1014:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1787: FILE: kernel/kgdbstub.c:1019:
+^I^I^I$

WARNING:INDENTED_LABEL: labels should not be indented
#1791: FILE: kernel/kgdbstub.c:1023:
+		default_handle:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1793: FILE: kernel/kgdbstub.c:1025:
+			error = kgdb_arch_handle_exception(exVector, signo,
+					err_code, remcomInBuffer,

ERROR:SPACING: space required before the open parenthesis '('
#1796: FILE: kernel/kgdbstub.c:1028:
+			if(error >= 0 || remcomInBuffer[0] == 'D' ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1797: FILE: kernel/kgdbstub.c:1029:
+			if(error >= 0 || remcomInBuffer[0] == 'D' ||
+			    remcomInBuffer[0] == 'k')

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1800: FILE: kernel/kgdbstub.c:1032:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1808: FILE: kernel/kgdbstub.c:1040:
+^Iprocindebug[smp_processor_id()] = 0;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1809: FILE: kernel/kgdbstub.c:1041:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1810: FILE: kernel/kgdbstub.c:1042:
+	for (i = 0; i < num_online_cpus(); i++) {
+		spin_unlock(&slavecpulocks[i]);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1814: FILE: kernel/kgdbstub.c:1046:
+^I * from the debugger $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1816: FILE: kernel/kgdbstub.c:1048:
+^Ifor (i = 0; i < num_online_cpus(); i++) { $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1820: FILE: kernel/kgdbstub.c:1052:
+			while (--j) {
+				asm volatile ("nop" : : : "memory");
+			}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1841: FILE: kernel/kgdbstub.c:1073:
+int module_event(struct notifier_block * self, unsigned long val, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1841: FILE: kernel/kgdbstub.c:1073:
+int module_event(struct notifier_block * self, unsigned long val, void * data)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1851: FILE: kernel/kgdbstub.c:1083:
+/* This function will generate a breakpoint exception.  It is used at the
+   beginning of a program to sync up with a debugger and can be used

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1853: FILE: kernel/kgdbstub.c:1085:
+   the debugger. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1861: FILE: kernel/kgdbstub.c:1093:
+			printk("kgdb not enabled. Cannot do breakpoint\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'breakpoint', this function's name, in a string
#1861: FILE: kernel/kgdbstub.c:1093:
+			printk("kgdb not enabled. Cannot do breakpoint\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:MEMORY_BARRIER: memory barrier without comment
#1867: FILE: kernel/kgdbstub.c:1099:
+	wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1869: FILE: kernel/kgdbstub.c:1101:
+	wmb();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1876: FILE: kernel/kgdbstub.c:1108:
+	if (!procindebug[cpu] && atomic_read(&debugger_active) != (cpu + 1)) {
+		kgdb_wait((struct pt_regs *)regs);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1885: FILE: kernel/kgdbstub.c:1117:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1891: FILE: kernel/kgdbstub.c:1123:
+^Ifor (i = 0; i < KGDB_MAX_NO_CPUS; i++) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1903: FILE: kernel/kgdbstub.c:1135:
+^Ifor (i = 0; i < MAX_BREAKPOINTS; i++) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1907: FILE: kernel/kgdbstub.c:1139:
+^I$

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#1908: FILE: kernel/kgdbstub.c:1140:
+	/* Let the arch do any initalization it needs to, including
 	                       ^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1909: FILE: kernel/kgdbstub.c:1141:
+	 * pointing to a suitable early output device. */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1922: FILE: kernel/kgdbstub.c:1154:
+	if (!kgdb_enter) {
+		return;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1929: FILE: kernel/kgdbstub.c:1161:
+	printk(KERN_CRIT "Waiting for connection from remote gdb... ");

WARNING:SPACING: space prohibited before semicolon
#1930: FILE: kernel/kgdbstub.c:1162:
+	breakpoint() ;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1931: FILE: kernel/kgdbstub.c:1163:
+	printk("Connected.\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1937: FILE: kernel/kgdbstub.c:1169:
+void kgdb_console_write(struct console *co, const char *s, unsigned count)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1944: FILE: kernel/kgdbstub.c:1176:
+	if (!kgdb_connected) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1952: FILE: kernel/kgdbstub.c:1184:
+		if ((count << 1) > (BUFMAX - 2)) {
[...]
+		} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1958: FILE: kernel/kgdbstub.c:1190:
+		for (i = 0; i < wcount; i++) {
+			bufptr = pack_hex_byte(bufptr, s[i]);
+		}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1966: FILE: kernel/kgdbstub.c:1198:
+
+	}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1992: FILE: kernel/kgdbstub.c:1224:
+EXPORT_SYMBOL(breakpoint);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2015: FILE: kernel/kgdbstub.c:1247:
+extern int kgdb8250_ttyS;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2018: FILE: kernel/kgdbstub.c:1250:
+	kgdb8250_ttyS = simple_strtoul(str, NULL, 10);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2021: FILE: kernel/kgdbstub.c:1253:
+}
+static int __init opt_gdbbaud(char *str)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2023: FILE: kernel/kgdbstub.c:1255:
+	kgdb8250_baud = simple_strtoul(str, NULL, 10);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2035: FILE: kernel/kgdbstub.c:1267:
+__setup("gdbttyS=", opt_gdbttyS);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2036: FILE: kernel/kgdbstub.c:1268:
+__setup("gdbbaud=", opt_gdbbaud);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2038: FILE: kernel/kgdbstub.c:1270:
+__setup("gdb", opt_gdb);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2039: FILE: kernel/kgdbstub.c:1271:
+__setup("kgdbwait", opt_kgdb_enter);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000303393.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 215 errors, 199 warnings, 110 checks, 1982 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000303393.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
