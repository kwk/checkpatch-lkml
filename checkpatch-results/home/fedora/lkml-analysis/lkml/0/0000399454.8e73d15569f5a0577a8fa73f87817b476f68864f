ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/arch/i386/kernel/io_apic.c	Tue Jan 14 00:42:37 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'apicid == boot_cpu_apicid'
#66: FILE: arch/i386/kernel/smpboot.c:1048:
+		if ((apicid == boot_cpu_apicid) || (apicid == BAD_APICID))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'apicid == BAD_APICID'
#66: FILE: arch/i386/kernel/smpboot.c:1048:
+		if ((apicid == boot_cpu_apicid) || (apicid == BAD_APICID))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#81: FILE: include/asm-i386/mach-bigsmp/mach_apic.h:29:
+#define check_apicid_present(bit) (phys_cpu_present_map & (1 << bit))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#90: FILE: include/asm-i386/mach-bigsmp/mach_apic.h:83:
+extern volatile u8 cpu_2_logical_apicid[];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: include/asm-i386/mach-bigsmp/mach_apic.h:87:
+       return (int)cpu_2_logical_apicid[cpu];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: include/asm-i386/mach-bigsmp/mach_apic.h:88:
+ }$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#106: FILE: include/asm-i386/mach-default/mach_apic.h:20:
+#define check_apicid_present(bit) (phys_cpu_present_map & (1 << bit))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#130: FILE: include/asm-i386/mach-numaq/mach_apic.h:16:
+#define check_apicid_present(bit) (phys_cpu_present_map & (1 << bit))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#141: FILE: include/asm-i386/mach-numaq/mach_apic.h:50:
+extern volatile u8 cpu_2_logical_apicid[];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: include/asm-i386/mach-summit/mach_apic.h:35:
+#define check_apicid_present(bit) (1) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#168: FILE: include/asm-i386/mach-summit/mach_apic.h:49:
+extern volatile u8 cpu_2_logical_apicid[];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000399454.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 5 warnings, 5 checks, 120 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000399454.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
