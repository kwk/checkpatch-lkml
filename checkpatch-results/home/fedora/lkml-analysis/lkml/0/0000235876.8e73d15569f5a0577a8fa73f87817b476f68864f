WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#49: 
> it wont even boot ...
     ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#103: FILE: fs/ioctl.c:87:
+			if ((error = get_user(on, (int __user *)arg)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#120: FILE: fs/ioctl.c:106:
+			if ((error = get_user(on, (int __user *)arg)) != 0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#158: FILE: fs/ioctl.c:144:
+			if (S_ISREG(filp->f_dentry->d_inode->i_mode)) {
[...]
+				unlock_kernel();
[...]
+				unlock_kernel();
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#168: FILE: fs/ioctl.c:153:
+				error = filp->f_op->ioctl2(filp->f_dentry->d_inode, filp, cmd, arg);
 				                                                    ^^^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#180: FILE: include/linux/fs.h:996:
+	int (*ioctl2) (struct inode *, struct file *, unsigned int, unsigned long);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#180: FILE: include/linux/fs.h:996:
+	int (*ioctl2) (struct inode *, struct file *, unsigned int, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#180: FILE: include/linux/fs.h:996:
+	int (*ioctl2) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#180: FILE: include/linux/fs.h:996:
+	int (*ioctl2) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#180: FILE: include/linux/fs.h:996:
+	int (*ioctl2) (struct inode *, struct file *, unsigned int, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235876.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 1 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235876.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
