WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
For touchscreen plus sensors.  Lots of Linux-capable boards have these chips

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: include/linux/spi/ads7846.h:1:
+/* linux/spi/ads7846.h */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#136: FILE: drivers/input/touchscreen/ads7846.c:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: drivers/input/touchscreen/ads7846.c:34:
+#define	set_irq_type(irq,type)	do{}while(0)
        	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#169: FILE: drivers/input/touchscreen/ads7846.c:34:
+#define	set_irq_type(irq,type)	do{}while(0)

ERROR:SPACING: space required after that close brace '}'
#169: FILE: drivers/input/touchscreen/ads7846.c:34:
+#define	set_irq_type(irq,type)	do{}while(0)

ERROR:SPACING: space required before the open parenthesis '('
#169: FILE: drivers/input/touchscreen/ads7846.c:34:
+#define	set_irq_type(irq,type)	do{}while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#172: FILE: drivers/input/touchscreen/ads7846.c:37:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#214: FILE: drivers/input/touchscreen/ads7846.c:79:
+	spinlock_t		lock;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#223: FILE: drivers/input/touchscreen/ads7846.c:88:
+#if	0

CHECK:BIT_MACRO: Prefer using the BIT macro
#234: FILE: drivers/input/touchscreen/ads7846.c:99:
+#define	ADS_START		(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#235: FILE: drivers/input/touchscreen/ads7846.c:100:
+#define	ADS_A2A1A0_d_y		(1 << 4)	/* differential */

CHECK:BIT_MACRO: Prefer using the BIT macro
#243: FILE: drivers/input/touchscreen/ads7846.c:108:
+#define	ADS_8_BIT		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#245: FILE: drivers/input/touchscreen/ads7846.c:110:
+#define	ADS_SER			(1 << 2)	/* non-differential */

CHECK:BIT_MACRO: Prefer using the BIT macro
#248: FILE: drivers/input/touchscreen/ads7846.c:113:
+#define	ADS_PD10_ADC_ON		(1 << 0)	/* ADC on */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#252: FILE: drivers/input/touchscreen/ads7846.c:117:
+#define	MAX_12BIT	((1<<12)-1)
        	         	   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#252: FILE: drivers/input/touchscreen/ads7846.c:117:
+#define	MAX_12BIT	((1<<12)-1)
        	         	        ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#286: FILE: drivers/input/touchscreen/ads7846.c:151:
+static int ads7846_read12_ser(struct device *dev, unsigned command)

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#290: FILE: drivers/input/touchscreen/ads7846.c:155:
+	struct ser_req		*req = kzalloc(sizeof *req, SLAB_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#311: FILE: drivers/input/touchscreen/ads7846.c:176:
+	req->command = (u8) command;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#346: FILE: drivers/input/touchscreen/ads7846.c:211:
+#define SHOW(name) static ssize_t \
+name ## _show(struct device *dev, struct device_attribute *attr, char *buf) \
+{ \
+	ssize_t v = ads7846_read12_ser(dev, \
+			READ_12BIT_SER(name) | ADS_PD10_ALL_ON); \
+	if (v < 0) \
+		return v; \
+	return sprintf(buf, "%u\n", (unsigned) v); \
+} \
+static DEVICE_ATTR(name, S_IRUGO, name ## _show, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#346: FILE: drivers/input/touchscreen/ads7846.c:211:
+#define SHOW(name) static ssize_t \
+name ## _show(struct device *dev, struct device_attribute *attr, char *buf) \
+{ \
+	ssize_t v = ads7846_read12_ser(dev, \
+			READ_12BIT_SER(name) | ADS_PD10_ALL_ON); \
+	if (v < 0) \
+		return v; \
+	return sprintf(buf, "%u\n", (unsigned) v); \
+} \
+static DEVICE_ATTR(name, S_IRUGO, name ## _show, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: No space is necessary after a cast
#353: FILE: drivers/input/touchscreen/ads7846.c:218:
+	return sprintf(buf, "%u\n", (unsigned) v); \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#353: FILE: drivers/input/touchscreen/ads7846.c:218:
+	return sprintf(buf, "%u\n", (unsigned) v); \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#355: FILE: drivers/input/touchscreen/ads7846.c:220:
+static DEVICE_ATTR(name, S_IRUGO, name ## _show, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#375: FILE: drivers/input/touchscreen/ads7846.c:240:
+	unsigned	Rt;

CHECK:CAMELCASE: Avoid CamelCase: <Rt>
#375: FILE: drivers/input/touchscreen/ads7846.c:240:
+	unsigned	Rt;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: drivers/input/touchscreen/ads7846.c:241:
+	unsigned	sync = 0;

WARNING:TYPO_SPELLING: 'writen' may be misspelled - perhaps 'written'?
#381: FILE: drivers/input/touchscreen/ads7846.c:246:
+	 * two 8 bit values writen msb-first.
 	                    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#392: FILE: drivers/input/touchscreen/ads7846.c:257:
+	if (x && z1 && ts->spi->dev.power.power_state.event == PM_EVENT_ON) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#400: FILE: drivers/input/touchscreen/ads7846.c:265:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/input/touchscreen/ads7846.c:298:
+		pr_debug("%s: %d/%d/%d%s\n", ts->spi->dev.bus_id,
+			x, y, Rt, Rt ? "" : " UP");

CHECK:BRACES: braces {} should be used on all arms of this statement
#443: FILE: drivers/input/touchscreen/ads7846.c:308:
+		if (ts->pendown)
[...]
+		else if (ts->irq_disabled) {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: drivers/input/touchscreen/ads7846.c:335:
+			dev_err(&ts->spi->dev, "spi_async --> %d\n",
+					status);

CHECK:SPACING: No space is necessary after a cast
#477: FILE: drivers/input/touchscreen/ads7846.c:342:
+	ads7846_timer((unsigned long) handle);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#508: FILE: drivers/input/touchscreen/ads7846.c:373:
+			udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#531: FILE: drivers/input/touchscreen/ads7846.c:396:
+static int __devinit ads7846_probe(struct spi_device *spi)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/input/touchscreen/ads7846.c:415:
+		dev_dbg(&spi->dev, "f(sample) %d KHz?\n",
+				(spi->max_speed_hz/16)/1000);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#550: FILE: drivers/input/touchscreen/ads7846.c:415:
+				(spi->max_speed_hz/16)/1000);
 				                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#550: FILE: drivers/input/touchscreen/ads7846.c:415:
+				(spi->max_speed_hz/16)/1000);
 				                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#560: FILE: drivers/input/touchscreen/ads7846.c:425:
+	if (!(ts = kzalloc(sizeof(struct ads7846), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ts)...) over kzalloc(sizeof(struct ads7846)...)
#560: FILE: drivers/input/touchscreen/ads7846.c:425:
+	if (!(ts = kzalloc(sizeof(struct ads7846), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#569: FILE: drivers/input/touchscreen/ads7846.c:434:
+	ts->timer.data = (unsigned long) ts;

WARNING:SIZEOF_PARENTHESIS: sizeof ts->phys should be sizeof(ts->phys)
#580: FILE: drivers/input/touchscreen/ads7846.c:445:
+	snprintf(ts->phys, sizeof ts->phys, "%s/input0", spi->dev.bus_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: drivers/input/touchscreen/ads7846.c:451:
+	input_set_abs_params(&ts->input, ABS_X,
+			pdata->x_min ? : 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: drivers/input/touchscreen/ads7846.c:455:
+	input_set_abs_params(&ts->input, ABS_Y,
+			pdata->y_min ? : 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/input/touchscreen/ads7846.c:459:
+	input_set_abs_params(&ts->input, ABS_PRESSURE,
+			pdata->pressure_min, pdata->pressure_max, 0, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: drivers/input/touchscreen/ads7846.c:509:
+	if (request_irq(spi->irq, ads7846_irq, SA_SAMPLE_RANDOM,
+				spi->dev.bus_id, ts)) {

CHECK:SPACING: No space is necessary after a cast
#657: FILE: drivers/input/touchscreen/ads7846.c:522:
+	(void) ads7846_read12_ser(&spi->dev,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#674: FILE: drivers/input/touchscreen/ads7846.c:539:
+static int __devexit ads7846_remove(struct spi_device *spi)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#752: FILE: drivers/input/touchscreen/ads7846.c:617:
+
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122909.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 15 warnings, 31 checks, 665 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122909.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
