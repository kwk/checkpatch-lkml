WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#38: FILE: arch/arm/mach-sa1100/collie_pm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <ADCtoPower>
#74: FILE: arch/arm/mach-sa1100/collie_pm.c:37:
+#define ADCtoPower(x)	       ((330 * x * 2) / 1024)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#74: FILE: arch/arm/mach-sa1100/collie_pm.c:37:
+#define ADCtoPower(x)	       ((330 * x * 2) / 1024)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#80: FILE: arch/arm/mach-sa1100/collie_pm.c:43:
+	if (sharpsl_param.adadj != -1) {
+		ad_revise = sharpsl_param.adadj;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#85: FILE: arch/arm/mach-sa1100/collie_pm.c:48:
+	if ((err = request_irq(COLLIE_IRQ_GPIO_AC_IN, sharpsl_ac_isr, SA_INTERRUPT,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#87: FILE: arch/arm/mach-sa1100/collie_pm.c:50:
+		printk("Could not get irq %d.\n", COLLIE_IRQ_GPIO_AC_IN);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#90: FILE: arch/arm/mach-sa1100/collie_pm.c:53:
+	if ((err = request_irq(COLLIE_IRQ_GPIO_CO, sharpsl_chrg_full_isr, SA_INTERRUPT,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#93: FILE: arch/arm/mach-sa1100/collie_pm.c:56:
+		printk("Could not get irq %d.\n", COLLIE_IRQ_GPIO_CO);

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: arch/arm/mach-sa1100/collie_pm.c:61:
+^I^I^I           COLLIE_TC35143_GPIO_BBAT_ON);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:RETURN_VOID: void function return statements are not generally useful
#100: FILE: arch/arm/mach-sa1100/collie_pm.c:63:
+	return;
+}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#112: FILE: arch/arm/mach-sa1100/collie_pm.c:75:
+	if (on) {
[...]
+	} else {
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#113: FILE: arch/arm/mach-sa1100/collie_pm.c:76:
+		printk("Should start charger\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: arch/arm/mach-sa1100/collie_pm.c:78:
+		printk("Should stop charger\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#124: FILE: arch/arm/mach-sa1100/collie_pm.c:87:
+#define        SCOOP_REG(adr) (*(volatile unsigned short*)(CF_BUF_CTRL_BASE+(adr)))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#124: FILE: arch/arm/mach-sa1100/collie_pm.c:87:
+#define        SCOOP_REG(adr) (*(volatile unsigned short*)(CF_BUF_CTRL_BASE+(adr)))
                                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#124: FILE: arch/arm/mach-sa1100/collie_pm.c:87:
+#define        SCOOP_REG(adr) (*(volatile unsigned short*)(CF_BUF_CTRL_BASE+(adr)))

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#127: FILE: arch/arm/mach-sa1100/collie_pm.c:90:
+	if (on) {
[...]
+	} else {
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: arch/arm/mach-sa1100/collie_pm.c:137:
+	printk("Backup battery = %d(%d)\n", ADCtoPower(voltage), voltage);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#187: FILE: arch/arm/mach-sa1100/collie_pm.c:150:
+	/* gives values 160..255 with battery removed... and
+	   145..255 with battery inserted. (on AC), goes as low as

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#188: FILE: arch/arm/mach-sa1100/collie_pm.c:151:
+	   80 on DC. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#197: FILE: arch/arm/mach-sa1100/collie_pm.c:160:
+	printk("Main battery = %d(%d)\n", voltage_volts, voltage);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#210: FILE: arch/arm/mach-sa1100/collie_pm.c:173:
+	/* According to Sharp, temp must be > 973, main battery must be < 465,
+	   FIXME: sharpsl_pm.c has both conditions negated? FIXME: values

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: arch/arm/mach-sa1100/collie_pm.c:174:
+	   are way out of range? */

WARNING:TYPO_SPELLING: 'higer' may be misspelled - perhaps 'higher'?
#215: FILE: arch/arm/mach-sa1100/collie_pm.c:178:
+	/* >1010 = battery removed, 460 = 22C ?, higer = lower temp ? */
 	                                         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: arch/arm/mach-sa1100/collie_pm.c:183:
+	printk("Battery temp = %d\n", voltage);

WARNING:LINE_SPACING: Missing a blank line after declarations
#235: FILE: arch/arm/mach-sa1100/collie_pm.c:198:
+		int ret = GPLR & COLLIE_GPIO_AC_IN;
+		printk("AC status = %d\n", ret);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#235: FILE: arch/arm/mach-sa1100/collie_pm.c:198:
+		printk("AC status = %d\n", ret);

WARNING:LINE_SPACING: Missing a blank line after declarations
#240: FILE: arch/arm/mach-sa1100/collie_pm.c:203:
+		int ret = GPLR & COLLIE_GPIO_MAIN_BAT_LOW;
+		printk("Fatal bat = %d\n", ret);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: arch/arm/mach-sa1100/collie_pm.c:203:
+		printk("Fatal bat = %d\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: arch/arm/mach-sa1100/collie_pm.c:253:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: arch/arm/mach-sa1100/collie_pm.c:253:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: arch/arm/mach-sa1100/collie_pm.c:255:
+        collie_pm_device = platform_device_alloc("sharpsl-pm", -1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/arm/mach-sa1100/collie_pm.c:255:
+        collie_pm_device = platform_device_alloc("sharpsl-pm", -1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: arch/arm/mach-sa1100/collie_pm.c:256:
+        if (!collie_pm_device)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: arch/arm/mach-sa1100/collie_pm.c:256:
+        if (!collie_pm_device)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: arch/arm/mach-sa1100/collie_pm.c:257:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: arch/arm/mach-sa1100/collie_pm.c:257:
+                return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: arch/arm/mach-sa1100/collie_pm.c:259:
+        collie_pm_device->dev.platform_data = &collie_pm_machinfo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: arch/arm/mach-sa1100/collie_pm.c:259:
+        collie_pm_device->dev.platform_data = &collie_pm_machinfo;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: arch/arm/mach-sa1100/collie_pm.c:260:
+        ret = platform_device_add(collie_pm_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: arch/arm/mach-sa1100/collie_pm.c:260:
+        ret = platform_device_add(collie_pm_device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/arm/mach-sa1100/collie_pm.c:262:
+        if (ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/arm/mach-sa1100/collie_pm.c:262:
+        if (ret)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/arm/mach-sa1100/collie_pm.c:263:
+                platform_device_put(collie_pm_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/arm/mach-sa1100/collie_pm.c:263:
+                platform_device_put(collie_pm_device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/arm/mach-sa1100/collie_pm.c:274:
+        platform_device_unregister(collie_pm_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/arm/mach-sa1100/collie_pm.c:274:
+        platform_device_unregister(collie_pm_device);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 31 warnings, 3 checks, 278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
