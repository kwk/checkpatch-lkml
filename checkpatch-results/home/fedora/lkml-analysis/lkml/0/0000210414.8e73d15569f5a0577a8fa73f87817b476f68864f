WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#71: FILE: drivers/serial/Kconfig:809:
+config SERIAL_VR41XX
+	tristate "NEC VR4100 series Serial Interface Unit support"
+	depends on CPU_VR41XX
+	select SERIAL_CORE
+	help
+	  If you have a NEC VR4100 series processor and you want to use
+	  Serial Interface Unit(SIU) or Debug Serial Interface Unit(DSIU)
+	  (not include VR4111/VR4121 DSIU), say Y.  Otherwise, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#80: FILE: drivers/serial/Kconfig:818:
+config SERIAL_VR41XX_CONSOLE
+	bool "Enable NEC VR4100 series Serial Interface Unit console"
+	depends on SERIAL_VR41XX
+	select SERIAL_CORE_CONSOLE
+	help
+	  If you have a NEC VR4100 series processor and you want to use
+	  a console on a serial port, say Y.  Otherwise, say N.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: drivers/serial/vr41xx_siu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#119: FILE: drivers/serial/vr41xx_siu.c:19:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#120: FILE: drivers/serial/vr41xx_siu.c:20:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#142: FILE: drivers/serial/vr41xx_siu.c:42:
+#include <asm/io.h>

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#157: FILE: drivers/serial/vr41xx_siu.c:57:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#185: FILE: drivers/serial/vr41xx_siu.c:85:
+static uint8_t lsr_break_flag[SIU_PORTS_MAX];

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: drivers/serial/vr41xx_siu.c:94:
+^I                          UART_FCR_CLEAR_XMIT);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#260: FILE: drivers/serial/vr41xx_siu.c:160:
+	uint8_t lsr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#271: FILE: drivers/serial/vr41xx_siu.c:171:
+	uint8_t mcr = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#289: FILE: drivers/serial/vr41xx_siu.c:189:
+	uint8_t msr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#308: FILE: drivers/serial/vr41xx_siu.c:208:
+	uint8_t ier;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#322: FILE: drivers/serial/vr41xx_siu.c:222:
+	uint8_t ier;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#336: FILE: drivers/serial/vr41xx_siu.c:236:
+	uint8_t ier;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#352: FILE: drivers/serial/vr41xx_siu.c:252:
+	uint8_t ier;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#366: FILE: drivers/serial/vr41xx_siu.c:266:
+	uint8_t lcr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/serial/vr41xx_siu.c:281:
+                                 struct pt_regs *regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/serial/vr41xx_siu.c:281:
+                                 struct pt_regs *regs)$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#384: FILE: drivers/serial/vr41xx_siu.c:284:
+	uint8_t lsr, ch;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: drivers/serial/vr41xx_siu.c:287:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: drivers/serial/vr41xx_siu.c:306:
+^I^I                    UART_LSR_PE | UART_LSR_OE))) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tty->flip.count < TTY_FLIPBUF_SIZE'
#435: FILE: drivers/serial/vr41xx_siu.c:335:
+		if ((lsr & UART_LSR_OE) && (tty->flip.count < TTY_FLIPBUF_SIZE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:INDENTED_LABEL: labels should not be indented
#438: FILE: drivers/serial/vr41xx_siu.c:338:
+	ignore_char:

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#449: FILE: drivers/serial/vr41xx_siu.c:349:
+	uint8_t msr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: drivers/serial/vr41xx_siu.c:362:
+^I$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#503: FILE: drivers/serial/vr41xx_siu.c:403:
+	uint8_t iir, lsr;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_id"
#505: FILE: drivers/serial/vr41xx_siu.c:405:
+	if (dev_id == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#566: FILE: drivers/serial/vr41xx_siu.c:466:
+	uint8_t lcr;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port->membase"
#568: FILE: drivers/serial/vr41xx_siu.c:468:
+	if (port->membase == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: drivers/serial/vr41xx_siu.c:495:
+                            struct termios *old)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/serial/vr41xx_siu.c:495:
+                            struct termios *old)$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#598: FILE: drivers/serial/vr41xx_siu.c:498:
+	uint8_t lcr, fcr, ier;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#627: FILE: drivers/serial/vr41xx_siu.c:527:
+	baud = uart_get_baud_rate(port, new, old, 0, port->uartclk/16);
 	                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_mem_region"
#725: FILE: drivers/serial/vr41xx_siu.c:625:
+	if (request_mem_region(port->mapbase, size, siu_type_name(port)) == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port->membase"
#730: FILE: drivers/serial/vr41xx_siu.c:630:
+		if (port->membase == NULL) {

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#755: FILE: drivers/serial/vr41xx_siu.c:655:
+static struct uart_ops siu_uart_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: drivers/serial/vr41xx_siu.c:718:
+                              struct termios *old)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: drivers/serial/vr41xx_siu.c:718:
+                              struct termios *old)$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#821: FILE: drivers/serial/vr41xx_siu.c:721:
+	uint8_t lcr;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#849: FILE: drivers/serial/vr41xx_siu.c:749:
+	baud = uart_get_baud_rate(port, new, old, 0, port->uartclk/16);
 	                                                          ^

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#860: FILE: drivers/serial/vr41xx_siu.c:760:
+static struct uart_ops early_uart_ops = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#869: FILE: drivers/serial/vr41xx_siu.c:769:
+	uint8_t lsr, msr;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#891: FILE: drivers/serial/vr41xx_siu.c:791:
+static void siu_console_write(struct console *con, const char *s, unsigned count)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#894: FILE: drivers/serial/vr41xx_siu.c:794:
+	uint8_t ier;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#895: FILE: drivers/serial/vr41xx_siu.c:795:
+	unsigned i;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port->membase"
#927: FILE: drivers/serial/vr41xx_siu.c:827:
+	if (port->membase == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "options"
#933: FILE: drivers/serial/vr41xx_siu.c:833:
+	if (options != NULL)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#951: FILE: drivers/serial/vr41xx_siu.c:851:
+static int __devinit siu_console_init(void)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#972: FILE: drivers/serial/vr41xx_siu.c:872:
+#define SERIAL_VR41XX_CONSOLE	&siu_console

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1051: FILE: drivers/serial/vr41xx_siu.c:951:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1085: FILE: drivers/serial/vr41xx_siu.c:985:
+static int __devinit vr41xx_siu_init(void)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1094: FILE: drivers/serial/vr41xx_siu.c:994:
+	if (retval < 0) {
+		platform_device_unregister(siu_platform_device);
+	}

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1101: FILE: drivers/serial/vr41xx_siu.c:1001:
+static void __devexit vr41xx_siu_exit(void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 16 warnings, 28 checks, 1076 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
