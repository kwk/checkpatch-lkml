WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
> Switching to Ed's code once it's in the kernel may be worthwhile; until then

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: fs/dcache.c:581:
+^I ^I * ext2_new_block->getblk->GFP->shrink_dcache_memory->$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: fs/dcache.c:581:
+^I ^I * ext2_new_block->getblk->GFP->shrink_dcache_memory->$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: fs/dcache.c:585:
+^I ^I *$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: fs/dcache.c:585:
+^I ^I *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: fs/dcache.c:586:
+^I ^I * We should make sure we don't hold the superblock lock over$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: fs/dcache.c:586:
+^I ^I * We should make sure we don't hold the superblock lock over$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/dcache.c:587:
+^I ^I * block allocations, but for now:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: fs/dcache.c:587:
+^I ^I * block allocations, but for now:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: fs/dcache.c:1332:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: fs/dquot.c:1506:
+^Idquot_cachep = kmem_cache_create("dquot", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: fs/dquot.c:1507:
+	dquot_cachep = kmem_cache_create("dquot", 
+			sizeof(struct dquot), sizeof(unsigned long) * 4,

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: fs/inode.c:430:
+^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#330: FILE: fs/inode.c:430:
+^I ^I */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: include/linux/mm.h:396:
+ * $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#372: FILE: include/linux/mm.h:414:
+extern struct shrinker *set_shrinker(int, shrinker_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#372: FILE: include/linux/mm.h:414:
+extern struct shrinker *set_shrinker(int, shrinker_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'shrinker_t' should also have an identifier name
#372: FILE: include/linux/mm.h:414:
+extern struct shrinker *set_shrinker(int, shrinker_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/linux/mm.h:415:
+extern void remove_shrinker(struct shrinker *shrinker);

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: mm/vmscan.c:99:
+        struct shrinker *shrinker;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: mm/vmscan.c:99:
+        struct shrinker *shrinker;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: mm/vmscan.c:101:
+        shrinker = kmalloc(sizeof(*shrinker), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: mm/vmscan.c:101:
+        shrinker = kmalloc(sizeof(*shrinker), GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: mm/vmscan.c:102:
+        if (shrinker) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: mm/vmscan.c:102:
+        if (shrinker) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: mm/vmscan.c:103:
+^I        shrinker->shrinker = theshrinker;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: mm/vmscan.c:104:
+^I        shrinker->seeks = seeks;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: mm/vmscan.c:105:
+^I        shrinker->nr = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: mm/vmscan.c:106:
+^I        down(&shrinker_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: mm/vmscan.c:107:
+^I        list_add(&shrinker->list, &shrinker_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: mm/vmscan.c:108:
+^I        up(&shrinker_sem);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: mm/vmscan.c:123:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: mm/vmscan.c:123:
+ $

WARNING:TYPO_SPELLING: 'encounted' may be misspelled - perhaps 'encountered'?
#441: FILE: mm/vmscan.c:133:
+ * If the vm encounted mapped pages on the LRU it increase the pressure on
              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: mm/vmscan.c:777:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: mm/vmscan.c:777:
+ $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#528: FILE: kernel/ksyms.c:109:
+EXPORT_SYMBOL(remove_shrinker);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424712.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 15 warnings, 3 checks, 415 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424712.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
