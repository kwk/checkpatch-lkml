WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#130: 
diff -urpN -X /home/axboe/cdrom/exclude /opt/kernel/linux-2.6.13-rc6-mm2/drivers/block/blktrace.c linux-2.6.13-rc6-mm2/drivers/block/blktrace.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#134: FILE: drivers/block/blktrace.c:1:
+#include <linux/config.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#138: FILE: drivers/block/blktrace.c:5:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: drivers/block/blktrace.c:17:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/block/blktrace.c:102:
+	bt->rchan = relay_open(bdevname(bdev, b), NULL, buts.buf_size,
+				buts.buf_nr, NULL);

CHECK:SPACING: No space is necessary after a cast
#242: FILE: drivers/block/blktrace.c:109:
+		bt->act_mask = (u16) -1;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#268: FILE: drivers/block/elevator.c:375:
 	while ((rq = __elv_next_request(q)) != NULL) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#290: FILE: drivers/block/ioctl.c:193:
+		return blk_start_trace(bdev, (char __user *) arg);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#303: FILE: drivers/block/Kconfig:422:
+config BLK_DEV_IO_TRACE
+	bool "Support for tracing block io actions"
+	select RELAYFS
+	help
+	  Say Y here, if you want to be able to trace the block layer actions
+	  on a given queue.
+
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#445: FILE: include/linux/blktrace.h:1:
+#ifndef BLKTRACE_H

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#494: FILE: include/linux/blktrace.h:50:
+#define BLK_TA_COMPLETE		(__BLK_TA_COMPLETE| BLK_TC_ACT(BLK_TC_COMPLETE))
                        		                  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#531: FILE: include/linux/blktrace.h:87:
+extern int blk_start_trace(struct block_device *, char __user *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#532: FILE: include/linux/blktrace.h:88:
+extern int blk_stop_trace(struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#532: FILE: include/linux/blktrace.h:88:
+extern int blk_stop_trace(struct block_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#533: FILE: include/linux/blktrace.h:89:
+extern void __blk_add_trace(struct blk_trace *, sector_t, int, int, u32, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blk_trace *' should also have an identifier name
#533: FILE: include/linux/blktrace.h:89:
+extern void __blk_add_trace(struct blk_trace *, sector_t, int, int, u32, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#533: FILE: include/linux/blktrace.h:89:
+extern void __blk_add_trace(struct blk_trace *, sector_t, int, int, u32, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#533: FILE: include/linux/blktrace.h:89:
+extern void __blk_add_trace(struct blk_trace *, sector_t, int, int, u32, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#533: FILE: include/linux/blktrace.h:89:
+extern void __blk_add_trace(struct blk_trace *, sector_t, int, int, u32, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#533: FILE: include/linux/blktrace.h:89:
+extern void __blk_add_trace(struct blk_trace *, sector_t, int, int, u32, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#533: FILE: include/linux/blktrace.h:89:
+extern void __blk_add_trace(struct blk_trace *, sector_t, int, int, u32, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#533: FILE: include/linux/blktrace.h:89:
+extern void __blk_add_trace(struct blk_trace *, sector_t, int, int, u32, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#533: FILE: include/linux/blktrace.h:89:
+extern void __blk_add_trace(struct blk_trace *, sector_t, int, int, u32, int, int, char *);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#546: FILE: include/linux/blktrace.h:102:
+		__blk_add_trace(bt, 0, rq->data_len, rw, what, rq->errors, sizeof(rq->cmd), rq->cmd);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#549: FILE: include/linux/blktrace.h:105:
+		__blk_add_trace(bt, rq->hard_sector, rq->hard_nr_sectors << 9, rw, what, rq->errors, 0, NULL);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#561: FILE: include/linux/blktrace.h:117:
+	__blk_add_trace(bt, bio->bi_sector, bio->bi_size, bio_data_dir(bio), what, !bio_flagged(bio, BIO_UPTODATE), 0, NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#594: FILE: include/linux/fs.h:199:
+#define BLKSTARTTRACE _IOWR(0x12,115,struct blk_user_trace_setup)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#594: FILE: include/linux/fs.h:199:
+#define BLKSTARTTRACE _IOWR(0x12,115,struct blk_user_trace_setup)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#595: FILE: include/linux/fs.h:200:
+#define BLKSTOPTRACE _IO(0x12,116)
                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: fs/relayfs/inode.c:310:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: fs/relayfs/inode.c:331:
+ *^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#684: FILE: fs/relayfs/inode.c:346:
+	if (read_subbuf == write_subbuf) {
[...]
 	} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: fs/relayfs/inode.c:383:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: fs/relayfs/inode.c:421:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#818: FILE: fs/relayfs/relay.c:68:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#835: FILE: fs/relayfs/relay.c:340:
+	printk(KERN_WARNING "relayfs: event too large (%lu)\n", length);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000157844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 18 warnings, 9 checks, 662 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000157844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
