WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#100: 
Yahoo! Messenger - NEW crystal clear PC to PC calling worldwide with voicemail http://uk.messenger.yahoo.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#139: FILE: drivers/spi/Kconfig:7:
+config SPI
+	tristate "SPI support"
+	---help---
+	  SPI  is a simple serial bus protocol used in many micro controller.
+
+	  If you want SPI support, you should say Y here and also to the
+	  specific driver for your bus adapter(s) below.
+
+	  This SPI support can also be built as a module.  If so, the module
+	  will be called spi-core.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#155: FILE: drivers/spi/Kconfig:23:
+config SPI_DEBUG_CORE
+	bool "SPI Core debugging messages"
+	depends on SPI
+	help
+	  Say Y here if you want the SPI core to produce a bunch of debug
+	  messages to the system log.  Select this if you are having a
+	  problem with SPI support and want to see more of what is going on.
+

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#203: FILE: drivers/spi/Makefile:9:
+EXTRA_CFLAGS += -DDEBUG

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/spi/algos/Kconfig:16:
+^I  This support is also available as a module.  If so, the module $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#239: FILE: drivers/spi/algos/Makefile:8:
+EXTRA_CFLAGS += -DDEBUG

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: drivers/spi/busses/Kconfig:6:
+^Idepends on SPI^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/spi/busses/Kconfig:7:
+^I^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#252: FILE: drivers/spi/busses/Kconfig:8:
+config SPI_BUS_TEST
+	tristate "Dummy SPI adapter used only for testing the subsystem"
+	depends on SPI
+	help
+	  See above ;)
+
+	  This support is also available as a module.  If so, the module 
+	  will be called spi-bus-test.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: drivers/spi/busses/Kconfig:14:
+^I  This support is also available as a module.  If so, the module $

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#273: FILE: drivers/spi/busses/Makefile:8:
+EXTRA_CFLAGS += -DDEBUG

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#279: FILE: drivers/spi/busses/spi-bus-test.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: drivers/spi/busses/spi-bus-test.c:24:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#315: FILE: drivers/spi/busses/spi-bus-test.c:37:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: drivers/spi/busses/spi-bus-test.c:41:
+^Istruct platform_device *pdev = to_platform_device(dev);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: drivers/spi/busses/spi-bus-test.c:43:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#322: FILE: drivers/spi/busses/spi-bus-test.c:44:
+	printk("spi_test_probe\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spi_test_probe', this function's name, in a string
#322: FILE: drivers/spi/busses/spi-bus-test.c:44:
+	printk("spi_test_probe\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sadap)...) over kmalloc(sizeof(struct spi_adapter)...)
#324: FILE: drivers/spi/busses/spi-bus-test.c:46:
+	sadap = kmalloc(sizeof(struct spi_adapter), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#325: FILE: drivers/spi/busses/spi-bus-test.c:47:
+	if(!sadap)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: drivers/spi/busses/spi-bus-test.c:47:
+	if(!sadap)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#332: FILE: drivers/spi/busses/spi-bus-test.c:54:
+	sadap->cs_table = ((struct spi_platform_data*) (pdev->dev.platform_data))->cs_table;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#332: FILE: drivers/spi/busses/spi-bus-test.c:54:
+	sadap->cs_table = ((struct spi_platform_data*) (pdev->dev.platform_data))->cs_table;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#333: FILE: drivers/spi/busses/spi-bus-test.c:55:
+	sadap->max_cs = ((struct spi_platform_data*) (pdev->dev.platform_data))->max_cs;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#333: FILE: drivers/spi/busses/spi-bus-test.c:55:
+	sadap->max_cs = ((struct spi_platform_data*) (pdev->dev.platform_data))->max_cs;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/spi/busses/spi-bus-test.c:58:
+^Idev_set_drvdata(dev,sadap);^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#336: FILE: drivers/spi/busses/spi-bus-test.c:58:
+	dev_set_drvdata(dev,sadap);		
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#337: FILE: drivers/spi/busses/spi-bus-test.c:59:
+	stat=spi_add_adapter(sadap);
 	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/spi/busses/spi-bus-test.c:68:
+^Istruct spi_adapter *adap = dev_get_drvdata(dev);^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#348: FILE: drivers/spi/busses/spi-bus-test.c:70:
+	printk("spi_test_remove\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spi_test_remove', this function's name, in a string
#348: FILE: drivers/spi/busses/spi-bus-test.c:70:
+	printk("spi_test_remove\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#350: FILE: drivers/spi/busses/spi-bus-test.c:72:
+	if (spi_del_adapter(adap))
+	{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#352: FILE: drivers/spi/busses/spi-bus-test.c:74:
+		printk("Fialed to remove adapter\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: drivers/spi/busses/spi-bus-test.c:87:
+^Iif (ret)^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: drivers/spi/busses/spi-bus-test.c:99:
+module_exit (spi_test_cleanup);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: drivers/spi/chips/Kconfig:13:
+^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: drivers/spi/chips/Kconfig:15:
+^I  will be called spi_foo.^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: drivers/spi/chips/Kconfig:22:
+^I  $

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#420: FILE: drivers/spi/chips/Makefile:5:
+EXTRA_CFLAGS	:= -Idrivers/misc

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#426: FILE: drivers/spi/chips/Makefile:11:
+EXTRA_CFLAGS += -DDEBUG

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#432: FILE: drivers/spi/chips/spi-bar.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#453: FILE: drivers/spi/chips/spi-bar.c:22:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#461: FILE: drivers/spi/chips/spi-bar.c:30:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#469: FILE: drivers/spi/chips/spi-bar.c:38:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/spi/chips/spi-bar.c:40:
+{^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#472: FILE: drivers/spi/chips/spi-bar.c:41:
+	printk("bar_probe\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bar_probe', this function's name, in a string
#472: FILE: drivers/spi/chips/spi-bar.c:41:
+	printk("bar_probe\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#479: FILE: drivers/spi/chips/spi-bar.c:48:
+	printk("bar_remove\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bar_remove', this function's name, in a string
#479: FILE: drivers/spi/chips/spi-bar.c:48:
+	printk("bar_remove\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#483: FILE: drivers/spi/chips/spi-bar.c:52:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#489: FILE: drivers/spi/chips/spi-bar.c:58:
+	if ((res = spi_driver_register(&bar_driver))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#490: FILE: drivers/spi/chips/spi-bar.c:59:
+		printk("spi-bar: Driver registration failed, module not inserted.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: drivers/spi/chips/spi-bar.c:62:
+        return 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/spi/chips/spi-bar.c:62:
+        return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#511: FILE: drivers/spi/chips/spi-foo.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#532: FILE: drivers/spi/chips/spi-foo.c:22:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#540: FILE: drivers/spi/chips/spi-foo.c:30:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#548: FILE: drivers/spi/chips/spi-foo.c:38:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: drivers/spi/chips/spi-foo.c:40:
+{^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#551: FILE: drivers/spi/chips/spi-foo.c:41:
+	printk("foo_probe\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'foo_probe', this function's name, in a string
#551: FILE: drivers/spi/chips/spi-foo.c:41:
+	printk("foo_probe\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#558: FILE: drivers/spi/chips/spi-foo.c:48:
+	printk("foo_remove\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'foo_remove', this function's name, in a string
#558: FILE: drivers/spi/chips/spi-foo.c:48:
+	printk("foo_remove\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#562: FILE: drivers/spi/chips/spi-foo.c:52:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#568: FILE: drivers/spi/chips/spi-foo.c:58:
+	if ((res = spi_driver_register(&foo_driver))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#569: FILE: drivers/spi/chips/spi-foo.c:59:
+		printk("spi-foo: Driver registration failed, module not inserted.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: drivers/spi/chips/spi-foo.c:62:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: drivers/spi/chips/spi-foo.c:62:
+        return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#590: FILE: drivers/spi/spi-core.c:1:
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#618: FILE: drivers/spi/spi-core.c:29:
+void __spi_device_unregister(struct spi_device * sdev);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#618: FILE: drivers/spi/spi-core.c:29:
+void __spi_device_unregister(struct spi_device * sdev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#619: FILE: drivers/spi/spi-core.c:30:
+int __spi_device_register(struct spi_device * sdev);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#619: FILE: drivers/spi/spi-core.c:30:
+int __spi_device_register(struct spi_device * sdev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#628: FILE: drivers/spi/spi-core.c:39:
+	struct spi_device *sdev = to_spi_device(dev);
+	return sprintf(buf, "%s\n", sdev->name);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_client_name' to 'device_name_show'
#629: FILE: drivers/spi/spi-core.c:40:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#631: FILE: drivers/spi/spi-core.c:42:
+static DEVICE_ATTR(device_name, S_IRUGO, show_client_name, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#640: FILE: drivers/spi/spi-core.c:51:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#644: FILE: drivers/spi/spi-core.c:55:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: drivers/spi/spi-core.c:60:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: drivers/spi/spi-core.c:65:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: drivers/spi/spi-core.c:75:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: drivers/spi/spi-core.c:84:
+/**********************************************/^I$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_adap_dev_name' to 'adap_dev_name_show'
#689: FILE: drivers/spi/spi-core.c:100:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#691: FILE: drivers/spi/spi-core.c:102:
+static DEVICE_ATTR(adap_dev_name, S_IRUGO, show_adap_dev_name, NULL);

WARNING:TYPO_SPELLING: 'calss' may be misspelled - perhaps 'calls'?
#694: FILE: drivers/spi/spi-core.c:105:
+ * calss device is registered.
    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: drivers/spi/spi-core.c:114:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#710: FILE: drivers/spi/spi-core.c:121:
+	for (i=0;i<adap->max_cs;i++)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#710: FILE: drivers/spi/spi-core.c:121:
+	for (i=0;i<adap->max_cs;i++)
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#710: FILE: drivers/spi/spi-core.c:121:
+	for (i=0;i<adap->max_cs;i++)
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#710: FILE: drivers/spi/spi-core.c:121:
+	for (i=0;i<adap->max_cs;i++)
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#710: FILE: drivers/spi/spi-core.c:121:
+	for (i=0;i<adap->max_cs;i++)
 	                       ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_device)...) over kmalloc(sizeof(struct spi_device)...)
#712: FILE: drivers/spi/spi-core.c:123:
+		new_device = kmalloc(sizeof(struct spi_device), GFP_KERNEL);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#713: FILE: drivers/spi/spi-core.c:124:
+		if (!new_device)
+		{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#718: FILE: drivers/spi/spi-core.c:129:
+		memset(new_device,0,sizeof(struct spi_device));
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#718: FILE: drivers/spi/spi-core.c:129:
+		memset(new_device,0,sizeof(struct spi_device));
 		                   ^

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#720: FILE: drivers/spi/spi-core.c:131:
+		strlcpy(new_device->name, adap->cs_table[i].name, SPI_NAME_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: drivers/spi/spi-core.c:139:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#737: FILE: drivers/spi/spi-core.c:148:
+	for (j=0;j<(i-1);j++)
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#737: FILE: drivers/spi/spi-core.c:148:
+	for (j=0;j<(i-1);j++)
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#737: FILE: drivers/spi/spi-core.c:148:
+	for (j=0;j<(i-1);j++)
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#737: FILE: drivers/spi/spi-core.c:148:
+	for (j=0;j<(i-1);j++)
 	             ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#737: FILE: drivers/spi/spi-core.c:148:
+	for (j=0;j<(i-1);j++)
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#753: FILE: drivers/spi/spi-core.c:164:
+		pr_debug("Removing %s from cs %d\n",sdev->name, sdev->cs_no);
 		                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: drivers/spi/spi-core.c:166:
+^I}^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#758: FILE: drivers/spi/spi-core.c:169:
+        flush_workqueue(adap->work_queue);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: drivers/spi/spi-core.c:169:
+        flush_workqueue(adap->work_queue);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#760: FILE: drivers/spi/spi-core.c:171:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#770: FILE: drivers/spi/spi-core.c:181:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#790: FILE: drivers/spi/spi-core.c:201:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: drivers/spi/spi-core.c:201:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#795: FILE: drivers/spi/spi-core.c:206:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: drivers/spi/spi-core.c:211:
+/* This function is called within the work queue context to $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#803: FILE: drivers/spi/spi-core.c:214:
+void spi_find_work_queue_current(void * info)

CHECK:SPACING: No space is necessary after a cast
#805: FILE: drivers/spi/spi-core.c:216:
+	struct spi_adapter * adap = (struct spi_adapter *) info;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#805: FILE: drivers/spi/spi-core.c:216:
+	struct spi_adapter * adap = (struct spi_adapter *) info;

ERROR:SPACING: space required before the open parenthesis '('
#807: FILE: drivers/spi/spi-core.c:218:
+	if(adap)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#811: FILE: drivers/spi/spi-core.c:222:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#818: FILE: drivers/spi/spi-core.c:229:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#827: FILE: drivers/spi/spi-core.c:238:
+int __spi_device_register(struct spi_device * sdev)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#835: FILE: drivers/spi/spi-core.c:246:
+	if (!sdev->dev.parent)
+	{

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#837: FILE: drivers/spi/spi-core.c:248:
+		printk("parent pointer must be set to the SPI adapter the the device is on\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#837: FILE: drivers/spi/spi-core.c:248:
+		printk("parent pointer must be set to the SPI adapter the the device is on\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: drivers/spi/spi-core.c:254:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#845: FILE: drivers/spi/spi-core.c:256:
+	snprintf(sdev->dev.bus_id, BUS_ID_SIZE,
+		"%d-%04x", spi_adapter_id(sdev->adapter), sdev->cs_no);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#866: FILE: drivers/spi/spi-core.c:277:
+void __spi_device_unregister(struct spi_device * sdev)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#881: FILE: drivers/spi/spi-core.c:292:
+	switch (progress)
+	{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#905: FILE: drivers/spi/spi-core.c:316:
+	struct work_struct * find_current;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#914: FILE: drivers/spi/spi-core.c:325:
+		if (res == -EAGAIN)
+		{

ERROR:CODE_INDENT: code indent should use tabs where possible
#928: FILE: drivers/spi/spi-core.c:339:
+        /* begin setting up the work queue for each adapter */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#932: FILE: drivers/spi/spi-core.c:343:
+	find_current = kmalloc(sizeof (struct work_struct),GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#932: FILE: drivers/spi/spi-core.c:343:
+	find_current = kmalloc(sizeof (struct work_struct),GFP_KERNEL);
 	                                                  ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*find_current)...) over kmalloc(sizeof (struct work_struct)...)
#932: FILE: drivers/spi/spi-core.c:343:
+	find_current = kmalloc(sizeof (struct work_struct),GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#933: FILE: drivers/spi/spi-core.c:344:
+	INIT_WORK(find_current,spi_find_work_queue_current, (void *) adap);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#933: FILE: drivers/spi/spi-core.c:344:
+	INIT_WORK(find_current,spi_find_work_queue_current, (void *) adap);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#934: FILE: drivers/spi/spi-core.c:345:
+	queue_work(adap->work_queue,find_current);
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#935: FILE: drivers/spi/spi-core.c:346:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adap->dev.parent"
#940: FILE: drivers/spi/spi-core.c:351:
+	if (adap->dev.parent == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#959: FILE: drivers/spi/spi-core.c:370:
+	strlcpy(adap->class_dev.class_id, adap->dev.bus_id, BUS_ID_SIZE);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#961: FILE: drivers/spi/spi-core.c:372:
+	if (res)
+	{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#992: FILE: drivers/spi/spi-core.c:403:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1034: FILE: drivers/spi/spi-core.c:445:
+int spi_device_register(struct spi_device * sdev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1038: FILE: drivers/spi/spi-core.c:449:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1051: FILE: drivers/spi/spi-core.c:462:
+void spi_device_unregister(struct spi_device * sdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1076: FILE: drivers/spi/spi-core.c:487:
+static int spi_match(struct device * dev, struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1076: FILE: drivers/spi/spi-core.c:487:
+static int spi_match(struct device * dev, struct device_driver * drv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1080: FILE: drivers/spi/spi-core.c:491:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1085: FILE: drivers/spi/spi-core.c:496:
+static int spi_suspend(struct device * dev, u32 state)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1116: FILE: drivers/spi/spi-core.c:527:
+static int spi_resume(struct device * dev)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1156: FILE: drivers/spi/spi-core.c:567:
+EXPORT_SYMBOL_GPL(spi_bus_type);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1158: FILE: drivers/spi/spi-core.c:569:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1163: FILE: drivers/spi/spi-core.c:574:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1178: FILE: drivers/spi/spi-core.c:589:
+^Iprogress = SPI_CORE_CLASS;^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1190: FILE: drivers/spi/spi-core.c:601:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: drivers/spi/test/Kconfig:16:
+^I  This support is also available as a module.  If so, the module $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1239: FILE: drivers/spi/test/my_platform.c:1:
+/*

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1321: FILE: drivers/spi/test/my_platform.c:83:
+static struct platform_device spi_test_dev1= {
                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1330: FILE: drivers/spi/test/my_platform.c:92:
+static struct platform_device spi_test_dev2= {
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1343: FILE: drivers/spi/test/my_platform.c:105:
+        ret = platform_device_register(&spi_test_dev1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: drivers/spi/test/my_platform.c:105:
+        ret = platform_device_register(&spi_test_dev1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1347: FILE: drivers/spi/test/my_platform.c:109:
+        ret = platform_device_register(&spi_test_dev2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: drivers/spi/test/my_platform.c:109:
+        ret = platform_device_register(&spi_test_dev2);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1376: FILE: include/linux/spi.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1377: FILE: include/linux/spi.h:2:
+ *  include/linux/spi.h - The spi subsystem header file

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1414: FILE: include/linux/spi.h:39:
+extern int spi_transfer(struct spi_msg * msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1414: FILE: include/linux/spi.h:39:
+extern int spi_transfer(struct spi_msg * msg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1416: FILE: include/linux/spi.h:41:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1425: FILE: include/linux/spi.h:50:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1425: FILE: include/linux/spi.h:50:
+ $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1431: FILE: include/linux/spi.h:56:
+	int (*probe)(struct device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1432: FILE: include/linux/spi.h:57:
+	int (*remove)(struct device *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1434: FILE: include/linux/spi.h:59:
+	int (*command)(struct device *,unsigned int cmd, void *arg);
 	                              ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1434: FILE: include/linux/spi.h:59:
+	int (*command)(struct device *,unsigned int cmd, void *arg);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1439: FILE: include/linux/spi.h:64:
+};
+#define to_spi_driver(d) container_of(d, struct spi_driver, driver)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1441: FILE: include/linux/spi.h:66:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1444: FILE: include/linux/spi.h:69:
+^Iint ^Iid;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1450: FILE: include/linux/spi.h:75:
+^I^I^I^I^I/* slave can handle in HZ.      */ $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1457: FILE: include/linux/spi.h:82:
+};
+#define to_spi_device(x) container_of((x), struct spi_device, dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1470: FILE: include/linux/spi.h:95:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1484: FILE: include/linux/spi.h:109:
+#ifdef CONFIG_PROC_FS $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1487: FILE: include/linux/spi.h:112:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1487: FILE: include/linux/spi.h:112:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: include/linux/spi.h:112:
+        $

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1489: FILE: include/linux/spi.h:114:
+	int (*spi_adap_cs)(struct spi_adapter *,int id,int val);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1489: FILE: include/linux/spi.h:114:
+	int (*spi_adap_cs)(struct spi_adapter *,int id,int val);
 	                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1490: FILE: include/linux/spi.h:115:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1490: FILE: include/linux/spi.h:115:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: include/linux/spi.h:115:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1491: FILE: include/linux/spi.h:116:
+        /* Set the SPI clock speed. */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_adapter *' should also have an identifier name
#1492: FILE: include/linux/spi.h:117:
+	void (*set_spi_adap_clock)(struct spi_adapter *, int clock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1493: FILE: include/linux/spi.h:118:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1493: FILE: include/linux/spi.h:118:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1493: FILE: include/linux/spi.h:118:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1494: FILE: include/linux/spi.h:119:
+        /* table of assigned spi devices to this adapter */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1497: FILE: include/linux/spi.h:122:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1499: FILE: include/linux/spi.h:124:
+	struct workqueue_struct * work_queue;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1500: FILE: include/linux/spi.h:125:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1502: FILE: include/linux/spi.h:127:
+	void * work_queue_current;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1504: FILE: include/linux/spi.h:129:
+};
+#define dev_to_spi_adapter(d) container_of(d, struct spi_adapter, dev)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1513: FILE: include/linux/spi.h:138:
+^Ichar name[32];     /* textual description ^I*/$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1516: FILE: include/linux/spi.h:141:
+	int (*master_xfer)(struct spi_msg * msg);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1519: FILE: include/linux/spi.h:144:
+	int (*slave_send)(struct spi_adapter *,char*,int);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1519: FILE: include/linux/spi.h:144:
+	int (*slave_send)(struct spi_adapter *,char*,int);
 	                                            ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_adapter *' should also have an identifier name
#1519: FILE: include/linux/spi.h:144:
+	int (*slave_send)(struct spi_adapter *,char*,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#1519: FILE: include/linux/spi.h:144:
+	int (*slave_send)(struct spi_adapter *,char*,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1519: FILE: include/linux/spi.h:144:
+	int (*slave_send)(struct spi_adapter *,char*,int);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1520: FILE: include/linux/spi.h:145:
+	int (*slave_recv)(struct spi_adapter *,char*,int);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1520: FILE: include/linux/spi.h:145:
+	int (*slave_recv)(struct spi_adapter *,char*,int);
 	                                            ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_adapter *' should also have an identifier name
#1520: FILE: include/linux/spi.h:145:
+	int (*slave_recv)(struct spi_adapter *,char*,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#1520: FILE: include/linux/spi.h:145:
+	int (*slave_recv)(struct spi_adapter *,char*,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1520: FILE: include/linux/spi.h:145:
+	int (*slave_recv)(struct spi_adapter *,char*,int);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1542: FILE: include/linux/spi.h:167:
+#define SPI_CS_IDLE_LOW   0 $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1546: FILE: include/linux/spi.h:171:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1550: FILE: include/linux/spi.h:175:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1550: FILE: include/linux/spi.h:175:
+ $

WARNING:SPACING: Unnecessary space before function pointer name
#1552: FILE: include/linux/spi.h:177:
+	int (* spi_adap_cs)(struct spi_adapter *,int id,int val);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1552: FILE: include/linux/spi.h:177:
+	int (* spi_adap_cs)(struct spi_adapter *,int id,int val);
 	     ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1552: FILE: include/linux/spi.h:177:
+	int (* spi_adap_cs)(struct spi_adapter *,int id,int val);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1552: FILE: include/linux/spi.h:177:
+	int (* spi_adap_cs)(struct spi_adapter *,int id,int val);
 	                                               ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_adapter *' should also have an identifier name
#1552: FILE: include/linux/spi.h:177:
+	int (* spi_adap_cs)(struct spi_adapter *,int id,int val);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1554: FILE: include/linux/spi.h:179:
+        int max_cs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1554: FILE: include/linux/spi.h:179:
+        int max_cs;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1563: FILE: include/linux/spi.h:188:
+static inline void *spi_get_adapdata (struct spi_adapter *dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1565: FILE: include/linux/spi.h:190:
+	return dev_get_drvdata (&dev->dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1568: FILE: include/linux/spi.h:193:
+static inline void spi_set_adapdata (struct spi_adapter *dev, void *data)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1570: FILE: include/linux/spi.h:195:
+	dev_set_drvdata (&dev->dev, data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1577: FILE: include/linux/spi.h:202:
+extern int spi_device_register(struct spi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1578: FILE: include/linux/spi.h:203:
+extern void spi_device_unregister(struct spi_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_device *' should also have an identifier name
#1578: FILE: include/linux/spi.h:203:
+extern void spi_device_unregister(struct spi_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1580: FILE: include/linux/spi.h:205:
+extern int spi_driver_register(struct spi_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_driver *' should also have an identifier name
#1580: FILE: include/linux/spi.h:205:
+extern int spi_driver_register(struct spi_driver *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1581: FILE: include/linux/spi.h:206:
+extern int spi_driver_unregister(struct spi_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_driver *' should also have an identifier name
#1581: FILE: include/linux/spi.h:206:
+extern int spi_driver_unregister(struct spi_driver *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1583: FILE: include/linux/spi.h:208:
+extern int spi_add_adapter(struct spi_adapter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_adapter *' should also have an identifier name
#1583: FILE: include/linux/spi.h:208:
+extern int spi_add_adapter(struct spi_adapter *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1584: FILE: include/linux/spi.h:209:
+extern int spi_del_adapter(struct spi_adapter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_adapter *' should also have an identifier name
#1584: FILE: include/linux/spi.h:209:
+extern int spi_del_adapter(struct spi_adapter *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1586: FILE: include/linux/spi.h:211:
+/* A SPI message is an atomic sequence of read/write operations $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1590: FILE: include/linux/spi.h:215:
+struct spi_items $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1591: FILE: include/linux/spi.h:216:
+struct spi_items 
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1592: FILE: include/linux/spi.h:217:
+^Iunsigned char flags;^I/* mode flags                            */^I$

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#1596: FILE: include/linux/spi.h:221:
+#define SPI_M_CS    0x08	/* CS active level at begining of frame  */
                         	                      ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1609: FILE: include/linux/spi.h:234:
+struct spi_msg $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1610: FILE: include/linux/spi.h:235:
+struct spi_msg 
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1614: FILE: include/linux/spi.h:239:
+	void               (*callback)(struct spi_msg * id);	/* pointer to callback function, */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1615: FILE: include/linux/spi.h:240:
+^I^I^I^I^I^I^I^I/* which can see the message     */^I$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#1615: FILE: include/linux/spi.h:240:
+								/* which can see the message     */	

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1622: FILE: include/linux/spi.h:247:
+^I^I^I^I^I^I/* transfer list                   */     $

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msg' may be better as '(msg)' to avoid precedence issues
#1631: FILE: include/linux/spi.h:256:
+#define spi_priv(msg) (msg->priv)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1633: FILE: include/linux/spi.h:258:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154764.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 123 errors, 83 warnings, 43 checks, 1457 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154764.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
