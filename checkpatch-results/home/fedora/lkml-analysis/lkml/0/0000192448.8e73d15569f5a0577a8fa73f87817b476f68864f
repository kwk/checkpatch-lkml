WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#65: 
--- linux-2.6.11.src/include/asm-i386/string.h.orig	Thu Mar  3 09:31:08 2005

WARNING:IF_1: Consider removing the #if 1 and its #endif
#80: FILE: include/asm-i386/string.h:203:
+#if 1	/* want to pay 2 byte penalty for a chance to skip microcoded rep? */

CHECK:SPACING: No space is necessary after a cast
#87: FILE: include/asm-i386/string.h:209:
+	: "0" (n/4), "g" (n), "1" ((long) to), "2" ((long) from)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#87: FILE: include/asm-i386/string.h:209:
+	: "0" (n/4), "g" (n), "1" ((long) to), "2" ((long) from)
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: include/asm-i386/string.h:221:
+	long esi, edi;
+	if (!n) return to;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#112: FILE: include/asm-i386/string.h:221:
+	if (!n) return to;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:IF_1: Consider removing the #if 1 and its #endif
#113: FILE: include/asm-i386/string.h:222:
+#if 1	/* want to do small copies with non-string ops? */

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#114: FILE: include/asm-i386/string.h:223:
+	switch (n) {
+		case 1: *(char*)to = *(char*)from; return to;
+		case 2: *(short*)to = *(short*)from; return to;
+		case 4: *(int*)to = *(int*)from; return to;
[...]
+		case 3: *(short*)to = *(short*)from;
[...]
+		case 5: *(int*)to = *(int*)from;
[...]
+		case 6: *(int*)to = *(int*)from;
[...]
+		case 8: *(int*)to = *(int*)from;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#115: FILE: include/asm-i386/string.h:224:
+		case 1: *(char*)to = *(char*)from; return to;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#115: FILE: include/asm-i386/string.h:224:
+		case 1: *(char*)to = *(char*)from; return to;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#115: FILE: include/asm-i386/string.h:224:
+		case 1: *(char*)to = *(char*)from; return to;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#116: FILE: include/asm-i386/string.h:225:
+		case 2: *(short*)to = *(short*)from; return to;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#116: FILE: include/asm-i386/string.h:225:
+		case 2: *(short*)to = *(short*)from; return to;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#116: FILE: include/asm-i386/string.h:225:
+		case 2: *(short*)to = *(short*)from; return to;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#117: FILE: include/asm-i386/string.h:226:
+		case 4: *(int*)to = *(int*)from; return to;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#117: FILE: include/asm-i386/string.h:226:
+		case 4: *(int*)to = *(int*)from; return to;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#117: FILE: include/asm-i386/string.h:226:
+		case 4: *(int*)to = *(int*)from; return to;

WARNING:IF_1: Consider removing the #if 1 and its #endif
#118: FILE: include/asm-i386/string.h:227:
+#if 1	/* including those doable with two moves? */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#119: FILE: include/asm-i386/string.h:228:
+		case 3: *(short*)to = *(short*)from;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#119: FILE: include/asm-i386/string.h:228:
+		case 3: *(short*)to = *(short*)from;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#119: FILE: include/asm-i386/string.h:228:
+		case 3: *(short*)to = *(short*)from;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#120: FILE: include/asm-i386/string.h:229:
+			*((char*)to+2) = *((char*)from+2); return to;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#120: FILE: include/asm-i386/string.h:229:
+			*((char*)to+2) = *((char*)from+2); return to;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#120: FILE: include/asm-i386/string.h:229:
+			*((char*)to+2) = *((char*)from+2); return to;
 			           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#120: FILE: include/asm-i386/string.h:229:
+			*((char*)to+2) = *((char*)from+2); return to;
 			                              ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#121: FILE: include/asm-i386/string.h:230:
+		case 5: *(int*)to = *(int*)from;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#121: FILE: include/asm-i386/string.h:230:
+		case 5: *(int*)to = *(int*)from;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#121: FILE: include/asm-i386/string.h:230:
+		case 5: *(int*)to = *(int*)from;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#122: FILE: include/asm-i386/string.h:231:
+			*((char*)to+4) = *((char*)from+4); return to;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#122: FILE: include/asm-i386/string.h:231:
+			*((char*)to+4) = *((char*)from+4); return to;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#122: FILE: include/asm-i386/string.h:231:
+			*((char*)to+4) = *((char*)from+4); return to;
 			           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#122: FILE: include/asm-i386/string.h:231:
+			*((char*)to+4) = *((char*)from+4); return to;
 			                              ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#123: FILE: include/asm-i386/string.h:232:
+		case 6: *(int*)to = *(int*)from;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#123: FILE: include/asm-i386/string.h:232:
+		case 6: *(int*)to = *(int*)from;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#123: FILE: include/asm-i386/string.h:232:
+		case 6: *(int*)to = *(int*)from;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#124: FILE: include/asm-i386/string.h:233:
+			*((short*)to+2) = *((short*)from+2); return to;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#124: FILE: include/asm-i386/string.h:233:
+			*((short*)to+2) = *((short*)from+2); return to;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#124: FILE: include/asm-i386/string.h:233:
+			*((short*)to+2) = *((short*)from+2); return to;
 			            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#124: FILE: include/asm-i386/string.h:233:
+			*((short*)to+2) = *((short*)from+2); return to;
 			                                ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#125: FILE: include/asm-i386/string.h:234:
+		case 8: *(int*)to = *(int*)from;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#125: FILE: include/asm-i386/string.h:234:
+		case 8: *(int*)to = *(int*)from;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#125: FILE: include/asm-i386/string.h:234:
+		case 8: *(int*)to = *(int*)from;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#126: FILE: include/asm-i386/string.h:235:
+			*((int*)to+1) = *((int*)from+1); return to;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#126: FILE: include/asm-i386/string.h:235:
+			*((int*)to+1) = *((int*)from+1); return to;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: include/asm-i386/string.h:235:
+			*((int*)to+1) = *((int*)from+1); return to;
 			          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: include/asm-i386/string.h:235:
+			*((int*)to+1) = *((int*)from+1); return to;
 			                            ^

CHECK:SPACING: No space is necessary after a cast
#130: FILE: include/asm-i386/string.h:239:
+	esi = (long) from;

CHECK:SPACING: No space is necessary after a cast
#131: FILE: include/asm-i386/string.h:240:
+	edi = (long) to;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#132: FILE: include/asm-i386/string.h:241:
+	if (n >= 5*4) {
 	          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: include/asm-i386/string.h:244:
+		int ecx;
+		__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#135: FILE: include/asm-i386/string.h:244:
+		__asm__ __volatile__(

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#138: FILE: include/asm-i386/string.h:247:
+			: "0" (n/4), "1" (edi),"2" (esi)
 			        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#138: FILE: include/asm-i386/string.h:247:
+			: "0" (n/4), "1" (edi),"2" (esi)
 			                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#143: FILE: include/asm-i386/string.h:252:
+		if (n >= 4*4) __asm__ __volatile__("movsl"
 		          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#143: FILE: include/asm-i386/string.h:252:
+		if (n >= 4*4) __asm__ __volatile__("movsl"

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#144: FILE: include/asm-i386/string.h:253:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: include/asm-i386/string.h:253:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#144: FILE: include/asm-i386/string.h:253:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: include/asm-i386/string.h:253:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#144: FILE: include/asm-i386/string.h:253:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#145: FILE: include/asm-i386/string.h:254:
+		if (n >= 3*4) __asm__ __volatile__("movsl"
 		          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#145: FILE: include/asm-i386/string.h:254:
+		if (n >= 3*4) __asm__ __volatile__("movsl"

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#146: FILE: include/asm-i386/string.h:255:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: include/asm-i386/string.h:255:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#146: FILE: include/asm-i386/string.h:255:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: include/asm-i386/string.h:255:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#146: FILE: include/asm-i386/string.h:255:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#147: FILE: include/asm-i386/string.h:256:
+		if (n >= 2*4) __asm__ __volatile__("movsl"
 		          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#147: FILE: include/asm-i386/string.h:256:
+		if (n >= 2*4) __asm__ __volatile__("movsl"

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#148: FILE: include/asm-i386/string.h:257:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#148: FILE: include/asm-i386/string.h:257:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#148: FILE: include/asm-i386/string.h:257:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#148: FILE: include/asm-i386/string.h:257:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#148: FILE: include/asm-i386/string.h:257:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#149: FILE: include/asm-i386/string.h:258:
+		if (n >= 1*4) __asm__ __volatile__("movsl"
 		          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#149: FILE: include/asm-i386/string.h:258:
+		if (n >= 1*4) __asm__ __volatile__("movsl"

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#150: FILE: include/asm-i386/string.h:259:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: include/asm-i386/string.h:259:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#150: FILE: include/asm-i386/string.h:259:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: include/asm-i386/string.h:259:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#150: FILE: include/asm-i386/string.h:259:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                                        ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#152: FILE: include/asm-i386/string.h:261:
 	switch (n % 4) {
[...]
+		case 0: return to;
+		case 1: __asm__ __volatile__("movsb"
[...]
+		case 2: __asm__ __volatile__("movsw"
[...]
+		default: __asm__ __volatile__("movsw\n\tmovsb"

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#159: FILE: include/asm-i386/string.h:264:
+		case 1: __asm__ __volatile__("movsb"

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#160: FILE: include/asm-i386/string.h:265:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: include/asm-i386/string.h:265:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#160: FILE: include/asm-i386/string.h:265:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: include/asm-i386/string.h:265:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#160: FILE: include/asm-i386/string.h:265:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#162: FILE: include/asm-i386/string.h:267:
+		case 2: __asm__ __volatile__("movsw"

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#163: FILE: include/asm-i386/string.h:268:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: include/asm-i386/string.h:268:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#163: FILE: include/asm-i386/string.h:268:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: include/asm-i386/string.h:268:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#163: FILE: include/asm-i386/string.h:268:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#165: FILE: include/asm-i386/string.h:270:
+		default: __asm__ __volatile__("movsw\n\tmovsb"

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#166: FILE: include/asm-i386/string.h:271:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#166: FILE: include/asm-i386/string.h:271:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#166: FILE: include/asm-i386/string.h:271:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#166: FILE: include/asm-i386/string.h:271:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#166: FILE: include/asm-i386/string.h:271:
+			:"=&D"(edi),"=&S"(esi):"0"(edi),"1"(esi):"memory");
 			                                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000192448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 6 warnings, 33 checks, 108 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000192448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
