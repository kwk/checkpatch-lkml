WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: drivers/usb/serial/garmin_gps.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: drivers/usb/serial/garmin_gps.c:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#99: FILE: drivers/usb/serial/garmin_gps.c:23:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#113: FILE: drivers/usb/serial/garmin_gps.c:37:
+#include <asm/uaccess.h>

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#116: FILE: drivers/usb/serial/garmin_gps.c:40:
+/* the mode to be set when the port ist opened */
                                     ^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#120: FILE: drivers/usb/serial/garmin_gps.c:44:
+static int debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: drivers/usb/serial/garmin_gps.c:58:
+#define _DRIVER_VERSION(a,b) "v" _STR(a) "." _STR(b)
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: drivers/usb/serial/garmin_gps.c:66:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: drivers/usb/serial/garmin_gps.c:70:
+// max. possible size of a packet using the serial protocol $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#147: FILE: drivers/usb/serial/garmin_gps.c:71:
+#define MAX_SERIAL_PKT_SIZ (3+255+3)
                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#147: FILE: drivers/usb/serial/garmin_gps.c:71:
+#define MAX_SERIAL_PKT_SIZ (3+255+3)
                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: drivers/usb/serial/garmin_gps.c:74:
+#define MAX_SERIAL_PKT_SIZ_STUFFED MAX_SERIAL_PKT_SIZ+256
                                                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#150: FILE: drivers/usb/serial/garmin_gps.c:74:
+#define MAX_SERIAL_PKT_SIZ_STUFFED MAX_SERIAL_PKT_SIZ+256

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: drivers/usb/serial/garmin_gps.c:80:
+//  should be increased accordingly, so the input buffer is always $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: drivers/usb/serial/garmin_gps.c:82:
+#define GPS_IN_BUFSIZ  (GARMIN_PKTHDR_LENGTH+MAX_SERIAL_PKT_SIZ) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: drivers/usb/serial/garmin_gps.c:82:
+#define GPS_IN_BUFSIZ  (GARMIN_PKTHDR_LENGTH+MAX_SERIAL_PKT_SIZ) 
                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/usb/serial/garmin_gps.c:85:
+#define GPS_OUT_BUFSIZ (GARMIN_PKTHDR_LENGTH+MAX_SERIAL_PKT_SIZ_STUFFED) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: drivers/usb/serial/garmin_gps.c:85:
+#define GPS_OUT_BUFSIZ (GARMIN_PKTHDR_LENGTH+MAX_SERIAL_PKT_SIZ_STUFFED) 
                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#166: FILE: drivers/usb/serial/garmin_gps.c:90:
+#define GSP_INITIAL_OFFSET (GARMIN_PKTHDR_LENGTH-2)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#169: FILE: drivers/usb/serial/garmin_gps.c:93:
+#define PRIVPKTSIZ (GARMIN_PKTHDR_LENGTH+4)
                                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: drivers/usb/serial/garmin_gps.c:113:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <ignorePkts>
#208: FILE: drivers/usb/serial/garmin_gps.c:132:
+	__u8   ignorePkts;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#217: FILE: drivers/usb/serial/garmin_gps.c:141:
+	__u8   inbuffer [GPS_IN_BUFSIZ];  /* tty -> usb */

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#219: FILE: drivers/usb/serial/garmin_gps.c:143:
+	__u8   privpkt[4*6];
 	                ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#220: FILE: drivers/usb/serial/garmin_gps.c:144:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#224: FILE: drivers/usb/serial/garmin_gps.c:148:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#256: FILE: drivers/usb/serial/garmin_gps.c:180:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: drivers/usb/serial/garmin_gps.c:182:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#260: FILE: drivers/usb/serial/garmin_gps.c:184:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: drivers/usb/serial/garmin_gps.c:186:
+static void gsp_next_packet(struct garmin_data * garmin_data_p);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/usb/serial/garmin_gps.c:188:
+static int  garmin_write_bulk(struct usb_serial_port *port,
+			     const unsigned char *buf, int count);

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#267: FILE: drivers/usb/serial/garmin_gps.c:191:
+static unsigned char const GARMIN_START_SESSION_REQ[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#268: FILE: drivers/usb/serial/garmin_gps.c:192:
+static unsigned char const GARMIN_START_SESSION_REQ[]
+	= { 0, 0, 0, 0,  5, 0, 0, 0, 0, 0, 0, 0 };

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#269: FILE: drivers/usb/serial/garmin_gps.c:193:
+static unsigned char const GARMIN_START_SESSION_REQ2[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#270: FILE: drivers/usb/serial/garmin_gps.c:194:
+static unsigned char const GARMIN_START_SESSION_REQ2[]
+	= { 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0 };

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#271: FILE: drivers/usb/serial/garmin_gps.c:195:
+static unsigned char const GARMIN_START_SESSION_REPLY[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#272: FILE: drivers/usb/serial/garmin_gps.c:196:
+static unsigned char const GARMIN_START_SESSION_REPLY[]
+	= { 0, 0, 0, 0,  6, 0, 0, 0, 4, 0, 0, 0 };

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#273: FILE: drivers/usb/serial/garmin_gps.c:197:
+static unsigned char const GARMIN_SESSION_ACTIVE_REPLY[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#274: FILE: drivers/usb/serial/garmin_gps.c:198:
+static unsigned char const GARMIN_SESSION_ACTIVE_REPLY[]
+	= { 0, 0, 0, 0, 17, 0, 0, 0, 4, 0, 0, 0, 0, 16, 0, 0 };

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#275: FILE: drivers/usb/serial/garmin_gps.c:199:
+static unsigned char const GARMIN_BULK_IN_AVAIL_REPLY[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#276: FILE: drivers/usb/serial/garmin_gps.c:200:
+static unsigned char const GARMIN_BULK_IN_AVAIL_REPLY[]
+	= { 0, 0, 0, 0,  2, 0, 0, 0, 0, 0, 0, 0 };

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#277: FILE: drivers/usb/serial/garmin_gps.c:201:
+static unsigned char const GARMIN_APP_LAYER_REPLY[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#278: FILE: drivers/usb/serial/garmin_gps.c:202:
+static unsigned char const GARMIN_APP_LAYER_REPLY[]
+	= { 0x14, 0, 0, 0 };

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#279: FILE: drivers/usb/serial/garmin_gps.c:203:
+static unsigned char const GARMIN_START_PVT_REQ[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#280: FILE: drivers/usb/serial/garmin_gps.c:204:
+static unsigned char const GARMIN_START_PVT_REQ[]
+	= { 20, 0, 0, 0,  10, 0, 0, 0, 2, 0, 0, 0, 49, 0 };

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#281: FILE: drivers/usb/serial/garmin_gps.c:205:
+static unsigned char const GARMIN_STOP_PVT_REQ[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#282: FILE: drivers/usb/serial/garmin_gps.c:206:
+static unsigned char const GARMIN_STOP_PVT_REQ[]
+	= { 20, 0, 0, 0,  10, 0, 0, 0, 2, 0, 0, 0, 50, 0 };

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#283: FILE: drivers/usb/serial/garmin_gps.c:207:
+static unsigned char const GARMIN_STOP_TRANSFER_REQ[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#284: FILE: drivers/usb/serial/garmin_gps.c:208:
+static unsigned char const GARMIN_STOP_TRANSFER_REQ[]
+	= { 20, 0, 0, 0,  10, 0, 0, 0, 2, 0, 0, 0, 0, 0 };

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#285: FILE: drivers/usb/serial/garmin_gps.c:209:
+static unsigned char const GARMIN_STOP_TRANSFER_REQ_V2[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#286: FILE: drivers/usb/serial/garmin_gps.c:210:
+static unsigned char const GARMIN_STOP_TRANSFER_REQ_V2[]
+	= { 20, 0, 0, 0,  10, 0, 0, 0, 1, 0, 0, 0, 0 };

WARNING:STATIC_CONST: Move const after static - use 'static const unsigned char'
#287: FILE: drivers/usb/serial/garmin_gps.c:211:
+static unsigned char const PRIVATE_REQ[]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#288: FILE: drivers/usb/serial/garmin_gps.c:212:
+static unsigned char const PRIVATE_REQ[]
+	=    { 0x4B, 0x6E, 0x10, 0x01,  0xFF, 0, 0, 0, 0xFF, 0, 0, 0 };

CHECK:LINE_SPACING: Please don't use multiple blank lines
#290: FILE: drivers/usb/serial/garmin_gps.c:214:
+
+

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#292: FILE: drivers/usb/serial/garmin_gps.c:216:
+static struct usb_device_id id_table [] = {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#294: FILE: drivers/usb/serial/garmin_gps.c:218:
+	{ USB_DEVICE(GARMIN_VENDOR_ID, 3 ) },

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: drivers/usb/serial/garmin_gps.c:222:
+MODULE_DEVICE_TABLE (usb, id_table);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#308: FILE: drivers/usb/serial/garmin_gps.c:232:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: drivers/usb/serial/garmin_gps.c:233:
+static inline int noResponseFromAppLayer(struct garmin_data * garmin_data_p)

CHECK:CAMELCASE: Avoid CamelCase: <noResponseFromAppLayer>
#309: FILE: drivers/usb/serial/garmin_gps.c:233:
+static inline int noResponseFromAppLayer(struct garmin_data * garmin_data_p)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#312: FILE: drivers/usb/serial/garmin_gps.c:236:
+				& (FLAGS_APP_REQ_SEEN|FLAGS_APP_RESP_SEEN))
 				                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: drivers/usb/serial/garmin_gps.c:237:
+^I        == FLAGS_APP_REQ_SEEN);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LINE_SPACING: Please don't use multiple blank lines
#316: FILE: drivers/usb/serial/garmin_gps.c:240:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <getLayerId>
#317: FILE: drivers/usb/serial/garmin_gps.c:241:
+static inline int getLayerId(const __u8 *usbPacket)

CHECK:CAMELCASE: Avoid CamelCase: <usbPacket>
#317: FILE: drivers/usb/serial/garmin_gps.c:241:
+static inline int getLayerId(const __u8 *usbPacket)

CHECK:CAMELCASE: Avoid CamelCase: <getPacketId>
#322: FILE: drivers/usb/serial/garmin_gps.c:246:
+static inline int getPacketId(const __u8 *usbPacket)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#324: FILE: drivers/usb/serial/garmin_gps.c:248:
+	return __le32_to_cpup((__le32 *)(usbPacket+4));
 	                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <getDataLength>
#327: FILE: drivers/usb/serial/garmin_gps.c:251:
+static inline int getDataLength(const __u8 *usbPacket)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#329: FILE: drivers/usb/serial/garmin_gps.c:253:
+	return __le32_to_cpup((__le32 *)(usbPacket+8));
 	                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#332: FILE: drivers/usb/serial/garmin_gps.c:256:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <isAbortTrfCmnd>
#337: FILE: drivers/usb/serial/garmin_gps.c:261:
+static inline int isAbortTrfCmnd(const unsigned char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: drivers/usb/serial/garmin_gps.c:263:
+^Iif (0 == memcmp(buf, GARMIN_STOP_TRANSFER_REQ, $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#339: FILE: drivers/usb/serial/garmin_gps.c:263:
+	if (0 == memcmp(buf, GARMIN_STOP_TRANSFER_REQ, 

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: drivers/usb/serial/garmin_gps.c:264:
+^I                sizeof(GARMIN_STOP_TRANSFER_REQ)) ||$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: drivers/usb/serial/garmin_gps.c:265:
+^I    0 == memcmp(buf, GARMIN_STOP_TRANSFER_REQ_V2, $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#341: FILE: drivers/usb/serial/garmin_gps.c:265:
+	    0 == memcmp(buf, GARMIN_STOP_TRANSFER_REQ_V2, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: drivers/usb/serial/garmin_gps.c:266:
+^I                sizeof(GARMIN_STOP_TRANSFER_REQ_V2)))$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#348: FILE: drivers/usb/serial/garmin_gps.c:272:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: drivers/usb/serial/garmin_gps.c:275:
+                        char *data, unsigned int actual_length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: drivers/usb/serial/garmin_gps.c:275:
+                        char *data, unsigned int actual_length)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#357: FILE: drivers/usb/serial/garmin_gps.c:281:
+	if (tty && actual_length) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/usb/serial/garmin_gps.c:282:
+^I^Iusb_serial_debug_data(debug, &port->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/usb/serial/garmin_gps.c:283:
+		usb_serial_debug_data(debug, &port->dev, 
+					__FUNCTION__, actual_length, data);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#359: FILE: drivers/usb/serial/garmin_gps.c:283:
+					__FUNCTION__, actual_length, data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#363: FILE: drivers/usb/serial/garmin_gps.c:287:
+			/* if we insert more than TTY_FLIPBUF_SIZE characters,
+			   we drop them. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#363: FILE: drivers/usb/serial/garmin_gps.c:287:
+			   we drop them. */

ERROR:SPACING: space required before the open parenthesis '('
#364: FILE: drivers/usb/serial/garmin_gps.c:288:
+			if(tty->flip.count >= TTY_FLIPBUF_SIZE) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#364: FILE: drivers/usb/serial/garmin_gps.c:288:
+			if(tty->flip.count >= TTY_FLIPBUF_SIZE) {
+				tty_flip_buffer_push(tty);
+			}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#368: FILE: drivers/usb/serial/garmin_gps.c:292:
+			/* this doesn't actually push the data through unless
+			   tty->low_latency is set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#368: FILE: drivers/usb/serial/garmin_gps.c:292:
+			   tty->low_latency is set */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#375: FILE: drivers/usb/serial/garmin_gps.c:299:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#383: FILE: drivers/usb/serial/garmin_gps.c:307:
+static int pkt_add(struct garmin_data * garmin_data_p,

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: drivers/usb/serial/garmin_gps.c:308:
+                   unsigned char *data, unsigned int data_length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/usb/serial/garmin_gps.c:308:
+                   unsigned char *data, unsigned int data_length)$

WARNING:TYPO_SPELLING: 'containg' may be misspelled - perhaps 'containing'?
#390: FILE: drivers/usb/serial/garmin_gps.c:314:
+	/* process only packets containg data ... */
 	                        ^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#393: FILE: drivers/usb/serial/garmin_gps.c:317:
+		pkt = kmalloc(sizeof(struct garmin_packet)+data_length,
 		                                          ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pkt)...) over kmalloc(sizeof(struct garmin_packet)...)
#393: FILE: drivers/usb/serial/garmin_gps.c:317:
+		pkt = kmalloc(sizeof(struct garmin_packet)+data_length,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: drivers/usb/serial/garmin_gps.c:318:
+^I^I              GFP_ATOMIC);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#409: FILE: drivers/usb/serial/garmin_gps.c:333:
+		/* in serial mode, if someone is waiting for data from
+		   the device, iconvert and send the next packet to tty. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#409: FILE: drivers/usb/serial/garmin_gps.c:333:
+		   the device, iconvert and send the next packet to tty. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'garmin_data_p->state == STATE_GSP_WAIT_DATA'
#410: FILE: drivers/usb/serial/garmin_gps.c:334:
+		if (result && (garmin_data_p->state == STATE_GSP_WAIT_DATA)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#410: FILE: drivers/usb/serial/garmin_gps.c:334:
+		if (result && (garmin_data_p->state == STATE_GSP_WAIT_DATA)) {
+			gsp_next_packet(garmin_data_p);
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#417: FILE: drivers/usb/serial/garmin_gps.c:341:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#419: FILE: drivers/usb/serial/garmin_gps.c:343:
+static struct garmin_packet *pkt_pop(struct garmin_data * garmin_data_p)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#433: FILE: drivers/usb/serial/garmin_gps.c:357:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#435: FILE: drivers/usb/serial/garmin_gps.c:359:
+static void pkt_clear(struct garmin_data * garmin_data_p)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#440: FILE: drivers/usb/serial/garmin_gps.c:364:
+	dbg("%s", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#451: FILE: drivers/usb/serial/garmin_gps.c:375:
+
+

WARNING:REPEATED_WORD: Possible repeated word: 'handling'
#453: FILE: drivers/usb/serial/garmin_gps.c:377:
+ * garmin serial protocol handling handling

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#457: FILE: drivers/usb/serial/garmin_gps.c:381:
+static int gsp_send_ack(struct garmin_data * garmin_data_p, __u8 pkt_id)

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: drivers/usb/serial/garmin_gps.c:384:
+        __u8 cksum = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/usb/serial/garmin_gps.c:384:
+        __u8 cksum = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: drivers/usb/serial/garmin_gps.c:385:
+        __u8 *ptr = pkt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/usb/serial/garmin_gps.c:385:
+        __u8 *ptr = pkt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: drivers/usb/serial/garmin_gps.c:386:
+        unsigned  l = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/usb/serial/garmin_gps.c:386:
+        unsigned  l = 0;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#462: FILE: drivers/usb/serial/garmin_gps.c:386:
+        unsigned  l = 0;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#464: FILE: drivers/usb/serial/garmin_gps.c:388:
+	dbg("%s - pkt-id: 0x%X.", __FUNCTION__, 0xFF & pkt_id);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#476: FILE: drivers/usb/serial/garmin_gps.c:400:
+	if (pkt_id == DLE) {
+		*ptr++ = DLE;
+	}

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#485: FILE: drivers/usb/serial/garmin_gps.c:409:
+	l = ptr-pkt;
 	       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#491: FILE: drivers/usb/serial/garmin_gps.c:415:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: drivers/usb/serial/garmin_gps.c:424:
+ *         the usb header: GSP_INITIAL_OFFSET + number of bytes in packet $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#503: FILE: drivers/usb/serial/garmin_gps.c:427:
+static int gsp_rec_packet(struct garmin_data * garmin_data_p, int count)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#505: FILE: drivers/usb/serial/garmin_gps.c:429:
+	const __u8* recpkt = garmin_data_p->inbuffer+GSP_INITIAL_OFFSET;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#505: FILE: drivers/usb/serial/garmin_gps.c:429:
+	const __u8* recpkt = garmin_data_p->inbuffer+GSP_INITIAL_OFFSET;
 	                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: drivers/usb/serial/garmin_gps.c:430:
+        __le32 *usbdata = (__le32 *) garmin_data_p->inbuffer;$

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/usb/serial/garmin_gps.c:430:
+        __le32 *usbdata = (__le32 *) garmin_data_p->inbuffer;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/usb/serial/garmin_gps.c:430:
+        __le32 *usbdata = (__le32 *) garmin_data_p->inbuffer;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: drivers/usb/serial/garmin_gps.c:438:
+	usb_serial_debug_data(debug, &garmin_data_p->port->dev,
+			       __FUNCTION__, count-GSP_INITIAL_OFFSET, recpkt);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#514: FILE: drivers/usb/serial/garmin_gps.c:438:
+			       __FUNCTION__, count-GSP_INITIAL_OFFSET, recpkt);
 			                          ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#514: FILE: drivers/usb/serial/garmin_gps.c:438:
+			       __FUNCTION__, count-GSP_INITIAL_OFFSET, recpkt);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#516: FILE: drivers/usb/serial/garmin_gps.c:440:
+	if (size != (count-GSP_INITIAL_OFFSET-3)) {
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#516: FILE: drivers/usb/serial/garmin_gps.c:440:
+	if (size != (count-GSP_INITIAL_OFFSET-3)) {
 	                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/usb/serial/garmin_gps.c:442:
+		dbg("%s - invalid size, expected %d bytes, got %d",
+			__FUNCTION__, size, (count-GSP_INITIAL_OFFSET-3));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#518: FILE: drivers/usb/serial/garmin_gps.c:442:
+			__FUNCTION__, size, (count-GSP_INITIAL_OFFSET-3));
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#518: FILE: drivers/usb/serial/garmin_gps.c:442:
+			__FUNCTION__, size, (count-GSP_INITIAL_OFFSET-3));
 			                                             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#518: FILE: drivers/usb/serial/garmin_gps.c:442:
+			__FUNCTION__, size, (count-GSP_INITIAL_OFFSET-3));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#526: FILE: drivers/usb/serial/garmin_gps.c:450:
+	if ((__u8*)&(usbdata[3]) != recpkt) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around usbdata[3]
#526: FILE: drivers/usb/serial/garmin_gps.c:450:
+	if ((__u8*)&(usbdata[3]) != recpkt) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/usb/serial/garmin_gps.c:452:
+		dbg("%s - ptr mismatch %p - %p",
+			__FUNCTION__, &(usbdata[4]), recpkt);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around usbdata[4]
#528: FILE: drivers/usb/serial/garmin_gps.c:452:
+			__FUNCTION__, &(usbdata[4]), recpkt);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#528: FILE: drivers/usb/serial/garmin_gps.c:452:
+			__FUNCTION__, &(usbdata[4]), recpkt);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/usb/serial/garmin_gps.c:461:
+       if ((0xff & (cksum + *recpkt)) != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 16)
#537: FILE: drivers/usb/serial/garmin_gps.c:461:
+       if ((0xff & (cksum + *recpkt)) != 0) {
+                dbg("%s - invalid checksum, expected %02x, got %02x",

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: drivers/usb/serial/garmin_gps.c:462:
+                dbg("%s - invalid checksum, expected %02x, got %02x",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/usb/serial/garmin_gps.c:462:
+                dbg("%s - invalid checksum, expected %02x, got %02x",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: drivers/usb/serial/garmin_gps.c:463:
+                        __FUNCTION__, 0xff & -cksum, 0xff & *recpkt);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: drivers/usb/serial/garmin_gps.c:463:
+                dbg("%s - invalid checksum, expected %02x, got %02x",
+                        __FUNCTION__, 0xff & -cksum, 0xff & *recpkt);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/usb/serial/garmin_gps.c:463:
+                        __FUNCTION__, 0xff & -cksum, 0xff & *recpkt);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#539: FILE: drivers/usb/serial/garmin_gps.c:463:
+                        __FUNCTION__, 0xff & -cksum, 0xff & *recpkt);

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: drivers/usb/serial/garmin_gps.c:464:
+                return -EINVPKT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: drivers/usb/serial/garmin_gps.c:464:
+                return -EINVPKT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: drivers/usb/serial/garmin_gps.c:465:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/usb/serial/garmin_gps.c:465:
+        }$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#547: FILE: drivers/usb/serial/garmin_gps.c:471:
+	garmin_write_bulk (garmin_data_p->port, garmin_data_p->inbuffer,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#548: FILE: drivers/usb/serial/garmin_gps.c:472:
+			   GARMIN_PKTHDR_LENGTH+size);
 			                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#551: FILE: drivers/usb/serial/garmin_gps.c:475:
+	/* if this was an abort-transfer command, flush all
+	   queued data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#551: FILE: drivers/usb/serial/garmin_gps.c:475:
+	   queued data. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#560: FILE: drivers/usb/serial/garmin_gps.c:484:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#580: FILE: drivers/usb/serial/garmin_gps.c:504:
+static int gsp_receive(struct garmin_data * garmin_data_p,

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: drivers/usb/serial/garmin_gps.c:505:
+                       const unsigned char *buf, int count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: drivers/usb/serial/garmin_gps.c:505:
+                       const unsigned char *buf, int count)$

CHECK:CAMELCASE: Avoid CamelCase: <dleSeen>
#589: FILE: drivers/usb/serial/garmin_gps.c:513:
+	int dleSeen = garmin_data_p->flags & FLAGS_GSP_DLESEEN;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: drivers/usb/serial/garmin_gps.c:520:
+	dbg("%s - dle=%d skip=%d size=%d count=%d",
+		__FUNCTION__, dleSeen, skip, size, count);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#596: FILE: drivers/usb/serial/garmin_gps.c:520:
+		__FUNCTION__, dleSeen, skip, size, count);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#598: FILE: drivers/usb/serial/garmin_gps.c:522:
+	if (size == 0) {
+		size = GSP_INITIAL_OFFSET;
+	}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#603: FILE: drivers/usb/serial/garmin_gps.c:527:
+	while (offs < count) {
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#604: FILE: drivers/usb/serial/garmin_gps.c:528:
+		data = *(buf+offs);
 		            ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#605: FILE: drivers/usb/serial/garmin_gps.c:529:
+		offs ++;
 		     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/usb/serial/garmin_gps.c:556:
+^I^I^I^I^I^I        "- id=0x%X.",$

WARNING:SPLIT_STRING: quoted string split across lines
#632: FILE: drivers/usb/serial/garmin_gps.c:556:
+					dbg("packet complete "
+						        "- id=0x%X.",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: drivers/usb/serial/garmin_gps.c:557:
+^I^I^I^I^I^I        0xFF & data);$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#644: FILE: drivers/usb/serial/garmin_gps.c:568:
+		} else if (!skip) {
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#655: FILE: drivers/usb/serial/garmin_gps.c:579:
+			dbg("%s - packet too large.", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#683: FILE: drivers/usb/serial/garmin_gps.c:607:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#685: FILE: drivers/usb/serial/garmin_gps.c:609:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#693: FILE: drivers/usb/serial/garmin_gps.c:617:
+int gsp_send(struct garmin_data * garmin_data_p, const unsigned char *buf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: drivers/usb/serial/garmin_gps.c:618:
+              int count)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: drivers/usb/serial/garmin_gps.c:618:
+int gsp_send(struct garmin_data * garmin_data_p, const unsigned char *buf,
+              int count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: drivers/usb/serial/garmin_gps.c:618:
+              int count)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#701: FILE: drivers/usb/serial/garmin_gps.c:625:
+	int i=0;
 	     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#704: FILE: drivers/usb/serial/garmin_gps.c:628:
+	dbg("%s - state %d - %d bytes.", __FUNCTION__,

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: drivers/usb/serial/garmin_gps.c:629:
+^I         garmin_data_p->state, count);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/usb/serial/garmin_gps.c:629:
+	dbg("%s - state %d - %d bytes.", __FUNCTION__,
+	         garmin_data_p->state, count);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#708: FILE: drivers/usb/serial/garmin_gps.c:632:
+	if ((k+count) > GPS_OUT_BUFSIZ) {
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#714: FILE: drivers/usb/serial/garmin_gps.c:638:
+	memcpy(garmin_data_p->outbuffer+k, buf, count);
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#720: FILE: drivers/usb/serial/garmin_gps.c:644:
+		datalen= getDataLength(garmin_data_p->outbuffer);
 		       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#728: FILE: drivers/usb/serial/garmin_gps.c:652:
+	dbg("%s - %d bytes in buffer, %d bytes in pkt.", __FUNCTION__,

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: drivers/usb/serial/garmin_gps.c:653:
+^I         k, i);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: drivers/usb/serial/garmin_gps.c:653:
+	dbg("%s - %d bytes in buffer, %d bytes in pkt.", __FUNCTION__,
+	         k, i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#734: FILE: drivers/usb/serial/garmin_gps.c:658:
+^I^I                   __FUNCTION__, k, garmin_data_p->outbuffer);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#734: FILE: drivers/usb/serial/garmin_gps.c:658:
+	usb_serial_debug_data(debug, &garmin_data_p->port->dev,
+		                   __FUNCTION__, k, garmin_data_p->outbuffer);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#734: FILE: drivers/usb/serial/garmin_gps.c:658:
+		                   __FUNCTION__, k, garmin_data_p->outbuffer);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#738: FILE: drivers/usb/serial/garmin_gps.c:662:
+	if (GARMIN_LAYERID_APPL != getLayerId(garmin_data_p->outbuffer)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: drivers/usb/serial/garmin_gps.c:663:
+^I^Idbg("not an application packet (%d)", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: drivers/usb/serial/garmin_gps.c:664:
+^I^I        getLayerId(garmin_data_p->outbuffer));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#740: FILE: drivers/usb/serial/garmin_gps.c:664:
+		dbg("not an application packet (%d)", 
+		        getLayerId(garmin_data_p->outbuffer));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#757: FILE: drivers/usb/serial/garmin_gps.c:681:
+	src = garmin_data_p->outbuffer+GARMIN_PKTHDR_LENGTH;
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#758: FILE: drivers/usb/serial/garmin_gps.c:682:
+	for (i=0; i<datalen; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#758: FILE: drivers/usb/serial/garmin_gps.c:682:
+	for (i=0; i<datalen; i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#763: FILE: drivers/usb/serial/garmin_gps.c:687:
+	src = garmin_data_p->outbuffer+GARMIN_PKTHDR_LENGTH;
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#764: FILE: drivers/usb/serial/garmin_gps.c:688:
+	if (k > (GARMIN_PKTHDR_LENGTH-2)) {
 	                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#765: FILE: drivers/usb/serial/garmin_gps.c:689:
+^I^I/* can't add stuffing DLEs in place, move data to end $

ERROR:CODE_INDENT: code indent should use tabs where possible
#766: FILE: drivers/usb/serial/garmin_gps.c:690:
+                   of buffer ... */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#766: FILE: drivers/usb/serial/garmin_gps.c:690:
+		/* can't add stuffing DLEs in place, move data to end 
+                   of buffer ... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#766: FILE: drivers/usb/serial/garmin_gps.c:690:
+                   of buffer ... */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#767: FILE: drivers/usb/serial/garmin_gps.c:691:
+		dst = garmin_data_p->outbuffer+GPS_OUT_BUFSIZ-datalen;
 		                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#767: FILE: drivers/usb/serial/garmin_gps.c:691:
+		dst = garmin_data_p->outbuffer+GPS_OUT_BUFSIZ-datalen;
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#782: FILE: drivers/usb/serial/garmin_gps.c:706:
+	for (i=0; i<datalen; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#782: FILE: drivers/usb/serial/garmin_gps.c:706:
+	for (i=0; i<datalen; i++) {
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: drivers/usb/serial/garmin_gps.c:713:
+^I^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#797: FILE: drivers/usb/serial/garmin_gps.c:721:
+	i = dst-garmin_data_p->outbuffer;
 	       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#807: FILE: drivers/usb/serial/garmin_gps.c:731:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#809: FILE: drivers/usb/serial/garmin_gps.c:733:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#814: FILE: drivers/usb/serial/garmin_gps.c:738:
+static void gsp_next_packet(struct garmin_data * garmin_data_p)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#818: FILE: drivers/usb/serial/garmin_gps.c:742:
+	while ((pkt = pkt_pop(garmin_data_p)) != 0)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#820: FILE: drivers/usb/serial/garmin_gps.c:744:
+		dbg("%s - next pkt: %d", __FUNCTION__, pkt->seq);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#829: FILE: drivers/usb/serial/garmin_gps.c:753:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#831: FILE: drivers/usb/serial/garmin_gps.c:755:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#836: FILE: drivers/usb/serial/garmin_gps.c:760:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#845: FILE: drivers/usb/serial/garmin_gps.c:769:
+static int nat_receive(struct garmin_data * garmin_data_p,

ERROR:CODE_INDENT: code indent should use tabs where possible
#846: FILE: drivers/usb/serial/garmin_gps.c:770:
+                       const unsigned char *buf, int count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: drivers/usb/serial/garmin_gps.c:770:
+                       const unsigned char *buf, int count)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#848: FILE: drivers/usb/serial/garmin_gps.c:772:
+	__u8 * dest;

CHECK:SPACING: spaces preferred around that '+' (ctx:ExV)
#857: FILE: drivers/usb/serial/garmin_gps.c:781:
+			      +getDataLength(garmin_data_p->inbuffer);
 			      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#864: FILE: drivers/usb/serial/garmin_gps.c:788:
+^I^I^I        __FUNCTION__, len);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/usb/serial/garmin_gps.c:788:
+			dbg("%s - packet size too large: %d",
+			        __FUNCTION__, len);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#864: FILE: drivers/usb/serial/garmin_gps.c:788:
+			        __FUNCTION__, len);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#870: FILE: drivers/usb/serial/garmin_gps.c:794:
+			if (len > (count-offs))
 			                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#871: FILE: drivers/usb/serial/garmin_gps.c:795:
+				len = (count-offs);
 				            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: drivers/usb/serial/garmin_gps.c:798:
+^I^I^I^I       ^I+garmin_data_p->insize;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#874: FILE: drivers/usb/serial/garmin_gps.c:798:
+^I^I^I^I       ^I+garmin_data_p->insize;$

CHECK:SPACING: spaces preferred around that '+' (ctx:ExV)
#874: FILE: drivers/usb/serial/garmin_gps.c:798:
+				       	+garmin_data_p->insize;
 				       	^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#875: FILE: drivers/usb/serial/garmin_gps.c:799:
+				memcpy(dest, buf+offs, len);
 				                ^

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#883: FILE: drivers/usb/serial/garmin_gps.c:807:
+			len = GARMIN_PKTHDR_LENGTH+
 			                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#886: FILE: drivers/usb/serial/garmin_gps.c:810:
+				garmin_write_bulk (garmin_data_p->port,

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: drivers/usb/serial/garmin_gps.c:811:
+^I^I^I^I                   garmin_data_p->inbuffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: drivers/usb/serial/garmin_gps.c:812:
+^I^I^I^I                   len);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#892: FILE: drivers/usb/serial/garmin_gps.c:816:
+				/* if this was an abort-transfer command,
+				   flush all queued data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#892: FILE: drivers/usb/serial/garmin_gps.c:816:
+				   flush all queued data. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#903: FILE: drivers/usb/serial/garmin_gps.c:827:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#910: FILE: drivers/usb/serial/garmin_gps.c:834:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#920: FILE: drivers/usb/serial/garmin_gps.c:844:
+	send_to_tty(port, (__u8*)pkt, 6*4);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#920: FILE: drivers/usb/serial/garmin_gps.c:844:
+	send_to_tty(port, (__u8*)pkt, 6*4);
 	                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#923: FILE: drivers/usb/serial/garmin_gps.c:847:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#931: FILE: drivers/usb/serial/garmin_gps.c:855:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#937: FILE: drivers/usb/serial/garmin_gps.c:861:
+	usb_kill_urb (port->interrupt_in_urb);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#938: FILE: drivers/usb/serial/garmin_gps.c:862:
+	dbg("%s - usb_reset_device", __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#938: FILE: drivers/usb/serial/garmin_gps.c:862:
+	dbg("%s - usb_reset_device", __FUNCTION__ );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#942: FILE: drivers/usb/serial/garmin_gps.c:866:
+		dbg("%s - usb_reset_device failed: %d",
+			__FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#942: FILE: drivers/usb/serial/garmin_gps.c:866:
+			__FUNCTION__, status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#946: FILE: drivers/usb/serial/garmin_gps.c:870:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#951: FILE: drivers/usb/serial/garmin_gps.c:875:
+static int garmin_clear(struct garmin_data * garmin_data_p)

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: drivers/usb/serial/garmin_gps.c:884:
+^I^I                           sizeof(GARMIN_STOP_TRANSFER_REQ));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#972: FILE: drivers/usb/serial/garmin_gps.c:896:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#974: FILE: drivers/usb/serial/garmin_gps.c:898:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#976: FILE: drivers/usb/serial/garmin_gps.c:900:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#980: FILE: drivers/usb/serial/garmin_gps.c:904:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#984: FILE: drivers/usb/serial/garmin_gps.c:908:
+		usb_kill_urb (port->interrupt_in_urb);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#986: FILE: drivers/usb/serial/garmin_gps.c:910:
+		dbg("%s - adding interrupt input", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#991: FILE: drivers/usb/serial/garmin_gps.c:915:
+^I^I^I        "%s - failed submitting interrupt urb,"$

WARNING:SPLIT_STRING: quoted string split across lines
#992: FILE: drivers/usb/serial/garmin_gps.c:916:
+			        "%s - failed submitting interrupt urb,"
+				" error %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: drivers/usb/serial/garmin_gps.c:917:
+^I^I^I        __FUNCTION__, status);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#993: FILE: drivers/usb/serial/garmin_gps.c:917:
+			        __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#997: FILE: drivers/usb/serial/garmin_gps.c:921:
+		dbg("%s - starting session ...", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1000: FILE: drivers/usb/serial/garmin_gps.c:924:
+^I^I                           sizeof(GARMIN_START_SESSION_REQ));$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1003: FILE: drivers/usb/serial/garmin_gps.c:927:
+		if (status >= 0) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1009: FILE: drivers/usb/serial/garmin_gps.c:933:
+^I^I^I                           sizeof(GARMIN_START_SESSION_REQ2));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1020: FILE: drivers/usb/serial/garmin_gps.c:944:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1022: FILE: drivers/usb/serial/garmin_gps.c:946:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1024: FILE: drivers/usb/serial/garmin_gps.c:948:
+static int garmin_open (struct usb_serial_port *port, struct file *filp)
                                                                    ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1024: FILE: drivers/usb/serial/garmin_gps.c:948:
+static int garmin_open (struct usb_serial_port *port, struct file *filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1027: FILE: drivers/usb/serial/garmin_gps.c:951:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1029: FILE: drivers/usb/serial/garmin_gps.c:953:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1044: FILE: drivers/usb/serial/garmin_gps.c:968:
+	usb_kill_urb (port->write_urb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1045: FILE: drivers/usb/serial/garmin_gps.c:969:
+	usb_kill_urb (port->read_urb);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1047: FILE: drivers/usb/serial/garmin_gps.c:971:
+	if (garmin_data_p->state == STATE_RESET) {
+		status = garmin_init_session(port);
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1056: FILE: drivers/usb/serial/garmin_gps.c:980:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1057: FILE: drivers/usb/serial/garmin_gps.c:981:
+static void garmin_close (struct usb_serial_port *port, struct file * filp)
                                                                       ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1057: FILE: drivers/usb/serial/garmin_gps.c:981:
+static void garmin_close (struct usb_serial_port *port, struct file * filp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1057: FILE: drivers/usb/serial/garmin_gps.c:981:
+static void garmin_close (struct usb_serial_port *port, struct file * filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1060: FILE: drivers/usb/serial/garmin_gps.c:984:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1062: FILE: drivers/usb/serial/garmin_gps.c:986:
+	dbg("%s - port %d - mode=%d state=%d flags=0x%X", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1063: FILE: drivers/usb/serial/garmin_gps.c:987:
+	dbg("%s - port %d - mode=%d state=%d flags=0x%X", __FUNCTION__,
+		port->number, garmin_data_p->mode,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1072: FILE: drivers/usb/serial/garmin_gps.c:996:
+	usb_kill_urb (port->read_urb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1073: FILE: drivers/usb/serial/garmin_gps.c:997:
+	usb_kill_urb (port->write_urb);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1084: FILE: drivers/usb/serial/garmin_gps.c:1008:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1085: FILE: drivers/usb/serial/garmin_gps.c:1009:
+static void garmin_write_bulk_callback (struct urb *urb, struct pt_regs *regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1088: FILE: drivers/usb/serial/garmin_gps.c:1012:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1091: FILE: drivers/usb/serial/garmin_gps.c:1015:
+	kfree (urb->transfer_buffer);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1093: FILE: drivers/usb/serial/garmin_gps.c:1017:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1097: FILE: drivers/usb/serial/garmin_gps.c:1021:
+		dbg("%s - nonzero write bulk status received: %d",
+			__FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1097: FILE: drivers/usb/serial/garmin_gps.c:1021:
+			__FUNCTION__, urb->status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1104: FILE: drivers/usb/serial/garmin_gps.c:1028:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1105: FILE: drivers/usb/serial/garmin_gps.c:1029:
+static int garmin_write_bulk (struct usb_serial_port *port,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1106: FILE: drivers/usb/serial/garmin_gps.c:1030:
+                              const unsigned char *buf, int count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1106: FILE: drivers/usb/serial/garmin_gps.c:1030:
+                              const unsigned char *buf, int count)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1109: FILE: drivers/usb/serial/garmin_gps.c:1033:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1114: FILE: drivers/usb/serial/garmin_gps.c:1038:
+	dbg("%s - port %d, state %d", __FUNCTION__, port->number,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1115: FILE: drivers/usb/serial/garmin_gps.c:1039:
+	dbg("%s - port %d, state %d", __FUNCTION__, port->number,
+		garmin_data_p->state);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1119: FILE: drivers/usb/serial/garmin_gps.c:1043:
+	buffer = kmalloc (count, GFP_ATOMIC);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1121: FILE: drivers/usb/serial/garmin_gps.c:1045:
+	if (!buffer) {
+		dev_err(&port->dev, "out of memory\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1128: FILE: drivers/usb/serial/garmin_gps.c:1052:
+		kfree (buffer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1132: FILE: drivers/usb/serial/garmin_gps.c:1056:
+	memcpy (buffer, buf, count);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1134: FILE: drivers/usb/serial/garmin_gps.c:1058:
+	usb_serial_debug_data(debug, &port->dev, __FUNCTION__, count, buffer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1136: FILE: drivers/usb/serial/garmin_gps.c:1060:
+	usb_fill_bulk_urb (urb, serial->dev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1137: FILE: drivers/usb/serial/garmin_gps.c:1061:
+^I^I^I ^Iusb_sndbulkpipe (serial->dev,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1137: FILE: drivers/usb/serial/garmin_gps.c:1061:
+^I^I^I ^Iusb_sndbulkpipe (serial->dev,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1137: FILE: drivers/usb/serial/garmin_gps.c:1061:
+	usb_fill_bulk_urb (urb, serial->dev,
+			 	usb_sndbulkpipe (serial->dev,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1137: FILE: drivers/usb/serial/garmin_gps.c:1061:
+			 	usb_sndbulkpipe (serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1138: FILE: drivers/usb/serial/garmin_gps.c:1062:
+			 	usb_sndbulkpipe (serial->dev,
+				port->bulk_out_endpointAddress),

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddress>
#1138: FILE: drivers/usb/serial/garmin_gps.c:1062:
+				port->bulk_out_endpointAddress),

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1143: FILE: drivers/usb/serial/garmin_gps.c:1067:
+	if (GARMIN_LAYERID_APPL == getLayerId(buffer)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1155: FILE: drivers/usb/serial/garmin_gps.c:1079:
+^I^I        "%s - usb_submit_urb(write bulk) "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1156: FILE: drivers/usb/serial/garmin_gps.c:1080:
+^I^I        "failed with status = %d\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#1156: FILE: drivers/usb/serial/garmin_gps.c:1080:
+		        "%s - usb_submit_urb(write bulk) "
+		        "failed with status = %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1157: FILE: drivers/usb/serial/garmin_gps.c:1081:
+				__FUNCTION__, status);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1160: FILE: drivers/usb/serial/garmin_gps.c:1084:
+	} else {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'garmin_data_p->mode == MODE_GARMIN_SERIAL'
#1161: FILE: drivers/usb/serial/garmin_gps.c:1085:
+		if (GARMIN_LAYERID_APPL == getLayerId(buffer)
+		    && (garmin_data_p->mode == MODE_GARMIN_SERIAL))  {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1161: FILE: drivers/usb/serial/garmin_gps.c:1085:
+		if (GARMIN_LAYERID_APPL == getLayerId(buffer)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1162: FILE: drivers/usb/serial/garmin_gps.c:1086:
+		if (GARMIN_LAYERID_APPL == getLayerId(buffer)
+		    && (garmin_data_p->mode == MODE_GARMIN_SERIAL))  {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1163: FILE: drivers/usb/serial/garmin_gps.c:1087:
+		    && (garmin_data_p->mode == MODE_GARMIN_SERIAL))  {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1169: FILE: drivers/usb/serial/garmin_gps.c:1093:
+	 * really free it when it is finished with it */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1170: FILE: drivers/usb/serial/garmin_gps.c:1094:
+	usb_free_urb (urb);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1175: FILE: drivers/usb/serial/garmin_gps.c:1099:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1177: FILE: drivers/usb/serial/garmin_gps.c:1101:
+static int garmin_write (struct usb_serial_port *port,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1178: FILE: drivers/usb/serial/garmin_gps.c:1102:
+                         const unsigned char *buf, int count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1178: FILE: drivers/usb/serial/garmin_gps.c:1102:
+                         const unsigned char *buf, int count)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1181: FILE: drivers/usb/serial/garmin_gps.c:1105:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1184: FILE: drivers/usb/serial/garmin_gps.c:1108:
+	usb_serial_debug_data(debug, &port->dev, __FUNCTION__, count, buf);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1188: FILE: drivers/usb/serial/garmin_gps.c:1112:
+	if (count >= GARMIN_PKTHDR_LENGTH) {
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1198: FILE: drivers/usb/serial/garmin_gps.c:1122:
+		if (count == (GARMIN_PKTHDR_LENGTH+pktsiz)
 		                                  ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1199: FILE: drivers/usb/serial/garmin_gps.c:1123:
+		if (count == (GARMIN_PKTHDR_LENGTH+pktsiz)
+		    && GARMIN_LAYERID_PRIVATE == getLayerId(garmin_data_p->privpkt)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1200: FILE: drivers/usb/serial/garmin_gps.c:1124:
+		    && GARMIN_LAYERID_PRIVATE == getLayerId(garmin_data_p->privpkt)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1202: FILE: drivers/usb/serial/garmin_gps.c:1126:
+			dbg("%s - processing private request %d",
+				__FUNCTION__, pktid);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1202: FILE: drivers/usb/serial/garmin_gps.c:1126:
+				__FUNCTION__, pktid);

ERROR:SPACING: space required before the open parenthesis '('
#1207: FILE: drivers/usb/serial/garmin_gps.c:1131:
+			switch(pktid) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1208: FILE: drivers/usb/serial/garmin_gps.c:1132:
+			switch(pktid) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1214: FILE: drivers/usb/serial/garmin_gps.c:1138:
+				dbg("%s - debug level set to 0x%X",
+					__FUNCTION__, debug);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1214: FILE: drivers/usb/serial/garmin_gps.c:1138:
+					__FUNCTION__, debug);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1222: FILE: drivers/usb/serial/garmin_gps.c:1146:
+				dbg("%s - mode set to %d",
+					__FUNCTION__, garmin_data_p->mode);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1222: FILE: drivers/usb/serial/garmin_gps.c:1146:
+					__FUNCTION__, garmin_data_p->mode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1238: FILE: drivers/usb/serial/garmin_gps.c:1162:
+				dbg("%s - initial_mode set to %d",
+					__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1238: FILE: drivers/usb/serial/garmin_gps.c:1162:
+					__FUNCTION__,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1253: FILE: drivers/usb/serial/garmin_gps.c:1177:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1254: FILE: drivers/usb/serial/garmin_gps.c:1178:
+static int garmin_write_room (struct usb_serial_port *port)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1259: FILE: drivers/usb/serial/garmin_gps.c:1183:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1260: FILE: drivers/usb/serial/garmin_gps.c:1184:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);
+	return GPS_OUT_BUFSIZ-garmin_data_p->outsize;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1260: FILE: drivers/usb/serial/garmin_gps.c:1184:
+	return GPS_OUT_BUFSIZ-garmin_data_p->outsize;
 	                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1263: FILE: drivers/usb/serial/garmin_gps.c:1187:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1264: FILE: drivers/usb/serial/garmin_gps.c:1188:
+static int garmin_chars_in_buffer (struct usb_serial_port *port)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1268: FILE: drivers/usb/serial/garmin_gps.c:1192:
+         * Will this lock up the driver - the buffer contains an incomplete$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1269: FILE: drivers/usb/serial/garmin_gps.c:1193:
+         * package which will not be written to the device until it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1270: FILE: drivers/usb/serial/garmin_gps.c:1194:
+         * has been completed ?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1271: FILE: drivers/usb/serial/garmin_gps.c:1195:
+         */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1277: FILE: drivers/usb/serial/garmin_gps.c:1201:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1278: FILE: drivers/usb/serial/garmin_gps.c:1202:
+static void garmin_read_process(struct garmin_data * garmin_data_p,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1279: FILE: drivers/usb/serial/garmin_gps.c:1203:
+static void garmin_read_process(struct garmin_data * garmin_data_p,
+				 unsigned char *data, unsigned data_length)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1279: FILE: drivers/usb/serial/garmin_gps.c:1203:
+				 unsigned char *data, unsigned data_length)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1283: FILE: drivers/usb/serial/garmin_gps.c:1207:
+		dbg("%s - pkt dropped", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1285: FILE: drivers/usb/serial/garmin_gps.c:1209:
+^I           garmin_data_p->state != STATE_RESET ) {$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1285: FILE: drivers/usb/serial/garmin_gps.c:1209:
+	           garmin_data_p->state != STATE_RESET ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1286: FILE: drivers/usb/serial/garmin_gps.c:1210:
+	           garmin_data_p->state != STATE_RESET ) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1288: FILE: drivers/usb/serial/garmin_gps.c:1212:
+		/* remember any appl.layer packets, so we know
+		   if a reset is required or not when closing

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1289: FILE: drivers/usb/serial/garmin_gps.c:1213:
+		   the device */

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1290: FILE: drivers/usb/serial/garmin_gps.c:1214:
+		if (0 == memcmp(data, GARMIN_APP_LAYER_REPLY,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1291: FILE: drivers/usb/serial/garmin_gps.c:1215:
+^I^I                sizeof(GARMIN_APP_LAYER_REPLY)))$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1295: FILE: drivers/usb/serial/garmin_gps.c:1219:
+		/* if throttling is active or postprecessing is required
+		   put the received data in th input queue, otherwise

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1296: FILE: drivers/usb/serial/garmin_gps.c:1220:
+		   send it directly to the tty port */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1300: FILE: drivers/usb/serial/garmin_gps.c:1224:
+			if (getLayerId(data) == GARMIN_LAYERID_APPL) {
+				pkt_add(garmin_data_p, data, data_length);
+			}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1309: FILE: drivers/usb/serial/garmin_gps.c:1233:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1310: FILE: drivers/usb/serial/garmin_gps.c:1234:
+static void garmin_read_bulk_callback (struct urb *urb, struct pt_regs *regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1314: FILE: drivers/usb/serial/garmin_gps.c:1238:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1318: FILE: drivers/usb/serial/garmin_gps.c:1242:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1321: FILE: drivers/usb/serial/garmin_gps.c:1245:
+		dbg("%s - bad serial pointer, exiting", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1327: FILE: drivers/usb/serial/garmin_gps.c:1251:
+		dbg("%s - nonzero read bulk status received: %d",
+			__FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1327: FILE: drivers/usb/serial/garmin_gps.c:1251:
+			__FUNCTION__, urb->status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1331: FILE: drivers/usb/serial/garmin_gps.c:1255:
+^Iusb_serial_debug_data(debug, &port->dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1332: FILE: drivers/usb/serial/garmin_gps.c:1256:
+	usb_serial_debug_data(debug, &port->dev, 
+				__FUNCTION__, urb->actual_length, data);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1332: FILE: drivers/usb/serial/garmin_gps.c:1256:
+				__FUNCTION__, urb->actual_length, data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1338: FILE: drivers/usb/serial/garmin_gps.c:1262:
+		usb_fill_bulk_urb (port->read_urb, serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1339: FILE: drivers/usb/serial/garmin_gps.c:1263:
+		usb_fill_bulk_urb (port->read_urb, serial->dev,
+			   usb_rcvbulkpipe (serial->dev,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1339: FILE: drivers/usb/serial/garmin_gps.c:1263:
+			   usb_rcvbulkpipe (serial->dev,

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddress>
#1340: FILE: drivers/usb/serial/garmin_gps.c:1264:
+					    port->bulk_in_endpointAddress),

ERROR:CODE_INDENT: code indent should use tabs where possible
#1348: FILE: drivers/usb/serial/garmin_gps.c:1272:
+^I^I^I        __FUNCTION__, status);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1348: FILE: drivers/usb/serial/garmin_gps.c:1272:
+			        __FUNCTION__, status);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1351: FILE: drivers/usb/serial/garmin_gps.c:1275:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1353: FILE: drivers/usb/serial/garmin_gps.c:1277:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1354: FILE: drivers/usb/serial/garmin_gps.c:1278:
+static void garmin_read_int_callback (struct urb *urb, struct pt_regs *regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1359: FILE: drivers/usb/serial/garmin_gps.c:1283:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1371: FILE: drivers/usb/serial/garmin_gps.c:1295:
+		dbg("%s - urb shutting down with status: %d",
+			__FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1371: FILE: drivers/usb/serial/garmin_gps.c:1295:
+			__FUNCTION__, urb->status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1375: FILE: drivers/usb/serial/garmin_gps.c:1299:
+		dbg("%s - nonzero urb status received: %d",
+			__FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1375: FILE: drivers/usb/serial/garmin_gps.c:1299:
+			__FUNCTION__, urb->status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1379: FILE: drivers/usb/serial/garmin_gps.c:1303:
+^Iusb_serial_debug_data(debug, &port->dev, __FUNCTION__, $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1379: FILE: drivers/usb/serial/garmin_gps.c:1303:
+	usb_serial_debug_data(debug, &port->dev, __FUNCTION__, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1380: FILE: drivers/usb/serial/garmin_gps.c:1304:
+	usb_serial_debug_data(debug, &port->dev, __FUNCTION__, 
+				urb->actual_length, urb->transfer_buffer);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1383: FILE: drivers/usb/serial/garmin_gps.c:1307:
+	    0 == memcmp(data, GARMIN_BULK_IN_AVAIL_REPLY,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1384: FILE: drivers/usb/serial/garmin_gps.c:1308:
+^I^I        sizeof(GARMIN_BULK_IN_AVAIL_REPLY))) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1385: FILE: drivers/usb/serial/garmin_gps.c:1309:
+		        sizeof(GARMIN_BULK_IN_AVAIL_REPLY))) {
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1386: FILE: drivers/usb/serial/garmin_gps.c:1310:
+		dbg("%s - bulk data available.", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1389: FILE: drivers/usb/serial/garmin_gps.c:1313:
+		usb_fill_bulk_urb (port->read_urb, serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1390: FILE: drivers/usb/serial/garmin_gps.c:1314:
+		usb_fill_bulk_urb (port->read_urb, serial->dev,
+				usb_rcvbulkpipe (serial->dev,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1390: FILE: drivers/usb/serial/garmin_gps.c:1314:
+				usb_rcvbulkpipe (serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1391: FILE: drivers/usb/serial/garmin_gps.c:1315:
+				usb_rcvbulkpipe (serial->dev,
+				port->bulk_in_endpointAddress),

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1399: FILE: drivers/usb/serial/garmin_gps.c:1323:
+			__FUNCTION__, status);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1402: FILE: drivers/usb/serial/garmin_gps.c:1326:
+	} else if (urb->actual_length == (4+sizeof(GARMIN_START_SESSION_REPLY))
 	                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1403: FILE: drivers/usb/serial/garmin_gps.c:1327:
+	} else if (urb->actual_length == (4+sizeof(GARMIN_START_SESSION_REPLY))
+			 && 0 == memcmp(data, GARMIN_START_SESSION_REPLY,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1404: FILE: drivers/usb/serial/garmin_gps.c:1328:
+^I^I^I                sizeof(GARMIN_START_SESSION_REPLY))) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1405: FILE: drivers/usb/serial/garmin_gps.c:1329:
+			                sizeof(GARMIN_START_SESSION_REPLY))) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1409: FILE: drivers/usb/serial/garmin_gps.c:1333:
+^I^Igarmin_data_p->serial_num $

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1410: FILE: drivers/usb/serial/garmin_gps.c:1334:
+		garmin_data_p->serial_num 
+			= __le32_to_cpup((__le32*)(data+GARMIN_PKTHDR_LENGTH));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1410: FILE: drivers/usb/serial/garmin_gps.c:1334:
+			= __le32_to_cpup((__le32*)(data+GARMIN_PKTHDR_LENGTH));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1410: FILE: drivers/usb/serial/garmin_gps.c:1334:
+			= __le32_to_cpup((__le32*)(data+GARMIN_PKTHDR_LENGTH));
 			                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1413: FILE: drivers/usb/serial/garmin_gps.c:1337:
+		dbg("%s - start-of-session reply seen - serial %u.",
+			__FUNCTION__, garmin_data_p->serial_num);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1413: FILE: drivers/usb/serial/garmin_gps.c:1337:
+			__FUNCTION__, garmin_data_p->serial_num);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1418: FILE: drivers/usb/serial/garmin_gps.c:1342:
+		/* this reply belongs to a request generated by the driver,
+		   ignore it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1418: FILE: drivers/usb/serial/garmin_gps.c:1342:
+		   ignore it. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1420: FILE: drivers/usb/serial/garmin_gps.c:1344:
+		dbg("%s - pkt ignored (%d)",
+			__FUNCTION__, garmin_data_p->ignorePkts);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1420: FILE: drivers/usb/serial/garmin_gps.c:1344:
+			__FUNCTION__, garmin_data_p->ignorePkts);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1427: FILE: drivers/usb/serial/garmin_gps.c:1351:
+	status = usb_submit_urb (urb, GFP_ATOMIC);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1431: FILE: drivers/usb/serial/garmin_gps.c:1355:
+			__FUNCTION__, status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1434: FILE: drivers/usb/serial/garmin_gps.c:1358:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1440: FILE: drivers/usb/serial/garmin_gps.c:1364:
+static int garmin_flush_queue(struct garmin_data * garmin_data_p)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1447: FILE: drivers/usb/serial/garmin_gps.c:1371:
+		if (pkt != 0) {
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1450: FILE: drivers/usb/serial/garmin_gps.c:1374:
+			mod_timer(&garmin_data_p->timer, (1)+jiffies);
 			                                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1459: FILE: drivers/usb/serial/garmin_gps.c:1383:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1460: FILE: drivers/usb/serial/garmin_gps.c:1384:
+static void garmin_throttle (struct usb_serial_port *port)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1462: FILE: drivers/usb/serial/garmin_gps.c:1386:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1464: FILE: drivers/usb/serial/garmin_gps.c:1388:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1466: FILE: drivers/usb/serial/garmin_gps.c:1390:
+	/* set flag, data received will be put into a queue
+	   for later processing */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1466: FILE: drivers/usb/serial/garmin_gps.c:1390:
+	   for later processing */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1467: FILE: drivers/usb/serial/garmin_gps.c:1391:
+	garmin_data_p->flags |= FLAGS_QUEUING|FLAGS_THROTTLED;
 	                                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1470: FILE: drivers/usb/serial/garmin_gps.c:1394:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1471: FILE: drivers/usb/serial/garmin_gps.c:1395:
+static void garmin_unthrottle (struct usb_serial_port *port)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1473: FILE: drivers/usb/serial/garmin_gps.c:1397:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1475: FILE: drivers/usb/serial/garmin_gps.c:1399:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1479: FILE: drivers/usb/serial/garmin_gps.c:1403:
+	/* in native mode send queued data to tty, in
+	   serial mode nothing needs to be done here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1479: FILE: drivers/usb/serial/garmin_gps.c:1403:
+	   serial mode nothing needs to be done here */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1484: FILE: drivers/usb/serial/garmin_gps.c:1408:
+
+

CHECK:SPACING: No space is necessary after a cast
#1493: FILE: drivers/usb/serial/garmin_gps.c:1417:
+	struct garmin_data *garmin_data_p = (struct garmin_data *) data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1501: FILE: drivers/usb/serial/garmin_gps.c:1425:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1503: FILE: drivers/usb/serial/garmin_gps.c:1427:
+static int garmin_attach (struct usb_serial *serial)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1507: FILE: drivers/usb/serial/garmin_gps.c:1431:
+	struct garmin_data * garmin_data_p = 0;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1509: FILE: drivers/usb/serial/garmin_gps.c:1433:
+	dbg("%s", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1511: FILE: drivers/usb/serial/garmin_gps.c:1435:
+	garmin_data_p = kmalloc (sizeof(struct garmin_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*garmin_data_p)...) over kmalloc(sizeof(struct garmin_data)...)
#1511: FILE: drivers/usb/serial/garmin_gps.c:1435:
+	garmin_data_p = kmalloc (sizeof(struct garmin_data), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!garmin_data_p"
#1512: FILE: drivers/usb/serial/garmin_gps.c:1436:
+	if (garmin_data_p == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1513: FILE: drivers/usb/serial/garmin_gps.c:1437:
+	if (garmin_data_p == NULL) {
+		dev_err(&port->dev, "%s - Out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1513: FILE: drivers/usb/serial/garmin_gps.c:1437:
+		dev_err(&port->dev, "%s - Out of memory\n", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1516: FILE: drivers/usb/serial/garmin_gps.c:1440:
+	memset (garmin_data_p, 0, sizeof(struct garmin_data));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1533: FILE: drivers/usb/serial/garmin_gps.c:1457:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1534: FILE: drivers/usb/serial/garmin_gps.c:1458:
+static void garmin_shutdown (struct usb_serial *serial)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1537: FILE: drivers/usb/serial/garmin_gps.c:1461:
+	struct garmin_data * garmin_data_p = usb_get_serial_port_data(port);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1539: FILE: drivers/usb/serial/garmin_gps.c:1463:
+	dbg("%s", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1541: FILE: drivers/usb/serial/garmin_gps.c:1465:
+	usb_kill_urb (port->interrupt_in_urb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1543: FILE: drivers/usb/serial/garmin_gps.c:1467:
+	kfree (garmin_data_p);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1547: FILE: drivers/usb/serial/garmin_gps.c:1471:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1549: FILE: drivers/usb/serial/garmin_gps.c:1473:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1551: FILE: drivers/usb/serial/garmin_gps.c:1475:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1577: FILE: drivers/usb/serial/garmin_gps.c:1501:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1578: FILE: drivers/usb/serial/garmin_gps.c:1502:
+static int __init garmin_init (void)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1597: FILE: drivers/usb/serial/garmin_gps.c:1521:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1598: FILE: drivers/usb/serial/garmin_gps.c:1522:
+static void __exit garmin_exit (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1600: FILE: drivers/usb/serial/garmin_gps.c:1524:
+	usb_deregister (&garmin_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1601: FILE: drivers/usb/serial/garmin_gps.c:1525:
+	usb_serial_deregister (&garmin_device);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1604: FILE: drivers/usb/serial/garmin_gps.c:1528:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1606: FILE: drivers/usb/serial/garmin_gps.c:1530:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1610: FILE: drivers/usb/serial/garmin_gps.c:1534:
+MODULE_AUTHOR( DRIVER_AUTHOR );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1610: FILE: drivers/usb/serial/garmin_gps.c:1534:
+MODULE_AUTHOR( DRIVER_AUTHOR );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1611: FILE: drivers/usb/serial/garmin_gps.c:1535:
+MODULE_DESCRIPTION( DRIVER_DESC );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1611: FILE: drivers/usb/serial/garmin_gps.c:1535:
+MODULE_DESCRIPTION( DRIVER_DESC );

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1614: FILE: drivers/usb/serial/garmin_gps.c:1538:
+module_param(debug, bool, S_IWUSR | S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1616: FILE: drivers/usb/serial/garmin_gps.c:1540:
+module_param(initial_mode, int, S_IRUGO);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217737.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 120 errors, 176 warnings, 178 checks, 1568 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217737.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
