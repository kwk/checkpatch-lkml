WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Quoting r. Andi Kleen (ak@suse.de) "Re: [discuss] f_ops flag to speed up compatible ioctls in linux kernel":

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#47: 
Since with this approach I cant call sys_ioctl directly from compat_sys_ioctl,
                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: Unnecessary space before function pointer arguments
#70: FILE: include/linux/fs.h:882:
+	int (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#70: FILE: include/linux/fs.h:882:
+	int (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#70: FILE: include/linux/fs.h:882:
+	int (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#70: FILE: include/linux/fs.h:882:
+	int (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#70: FILE: include/linux/fs.h:882:
+	int (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:SPACING: Unnecessary space before function pointer arguments
#71: FILE: include/linux/fs.h:883:
+	int (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#71: FILE: include/linux/fs.h:883:
+	int (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#71: FILE: include/linux/fs.h:883:
+	int (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#71: FILE: include/linux/fs.h:883:
+	int (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#71: FILE: include/linux/fs.h:883:
+	int (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#84: FILE: include/linux/ioctl.h:8:
+int std_sys_ioctl(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: include/linux/ioctl.h:9:
+  unsigned int fd, unsigned int cmd, unsigned long arg,$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#86: FILE: include/linux/ioctl.h:10:
+  struct file * filp, int* error);
                 ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: include/linux/ioctl.h:10:
+  struct file * filp, int* error);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: include/linux/ioctl.h:10:
+  struct file * filp, int* error);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#86: FILE: include/linux/ioctl.h:10:
+  struct file * filp, int* error);

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#89: FILE: include/linux/ioctl.h:12:
diff -ruwp linux-2.6.8.1/fs/ioctl.c linux-2.6.8.1-new/fs/ioctl.c

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#113: FILE: fs/ioctl.c:54:
+EXPORT_SYMBOL(std_sys_ioctl);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#115: FILE: fs/ioctl.c:56:
+  struct file * filp, long* status)
                 ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: fs/ioctl.c:56:
+int std_sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg,
+  struct file * filp, long* status)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: fs/ioctl.c:56:
+  struct file * filp, long* status)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: fs/ioctl.c:56:
+  struct file * filp, long* status)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#115: FILE: fs/ioctl.c:56:
+  struct file * filp, long* status)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: fs/ioctl.c:58:
+	int on,error;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#130: FILE: fs/ioctl.c:62:
+		*status=error;
 		       ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#143: FILE: fs/ioctl.c:96:
+				if (filp->f_op && filp->f_op->fasync) {
[...]
 				else error = -ENOTTY;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#156: FILE: fs/ioctl.c:124:
+			if (S_ISREG(filp->f_dentry->d_inode->i_mode)) {
 				error = file_ioctl(filp, cmd, arg);
 	}

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#161: FILE: fs/ioctl.c:127:
+			if (error == -ENOTTY) return 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#163: FILE: fs/ioctl.c:129:
+	*status=error;
 	       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: fs/ioctl.c:133:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: fs/ioctl.c:136:
+{^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#171: FILE: fs/ioctl.c:137:
+	struct file * filp;
 	              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: fs/ioctl.c:137:
+	struct file * filp;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#175: FILE: fs/ioctl.c:141:
+	filp = fget_light(fd,&fput_needed);
 	^^^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#175: FILE: fs/ioctl.c:141:
+	filp = fget_light(fd,&fput_needed);
 	                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#175: FILE: fs/ioctl.c:141:
+	filp = fget_light(fd,&fput_needed);
 	                     ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#176: FILE: fs/ioctl.c:142:
+	if (!filp)
 	     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#179: FILE: fs/ioctl.c:145:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error)) {
 	                              ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: fs/ioctl.c:145:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error)) {
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: fs/ioctl.c:145:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error)) {
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: fs/ioctl.c:145:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error)) {
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#179: FILE: fs/ioctl.c:145:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error)) {
 	                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#179: FILE: fs/ioctl.c:145:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error)) {
 	                                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#179: FILE: fs/ioctl.c:145:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error)) {
+		goto out;
+	}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#184: FILE: fs/ioctl.c:150:
+		error = filp->f_op->ioctl_native(

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#186: FILE: fs/ioctl.c:152:
+				filp, cmd, arg);
 				^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#189: FILE: fs/ioctl.c:155:
+		error = filp->f_op->ioctl(

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#191: FILE: fs/ioctl.c:157:
+				filp, cmd, arg);
 				^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#196: FILE: fs/ioctl.c:161:
+	fput_light(filp,fput_needed);
 	           ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: fs/ioctl.c:161:
+	fput_light(filp,fput_needed);
 	               ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#210: FILE: fs/compat.c:392:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#216: FILE: fs/compat.c:396:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error))
 	                              ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: fs/compat.c:396:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error))
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: fs/compat.c:396:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error))
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: fs/compat.c:396:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error))
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#216: FILE: fs/compat.c:396:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error))
 	                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#216: FILE: fs/compat.c:396:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error))
 	                                   ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#216: FILE: fs/compat.c:396:
+	if (!std_sys_ioctl(fd,cmd,arg,filp,&error))
[...]
+	else if (filp->f_op && filp->f_op->ioctl_compat) {
[...]

ERROR:SPACING: space prohibited after that open parenthesis '('
#219: FILE: fs/compat.c:399:
+		error = filp->f_op->ioctl_compat( filp->f_dentry->d_inode,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#220: FILE: fs/compat.c:400:
+				filp, cmd, arg);
 				^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#233: FILE: fs/compat.c:414:
+			error = filp->f_op->ioctl(

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#235: FILE: fs/compat.c:416:
+					filp, cmd, arg);
 					^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#246: FILE: fs/compat.c:454:
+	fput_light(filp, fput_needed);
 	           ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251952.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 32 warnings, 8 checks, 190 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251952.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
