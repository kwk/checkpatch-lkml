CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!argbuf"
#66: FILE: drivers/scsi/libata-scsi.c:119:
+		if (argbuf == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sb[1] == NO_SENSE'
#98: FILE: drivers/scsi/libata-scsi.c:220:
+	if((sb[1] == NO_SENSE) && (sb[2] == 0) && (sb[3] == 0x1D)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sb[2] == 0'
#98: FILE: drivers/scsi/libata-scsi.c:220:
+	if((sb[1] == NO_SENSE) && (sb[2] == 0) && (sb[3] == 0x1D)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sb[3] == 0x1D'
#98: FILE: drivers/scsi/libata-scsi.c:220:
+	if((sb[1] == NO_SENSE) && (sb[2] == 0) && (sb[3] == 0x1D)) {

ERROR:SPACING: space required before the open parenthesis '('
#98: FILE: drivers/scsi/libata-scsi.c:220:
+	if((sb[1] == NO_SENSE) && (sb[2] == 0) && (sb[3] == 0x1D)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#99: FILE: drivers/scsi/libata-scsi.c:221:
+		unsigned char *desc= sb + 8;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#101: FILE: drivers/scsi/libata-scsi.c:223:
+		args[0]=desc[13];
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#102: FILE: drivers/scsi/libata-scsi.c:224:
+		args[1]=desc[3];
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#103: FILE: drivers/scsi/libata-scsi.c:225:
+		args[2]=desc[5];
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#104: FILE: drivers/scsi/libata-scsi.c:226:
+		args[3]=desc[7];
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#105: FILE: drivers/scsi/libata-scsi.c:227:
+		args[4]=desc[9];
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#106: FILE: drivers/scsi/libata-scsi.c:228:
+		args[5]=desc[11];
 		       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#136: FILE: drivers/scsi/libata-scsi.c:352:
+void ata_dump_status(unsigned id, struct ata_taskfile *tf, u8 stat)

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/scsi/libata-scsi.c:1026:
+ ^I^Iata_gen_ata_desc_sense(qc, drv_stat);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: drivers/scsi/libata-scsi.c:1026:
+ ^I^Iata_gen_ata_desc_sense(qc, drv_stat);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/scsi/libata-scsi.c:1026:
+ ^I^Iata_gen_ata_desc_sense(qc, drv_stat);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000147171.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 3 warnings, 4 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000147171.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
