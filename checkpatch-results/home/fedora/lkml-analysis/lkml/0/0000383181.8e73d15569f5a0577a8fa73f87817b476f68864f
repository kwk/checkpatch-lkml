WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
Remove dead code from sarlib, reorganize live sarlib code (trivial transformations).

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#32: 
--- a/drivers/usb/misc/speedtch.c	Mon Mar 24 12:13:27 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->len >= 53'
#70: FILE: drivers/usb/misc/speedtch.c:286:
+		if (vcc && (skb->len >= 53)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <reasBuffer>
#132: FILE: drivers/usb/misc/speedtch.c:289:
+			if (!vcc->reasBuffer)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: drivers/usb/misc/speedtch.c:290:
+				vcc->reasBuffer = dev_alloc_skb (vcc->mtu);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vcc->reasBuffer->len'
#145: FILE: drivers/usb/misc/speedtch.c:297:
+				if ((vcc->reasBuffer->len) > (vcc->mtu - 48))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: drivers/usb/misc/speedtch.c:298:
+					skb_trim (vcc->reasBuffer, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#149: FILE: drivers/usb/misc/speedtch.c:301:
+				memcpy (vcc->reasBuffer->tail, cell_payload, 48);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: drivers/usb/misc/speedtch.c:302:
+				skb_put (vcc->reasBuffer, 48);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: drivers/usb/misc/speedtch.c:311:
+					skb_pull (skb, 53);

WARNING:LONG_LINE_STRING: line length of 110 exceeds 100 columns
#165: FILE: drivers/usb/misc/speedtch.c:317:
+					    ("atmsar_decode_rawcell returns ATM_AAL5 pdu 0x%p with length %d",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: drivers/usb/misc/speedtch.c:325:
+			skb_pull (skb, 53);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: drivers/usb/misc/speedtch.c:328:
+			if (skb_pull (skb, 53) == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb_pull"
#181: FILE: drivers/usb/misc/speedtch.c:328:
+			if (skb_pull (skb, 53) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: drivers/usb/misc/speedtch.c:357:
+			atomic_inc (&ctx->vcc->stats->rx_err);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: drivers/usb/misc/speedtch.c:378:
+			atomic_inc (&ctx->vcc->stats->rx_err);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#214: FILE: drivers/usb/misc/speedtch.c:387:
+		atomic_inc (&ctx->vcc->stats->rx);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: drivers/usb/misc/speedtch.c:561:
+				new = atmsar_decode_aal5 (atmsar_vcc, new);

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#243: FILE: drivers/usb/misc/speedtch.c:563:
+				/* we can't send NULL skbs upstream, the ATM layer would try to close the vcc... */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: drivers/usb/misc/speedtch.c:565:
+					dbg ("(after aal5 decap) skb->len = %d", new->len);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#246: FILE: drivers/usb/misc/speedtch.c:566:
+					if (new->len && atm_charge (atmsar_vcc->vcc, new->truesize)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: drivers/usb/misc/speedtch.c:566:
+					if (new->len && atm_charge (atmsar_vcc->vcc, new->truesize)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: drivers/usb/misc/speedtch.c:567:
+						PACKETDEBUG (new->data, new->len);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: drivers/usb/misc/speedtch.c:568:
+						atmsar_vcc->vcc->push (atmsar_vcc->vcc, new);

WARNING:LONG_LINE_STRING: line length of 139 exceeds 100 columns
#253: FILE: drivers/usb/misc/speedtch.c:571:
+						    ("dropping incoming packet : rx_inuse = %d, vcc->sk->rcvbuf = %d, skb->true_size = %d",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: drivers/usb/misc/speedtch.c:572:
+						     atomic_read (&atmsar_vcc->vcc->rx_inuse),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: drivers/usb/misc/speedtch.c:574:
+						dev_kfree_skb (new);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: drivers/usb/misc/speedtch.c:577:
+					dbg ("atmsar_decode_aal5 returned NULL!");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: drivers/usb/misc/speedtch.c:578:
+					dev_kfree_skb (tmp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#379: FILE: drivers/usb/misc/speedtch.c:938:
+	if (!(new = kmalloc (sizeof (struct atmsar_vcc_data), GFP_KERNEL)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#379: FILE: drivers/usb/misc/speedtch.c:938:
+	if (!(new = kmalloc (sizeof (struct atmsar_vcc_data), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#379: FILE: drivers/usb/misc/speedtch.c:938:
+	if (!(new = kmalloc (sizeof (struct atmsar_vcc_data), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof (struct atmsar_vcc_data)...)
#379: FILE: drivers/usb/misc/speedtch.c:938:
+	if (!(new = kmalloc (sizeof (struct atmsar_vcc_data), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: drivers/usb/misc/speedtch.c:943:
+	memset (new, 0, sizeof (struct atmsar_vcc_data));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: drivers/usb/misc/speedtch.c:943:
+	memset (new, 0, sizeof (struct atmsar_vcc_data));

CHECK:SPACING: No space is necessary after a cast
#398: FILE: drivers/usb/misc/speedtch.c:950:
+	new->atmHeader = ((unsigned long) vpi << ATM_HDR_VPI_SHIFT) |

CHECK:CAMELCASE: Avoid CamelCase: <atmHeader>
#398: FILE: drivers/usb/misc/speedtch.c:950:
+	new->atmHeader = ((unsigned long) vpi << ATM_HDR_VPI_SHIFT) |

CHECK:SPACING: No space is necessary after a cast
#399: FILE: drivers/usb/misc/speedtch.c:951:
+			 ((unsigned long) vci << ATM_HDR_VCI_SHIFT);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: drivers/usb/misc/speedtch.c:957:
+	dbg ("Allocated new SARLib vcc 0x%p with vp %d vc %d", new, vpi, vci);

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#436: FILE: drivers/usb/misc/speedtch.c:993:
+		for (work = instance->atmsar_vcc_list; work && work->next && (work->next != vcc->dev_data); work = work->next);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#436: FILE: drivers/usb/misc/speedtch.c:993:
+		for (work = instance->atmsar_vcc_list; work && work->next && (work->next != vcc->dev_data); work = work->next);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#440: FILE: drivers/usb/misc/speedtch.c:997:
+			BUG ();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#440: FILE: drivers/usb/misc/speedtch.c:997:
+			BUG ();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#445: FILE: drivers/usb/misc/speedtch.c:1002:
+	if (((struct atmsar_vcc_data *)vcc->dev_data)->reasBuffer) {
+		dev_kfree_skb (((struct atmsar_vcc_data *)vcc->dev_data)->reasBuffer);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: drivers/usb/misc/speedtch.c:1003:
+		dev_kfree_skb (((struct atmsar_vcc_data *)vcc->dev_data)->reasBuffer);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#449: FILE: drivers/usb/misc/speedtch.c:1006:
+	dbg ("Deallocated SARLib vcc 0x%p with vp %d vc %d", vcc->dev_data, vcc->dev_data->vp, vcc->dev_data->vc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#449: FILE: drivers/usb/misc/speedtch.c:1006:
+	dbg ("Deallocated SARLib vcc 0x%p with vp %d vc %d", vcc->dev_data, vcc->dev_data->vp, vcc->dev_data->vc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#451: FILE: drivers/usb/misc/speedtch.c:1008:
+	kfree (vcc->dev_data);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383181.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 37 warnings, 8 checks, 409 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383181.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
