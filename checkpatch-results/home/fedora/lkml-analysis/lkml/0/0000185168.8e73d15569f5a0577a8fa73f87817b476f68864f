ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: drivers/block/genhd.c:328:
+		ret = disk_attr->show(disk,page,attr->data);
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: drivers/block/genhd.c:328:
+		ret = disk_attr->show(disk,page,attr->data);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: drivers/cpufreq/cpufreq.c:524:
+	ret = fattr->show ? fattr->show(policy,buf,attr->data) : 0;
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: drivers/cpufreq/cpufreq.c:524:
+	ret = fattr->show ? fattr->show(policy,buf,attr->data) : 0;
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: drivers/cpufreq/cpufreq.c:538:
+	ret = fattr->store ? fattr->store(policy,buf,count,attr->data) : 0;
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: drivers/cpufreq/cpufreq.c:538:
+	ret = fattr->store ? fattr->store(policy,buf,count,attr->data) : 0;
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: drivers/cpufreq/cpufreq.c:538:
+	ret = fattr->store ? fattr->store(policy,buf,count,attr->data) : 0;
 	                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/pci/pci-driver.c:59:
+store_new_id(struct device_driver *driver, const char *buf, size_t count, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/pci/pci-driver.c:60:
+store_new_id(struct device_driver *driver, const char *buf, size_t count, 
+		void *data)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#276: FILE: fs/sysfs/file.c:29:
+		ret = sattr->show(s,page,attr->data);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#276: FILE: fs/sysfs/file.c:29:
+		ret = sattr->show(s,page,attr->data);
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: fs/sysfs/file.c:42:
+		ret = sattr->store(s,page,count,attr->data);
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: fs/sysfs/file.c:42:
+		ret = sattr->store(s,page,count,attr->data);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: fs/sysfs/file.c:42:
+		ret = sattr->store(s,page,count,attr->data);
 		                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: include/linux/cpufreq.h:243:
+	ssize_t (*show)(struct cpufreq_policy *, char *, void * data);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cpufreq_policy *' should also have an identifier name
#298: FILE: include/linux/cpufreq.h:243:
+	ssize_t (*show)(struct cpufreq_policy *, char *, void * data);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#298: FILE: include/linux/cpufreq.h:243:
+	ssize_t (*show)(struct cpufreq_policy *, char *, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cpufreq_policy *' should also have an identifier name
#299: FILE: include/linux/cpufreq.h:244:
+	ssize_t (*store)(struct cpufreq_policy *, const char *, size_t count,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#299: FILE: include/linux/cpufreq.h:244:
+	ssize_t (*store)(struct cpufreq_policy *, const char *, size_t count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: include/linux/cpufreq.h:245:
+	ssize_t (*store)(struct cpufreq_policy *, const char *, size_t count,
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: include/linux/cpufreq.h:245:
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#313: FILE: include/linux/device.h:90:
+	ssize_t (*show)(struct bus_type *, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#313: FILE: include/linux/device.h:90:
+	ssize_t (*show)(struct bus_type *, char * buf, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bus_type *' should also have an identifier name
#313: FILE: include/linux/device.h:90:
+	ssize_t (*show)(struct bus_type *, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#314: FILE: include/linux/device.h:91:
+	ssize_t (*store)(struct bus_type *, const char * buf, size_t count,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bus_type *' should also have an identifier name
#314: FILE: include/linux/device.h:91:
+	ssize_t (*store)(struct bus_type *, const char * buf, size_t count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: include/linux/device.h:92:
+	ssize_t (*store)(struct bus_type *, const char * buf, size_t count,
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#315: FILE: include/linux/device.h:92:
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#325: FILE: include/linux/device.h:131:
+	ssize_t (*show)(struct device_driver *, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#325: FILE: include/linux/device.h:131:
+	ssize_t (*show)(struct device_driver *, char * buf, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device_driver *' should also have an identifier name
#325: FILE: include/linux/device.h:131:
+	ssize_t (*show)(struct device_driver *, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: include/linux/device.h:132:
+	ssize_t (*store)(struct device_driver *, const char * buf, size_t count,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device_driver *' should also have an identifier name
#326: FILE: include/linux/device.h:132:
+	ssize_t (*store)(struct device_driver *, const char * buf, size_t count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: include/linux/device.h:133:
+	ssize_t (*store)(struct device_driver *, const char * buf, size_t count,
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#327: FILE: include/linux/device.h:133:
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#337: FILE: include/linux/device.h:173:
+	ssize_t (*show)(struct class *, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#337: FILE: include/linux/device.h:173:
+	ssize_t (*show)(struct class *, char * buf, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct class *' should also have an identifier name
#337: FILE: include/linux/device.h:173:
+	ssize_t (*show)(struct class *, char * buf, void * data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: include/linux/device.h:174:
+^Issize_t (*store)(struct class *, const char * buf, size_t count, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#338: FILE: include/linux/device.h:174:
+	ssize_t (*store)(struct class *, const char * buf, size_t count, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct class *' should also have an identifier name
#338: FILE: include/linux/device.h:174:
+	ssize_t (*store)(struct class *, const char * buf, size_t count, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: include/linux/device.h:175:
+	ssize_t (*store)(struct class *, const char * buf, size_t count, 
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: include/linux/device.h:175:
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: include/linux/device.h:223:
+	ssize_t (*show)(struct class_device *, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: include/linux/device.h:223:
+	ssize_t (*show)(struct class_device *, char * buf, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct class_device *' should also have an identifier name
#349: FILE: include/linux/device.h:223:
+	ssize_t (*show)(struct class_device *, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#350: FILE: include/linux/device.h:224:
+	ssize_t (*store)(struct class_device *, const char * buf, size_t count, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#350: FILE: include/linux/device.h:224:
+	ssize_t (*store)(struct class_device *, const char * buf, size_t count, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct class_device *' should also have an identifier name
#350: FILE: include/linux/device.h:224:
+	ssize_t (*store)(struct class_device *, const char * buf, size_t count, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#360: FILE: include/linux/device.h:341:
+	ssize_t (*show)(struct device * dev, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#360: FILE: include/linux/device.h:341:
+	ssize_t (*show)(struct device * dev, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#360: FILE: include/linux/device.h:341:
+	ssize_t (*show)(struct device * dev, char * buf, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#361: FILE: include/linux/device.h:342:
+	ssize_t (*store)(struct device * dev, const char * buf, size_t count,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#361: FILE: include/linux/device.h:342:
+	ssize_t (*store)(struct device * dev, const char * buf, size_t count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: include/linux/device.h:343:
+	ssize_t (*store)(struct device * dev, const char * buf, size_t count,
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#362: FILE: include/linux/device.h:343:
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#374: FILE: include/linux/genhd.h:134:
+	ssize_t (*show)(struct gendisk *, char *, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#374: FILE: include/linux/genhd.h:134:
+	ssize_t (*show)(struct gendisk *, char *, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#374: FILE: include/linux/genhd.h:134:
+	ssize_t (*show)(struct gendisk *, char *, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#387: FILE: include/linux/kobject.h:237:
+	ssize_t (*show)(struct subsystem *, char *, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subsystem *' should also have an identifier name
#387: FILE: include/linux/kobject.h:237:
+	ssize_t (*show)(struct subsystem *, char *, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#387: FILE: include/linux/kobject.h:237:
+	ssize_t (*show)(struct subsystem *, char *, void * data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: include/linux/kobject.h:238:
+^Issize_t (*store)(struct subsystem *, const char *, size_t, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subsystem *' should also have an identifier name
#388: FILE: include/linux/kobject.h:238:
+	ssize_t (*store)(struct subsystem *, const char *, size_t, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#388: FILE: include/linux/kobject.h:238:
+	ssize_t (*store)(struct subsystem *, const char *, size_t, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#388: FILE: include/linux/kobject.h:238:
+	ssize_t (*store)(struct subsystem *, const char *, size_t, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: include/linux/kobject.h:239:
+^I^I^Ivoid * data); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: include/linux/kobject.h:239:
+	ssize_t (*store)(struct subsystem *, const char *, size_t, 
+			void * data); 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: include/linux/kobject.h:239:
+			void * data); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: include/linux/module.h:51:
+        ssize_t (*show)(struct module_attribute *, struct module *, char *, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: include/linux/module.h:51:
+        ssize_t (*show)(struct module_attribute *, struct module *, char *, $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: include/linux/module.h:51:
+        ssize_t (*show)(struct module_attribute *, struct module *, char *, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct module_attribute *' should also have an identifier name
#401: FILE: include/linux/module.h:51:
+        ssize_t (*show)(struct module_attribute *, struct module *, char *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct module *' should also have an identifier name
#401: FILE: include/linux/module.h:51:
+        ssize_t (*show)(struct module_attribute *, struct module *, char *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#401: FILE: include/linux/module.h:51:
+        ssize_t (*show)(struct module_attribute *, struct module *, char *, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#402: FILE: include/linux/module.h:52:
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#405: FILE: include/linux/module.h:54:
+			 const char *, size_t count, void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#418: FILE: include/linux/sysdev.h:80:
+	ssize_t (*show)(struct sys_device *, char *, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#418: FILE: include/linux/sysdev.h:80:
+	ssize_t (*show)(struct sys_device *, char *, void * data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#418: FILE: include/linux/sysdev.h:80:
+	ssize_t (*show)(struct sys_device *, char *, void * data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: include/linux/sysdev.h:81:
+^Issize_t (*store)(struct sys_device *, const char *, size_t, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sys_device *' should also have an identifier name
#419: FILE: include/linux/sysdev.h:81:
+	ssize_t (*store)(struct sys_device *, const char *, size_t, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#419: FILE: include/linux/sysdev.h:81:
+	ssize_t (*store)(struct sys_device *, const char *, size_t, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#419: FILE: include/linux/sysdev.h:81:
+	ssize_t (*store)(struct sys_device *, const char *, size_t, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: include/linux/sysdev.h:82:
+	ssize_t (*store)(struct sys_device *, const char *, size_t, 
+			void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#420: FILE: include/linux/sysdev.h:82:
+			void * data);

ERROR:POINTER_LOCATION: "foo *                  bar" should be "foo *bar"
#438: FILE: include/linux/sysfs.h:22:
+	void *                  data;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: include/linux/sysfs.h:38:
+^I.attr = {.name = __stringify(_name), .mode = _mode, ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#455: FILE: include/linux/sysfs.h:45:
+^I.attr^I= { .name = __stringify(_name), .mode = 0444, ^I\$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185168.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 51 errors, 30 warnings, 8 checks, 355 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185168.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
