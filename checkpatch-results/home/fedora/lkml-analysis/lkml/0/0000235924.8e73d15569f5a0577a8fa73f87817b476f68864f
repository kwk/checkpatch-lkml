WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: fs/namespace.c:624:
+     struct nameidata *old_nd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: fs/namespace.c:632:
+     old_nd = kmalloc(sizeof(*old_nd), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: fs/namespace.c:633:
+     if (!old_nd)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#75: FILE: fs/namespace.c:633:
+     if (!old_nd)
+           return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: fs/namespace.c:634:
+           return -ENOMEM;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: fs/namespace.c:634:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: fs/namespace.c:635:
+     err = path_lookup(old_name, LOOKUP_FOLLOW, old_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: fs/namespace.c:636:
+     if (err) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#78: FILE: fs/namespace.c:636:
+     if (err) {
+           kfree(old_nd);

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: fs/namespace.c:637:
+           kfree(old_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/namespace.c:637:
+           kfree(old_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: fs/namespace.c:639:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: fs/namespace.c:643:
+     if (check_mnt(nd->mnt) && (!recurse || check_mnt(old_nd->mnt))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#86: FILE: fs/namespace.c:643:
+     if (check_mnt(nd->mnt) && (!recurse || check_mnt(old_nd->mnt))) {
            err = -ENOMEM;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#88: FILE: fs/namespace.c:645:
            if (recurse)
+                 mnt = copy_tree(old_nd->mnt, old_nd->dentry);

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: fs/namespace.c:646:
+                 mnt = copy_tree(old_nd->mnt, old_nd->dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/namespace.c:646:
+                 mnt = copy_tree(old_nd->mnt, old_nd->dentry);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#91: FILE: fs/namespace.c:647:
            else
+                 mnt = clone_mnt(old_nd->mnt, old_nd->dentry);

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: fs/namespace.c:648:
+                 mnt = clone_mnt(old_nd->mnt, old_nd->dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: fs/namespace.c:648:
+                 mnt = clone_mnt(old_nd->mnt, old_nd->dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/namespace.c:667:
+     path_release(old_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/namespace.c:668:
+     kfree(old_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: fs/namespace.c:705:
+     struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: fs/namespace.c:706:
+           struct nameidata old_nd, parent_nd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: fs/namespace.c:706:
+           struct nameidata old_nd, parent_nd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: fs/namespace.c:707:
+     } *loc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/namespace.c:714:
+     loc = kmalloc(sizeof(*loc), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/namespace.c:715:
+     if (!loc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#124: FILE: fs/namespace.c:715:
+     if (!loc)
+           return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: fs/namespace.c:716:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/namespace.c:716:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/namespace.c:717:
+     err = path_lookup(old_name, LOOKUP_FOLLOW, &loc->old_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/namespace.c:718:
+     if (err) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#127: FILE: fs/namespace.c:718:
+     if (err) {
+           kfree (loc);

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: fs/namespace.c:719:
+           kfree (loc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/namespace.c:719:
+           kfree (loc);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: fs/namespace.c:719:
+           kfree (loc);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/namespace.c:721:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fs/namespace.c:727:
+     if (!check_mnt(nd->mnt) || !check_mnt(loc->old_nd.mnt))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#137: FILE: fs/namespace.c:727:
+     if (!check_mnt(nd->mnt) || !check_mnt(loc->old_nd.mnt))
            goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/namespace.c:740:
+     if (loc->old_nd.dentry != loc->old_nd.mnt->mnt_root)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#146: FILE: fs/namespace.c:740:
+     if (loc->old_nd.dentry != loc->old_nd.mnt->mnt_root)
            goto out2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/namespace.c:743:
+     if (loc->old_nd.mnt == loc->old_nd.mnt->mnt_parent)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#150: FILE: fs/namespace.c:743:
+     if (loc->old_nd.mnt == loc->old_nd.mnt->mnt_parent)
            goto out2;

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: fs/namespace.c:747:
+           S_ISDIR(loc->old_nd.dentry->d_inode->i_mode))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: fs/namespace.c:747:
+           S_ISDIR(loc->old_nd.dentry->d_inode->i_mode))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#159: FILE: fs/namespace.c:751:
      for (p = nd->mnt; p->mnt_parent!=p; p = p->mnt_parent)
+           if (p == loc->old_nd.mnt)

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: fs/namespace.c:752:
+           if (p == loc->old_nd.mnt)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/namespace.c:752:
+           if (p == loc->old_nd.mnt)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#161: FILE: fs/namespace.c:752:
+           if (p == loc->old_nd.mnt)
                  goto out2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/namespace.c:756:
+     detach_mnt(loc->old_nd.mnt, &loc->parent_nd);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#168: FILE: fs/namespace.c:757:
+     attach_mnt(loc->old_nd.mnt, nd);
                                  ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/namespace.c:757:
+     attach_mnt(loc->old_nd.mnt, nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: fs/namespace.c:761:
+     list_del_init(&loc->old_nd.mnt->mnt_fslink);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#180: FILE: fs/namespace.c:768:
      if (!err)
+           path_release(&loc->parent_nd);

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: fs/namespace.c:769:
+           path_release(&loc->parent_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: fs/namespace.c:769:
+           path_release(&loc->parent_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: fs/namespace.c:770:
+     path_release(&loc->old_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: fs/namespace.c:771:
+     kfree(loc);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#194: FILE: fs/namespace.c:1027:
+     struct nameidata *nd;
                        ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: fs/namespace.c:1027:
+     struct nameidata *nd;$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#202: FILE: fs/namespace.c:1054:
+     nd = kmalloc(sizeof(*nd), GFP_KERNEL);
      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#202: FILE: fs/namespace.c:1054:
+     nd = kmalloc(sizeof(*nd), GFP_KERNEL);
                           ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: fs/namespace.c:1054:
+     nd = kmalloc(sizeof(*nd), GFP_KERNEL);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#203: FILE: fs/namespace.c:1055:
+     if (!nd)
           ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: fs/namespace.c:1055:
+     if (!nd)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#203: FILE: fs/namespace.c:1055:
+     if (!nd)
+           return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: fs/namespace.c:1056:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: fs/namespace.c:1056:
+           return -ENOMEM;$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#209: FILE: fs/namespace.c:1059:
+     retval = path_lookup(dir_name, LOOKUP_FOLLOW, nd);
                                                    ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: fs/namespace.c:1059:
+     retval = path_lookup(dir_name, LOOKUP_FOLLOW, nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: fs/namespace.c:1060:
+     if (retval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#210: FILE: fs/namespace.c:1060:
+     if (retval) {
+           kfree(nd);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#211: FILE: fs/namespace.c:1061:
+           kfree(nd);
                  ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: fs/namespace.c:1061:
+           kfree(nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: fs/namespace.c:1061:
+           kfree(nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: fs/namespace.c:1063:
+     }$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#216: FILE: fs/namespace.c:1065:
+     retval = security_sb_mount(dev_name, nd, type_page, flags, data_page);
                                           ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: fs/namespace.c:1065:
+     retval = security_sb_mount(dev_name, nd, type_page, flags, data_page);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#220: FILE: fs/namespace.c:1069:
      if (flags & MS_REMOUNT)
+           retval = do_remount(nd, flags & ~MS_REMOUNT, mnt_flags,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#222: FILE: fs/namespace.c:1070:
+           retval = do_remount(nd, flags & ~MS_REMOUNT, mnt_flags,
                                ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: fs/namespace.c:1070:
+           retval = do_remount(nd, flags & ~MS_REMOUNT, mnt_flags,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: fs/namespace.c:1070:
+           retval = do_remount(nd, flags & ~MS_REMOUNT, mnt_flags,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: fs/namespace.c:1071:
+           retval = do_remount(nd, flags & ~MS_REMOUNT, mnt_flags,
                            data_page);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#224: FILE: fs/namespace.c:1072:
      else if (flags & MS_BIND)
+           retval = do_loopback(nd, dev_name, flags & MS_REC);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#226: FILE: fs/namespace.c:1073:
+           retval = do_loopback(nd, dev_name, flags & MS_REC);
                                 ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: fs/namespace.c:1073:
+           retval = do_loopback(nd, dev_name, flags & MS_REC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: fs/namespace.c:1073:
+           retval = do_loopback(nd, dev_name, flags & MS_REC);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#227: FILE: fs/namespace.c:1074:
      else if (flags & MS_MOVE)
+           retval = do_move_mount(nd, dev_name);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#229: FILE: fs/namespace.c:1075:
+           retval = do_move_mount(nd, dev_name);
                                   ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: fs/namespace.c:1075:
+           retval = do_move_mount(nd, dev_name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: fs/namespace.c:1075:
+           retval = do_move_mount(nd, dev_name);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#230: FILE: fs/namespace.c:1076:
      else
+           retval = do_new_mount(nd, type_page, flags, mnt_flags,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#232: FILE: fs/namespace.c:1077:
+           retval = do_new_mount(nd, type_page, flags, mnt_flags,
                                  ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: fs/namespace.c:1077:
+           retval = do_new_mount(nd, type_page, flags, mnt_flags,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/namespace.c:1077:
+           retval = do_new_mount(nd, type_page, flags, mnt_flags,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: fs/namespace.c:1078:
+           retval = do_new_mount(nd, type_page, flags, mnt_flags,
                              dev_name, data_page);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#236: FILE: fs/namespace.c:1080:
+     path_release(nd);
                   ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: fs/namespace.c:1080:
+     path_release(nd);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#237: FILE: fs/namespace.c:1081:
+     kfree(nd);
            ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: fs/namespace.c:1081:
+     kfree(nd);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 83 warnings, 2 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
