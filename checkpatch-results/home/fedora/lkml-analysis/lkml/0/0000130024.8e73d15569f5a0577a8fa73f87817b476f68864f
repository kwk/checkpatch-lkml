WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
diff -urN -x 'build-*' -x '*~' -x Make -x scripts linux-2.6.14/arch/i386/kernel/Makefile work-2.6.14/arch/i386/kernel/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: arch/i386/kernel/alternative.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#93: FILE: arch/i386/kernel/alternative.c:8:
+# define DPRINTK(fmt, args...) printk(fmt, args)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: arch/i386/kernel/alternative.c:13:
+/* Use inline assembly to define this because the nops are defined $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: arch/i386/kernel/alternative.c:14:
+   as inline assembly strings in the include files and we cannot $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#99: FILE: arch/i386/kernel/alternative.c:14:
+/* Use inline assembly to define this because the nops are defined 
+   as inline assembly strings in the include files and we cannot 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#100: FILE: arch/i386/kernel/alternative.c:15:
+   get them easily into strings. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: arch/i386/kernel/alternative.c:16:
+asm("\t.data\nintelnops: " $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/i386/kernel/alternative.c:17:
+    GENERIC_NOP1 GENERIC_NOP2 GENERIC_NOP3 GENERIC_NOP4 GENERIC_NOP5 GENERIC_NOP6$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: arch/i386/kernel/alternative.c:18:
+    GENERIC_NOP7 GENERIC_NOP8); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/i386/kernel/alternative.c:18:
+    GENERIC_NOP7 GENERIC_NOP8); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: arch/i386/kernel/alternative.c:19:
+asm("\t.data\nk8nops: " $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/i386/kernel/alternative.c:20:
+    K8_NOP1 K8_NOP2 K8_NOP3 K8_NOP4 K8_NOP5 K8_NOP6$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: arch/i386/kernel/alternative.c:21:
+    K8_NOP7 K8_NOP8); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: arch/i386/kernel/alternative.c:21:
+    K8_NOP7 K8_NOP8); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: arch/i386/kernel/alternative.c:22:
+asm("\t.data\nk7nops: " $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/i386/kernel/alternative.c:23:
+    K7_NOP1 K7_NOP2 K7_NOP3 K7_NOP4 K7_NOP5 K7_NOP6$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: arch/i386/kernel/alternative.c:24:
+    K7_NOP7 K7_NOP8); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/i386/kernel/alternative.c:24:
+    K7_NOP7 K7_NOP8); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: arch/i386/kernel/alternative.c:25:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/i386/kernel/alternative.c:25:
+    $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#111: FILE: arch/i386/kernel/alternative.c:26:
+extern unsigned char intelnops[], k8nops[], k7nops[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: arch/i386/kernel/alternative.c:27:
+static unsigned char *intel_nops[ASM_NOP_MAX+1] = { $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#112: FILE: arch/i386/kernel/alternative.c:27:
+static unsigned char *intel_nops[ASM_NOP_MAX+1] = { 
                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/i386/kernel/alternative.c:28:
+     NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/i386/kernel/alternative.c:29:
+     intelnops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/i386/kernel/alternative.c:30:
+     intelnops + 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/i386/kernel/alternative.c:31:
+     intelnops + 1 + 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/i386/kernel/alternative.c:32:
+     intelnops + 1 + 2 + 3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/i386/kernel/alternative.c:33:
+     intelnops + 1 + 2 + 3 + 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/i386/kernel/alternative.c:34:
+     intelnops + 1 + 2 + 3 + 4 + 5,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/i386/kernel/alternative.c:35:
+     intelnops + 1 + 2 + 3 + 4 + 5 + 6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/i386/kernel/alternative.c:36:
+     intelnops + 1 + 2 + 3 + 4 + 5 + 6 + 7,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: arch/i386/kernel/alternative.c:37:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: arch/i386/kernel/alternative.c:38:
+static unsigned char *k8_nops[ASM_NOP_MAX+1] = { $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#123: FILE: arch/i386/kernel/alternative.c:38:
+}; 
+static unsigned char *k8_nops[ASM_NOP_MAX+1] = { 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#123: FILE: arch/i386/kernel/alternative.c:38:
+static unsigned char *k8_nops[ASM_NOP_MAX+1] = { 
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/i386/kernel/alternative.c:39:
+     NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/i386/kernel/alternative.c:40:
+     k8nops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/i386/kernel/alternative.c:41:
+     k8nops + 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/i386/kernel/alternative.c:42:
+     k8nops + 1 + 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/i386/kernel/alternative.c:43:
+     k8nops + 1 + 2 + 3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/i386/kernel/alternative.c:44:
+     k8nops + 1 + 2 + 3 + 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/i386/kernel/alternative.c:45:
+     k8nops + 1 + 2 + 3 + 4 + 5,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/i386/kernel/alternative.c:46:
+     k8nops + 1 + 2 + 3 + 4 + 5 + 6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/i386/kernel/alternative.c:47:
+     k8nops + 1 + 2 + 3 + 4 + 5 + 6 + 7,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: arch/i386/kernel/alternative.c:48:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: arch/i386/kernel/alternative.c:49:
+static unsigned char *k7_nops[ASM_NOP_MAX+1] = { $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#134: FILE: arch/i386/kernel/alternative.c:49:
+}; 
+static unsigned char *k7_nops[ASM_NOP_MAX+1] = { 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#134: FILE: arch/i386/kernel/alternative.c:49:
+static unsigned char *k7_nops[ASM_NOP_MAX+1] = { 
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/i386/kernel/alternative.c:50:
+     NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/i386/kernel/alternative.c:51:
+     k7nops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/i386/kernel/alternative.c:52:
+     k7nops + 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/i386/kernel/alternative.c:53:
+     k7nops + 1 + 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/i386/kernel/alternative.c:54:
+     k7nops + 1 + 2 + 3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/i386/kernel/alternative.c:55:
+     k7nops + 1 + 2 + 3 + 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/i386/kernel/alternative.c:56:
+     k7nops + 1 + 2 + 3 + 4 + 5,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/i386/kernel/alternative.c:57:
+     k7nops + 1 + 2 + 3 + 4 + 5 + 6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/i386/kernel/alternative.c:58:
+     k7nops + 1 + 2 + 3 + 4 + 5 + 6 + 7,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: arch/i386/kernel/alternative.c:59:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: arch/i386/kernel/alternative.c:60:
+static struct nop { $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#145: FILE: arch/i386/kernel/alternative.c:60:
+}; 
+static struct nop { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: arch/i386/kernel/alternative.c:61:
+     int cpuid; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/i386/kernel/alternative.c:61:
+     int cpuid; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: arch/i386/kernel/alternative.c:62:
+     unsigned char **noptable; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/i386/kernel/alternative.c:62:
+     unsigned char **noptable; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: arch/i386/kernel/alternative.c:63:
+} noptypes[] = { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: arch/i386/kernel/alternative.c:64:
+     { X86_FEATURE_K8, k8_nops }, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/i386/kernel/alternative.c:64:
+     { X86_FEATURE_K8, k8_nops }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: arch/i386/kernel/alternative.c:65:
+     { X86_FEATURE_K7, k7_nops }, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/i386/kernel/alternative.c:65:
+     { X86_FEATURE_K7, k7_nops }, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/kernel/alternative.c:66:
+     { -1, NULL }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: arch/i386/kernel/alternative.c:67:
+}; $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#154: FILE: arch/i386/kernel/alternative.c:69:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#155: FILE: arch/i386/kernel/alternative.c:70:
+extern struct alt_instr __alt_instructions[], __alt_instructions_end[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#156: FILE: arch/i386/kernel/alternative.c:71:
+extern struct alt_instr __smp_alt_instructions[], __smp_alt_instructions_end[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#157: FILE: arch/i386/kernel/alternative.c:72:
+extern u8 *__smp_locks[], *__smp_locks_end[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#159: FILE: arch/i386/kernel/alternative.c:74:
+extern u8 _text[], _etext[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#160: FILE: arch/i386/kernel/alternative.c:75:
+extern u8 __smp_alt_begin[], __smp_alt_end[];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#162: FILE: arch/i386/kernel/alternative.c:77:
+
+

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#163: FILE: arch/i386/kernel/alternative.c:78:
+static unsigned char** find_nop_table(void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/i386/kernel/alternative.c:80:
+        unsigned char **noptable = intel_nops;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/i386/kernel/alternative.c:80:
+        unsigned char **noptable = intel_nops;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: arch/i386/kernel/alternative.c:83:
+^Ifor (i = 0; noptypes[i].cpuid >= 0; i++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/i386/kernel/alternative.c:84:
+^I^Iif (boot_cpu_has(noptypes[i].cpuid)) { $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#178: FILE: arch/i386/kernel/alternative.c:93:
+/* Replace instructions with better alternatives for this CPU type.
+   This runs before SMP is initialized to avoid SMP problems with

WARNING:TYPO_SPELLING: 'assymetric' may be misspelled - perhaps 'asymmetric'?
#179: FILE: arch/i386/kernel/alternative.c:94:
+   self modifying code. This implies that assymetric systems where
                                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: arch/i386/kernel/alternative.c:95:
+   APs have less capabilities than the boot processor are not handled. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#181: FILE: arch/i386/kernel/alternative.c:96:
+   Tough. Make sure you disable such features by hand. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: arch/i386/kernel/alternative.c:99:
+{ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/i386/kernel/alternative.c:100:
+        unsigned char **noptable = find_nop_table();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/i386/kernel/alternative.c:100:
+        unsigned char **noptable = find_nop_table();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: arch/i386/kernel/alternative.c:101:
+^Istruct alt_instr *a; $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#189: FILE: arch/i386/kernel/alternative.c:104:
+	DPRINTK("%s: alt table %p -> %p\n", __FUNCTION__, start, end);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: arch/i386/kernel/alternative.c:105:
+^Ifor (a = start; a < end; a++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: arch/i386/kernel/alternative.c:106:
+^I^IBUG_ON(a->replacementlen > a->instrlen); $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#191: FILE: arch/i386/kernel/alternative.c:106:
+		BUG_ON(a->replacementlen > a->instrlen); 

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: arch/i386/kernel/alternative.c:109:
+^I^Imemcpy(a->instr, a->replacement, a->replacementlen); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: arch/i386/kernel/alternative.c:110:
+^I^Idiff = a->instrlen - a->replacementlen; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: arch/i386/kernel/alternative.c:116:
+^I^I^Imemcpy(a->instr + i, noptable[k], k); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: arch/i386/kernel/alternative.c:117:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: arch/i386/kernel/alternative.c:119:
+} $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#210: FILE: arch/i386/kernel/alternative.c:125:
+	DPRINTK("%s: alt table %p-%p\n", __FUNCTION__, start, end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: arch/i386/kernel/alternative.c:159:
+        unsigned char **noptable = find_nop_table();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/i386/kernel/alternative.c:159:
+        unsigned char **noptable = find_nop_table();$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#271: FILE: arch/i386/kernel/alternative.c:186:
+};
+static LIST_HEAD(smp_alt_modules);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#274: FILE: arch/i386/kernel/alternative.c:189:
+static int smp_alt_once = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#280: FILE: arch/i386/kernel/alternative.c:195:
+__setup("smp-alt-boot", bootonly);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#297: FILE: arch/i386/kernel/alternative.c:212:
+	if (NULL == smp)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#307: FILE: arch/i386/kernel/alternative.c:222:
+		__FUNCTION__, smp->locks, smp->locks_end,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#332: FILE: arch/i386/kernel/alternative.c:247:
+		DPRINTK("%s: %s\n", __FUNCTION__, item->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: arch/i386/kernel/alternative.c:254:
+void alternatives_smp_switch(int smp) $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#346: FILE: arch/i386/kernel/alternative.c:261:
+	BUG_ON(!smp && (num_online_cpus() > 1));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#350: FILE: arch/i386/kernel/alternative.c:265:
+		printk(KERN_INFO "SMP alternatives: switching to SMP code\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#358: FILE: arch/i386/kernel/alternative.c:273:
+		printk(KERN_INFO "SMP alternatives: switching to UP code\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: arch/i386/kernel/alternative.c:282:
+} $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#377: FILE: arch/i386/kernel/alternative.c:292:
+	 * change */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: arch/i386/kernel/alternative.c:299:
+^I$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#386: FILE: arch/i386/kernel/alternative.c:301:
+		if (1 == num_possible_cpus()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#387: FILE: arch/i386/kernel/alternative.c:302:
+			printk(KERN_INFO "SMP alternatives: switching to UP code\n");

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#420: FILE: arch/i386/kernel/module.c:111:
+	const Elf_Shdr *s, *text = NULL, *alt = NULL, *locks = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#436: FILE: arch/i386/kernel/module.c:120:
+			locks= s;
 			     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: arch/i386/kernel/module.c:124:
+^I^I/* patch .altinstructions */ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#442: FILE: arch/i386/kernel/module.c:126:
+		void *aseg = (void *)alt->sh_addr;
+		apply_alternatives(aseg, aseg + alt->sh_size);

WARNING:LINE_SPACING: Missing a blank line after declarations
#447: FILE: arch/i386/kernel/module.c:131:
+		void *tseg = (void *)text->sh_addr;
+		alternatives_smp_module_add(me, me->name,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#610: FILE: arch/i386/kernel/smpboot.c:1320:
+	if (1 == num_online_cpus())

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: arch/i386/kernel/vmlinux.lds.S:78:
+  __smp_alt_instructions_end = .; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: arch/i386/kernel/vmlinux.lds.S:84:
+  __smp_locks_end = .; $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#667: FILE: arch/i386/mm/init.c:681:
+	printk(KERN_INFO "Freeing %s: %ldk freed\n", what, (end - begin) >> 10);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#695: FILE: include/asm-i386/alternative.h:1:
+#ifndef _I386_ALTERNATIVE_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: include/asm-i386/alternative.h:6:
+struct alt_instr { $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#701: FILE: include/asm-i386/alternative.h:7:
+^Iu8 *instr; ^I^I/* original instruction */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: include/asm-i386/alternative.h:11:
+^Iu8  replacementlen; ^I/* length of new instruction, <= instrlen */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#705: FILE: include/asm-i386/alternative.h:11:
+^Iu8  replacementlen; ^I/* length of new instruction, <= instrlen */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: include/asm-i386/alternative.h:13:
+}; $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#709: FILE: include/asm-i386/alternative.h:15:
+extern void apply_alternatives(struct alt_instr *start, struct alt_instr *end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#712: FILE: include/asm-i386/alternative.h:18:
+extern void alternatives_smp_module_add(struct module *mod, char *name,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#715: FILE: include/asm-i386/alternative.h:21:
+extern void alternatives_smp_module_del(struct module *mod);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#716: FILE: include/asm-i386/alternative.h:22:
+extern void alternatives_smp_switch(int smp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#720: FILE: include/asm-i386/alternative.h:26:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#722: FILE: include/asm-i386/alternative.h:28:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: include/asm-i386/alternative.h:31:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: include/asm-i386/alternative.h:34:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#732: FILE: include/asm-i386/alternative.h:38:
+#define alternative(oldinstr, newinstr, feature) ^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#732: FILE: include/asm-i386/alternative.h:38:
+#define alternative(oldinstr, newinstr, feature) 	\
+	asm volatile ("661:\n\t" oldinstr "\n662:\n" 		     \
+		      ".section .altinstructions,\"a\"\n"     	     \
+		      "  .align 4\n"				       \
+		      "  .long 661b\n"            /* label */          \
+		      "  .long 663f\n"		  /* new instruction */ 	\
+		      "  .byte %c0\n"             /* feature bit */    \
+		      "  .byte 662b-661b\n"       /* sourcelen */      \
+		      "  .byte 664f-663f\n"       /* replacementlen */ \
+		      ".previous\n"						\
+		      ".section .altinstr_replacement,\"ax\"\n"			\
+		      "663:\n\t" newinstr "\n664:\n"   /* replacement */    \
+		      ".previous" :: "i" (feature) : "memory")  

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#733: FILE: include/asm-i386/alternative.h:39:
+^Iasm volatile ("661:\n\t" oldinstr "\n662:\n" ^I^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#734: FILE: include/asm-i386/alternative.h:40:
+^I^I      ".section .altinstructions,\"a\"\n"     ^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#737: FILE: include/asm-i386/alternative.h:43:
+^I^I      "  .long 663f\n"^I^I  /* new instruction */ ^I\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: include/asm-i386/alternative.h:50:
+^I^I      ".previous" :: "i" (feature) : "memory")  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#748: FILE: include/asm-i386/alternative.h:54:
+ * $

WARNING:TYPO_SPELLING: 'Pecularities' may be misspelled - perhaps 'Peculiarities'?
#749: FILE: include/asm-i386/alternative.h:55:
+ * Pecularities:
    ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: include/asm-i386/alternative.h:56:
+ * No memory clobber here. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: include/asm-i386/alternative.h:59:
+ * If you use variable sized constraints like "m" or "g" in the $

WARNING:TYPO_SPELLING: 'maake' may be misspelled - perhaps 'make'?
#754: FILE: include/asm-i386/alternative.h:60:
+ * replacement maake sure to pad to the worst case length.
                ^^^^^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#756: FILE: include/asm-i386/alternative.h:62:
+#define alternative_input(oldinstr, newinstr, feature, input...)		\
+	asm volatile ("661:\n\t" oldinstr "\n662:\n"				\
+		      ".section .altinstructions,\"a\"\n"			\
+		      "  .align 4\n"						\
+		      "  .long 661b\n"            /* label */			\
+		      "  .long 663f\n"		  /* new instruction */ 	\
+		      "  .byte %c0\n"             /* feature bit */		\
+		      "  .byte 662b-661b\n"       /* sourcelen */		\
+		      "  .byte 664f-663f\n"       /* replacementlen */ 		\
+		      ".previous\n"						\
+		      ".section .altinstr_replacement,\"ax\"\n"			\
+		      "663:\n\t" newinstr "\n664:\n"   /* replacement */ 	\
+		      ".previous" :: "i" (feature), ##input)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#761: FILE: include/asm-i386/alternative.h:67:
+^I^I      "  .long 663f\n"^I^I  /* new instruction */ ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#764: FILE: include/asm-i386/alternative.h:70:
+^I^I      "  .byte 664f-663f\n"       /* replacementlen */ ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#767: FILE: include/asm-i386/alternative.h:73:
+^I^I      "663:\n\t" newinstr "\n664:\n"   /* replacement */ ^I\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#783: FILE: include/asm-i386/alternative.h:89:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: include/asm-i386/alternative.h:98:
+ */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#795: FILE: include/asm-i386/alternative.h:101:
+#define alternative_smp(smpinstr, upinstr, args...) ^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#795: FILE: include/asm-i386/alternative.h:101:
+#define alternative_smp(smpinstr, upinstr, args...) 	\
+	asm volatile ("661:\n\t" smpinstr "\n662:\n" 		     \
+		      ".section .smp_altinstructions,\"a\"\n"          \
+		      "  .align 4\n"				       \
+		      "  .long 661b\n"            /* label */          \
+		      "  .long 663f\n"		  /* new instruction */ 	\
+		      "  .byte 0x68\n"            /* X86_FEATURE_UP */    \
+		      "  .byte 662b-661b\n"       /* sourcelen */      \
+		      "  .byte 664f-663f\n"       /* replacementlen */ \
+		      ".previous\n"						\
+		      ".section .smp_altinstr_replacement,\"awx\"\n"   		\
+		      "663:\n\t" upinstr "\n"     /* replacement */    \
+		      "664:\n\t.fill 662b-661b,1,0x42\n" /* space for original */ \
+		      ".previous" : args)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#796: FILE: include/asm-i386/alternative.h:102:
+^Iasm volatile ("661:\n\t" smpinstr "\n662:\n" ^I^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#800: FILE: include/asm-i386/alternative.h:106:
+^I^I      "  .long 663f\n"^I^I  /* new instruction */ ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#805: FILE: include/asm-i386/alternative.h:111:
+^I^I      ".section .smp_altinstr_replacement,\"awx\"\n"   ^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: include/asm-i386/alternative.h:121:
+^I       ^I"661:\n\tlock; "$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#815: FILE: include/asm-i386/alternative.h:121:
+^I       ^I"661:\n\tlock; "$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#818: FILE: include/asm-i386/alternative.h:124:
+#define alternative_smp(smpinstr, upinstr, args...) \
+	asm volatile (upinstr : args)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#966: FILE: include/asm-i386/cpufeature.h:73:
+#define X86_FEATURE_UP		(3*32+ 8) /* smp kernel running on up */
                       		  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#966: FILE: include/asm-i386/cpufeature.h:73:
+#define X86_FEATURE_UP		(3*32+ 8) /* smp kernel running on up */
                       		     ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#988: FILE: include/asm-i386/rwlock.h:29:
+			:"a" (rw) : "memory")
 			^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1007: FILE: include/asm-i386/rwlock.h:40:
+			"=m" (*(volatile int *)rw) : : "memory")

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1025: FILE: include/asm-i386/rwlock.h:55:
+			:"a" (rw) : "memory")
 			^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1044: FILE: include/asm-i386/rwlock.h:66:
+			"=m" (*(volatile int *)rw) : : "memory")

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1102: FILE: include/asm-i386/spinlock.h:56:
+	alternative_smp(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1113: FILE: include/asm-i386/spinlock.h:64:
+	alternative_smp(

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#1125: FILE: include/asm-i386/spinlock.h:186:
+	asm volatile(LOCK_PREFIX "incl %0" :"=m" (rw->lock) : : "memory");
 	                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130024.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 67 errors, 91 warnings, 19 checks, 1054 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000130024.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
