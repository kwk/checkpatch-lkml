WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
> - The driver (or at least a close relative) worked flawlessly for me for 1 year

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: drivers/net/irda/via-ircc.c:1:
+/********************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#91: FILE: drivers/net/irda/via-ircc.c:2:
+/********************************************************************
+ Filename:      via-ircc.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: drivers/net/irda/via-ircc.c:3:
+ Version:       1.0 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#109: FILE: drivers/net/irda/via-ircc.c:20:
+this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#110: FILE: drivers/net/irda/via-ircc.c:21:
+59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: drivers/net/irda/via-ircc.c:29:
+       $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#132: FILE: drivers/net/irda/via-ircc.c:43:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#150: FILE: drivers/net/irda/via-ircc.c:61:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#151: FILE: drivers/net/irda/via-ircc.c:62:
+#define DBG(x) {if (debug) x;}
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'defalut' may be misspelled - perhaps 'default'?
#161: FILE: drivers/net/irda/via-ircc.c:72:
+static int dongle_id = 9;	//defalut IBM type
                          	  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: drivers/net/irda/via-ircc.c:81:
+static int via_ircc_open(int i, chipio_t * info, unsigned int id);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: drivers/net/irda/via-ircc.c:83:
+static int via_ircc_setup(chipio_t * info, unsigned int id);

CHECK:CAMELCASE: Avoid CamelCase: <RxTimerHandler>
#195: FILE: drivers/net/irda/via-ircc.c:106:
+static int RxTimerHandler(struct via_ircc_cb *self, int iobase);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#196: FILE: drivers/net/irda/via-ircc.c:107:
+void hwreset(struct via_ircc_cb *self);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: drivers/net/irda/via-ircc.c:110:
+static int __init via_init_one (struct pci_dev *pcidev, const struct pci_device_id *id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: drivers/net/irda/via-ircc.c:111:
+static void __exit via_remove_one (struct pci_dev *pdev);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#208: FILE: drivers/net/irda/via-ircc.c:119:
+	for (i = 0; i < udelay; i++) {
+		data = inb(0x80);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#214: FILE: drivers/net/irda/via-ircc.c:125:
+	{ PCI_VENDOR_ID_VIA, DeviceID1, PCI_ANY_ID, PCI_ANY_ID,0,0,0 },
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#214: FILE: drivers/net/irda/via-ircc.c:125:
+	{ PCI_VENDOR_ID_VIA, DeviceID1, PCI_ANY_ID, PCI_ANY_ID,0,0,0 },
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#214: FILE: drivers/net/irda/via-ircc.c:125:
+	{ PCI_VENDOR_ID_VIA, DeviceID1, PCI_ANY_ID, PCI_ANY_ID,0,0,0 },
 	                                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <DeviceID1>
#214: FILE: drivers/net/irda/via-ircc.c:125:
+	{ PCI_VENDOR_ID_VIA, DeviceID1, PCI_ANY_ID, PCI_ANY_ID,0,0,0 },

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: drivers/net/irda/via-ircc.c:126:
+	{ PCI_VENDOR_ID_VIA, DeviceID2, PCI_ANY_ID, PCI_ANY_ID,0,0,1 },
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: drivers/net/irda/via-ircc.c:126:
+	{ PCI_VENDOR_ID_VIA, DeviceID2, PCI_ANY_ID, PCI_ANY_ID,0,0,1 },
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: drivers/net/irda/via-ircc.c:126:
+	{ PCI_VENDOR_ID_VIA, DeviceID2, PCI_ANY_ID, PCI_ANY_ID,0,0,1 },
 	                                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <DeviceID2>
#215: FILE: drivers/net/irda/via-ircc.c:126:
+	{ PCI_VENDOR_ID_VIA, DeviceID2, PCI_ANY_ID, PCI_ANY_ID,0,0,1 },

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: drivers/net/irda/via-ircc.c:127:
+	{ PCI_VENDOR_ID_VIA, DeviceID3, PCI_ANY_ID, PCI_ANY_ID,0,0,2 },
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: drivers/net/irda/via-ircc.c:127:
+	{ PCI_VENDOR_ID_VIA, DeviceID3, PCI_ANY_ID, PCI_ANY_ID,0,0,2 },
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: drivers/net/irda/via-ircc.c:127:
+	{ PCI_VENDOR_ID_VIA, DeviceID3, PCI_ANY_ID, PCI_ANY_ID,0,0,2 },
 	                                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <DeviceID3>
#216: FILE: drivers/net/irda/via-ircc.c:127:
+	{ PCI_VENDOR_ID_VIA, DeviceID3, PCI_ANY_ID, PCI_ANY_ID,0,0,2 },

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: drivers/net/irda/via-ircc.c:128:
+	{ PCI_VENDOR_ID_VIA, DeviceID4, PCI_ANY_ID, PCI_ANY_ID,0,0,3 },
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: drivers/net/irda/via-ircc.c:128:
+	{ PCI_VENDOR_ID_VIA, DeviceID4, PCI_ANY_ID, PCI_ANY_ID,0,0,3 },
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: drivers/net/irda/via-ircc.c:128:
+	{ PCI_VENDOR_ID_VIA, DeviceID4, PCI_ANY_ID, PCI_ANY_ID,0,0,3 },
 	                                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <DeviceID4>
#217: FILE: drivers/net/irda/via-ircc.c:128:
+	{ PCI_VENDOR_ID_VIA, DeviceID4, PCI_ANY_ID, PCI_ANY_ID,0,0,3 },

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: drivers/net/irda/via-ircc.c:129:
+	{ PCI_VENDOR_ID_VIA, DeviceID5, PCI_ANY_ID, PCI_ANY_ID,0,0,4 },
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: drivers/net/irda/via-ircc.c:129:
+	{ PCI_VENDOR_ID_VIA, DeviceID5, PCI_ANY_ID, PCI_ANY_ID,0,0,4 },
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: drivers/net/irda/via-ircc.c:129:
+	{ PCI_VENDOR_ID_VIA, DeviceID5, PCI_ANY_ID, PCI_ANY_ID,0,0,4 },
 	                                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <DeviceID5>
#218: FILE: drivers/net/irda/via-ircc.c:129:
+	{ PCI_VENDOR_ID_VIA, DeviceID5, PCI_ANY_ID, PCI_ANY_ID,0,0,4 },

ERROR:SPACING: space required after that ',' (ctx:VxV)
#222: FILE: drivers/net/irda/via-ircc.c:133:
+MODULE_DEVICE_TABLE(pci,via_pci_tbl);
                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#224: FILE: drivers/net/irda/via-ircc.c:135:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: drivers/net/irda/via-ircc.c:143:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#234: FILE: drivers/net/irda/via-ircc.c:145:
+/*
+ * Function via_ircc_init ()

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/net/irda/via-ircc.c:154:
+        DBG(printk(KERN_INFO "via_ircc_init ......\n"));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/net/irda/via-ircc.c:154:
+        DBG(printk(KERN_INFO "via_ircc_init ......\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#243: FILE: drivers/net/irda/via-ircc.c:154:
+        DBG(printk(KERN_INFO "via_ircc_init ......\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_ircc_init', this function's name, in a string
#243: FILE: drivers/net/irda/via-ircc.c:154:
+        DBG(printk(KERN_INFO "via_ircc_init ......\n"));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: drivers/net/irda/via-ircc.c:156:
+	rc = pci_register_driver (&via_driver);

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/net/irda/via-ircc.c:158:
+        DBG(printk(KERN_INFO "via_ircc_init :rc = %d......\n",rc));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/net/irda/via-ircc.c:158:
+        DBG(printk(KERN_INFO "via_ircc_init :rc = %d......\n",rc));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#247: FILE: drivers/net/irda/via-ircc.c:158:
+        DBG(printk(KERN_INFO "via_ircc_init :rc = %d......\n",rc));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: drivers/net/irda/via-ircc.c:158:
+        DBG(printk(KERN_INFO "via_ircc_init :rc = %d......\n",rc));
                                                              ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_ircc_init', this function's name, in a string
#247: FILE: drivers/net/irda/via-ircc.c:158:
+        DBG(printk(KERN_INFO "via_ircc_init :rc = %d......\n",rc));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#249: FILE: drivers/net/irda/via-ircc.c:160:
+	if (rc < 1) {
[...]
+        DBG(printk(KERN_INFO "via_ircc_init return -ENODEV......\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/net/irda/via-ircc.c:162:
+        DBG(printk(KERN_INFO "via_ircc_init return -ENODEV......\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/net/irda/via-ircc.c:162:
+        DBG(printk(KERN_INFO "via_ircc_init return -ENODEV......\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#251: FILE: drivers/net/irda/via-ircc.c:162:
+        DBG(printk(KERN_INFO "via_ircc_init return -ENODEV......\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_ircc_init', this function's name, in a string
#251: FILE: drivers/net/irda/via-ircc.c:162:
+        DBG(printk(KERN_INFO "via_ircc_init return -ENODEV......\n"));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: drivers/net/irda/via-ircc.c:164:
+		if (rc == 0)	pci_unregister_driver (&via_driver);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#253: FILE: drivers/net/irda/via-ircc.c:164:
+		if (rc == 0)	pci_unregister_driver (&via_driver);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#258: FILE: drivers/net/irda/via-ircc.c:169:
+
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: drivers/net/irda/via-ircc.c:171:
+static int __init via_init_one (struct pci_dev *pcidev, const struct pci_device_id *id)

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;
                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <oldPCI_40>
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;

CHECK:CAMELCASE: Avoid CamelCase: <oldPCI_44>
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;

CHECK:CAMELCASE: Avoid CamelCase: <bTmp>
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;

CHECK:CAMELCASE: Avoid CamelCase: <bTmp1>
#263: FILE: drivers/net/irda/via-ircc.c:174:
+        u8 temp,oldPCI_40,oldPCI_44,bTmp,bTmp1;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: drivers/net/irda/via-ircc.c:175:
+	u16 Chipset,FirDRQ1,FirDRQ0,FirIRQ,FirIOBase;
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: drivers/net/irda/via-ircc.c:175:
+	u16 Chipset,FirDRQ1,FirDRQ0,FirIRQ,FirIOBase;
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: drivers/net/irda/via-ircc.c:175:
+	u16 Chipset,FirDRQ1,FirDRQ0,FirIRQ,FirIOBase;
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: drivers/net/irda/via-ircc.c:175:
+	u16 Chipset,FirDRQ1,FirDRQ0,FirIRQ,FirIOBase;
 	                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <Chipset>
#264: FILE: drivers/net/irda/via-ircc.c:175:
+	u16 Chipset,FirDRQ1,FirDRQ0,FirIRQ,FirIOBase;

CHECK:CAMELCASE: Avoid CamelCase: <FirDRQ1>
#264: FILE: drivers/net/irda/via-ircc.c:175:
+	u16 Chipset,FirDRQ1,FirDRQ0,FirIRQ,FirIOBase;

CHECK:CAMELCASE: Avoid CamelCase: <FirDRQ0>
#264: FILE: drivers/net/irda/via-ircc.c:175:
+	u16 Chipset,FirDRQ1,FirDRQ0,FirIRQ,FirIOBase;

CHECK:CAMELCASE: Avoid CamelCase: <FirIRQ>
#264: FILE: drivers/net/irda/via-ircc.c:175:
+	u16 Chipset,FirDRQ1,FirDRQ0,FirIRQ,FirIOBase;

CHECK:CAMELCASE: Avoid CamelCase: <FirIOBase>
#264: FILE: drivers/net/irda/via-ircc.c:175:
+	u16 Chipset,FirDRQ1,FirDRQ0,FirIRQ,FirIOBase;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: drivers/net/irda/via-ircc.c:177:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: drivers/net/irda/via-ircc.c:179:
+        DBG(printk(KERN_INFO "via_init_one : Device ID=(0X%X)\n",id->device));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/net/irda/via-ircc.c:179:
+        DBG(printk(KERN_INFO "via_init_one : Device ID=(0X%X)\n",id->device));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#268: FILE: drivers/net/irda/via-ircc.c:179:
+        DBG(printk(KERN_INFO "via_init_one : Device ID=(0X%X)\n",id->device));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#268: FILE: drivers/net/irda/via-ircc.c:179:
+        DBG(printk(KERN_INFO "via_init_one : Device ID=(0X%X)\n",id->device));
                                                                 ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_init_one', this function's name, in a string
#268: FILE: drivers/net/irda/via-ircc.c:179:
+        DBG(printk(KERN_INFO "via_init_one : Device ID=(0X%X)\n",id->device));

ERROR:SPACING: space required before the open parenthesis '('
#270: FILE: drivers/net/irda/via-ircc.c:181:
+	if(id->device != DeviceID1 && id->device != DeviceID2 &&

ERROR:SPACING: space prohibited before that close parenthesis ')'
#272: FILE: drivers/net/irda/via-ircc.c:183:
+	   id->device != DeviceID5  ){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#274: FILE: drivers/net/irda/via-ircc.c:185:
+		DBG(printk(KERN_INFO "via_init_one : Device ID(0X%X) not Supported\n",id->device));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#274: FILE: drivers/net/irda/via-ircc.c:185:
+		DBG(printk(KERN_INFO "via_init_one : Device ID(0X%X) not Supported\n",id->device));
 		                                                                     ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_init_one', this function's name, in a string
#274: FILE: drivers/net/irda/via-ircc.c:185:
+		DBG(printk(KERN_INFO "via_init_one : Device ID(0X%X) not Supported\n",id->device));

WARNING:TABSTOP: Statements should start on a tabstop
#276: FILE: drivers/net/irda/via-ircc.c:187:
+	      return -ENODEV; //South not exist !!!!!

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#278: FILE: drivers/net/irda/via-ircc.c:189:
+	rc = pci_enable_device (pcidev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#280: FILE: drivers/net/irda/via-ircc.c:191:
+	DBG(printk(KERN_INFO "via_init_one : rc=%d\n",rc));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: drivers/net/irda/via-ircc.c:191:
+	DBG(printk(KERN_INFO "via_init_one : rc=%d\n",rc));
 	                                             ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_init_one', this function's name, in a string
#280: FILE: drivers/net/irda/via-ircc.c:191:
+	DBG(printk(KERN_INFO "via_init_one : rc=%d\n",rc));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: drivers/net/irda/via-ircc.c:194:
+^I^Ireturn -ENODEV; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: drivers/net/irda/via-ircc.c:195:
+        //South Bridge exist$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: drivers/net/irda/via-ircc.c:196:
+        if ( ReadLPCReg(0x20) != 0x3C )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/net/irda/via-ircc.c:196:
+        if ( ReadLPCReg(0x20) != 0x3C )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#285: FILE: drivers/net/irda/via-ircc.c:196:
+        if ( ReadLPCReg(0x20) != 0x3C )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#285: FILE: drivers/net/irda/via-ircc.c:196:
+        if ( ReadLPCReg(0x20) != 0x3C )

CHECK:CAMELCASE: Avoid CamelCase: <ReadLPCReg>
#285: FILE: drivers/net/irda/via-ircc.c:196:
+        if ( ReadLPCReg(0x20) != 0x3C )

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#286: FILE: drivers/net/irda/via-ircc.c:197:
+		Chipset=0x3096;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#288: FILE: drivers/net/irda/via-ircc.c:199:
+		Chipset=0x3076;
 		       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#289: FILE: drivers/net/irda/via-ircc.c:200:
+	if (Chipset==0x3076) {
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#291: FILE: drivers/net/irda/via-ircc.c:202:
+		DBG(printk(KERN_INFO "via_init_one : 3076 ......\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_init_one', this function's name, in a string
#291: FILE: drivers/net/irda/via-ircc.c:202:
+		DBG(printk(KERN_INFO "via_init_one : 3076 ......\n"));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#293: FILE: drivers/net/irda/via-ircc.c:204:
+		WriteLPCReg(7,0x0c );
 		             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#293: FILE: drivers/net/irda/via-ircc.c:204:
+		WriteLPCReg(7,0x0c );

CHECK:CAMELCASE: Avoid CamelCase: <WriteLPCReg>
#293: FILE: drivers/net/irda/via-ircc.c:204:
+		WriteLPCReg(7,0x0c );

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#294: FILE: drivers/net/irda/via-ircc.c:205:
+		temp=ReadLPCReg(0x30);//check if BIOS Enable Fir
 		    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#295: FILE: drivers/net/irda/via-ircc.c:206:
+		if((temp&0x01)==1) {   // BIOS close or no FIR
 		        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#295: FILE: drivers/net/irda/via-ircc.c:206:
+		if((temp&0x01)==1) {   // BIOS close or no FIR
 		              ^

ERROR:SPACING: space required before the open parenthesis '('
#295: FILE: drivers/net/irda/via-ircc.c:206:
+		if((temp&0x01)==1) {   // BIOS close or no FIR

CHECK:BRACES: braces {} should be used on all arms of this statement
#295: FILE: drivers/net/irda/via-ircc.c:206:
+		if((temp&0x01)==1) {   // BIOS close or no FIR
[...]
+		} else
[...]

ERROR:SPACING: space prohibited before that close parenthesis ')'
#296: FILE: drivers/net/irda/via-ircc.c:207:
+			WriteLPCReg(0x1d, 0x82 );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: drivers/net/irda/via-ircc.c:208:
+			WriteLPCReg(0x23,0x18);
 			                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#298: FILE: drivers/net/irda/via-ircc.c:209:
+			temp=ReadLPCReg(0xF0);
 			    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#299: FILE: drivers/net/irda/via-ircc.c:210:
+			if((temp&0x01)==0) {
 			        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#299: FILE: drivers/net/irda/via-ircc.c:210:
+			if((temp&0x01)==0) {
 			              ^

ERROR:SPACING: space required before the open parenthesis '('
#299: FILE: drivers/net/irda/via-ircc.c:210:
+			if((temp&0x01)==0) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#300: FILE: drivers/net/irda/via-ircc.c:211:
+				temp=(ReadLPCReg(0x74)&0x03);    //DMA
 				    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#300: FILE: drivers/net/irda/via-ircc.c:211:
+				temp=(ReadLPCReg(0x74)&0x03);    //DMA
 				                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#301: FILE: drivers/net/irda/via-ircc.c:212:
+				FirDRQ0=temp + 4;
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#302: FILE: drivers/net/irda/via-ircc.c:213:
+				temp=(ReadLPCReg(0x74)&0x0C) >> 2;
 				    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#302: FILE: drivers/net/irda/via-ircc.c:213:
+				temp=(ReadLPCReg(0x74)&0x0C) >> 2;
 				                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#303: FILE: drivers/net/irda/via-ircc.c:214:
+				FirDRQ1=temp + 4;
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#305: FILE: drivers/net/irda/via-ircc.c:216:
+				temp=(ReadLPCReg(0x74)&0x0C) >> 2;    //DMA
 				    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#305: FILE: drivers/net/irda/via-ircc.c:216:
+				temp=(ReadLPCReg(0x74)&0x0C) >> 2;    //DMA
 				                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#306: FILE: drivers/net/irda/via-ircc.c:217:
+				FirDRQ0=temp + 4;
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#307: FILE: drivers/net/irda/via-ircc.c:218:
+				FirDRQ1=FirDRQ0;
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#309: FILE: drivers/net/irda/via-ircc.c:220:
+			FirIRQ=(ReadLPCReg(0x70)&0x0f);		//IRQ
 			      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#309: FILE: drivers/net/irda/via-ircc.c:220:
+			FirIRQ=(ReadLPCReg(0x70)&0x0f);		//IRQ
 			                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#310: FILE: drivers/net/irda/via-ircc.c:221:
+			FirIOBase=ReadLPCReg(0x60 ) << 8;	//IO Space :high byte
 			         ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#310: FILE: drivers/net/irda/via-ircc.c:221:
+			FirIOBase=ReadLPCReg(0x60 ) << 8;	//IO Space :high byte

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#311: FILE: drivers/net/irda/via-ircc.c:222:
+			FirIOBase=FirIOBase| ReadLPCReg(0x61) ;	//low byte
 			         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#311: FILE: drivers/net/irda/via-ircc.c:222:
+			FirIOBase=FirIOBase| ReadLPCReg(0x61) ;	//low byte
 			                   ^

WARNING:SELF_ASSIGNMENT: Do not use self-assignments to avoid compiler warnings
#312: FILE: drivers/net/irda/via-ircc.c:223:
+			FirIOBase=FirIOBase  ;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#312: FILE: drivers/net/irda/via-ircc.c:223:
+			FirIOBase=FirIOBase  ;
 			         ^

WARNING:SPACING: space prohibited before semicolon
#312: FILE: drivers/net/irda/via-ircc.c:223:
+			FirIOBase=FirIOBase  ;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#313: FILE: drivers/net/irda/via-ircc.c:224:
+			info.fir_base=FirIOBase;
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#314: FILE: drivers/net/irda/via-ircc.c:225:
+			info.irq=FirIRQ;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#315: FILE: drivers/net/irda/via-ircc.c:226:
+			info.dma=FirDRQ1;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#316: FILE: drivers/net/irda/via-ircc.c:227:
+			info.dma2=FirDRQ0;
 			         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#317: FILE: drivers/net/irda/via-ircc.c:228:
+			pci_read_config_byte(pcidev,0x40,&bTmp);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#317: FILE: drivers/net/irda/via-ircc.c:228:
+			pci_read_config_byte(pcidev,0x40,&bTmp);
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#317: FILE: drivers/net/irda/via-ircc.c:228:
+			pci_read_config_byte(pcidev,0x40,&bTmp);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/net/irda/via-ircc.c:229:
+			pci_write_config_byte(pcidev,0x40,((bTmp | 0x08) & 0xfe));
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/net/irda/via-ircc.c:229:
+			pci_write_config_byte(pcidev,0x40,((bTmp | 0x08) & 0xfe));
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: drivers/net/irda/via-ircc.c:230:
+			pci_read_config_byte(pcidev,0x42,&bTmp);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#319: FILE: drivers/net/irda/via-ircc.c:230:
+			pci_read_config_byte(pcidev,0x42,&bTmp);
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#319: FILE: drivers/net/irda/via-ircc.c:230:
+			pci_read_config_byte(pcidev,0x42,&bTmp);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#320: FILE: drivers/net/irda/via-ircc.c:231:
+			pci_write_config_byte(pcidev,0x42,(bTmp | 0xf0));
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#320: FILE: drivers/net/irda/via-ircc.c:231:
+			pci_write_config_byte(pcidev,0x42,(bTmp | 0xf0));
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#321: FILE: drivers/net/irda/via-ircc.c:232:
+			pci_write_config_byte(pcidev,0x5a,0xc0);
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#321: FILE: drivers/net/irda/via-ircc.c:232:
+			pci_write_config_byte(pcidev,0x5a,0xc0);
 			                                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#322: FILE: drivers/net/irda/via-ircc.c:233:
+			WriteLPCReg(0x28, 0x70 );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: drivers/net/irda/via-ircc.c:234:
+			if (via_ircc_open(0, &info,0x3076) == 0)
 			                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#324: FILE: drivers/net/irda/via-ircc.c:235:
+				rc=0;
 				  ^

CHECK:BRACES: Unbalanced braces around else statement
#325: FILE: drivers/net/irda/via-ircc.c:236:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/net/irda/via-ircc.c:237:
+^I^I^Irc = -ENODEV; //IR not turn on^I $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#329: FILE: drivers/net/irda/via-ircc.c:240:
+		DBG(printk(KERN_INFO "via_init_one : 3096 ......\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_init_one', this function's name, in a string
#329: FILE: drivers/net/irda/via-ircc.c:240:
+		DBG(printk(KERN_INFO "via_init_one : 3096 ......\n"));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#331: FILE: drivers/net/irda/via-ircc.c:242:
+		pci_read_config_byte(pcidev,0x67,&bTmp);//check if BIOS Enable Fir
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#331: FILE: drivers/net/irda/via-ircc.c:242:
+		pci_read_config_byte(pcidev,0x67,&bTmp);//check if BIOS Enable Fir
 		                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#331: FILE: drivers/net/irda/via-ircc.c:242:
+		pci_read_config_byte(pcidev,0x67,&bTmp);//check if BIOS Enable Fir
 		                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#332: FILE: drivers/net/irda/via-ircc.c:243:
+		if((bTmp&0x01)==1) {  // BIOS enable FIR
 		        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#332: FILE: drivers/net/irda/via-ircc.c:243:
+		if((bTmp&0x01)==1) {  // BIOS enable FIR
 		              ^

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: drivers/net/irda/via-ircc.c:243:
+		if((bTmp&0x01)==1) {  // BIOS enable FIR

CHECK:BRACES: braces {} should be used on all arms of this statement
#332: FILE: drivers/net/irda/via-ircc.c:243:
+		if((bTmp&0x01)==1) {  // BIOS enable FIR
[...]
+		} else
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#334: FILE: drivers/net/irda/via-ircc.c:245:
+			pci_read_config_byte(pcidev,0x42,&oldPCI_40);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#334: FILE: drivers/net/irda/via-ircc.c:245:
+			pci_read_config_byte(pcidev,0x42,&oldPCI_40);
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#334: FILE: drivers/net/irda/via-ircc.c:245:
+			pci_read_config_byte(pcidev,0x42,&oldPCI_40);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: drivers/net/irda/via-ircc.c:246:
+			pci_write_config_byte(pcidev,0x42,oldPCI_40 | 0x80);
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: drivers/net/irda/via-ircc.c:246:
+			pci_write_config_byte(pcidev,0x42,oldPCI_40 | 0x80);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#336: FILE: drivers/net/irda/via-ircc.c:247:
+			pci_read_config_byte(pcidev,0x40,&oldPCI_40);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#336: FILE: drivers/net/irda/via-ircc.c:247:
+			pci_read_config_byte(pcidev,0x40,&oldPCI_40);
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#336: FILE: drivers/net/irda/via-ircc.c:247:
+			pci_read_config_byte(pcidev,0x40,&oldPCI_40);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: drivers/net/irda/via-ircc.c:248:
+			pci_write_config_byte(pcidev,0x40,oldPCI_40 & 0xf7);
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: drivers/net/irda/via-ircc.c:248:
+			pci_write_config_byte(pcidev,0x40,oldPCI_40 & 0xf7);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#338: FILE: drivers/net/irda/via-ircc.c:249:
+			pci_read_config_byte(pcidev,0x44,&oldPCI_44);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#338: FILE: drivers/net/irda/via-ircc.c:249:
+			pci_read_config_byte(pcidev,0x44,&oldPCI_44);
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#338: FILE: drivers/net/irda/via-ircc.c:249:
+			pci_read_config_byte(pcidev,0x44,&oldPCI_44);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/net/irda/via-ircc.c:250:
+			pci_write_config_byte(pcidev,0x44,0x4e);
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/net/irda/via-ircc.c:250:
+			pci_write_config_byte(pcidev,0x44,0x4e);
 			                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#341: FILE: drivers/net/irda/via-ircc.c:252:
+			if((bTmp&0x02)==0) {
 			        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#341: FILE: drivers/net/irda/via-ircc.c:252:
+			if((bTmp&0x02)==0) {
 			              ^

ERROR:SPACING: space required before the open parenthesis '('
#341: FILE: drivers/net/irda/via-ircc.c:252:
+			if((bTmp&0x02)==0) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#342: FILE: drivers/net/irda/via-ircc.c:253:
+				pci_read_config_byte(pcidev,0x44,&bTmp1); //DMA
 				                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#342: FILE: drivers/net/irda/via-ircc.c:253:
+				pci_read_config_byte(pcidev,0x44,&bTmp1); //DMA
 				                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#342: FILE: drivers/net/irda/via-ircc.c:253:
+				pci_read_config_byte(pcidev,0x44,&bTmp1); //DMA
 				                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: drivers/net/irda/via-ircc.c:255:
+				pci_read_config_byte(pcidev,0x44,&bTmp1);
 				                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#344: FILE: drivers/net/irda/via-ircc.c:255:
+				pci_read_config_byte(pcidev,0x44,&bTmp1);
 				                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#344: FILE: drivers/net/irda/via-ircc.c:255:
+				pci_read_config_byte(pcidev,0x44,&bTmp1);
 				                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: drivers/net/irda/via-ircc.c:258:
+				pci_read_config_byte(pcidev,0x44,&bTmp1);    //DMA
 				                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#347: FILE: drivers/net/irda/via-ircc.c:258:
+				pci_read_config_byte(pcidev,0x44,&bTmp1);    //DMA
 				                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#347: FILE: drivers/net/irda/via-ircc.c:258:
+				pci_read_config_byte(pcidev,0x44,&bTmp1);    //DMA
 				                                 ^

WARNING:SPACING: space prohibited before semicolon
#348: FILE: drivers/net/irda/via-ircc.c:259:
+				FirDRQ0 = (bTmp1 & 0x30) >> 4 ;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#349: FILE: drivers/net/irda/via-ircc.c:260:
+				FirDRQ1=0;
 				       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#351: FILE: drivers/net/irda/via-ircc.c:262:
+			pci_read_config_byte(pcidev,0x47,&bTmp1);  //IRQ
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#351: FILE: drivers/net/irda/via-ircc.c:262:
+			pci_read_config_byte(pcidev,0x47,&bTmp1);  //IRQ
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#351: FILE: drivers/net/irda/via-ircc.c:262:
+			pci_read_config_byte(pcidev,0x47,&bTmp1);  //IRQ
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: drivers/net/irda/via-ircc.c:265:
+			pci_read_config_byte(pcidev,0x69,&bTmp);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#354: FILE: drivers/net/irda/via-ircc.c:265:
+			pci_read_config_byte(pcidev,0x69,&bTmp);
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#354: FILE: drivers/net/irda/via-ircc.c:265:
+			pci_read_config_byte(pcidev,0x69,&bTmp);
 			                                 ^

WARNING:TYPO_SPELLING: 'hight' may be misspelled - perhaps 'height'?
#355: FILE: drivers/net/irda/via-ircc.c:266:
+			FirIOBase = bTmp << 8;//hight byte
 			                        ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: drivers/net/irda/via-ircc.c:267:
+			pci_read_config_byte(pcidev,0x68,&bTmp);
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#356: FILE: drivers/net/irda/via-ircc.c:267:
+			pci_read_config_byte(pcidev,0x68,&bTmp);
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#356: FILE: drivers/net/irda/via-ircc.c:267:
+			pci_read_config_byte(pcidev,0x68,&bTmp);
 			                                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#357: FILE: drivers/net/irda/via-ircc.c:268:
+			FirIOBase = (FirIOBase | bTmp ) & 0xfff0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#359: FILE: drivers/net/irda/via-ircc.c:270:
+			info.fir_base=FirIOBase;
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#360: FILE: drivers/net/irda/via-ircc.c:271:
+			info.irq=FirIRQ;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#361: FILE: drivers/net/irda/via-ircc.c:272:
+			info.dma=FirDRQ1;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#362: FILE: drivers/net/irda/via-ircc.c:273:
+			info.dma2=FirDRQ0;
 			         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/net/irda/via-ircc.c:274:
+			if (via_ircc_open(0, &info,0x3096) == 0)
 			                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#364: FILE: drivers/net/irda/via-ircc.c:275:
+				rc=0;
 				  ^

CHECK:BRACES: Unbalanced braces around else statement
#365: FILE: drivers/net/irda/via-ircc.c:276:
+		} else

ERROR:SPACING: space required after that close brace '}'
#367: FILE: drivers/net/irda/via-ircc.c:278:
+	}//Not VT1211

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#369: FILE: drivers/net/irda/via-ircc.c:280:
+	DBG(printk(KERN_INFO "via_init_one End : rc=%d\n",rc));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: drivers/net/irda/via-ircc.c:280:
+	DBG(printk(KERN_INFO "via_init_one End : rc=%d\n",rc));
 	                                                 ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_init_one', this function's name, in a string
#369: FILE: drivers/net/irda/via-ircc.c:280:
+	DBG(printk(KERN_INFO "via_init_one End : rc=%d\n",rc));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#375: FILE: drivers/net/irda/via-ircc.c:286:
+/*
+ * Function via_ircc_clean ()

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#385: FILE: drivers/net/irda/via-ircc.c:296:
+	DBG(printk(KERN_INFO "via_ircc_clean\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_ircc_clean', this function's name, in a string
#385: FILE: drivers/net/irda/via-ircc.c:296:
+	DBG(printk(KERN_INFO "via_ircc_clean\n"));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#387: FILE: drivers/net/irda/via-ircc.c:298:
+	for (i=0; i < 4; i++) {
 	      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#393: FILE: drivers/net/irda/via-ircc.c:304:
+static void __exit via_remove_one (struct pci_dev *pdev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: drivers/net/irda/via-ircc.c:307:
+        DBG(printk(KERN_INFO "via_remove_one :  ......\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/net/irda/via-ircc.c:307:
+        DBG(printk(KERN_INFO "via_remove_one :  ......\n"));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#396: FILE: drivers/net/irda/via-ircc.c:307:
+        DBG(printk(KERN_INFO "via_remove_one :  ......\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_remove_one', this function's name, in a string
#396: FILE: drivers/net/irda/via-ircc.c:307:
+        DBG(printk(KERN_INFO "via_remove_one :  ......\n"));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#400: FILE: drivers/net/irda/via-ircc.c:311:
+
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#404: FILE: drivers/net/irda/via-ircc.c:315:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#406: FILE: drivers/net/irda/via-ircc.c:317:
+	DBG(printk(KERN_INFO "via_ircc_cleanup ......\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_ircc_cleanup', this function's name, in a string
#406: FILE: drivers/net/irda/via-ircc.c:317:
+	DBG(printk(KERN_INFO "via_ircc_cleanup ......\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: drivers/net/irda/via-ircc.c:320:
+^Ipci_unregister_driver (&via_driver); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#409: FILE: drivers/net/irda/via-ircc.c:320:
+	pci_unregister_driver (&via_driver); 

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#413: FILE: drivers/net/irda/via-ircc.c:324:
+/*
+ * Function via_ircc_open (iobase, irq)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#418: FILE: drivers/net/irda/via-ircc.c:329:
+static __init int via_ircc_open(int i, chipio_t * info, unsigned int id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*self)...) over kmalloc(sizeof(struct via_ircc_cb)...)
#428: FILE: drivers/net/irda/via-ircc.c:339:
+	self = kmalloc(sizeof(struct via_ircc_cb), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BRACES: braces {} are not necessary for single statement blocks
#429: FILE: drivers/net/irda/via-ircc.c:340:
+	if (self == NULL) {
+		return -ENOMEM;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self"
#429: FILE: drivers/net/irda/via-ircc.c:340:
+	if (self == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <RxDataReady>
#448: FILE: drivers/net/irda/via-ircc.c:359:
+	self->RxDataReady = 0;

CHECK:SPACING: No space is necessary after a cast
#478: FILE: drivers/net/irda/via-ircc.c:389:
+	    (__u8 *) kmalloc(self->rx_buff.truesize, GFP_KERNEL | GFP_DMA);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#478: FILE: drivers/net/irda/via-ircc.c:389:
+	    (__u8 *) kmalloc(self->rx_buff.truesize, GFP_KERNEL | GFP_DMA);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->rx_buff.head"
#479: FILE: drivers/net/irda/via-ircc.c:390:
+	if (self->rx_buff.head == NULL) {

CHECK:SPACING: No space is necessary after a cast
#486: FILE: drivers/net/irda/via-ircc.c:397:
+	    (__u8 *) kmalloc(self->tx_buff.truesize, GFP_KERNEL | GFP_DMA);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#486: FILE: drivers/net/irda/via-ircc.c:397:
+	    (__u8 *) kmalloc(self->tx_buff.truesize, GFP_KERNEL | GFP_DMA);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->tx_buff.head"
#487: FILE: drivers/net/irda/via-ircc.c:398:
+	if (self->tx_buff.head == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#499: FILE: drivers/net/irda/via-ircc.c:410:
+	self->tx_fifo.len = self->tx_fifo.ptr = self->tx_fifo.free = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#502: FILE: drivers/net/irda/via-ircc.c:413:
+	if (!(dev = dev_alloc("irda%d", &err))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#507: FILE: drivers/net/irda/via-ircc.c:418:
+	dev->priv = (void *) self;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#547: FILE: drivers/net/irda/via-ircc.c:458:
+/*
+ * Function via_ircc_close (self)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#556: FILE: drivers/net/irda/via-ircc.c:467:
+	IRDA_DEBUG(4, "%s()\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#558: FILE: drivers/net/irda/via-ircc.c:469:
+	ASSERT(self != NULL, return -1;);

CHECK:CAMELCASE: Avoid CamelCase: <ResetChip>
#562: FILE: drivers/net/irda/via-ircc.c:473:
+	ResetChip(iobase, 5);	//hardware reset.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#572: FILE: drivers/net/irda/via-ircc.c:483:
+		   __FUNCTION__, self->io.fir_base);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#575: FILE: drivers/net/irda/via-ircc.c:486:
+	if (self->tx_buff.head)
+		kfree(self->tx_buff.head);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#577: FILE: drivers/net/irda/via-ircc.c:488:
+	if (self->rx_buff.head)
+		kfree(self->rx_buff.head);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#585: FILE: drivers/net/irda/via-ircc.c:496:
+/*
+ * Function via_ircc_setup (info)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#590: FILE: drivers/net/irda/via-ircc.c:501:
+static int via_ircc_setup(chipio_t * info, unsigned int chip_id)

CHECK:CAMELCASE: Avoid CamelCase: <SetMaxRxPacketSize>
#594: FILE: drivers/net/irda/via-ircc.c:505:
+	SetMaxRxPacketSize(iobase, 0x0fff);	//set to max:4095

CHECK:CAMELCASE: Avoid CamelCase: <EnRXFIFOReadyInt>
#596: FILE: drivers/net/irda/via-ircc.c:507:
+	EnRXFIFOReadyInt(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <EnRXFIFOHalfLevelInt>
#597: FILE: drivers/net/irda/via-ircc.c:508:
+	EnRXFIFOHalfLevelInt(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <EnTXFIFOHalfLevelInt>
#598: FILE: drivers/net/irda/via-ircc.c:509:
+	EnTXFIFOHalfLevelInt(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <EnTXFIFOUnderrunEOMInt>
#599: FILE: drivers/net/irda/via-ircc.c:510:
+	EnTXFIFOUnderrunEOMInt(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <EnTXFIFOReadyInt>
#600: FILE: drivers/net/irda/via-ircc.c:511:
+	EnTXFIFOReadyInt(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <InvertTX>
#601: FILE: drivers/net/irda/via-ircc.c:512:
+	InvertTX(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <InvertRX>
#602: FILE: drivers/net/irda/via-ircc.c:513:
+	InvertRX(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <IsSIROn>
#605: FILE: drivers/net/irda/via-ircc.c:516:
+	if (IsSIROn(iobase)) {

CHECK:CAMELCASE: Avoid CamelCase: <SIRFilter>
#606: FILE: drivers/net/irda/via-ircc.c:517:
+		SIRFilter(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <SIRRecvAny>
#607: FILE: drivers/net/irda/via-ircc.c:518:
+		SIRRecvAny(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <EnRXSpecInt>
#613: FILE: drivers/net/irda/via-ircc.c:524:
+	EnRXSpecInt(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <WriteReg>
#615: FILE: drivers/net/irda/via-ircc.c:526:
+	WriteReg(iobase, I_ST_CT_0, 0x80);

CHECK:CAMELCASE: Avoid CamelCase: <EnableDMA>
#616: FILE: drivers/net/irda/via-ircc.c:527:
+	EnableDMA(iobase, ON);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#622: FILE: drivers/net/irda/via-ircc.c:533:
+/*
+ * Function via_ircc_read_dongle_id (void)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#633: FILE: drivers/net/irda/via-ircc.c:544:
+/*
+ * Function via_ircc_change_dongle_speed (iobase, speed, dongle_id)

CHECK:CAMELCASE: Avoid CamelCase: <UseOneRX>
#660: FILE: drivers/net/irda/via-ircc.c:571:
+		UseOneRX(iobase, ON);	// use one RX pin   RX1,RX2

CHECK:CAMELCASE: Avoid CamelCase: <EnRX2>
#664: FILE: drivers/net/irda/via-ircc.c:575:
+		EnRX2(iobase, ON);	//sir to rx2

CHECK:CAMELCASE: Avoid CamelCase: <EnGPIOtoRX2>
#665: FILE: drivers/net/irda/via-ircc.c:576:
+		EnGPIOtoRX2(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <SlowIRRXLowActive>
#669: FILE: drivers/net/irda/via-ircc.c:580:
+			SlowIRRXLowActive(iobase, ON);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#670: FILE: drivers/net/irda/via-ircc.c:581:
+			udelay(1000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:CAMELCASE: Avoid CamelCase: <IsMIROn>
#673: FILE: drivers/net/irda/via-ircc.c:584:
+			if (IsMIROn(iobase)) {	//mir

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#676: FILE: drivers/net/irda/via-ircc.c:587:
+				udelay(20);

CHECK:CAMELCASE: Avoid CamelCase: <IsFIROn>
#678: FILE: drivers/net/irda/via-ircc.c:589:
+				if (IsFIROn(iobase)) {	//fir

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#681: FILE: drivers/net/irda/via-ircc.c:592:
+					udelay(20);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#695: FILE: drivers/net/irda/via-ircc.c:606:
+			udelay(20);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#702: FILE: drivers/net/irda/via-ircc.c:613:
+			udelay(20);

CHECK:CAMELCASE: Avoid CamelCase: <WriteTX>
#710: FILE: drivers/net/irda/via-ircc.c:621:
+				WriteTX(iobase, ON);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#711: FILE: drivers/net/irda/via-ircc.c:622:
+				udelay(20);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#714: FILE: drivers/net/irda/via-ircc.c:625:
+				udelay(20);

CHECK:CAMELCASE: Avoid CamelCase: <WriteGIO>
#727: FILE: drivers/net/irda/via-ircc.c:638:
+			WriteGIO(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <IsVFIROn>
#742: FILE: drivers/net/irda/via-ircc.c:653:
+		else if (IsVFIROn(iobase))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#748: FILE: drivers/net/irda/via-ircc.c:659:
+
+}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#751: FILE: drivers/net/irda/via-ircc.c:662:
+/*
+ * Function via_ircc_change_speed (self, baud)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#766: FILE: drivers/net/irda/via-ircc.c:677:
+	DBG(printk(KERN_INFO "change_speed =%x......\n", speed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#776: FILE: drivers/net/irda/via-ircc.c:687:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <SetSIR>
#781: FILE: drivers/net/irda/via-ircc.c:692:
+		SetSIR(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <SetMIR>
#811: FILE: drivers/net/irda/via-ircc.c:722:
+		SetMIR(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <SetFIR>
#815: FILE: drivers/net/irda/via-ircc.c:726:
+		SetFIR(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <SetPulseWidth>
#816: FILE: drivers/net/irda/via-ircc.c:727:
+		SetPulseWidth(iobase, 0);

CHECK:CAMELCASE: Avoid CamelCase: <SetSendPreambleCount>
#817: FILE: drivers/net/irda/via-ircc.c:728:
+		SetSendPreambleCount(iobase, 14);

CHECK:CAMELCASE: Avoid CamelCase: <EnTXCRC>
#819: FILE: drivers/net/irda/via-ircc.c:730:
+		EnTXCRC(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <SetVFIR>
#823: FILE: drivers/net/irda/via-ircc.c:734:
+		SetVFIR(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <ReadReg>
#830: FILE: drivers/net/irda/via-ircc.c:741:
+	bTmp = (ReadReg(iobase, I_CF_H_1) & 0x03);

CHECK:CAMELCASE: Avoid CamelCase: <SetFIFO>
#836: FILE: drivers/net/irda/via-ircc.c:747:
+	SetFIFO(iobase, 64);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#859: FILE: drivers/net/irda/via-ircc.c:770:
+/*
+ * Function via_ircc_hard_xmit (skb, dev)

CHECK:SPACING: No space is necessary after a cast
#872: FILE: drivers/net/irda/via-ircc.c:783:
+	self = (struct via_ircc_cb *) dev->priv;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#873: FILE: drivers/net/irda/via-ircc.c:784:
+	ASSERT(self != NULL, return 0;);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->io.speed'
#879: FILE: drivers/net/irda/via-ircc.c:790:
+	if ((speed != self->io.speed) && (speed != -1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#881: FILE: drivers/net/irda/via-ircc.c:792:
+		if (!skb->len) {
[...]
+		} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#886: FILE: drivers/net/irda/via-ircc.c:797:
+			return 0;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#886: FILE: drivers/net/irda/via-ircc.c:797:
+		} else

CHECK:CAMELCASE: Avoid CamelCase: <InitCard>
#889: FILE: drivers/net/irda/via-ircc.c:800:
+	InitCard(iobase);

CHECK:CAMELCASE: Avoid CamelCase: <CommonInit>
#890: FILE: drivers/net/irda/via-ircc.c:801:
+	CommonInit(iobase);

CHECK:CAMELCASE: Avoid CamelCase: <SetBaudRate>
#904: FILE: drivers/net/irda/via-ircc.c:815:
+	SetBaudRate(iobase, speed);

CHECK:CAMELCASE: Avoid CamelCase: <EnableTX>
#909: FILE: drivers/net/irda/via-ircc.c:820:
+	EnableTX(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <EnableRX>
#910: FILE: drivers/net/irda/via-ircc.c:821:
+	EnableRX(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <EnAllInt>
#918: FILE: drivers/net/irda/via-ircc.c:829:
+	EnAllInt(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <EnTXDMA>
#919: FILE: drivers/net/irda/via-ircc.c:830:
+	EnTXDMA(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <EnRXDMA>
#920: FILE: drivers/net/irda/via-ircc.c:831:
+	EnRXDMA(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <SetSendByte>
#925: FILE: drivers/net/irda/via-ircc.c:836:
+	SetSendByte(iobase, self->tx_buff.len);

CHECK:CAMELCASE: Avoid CamelCase: <RXStart>
#926: FILE: drivers/net/irda/via-ircc.c:837:
+	RXStart(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <TXStart>
#927: FILE: drivers/net/irda/via-ircc.c:838:
+	TXStart(iobase, ON);

CHECK:SPACING: No space is necessary after a cast
#943: FILE: drivers/net/irda/via-ircc.c:854:
+	self = (struct via_ircc_cb *) dev->priv;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#951: FILE: drivers/net/irda/via-ircc.c:862:
+		udelay(1500);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != self->io.speed'
#954: FILE: drivers/net/irda/via-ircc.c:865:
+	if ((speed != self->io.speed) && (speed != -1)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#955: FILE: drivers/net/irda/via-ircc.c:866:
+		if (!skb->len) {
[...]
+		} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#960: FILE: drivers/net/irda/via-ircc.c:871:
+			return 0;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#960: FILE: drivers/net/irda/via-ircc.c:871:
+		} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#982: FILE: drivers/net/irda/via-ircc.c:893:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <EnPhys>
#991: FILE: drivers/net/irda/via-ircc.c:902:
+	EnPhys(iobase, ON);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1010: FILE: drivers/net/irda/via-ircc.c:921:
+/*   $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1011: FILE: drivers/net/irda/via-ircc.c:922:
+/*   
+	ch = self->tx_fifo.queue[self->tx_fifo.ptr].start;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1023: FILE: drivers/net/irda/via-ircc.c:934:
+
+}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1026: FILE: drivers/net/irda/via-ircc.c:937:
+/*
+ * Function via_ircc_dma_xmit_complete (self)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: drivers/net/irda/via-ircc.c:939:
+ *    The transfer of a frame in finished. This function will only be called $

CHECK:CAMELCASE: Avoid CamelCase: <Tx_status>
#1036: FILE: drivers/net/irda/via-ircc.c:947:
+	u8 Tx_status;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1038: FILE: drivers/net/irda/via-ircc.c:949:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'underrrun' may be misspelled - perhaps 'underrun'?
#1042: FILE: drivers/net/irda/via-ircc.c:953:
+	/* Check for underrrun! */
 	             ^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <GetTXStatus>
#1044: FILE: drivers/net/irda/via-ircc.c:955:
+	Tx_status = GetTXStatus(iobase);

WARNING:TYPO_SPELLING: 'underrrun' may be misspelled - perhaps 'underrun'?
#1049: FILE: drivers/net/irda/via-ircc.c:960:
+// how to clear underrrun ?
                 ^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_ircc_dma_xmit_complete', this function's name, in a string
#1071: FILE: drivers/net/irda/via-ircc.c:982:
+	     "via_ircc_dma_xmit_complete:tx_fifo.len=%x ,tx_fifo.ptr=%x,tx_fifo.free=%x...\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1075: FILE: drivers/net/irda/via-ircc.c:986:
+^I// Any frames to be sent back-to-back? $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1075: FILE: drivers/net/irda/via-ircc.c:986:
+/* F01_S
+	// Any frames to be sent back-to-back? 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: drivers/net/irda/via-ircc.c:988:
+^I^I// Not finished yet! $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1078: FILE: drivers/net/irda/via-ircc.c:989:
+^I  ^Ivia_ircc_dma_xmit(self, iobase);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1078: FILE: drivers/net/irda/via-ircc.c:989:
+^I  ^Ivia_ircc_dma_xmit(self, iobase);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1080: FILE: drivers/net/irda/via-ircc.c:991:
+^I} else { $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1081: FILE: drivers/net/irda/via-ircc.c:992:
+F01_E*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1082: FILE: drivers/net/irda/via-ircc.c:993:
+^I// Reset Tx FIFO info $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1083: FILE: drivers/net/irda/via-ircc.c:994:
+	self->tx_fifo.len = self->tx_fifo.ptr = self->tx_fifo.free = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1087: FILE: drivers/net/irda/via-ircc.c:998:
+^I// Make sure we have room for more frames $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1089: FILE: drivers/net/irda/via-ircc.c:1000:
+^I// Not busy transmitting anymore $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1090: FILE: drivers/net/irda/via-ircc.c:1001:
+^I// Tell the network layer, that we can accept more frames $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1097: FILE: drivers/net/irda/via-ircc.c:1008:
+/*
+ * Function via_ircc_dma_receive (self)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1108: FILE: drivers/net/irda/via-ircc.c:1019:
+	self->tx_fifo.len = self->tx_fifo.ptr = self->tx_fifo.free = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1113: FILE: drivers/net/irda/via-ircc.c:1024:
+	self->st_fifo.len = self->st_fifo.pending_bytes = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1114: FILE: drivers/net/irda/via-ircc.c:1025:
+	self->st_fifo.tail = self->st_fifo.head = 0;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1137: FILE: drivers/net/irda/via-ircc.c:1048:
+/*
+ * Function via_ircc_dma_receive_complete (self)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: drivers/net/irda/via-ircc.c:1052:
+ *    $

CHECK:CAMELCASE: Avoid CamelCase: <GetRecvByte>
#1155: FILE: drivers/net/irda/via-ircc.c:1066:
+		len = GetRecvByte(iobase, self);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1157: FILE: drivers/net/irda/via-ircc.c:1068:
+		if (skb == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1159: FILE: drivers/net/irda/via-ircc.c:1070:
+^I^I// Make sure IP header gets aligned $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1172: FILE: drivers/net/irda/via-ircc.c:1083:
+^I^I// Move to next frame $

CHECK:BRACES: Unbalanced braces around else statement
#1183: FILE: drivers/net/irda/via-ircc.c:1094:
+	else {			//FIR mode

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1186: FILE: drivers/net/irda/via-ircc.c:1097:
+^I^I^Ireturn TRUE;^I//interrupt only, data maybe move by RxT  $

CHECK:CAMELCASE: Avoid CamelCase: <RxCurCount>
#1192: FILE: drivers/net/irda/via-ircc.c:1103:
+			     len, RxCurCount(iobase, self),

CHECK:CAMELCASE: Avoid CamelCase: <RxLastCount>
#1193: FILE: drivers/net/irda/via-ircc.c:1104:
+			     self->RxLastCount));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1216: FILE: drivers/net/irda/via-ircc.c:1127:
+          if (st_fifo->len < (MAX_RX_WINDOW+2 )) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1216: FILE: drivers/net/irda/via-ircc.c:1127:
+          if (st_fifo->len < (MAX_RX_WINDOW+2 )) { $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1216: FILE: drivers/net/irda/via-ircc.c:1127:
+/* F01_S
+          if (st_fifo->len < (MAX_RX_WINDOW+2 )) { 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1218: FILE: drivers/net/irda/via-ircc.c:1129:
+^I  ^I  SetTimer(iobase,4);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1218: FILE: drivers/net/irda/via-ircc.c:1129:
+^I  ^I  SetTimer(iobase,4);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1220: FILE: drivers/net/irda/via-ircc.c:1131:
+^I  else^I  { $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1221: FILE: drivers/net/irda/via-ircc.c:1132:
+F01_E */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1226: FILE: drivers/net/irda/via-ircc.c:1137:
+^I^I// Put this entry back in fifo $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1236: FILE: drivers/net/irda/via-ircc.c:1147:
+		/*
+		 * if frame size,data ptr,or skb ptr are wrong ,the get next

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb == NULL'
#1239: FILE: drivers/net/irda/via-ircc.c:1150:
+		if ((skb == NULL) || (skb->data == NULL)
+		    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->data == NULL'
#1239: FILE: drivers/net/irda/via-ircc.c:1150:
+		if ((skb == NULL) || (skb->data == NULL)
+		    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->rx_buff.data == NULL'
#1239: FILE: drivers/net/irda/via-ircc.c:1150:
+		if ((skb == NULL) || (skb->data == NULL)
+		    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len < 6'
#1239: FILE: drivers/net/irda/via-ircc.c:1150:
+		if ((skb == NULL) || (skb->data == NULL)
+		    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1239: FILE: drivers/net/irda/via-ircc.c:1150:
+		if ((skb == NULL) || (skb->data == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb->data"
#1239: FILE: drivers/net/irda/via-ircc.c:1150:
+		if ((skb == NULL) || (skb->data == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1240: FILE: drivers/net/irda/via-ircc.c:1151:
+		if ((skb == NULL) || (skb->data == NULL)
+		    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->rx_buff.data"
#1240: FILE: drivers/net/irda/via-ircc.c:1151:
+		    || (self->rx_buff.data == NULL) || (len < 6)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1252: FILE: drivers/net/irda/via-ircc.c:1163:
+/*		for(i=0 ; i < (len-4) ; i++) {
+		    DBG(printk(KERN_INFO "%x..\n",self->rx_buff.data[i]));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1256: FILE: drivers/net/irda/via-ircc.c:1167:
+^I^I// Move to next frame $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1269: FILE: drivers/net/irda/via-ircc.c:1180:
+
+}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1272: FILE: drivers/net/irda/via-ircc.c:1183:
+/*
+ * if frame is received , but no INT ,then use this routine to upload frame.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1279: FILE: drivers/net/irda/via-ircc.c:1190:
+	struct st_fifo *st_fifo;
+	st_fifo = &self->st_fifo;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1284: FILE: drivers/net/irda/via-ircc.c:1195:
+	DBG(printk(KERN_INFO "upload_rxdata: len=%x\n", len));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'upload_rxdata', this function's name, in a string
#1284: FILE: drivers/net/irda/via-ircc.c:1195:
+	DBG(printk(KERN_INFO "upload_rxdata: len=%x\n", len));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb == NULL'
#1287: FILE: drivers/net/irda/via-ircc.c:1198:
+	if ((skb == NULL) || ((len - 4) < 2)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1287: FILE: drivers/net/irda/via-ircc.c:1198:
+	if ((skb == NULL) || ((len - 4) < 2)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: drivers/net/irda/via-ircc.c:1209:
+^I// Move to next frame $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1317: FILE: drivers/net/irda/via-ircc.c:1228:
+/*
+ * Implement back to back receive , use this routine to upload data.

CHECK:CAMELCASE: Avoid CamelCase: <CkRxRecv>
#1329: FILE: drivers/net/irda/via-ircc.c:1240:
+	if (CkRxRecv(iobase, self)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1329: FILE: drivers/net/irda/via-ircc.c:1240:
+	if (CkRxRecv(iobase, self)) {
[...]
+	} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1330: FILE: drivers/net/irda/via-ircc.c:1241:
+^I^I// if still receiving ,then return ,don't upload frame $

CHECK:CAMELCASE: Avoid CamelCase: <RetryCount>
#1331: FILE: drivers/net/irda/via-ircc.c:1242:
+		self->RetryCount = 0;

CHECK:CAMELCASE: Avoid CamelCase: <SetTimer>
#1332: FILE: drivers/net/irda/via-ircc.c:1243:
+		SetTimer(iobase, 20);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1335: FILE: drivers/net/irda/via-ircc.c:1246:
+		return FALSE;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#1335: FILE: drivers/net/irda/via-ircc.c:1246:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->RetryCount >= 1'
#1338: FILE: drivers/net/irda/via-ircc.c:1249:
+	if ((self->RetryCount >= 1) ||
+	    ((st_fifo->pending_bytes + 2048) > self->rx_buff.truesize)
+	    || (st_fifo->len >= (MAX_RX_WINDOW))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1340: FILE: drivers/net/irda/via-ircc.c:1251:
+	    ((st_fifo->pending_bytes + 2048) > self->rx_buff.truesize)
+	    || (st_fifo->len >= (MAX_RX_WINDOW))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1342: FILE: drivers/net/irda/via-ircc.c:1253:
+^I^I^I// Put this entry back in fifo $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1352: FILE: drivers/net/irda/via-ircc.c:1263:
+			/*
+			 * if frame size, data ptr, or skb ptr are wrong,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb == NULL'
#1355: FILE: drivers/net/irda/via-ircc.c:1266:
+			if ((skb == NULL) || (skb->data == NULL)
+			    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->data == NULL'
#1355: FILE: drivers/net/irda/via-ircc.c:1266:
+			if ((skb == NULL) || (skb->data == NULL)
+			    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->rx_buff.data == NULL'
#1355: FILE: drivers/net/irda/via-ircc.c:1266:
+			if ((skb == NULL) || (skb->data == NULL)
+			    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len < 6'
#1355: FILE: drivers/net/irda/via-ircc.c:1266:
+			if ((skb == NULL) || (skb->data == NULL)
+			    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1355: FILE: drivers/net/irda/via-ircc.c:1266:
+			if ((skb == NULL) || (skb->data == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb->data"
#1355: FILE: drivers/net/irda/via-ircc.c:1266:
+			if ((skb == NULL) || (skb->data == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1356: FILE: drivers/net/irda/via-ircc.c:1267:
+			if ((skb == NULL) || (skb->data == NULL)
+			    || (self->rx_buff.data == NULL) || (len < 6)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->rx_buff.data"
#1356: FILE: drivers/net/irda/via-ircc.c:1267:
+			    || (self->rx_buff.data == NULL) || (len < 6)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1368: FILE: drivers/net/irda/via-ircc.c:1279:
+^I^I^I// Move to next frame $

CHECK:CAMELCASE: Avoid CamelCase: <GetHostStatus>
#1382: FILE: drivers/net/irda/via-ircc.c:1293:
+		     GetHostStatus(iobase), GetRXStatus(iobase)));

CHECK:CAMELCASE: Avoid CamelCase: <GetRXStatus>
#1382: FILE: drivers/net/irda/via-ircc.c:1293:
+		     GetHostStatus(iobase), GetRXStatus(iobase)));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1385: FILE: drivers/net/irda/via-ircc.c:1296:
+		/*
+		 * if frame is receive complete at this routine ,then upload

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1389: FILE: drivers/net/irda/via-ircc.c:1300:
+		if ((GetRXStatus(iobase) & 0x10)
+		    && (RxCurCount(iobase, self) != self->RxLastCount)) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1399: FILE: drivers/net/irda/via-ircc.c:1310:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1401: FILE: drivers/net/irda/via-ircc.c:1312:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1404: FILE: drivers/net/irda/via-ircc.c:1315:
+/*
+ * Function via_ircc_interrupt (irq, dev_id, regs)

CHECK:SPACING: No space is necessary after a cast
#1412: FILE: drivers/net/irda/via-ircc.c:1323:
+	struct net_device *dev = (struct net_device *) dev_id;

CHECK:CAMELCASE: Avoid CamelCase: <iHostIntType>
#1415: FILE: drivers/net/irda/via-ircc.c:1326:
+	u8 iHostIntType, iRxIntType, iTxIntType;

CHECK:CAMELCASE: Avoid CamelCase: <iRxIntType>
#1415: FILE: drivers/net/irda/via-ircc.c:1326:
+	u8 iHostIntType, iRxIntType, iTxIntType;

CHECK:CAMELCASE: Avoid CamelCase: <iTxIntType>
#1415: FILE: drivers/net/irda/via-ircc.c:1326:
+	u8 iHostIntType, iRxIntType, iTxIntType;

CHECK:SPACING: No space is necessary after a cast
#1422: FILE: drivers/net/irda/via-ircc.c:1333:
+	self = (struct via_ircc_cb *) dev->priv;

CHECK:CAMELCASE: Avoid CamelCase: <EventFlag>
#1427: FILE: drivers/net/irda/via-ircc.c:1338:
+		self->EventFlag.TimeOut++;

CHECK:CAMELCASE: Avoid CamelCase: <TimeOut>
#1427: FILE: drivers/net/irda/via-ircc.c:1338:
+		self->EventFlag.TimeOut++;

CHECK:CAMELCASE: Avoid CamelCase: <ClearTimerInt>
#1428: FILE: drivers/net/irda/via-ircc.c:1339:
+		ClearTimerInt(iobase, 1);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1429: FILE: drivers/net/irda/via-ircc.c:1340:
+		if (self->io.direction == IO_XMIT) {
+			via_ircc_dma_xmit(self, iobase);
+		}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1434: FILE: drivers/net/irda/via-ircc.c:1345:
+			/*
+			 * frame ready hold too long, must reset.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->netdev'
#1438: FILE: drivers/net/irda/via-ircc.c:1349:
+				if (irda_device_txqueue_empty
+				    (self->netdev)) {

CHECK:CAMELCASE: Avoid CamelCase: <EOMessage>
#1450: FILE: drivers/net/irda/via-ircc.c:1361:
+			self->EventFlag.EOMessage++;	// read and will auto clean

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->netdev'
#1452: FILE: drivers/net/irda/via-ircc.c:1363:
+				if (irda_device_txqueue_empty
+				    (self->netdev)) {

CHECK:CAMELCASE: Avoid CamelCase: <Unknown>
#1457: FILE: drivers/net/irda/via-ircc.c:1368:
+				self->EventFlag.Unknown++;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1467: FILE: drivers/net/irda/via-ircc.c:1378:
+			DBG(printk(KERN_INFO " RxIRQ =0\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1474: FILE: drivers/net/irda/via-ircc.c:1385:
+^I^I}^I^I// No ERR     $

CHECK:BRACES: Unbalanced braces around else statement
#1475: FILE: drivers/net/irda/via-ircc.c:1386:
+		else {		//ERR

WARNING:LINE_SPACING: Missing a blank line after declarations
#1503: FILE: drivers/net/irda/via-ircc.c:1414:
+	int iobase;
+	iobase = self->io.fir_base;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1505: FILE: drivers/net/irda/via-ircc.c:1416:
+	DBG(printk(KERN_INFO "hwreset  ....\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hwreset', this function's name, in a string
#1505: FILE: drivers/net/irda/via-ircc.c:1416:
+	DBG(printk(KERN_INFO "hwreset  ....\n"));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1531: FILE: drivers/net/irda/via-ircc.c:1442:
+/*
+ * Function via_ircc_is_receiving (self)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#1541: FILE: drivers/net/irda/via-ircc.c:1452:
+	ASSERT(self != NULL, return FALSE;);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1547: FILE: drivers/net/irda/via-ircc.c:1458:
+	DBG(printk(KERN_INFO "is_receiving  status=%x....\n", status));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1553: FILE: drivers/net/irda/via-ircc.c:1464:
+/*
+ * Function via_ircc_net_init (dev)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1560: FILE: drivers/net/irda/via-ircc.c:1471:
+	IRDA_DEBUG(4, "%s()\n", __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1574: FILE: drivers/net/irda/via-ircc.c:1485:
+/*
+ * Function via_ircc_net_open (dev)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1585: FILE: drivers/net/irda/via-ircc.c:1496:
+	IRDA_DEBUG(4, "%s()\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1587: FILE: drivers/net/irda/via-ircc.c:1498:
+	ASSERT(dev != NULL, return -1;);

CHECK:SPACING: No space is necessary after a cast
#1588: FILE: drivers/net/irda/via-ircc.c:1499:
+	self = (struct via_ircc_cb *) dev->priv;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#1590: FILE: drivers/net/irda/via-ircc.c:1501:
+	ASSERT(self != NULL, return 0;);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1599: FILE: drivers/net/irda/via-ircc.c:1510:
+^I * Always allocate the DMA channel after the IRQ, and clean up on $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1599: FILE: drivers/net/irda/via-ircc.c:1510:
+	/*
+	 * Always allocate the DMA channel after the IRQ, and clean up on 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1617: FILE: drivers/net/irda/via-ircc.c:1528:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <EnInternalLoop>
#1620: FILE: drivers/net/irda/via-ircc.c:1531:
+	EnInternalLoop(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <EnExternalLoop>
#1621: FILE: drivers/net/irda/via-ircc.c:1532:
+	EnExternalLoop(iobase, OFF);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1625: FILE: drivers/net/irda/via-ircc.c:1536:
+^I/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1626: FILE: drivers/net/irda/via-ircc.c:1537:
+	/* 
+	 * Open new IrLAP layer instance, now that everything should be

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1627: FILE: drivers/net/irda/via-ircc.c:1538:
+^I * initialized properly $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1631: FILE: drivers/net/irda/via-ircc.c:1542:
+	/*
+	 * for different kernel ,irlap_open have different parameter.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1642: FILE: drivers/net/irda/via-ircc.c:1553:
+/*
+ * Function via_ircc_net_close (dev)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1652: FILE: drivers/net/irda/via-ircc.c:1563:
+	IRDA_DEBUG(4, "%s()\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1654: FILE: drivers/net/irda/via-ircc.c:1565:
+	ASSERT(dev != NULL, return -1;);

CHECK:SPACING: No space is necessary after a cast
#1655: FILE: drivers/net/irda/via-ircc.c:1566:
+	self = (struct via_ircc_cb *) dev->priv;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#1656: FILE: drivers/net/irda/via-ircc.c:1567:
+	ASSERT(self != NULL, return 0;);

CHECK:CAMELCASE: Avoid CamelCase: <DisableDmaChannel>
#1671: FILE: drivers/net/irda/via-ircc.c:1582:
+	DisableDmaChannel(self->io.dma);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1682: FILE: drivers/net/irda/via-ircc.c:1593:
+/*
+ * Function via_ircc_net_ioctl (dev, rq, cmd)

CHECK:SPACING: No space is necessary after a cast
#1690: FILE: drivers/net/irda/via-ircc.c:1601:
+	struct if_irda_req *irq = (struct if_irda_req *) rq;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1695: FILE: drivers/net/irda/via-ircc.c:1606:
+	ASSERT(dev != NULL, return -1;);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#1697: FILE: drivers/net/irda/via-ircc.c:1608:
+	ASSERT(self != NULL, return -1;);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1698: FILE: drivers/net/irda/via-ircc.c:1609:
+	IRDA_DEBUG(2, "%s(), %s, (cmd=0x%X)\n", __FUNCTION__, dev->name,

WARNING:INDENTED_LABEL: labels should not be indented
#1723: FILE: drivers/net/irda/via-ircc.c:1634:
+      out:

CHECK:SPACING: No space is necessary after a cast
#1731: FILE: drivers/net/irda/via-ircc.c:1642:
+	struct via_ircc_cb *self = (struct via_ircc_cb *) dev->priv;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1746: FILE: drivers/net/irda/via-ircc.h:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1747: FILE: drivers/net/irda/via-ircc.h:2:
+ *                $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1766: FILE: drivers/net/irda/via-ircc.h:21:
+this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1767: FILE: drivers/net/irda/via-ircc.h:22:
+59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1770: FILE: drivers/net/irda/via-ircc.h:25:
+ * jul/08/2002 : Rx buffer length should use Rx ring ptr.^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1771: FILE: drivers/net/irda/via-ircc.h:26:
+ * Oct/28/2002 : Add SB id for 3147 and 3177.^I$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1781: FILE: drivers/net/irda/via-ircc.h:36:
+#include <asm/io.h>

WARNING:TYPO_SPELLING: 'Lenght' may be misspelled - perhaps 'Length'?
#1801: FILE: drivers/net/irda/via-ircc.h:56:
+	int len;		/* Lenght of frame in DMA mem */
 	        		   ^^^^^^

WARNING:TYPO_SPELLING: 'Lenght' may be misspelled - perhaps 'Length'?
#1807: FILE: drivers/net/irda/via-ircc.h:62:
+	int len;		/* Lenght of queue */
 	        		   ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1812: FILE: drivers/net/irda/via-ircc.h:67:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <TxFIFOUnderRun>
#1816: FILE: drivers/net/irda/via-ircc.h:71:
+	unsigned char TxFIFOUnderRun;

CHECK:CAMELCASE: Avoid CamelCase: <TxFIFOReady>
#1818: FILE: drivers/net/irda/via-ircc.h:73:
+	unsigned char TxFIFOReady;

CHECK:CAMELCASE: Avoid CamelCase: <EarlyEOM>
#1819: FILE: drivers/net/irda/via-ircc.h:74:
+	unsigned char EarlyEOM;

CHECK:CAMELCASE: Avoid CamelCase: <PHYErr>
#1821: FILE: drivers/net/irda/via-ircc.h:76:
+	unsigned char PHYErr;

CHECK:CAMELCASE: Avoid CamelCase: <CRCErr>
#1822: FILE: drivers/net/irda/via-ircc.h:77:
+	unsigned char CRCErr;

CHECK:CAMELCASE: Avoid CamelCase: <RxFIFOOverRun>
#1823: FILE: drivers/net/irda/via-ircc.h:78:
+	unsigned char RxFIFOOverRun;

CHECK:CAMELCASE: Avoid CamelCase: <EOPacket>
#1824: FILE: drivers/net/irda/via-ircc.h:79:
+	unsigned char EOPacket;

CHECK:CAMELCASE: Avoid CamelCase: <RxAvail>
#1825: FILE: drivers/net/irda/via-ircc.h:80:
+	unsigned char RxAvail;

CHECK:CAMELCASE: Avoid CamelCase: <TooLargePacket>
#1826: FILE: drivers/net/irda/via-ircc.h:81:
+	unsigned char TooLargePacket;

CHECK:CAMELCASE: Avoid CamelCase: <SIRBad>
#1827: FILE: drivers/net/irda/via-ircc.h:82:
+	unsigned char SIRBad;

CHECK:CAMELCASE: Avoid CamelCase: <RxDMATC>
#1832: FILE: drivers/net/irda/via-ircc.h:87:
+	unsigned char RxDMATC;

CHECK:CAMELCASE: Avoid CamelCase: <TxDMATC>
#1833: FILE: drivers/net/irda/via-ircc.h:88:
+	unsigned char TxDMATC;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1870: FILE: drivers/net/irda/via-ircc.h:125:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1873: FILE: drivers/net/irda/via-ircc.h:128:
+#define  I_CF_L_0  ^I^I0x10$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1901: FILE: drivers/net/irda/via-ircc.h:156:
+#define  TIMER         ^I0x32$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1902: FILE: drivers/net/irda/via-ircc.h:157:
+#define  I_CF_4         ^I0x33$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1907: FILE: drivers/net/irda/via-ircc.h:162:
+#define StartAddr ^I0x10^I// the first register address$

CHECK:CAMELCASE: Avoid CamelCase: <StartAddr>
#1907: FILE: drivers/net/irda/via-ircc.h:162:
+#define StartAddr 	0x10	// the first register address

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1908: FILE: drivers/net/irda/via-ircc.h:163:
+#define EndAddr ^I0x3f^I// the last register address$

CHECK:CAMELCASE: Avoid CamelCase: <EndAddr>
#1908: FILE: drivers/net/irda/via-ircc.h:163:
+#define EndAddr 	0x3f	// the last register address

CHECK:SPACING: No space is necessary after a cast
#1909: FILE: drivers/net/irda/via-ircc.h:164:
+#define GetBit(val,bit)  val = (unsigned char) ((val>>bit) & 0x1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1909: FILE: drivers/net/irda/via-ircc.h:164:
+#define GetBit(val,bit)  val = (unsigned char) ((val>>bit) & 0x1)
                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1909: FILE: drivers/net/irda/via-ircc.h:164:
+#define GetBit(val,bit)  val = (unsigned char) ((val>>bit) & 0x1)
                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <GetBit>
#1909: FILE: drivers/net/irda/via-ircc.h:164:
+#define GetBit(val,bit)  val = (unsigned char) ((val>>bit) & 0x1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1909: FILE: drivers/net/irda/via-ircc.h:164:
+#define GetBit(val,bit)  val = (unsigned char) ((val>>bit) & 0x1)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#1909: FILE: drivers/net/irda/via-ircc.h:164:
+#define GetBit(val,bit)  val = (unsigned char) ((val>>bit) & 0x1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#1909: FILE: drivers/net/irda/via-ircc.h:164:
+#define GetBit(val,bit)  val = (unsigned char) ((val>>bit) & 0x1)

CHECK:SPACING: No space is necessary after a cast
#1911: FILE: drivers/net/irda/via-ircc.h:166:
+#define SetBit(val,bit)  val= (unsigned char ) (val | (0x1 << bit))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1911: FILE: drivers/net/irda/via-ircc.h:166:
+#define SetBit(val,bit)  val= (unsigned char ) (val | (0x1 << bit))
                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1911: FILE: drivers/net/irda/via-ircc.h:166:
+#define SetBit(val,bit)  val= (unsigned char ) (val | (0x1 << bit))
                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1911: FILE: drivers/net/irda/via-ircc.h:166:
+#define SetBit(val,bit)  val= (unsigned char ) (val | (0x1 << bit))

CHECK:CAMELCASE: Avoid CamelCase: <SetBit>
#1911: FILE: drivers/net/irda/via-ircc.h:166:
+#define SetBit(val,bit)  val= (unsigned char ) (val | (0x1 << bit))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1911: FILE: drivers/net/irda/via-ircc.h:166:
+#define SetBit(val,bit)  val= (unsigned char ) (val | (0x1 << bit))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#1911: FILE: drivers/net/irda/via-ircc.h:166:
+#define SetBit(val,bit)  val= (unsigned char ) (val | (0x1 << bit))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#1911: FILE: drivers/net/irda/via-ircc.h:166:
+#define SetBit(val,bit)  val= (unsigned char ) (val | (0x1 << bit))

CHECK:SPACING: No space is necessary after a cast
#1913: FILE: drivers/net/irda/via-ircc.h:168:
+#define ResetBit(val,bit) val= (unsigned char ) (val & ~(0x1 << bit))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1913: FILE: drivers/net/irda/via-ircc.h:168:
+#define ResetBit(val,bit) val= (unsigned char ) (val & ~(0x1 << bit))
                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1913: FILE: drivers/net/irda/via-ircc.h:168:
+#define ResetBit(val,bit) val= (unsigned char ) (val & ~(0x1 << bit))
                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1913: FILE: drivers/net/irda/via-ircc.h:168:
+#define ResetBit(val,bit) val= (unsigned char ) (val & ~(0x1 << bit))

CHECK:CAMELCASE: Avoid CamelCase: <ResetBit>
#1913: FILE: drivers/net/irda/via-ircc.h:168:
+#define ResetBit(val,bit) val= (unsigned char ) (val & ~(0x1 << bit))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1913: FILE: drivers/net/irda/via-ircc.h:168:
+#define ResetBit(val,bit) val= (unsigned char ) (val & ~(0x1 << bit))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#1913: FILE: drivers/net/irda/via-ircc.h:168:
+#define ResetBit(val,bit) val= (unsigned char ) (val & ~(0x1 << bit))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#1913: FILE: drivers/net/irda/via-ircc.h:168:
+#define ResetBit(val,bit) val= (unsigned char ) (val & ~(0x1 << bit))

CHECK:CAMELCASE: Avoid CamelCase: <VenderID>
#1918: FILE: drivers/net/irda/via-ircc.h:173:
+#define VenderID    0x1106

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1934: FILE: drivers/net/irda/via-ircc.h:189:
+#define MASK1   DMA1+0x0a
                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1934: FILE: drivers/net/irda/via-ircc.h:189:
+#define MASK1   DMA1+0x0a

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1935: FILE: drivers/net/irda/via-ircc.h:190:
+#define MASK2   DMA2+0x14
                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1935: FILE: drivers/net/irda/via-ircc.h:190:
+#define MASK2   DMA2+0x14

CHECK:CAMELCASE: Avoid CamelCase: <Clk_bit>
#1937: FILE: drivers/net/irda/via-ircc.h:192:
+#define Clk_bit 0x40

CHECK:CAMELCASE: Avoid CamelCase: <Tx_bit>
#1938: FILE: drivers/net/irda/via-ircc.h:193:
+#define Tx_bit 0x01

CHECK:CAMELCASE: Avoid CamelCase: <Rd_Valid>
#1939: FILE: drivers/net/irda/via-ircc.h:194:
+#define Rd_Valid 0x08

CHECK:CAMELCASE: Avoid CamelCase: <RxBit>
#1940: FILE: drivers/net/irda/via-ircc.h:195:
+#define RxBit 0x08

CHECK:CAMELCASE: Avoid CamelCase: <ReadPCIByte>
#1942: FILE: drivers/net/irda/via-ircc.h:197:
+__u8 ReadPCIByte(__u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1942: FILE: drivers/net/irda/via-ircc.h:197:
+__u8 ReadPCIByte(__u8, __u8, __u8, __u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1942: FILE: drivers/net/irda/via-ircc.h:197:
+__u8 ReadPCIByte(__u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1942: FILE: drivers/net/irda/via-ircc.h:197:
+__u8 ReadPCIByte(__u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1942: FILE: drivers/net/irda/via-ircc.h:197:
+__u8 ReadPCIByte(__u8, __u8, __u8, __u8);

CHECK:CAMELCASE: Avoid CamelCase: <ReadPCI>
#1943: FILE: drivers/net/irda/via-ircc.h:198:
+__u32 ReadPCI(__u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1943: FILE: drivers/net/irda/via-ircc.h:198:
+__u32 ReadPCI(__u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1943: FILE: drivers/net/irda/via-ircc.h:198:
+__u32 ReadPCI(__u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1943: FILE: drivers/net/irda/via-ircc.h:198:
+__u32 ReadPCI(__u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1943: FILE: drivers/net/irda/via-ircc.h:198:
+__u32 ReadPCI(__u8, __u8, __u8, __u8);

CHECK:CAMELCASE: Avoid CamelCase: <WritePCI>
#1944: FILE: drivers/net/irda/via-ircc.h:199:
+void WritePCI(__u8, __u8, __u8, __u8, __u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1944: FILE: drivers/net/irda/via-ircc.h:199:
+void WritePCI(__u8, __u8, __u8, __u8, __u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1944: FILE: drivers/net/irda/via-ircc.h:199:
+void WritePCI(__u8, __u8, __u8, __u8, __u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1944: FILE: drivers/net/irda/via-ircc.h:199:
+void WritePCI(__u8, __u8, __u8, __u8, __u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1944: FILE: drivers/net/irda/via-ircc.h:199:
+void WritePCI(__u8, __u8, __u8, __u8, __u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32' should also have an identifier name
#1944: FILE: drivers/net/irda/via-ircc.h:199:
+void WritePCI(__u8, __u8, __u8, __u8, __u32);

CHECK:CAMELCASE: Avoid CamelCase: <WritePCIByte>
#1945: FILE: drivers/net/irda/via-ircc.h:200:
+void WritePCIByte(__u8, __u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1945: FILE: drivers/net/irda/via-ircc.h:200:
+void WritePCIByte(__u8, __u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1945: FILE: drivers/net/irda/via-ircc.h:200:
+void WritePCIByte(__u8, __u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1945: FILE: drivers/net/irda/via-ircc.h:200:
+void WritePCIByte(__u8, __u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1945: FILE: drivers/net/irda/via-ircc.h:200:
+void WritePCIByte(__u8, __u8, __u8, __u8, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#1945: FILE: drivers/net/irda/via-ircc.h:200:
+void WritePCIByte(__u8, __u8, __u8, __u8, __u8);

CHECK:CAMELCASE: Avoid CamelCase: <mySearchPCI>
#1946: FILE: drivers/net/irda/via-ircc.h:201:
+int mySearchPCI(__u8 *, __u16, __u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8 *' should also have an identifier name
#1946: FILE: drivers/net/irda/via-ircc.h:201:
+int mySearchPCI(__u8 *, __u16, __u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u16' should also have an identifier name
#1946: FILE: drivers/net/irda/via-ircc.h:201:
+int mySearchPCI(__u8 *, __u16, __u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u16' should also have an identifier name
#1946: FILE: drivers/net/irda/via-ircc.h:201:
+int mySearchPCI(__u8 *, __u16, __u16);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1948: FILE: drivers/net/irda/via-ircc.h:203:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <iRegNum>
#1978: FILE: drivers/net/irda/via-ircc.h:233:
+unsigned char ReadLPCReg(int iRegNum)

CHECK:CAMELCASE: Avoid CamelCase: <iVal>
#1980: FILE: drivers/net/irda/via-ircc.h:235:
+	unsigned char iVal;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1993: FILE: drivers/net/irda/via-ircc.h:248:
+{
+

CHECK:CAMELCASE: Avoid CamelCase: <BaseAddr>
#2001: FILE: drivers/net/irda/via-ircc.h:256:
+__u8 ReadReg(unsigned int BaseAddr, int iRegNum)

CHECK:SPACING: No space is necessary after a cast
#2003: FILE: drivers/net/irda/via-ircc.h:258:
+	return ((__u8) inb(BaseAddr + iRegNum));

CHECK:CAMELCASE: Avoid CamelCase: <WriteRegBit>
#2011: FILE: drivers/net/irda/via-ircc.h:266:
+int WriteRegBit(unsigned int BaseAddr, unsigned char RegNum,

CHECK:CAMELCASE: Avoid CamelCase: <RegNum>
#2011: FILE: drivers/net/irda/via-ircc.h:266:
+int WriteRegBit(unsigned int BaseAddr, unsigned char RegNum,

CHECK:CAMELCASE: Avoid CamelCase: <BitPos>
#2012: FILE: drivers/net/irda/via-ircc.h:267:
+		unsigned char BitPos, unsigned char value)

CHECK:CAMELCASE: Avoid CamelCase: <Rtemp>
#2014: FILE: drivers/net/irda/via-ircc.h:269:
+	__u8 Rtemp, Wtemp;

CHECK:CAMELCASE: Avoid CamelCase: <Wtemp>
#2014: FILE: drivers/net/irda/via-ircc.h:269:
+	__u8 Rtemp, Wtemp;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2016: FILE: drivers/net/irda/via-ircc.h:271:
+	if (BitPos > 7) {
+		return -1;
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'RegNum < StartAddr'
#2019: FILE: drivers/net/irda/via-ircc.h:274:
+	if ((RegNum < StartAddr) || (RegNum > EndAddr))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'RegNum > EndAddr'
#2019: FILE: drivers/net/irda/via-ircc.h:274:
+	if ((RegNum < StartAddr) || (RegNum > EndAddr))

CHECK:BRACES: braces {} should be used on all arms of this statement
#2022: FILE: drivers/net/irda/via-ircc.h:277:
+	if (value == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2024: FILE: drivers/net/irda/via-ircc.h:279:
+	else {

CHECK:CAMELCASE: Avoid CamelCase: <CheckRegBit>
#2034: FILE: drivers/net/irda/via-ircc.h:289:
+__u8 CheckRegBit(unsigned int BaseAddr, unsigned char RegNum,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'RegNum < StartAddr'
#2041: FILE: drivers/net/irda/via-ircc.h:296:
+	if ((RegNum < StartAddr) || (RegNum > EndAddr)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'RegNum > EndAddr'
#2041: FILE: drivers/net/irda/via-ircc.h:296:
+	if ((RegNum < StartAddr) || (RegNum > EndAddr)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2041: FILE: drivers/net/irda/via-ircc.h:296:
+	if ((RegNum < StartAddr) || (RegNum > EndAddr)) {
+//     printf("what is the register %x!\n",RegNum);
+	}

CHECK:CAMELCASE: Avoid CamelCase: <dTmp>
#2050: FILE: drivers/net/irda/via-ircc.h:305:
+	__u32 dTmp;

CHECK:CAMELCASE: Avoid CamelCase: <bData>
#2051: FILE: drivers/net/irda/via-ircc.h:306:
+	__u8 bData, bTmp;

CHECK:SPACING: No space is necessary after a cast
#2056: FILE: drivers/net/irda/via-ircc.h:311:
+	bData = (__u8) (dTmp >> bTmp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus == 0xff'
#2064: FILE: drivers/net/irda/via-ircc.h:319:
+	if ((bus == 0xff) || (device == 0xff) || (fun == 0xff))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'device == 0xff'
#2064: FILE: drivers/net/irda/via-ircc.h:319:
+	if ((bus == 0xff) || (device == 0xff) || (fun == 0xff))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fun == 0xff'
#2064: FILE: drivers/net/irda/via-ircc.h:319:
+	if ((bus == 0xff) || (device == 0xff) || (fun == 0xff))

CHECK:SPACING: No space is necessary after a cast
#2067: FILE: drivers/net/irda/via-ircc.h:322:
+	temp = (__u32) reg << 2;

CHECK:SPACING: No space is necessary after a cast
#2069: FILE: drivers/net/irda/via-ircc.h:324:
+	temp = (__u32) fun << 8;

CHECK:SPACING: No space is necessary after a cast
#2071: FILE: drivers/net/irda/via-ircc.h:326:
+	temp = (__u32) device << 11;

CHECK:SPACING: No space is necessary after a cast
#2073: FILE: drivers/net/irda/via-ircc.h:328:
+	temp = (__u32) bus << 16;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2081: FILE: drivers/net/irda/via-ircc.h:336:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <dTmp1>
#2085: FILE: drivers/net/irda/via-ircc.h:340:
+	__u32 dTmp, dTmp1 = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus == 0xff'
#2121: FILE: drivers/net/irda/via-ircc.h:376:
+	if ((bus == 0xff) || (device == 0xff) || (fun == 0xff))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'device == 0xff'
#2121: FILE: drivers/net/irda/via-ircc.h:376:
+	if ((bus == 0xff) || (device == 0xff) || (fun == 0xff))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fun == 0xff'
#2121: FILE: drivers/net/irda/via-ircc.h:376:
+	if ((bus == 0xff) || (device == 0xff) || (fun == 0xff))

CHECK:SPACING: No space is necessary after a cast
#2124: FILE: drivers/net/irda/via-ircc.h:379:
+	temp = (__u32) reg << 2;

CHECK:SPACING: No space is necessary after a cast
#2126: FILE: drivers/net/irda/via-ircc.h:381:
+	temp = (__u32) fun << 8;

CHECK:SPACING: No space is necessary after a cast
#2128: FILE: drivers/net/irda/via-ircc.h:383:
+	temp = (__u32) device << 11;

CHECK:SPACING: No space is necessary after a cast
#2130: FILE: drivers/net/irda/via-ircc.h:385:
+	temp = (__u32) bus << 16;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2136: FILE: drivers/net/irda/via-ircc.h:391:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2138: FILE: drivers/net/irda/via-ircc.h:393:
+^I^I^I^I^I^I^I^I^I^I^I// find device with DeviceID and VenderID                                       // if match return three byte buffer (bus,device,function)                      // no found, address={99,99,99} $

WARNING:LONG_LINE_COMMENT: line length of 280 exceeds 100 columns
#2138: FILE: drivers/net/irda/via-ircc.h:393:
+											// find device with DeviceID and VenderID                                       // if match return three byte buffer (bus,device,function)                      // no found, address={99,99,99} 

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2139: FILE: drivers/net/irda/via-ircc.h:394:
+int mySearchPCI(__u8 * SBridpos, __u16 VID, __u16 DID)

CHECK:CAMELCASE: Avoid CamelCase: <SBridpos>
#2139: FILE: drivers/net/irda/via-ircc.h:394:
+int mySearchPCI(__u8 * SBridpos, __u16 VID, __u16 DID)

CHECK:CAMELCASE: Avoid CamelCase: <FindDeviceID>
#2142: FILE: drivers/net/irda/via-ircc.h:397:
+	__u16 FindDeviceID, FindVenderID;

CHECK:CAMELCASE: Avoid CamelCase: <FindVenderID>
#2142: FILE: drivers/net/irda/via-ircc.h:397:
+	__u16 FindDeviceID, FindVenderID;

CHECK:SPACING: No space is necessary after a cast
#2149: FILE: drivers/net/irda/via-ircc.h:404:
+			FindDeviceID = (__u16) (ReadPCI(i, j, k, 0) >> 16);

CHECK:SPACING: No space is necessary after a cast
#2151: FILE: drivers/net/irda/via-ircc.h:406:
+			    (__u16) (ReadPCI(i, j, k, 0) & 0x0000ffff);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'VID == FindVenderID'
#2152: FILE: drivers/net/irda/via-ircc.h:407:
+			if ((VID == FindVenderID) && (DID == FindDeviceID)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'DID == FindDeviceID'
#2152: FILE: drivers/net/irda/via-ircc.h:407:
+			if ((VID == FindVenderID) && (DID == FindDeviceID)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2152: FILE: drivers/net/irda/via-ircc.h:407:
+			if ((VID == FindVenderID) && (DID == FindDeviceID)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:LINE_SPACING: Missing a blank line after declarations
#2166: FILE: drivers/net/irda/via-ircc.h:421:
+	__u16 low, high;
+	if ((size & 0xe000) == 0) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2172: FILE: drivers/net/irda/via-ircc.h:427:
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2174: FILE: drivers/net/irda/via-ircc.h:429:
+
+}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2198: FILE: drivers/net/irda/via-ircc.h:453:
+
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2200: FILE: drivers/net/irda/via-ircc.h:455:
+#define CRC16(BaseAddr,val)         WriteRegBit(BaseAddr,I_CF_L_0,7,val)	//0 for 32 CRC
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2200: FILE: drivers/net/irda/via-ircc.h:455:
+#define CRC16(BaseAddr,val)         WriteRegBit(BaseAddr,I_CF_L_0,7,val)	//0 for 32 CRC
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2200: FILE: drivers/net/irda/via-ircc.h:455:
+#define CRC16(BaseAddr,val)         WriteRegBit(BaseAddr,I_CF_L_0,7,val)	//0 for 32 CRC
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2200: FILE: drivers/net/irda/via-ircc.h:455:
+#define CRC16(BaseAddr,val)         WriteRegBit(BaseAddr,I_CF_L_0,7,val)	//0 for 32 CRC
                                                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2202: FILE: drivers/net/irda/via-ircc.h:457:
+/*
+#define SetVFIR(BaseAddr,val)       WriteRegBit(BaseAddr,I_CF_H_0,5,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2207: FILE: drivers/net/irda/via-ircc.h:462:
+#define SIRFilter(BaseAddr,val)     WriteRegBit(BaseAddr,I_CF_L_0,3,val)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2207: FILE: drivers/net/irda/via-ircc.h:462:
+#define SIRFilter(BaseAddr,val)     WriteRegBit(BaseAddr,I_CF_L_0,3,val)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2207: FILE: drivers/net/irda/via-ircc.h:462:
+#define SIRFilter(BaseAddr,val)     WriteRegBit(BaseAddr,I_CF_L_0,3,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2207: FILE: drivers/net/irda/via-ircc.h:462:
+#define SIRFilter(BaseAddr,val)     WriteRegBit(BaseAddr,I_CF_L_0,3,val)
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2208: FILE: drivers/net/irda/via-ircc.h:463:
+#define Filter(BaseAddr,val)        WriteRegBit(BaseAddr,I_CF_L_0,2,val)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2208: FILE: drivers/net/irda/via-ircc.h:463:
+#define Filter(BaseAddr,val)        WriteRegBit(BaseAddr,I_CF_L_0,2,val)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2208: FILE: drivers/net/irda/via-ircc.h:463:
+#define Filter(BaseAddr,val)        WriteRegBit(BaseAddr,I_CF_L_0,2,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2208: FILE: drivers/net/irda/via-ircc.h:463:
+#define Filter(BaseAddr,val)        WriteRegBit(BaseAddr,I_CF_L_0,2,val)
                                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <Filter>
#2208: FILE: drivers/net/irda/via-ircc.h:463:
+#define Filter(BaseAddr,val)        WriteRegBit(BaseAddr,I_CF_L_0,2,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2209: FILE: drivers/net/irda/via-ircc.h:464:
+#define InvertTX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_L_0,1,val)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2209: FILE: drivers/net/irda/via-ircc.h:464:
+#define InvertTX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_L_0,1,val)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2209: FILE: drivers/net/irda/via-ircc.h:464:
+#define InvertTX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_L_0,1,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2209: FILE: drivers/net/irda/via-ircc.h:464:
+#define InvertTX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_L_0,1,val)
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2210: FILE: drivers/net/irda/via-ircc.h:465:
+#define InvertRX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_L_0,0,val)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2210: FILE: drivers/net/irda/via-ircc.h:465:
+#define InvertRX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_L_0,0,val)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2210: FILE: drivers/net/irda/via-ircc.h:465:
+#define InvertRX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_L_0,0,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2210: FILE: drivers/net/irda/via-ircc.h:465:
+#define InvertRX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_L_0,0,val)
                                                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2212: FILE: drivers/net/irda/via-ircc.h:467:
+//****************************I_CF_H_0
+#define EnableTX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_H_0,4,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2212: FILE: drivers/net/irda/via-ircc.h:467:
+#define EnableTX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_H_0,4,val)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2212: FILE: drivers/net/irda/via-ircc.h:467:
+#define EnableTX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_H_0,4,val)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2212: FILE: drivers/net/irda/via-ircc.h:467:
+#define EnableTX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_H_0,4,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2212: FILE: drivers/net/irda/via-ircc.h:467:
+#define EnableTX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_H_0,4,val)
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2213: FILE: drivers/net/irda/via-ircc.h:468:
+#define EnableRX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_H_0,3,val)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2213: FILE: drivers/net/irda/via-ircc.h:468:
+#define EnableRX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_H_0,3,val)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2213: FILE: drivers/net/irda/via-ircc.h:468:
+#define EnableRX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_H_0,3,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2213: FILE: drivers/net/irda/via-ircc.h:468:
+#define EnableRX(BaseAddr,val)      WriteRegBit(BaseAddr,I_CF_H_0,3,val)
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2214: FILE: drivers/net/irda/via-ircc.h:469:
+#define EnableDMA(BaseAddr,val)     WriteRegBit(BaseAddr,I_CF_H_0,2,val)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2214: FILE: drivers/net/irda/via-ircc.h:469:
+#define EnableDMA(BaseAddr,val)     WriteRegBit(BaseAddr,I_CF_H_0,2,val)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2214: FILE: drivers/net/irda/via-ircc.h:469:
+#define EnableDMA(BaseAddr,val)     WriteRegBit(BaseAddr,I_CF_H_0,2,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2214: FILE: drivers/net/irda/via-ircc.h:469:
+#define EnableDMA(BaseAddr,val)     WriteRegBit(BaseAddr,I_CF_H_0,2,val)
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2215: FILE: drivers/net/irda/via-ircc.h:470:
+#define SIRRecvAny(BaseAddr,val)    WriteRegBit(BaseAddr,I_CF_H_0,1,val)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2215: FILE: drivers/net/irda/via-ircc.h:470:
+#define SIRRecvAny(BaseAddr,val)    WriteRegBit(BaseAddr,I_CF_H_0,1,val)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2215: FILE: drivers/net/irda/via-ircc.h:470:
+#define SIRRecvAny(BaseAddr,val)    WriteRegBit(BaseAddr,I_CF_H_0,1,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2215: FILE: drivers/net/irda/via-ircc.h:470:
+#define SIRRecvAny(BaseAddr,val)    WriteRegBit(BaseAddr,I_CF_H_0,1,val)
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2216: FILE: drivers/net/irda/via-ircc.h:471:
+#define DiableTrans(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_H_0,0,val)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2216: FILE: drivers/net/irda/via-ircc.h:471:
+#define DiableTrans(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_H_0,0,val)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2216: FILE: drivers/net/irda/via-ircc.h:471:
+#define DiableTrans(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_H_0,0,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2216: FILE: drivers/net/irda/via-ircc.h:471:
+#define DiableTrans(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_H_0,0,val)
                                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <DiableTrans>
#2216: FILE: drivers/net/irda/via-ircc.h:471:
+#define DiableTrans(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_H_0,0,val)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2218: FILE: drivers/net/irda/via-ircc.h:473:
+//***************************I_SIR_BOF,I_SIR_EOF
+#define SetSIRBOF(BaseAddr,val)     WriteReg(BaseAddr,I_SIR_BOF,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2218: FILE: drivers/net/irda/via-ircc.h:473:
+#define SetSIRBOF(BaseAddr,val)     WriteReg(BaseAddr,I_SIR_BOF,val)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2218: FILE: drivers/net/irda/via-ircc.h:473:
+#define SetSIRBOF(BaseAddr,val)     WriteReg(BaseAddr,I_SIR_BOF,val)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2218: FILE: drivers/net/irda/via-ircc.h:473:
+#define SetSIRBOF(BaseAddr,val)     WriteReg(BaseAddr,I_SIR_BOF,val)
                                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <SetSIRBOF>
#2218: FILE: drivers/net/irda/via-ircc.h:473:
+#define SetSIRBOF(BaseAddr,val)     WriteReg(BaseAddr,I_SIR_BOF,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2219: FILE: drivers/net/irda/via-ircc.h:474:
+#define SetSIREOF(BaseAddr,val)     WriteReg(BaseAddr,I_SIR_EOF,val)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2219: FILE: drivers/net/irda/via-ircc.h:474:
+#define SetSIREOF(BaseAddr,val)     WriteReg(BaseAddr,I_SIR_EOF,val)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2219: FILE: drivers/net/irda/via-ircc.h:474:
+#define SetSIREOF(BaseAddr,val)     WriteReg(BaseAddr,I_SIR_EOF,val)
                                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <SetSIREOF>
#2219: FILE: drivers/net/irda/via-ircc.h:474:
+#define SetSIREOF(BaseAddr,val)     WriteReg(BaseAddr,I_SIR_EOF,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2220: FILE: drivers/net/irda/via-ircc.h:475:
+#define GetSIRBOF(BaseAddr)        ReadReg(BaseAddr,I_SIR_BOF)
                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <GetSIRBOF>
#2220: FILE: drivers/net/irda/via-ircc.h:475:
+#define GetSIRBOF(BaseAddr)        ReadReg(BaseAddr,I_SIR_BOF)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2221: FILE: drivers/net/irda/via-ircc.h:476:
+#define GetSIREOF(BaseAddr)        ReadReg(BaseAddr,I_SIR_EOF)
                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <GetSIREOF>
#2221: FILE: drivers/net/irda/via-ircc.h:476:
+#define GetSIREOF(BaseAddr)        ReadReg(BaseAddr,I_SIR_EOF)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2223: FILE: drivers/net/irda/via-ircc.h:478:
+//*******************I_ST_CT_0
+#define EnPhys(BaseAddr,val)   WriteRegBit(BaseAddr,I_ST_CT_0,7,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2223: FILE: drivers/net/irda/via-ircc.h:478:
+#define EnPhys(BaseAddr,val)   WriteRegBit(BaseAddr,I_ST_CT_0,7,val)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2223: FILE: drivers/net/irda/via-ircc.h:478:
+#define EnPhys(BaseAddr,val)   WriteRegBit(BaseAddr,I_ST_CT_0,7,val)
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2223: FILE: drivers/net/irda/via-ircc.h:478:
+#define EnPhys(BaseAddr,val)   WriteRegBit(BaseAddr,I_ST_CT_0,7,val)
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2223: FILE: drivers/net/irda/via-ircc.h:478:
+#define EnPhys(BaseAddr,val)   WriteRegBit(BaseAddr,I_ST_CT_0,7,val)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2224: FILE: drivers/net/irda/via-ircc.h:479:
+#define IsModeError(BaseAddr) CheckRegBit(BaseAddr,I_ST_CT_0,6)	//RO
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2224: FILE: drivers/net/irda/via-ircc.h:479:
+#define IsModeError(BaseAddr) CheckRegBit(BaseAddr,I_ST_CT_0,6)	//RO
                                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <IsModeError>
#2224: FILE: drivers/net/irda/via-ircc.h:479:
+#define IsModeError(BaseAddr) CheckRegBit(BaseAddr,I_ST_CT_0,6)	//RO

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2225: FILE: drivers/net/irda/via-ircc.h:480:
+#define IsVFIROn(BaseAddr)     CheckRegBit(BaseAddr,0x14,0)	//RO for VT1211 only
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2225: FILE: drivers/net/irda/via-ircc.h:480:
+#define IsVFIROn(BaseAddr)     CheckRegBit(BaseAddr,0x14,0)	//RO for VT1211 only
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2226: FILE: drivers/net/irda/via-ircc.h:481:
+#define IsFIROn(BaseAddr)     CheckRegBit(BaseAddr,I_ST_CT_0,5)	//RO
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2226: FILE: drivers/net/irda/via-ircc.h:481:
+#define IsFIROn(BaseAddr)     CheckRegBit(BaseAddr,I_ST_CT_0,5)	//RO
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2227: FILE: drivers/net/irda/via-ircc.h:482:
+#define IsMIROn(BaseAddr)     CheckRegBit(BaseAddr,I_ST_CT_0,4)	//RO
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2227: FILE: drivers/net/irda/via-ircc.h:482:
+#define IsMIROn(BaseAddr)     CheckRegBit(BaseAddr,I_ST_CT_0,4)	//RO
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2228: FILE: drivers/net/irda/via-ircc.h:483:
+#define IsSIROn(BaseAddr)     CheckRegBit(BaseAddr,I_ST_CT_0,3)	//RO
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2228: FILE: drivers/net/irda/via-ircc.h:483:
+#define IsSIROn(BaseAddr)     CheckRegBit(BaseAddr,I_ST_CT_0,3)	//RO
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2229: FILE: drivers/net/irda/via-ircc.h:484:
+#define IsEnableTX(BaseAddr)  CheckRegBit(BaseAddr,I_ST_CT_0,2)	//RO
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2229: FILE: drivers/net/irda/via-ircc.h:484:
+#define IsEnableTX(BaseAddr)  CheckRegBit(BaseAddr,I_ST_CT_0,2)	//RO
                                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <IsEnableTX>
#2229: FILE: drivers/net/irda/via-ircc.h:484:
+#define IsEnableTX(BaseAddr)  CheckRegBit(BaseAddr,I_ST_CT_0,2)	//RO

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2230: FILE: drivers/net/irda/via-ircc.h:485:
+#define IsEnableRX(BaseAddr)  CheckRegBit(BaseAddr,I_ST_CT_0,1)	//RO
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2230: FILE: drivers/net/irda/via-ircc.h:485:
+#define IsEnableRX(BaseAddr)  CheckRegBit(BaseAddr,I_ST_CT_0,1)	//RO
                                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <IsEnableRX>
#2230: FILE: drivers/net/irda/via-ircc.h:485:
+#define IsEnableRX(BaseAddr)  CheckRegBit(BaseAddr,I_ST_CT_0,1)	//RO

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2231: FILE: drivers/net/irda/via-ircc.h:486:
+#define Is16CRC(BaseAddr)     CheckRegBit(BaseAddr,I_ST_CT_0,0)	//RO
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2231: FILE: drivers/net/irda/via-ircc.h:486:
+#define Is16CRC(BaseAddr)     CheckRegBit(BaseAddr,I_ST_CT_0,0)	//RO
                                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Is16CRC>
#2231: FILE: drivers/net/irda/via-ircc.h:486:
+#define Is16CRC(BaseAddr)     CheckRegBit(BaseAddr,I_ST_CT_0,0)	//RO

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2233: FILE: drivers/net/irda/via-ircc.h:488:
+//***************************I_CF_3
+#define DisableAdjacentPulseWidth(BaseAddr,val) WriteRegBit(BaseAddr,I_CF_3,5,val)	//1 disable

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2233: FILE: drivers/net/irda/via-ircc.h:488:
+#define DisableAdjacentPulseWidth(BaseAddr,val) WriteRegBit(BaseAddr,I_CF_3,5,val)	//1 disable
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2233: FILE: drivers/net/irda/via-ircc.h:488:
+#define DisableAdjacentPulseWidth(BaseAddr,val) WriteRegBit(BaseAddr,I_CF_3,5,val)	//1 disable
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2233: FILE: drivers/net/irda/via-ircc.h:488:
+#define DisableAdjacentPulseWidth(BaseAddr,val) WriteRegBit(BaseAddr,I_CF_3,5,val)	//1 disable
                                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2233: FILE: drivers/net/irda/via-ircc.h:488:
+#define DisableAdjacentPulseWidth(BaseAddr,val) WriteRegBit(BaseAddr,I_CF_3,5,val)	//1 disable
                                                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <DisableAdjacentPulseWidth>
#2233: FILE: drivers/net/irda/via-ircc.h:488:
+#define DisableAdjacentPulseWidth(BaseAddr,val) WriteRegBit(BaseAddr,I_CF_3,5,val)	//1 disable

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2234: FILE: drivers/net/irda/via-ircc.h:489:
+#define DisablePulseWidthAdjust(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_3,4,val)	//1 disable
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2234: FILE: drivers/net/irda/via-ircc.h:489:
+#define DisablePulseWidthAdjust(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_3,4,val)	//1 disable
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2234: FILE: drivers/net/irda/via-ircc.h:489:
+#define DisablePulseWidthAdjust(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_3,4,val)	//1 disable
                                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2234: FILE: drivers/net/irda/via-ircc.h:489:
+#define DisablePulseWidthAdjust(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_3,4,val)	//1 disable
                                                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <DisablePulseWidthAdjust>
#2234: FILE: drivers/net/irda/via-ircc.h:489:
+#define DisablePulseWidthAdjust(BaseAddr,val)   WriteRegBit(BaseAddr,I_CF_3,4,val)	//1 disable

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#2235: FILE: drivers/net/irda/via-ircc.h:490:
+#define UseOneRX(BaseAddr,val)                  WriteRegBit(BaseAddr,I_CF_3,1,val)	//0 use two RX

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2235: FILE: drivers/net/irda/via-ircc.h:490:
+#define UseOneRX(BaseAddr,val)                  WriteRegBit(BaseAddr,I_CF_3,1,val)	//0 use two RX
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2235: FILE: drivers/net/irda/via-ircc.h:490:
+#define UseOneRX(BaseAddr,val)                  WriteRegBit(BaseAddr,I_CF_3,1,val)	//0 use two RX
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2235: FILE: drivers/net/irda/via-ircc.h:490:
+#define UseOneRX(BaseAddr,val)                  WriteRegBit(BaseAddr,I_CF_3,1,val)	//0 use two RX
                                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2235: FILE: drivers/net/irda/via-ircc.h:490:
+#define UseOneRX(BaseAddr,val)                  WriteRegBit(BaseAddr,I_CF_3,1,val)	//0 use two RX
                                                                              ^

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#2236: FILE: drivers/net/irda/via-ircc.h:491:
+#define SlowIRRXLowActive(BaseAddr,val)         WriteRegBit(BaseAddr,I_CF_3,0,val)	//0 show RX high=1 in SIR

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2236: FILE: drivers/net/irda/via-ircc.h:491:
+#define SlowIRRXLowActive(BaseAddr,val)         WriteRegBit(BaseAddr,I_CF_3,0,val)	//0 show RX high=1 in SIR
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2236: FILE: drivers/net/irda/via-ircc.h:491:
+#define SlowIRRXLowActive(BaseAddr,val)         WriteRegBit(BaseAddr,I_CF_3,0,val)	//0 show RX high=1 in SIR
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2236: FILE: drivers/net/irda/via-ircc.h:491:
+#define SlowIRRXLowActive(BaseAddr,val)         WriteRegBit(BaseAddr,I_CF_3,0,val)	//0 show RX high=1 in SIR
                                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2236: FILE: drivers/net/irda/via-ircc.h:491:
+#define SlowIRRXLowActive(BaseAddr,val)         WriteRegBit(BaseAddr,I_CF_3,0,val)	//0 show RX high=1 in SIR
                                                                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2238: FILE: drivers/net/irda/via-ircc.h:493:
+//***************************H_CT
+#define EnAllInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,7,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2238: FILE: drivers/net/irda/via-ircc.h:493:
+#define EnAllInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,7,val)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2238: FILE: drivers/net/irda/via-ircc.h:493:
+#define EnAllInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,7,val)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2238: FILE: drivers/net/irda/via-ircc.h:493:
+#define EnAllInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,7,val)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2238: FILE: drivers/net/irda/via-ircc.h:493:
+#define EnAllInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,7,val)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2239: FILE: drivers/net/irda/via-ircc.h:494:
+#define TXStart(BaseAddr,val)    WriteRegBit(BaseAddr,H_CT,6,val)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2239: FILE: drivers/net/irda/via-ircc.h:494:
+#define TXStart(BaseAddr,val)    WriteRegBit(BaseAddr,H_CT,6,val)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2239: FILE: drivers/net/irda/via-ircc.h:494:
+#define TXStart(BaseAddr,val)    WriteRegBit(BaseAddr,H_CT,6,val)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2239: FILE: drivers/net/irda/via-ircc.h:494:
+#define TXStart(BaseAddr,val)    WriteRegBit(BaseAddr,H_CT,6,val)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2240: FILE: drivers/net/irda/via-ircc.h:495:
+#define RXStart(BaseAddr,val)    WriteRegBit(BaseAddr,H_CT,5,val)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2240: FILE: drivers/net/irda/via-ircc.h:495:
+#define RXStart(BaseAddr,val)    WriteRegBit(BaseAddr,H_CT,5,val)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2240: FILE: drivers/net/irda/via-ircc.h:495:
+#define RXStart(BaseAddr,val)    WriteRegBit(BaseAddr,H_CT,5,val)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2240: FILE: drivers/net/irda/via-ircc.h:495:
+#define RXStart(BaseAddr,val)    WriteRegBit(BaseAddr,H_CT,5,val)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2241: FILE: drivers/net/irda/via-ircc.h:496:
+#define ClearRXInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,4,val)	// 1 clear
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2241: FILE: drivers/net/irda/via-ircc.h:496:
+#define ClearRXInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,4,val)	// 1 clear
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2241: FILE: drivers/net/irda/via-ircc.h:496:
+#define ClearRXInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,4,val)	// 1 clear
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2241: FILE: drivers/net/irda/via-ircc.h:496:
+#define ClearRXInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,4,val)	// 1 clear
                                                               ^

CHECK:CAMELCASE: Avoid CamelCase: <ClearRXInt>
#2241: FILE: drivers/net/irda/via-ircc.h:496:
+#define ClearRXInt(BaseAddr,val)   WriteRegBit(BaseAddr,H_CT,4,val)	// 1 clear

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2243: FILE: drivers/net/irda/via-ircc.h:498:
+//*****************H_ST
+#define IsRXInt(BaseAddr)           CheckRegBit(BaseAddr,H_ST,4)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2243: FILE: drivers/net/irda/via-ircc.h:498:
+#define IsRXInt(BaseAddr)           CheckRegBit(BaseAddr,H_ST,4)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2243: FILE: drivers/net/irda/via-ircc.h:498:
+#define IsRXInt(BaseAddr)           CheckRegBit(BaseAddr,H_ST,4)
                                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <IsRXInt>
#2243: FILE: drivers/net/irda/via-ircc.h:498:
+#define IsRXInt(BaseAddr)           CheckRegBit(BaseAddr,H_ST,4)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2244: FILE: drivers/net/irda/via-ircc.h:499:
+#define GetIntIndentify(BaseAddr)   ((ReadReg(BaseAddr,H_ST)&0xf1) >>1)
                                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2244: FILE: drivers/net/irda/via-ircc.h:499:
+#define GetIntIndentify(BaseAddr)   ((ReadReg(BaseAddr,H_ST)&0xf1) >>1)
                                                             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:WxV)
#2244: FILE: drivers/net/irda/via-ircc.h:499:
+#define GetIntIndentify(BaseAddr)   ((ReadReg(BaseAddr,H_ST)&0xf1) >>1)
                                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <GetIntIndentify>
#2244: FILE: drivers/net/irda/via-ircc.h:499:
+#define GetIntIndentify(BaseAddr)   ((ReadReg(BaseAddr,H_ST)&0xf1) >>1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2245: FILE: drivers/net/irda/via-ircc.h:500:
+#define IsHostBusy(BaseAddr)        CheckRegBit(BaseAddr,H_ST,0)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2245: FILE: drivers/net/irda/via-ircc.h:500:
+#define IsHostBusy(BaseAddr)        CheckRegBit(BaseAddr,H_ST,0)
                                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <IsHostBusy>
#2245: FILE: drivers/net/irda/via-ircc.h:500:
+#define IsHostBusy(BaseAddr)        CheckRegBit(BaseAddr,H_ST,0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2246: FILE: drivers/net/irda/via-ircc.h:501:
+#define GetHostStatus(BaseAddr)     ReadReg(BaseAddr,H_ST)	//RO
                                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2248: FILE: drivers/net/irda/via-ircc.h:503:
+//**************************M_CT
+#define EnTXDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,7,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2248: FILE: drivers/net/irda/via-ircc.h:503:
+#define EnTXDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,7,val)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2248: FILE: drivers/net/irda/via-ircc.h:503:
+#define EnTXDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,7,val)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2248: FILE: drivers/net/irda/via-ircc.h:503:
+#define EnTXDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,7,val)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2248: FILE: drivers/net/irda/via-ircc.h:503:
+#define EnTXDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,7,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2249: FILE: drivers/net/irda/via-ircc.h:504:
+#define EnRXDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,6,val)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2249: FILE: drivers/net/irda/via-ircc.h:504:
+#define EnRXDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,6,val)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2249: FILE: drivers/net/irda/via-ircc.h:504:
+#define EnRXDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,6,val)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2249: FILE: drivers/net/irda/via-ircc.h:504:
+#define EnRXDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,6,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2250: FILE: drivers/net/irda/via-ircc.h:505:
+#define SwapDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,5,val)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2250: FILE: drivers/net/irda/via-ircc.h:505:
+#define SwapDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,5,val)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2250: FILE: drivers/net/irda/via-ircc.h:505:
+#define SwapDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,5,val)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2250: FILE: drivers/net/irda/via-ircc.h:505:
+#define SwapDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,5,val)
                                                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <SwapDMA>
#2250: FILE: drivers/net/irda/via-ircc.h:505:
+#define SwapDMA(BaseAddr,val)         WriteRegBit(BaseAddr,M_CT,5,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2251: FILE: drivers/net/irda/via-ircc.h:506:
+#define EnInternalLoop(BaseAddr,val)  WriteRegBit(BaseAddr,M_CT,4,val)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2251: FILE: drivers/net/irda/via-ircc.h:506:
+#define EnInternalLoop(BaseAddr,val)  WriteRegBit(BaseAddr,M_CT,4,val)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2251: FILE: drivers/net/irda/via-ircc.h:506:
+#define EnInternalLoop(BaseAddr,val)  WriteRegBit(BaseAddr,M_CT,4,val)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2251: FILE: drivers/net/irda/via-ircc.h:506:
+#define EnInternalLoop(BaseAddr,val)  WriteRegBit(BaseAddr,M_CT,4,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2252: FILE: drivers/net/irda/via-ircc.h:507:
+#define EnExternalLoop(BaseAddr,val)  WriteRegBit(BaseAddr,M_CT,3,val)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2252: FILE: drivers/net/irda/via-ircc.h:507:
+#define EnExternalLoop(BaseAddr,val)  WriteRegBit(BaseAddr,M_CT,3,val)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2252: FILE: drivers/net/irda/via-ircc.h:507:
+#define EnExternalLoop(BaseAddr,val)  WriteRegBit(BaseAddr,M_CT,3,val)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2252: FILE: drivers/net/irda/via-ircc.h:507:
+#define EnExternalLoop(BaseAddr,val)  WriteRegBit(BaseAddr,M_CT,3,val)
                                                                  ^

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#2254: FILE: drivers/net/irda/via-ircc.h:509:
+#define EnTXFIFOHalfLevelInt(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_1,4,val)	//half empty int (1 half)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2254: FILE: drivers/net/irda/via-ircc.h:509:
+//**************************TX_CT_1
+#define EnTXFIFOHalfLevelInt(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_1,4,val)	//half empty int (1 half)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2254: FILE: drivers/net/irda/via-ircc.h:509:
+#define EnTXFIFOHalfLevelInt(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_1,4,val)	//half empty int (1 half)
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2254: FILE: drivers/net/irda/via-ircc.h:509:
+#define EnTXFIFOHalfLevelInt(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_1,4,val)	//half empty int (1 half)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2254: FILE: drivers/net/irda/via-ircc.h:509:
+#define EnTXFIFOHalfLevelInt(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_1,4,val)	//half empty int (1 half)
                                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2254: FILE: drivers/net/irda/via-ircc.h:509:
+#define EnTXFIFOHalfLevelInt(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_1,4,val)	//half empty int (1 half)
                                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2255: FILE: drivers/net/irda/via-ircc.h:510:
+#define EnTXFIFOUnderrunEOMInt(BaseAddr,val) WriteRegBit(BaseAddr,TX_CT_1,5,val)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2255: FILE: drivers/net/irda/via-ircc.h:510:
+#define EnTXFIFOUnderrunEOMInt(BaseAddr,val) WriteRegBit(BaseAddr,TX_CT_1,5,val)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2255: FILE: drivers/net/irda/via-ircc.h:510:
+#define EnTXFIFOUnderrunEOMInt(BaseAddr,val) WriteRegBit(BaseAddr,TX_CT_1,5,val)
                                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2255: FILE: drivers/net/irda/via-ircc.h:510:
+#define EnTXFIFOUnderrunEOMInt(BaseAddr,val) WriteRegBit(BaseAddr,TX_CT_1,5,val)
                                                                            ^

WARNING:LONG_LINE_COMMENT: line length of 136 exceeds 100 columns
#2256: FILE: drivers/net/irda/via-ircc.h:511:
+#define EnTXFIFOReadyInt(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_1,6,val)	//int when reach it threshold (setting by bit 4)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2256: FILE: drivers/net/irda/via-ircc.h:511:
+#define EnTXFIFOReadyInt(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_1,6,val)	//int when reach it threshold (setting by bit 4)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2256: FILE: drivers/net/irda/via-ircc.h:511:
+#define EnTXFIFOReadyInt(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_1,6,val)	//int when reach it threshold (setting by bit 4)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2256: FILE: drivers/net/irda/via-ircc.h:511:
+#define EnTXFIFOReadyInt(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_1,6,val)	//int when reach it threshold (setting by bit 4)
                                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2256: FILE: drivers/net/irda/via-ircc.h:511:
+#define EnTXFIFOReadyInt(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_1,6,val)	//int when reach it threshold (setting by bit 4)
                                                                            ^

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#2258: FILE: drivers/net/irda/via-ircc.h:513:
+#define ForceUnderrun(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_2,7,val)	// force an underrun int

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2258: FILE: drivers/net/irda/via-ircc.h:513:
+//**************************TX_CT_2
+#define ForceUnderrun(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_2,7,val)	// force an underrun int

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2258: FILE: drivers/net/irda/via-ircc.h:513:
+#define ForceUnderrun(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_2,7,val)	// force an underrun int
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2258: FILE: drivers/net/irda/via-ircc.h:513:
+#define ForceUnderrun(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_2,7,val)	// force an underrun int
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2258: FILE: drivers/net/irda/via-ircc.h:513:
+#define ForceUnderrun(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_2,7,val)	// force an underrun int
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2258: FILE: drivers/net/irda/via-ircc.h:513:
+#define ForceUnderrun(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_2,7,val)	// force an underrun int
                                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <ForceUnderrun>
#2258: FILE: drivers/net/irda/via-ircc.h:513:
+#define ForceUnderrun(BaseAddr,val)   WriteRegBit(BaseAddr,TX_CT_2,7,val)	// force an underrun int

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#2259: FILE: drivers/net/irda/via-ircc.h:514:
+#define EnTXCRC(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,6,val)	//1 for FIR,MIR...0 (not SIR)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2259: FILE: drivers/net/irda/via-ircc.h:514:
+#define EnTXCRC(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,6,val)	//1 for FIR,MIR...0 (not SIR)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2259: FILE: drivers/net/irda/via-ircc.h:514:
+#define EnTXCRC(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,6,val)	//1 for FIR,MIR...0 (not SIR)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2259: FILE: drivers/net/irda/via-ircc.h:514:
+#define EnTXCRC(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,6,val)	//1 for FIR,MIR...0 (not SIR)
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2259: FILE: drivers/net/irda/via-ircc.h:514:
+#define EnTXCRC(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,6,val)	//1 for FIR,MIR...0 (not SIR)
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2260: FILE: drivers/net/irda/via-ircc.h:515:
+#define ForceBADCRC(BaseAddr,val)     WriteRegBit(BaseAddr,TX_CT_2,5,val)	//force an bad CRC
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2260: FILE: drivers/net/irda/via-ircc.h:515:
+#define ForceBADCRC(BaseAddr,val)     WriteRegBit(BaseAddr,TX_CT_2,5,val)	//force an bad CRC
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2260: FILE: drivers/net/irda/via-ircc.h:515:
+#define ForceBADCRC(BaseAddr,val)     WriteRegBit(BaseAddr,TX_CT_2,5,val)	//force an bad CRC
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2260: FILE: drivers/net/irda/via-ircc.h:515:
+#define ForceBADCRC(BaseAddr,val)     WriteRegBit(BaseAddr,TX_CT_2,5,val)	//force an bad CRC
                                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <ForceBADCRC>
#2260: FILE: drivers/net/irda/via-ircc.h:515:
+#define ForceBADCRC(BaseAddr,val)     WriteRegBit(BaseAddr,TX_CT_2,5,val)	//force an bad CRC

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#2261: FILE: drivers/net/irda/via-ircc.h:516:
+#define SendSIP(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,4,val)	//send indication pulse for prevent SIR disturb

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2261: FILE: drivers/net/irda/via-ircc.h:516:
+#define SendSIP(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,4,val)	//send indication pulse for prevent SIR disturb
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2261: FILE: drivers/net/irda/via-ircc.h:516:
+#define SendSIP(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,4,val)	//send indication pulse for prevent SIR disturb
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2261: FILE: drivers/net/irda/via-ircc.h:516:
+#define SendSIP(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,4,val)	//send indication pulse for prevent SIR disturb
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2261: FILE: drivers/net/irda/via-ircc.h:516:
+#define SendSIP(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,4,val)	//send indication pulse for prevent SIR disturb
                                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <SendSIP>
#2261: FILE: drivers/net/irda/via-ircc.h:516:
+#define SendSIP(BaseAddr,val)         WriteRegBit(BaseAddr,TX_CT_2,4,val)	//send indication pulse for prevent SIR disturb

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2262: FILE: drivers/net/irda/via-ircc.h:517:
+#define ClearEnTX(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_2,3,val)	// opposite to EnTX
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2262: FILE: drivers/net/irda/via-ircc.h:517:
+#define ClearEnTX(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_2,3,val)	// opposite to EnTX
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2262: FILE: drivers/net/irda/via-ircc.h:517:
+#define ClearEnTX(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_2,3,val)	// opposite to EnTX
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2262: FILE: drivers/net/irda/via-ircc.h:517:
+#define ClearEnTX(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_2,3,val)	// opposite to EnTX
                                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <ClearEnTX>
#2262: FILE: drivers/net/irda/via-ircc.h:517:
+#define ClearEnTX(BaseAddr,val)       WriteRegBit(BaseAddr,TX_CT_2,3,val)	// opposite to EnTX

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2264: FILE: drivers/net/irda/via-ircc.h:519:
+#define GetTXStatus(BaseAddr) ^IReadReg(BaseAddr,TX_ST)^I//RO$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2264: FILE: drivers/net/irda/via-ircc.h:519:
+//*****************TX_ST
+#define GetTXStatus(BaseAddr) 	ReadReg(BaseAddr,TX_ST)	//RO

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2264: FILE: drivers/net/irda/via-ircc.h:519:
+#define GetTXStatus(BaseAddr) 	ReadReg(BaseAddr,TX_ST)	//RO
                               	                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2266: FILE: drivers/net/irda/via-ircc.h:521:
+//**************************RX_CT
+#define EnRXSpecInt(BaseAddr,val)           WriteRegBit(BaseAddr,RX_CT,0,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2266: FILE: drivers/net/irda/via-ircc.h:521:
+#define EnRXSpecInt(BaseAddr,val)           WriteRegBit(BaseAddr,RX_CT,0,val)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2266: FILE: drivers/net/irda/via-ircc.h:521:
+#define EnRXSpecInt(BaseAddr,val)           WriteRegBit(BaseAddr,RX_CT,0,val)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2266: FILE: drivers/net/irda/via-ircc.h:521:
+#define EnRXSpecInt(BaseAddr,val)           WriteRegBit(BaseAddr,RX_CT,0,val)
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2266: FILE: drivers/net/irda/via-ircc.h:521:
+#define EnRXSpecInt(BaseAddr,val)           WriteRegBit(BaseAddr,RX_CT,0,val)
                                                                         ^

WARNING:LONG_LINE_COMMENT: line length of 135 exceeds 100 columns
#2267: FILE: drivers/net/irda/via-ircc.h:522:
+#define EnRXFIFOReadyInt(BaseAddr,val)      WriteRegBit(BaseAddr,RX_CT,1,val)	//enable int when reach it threshold (setting by bit 7)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2267: FILE: drivers/net/irda/via-ircc.h:522:
+#define EnRXFIFOReadyInt(BaseAddr,val)      WriteRegBit(BaseAddr,RX_CT,1,val)	//enable int when reach it threshold (setting by bit 7)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2267: FILE: drivers/net/irda/via-ircc.h:522:
+#define EnRXFIFOReadyInt(BaseAddr,val)      WriteRegBit(BaseAddr,RX_CT,1,val)	//enable int when reach it threshold (setting by bit 7)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2267: FILE: drivers/net/irda/via-ircc.h:522:
+#define EnRXFIFOReadyInt(BaseAddr,val)      WriteRegBit(BaseAddr,RX_CT,1,val)	//enable int when reach it threshold (setting by bit 7)
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2267: FILE: drivers/net/irda/via-ircc.h:522:
+#define EnRXFIFOReadyInt(BaseAddr,val)      WriteRegBit(BaseAddr,RX_CT,1,val)	//enable int when reach it threshold (setting by bit 7)
                                                                         ^

WARNING:LONG_LINE_COMMENT: line length of 134 exceeds 100 columns
#2268: FILE: drivers/net/irda/via-ircc.h:523:
+#define EnRXFIFOHalfLevelInt(BaseAddr,val)  WriteRegBit(BaseAddr,RX_CT,7,val)	//enable int when (1) half full...or (0) just not full

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2268: FILE: drivers/net/irda/via-ircc.h:523:
+#define EnRXFIFOHalfLevelInt(BaseAddr,val)  WriteRegBit(BaseAddr,RX_CT,7,val)	//enable int when (1) half full...or (0) just not full
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2268: FILE: drivers/net/irda/via-ircc.h:523:
+#define EnRXFIFOHalfLevelInt(BaseAddr,val)  WriteRegBit(BaseAddr,RX_CT,7,val)	//enable int when (1) half full...or (0) just not full
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2268: FILE: drivers/net/irda/via-ircc.h:523:
+#define EnRXFIFOHalfLevelInt(BaseAddr,val)  WriteRegBit(BaseAddr,RX_CT,7,val)	//enable int when (1) half full...or (0) just not full
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2268: FILE: drivers/net/irda/via-ircc.h:523:
+#define EnRXFIFOHalfLevelInt(BaseAddr,val)  WriteRegBit(BaseAddr,RX_CT,7,val)	//enable int when (1) half full...or (0) just not full
                                                                         ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2270: FILE: drivers/net/irda/via-ircc.h:525:
+#define GetRXStatus(BaseAddr) ^IReadReg(BaseAddr,RX_ST)^I//RO$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2270: FILE: drivers/net/irda/via-ircc.h:525:
+//*****************RX_ST
+#define GetRXStatus(BaseAddr) 	ReadReg(BaseAddr,RX_ST)	//RO

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2270: FILE: drivers/net/irda/via-ircc.h:525:
+#define GetRXStatus(BaseAddr) 	ReadReg(BaseAddr,RX_ST)	//RO
                               	                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2272: FILE: drivers/net/irda/via-ircc.h:527:
+//***********************P_ADDR
+#define SetPacketAddr(BaseAddr,addr)        WriteReg(BaseAddr,P_ADDR,addr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2272: FILE: drivers/net/irda/via-ircc.h:527:
+#define SetPacketAddr(BaseAddr,addr)        WriteReg(BaseAddr,P_ADDR,addr)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2272: FILE: drivers/net/irda/via-ircc.h:527:
+#define SetPacketAddr(BaseAddr,addr)        WriteReg(BaseAddr,P_ADDR,addr)
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2272: FILE: drivers/net/irda/via-ircc.h:527:
+#define SetPacketAddr(BaseAddr,addr)        WriteReg(BaseAddr,P_ADDR,addr)
                                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <SetPacketAddr>
#2272: FILE: drivers/net/irda/via-ircc.h:527:
+#define SetPacketAddr(BaseAddr,addr)        WriteReg(BaseAddr,P_ADDR,addr)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2274: FILE: drivers/net/irda/via-ircc.h:529:
+//***********************I_CF_4
+#define EnGPIOtoRX2(BaseAddr,val)	WriteRegBit(BaseAddr,I_CF_4,7,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2274: FILE: drivers/net/irda/via-ircc.h:529:
+#define EnGPIOtoRX2(BaseAddr,val)	WriteRegBit(BaseAddr,I_CF_4,7,val)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2274: FILE: drivers/net/irda/via-ircc.h:529:
+#define EnGPIOtoRX2(BaseAddr,val)	WriteRegBit(BaseAddr,I_CF_4,7,val)
                                  	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2274: FILE: drivers/net/irda/via-ircc.h:529:
+#define EnGPIOtoRX2(BaseAddr,val)	WriteRegBit(BaseAddr,I_CF_4,7,val)
                                  	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2274: FILE: drivers/net/irda/via-ircc.h:529:
+#define EnGPIOtoRX2(BaseAddr,val)	WriteRegBit(BaseAddr,I_CF_4,7,val)
                                  	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2275: FILE: drivers/net/irda/via-ircc.h:530:
+#define EnTimerInt(BaseAddr,val)		WriteRegBit(BaseAddr,I_CF_4,1,val)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2275: FILE: drivers/net/irda/via-ircc.h:530:
+#define EnTimerInt(BaseAddr,val)		WriteRegBit(BaseAddr,I_CF_4,1,val)
                                 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2275: FILE: drivers/net/irda/via-ircc.h:530:
+#define EnTimerInt(BaseAddr,val)		WriteRegBit(BaseAddr,I_CF_4,1,val)
                                 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2275: FILE: drivers/net/irda/via-ircc.h:530:
+#define EnTimerInt(BaseAddr,val)		WriteRegBit(BaseAddr,I_CF_4,1,val)
                                 		                             ^

CHECK:CAMELCASE: Avoid CamelCase: <EnTimerInt>
#2275: FILE: drivers/net/irda/via-ircc.h:530:
+#define EnTimerInt(BaseAddr,val)		WriteRegBit(BaseAddr,I_CF_4,1,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2276: FILE: drivers/net/irda/via-ircc.h:531:
+#define ClearTimerInt(BaseAddr,val)	WriteRegBit(BaseAddr,I_CF_4,0,val)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2276: FILE: drivers/net/irda/via-ircc.h:531:
+#define ClearTimerInt(BaseAddr,val)	WriteRegBit(BaseAddr,I_CF_4,0,val)
                                    	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2276: FILE: drivers/net/irda/via-ircc.h:531:
+#define ClearTimerInt(BaseAddr,val)	WriteRegBit(BaseAddr,I_CF_4,0,val)
                                    	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2276: FILE: drivers/net/irda/via-ircc.h:531:
+#define ClearTimerInt(BaseAddr,val)	WriteRegBit(BaseAddr,I_CF_4,0,val)
                                    	                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2278: FILE: drivers/net/irda/via-ircc.h:533:
+//***********************I_T_C_L
+#define WriteGIO(BaseAddr,val)	    WriteRegBit(BaseAddr,I_T_C_L,7,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2278: FILE: drivers/net/irda/via-ircc.h:533:
+#define WriteGIO(BaseAddr,val)	    WriteRegBit(BaseAddr,I_T_C_L,7,val)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2278: FILE: drivers/net/irda/via-ircc.h:533:
+#define WriteGIO(BaseAddr,val)	    WriteRegBit(BaseAddr,I_T_C_L,7,val)
                               	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2278: FILE: drivers/net/irda/via-ircc.h:533:
+#define WriteGIO(BaseAddr,val)	    WriteRegBit(BaseAddr,I_T_C_L,7,val)
                               	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2278: FILE: drivers/net/irda/via-ircc.h:533:
+#define WriteGIO(BaseAddr,val)	    WriteRegBit(BaseAddr,I_T_C_L,7,val)
                               	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2279: FILE: drivers/net/irda/via-ircc.h:534:
+#define ReadGIO(BaseAddr)		    CheckRegBit(BaseAddr,I_T_C_L,7)
                          		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2279: FILE: drivers/net/irda/via-ircc.h:534:
+#define ReadGIO(BaseAddr)		    CheckRegBit(BaseAddr,I_T_C_L,7)
                          		                                ^

CHECK:CAMELCASE: Avoid CamelCase: <ReadGIO>
#2279: FILE: drivers/net/irda/via-ircc.h:534:
+#define ReadGIO(BaseAddr)		    CheckRegBit(BaseAddr,I_T_C_L,7)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2280: FILE: drivers/net/irda/via-ircc.h:535:
+#define ReadRX(BaseAddr)		    CheckRegBit(BaseAddr,I_T_C_L,3)	//RO
                         		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2280: FILE: drivers/net/irda/via-ircc.h:535:
+#define ReadRX(BaseAddr)		    CheckRegBit(BaseAddr,I_T_C_L,3)	//RO
                         		                                ^

CHECK:CAMELCASE: Avoid CamelCase: <ReadRX>
#2280: FILE: drivers/net/irda/via-ircc.h:535:
+#define ReadRX(BaseAddr)		    CheckRegBit(BaseAddr,I_T_C_L,3)	//RO

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2281: FILE: drivers/net/irda/via-ircc.h:536:
+#define WriteTX(BaseAddr,val)		WriteRegBit(BaseAddr,I_T_C_L,0,val)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2281: FILE: drivers/net/irda/via-ircc.h:536:
+#define WriteTX(BaseAddr,val)		WriteRegBit(BaseAddr,I_T_C_L,0,val)
                              		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2281: FILE: drivers/net/irda/via-ircc.h:536:
+#define WriteTX(BaseAddr,val)		WriteRegBit(BaseAddr,I_T_C_L,0,val)
                              		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2281: FILE: drivers/net/irda/via-ircc.h:536:
+#define WriteTX(BaseAddr,val)		WriteRegBit(BaseAddr,I_T_C_L,0,val)
                              		                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2283: FILE: drivers/net/irda/via-ircc.h:538:
+//***********************I_T_C_H
+#define EnRX2(BaseAddr,val)		    WriteRegBit(BaseAddr,I_T_C_H,7,val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2283: FILE: drivers/net/irda/via-ircc.h:538:
+#define EnRX2(BaseAddr,val)		    WriteRegBit(BaseAddr,I_T_C_H,7,val)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2283: FILE: drivers/net/irda/via-ircc.h:538:
+#define EnRX2(BaseAddr,val)		    WriteRegBit(BaseAddr,I_T_C_H,7,val)
                            		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2283: FILE: drivers/net/irda/via-ircc.h:538:
+#define EnRX2(BaseAddr,val)		    WriteRegBit(BaseAddr,I_T_C_H,7,val)
                            		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2283: FILE: drivers/net/irda/via-ircc.h:538:
+#define EnRX2(BaseAddr,val)		    WriteRegBit(BaseAddr,I_T_C_H,7,val)
                            		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2284: FILE: drivers/net/irda/via-ircc.h:539:
+#define ReadRX2(BaseAddr)           CheckRegBit(BaseAddr,I_T_C_H,7)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2284: FILE: drivers/net/irda/via-ircc.h:539:
+#define ReadRX2(BaseAddr)           CheckRegBit(BaseAddr,I_T_C_H,7)
                                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <ReadRX2>
#2284: FILE: drivers/net/irda/via-ircc.h:539:
+#define ReadRX2(BaseAddr)           CheckRegBit(BaseAddr,I_T_C_H,7)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2286: FILE: drivers/net/irda/via-ircc.h:541:
+//**********************Version
+#define GetFIRVersion(BaseAddr)		ReadReg(BaseAddr,VERSION)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2286: FILE: drivers/net/irda/via-ircc.h:541:
+#define GetFIRVersion(BaseAddr)		ReadReg(BaseAddr,VERSION)
                                		                ^

CHECK:CAMELCASE: Avoid CamelCase: <GetFIRVersion>
#2286: FILE: drivers/net/irda/via-ircc.h:541:
+#define GetFIRVersion(BaseAddr)		ReadReg(BaseAddr,VERSION)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2288: FILE: drivers/net/irda/via-ircc.h:543:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2296: FILE: drivers/net/irda/via-ircc.h:551:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <SetAddrMode>
#2317: FILE: drivers/net/irda/via-ircc.h:572:
+void SetAddrMode(__u16 iobase, __u8 mode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2320: FILE: drivers/net/irda/via-ircc.h:575:
+	__u8 bTmp = 0;
+	if (mode < 3) {

CHECK:CAMELCASE: Avoid CamelCase: <wTmp>
#2329: FILE: drivers/net/irda/via-ircc.h:584:
+	__u16 wTmp = 0, wTmp1 = 0, wTmp_new = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wTmp1>
#2329: FILE: drivers/net/irda/via-ircc.h:584:
+	__u16 wTmp = 0, wTmp1 = 0, wTmp_new = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wTmp_new>
#2329: FILE: drivers/net/irda/via-ircc.h:584:
+	__u16 wTmp = 0, wTmp1 = 0, wTmp_new = 0;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2335: FILE: drivers/net/irda/via-ircc.h:590:
+	udelay(10);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2345: FILE: drivers/net/irda/via-ircc.h:600:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2347: FILE: drivers/net/irda/via-ircc.h:602:
+__u16 RxCurCount(__u16 iobase, struct via_ircc_cb * self)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2363: FILE: drivers/net/irda/via-ircc.h:618:
+__u16 GetRecvByte(__u16 iobase, struct via_ircc_cb * self)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2373: FILE: drivers/net/irda/via-ircc.h:628:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2381: FILE: drivers/net/irda/via-ircc.h:636:
+/* RX_P is more actually the RX_C
+ low=ReadReg(iobase,RX_C_L);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2393: FILE: drivers/net/irda/via-ircc.h:648:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <GetRecvLen>
#2394: FILE: drivers/net/irda/via-ircc.h:649:
+__u16 GetRecvLen(__u16 iobase)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2402: FILE: drivers/net/irda/via-ircc.h:657:
+	if (!(high & 0xe000)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2405: FILE: drivers/net/irda/via-ircc.h:660:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <Sdelay>
#2409: FILE: drivers/net/irda/via-ircc.h:664:
+void Sdelay(__u16 scale)

CHECK:CAMELCASE: Avoid CamelCase: <Tdelay>
#2422: FILE: drivers/net/irda/via-ircc.h:677:
+void Tdelay(__u16 scale)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2435: FILE: drivers/net/irda/via-ircc.h:690:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <ActClk>
#2436: FILE: drivers/net/irda/via-ircc.h:691:
+void ActClk(__u16 iobase, __u8 value)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2439: FILE: drivers/net/irda/via-ircc.h:694:
+	__u8 bTmp;
+	bTmp = ReadReg(iobase, 0x34);

CHECK:CAMELCASE: Avoid CamelCase: <ActTx>
#2446: FILE: drivers/net/irda/via-ircc.h:701:
+void ActTx(__u16 iobase, __u8 value)

CHECK:CAMELCASE: Avoid CamelCase: <ClkTx>
#2457: FILE: drivers/net/irda/via-ircc.h:712:
+void ClkTx(__u16 iobase, __u8 Clk, __u8 Tx)

CHECK:CAMELCASE: Avoid CamelCase: <Clk>
#2457: FILE: drivers/net/irda/via-ircc.h:712:
+void ClkTx(__u16 iobase, __u8 Clk, __u8 Tx)

CHECK:CAMELCASE: Avoid CamelCase: <Tx>
#2457: FILE: drivers/net/irda/via-ircc.h:712:
+void ClkTx(__u16 iobase, __u8 Clk, __u8 Tx)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2462: FILE: drivers/net/irda/via-ircc.h:717:
+	if (Clk == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2464: FILE: drivers/net/irda/via-ircc.h:719:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2470: FILE: drivers/net/irda/via-ircc.h:725:
+	if (Tx == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2472: FILE: drivers/net/irda/via-ircc.h:727:
+	else {

CHECK:CAMELCASE: Avoid CamelCase: <Wr_Byte>
#2479: FILE: drivers/net/irda/via-ircc.h:734:
+void Wr_Byte(__u16 iobase, __u8 data)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2493: FILE: drivers/net/irda/via-ircc.h:748:
+		if ((bData >> i) & 0x01) {
[...]
+		} else {
[...]

CHECK:CAMELCASE: Avoid CamelCase: <Rd_Indx>
#2505: FILE: drivers/net/irda/via-ircc.h:760:
+__u8 Rd_Indx(__u16 iobase, __u8 addr, __u8 index)

CHECK:CAMELCASE: Avoid CamelCase: <Wr_Indx>
#2569: FILE: drivers/net/irda/via-ircc.h:824:
+void Wr_Indx(__u16 iobase, __u8 addr, __u8 index, __u8 data)

CHECK:CAMELCASE: Avoid CamelCase: <ResetDongle>
#2590: FILE: drivers/net/irda/via-ircc.h:845:
+void ResetDongle(__u16 iobase)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2593: FILE: drivers/net/irda/via-ircc.h:848:
+	int i;
+	ClkTx(iobase, 0, 0);

CHECK:CAMELCASE: Avoid CamelCase: <SetSITmode>
#2604: FILE: drivers/net/irda/via-ircc.h:859:
+void SetSITmode(__u16 iobase)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2606: FILE: drivers/net/irda/via-ircc.h:861:
+{
+

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2624: FILE: drivers/net/irda/via-ircc.h:879:
+	udelay(10);

CHECK:CAMELCASE: Avoid CamelCase: <CommonShutDown>
#2639: FILE: drivers/net/irda/via-ircc.h:894:
+void CommonShutDown(__u16 iobase, __u8 TxDMA)

CHECK:CAMELCASE: Avoid CamelCase: <TxDMA>
#2639: FILE: drivers/net/irda/via-ircc.h:894:
+void CommonShutDown(__u16 iobase, __u8 TxDMA)

CHECK:SPACING: No space is necessary after a cast
#2675: FILE: drivers/net/irda/via-ircc.h:930:
+		case (__u32) (2400L):

CHECK:SPACING: No space is necessary after a cast
#2678: FILE: drivers/net/irda/via-ircc.h:933:
+		case (__u32) (9600L):

CHECK:SPACING: No space is necessary after a cast
#2681: FILE: drivers/net/irda/via-ircc.h:936:
+		case (__u32) (19200L):

CHECK:SPACING: No space is necessary after a cast
#2684: FILE: drivers/net/irda/via-ircc.h:939:
+		case (__u32) (38400L):

CHECK:SPACING: No space is necessary after a cast
#2687: FILE: drivers/net/irda/via-ircc.h:942:
+		case (__u32) (57600L):

CHECK:SPACING: No space is necessary after a cast
#2690: FILE: drivers/net/irda/via-ircc.h:945:
+		case (__u32) (115200L):

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2728: FILE: drivers/net/irda/via-ircc.h:983:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <ClrHBusy>
#2769: FILE: drivers/net/irda/via-ircc.h:1024:
+void ClrHBusy(__u16 iobase)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2771: FILE: drivers/net/irda/via-ircc.h:1026:
+{
+

CHECK:CAMELCASE: Avoid CamelCase: <SetFifo64>
#2781: FILE: drivers/net/irda/via-ircc.h:1036:
+void SetFifo64(__u16 iobase)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2783: FILE: drivers/net/irda/via-ircc.h:1038:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2788: FILE: drivers/net/irda/via-ircc.h:1043:
+
+

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#2817: FILE: MAINTAINERS:2091:
+P:	Jens David
+M:	dg1kjd@afthd.tu-darmstadt.de

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311483.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 405 errors, 186 warnings, 346 checks, 2735 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311483.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
