WARNING:TYPO_SPELLING: 'Seperate' may be misspelled - perhaps 'Separate'?
#48: 
- Seperate the segments used by setup.S from the rest of the kernel.
  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
diff -uNr linux-2.5.7.boot2.vmlinuxlds/arch/i386/boot/compressed/head.S linux-2.5.7.boot2.32bit_entry/arch/i386/boot/compressed/head.S

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: arch/i386/boot/compressed/head.S:89:
+^Imovl %edi, %eax $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'lables' may be misspelled - perhaps 'labels'?
#163: FILE: arch/i386/boot/compressed/head.S:122:
+ * Or it must be anotated with lables so it can be manually relocated.
                                ^^^^^^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#231: FILE: arch/i386/boot/compressed/misc.c:170:
+static int vid_initialized = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#257: FILE: arch/i386/boot/compressed/misc.c:320:
+	} stack_start = { & user_stack [STACK_SIZE] };

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#257: FILE: arch/i386/boot/compressed/misc.c:320:
+	} stack_start = { & user_stack [STACK_SIZE] };
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#259: FILE: arch/i386/boot/compressed/misc.c:322:
+extern struct initial_regs32 initial_regs;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#260: FILE: arch/i386/boot/compressed/misc.c:323:
+extern __u32 kernel_start;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#268: FILE: arch/i386/boot/compressed/misc.c:353:
+	if ((ulg)output_data >= low_buffer_end) output_data=high_buffer_start;
 	                                                   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#268: FILE: arch/i386/boot/compressed/misc.c:353:
+	if ((ulg)output_data >= low_buffer_end) output_data=high_buffer_start;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'initial_regs.ebp == ENTRY16'
#286: FILE: arch/i386/boot/compressed/misc.c:375:
+	if ((initial_regs.ebp == ENTRY16) || (initial_regs.ebp == ENTRY32)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'initial_regs.ebp == ENTRY32'
#286: FILE: arch/i386/boot/compressed/misc.c:375:
+	if ((initial_regs.ebp == ENTRY16) || (initial_regs.ebp == ENTRY32)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#286: FILE: arch/i386/boot/compressed/misc.c:375:
+	if ((initial_regs.ebp == ENTRY16) || (initial_regs.ebp == ENTRY32)) {
+		real_mode = (struct boot_params *)initial_regs.esi;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#298: FILE: arch/i386/boot/compressed/misc.c:383:
+		if (real_mode->alt_mem_k > mem_k) {
+			mem_k = real_mode->alt_mem_k;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: arch/i386/kernel/head.S:122:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: arch/i386/kernel/head.S:150:
+ *^Ibe using the global pages. $

CHECK:CAMELCASE: Avoid CamelCase: <orig_video_isVGA>
#712: FILE: arch/i386/kernel/setup.c:664:
+	screen_info.orig_video_isVGA = 1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#737: FILE: arch/i386/kernel/setup.c:701:
+	}
+	else if (*((unsigned short *)OLD_CL_MAGIC_ADDR) == OLD_CL_MAGIC) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#741: FILE: arch/i386/kernel/setup.c:705:
+	command_line[COMMAND_LINE_SIZE -1] = '\0';
 	                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: arch/i386/kernel/setup.c:713:
+#endif^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#751: FILE: arch/i386/kernel/setup.c:715:
+}
+static void parse_params(char **cmdline_p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: arch/i386/kernel/setup.c:719:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#761: FILE: arch/i386/kernel/setup.c:725:
+	if (entry16) {
+		read_entry16_params(params);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: arch/i386/kernel/trampoline.S:60:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#940: FILE: include/asm-i386/boot_param.h:13:
+}; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000466425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 8 warnings, 5 checks, 829 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000466425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
