ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#57: FILE: fs/ext3/balloc.c:84:
+	struct ext3_group_desc * desc;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#63: FILE: fs/ext3/balloc.c:87:
+	desc = ext3_get_group_desc (sb, block_group, NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#81: FILE: fs/ext3/balloc.c:95:
+			    block_group, (unsigned long) desc->bg_block_bitmap);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: fs/ext3/balloc.c:379:
+ext3_new_block(handle_t *handle, struct inode *inode, unsigned long goal,
+		u32 *prealloc_count, u32 *prealloc_block, int *errp)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#309: FILE: fs/ext3/balloc.c:398:
+		printk("ext3_new_block: nonexistent device");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ext3_new_block', this function's name, in a string
#309: FILE: fs/ext3/balloc.c:398:
+		printk("ext3_new_block: nonexistent device");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: fs/ext3/balloc.c:416:
+^I      !in_group_p(sb->u.ext3_sb.s_resgid)) && $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: fs/ext3/balloc.c:456:
+		ret_block = find_next_usable_block(ret_block, bitmap_bh,
+				EXT3_BLOCKS_PER_GROUP(sb));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: fs/ext3/balloc.c:481:
+^I^I^Iret_block = find_next_usable_block(-1, bitmap_bh, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: fs/ext3/balloc.c:482:
+			ret_block = find_next_usable_block(-1, bitmap_bh, 
 						   EXT3_BLOCKS_PER_GROUP(sb));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: fs/ext3/balloc.c:483:
+^I^I^Iif (ret_block >= 0) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#429: FILE: fs/ext3/balloc.c:497:
+	for (	bit = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: fs/ext3/balloc.c:515:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: fs/ext3/balloc.c:532:
+	    in_range(target_block, le32_to_cpu(gdp->bg_inode_table),
 		      sb->u.ext3_sb.s_itb_per_group))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: fs/ext3/balloc.c:534:
+		ext3_error(sb, "ext3_new_block",
 			    "Allocating block in system zone - "

WARNING:SPLIT_STRING: quoted string split across lines
#482: FILE: fs/ext3/balloc.c:535:
 			    "Allocating block in system zone - "
+			    "block = %u", target_block);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: fs/ext3/balloc.c:559:
+		J_ASSERT_BH(bitmap_bh,
+			!ext3_test_bit(ret_block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: fs/ext3/balloc.c:573:
+		ext3_error(sb, "ext3_new_block",
 			    "block(%d) >= blocks count(%d) - "

WARNING:SPLIT_STRING: quoted string split across lines
#588: FILE: fs/ext3/balloc.c:574:
 			    "block(%d) >= blocks count(%d) - "
+			    "block_group = %d, es == %p ", ret_block,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: fs/ext3/balloc.c:585:
+	ext3_debug("allocating block %d. Goal hits %d of %d.\n",
+			ret_block, goal_hits, goal_attempts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: fs/ext3/balloc.c:598:
+	BUFFER_TRACE(sb->u.ext3_sb.s_sbh,
+			"journal_dirty_metadata for superblock");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bitmap_bh"
#683: FILE: fs/ext3/balloc.c:651:
+		if (bitmap_bh == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#690: FILE: fs/ext3/balloc.c:655:
+		printk("group %d: stored = %d, counted = %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#691: FILE: fs/ext3/balloc.c:656:
+		printk("group %d: stored = %d, counted = %lu\n",
 			i, le16_to_cpu(gdp->bg_free_blocks_count), x);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: fs/ext3/balloc.c:670:
+static inline int block_in_use(unsigned long block,
 				struct super_block * sb,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bitmap_bh"
#734: FILE: fs/ext3/balloc.c:752:
+		if (bitmap_bh == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#741: FILE: fs/ext3/balloc.c:756:
+		if (ext3_bg_has_super(sb, i) &&
+				!ext3_test_bit(0, bitmap_bh->b_data))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#869: FILE: fs/ext3/ialloc.c:50:
+read_inode_bitmap(struct super_block * sb, unsigned long block_group)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#891: FILE: fs/ext3/ialloc.c:62:
+		ext3_error(sb, "read_inode_bitmap",
 			    "Cannot read inode bitmap - "

CHECK:SPACING: No space is necessary after a cast
#900: FILE: fs/ext3/ialloc.c:64:
+			    block_group, (unsigned long) desc->bg_inode_bitmap);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1051: FILE: fs/ext3/ialloc.c:200:
+struct inode *ext3_new_inode(handle_t *handle, struct inode * dir, int mode)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1085: FILE: fs/ext3/ialloc.c:304:
+	if ((j = ext3_find_first_zero_bit((unsigned long *)bitmap_bh->b_data,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1086: FILE: fs/ext3/ialloc.c:305:
+	if ((j = ext3_find_first_zero_bit((unsigned long *)bitmap_bh->b_data,
 				      EXT3_INODES_PER_GROUP(sb))) <

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1176: FILE: fs/ext3/ialloc.c:478:
+	if (!ext3_test_bit(bit, bitmap_bh->b_data) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1177: FILE: fs/ext3/ialloc.c:479:
+	if (!ext3_test_bit(bit, bitmap_bh->b_data) ||
+			!(inode = iget(sb, ino)) || is_bad_inode(inode) ||

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1229: FILE: fs/ext3/ialloc.c:530:
+		printk("group %d: stored = %d, counted = %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1230: FILE: fs/ext3/ialloc.c:531:
+		printk("group %d: stored = %d, counted = %lu\n",
 			i, le16_to_cpu(gdp->bg_free_inodes_count), x);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449207.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 7 warnings, 20 checks, 1196 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449207.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
