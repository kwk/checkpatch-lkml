WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:LONG_LINE: line length of 184 exceeds 100 columns
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0
                                                                                                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0
                                                                                                                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0
                                                                                                                                                                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vi' - possible side-effects?
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'vi' may be better as '(vi)' to avoid precedence issues
#29: FILE: reiserfs_fs.h:1423:
+#define op_create_vi(vn,vi,is_affected,insert_size)  item_ops[le_ih_k_type(vi->vi_ih)]->create_vi > 0 ? item_ops[le_ih_k_type (vi->vi_ih)]->create_vi(vn,vi,is_affected,insert_size) : 0

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000556135.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 3 warnings, 2 checks, 8 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000556135.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
