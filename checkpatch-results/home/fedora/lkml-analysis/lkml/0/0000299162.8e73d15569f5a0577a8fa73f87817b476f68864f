WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
 linux-2.6.4-rc1-root/drivers/ide/pci/siimage.c |   53 ++++++++++++++-----------

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#70: FILE: drivers/ide/pci/siimage.c:1049:
+static const char * sil_blacklist [] = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#70: FILE: drivers/ide/pci/siimage.c:1049:
+static const char * sil_blacklist [] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#70: FILE: drivers/ide/pci/siimage.c:1049:
+static const char * sil_blacklist [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#103: FILE: drivers/ide/pci/siimage.c:1070:
+			printk(KERN_INFO "%s: applying Seagate errata fix\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: drivers/ide/pci/siimage.c:1071:
+			printk(KERN_INFO "%s: applying Seagate errata fix\n",
+					 drive->name);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'class_rev <= 0x01'
#121: FILE: drivers/ide/pci/siimage.c:1098:
+	if (is_sata(hwif) && (class_rev <= 0x01))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#153: FILE: include/linux/ide.h:994:
+	unsigned int (*max_rqsize)(ide_drive_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000299162.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 4 warnings, 2 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000299162.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
