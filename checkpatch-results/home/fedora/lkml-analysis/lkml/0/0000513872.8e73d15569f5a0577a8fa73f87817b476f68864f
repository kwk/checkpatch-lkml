CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#41: 

^

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#46: 
Small objects on SMP are managed in the per-cpu arrays - and transfered
                                                             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'infact' may be misspelled - perhaps 'in fact'?
#55: 
> sendfile benchmark, infact the first run with the patch was a little
                      ^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#136: FILE: mm/slab.c:1420:
+		slab_t* next = list_entry(slabp->list.next, slab_t, list);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#137: FILE: mm/slab.c:1421:
+		slab_t* next = list_entry(slabp->list.next, slab_t, list);
+		if (&next->list != &cachep->slabs) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#144: FILE: mm/slab.c:1428:
+			} /* else {
+			     The next slab is a free slab. That means

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:REPEATED_WORD: Possible repeated word: 'in'
#145: FILE: mm/slab.c:1429:
+			     the slab with the freed object in in it's

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#149: FILE: mm/slab.c:1433:
+			} */

ERROR:SPACING: space required after that close brace '}'
#150: FILE: mm/slab.c:1434:
+		}/* else {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#151: FILE: mm/slab.c:1435:
+		}/* else {
+		    the slab the freed object was in was the last slab in

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: mm/slab.c:1436:
+^I^I    the cache. That means it's already in the correct $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: mm/slab.c:1437:
+^I ^I    position: behind all partial slabs (if any).$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: mm/slab.c:1437:
+^I ^I    position: behind all partial slabs (if any).$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#154: FILE: mm/slab.c:1438:
+		} */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#166: FILE: mm/slab.c:1495:
+	slab_t* walk;

ERROR:SPACING: space required before the open parenthesis '('
#172: FILE: mm/slab.c:1501:
+	while(&walk->list != &cachep->slabs) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#175: FILE: mm/slab.c:1504:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#179: FILE: mm/slab.c:1508:
+					BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#182: FILE: mm/slab.c:1511:
+				BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#187: FILE: mm/slab.c:1516:
+					BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#195: FILE: mm/slab.c:1524:
+			BUG();

ERROR:SPACING: space required before the open parenthesis '('
#200: FILE: mm/slab.c:1529:
+#define kmem_slabchain_test(cachep)	do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513872.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 14 warnings, 1 checks, 119 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513872.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
