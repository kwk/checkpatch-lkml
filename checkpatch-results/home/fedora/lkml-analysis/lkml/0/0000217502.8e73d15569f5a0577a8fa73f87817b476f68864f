WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#148: FILE: fs/jffs/intrep.h:54:
+#if 0

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#171: FILE: fs/jffs/intrep.c:75:
+static long no_jffs_file = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: fs/jffs/intrep.c:101:
+^I^Iif ((fmc->flash_size - (fmc->used_size + fmc->dirty_size)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#199: FILE: fs/jffs/intrep.c:108:
+		if (jffs_garbage_collect_now(c)) {
+		  D1(printk("JFFS_ENOUGH_SPACE: jffs_garbage_collect_now() failed.\n"));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#200: FILE: fs/jffs/intrep.c:109:
+		  D1(printk("JFFS_ENOUGH_SPACE: jffs_garbage_collect_now() failed.\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'JFFS_ENOUGH_SPACE', this function's name, in a string
#200: FILE: fs/jffs/intrep.c:109:
+		  D1(printk("JFFS_ENOUGH_SPACE: jffs_garbage_collect_now() failed.\n"));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TABSTOP: Statements should start on a tabstop
#201: FILE: fs/jffs/intrep.c:110:
+		  return 0;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#231: FILE: fs/jffs/intrep.c:675:
+static int check_partly_erased_sectors(struct jffs_fmcontrol *fmc){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#231: FILE: fs/jffs/intrep.c:675:
+static int check_partly_erased_sectors(struct jffs_fmcontrol *fmc){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#310: FILE: fs/jffs/intrep.c:2569:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#376: FILE: fs/jffs/jffs_fm.h:144:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#424: FILE: fs/jffs/jffs_fm.c:784:
+#if 0

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217502.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 0 checks, 342 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217502.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
