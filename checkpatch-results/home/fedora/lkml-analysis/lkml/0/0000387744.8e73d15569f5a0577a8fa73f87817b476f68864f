WARNING:TYPO_SPELLING: 'partion' may be misspelled - perhaps 'partition'?
#65: 
 MJB> done). Then I took that ext3 partion, umounted it, did a
                                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#95: FILE: fs/ext3/dir.c:36:
+static int ext3_readdir_sort (struct file * filp,
                                             ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#95: FILE: fs/ext3/dir.c:36:
+static int ext3_readdir_sort (struct file * filp,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#95: FILE: fs/ext3/dir.c:36:
+static int ext3_readdir_sort (struct file * filp,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: fs/ext3/dir.c:37:
+                         void * dirent, filldir_t filldir);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: fs/ext3/dir.c:37:
+static int ext3_readdir_sort (struct file * filp,
+                         void * dirent, filldir_t filldir);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: fs/ext3/dir.c:37:
+                         void * dirent, filldir_t filldir);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: fs/ext3/dir.c:37:
+                         void * dirent, filldir_t filldir);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#99: FILE: fs/ext3/dir.c:40:
+int ext3_htree_store_dirent_sorted(struct file *dir_file,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: fs/ext3/dir.c:41:
+                             struct ext3_dir_entry_2 *dirent);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: fs/ext3/dir.c:41:
+int ext3_htree_store_dirent_sorted(struct file *dir_file,
+                             struct ext3_dir_entry_2 *dirent);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/ext3/dir.c:41:
+                             struct ext3_dir_entry_2 *dirent);$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#109: FILE: fs/ext3/dir.c:112:
+			err = ext3_readdir_sort(filp, dirent, filldir);
 			                        ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: fs/ext3/dir.c:116:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: fs/ext3/dir.c:513:
+       if (is_dx(inode) && filp->private_data) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/ext3/dir.c:513:
+       if (is_dx(inode) && filp->private_data) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 16)
#147: FILE: fs/ext3/dir.c:513:
+       if (is_dx(inode) && filp->private_data) 
 		ext3_htree_free_dir_info(filp->private_data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: fs/ext3/dir.c:520:
+{                       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: fs/ext3/dir.c:521:
+        struct rb_node **p, *parent = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: fs/ext3/dir.c:521:
+        struct rb_node **p, *parent = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/ext3/dir.c:522:
+        struct fname * fname, *new_fn, *prev_fname = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/ext3/dir.c:522:
+        struct fname * fname, *new_fn, *prev_fname = NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: fs/ext3/dir.c:522:
+        struct fname * fname, *new_fn, *prev_fname = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: fs/ext3/dir.c:523:
+        struct dir_private_info *info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/ext3/dir.c:523:
+        struct dir_private_info *info;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: fs/ext3/dir.c:524:
+        int len;        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: fs/ext3/dir.c:524:
+        int len;        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: fs/ext3/dir.c:524:
+        int len;        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: fs/ext3/dir.c:525:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: fs/ext3/dir.c:525:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: fs/ext3/dir.c:525:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: fs/ext3/dir.c:526:
+        info = (struct dir_private_info *) dir_file->private_data;$

CHECK:SPACING: No space is necessary after a cast
#160: FILE: fs/ext3/dir.c:526:
+        info = (struct dir_private_info *) dir_file->private_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/ext3/dir.c:526:
+        info = (struct dir_private_info *) dir_file->private_data;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: fs/ext3/dir.c:527:
+        p = &info->root.rb_node; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: fs/ext3/dir.c:527:
+        p = &info->root.rb_node; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/ext3/dir.c:527:
+        p = &info->root.rb_node; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: fs/ext3/dir.c:528:
+                       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: fs/ext3/dir.c:528:
+                       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: fs/ext3/dir.c:528:
+                       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: fs/ext3/dir.c:529:
+        /* Create and allocate the fname structure */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: fs/ext3/dir.c:529:
+        /* Create and allocate the fname structure */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: fs/ext3/dir.c:530:
+        len = sizeof(struct fname) + dirent->name_len + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: fs/ext3/dir.c:530:
+        len = sizeof(struct fname) + dirent->name_len + 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: fs/ext3/dir.c:531:
+        new_fn = kmalloc(len, GFP_KERNEL);         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: fs/ext3/dir.c:531:
+        new_fn = kmalloc(len, GFP_KERNEL);         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: fs/ext3/dir.c:531:
+        new_fn = kmalloc(len, GFP_KERNEL);         $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: fs/ext3/dir.c:532:
+        if (!new_fn)            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: fs/ext3/dir.c:532:
+        if (!new_fn)            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: fs/ext3/dir.c:532:
+        if (!new_fn)            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: fs/ext3/dir.c:533:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/ext3/dir.c:533:
+                return -ENOMEM;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: fs/ext3/dir.c:534:
+        memset(new_fn, 0, len); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: fs/ext3/dir.c:534:
+        memset(new_fn, 0, len); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/ext3/dir.c:534:
+        memset(new_fn, 0, len); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: fs/ext3/dir.c:535:
+        new_fn->hash = new_fn->inode = le32_to_cpu(dirent->inode); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: fs/ext3/dir.c:535:
+        new_fn->hash = new_fn->inode = le32_to_cpu(dirent->inode); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/ext3/dir.c:535:
+        new_fn->hash = new_fn->inode = le32_to_cpu(dirent->inode); $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#169: FILE: fs/ext3/dir.c:535:
+        new_fn->hash = new_fn->inode = le32_to_cpu(dirent->inode); 

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: fs/ext3/dir.c:536:
+        new_fn->name_len = dirent->name_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: fs/ext3/dir.c:536:
+        new_fn->name_len = dirent->name_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: fs/ext3/dir.c:537:
+        new_fn->file_type = dirent->file_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/ext3/dir.c:537:
+        new_fn->file_type = dirent->file_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: fs/ext3/dir.c:538:
+        memcpy(new_fn->name, dirent->name, dirent->name_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: fs/ext3/dir.c:538:
+        memcpy(new_fn->name, dirent->name, dirent->name_len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: fs/ext3/dir.c:539:
+        new_fn->name[dirent->name_len] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: fs/ext3/dir.c:539:
+        new_fn->name[dirent->name_len] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: fs/ext3/dir.c:540:
+        new_fn->offs = dir_file->f_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: fs/ext3/dir.c:540:
+        new_fn->offs = dir_file->f_pos;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: fs/ext3/dir.c:541:
+                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: fs/ext3/dir.c:541:
+                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: fs/ext3/dir.c:541:
+                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: fs/ext3/dir.c:542:
+        while (*p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: fs/ext3/dir.c:542:
+        while (*p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: fs/ext3/dir.c:543:
+                parent = *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: fs/ext3/dir.c:543:
+                parent = *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: fs/ext3/dir.c:544:
+                fname = rb_entry(parent, struct fname, rb_hash);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: fs/ext3/dir.c:544:
+                fname = rb_entry(parent, struct fname, rb_hash);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: fs/ext3/dir.c:545:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: fs/ext3/dir.c:545:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: fs/ext3/dir.c:545:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: fs/ext3/dir.c:546:
+                if (new_fn->hash < fname->hash)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: fs/ext3/dir.c:546:
+                if (new_fn->hash < fname->hash)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#180: FILE: fs/ext3/dir.c:546:
+                if (new_fn->hash < fname->hash)
[...]
+                else {          
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: fs/ext3/dir.c:547:
+                        p = &(*p)->rb_left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: fs/ext3/dir.c:547:
+                        p = &(*p)->rb_left;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: fs/ext3/dir.c:548:
+                else {          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: fs/ext3/dir.c:548:
+                else {          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: fs/ext3/dir.c:548:
+                else {          $

CHECK:BRACES: Unbalanced braces around else statement
#182: FILE: fs/ext3/dir.c:548:
+                else {          

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: fs/ext3/dir.c:549:
+                        prev_fname = fname;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: fs/ext3/dir.c:549:
+                        prev_fname = fname;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: fs/ext3/dir.c:550:
+                        p = &(*p)->rb_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: fs/ext3/dir.c:550:
+                        p = &(*p)->rb_right;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: fs/ext3/dir.c:551:
+                }               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: fs/ext3/dir.c:551:
+                }               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: fs/ext3/dir.c:551:
+                }               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: fs/ext3/dir.c:552:
+        }                               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: fs/ext3/dir.c:552:
+        }                               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/ext3/dir.c:552:
+        }                               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: fs/ext3/dir.c:554:
+        if (prev_fname)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: fs/ext3/dir.c:554:
+        if (prev_fname)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: fs/ext3/dir.c:555:
+                list_add(&new_fn->list, &prev_fname->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: fs/ext3/dir.c:555:
+                list_add(&new_fn->list, &prev_fname->list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: fs/ext3/dir.c:556:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: fs/ext3/dir.c:556:
+        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: fs/ext3/dir.c:557:
+                list_add(&new_fn->list, &info->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: fs/ext3/dir.c:557:
+                list_add(&new_fn->list, &info->list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: fs/ext3/dir.c:559:
+        rb_link_node(&new_fn->rb_hash, parent, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: fs/ext3/dir.c:559:
+        rb_link_node(&new_fn->rb_hash, parent, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: fs/ext3/dir.c:560:
+        rb_insert_color(&new_fn->rb_hash, &info->root);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: fs/ext3/dir.c:560:
+        rb_insert_color(&new_fn->rb_hash, &info->root);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: fs/ext3/dir.c:561:
+        info->list_nr++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: fs/ext3/dir.c:561:
+        info->list_nr++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: fs/ext3/dir.c:563:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: fs/ext3/dir.c:563:
+        return 0;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#200: FILE: fs/ext3/dir.c:566:
+static int ext3_fill_from_sort_pool (struct file * filp, void * dirent, filldir_t filldir)
                                                    ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#200: FILE: fs/ext3/dir.c:566:
+static int ext3_fill_from_sort_pool (struct file * filp, void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#200: FILE: fs/ext3/dir.c:566:
+static int ext3_fill_from_sort_pool (struct file * filp, void * dirent, filldir_t filldir)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: fs/ext3/dir.c:566:
+static int ext3_fill_from_sort_pool (struct file * filp, void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#202: FILE: fs/ext3/dir.c:568:
+	struct super_block * sb = filp->f_dentry->d_inode->i_sb;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#204: FILE: fs/ext3/dir.c:570:
+	struct list_head * cur;

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: fs/ext3/dir.c:571:
+        struct fname *fname;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: fs/ext3/dir.c:571:
+        struct fname *fname;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: fs/ext3/dir.c:577:
+                error = filldir(dirent, fname->name,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: fs/ext3/dir.c:577:
+                error = filldir(dirent, fname->name,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: fs/ext3/dir.c:587:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#228: FILE: fs/ext3/dir.c:594:
+static int ext3_readdir_sort (struct file * filp,
                                             ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#228: FILE: fs/ext3/dir.c:594:
+static int ext3_readdir_sort (struct file * filp,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: fs/ext3/dir.c:594:
+static int ext3_readdir_sort (struct file * filp,

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: fs/ext3/dir.c:595:
+                         void * dirent, filldir_t filldir)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: fs/ext3/dir.c:595:
+static int ext3_readdir_sort (struct file * filp,
+                         void * dirent, filldir_t filldir)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: fs/ext3/dir.c:595:
+                         void * dirent, filldir_t filldir)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: fs/ext3/dir.c:595:
+                         void * dirent, filldir_t filldir)

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: fs/ext3/dir.c:597:
+        unsigned long offset, blk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: fs/ext3/dir.c:597:
+        unsigned long offset, blk;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: fs/ext3/dir.c:598:
+        int i, stored, error = 0, blocks = 0, err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/ext3/dir.c:598:
+        int i, stored, error = 0, blocks = 0, err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: fs/ext3/dir.c:599:
+        struct buffer_head * bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: fs/ext3/dir.c:599:
+        struct buffer_head * bh;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#233: FILE: fs/ext3/dir.c:599:
+        struct buffer_head * bh;

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: fs/ext3/dir.c:600:
+        struct ext3_dir_entry_2 * de;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: fs/ext3/dir.c:600:
+        struct ext3_dir_entry_2 * de;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#234: FILE: fs/ext3/dir.c:600:
+        struct ext3_dir_entry_2 * de;

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: fs/ext3/dir.c:601:
+        struct inode *inode = filp->f_dentry->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: fs/ext3/dir.c:601:
+        struct inode *inode = filp->f_dentry->d_inode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#236: FILE: fs/ext3/dir.c:602:
+	struct super_block * sb = inode->i_sb;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#247: FILE: fs/ext3/dir.c:613:
+		ext3_fill_from_sort_pool(filp, dirent, filldir);
 		                         ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: fs/ext3/dir.c:616:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: fs/ext3/dir.c:617:
+        stored = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: fs/ext3/dir.c:617:
+        stored = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: fs/ext3/dir.c:618:
+        bh = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: fs/ext3/dir.c:618:
+        bh = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: fs/ext3/dir.c:619:
+        offset = filp->f_pos & (sb->s_blocksize - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: fs/ext3/dir.c:619:
+        offset = filp->f_pos & (sb->s_blocksize - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: fs/ext3/dir.c:621:
+        while (!error && (blocks < EXT3_SB(sb)->sortdir_prefetch) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: fs/ext3/dir.c:621:
+        while (!error && (blocks < EXT3_SB(sb)->sortdir_prefetch) &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: fs/ext3/dir.c:622:
+        while (!error && (blocks < EXT3_SB(sb)->sortdir_prefetch) &&
+			(filp->f_pos < inode->i_size)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: fs/ext3/dir.c:623:
+                blk = (filp->f_pos) >> EXT3_BLOCK_SIZE_BITS(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: fs/ext3/dir.c:623:
+                blk = (filp->f_pos) >> EXT3_BLOCK_SIZE_BITS(sb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: fs/ext3/dir.c:624:
+                bh = ext3_bread (0, inode, blk, 0, &err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: fs/ext3/dir.c:624:
+                bh = ext3_bread (0, inode, blk, 0, &err);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: fs/ext3/dir.c:624:
+                bh = ext3_bread (0, inode, blk, 0, &err);

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: fs/ext3/dir.c:625:
+                if (!bh) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: fs/ext3/dir.c:625:
+                if (!bh) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: fs/ext3/dir.c:626:
+                        ext3_error (sb, "ext3_readdir",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: fs/ext3/dir.c:626:
+                        ext3_error (sb, "ext3_readdir",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: fs/ext3/dir.c:626:
+                        ext3_error (sb, "ext3_readdir",

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: fs/ext3/dir.c:627:
+                                "directory #%lu contains a hole at offset %lu",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: fs/ext3/dir.c:627:
+                        ext3_error (sb, "ext3_readdir",
+                                "directory #%lu contains a hole at offset %lu",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: fs/ext3/dir.c:627:
+                                "directory #%lu contains a hole at offset %lu",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: fs/ext3/dir.c:628:
+                                inode->i_ino, (unsigned long)filp->f_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: fs/ext3/dir.c:628:
+                                inode->i_ino, (unsigned long)filp->f_pos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: fs/ext3/dir.c:629:
+                        filp->f_pos += sb->s_blocksize - offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: fs/ext3/dir.c:629:
+                        filp->f_pos += sb->s_blocksize - offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: fs/ext3/dir.c:630:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: fs/ext3/dir.c:630:
+                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: fs/ext3/dir.c:631:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: fs/ext3/dir.c:631:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: fs/ext3/dir.c:634:
+                /* If the dir block has changed since the last call to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: fs/ext3/dir.c:635:
+                 * readdir(2), then we might be pointing to an invalid$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: fs/ext3/dir.c:636:
+                 * dirent right now.  Scan from the start of the block$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: fs/ext3/dir.c:637:
+                 * to make sure. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#271: FILE: fs/ext3/dir.c:637:
+                 * to make sure. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: fs/ext3/dir.c:638:
+                if (filp->f_version != inode->i_version) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: fs/ext3/dir.c:638:
+                if (filp->f_version != inode->i_version) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: fs/ext3/dir.c:639:
+                        for (i = 0; i < sb->s_blocksize && i < offset; ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: fs/ext3/dir.c:639:
+                        for (i = 0; i < sb->s_blocksize && i < offset; ) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: fs/ext3/dir.c:640:
+                                de = (struct ext3_dir_entry_2 *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: fs/ext3/dir.c:640:
+                                de = (struct ext3_dir_entry_2 *)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: fs/ext3/dir.c:641:
+                                        (bh->b_data + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: fs/ext3/dir.c:641:
+                                        (bh->b_data + i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: fs/ext3/dir.c:642:
+                                /* It's too expensive to do a full$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: fs/ext3/dir.c:643:
+                                 * dirent test each time round this$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: fs/ext3/dir.c:644:
+                                 * loop, but we do have to test at$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: fs/ext3/dir.c:645:
+                                 * least that it is non-zero.  A$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: fs/ext3/dir.c:646:
+                                 * failure will be detected in the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: fs/ext3/dir.c:647:
+                                 * dirent test below. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: fs/ext3/dir.c:647:
+                                 * dirent test below. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: fs/ext3/dir.c:648:
+                                if (le16_to_cpu(de->rec_len) <$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/ext3/dir.c:648:
+                                if (le16_to_cpu(de->rec_len) <$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: fs/ext3/dir.c:649:
+                                                EXT3_DIR_REC_LEN(1))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: fs/ext3/dir.c:649:
+                                                EXT3_DIR_REC_LEN(1))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: fs/ext3/dir.c:650:
+                                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: fs/ext3/dir.c:650:
+                                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: fs/ext3/dir.c:651:
+                                i += le16_to_cpu(de->rec_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: fs/ext3/dir.c:651:
+                                i += le16_to_cpu(de->rec_len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: fs/ext3/dir.c:652:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: fs/ext3/dir.c:652:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: fs/ext3/dir.c:653:
+                        offset = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: fs/ext3/dir.c:653:
+                        offset = i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: fs/ext3/dir.c:654:
+                        filp->f_pos = (filp->f_pos & ~(sb->s_blocksize - 1))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: fs/ext3/dir.c:654:
+                        filp->f_pos = (filp->f_pos & ~(sb->s_blocksize - 1))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: fs/ext3/dir.c:655:
+                                | offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: fs/ext3/dir.c:655:
+                                | offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: fs/ext3/dir.c:656:
+                        filp->f_version = inode->i_version;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: fs/ext3/dir.c:656:
+                        filp->f_version = inode->i_version;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: fs/ext3/dir.c:657:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: fs/ext3/dir.c:657:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: fs/ext3/dir.c:659:
+                while (!error && filp->f_pos < inode->i_size$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: fs/ext3/dir.c:659:
+                while (!error && filp->f_pos < inode->i_size$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: fs/ext3/dir.c:660:
+                       && offset < sb->s_blocksize) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#294: FILE: fs/ext3/dir.c:660:
+                while (!error && filp->f_pos < inode->i_size
+                       && offset < sb->s_blocksize) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: fs/ext3/dir.c:660:
+                       && offset < sb->s_blocksize) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: fs/ext3/dir.c:661:
+                        de = (struct ext3_dir_entry_2 *) (bh->b_data + offset);$

CHECK:SPACING: No space is necessary after a cast
#295: FILE: fs/ext3/dir.c:661:
+                        de = (struct ext3_dir_entry_2 *) (bh->b_data + offset);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: fs/ext3/dir.c:661:
+                        de = (struct ext3_dir_entry_2 *) (bh->b_data + offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: fs/ext3/dir.c:662:
+                        if (!ext3_check_dir_entry ("ext3_readdir", inode, de,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/ext3/dir.c:662:
+                        if (!ext3_check_dir_entry ("ext3_readdir", inode, de,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: fs/ext3/dir.c:662:
+                        if (!ext3_check_dir_entry ("ext3_readdir", inode, de,

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: fs/ext3/dir.c:663:
+                                                   bh, offset)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: fs/ext3/dir.c:663:
+                                                   bh, offset)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: fs/ext3/dir.c:664:
+                                /* On error, skip the f_pos to the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: fs/ext3/dir.c:665:
+                                 * next block. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#299: FILE: fs/ext3/dir.c:665:
+                                 * next block. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: fs/ext3/dir.c:666:
+                                filp->f_pos = (filp->f_pos |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: fs/ext3/dir.c:666:
+                                filp->f_pos = (filp->f_pos |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: fs/ext3/dir.c:667:
+                                                (sb->s_blocksize - 1)) + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: fs/ext3/dir.c:667:
+                                                (sb->s_blocksize - 1)) + 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: fs/ext3/dir.c:668:
+                                brelse (bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: fs/ext3/dir.c:668:
+                                brelse (bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#302: FILE: fs/ext3/dir.c:668:
+                                brelse (bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: fs/ext3/dir.c:669:
+                                return stored;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: fs/ext3/dir.c:669:
+                                return stored;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: fs/ext3/dir.c:670:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: fs/ext3/dir.c:670:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: fs/ext3/dir.c:671:
+                        offset += le16_to_cpu(de->rec_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: fs/ext3/dir.c:671:
+                        offset += le16_to_cpu(de->rec_len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: fs/ext3/dir.c:672:
+                        if (le32_to_cpu(de->inode)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: fs/ext3/dir.c:672:
+                        if (le32_to_cpu(de->inode)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: fs/ext3/dir.c:673:
+                                /* We might block in the next section$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: fs/ext3/dir.c:674:
+                                 * if the data destination is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: fs/ext3/dir.c:675:
+                                 * currently swapped out.  So, use a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: fs/ext3/dir.c:676:
+                                 * version stamp to detect whether or$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: fs/ext3/dir.c:677:
+                                 * not the directory has been modified$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: fs/ext3/dir.c:678:
+                                 * during the copy operation.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: fs/ext3/dir.c:679:
+                                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: fs/ext3/dir.c:680:
+                                unsigned long version = filp->f_version;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: fs/ext3/dir.c:680:
+                                unsigned long version = filp->f_version;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#316: FILE: fs/ext3/dir.c:682:
+				error = ext3_htree_fill_pool(filp, de);
 				                             ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: fs/ext3/dir.c:683:
+                                if (error)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: fs/ext3/dir.c:683:
+                                if (error)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: fs/ext3/dir.c:684:
+                                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: fs/ext3/dir.c:684:
+                                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: fs/ext3/dir.c:685:
+                                if (version != filp->f_version)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: fs/ext3/dir.c:685:
+                                if (version != filp->f_version)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: fs/ext3/dir.c:686:
+                                        goto revalidate;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: fs/ext3/dir.c:686:
+                                        goto revalidate;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: fs/ext3/dir.c:687:
+                                stored ++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: fs/ext3/dir.c:687:
+                                stored ++;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#321: FILE: fs/ext3/dir.c:687:
+                                stored ++;
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: fs/ext3/dir.c:688:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: fs/ext3/dir.c:688:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: fs/ext3/dir.c:689:
+                        filp->f_pos += le16_to_cpu(de->rec_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/ext3/dir.c:689:
+                        filp->f_pos += le16_to_cpu(de->rec_len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: fs/ext3/dir.c:690:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/ext3/dir.c:690:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: fs/ext3/dir.c:691:
+                offset = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: fs/ext3/dir.c:691:
+                offset = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: fs/ext3/dir.c:692:
+                brelse (bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: fs/ext3/dir.c:692:
+                brelse (bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#326: FILE: fs/ext3/dir.c:692:
+                brelse (bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: fs/ext3/dir.c:694:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: fs/ext3/dir.c:694:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: fs/ext3/dir.c:695:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#330: FILE: fs/ext3/dir.c:696:
+	ext3_fill_from_sort_pool(filp, dirent, filldir);
 	                         ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: fs/ext3/dir.c:697:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: fs/ext3/dir.c:698:
+        UPDATE_ATIME(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: fs/ext3/dir.c:698:
+        UPDATE_ATIME(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: fs/ext3/dir.c:699:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: fs/ext3/dir.c:699:
+        return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: fs/ext3/super.c:587:
+		if (!strcmp (this_char, "sortdir")) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#346: FILE: fs/ext3/super.c:589:
+				int blocks = simple_strtoul(value, &value, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: fs/ext3/super.c:590:
+				int blocks = simple_strtoul(value, &value, 0);
+				printk("EXT3: has value: %d\n", blocks);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#347: FILE: fs/ext3/super.c:590:
+				printk("EXT3: has value: %d\n", blocks);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#354: FILE: fs/ext3/super.c:597:
+			printk("EXT3-fs: sortdir (%d blocks prefetch)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: fs/ext3/super.c:598:
+			printk("EXT3-fs: sortdir (%d blocks prefetch)\n",
+					sbi->sortdir_prefetch);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#356: FILE: fs/ext3/super.c:599:
+		} else
[...]
 		if (!strcmp (this_char, "user_xattr"))

CHECK:BRACES: Unbalanced braces around else statement
#356: FILE: fs/ext3/super.c:599:
+		} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 156 errors, 130 warnings, 13 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
