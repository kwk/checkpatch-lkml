WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This patch adds an selinuxfs based API to the AVC, to allow monitoring of the

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#70: FILE: security/selinux/avc.c:47:
+#define avc_cache_stats_incr(field) ^I^I^I^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#70: FILE: security/selinux/avc.c:47:
+#define avc_cache_stats_incr(field) 				\
+do {								\
+	per_cpu(avc_cache_stats, get_cpu()).field++;		\
+	put_cpu();						\
+} while (0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: security/selinux/avc.c:302:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#279: FILE: security/selinux/include/avc.h:86:
+struct avc_cache_stats
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: security/selinux/include/av_perm_to_string.h:88:
+   { SECCLASS_SECURITY, SECURITY__SETSECPARAM, "setsecparam" },$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#333: FILE: security/selinux/Kconfig:70:
+config SECURITY_SELINUX_AVC_STATS
+	bool "NSA SELinux AVC Statistics"
+	depends on SECURITY_SELINUX
+	default y
+	help
+	  This option collects access vector cache statistics to
+	  /selinux/avc/cache_stats, which may be monitored via
+	  tools such as avcstat.
+	

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: security/selinux/Kconfig:78:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#379: FILE: security/selinux/selinuxfs.c:894:
+static ssize_t sel_read_avc_cache_threshold(struct file *filp, char __user *buf,
                                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: security/selinux/selinuxfs.c:904:
+static ssize_t sel_write_avc_cache_threshold(struct file * file,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: security/selinux/selinuxfs.c:905:
+					     const char __user * buf,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#409: FILE: security/selinux/selinuxfs.c:924:
+	page = (char*)get_zeroed_page(GFP_KERNEL);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#420: FILE: security/selinux/selinuxfs.c:935:
+	if (sscanf(page, "%u", &new_value) != 1) {
+		ret = -EINVAL;
+		goto out;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: security/selinux/selinuxfs.c:949:
+out:^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#438: FILE: security/selinux/selinuxfs.c:953:
+static ssize_t sel_read_avc_hash_stats(struct file *filp, char __user *buf,
                                                     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: security/selinux/selinuxfs.c:958:
+^I$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#457: FILE: security/selinux/selinuxfs.c:972:
+static struct file_operations sel_avc_cache_threshold_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#462: FILE: security/selinux/selinuxfs.c:977:
+static struct file_operations sel_avc_hash_stats_ops = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: security/selinux/selinuxfs.c:985:
+^I$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#471: FILE: security/selinux/selinuxfs.c:986:
+	for (cpu = *idx; cpu < NR_CPUS; ++cpu) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: security/selinux/selinuxfs.c:1001:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: security/selinux/selinuxfs.c:1013:
+^I$

WARNING:SPLIT_STRING: quoted string split across lines
#501: FILE: security/selinux/selinuxfs.c:1016:
+		seq_printf(seq, "lookups hits misses allocations reclaims "
+			   "frees\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#512: FILE: security/selinux/selinuxfs.c:1027:
+static struct seq_operations sel_avc_cache_stats_seq_ops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#524: FILE: security/selinux/selinuxfs.c:1039:
+static struct file_operations sel_avc_cache_stats_ops = {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#537: FILE: security/selinux/selinuxfs.c:1052:
+		  &sel_avc_cache_threshold_ops, S_IRUGO|S_IWUSR },
 		                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#537: FILE: security/selinux/selinuxfs.c:1052:
+		  &sel_avc_cache_threshold_ops, S_IRUGO|S_IWUSR },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#538: FILE: security/selinux/selinuxfs.c:1053:
+		{ "hash_stats", &sel_avc_hash_stats_ops, S_IRUGO },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#540: FILE: security/selinux/selinuxfs.c:1055:
+		{ "cache_stats", &sel_avc_cache_stats_ops, S_IRUGO },

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(files)
#544: FILE: security/selinux/selinuxfs.c:1059:
+	for (i = 0; i < sizeof (files) / sizeof (files[0]); i++) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: security/selinux/selinuxfs.c:1059:
+	for (i = 0; i < sizeof (files) / sizeof (files[0]); i++) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: security/selinux/selinuxfs.c:1059:
+	for (i = 0; i < sizeof (files) / sizeof (files[0]); i++) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#554: FILE: security/selinux/selinuxfs.c:1069:
+		inode = sel_make_inode(dir->d_sb, S_IFREG|files[i].mode);
 		                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#574: FILE: security/selinux/selinuxfs.c:1089:
+	inode = sel_make_inode(sb, S_IFDIR | S_IRUGO | S_IXUGO);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: security/selinux/selinuxfs.c:1097:
+out:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: security/selinux/selinuxfs.c:1156:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: security/selinux/selinuxfs.c:1160:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: security/selinux/selinuxfs.c:1164:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: security/selinux/selinuxfs.c:1168:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230949.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 20 warnings, 3 checks, 520 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230949.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
