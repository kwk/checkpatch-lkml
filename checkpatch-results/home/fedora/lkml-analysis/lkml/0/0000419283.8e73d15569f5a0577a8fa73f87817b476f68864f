WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
>  3. Add PTRACE_GETEVENTMSG and four new flags to PTRACE_SETOPTIONS, to allow

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
#	           ChangeSet	1.810   -> 1.811  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
#	include/linux/sched.h	1.95.1.1 -> 1.97   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
#	       kernel/fork.c	1.77.1.10 -> 1.79   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
#	include/linux/ptrace.h	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#	    fs/binfmt_aout.c	1.12.1.1 -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#	     fs/binfmt_elf.c	1.29    -> 1.30   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#	     kernel/ptrace.c	1.19    -> 1.20   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# 02/10/26	drow@nevyn.them.org	1.811

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# Merge

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#49: 
--- a/fs/binfmt_aout.c	Sat Oct 26 20:09:37 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#59: FILE: fs/binfmt_aout.c:430:
+			ptrace_notify ((PTRACE_EVENT_EXEC << 8) | SIGTRAP);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#77: FILE: fs/binfmt_elf.c:797:
+			ptrace_notify ((PTRACE_EVENT_EXEC << 8) | SIGTRAP);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: include/linux/ptrace.h:53:
+extern void ptrace_notify(int exit_code);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: kernel/fork.c:940:
+static inline int fork_traceflag (unsigned clone_flags)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: kernel/fork.c:940:
+static inline int fork_traceflag (unsigned clone_flags)

CHECK:BRACES: braces {} should be used on all arms of this statement
#148: FILE: kernel/fork.c:942:
+	if (clone_flags & (CLONE_UNTRACED | CLONE_IDLETASK))
[...]
+	else if (clone_flags & CLONE_VFORK) {
[...]
+	} else if ((clone_flags & CSIGNAL) != SIGCHLD) {
[...]
+	} else if (current->ptrace & PT_TRACE_FORK)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#172: FILE: kernel/fork.c:972:
+		trace = fork_traceflag (clone_flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: kernel/fork.c:992:
+		if (unlikely (trace)) {

CHECK:SPACING: No space is necessary after a cast
#185: FILE: kernel/fork.c:993:
+			current->ptrace_message = (unsigned long) p->pid;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: kernel/fork.c:994:
+			ptrace_notify ((trace << 8) | SIGTRAP);

CHECK:SPACING: No space is necessary after a cast
#240: FILE: kernel/ptrace.c:301:
+		ret = put_user(child->ptrace_message, (unsigned long *) data);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#251: FILE: kernel/ptrace.c:312:
+	BUG_ON (!(current->ptrace & PT_PTRACED));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: kernel/ptrace.c:312:
+	BUG_ON (!(current->ptrace & PT_PTRACED));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419283.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 28 warnings, 4 checks, 182 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419283.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
