ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#33: 
--- a/drivers/scsi/sd.c	Fri Oct 25 11:26:48 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host"
#42: FILE: drivers/scsi/sd.c:223:
+			if (host == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#51: FILE: drivers/scsi/sd.c:470:
+	struct Scsi_Host * shp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#51: FILE: drivers/scsi/sd.c:470:
+	struct Scsi_Host * shp;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#62: FILE: drivers/scsi/sd.c:492:
+	if (shp == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: drivers/scsi/sd.c:562:
+	struct Scsi_Host * shp;

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Request>
#106: FILE: drivers/scsi/sd.c:1081:
+sd_do_mode_sense6(Scsi_Request *SRpnt, int modepage, unsigned char *buffer,

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#106: FILE: drivers/scsi/sd.c:1081:
+sd_do_mode_sense6(Scsi_Request *SRpnt, int modepage, unsigned char *buffer,

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: drivers/scsi/sd.c:1082:
+^I       ^Iint len) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: drivers/scsi/sd.c:1082:
+^I       ^Iint len) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: drivers/scsi/sd.c:1082:
+sd_do_mode_sense6(Scsi_Request *SRpnt, int modepage, unsigned char *buffer,
+	       	int len) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: drivers/scsi/sd.c:1380:
+	SCSI_LOG_HLQUEUE(3, { printk("sd_attach: scsi_device: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#152: FILE: drivers/scsi/sd.c:1382:
+				printk("\n");});

ERROR:SPACING: space required after that ';' (ctx:VxV)
#152: FILE: drivers/scsi/sd.c:1382:
+				printk("\n");});
 				            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#163: FILE: drivers/scsi/sd.c:1423:
+	printk(KERN_NOTICE "Attached scsi %sdisk %s at: ",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#166: FILE: drivers/scsi/sd.c:1426:
+	printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#177: FILE: drivers/scsi/sd.c:1459:
+	SCSI_LOG_HLQUEUE(3, { printk("sd_detach: scsi_device: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#179: FILE: drivers/scsi/sd.c:1461:
+				printk("\n");});

ERROR:SPACING: space required after that ';' (ctx:VxV)
#179: FILE: drivers/scsi/sd.c:1461:
+				printk("\n");});
 				            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: drivers/scsi/sg.c:253:
+	struct Scsi_Host * shp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#201: FILE: drivers/scsi/sg.c:265:
+	if (shp == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!sdp->detached'
#223: FILE: drivers/scsi/sg.c:323:
+	if ((!sdp->detached) && shp->hostt->module)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: drivers/scsi/sg.c:334:
+	struct Scsi_Host * shp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: drivers/scsi/sg.c:758:
+	struct Scsi_Host * shp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#265: FILE: drivers/scsi/sg.c:834:
+			if (shp == NULL)

CHECK:SPACING: No space is necessary after a cast
#277: FILE: drivers/scsi/sg.c:853:
+			__put_user((int) scsi_path.spi_shpnt->host_no,

CHECK:SPACING: No space is necessary after a cast
#280: FILE: drivers/scsi/sg.c:855:
+			__put_user((int) scsi_path.spi_channel,

CHECK:SPACING: No space is necessary after a cast
#284: FILE: drivers/scsi/sg.c:857:
+			__put_user((int) scsi_path.spi_id, &sg_idp->scsi_id);

CHECK:SPACING: No space is necessary after a cast
#285: FILE: drivers/scsi/sg.c:858:
+			__put_user((int) scsi_path.spi_lun, &sg_idp->lun);

CHECK:SPACING: No space is necessary after a cast
#288: FILE: drivers/scsi/sg.c:860:
+			__put_user((short) scsi_path.spi_shpnt->cmd_per_lun,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#298: FILE: drivers/scsi/sg.c:977:
+		if (shp == NULL)

CHECK:SPACING: No space is necessary after a cast
#300: FILE: drivers/scsi/sg.c:979:
+		return put_user(shp->hostt->emulated, (int *) arg);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#307: FILE: drivers/scsi/sg.c:985:
+			if (shp == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#317: FILE: drivers/scsi/sg.c:1248:
+	struct Scsi_Host * shp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#337: FILE: drivers/scsi/sg.c:1461:
+	struct Scsi_Host * shp;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#350: FILE: drivers/scsi/sg.c:1493:
+		printk(KERN_WARNING "Unable to attach sg device ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#352: FILE: drivers/scsi/sg.c:1495:
+		printk(KERN_WARNING " type=%d, minor number exceed %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#376: FILE: drivers/scsi/sg.c:1557:
+		printk(KERN_NOTICE "Attached scsi generic sg%d type %d at ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: drivers/scsi/sg.c:1558:
+		printk(KERN_NOTICE "Attached scsi generic sg%d type %d at ",
+			k, scsidp->type);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#387: FILE: drivers/scsi/sg.c:1575:
+	struct Scsi_Host * shp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#418: FILE: drivers/scsi/sg.c:1691:
+	struct Scsi_Host * shp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#424: FILE: drivers/scsi/sg.c:1697:
+	if (shp == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#437: FILE: drivers/scsi/sg.c:2486:
+	struct Scsi_Host * shp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#448: FILE: drivers/scsi/sg.c:2500:
+	    ((shp == NULL) ? 1 : shp->unchecked_isa_dma) : 1;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#456: FILE: drivers/scsi/sg.c:2560:
+	struct Scsi_Host * shp;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#476: FILE: drivers/scsi/sg.c:3026:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: drivers/scsi/sg.c:3028:
+^I^I^I^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: drivers/scsi/sg.c:3033:
+^I^I^I^I^I^Ibuffer + bar, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/scsi/sg.c:3033:
+					foo = scsi_paths_proc_print_paths(scd,
+						buffer + bar, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: drivers/scsi/sg.c:3074:
+^I^I^I/* $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/scsi/sg.c:3078:
+			PRINT_PROC("%d\t%d\t%d\t%d\t%d\n",
+				(int)scsidp->type,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#568: FILE: drivers/scsi/sr.c:498:
+	printk("Attached scsi CD-ROM %s at: ", scsi_CDs[i].cdi.name);

CHECK:CAMELCASE: Avoid CamelCase: <scsi_CDs>
#568: FILE: drivers/scsi/sr.c:498:
+	printk("Attached scsi CD-ROM %s at: ", scsi_CDs[i].cdi.name);

CHECK:CAMELCASE: Avoid CamelCase: <SDp>
#569: FILE: drivers/scsi/sr.c:499:
+	scsi_paths_printk(SDp, "; ", "scsi%d, channel %d, id %d, lun %d");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#570: FILE: drivers/scsi/sr.c:500:
+	printk("\n");

CHECK:CAMELCASE: Avoid CamelCase: <SHpnt>
#589: FILE: drivers/scsi/sr_ioctl.c:82:
+	struct Scsi_Host *SHpnt;

CHECK:CAMELCASE: Avoid CamelCase: <SDev>
#598: FILE: drivers/scsi/sr_ioctl.c:97:
+	SHpnt = scsi_get_host(SDev);

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#620: FILE: drivers/scsi/st.c:996:
+	SHpnt = scsi_get_host(STp->device);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: drivers/scsi/st.c:997:
+^Iif (!SHpnt) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#634: FILE: drivers/scsi/st.c:1043:
+	if (SHpnt->hostt->module)
+	    __MOD_DEC_USE_COUNT(SHpnt->hostt->module);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#672: FILE: drivers/scsi/st.c:3698:
+		printk(KERN_INFO "st: Found incompatible tape at ");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: drivers/scsi/st.c:3699:
+^I^Iscsi_paths_printk(SDp, KERN_INFO "\t", $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!SHpnt"
#681: FILE: drivers/scsi/st.c:3706:
+	if (SHpnt == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#708: FILE: drivers/scsi/st.c:3808:
+	if (SHpnt->highmem_io) {
[...]
-	} else if (SDp->host->unchecked_isa_dma)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#730: FILE: drivers/scsi/st.c:3902:
+	printk(KERN_WARNING "Attached scsi tape st%d at ", dev_num);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 16 warnings, 29 checks, 634 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
