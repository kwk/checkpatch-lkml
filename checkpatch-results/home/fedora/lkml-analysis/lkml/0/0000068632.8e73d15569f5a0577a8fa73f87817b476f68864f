WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> > > This code gets only limited testing in -mm, it needs to run for weeks 

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: include/linux/clocksource.h:193:
+	int adj = 0;
+	while (1) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'convergance' may be misspelled - perhaps 'convergence'?
#220: FILE: include/linux/clocksource.h:203:
+#define MAXOFFADJ 4 /* vary max oscillation vs convergance speed */
                                                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'aproximates' may be misspelled - perhaps 'approximates'?
#240: FILE: include/linux/clocksource.h:217:
+ * If the error value is large enough, this function aproximates
                                                      ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: include/linux/clocksource.h:218:
+ * the frequency and offset adjustment, and applies it to the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: include/linux/clocksource.h:231:
+ *         This makes adjustments based on the error accumulated in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: include/linux/clocksource.h:232:
+ *         the last period (in otherwords, the different in error from $

WARNING:TYPO_SPELLING: 'aditional' may be misspelled - perhaps 'additional'?
#265: FILE: include/linux/clocksource.h:252:
+ * An aditional complication: Since we are adjusting the base value,
       ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: include/linux/clocksource.h:258:
+static inline s64 clocksource_adj(struct clocksource *clock,
+				cycle_t cycles_delta, s64* total_error,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#273: FILE: include/linux/clocksource.h:258:
+				cycle_t cycles_delta, s64* total_error,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: include/linux/clocksource.h:263:
+^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'error > (s64)clock->interval_cycles'
#303: FILE: include/linux/clocksource.h:264:
+	if ((error > (s64)clock->interval_cycles)
+		||(error < -((s64)clock->interval_cycles)) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#304: FILE: include/linux/clocksource.h:265:
+	if ((error > (s64)clock->interval_cycles)
+		||(error < -((s64)clock->interval_cycles)) ) {

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#304: FILE: include/linux/clocksource.h:265:
+		||(error < -((s64)clock->interval_cycles)) ) {
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#304: FILE: include/linux/clocksource.h:265:
+		||(error < -((s64)clock->interval_cycles)) ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#305: FILE: include/linux/clocksource.h:266:
+		||(error < -((s64)clock->interval_cycles)) ) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: include/linux/clocksource.h:271:
+^I^I *   The idea here is to look at the error $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: include/linux/clocksource.h:272:
+^I^I *   accumulated since the last call to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: include/linux/clocksource.h:273:
+^I^I *   update_wall_time to determine the $

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: include/linux/clocksource.h:286:
+		if(interval_error >= 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: include/linux/clocksource.h:293:
+^I^I^Iadj = error_aproximation(-interval_error, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: include/linux/clocksource.h:294:
+			adj = error_aproximation(-interval_error, 
+						interval_cycs, 0);

WARNING:TYPO_SPELLING: 'frequncy' may be misspelled - perhaps 'frequency'?
#339: FILE: include/linux/clocksource.h:300:
+		 *   Now that the frequncy is fixed, we
 		                  ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: include/linux/clocksource.h:303:
+^I^I *   However, we must be careful as if we make too $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: include/linux/clocksource.h:304:
+^I^I *   sudden an adjustment we might overshoot. So we $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: include/linux/clocksource.h:305:
+^I^I *   limit the amount of change to spread the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: include/linux/clocksource.h:306:
+^I^I *   adjustment (using MAXOFFADJ) over a longer $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: include/linux/clocksource.h:313:
+^I^I *   hopes that the next sample will be similar in $

ERROR:SPACING: space required before the open parenthesis '('
#355: FILE: include/linux/clocksource.h:316:
+		if(error >= 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: include/linux/clocksource.h:317:
+^I^I^Iadj = error_aproximation(error, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: include/linux/clocksource.h:318:
+			adj = error_aproximation(error, 
+						interval_cycs, MAXOFFADJ);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#358: FILE: include/linux/clocksource.h:319:
+			multadj += 1<<adj;
 			            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#359: FILE: include/linux/clocksource.h:320:
+			snsec_update += clock->interval_cycles <<adj;
 			                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: include/linux/clocksource.h:324:
+			adj = error_aproximation(-error,
+						interval_cycs, MAXOFFADJ);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#364: FILE: include/linux/clocksource.h:325:
+			multadj -= 1<<adj;
 			            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#365: FILE: include/linux/clocksource.h:326:
+			snsec_update -= clock->interval_cycles <<adj;
 			                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: include/linux/clocksource.h:331:
+^I^Iclock->interval_snsecs += snsec_update;;^I^I$

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#370: FILE: include/linux/clocksource.h:331:
+		clock->interval_snsecs += snsec_update;;		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: kernel/timer.c:1030:
+^Icycle_t now, offset, interval_cycs = 0; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000068632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 7 warnings, 11 checks, 248 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000068632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
