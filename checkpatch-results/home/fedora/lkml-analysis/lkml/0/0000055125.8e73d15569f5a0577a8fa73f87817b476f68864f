WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#48: FILE: block/ll_rw_blk.c:231:
+EXPORT_SYMBOL_GPL(blk_queue_rq_timed_out);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#105: FILE: block/ll_rw_blk.c:3449:
+EXPORT_SYMBOL_GPL(blk_delete_timer);

WARNING:REPEATED_WORD: Possible repeated word: 'Request'
#130: FILE: block/ll_rw_blk.c:3474:
+ * blk_abort_req -- Request request recovery for the specified command

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: block/ll_rw_blk.c:3484:
+        if (!blk_delete_timer(req))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: block/ll_rw_blk.c:3484:
+        if (!blk_delete_timer(req))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: block/ll_rw_blk.c:3485:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: block/ll_rw_blk.c:3485:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: block/ll_rw_blk.c:3486:
+        blk_rq_timed_out(req);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: block/ll_rw_blk.c:3486:
+        blk_rq_timed_out(req);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#145: FILE: block/ll_rw_blk.c:3489:
+EXPORT_SYMBOL_GPL(blk_abort_req);

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: block/ll_rw_blk.c:3517:
+        add_timer(&req->timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: block/ll_rw_blk.c:3517:
+        add_timer(&req->timer);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#176: FILE: block/ll_rw_blk.c:3520:
+EXPORT_SYMBOL_GPL(blk_add_timer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#193: FILE: block/ll_rw_blk.c:3538:
+EXPORT_SYMBOL_GPL(__blk_complete_request);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#275: FILE: include/linux/blkdev.h:669:
+extern void __blk_complete_request(struct request *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#275: FILE: include/linux/blkdev.h:669:
+extern void __blk_complete_request(struct request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: include/linux/blkdev.h:670:
+extern void blk_abort_req(struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#276: FILE: include/linux/blkdev.h:670:
+extern void blk_abort_req(struct request *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: include/linux/blkdev.h:671:
+extern int blk_delete_timer(struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#277: FILE: include/linux/blkdev.h:671:
+extern int blk_delete_timer(struct request *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#278: FILE: include/linux/blkdev.h:672:
+extern void blk_add_timer(struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#278: FILE: include/linux/blkdev.h:672:
+extern void blk_add_timer(struct request *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: include/linux/blkdev.h:734:
+extern void blk_queue_rq_timed_out(request_queue_t *, rq_timed_out_fn *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#295: FILE: include/linux/blkdev.h:734:
+extern void blk_queue_rq_timed_out(request_queue_t *, rq_timed_out_fn *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'rq_timed_out_fn *' should also have an identifier name
#295: FILE: include/linux/blkdev.h:734:
+extern void blk_queue_rq_timed_out(request_queue_t *, rq_timed_out_fn *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#296: FILE: include/linux/blkdev.h:735:
+extern void blk_queue_rq_timeout(request_queue_t *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#296: FILE: include/linux/blkdev.h:735:
+extern void blk_queue_rq_timeout(request_queue_t *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#296: FILE: include/linux/blkdev.h:735:
+extern void blk_queue_rq_timeout(request_queue_t *, unsigned int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000055125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 18 warnings, 6 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000055125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
