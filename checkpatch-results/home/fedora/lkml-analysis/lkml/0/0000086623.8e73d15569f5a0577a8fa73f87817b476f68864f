WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# size */aic7*xx.o

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#130: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:16:
+	if (ahd->src_mode == AHD_MODE_UNKNOWN
+	 || ahd->dst_mode == AHD_MODE_UNKNOWN)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#161: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:47:
+	if (ahd->src_mode == AHD_MODE_UNKNOWN
+	 || ahd->dst_mode == AHD_MODE_UNKNOWN)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#164: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:50:
+	return (ahd_build_mode_state(ahd, ahd->src_mode, ahd->dst_mode));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#195: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:81:
+	if (ahd->saved_src_mode != AHD_MODE_UNKNOWN
+	 && ahd->saved_dst_mode != AHD_MODE_UNKNOWN) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#214: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:100:
+	if (sizeof(dma_addr_t) > 4
+	 && (ahd->flags & AHD_64BIT_ADDRESSING) != 0) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#221: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:107:
+		return (sg + 1);
+	} else {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#248: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:134:
+	if (scb->hscb->cdb_len <= MAX_CDB_LEN_WITH_SENSE_ADDR
+	 || (scb->hscb->cdb_len & SCB_CDB_LEN_PTR) != 0)

WARNING:TYPO_SPELLING: 'ponter' may be misspelled - perhaps 'pointer'?
#257: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:143:
+	 * Copy the first SG into the "current" data ponter area.
 	                                             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#267: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:153:
+		uint32_t *dataptr_words;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#270: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:156:
+		dataptr_words = (uint32_t*)&scb->hscb->dataptr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#274: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:160:
+			uint64_t high_addr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:169:
+^I * We also set the full residual flag which the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#287: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:173:
+	scb->hscb->sgptr = ahd_htole32(scb->sg_list_busaddr|SG_FULL_RESID);
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Miscelaneous' may be misspelled - perhaps 'Miscellaneous'?
#290: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:176:
+/*********************** Miscelaneous Support Functions ***********************/
                          ^^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#299: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:185:
+	return ((ahd_inb(ahd, port+1) << 8) | ahd_inb(ahd, port));
 	                          ^

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#306: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:192:
+	 * Write low byte first to accomodate registers
 	                           ^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#310: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:196:
+	ahd_outb(ahd, port+1, (value >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#317: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:203:
+	      | (ahd_inb(ahd, port+1) << 8)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#318: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:204:
+	      | (ahd_inb(ahd, port+2) << 16)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#319: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:205:
+	      | (ahd_inb(ahd, port+3) << 24));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#326: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:212:
+	ahd_outb(ahd, port+1, ((value) >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#327: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:213:
+	ahd_outb(ahd, port+2, ((value) >> 16) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#328: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:214:
+	ahd_outb(ahd, port+3, ((value) >> 24) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#335: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:221:
+	      | (ahd_inb(ahd, port+1) << 8)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#336: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:222:
+	      | (ahd_inb(ahd, port+2) << 16)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#337: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:223:
+	      | (ahd_inb(ahd, port+3) << 24)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#338: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:224:
+	      | (((uint64_t)ahd_inb(ahd, port+4)) << 32)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#339: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:225:
+	      | (((uint64_t)ahd_inb(ahd, port+5)) << 40)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#340: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:226:
+	      | (((uint64_t)ahd_inb(ahd, port+6)) << 48)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#341: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:227:
+	      | (((uint64_t)ahd_inb(ahd, port+7)) << 56));
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#348: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:234:
+	ahd_outb(ahd, port+1, (value >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:235:
+	ahd_outb(ahd, port+2, (value >> 16) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#350: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:236:
+	ahd_outb(ahd, port+3, (value >> 24) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#351: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:237:
+	ahd_outb(ahd, port+4, (value >> 32) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#352: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:238:
+	ahd_outb(ahd, port+5, (value >> 40) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#353: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:239:
+	ahd_outb(ahd, port+6, (value >> 48) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#354: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:240:
+	ahd_outb(ahd, port+7, (value >> 56) & 0xFF);
 	                  ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#360: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:246:
+	struct scb* scb;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scb"
#365: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:251:
+	if (scb != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#367: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:253:
+			     BUS_DMASYNC_POSTREAD|BUS_DMASYNC_POSTWRITE);
 			                         ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#368: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:254:
+	return (scb);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#376: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:262:
+	uint32_t saved_hscb_busaddr;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#435: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:321:
+	ahd_sync_scb(ahd, scb, BUS_DMASYNC_PREREAD|BUS_DMASYNC_PREWRITE);
 	                                          ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#439: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:325:
+		uint64_t host_dataptr;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#476: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:362:
+	if ((ahd->flags & AHD_TARGETROLE) != 0
+	 && (ahd->flags & AHD_TQINFIFO_BLOCKED) == 0) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#504: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:390:
+		return (0);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#514: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:400:
+	if ((ahd->flags & AHD_ALL_INTERRUPTS) == 0
+	 && (ahd_check_cmdcmpltqueues(ahd) != 0))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#563: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:449:
+	} else if ((intstat & (PCIINT|SPLTINT)) != 0) {
 	                             ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#566: FILE: drivers/scsi/aic7xxx/aic79xx_inline.c:452:
+	} else {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: drivers/scsi/aic7xxx/aic79xx_inline.h:67:
+void ahd_set_modes(struct ahd_softc *ahd, ahd_mode src,
 				   ahd_mode dst);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/scsi/aic7xxx/aic79xx_inline.h:74:
+void ahd_restore_modes(struct ahd_softc *ahd,
 				       ahd_mode_state state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: drivers/scsi/aic7xxx/aic79xx_inline.h:150:
+void	*ahd_sg_setup(struct ahd_softc *ahd, struct scb *scb,
 				      void *sgptr, dma_addr_t addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/scsi/aic7xxx/aic79xx_inline.h:153:
+void	 ahd_setup_scb_common(struct ahd_softc *ahd,
 					      struct scb *scb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: drivers/scsi/aic7xxx/aic79xx_inline.h:155:
+void	 ahd_setup_data_scb(struct ahd_softc *ahd,
 					    struct scb *scb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/scsi/aic7xxx/aic79xx_inline.h:291:
+void	ahd_swap_with_next_hscb(struct ahd_softc *ahd,
 						struct scb *scb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1179: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:230:
+void ahd_timer_reset(ahd_timer_t *timer, int usec,
 				     ahd_callback_t *func, void *arg);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#1216: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:389:
+void ahd_delay(long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1223: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:392:
+uint8_t ahd_inb(struct ahd_softc * ahd, long port);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1224: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:393:
+uint16_t ahd_inw_atomic(struct ahd_softc * ahd, long port);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1225: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:394:
+void ahd_outb(struct ahd_softc * ahd, long port, uint8_t val);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1226: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:395:
+void ahd_outw_atomic(struct ahd_softc * ahd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1227: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:396:
+void ahd_outw_atomic(struct ahd_softc * ahd,
 				     long port, uint16_t val);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1229: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:397:
+void ahd_outsb(struct ahd_softc * ahd, long port,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uint8_t *' should also have an identifier name
#1229: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:397:
+void ahd_outsb(struct ahd_softc * ahd, long port,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1230: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:398:
+void ahd_outsb(struct ahd_softc * ahd, long port,
 			       uint8_t *, int count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1232: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:399:
+void ahd_insb(struct ahd_softc * ahd, long port,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uint8_t *' should also have an identifier name
#1232: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:399:
+void ahd_insb(struct ahd_softc * ahd, long port,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1233: FILE: drivers/scsi/aic7xxx/aic79xx_osm.h:400:
+void ahd_insb(struct ahd_softc * ahd, long port,
 			       uint8_t *, int count);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1346: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:1:
+/*

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1362: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:17:
+	timer->expires = jiffies + (usec * HZ)/1000000;
 	                                      ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1363: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:18:
+	timer->function = (ahd_linux_callback_t*)func;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1384: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:39:
+ahd_inb(struct ahd_softc * ahd, long port)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1386: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:41:
+	uint8_t x;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1388: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:43:
+	if (ahd->tags[0] == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#1393: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:48:
+	mb();

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1394: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:49:
+	return (x);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1398: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:53:
+ahd_inw_atomic(struct ahd_softc * ahd, long port)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1400: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:55:
+	uint8_t x;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1402: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:57:
+	if (ahd->tags[0] == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#1407: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:62:
+	mb();

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1408: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:63:
+	return (x);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1412: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:67:
+ahd_outb(struct ahd_softc * ahd, long port, uint8_t val)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1414: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:69:
+	if (ahd->tags[0] == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#1419: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:74:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1423: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:78:
+ahd_outw_atomic(struct ahd_softc * ahd, long port, uint16_t val)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1425: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:80:
+	if (ahd->tags[0] == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#1430: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:85:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1434: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:89:
+ahd_outsb(struct ahd_softc * ahd, long port, uint8_t *array, int count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1448: FILE: drivers/scsi/aic7xxx/aic79xx_osm_o.c:103:
+ahd_insb(struct ahd_softc * ahd, long port, uint8_t *array, int count)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1478: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:1:
+/*

WARNING:TYPO_SPELLING: 'Miscelaneous' may be misspelled - perhaps 'Miscellaneous'?
#1485: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:8:
+/*********************** Miscelaneous Support Functions ***********************/
                          ^^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1489: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:12:
+	return ((ahc_inb(ahc, port+1) << 8) | ahc_inb(ahc, port));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1496: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:19:
+	ahc_outb(ahc, port+1, (value >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1503: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:26:
+	      | (ahc_inb(ahc, port+1) << 8)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1504: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:27:
+	      | (ahc_inb(ahc, port+2) << 16)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1505: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:28:
+	      | (ahc_inb(ahc, port+3) << 24));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1512: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:35:
+	ahc_outb(ahc, port+1, ((value) >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1513: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:36:
+	ahc_outb(ahc, port+2, ((value) >> 16) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1514: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:37:
+	ahc_outb(ahc, port+3, ((value) >> 24) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1521: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:44:
+	      | (ahc_inb(ahc, port+1) << 8)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1522: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:45:
+	      | (ahc_inb(ahc, port+2) << 16)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1523: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:46:
+	      | (ahc_inb(ahc, port+3) << 24)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1524: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:47:
+	      | (((uint64_t)ahc_inb(ahc, port+4)) << 32)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1525: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:48:
+	      | (((uint64_t)ahc_inb(ahc, port+5)) << 40)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1526: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:49:
+	      | (((uint64_t)ahc_inb(ahc, port+6)) << 48)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1527: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:50:
+	      | (((uint64_t)ahc_inb(ahc, port+7)) << 56));
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1534: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:57:
+	ahc_outb(ahc, port+1, (value >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1535: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:58:
+	ahc_outb(ahc, port+2, (value >> 16) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1536: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:59:
+	ahc_outb(ahc, port+3, (value >> 24) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1537: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:60:
+	ahc_outb(ahc, port+4, (value >> 32) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1538: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:61:
+	ahc_outb(ahc, port+5, (value >> 40) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1539: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:62:
+	ahc_outb(ahc, port+6, (value >> 48) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1540: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:63:
+	ahc_outb(ahc, port+7, (value >> 56) & 0xFF);
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1551: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:74:
+	if ((scb = SLIST_FIRST(&ahc->scb_data->free_scbs)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scb"
#1554: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:77:
+		if (scb == NULL)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1558: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:81:
+	return (scb);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1566: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:89:
+{       $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1584: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:107:
+	struct scb* scb;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scb"
#1587: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:110:
+	if (scb != NULL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1589: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:112:
+			     BUS_DMASYNC_POSTREAD|BUS_DMASYNC_POSTWRITE);
 			                         ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1590: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:113:
+	return (scb);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1639: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:162:
+	if (scb->hscb->tag == SCB_LIST_NULL
+	 || scb->hscb->next == SCB_LIST_NULL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1659: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:182:
+	ahc_sync_scb(ahc, scb, BUS_DMASYNC_PREREAD|BUS_DMASYNC_PREWRITE);
 	                                          ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1693: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:216:
+	if ((ahc->flags & AHC_TARGETROLE) != 0
+	 && (ahc->flags & AHC_TQINFIFO_BLOCKED) == 0) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1721: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:244:
+		return (0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1729: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:252:
+	if ((ahc->flags & (AHC_ALL_INTERRUPTS|AHC_EDGE_INTERRUPT)) == 0
 	                                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1729: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:252:
+	if ((ahc->flags & (AHC_ALL_INTERRUPTS|AHC_EDGE_INTERRUPT)) == 0
[...]
+	else {
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1730: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:253:
+	if ((ahc->flags & (AHC_ALL_INTERRUPTS|AHC_EDGE_INTERRUPT)) == 0
+	 && (ahc_check_cmdcmpltqueues(ahc) != 0))

CHECK:BRACES: Unbalanced braces around else statement
#1732: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:255:
+	else {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1741: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:264:
+			if ((ahc->chip & AHC_PCI) != 0
+			 && (ahc_inb(ahc, ERROR) & PCIERRSTAT) != 0)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1746: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:269:
+		return (0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1777: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:300:
+	} else if ((intstat & (SEQINT|SCSIINT)) != 0) {
 	                             ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1778: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.c:301:
+	} else if ((intstat & (SEQINT|SCSIINT)) != 0) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1824: FILE: drivers/scsi/aic7xxx/aic7xxx_inline.h:253:
+void	ahc_swap_with_next_hscb(struct ahc_softc *ahc,
 						struct scb *scb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2167: FILE: drivers/scsi/aic7xxx/aic7xxx_osm.c:397:
+static int ahc_linux_map_seg(struct ahc_softc *ahc, struct scb *scb,
 		 		      struct ahc_dma_seg *sg,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#2210: FILE: drivers/scsi/aic7xxx/aic7xxx_osm.h:390:
+void ahc_delay(long);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2272: FILE: drivers/scsi/aic7xxx/aic7xxx_osm.h:393:
+uint8_t ahc_inb(struct ahc_softc * ahc, long port);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2273: FILE: drivers/scsi/aic7xxx/aic7xxx_osm.h:394:
+void ahc_outb(struct ahc_softc * ahc, long port, uint8_t val);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2274: FILE: drivers/scsi/aic7xxx/aic7xxx_osm.h:395:
+void ahc_outsb(struct ahc_softc * ahc, long port,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uint8_t *' should also have an identifier name
#2274: FILE: drivers/scsi/aic7xxx/aic7xxx_osm.h:395:
+void ahc_outsb(struct ahc_softc * ahc, long port,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2276: FILE: drivers/scsi/aic7xxx/aic7xxx_osm.h:397:
+void ahc_insb(struct ahc_softc * ahc, long port,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uint8_t *' should also have an identifier name
#2276: FILE: drivers/scsi/aic7xxx/aic7xxx_osm.h:397:
+void ahc_insb(struct ahc_softc * ahc, long port,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2277: FILE: drivers/scsi/aic7xxx/aic7xxx_osm.h:398:
+void ahc_insb(struct ahc_softc * ahc, long port,
+	       uint8_t *, int count);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2311: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:1:
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2335: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:25:
+ahc_inb(struct ahc_softc * ahc, long port)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#2337: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:27:
+	uint8_t x;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2339: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:29:
+	if (ahc->tag == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#2344: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:34:
+	mb();

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2345: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:35:
+	return (x);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2349: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:39:
+ahc_outb(struct ahc_softc * ahc, long port, uint8_t val)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2351: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:41:
+	if (ahc->tag == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#2356: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:46:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2360: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:50:
+ahc_outsb(struct ahc_softc * ahc, long port, uint8_t *array, int count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2374: FILE: drivers/scsi/aic7xxx/aic7xxx_osm_o.c:64:
+ahc_insb(struct ahc_softc * ahc, long port, uint8_t *array, int count)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086623.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 28 warnings, 91 checks, 2243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086623.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
