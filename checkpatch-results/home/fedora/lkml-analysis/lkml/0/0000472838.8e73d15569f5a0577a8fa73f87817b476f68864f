ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: fs/dquot.c:404:
+^I^Iif ((cnt == type || type == -1) && sb_has_quota_enabled(sb, cnt) && $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#82: FILE: fs/dquot.c:404:
info_dirty(&dqopt->info[cnt]))

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: fs/dquot.c:405:
+		if ((cnt == type || type == -1) && sb_has_quota_enabled(sb, cnt) && 
+			dqopt->ops[cnt]->write_file_info(sb, cnt);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#101: FILE: fs/dquot.c:422:
+			if ((type == cnt || type == -1) && sb_has_quota_enabled(sb, cnt)
+			    && sb_dqopt(sb)->info[cnt].dqi_flags & DQF_ANY_DQUOT_DIRTY)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#123: FILE: fs/dquot.c:444:
+		if ((sb = get_super(dev))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#130: FILE: fs/dquot.c:451:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#130: FILE: fs/dquot.c:451:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#211: FILE: include/linux/quota.h:182:
+#define info_any_dirty(info) ((info)->dqi_flags & DQF_INFO_DIRTY ||\
+			      (info)->dqi_flags & DQF_ANY_DQUOT_DIRTY)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: include/linux/quota.h:285:
+^Istruct semaphore dqoff_sem;^I^I/* serialize quota_off() and quota_on() on $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#244: FILE: include/linux/quota.h:286:
+	struct semaphore dqoff_sem;		/* serialize quota_off() and quota_on() on 
+	struct file *files[MAXQUOTAS];		/* fp's to quotafiles */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: include/linux/quota.h:291:
+/* Inline would be better but we need to dereference super_block which is $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#251: FILE: include/linux/quota.h:292:
+/* Inline would be better but we need to dereference super_block which is 
+#define mark_dquot_dirty(dquot) do {\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: include/linux/quota.h:294:
+^Isb_dqopt(dquot->dq_sb)->info[dquot->dq_type].dqi_flags |= $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#270: FILE: include/linux/quotaops.h:43:
+extern void sync_dquots_dev(kdev_t dev, int type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#271: FILE: include/linux/quotaops.h:44:
+extern void sync_dquots_sb(struct super_block *sb, int type);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sb' - possible side-effects?
#283: FILE: include/linux/quotaops.h:189:
+#define DQUOT_OFF(sb)		((sb)->s_qcop->quota_off(sb, -1))

ERROR:SPACING: space required before the open parenthesis '('
#292: FILE: include/linux/quotaops.h:202:
+#define DQUOT_SYNC_DEV(dev)			do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#293: FILE: include/linux/quotaops.h:203:
+#define DQUOT_SYNC_SB(sb)			do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472838.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 2 warnings, 7 checks, 233 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472838.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
