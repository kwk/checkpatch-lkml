WARNING:TYPO_SPELLING: 'NWE' may be misspelled - perhaps 'NEW'?
#27: 
OMAP MPUIO pins and ALE, CLE, NCE, NRE, NWE and NWP all connected to the
                                        ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#39: 
Signed-Off-By: Jonathan McDowell <noodles@earth.li>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: drivers/mtd/nand/ams-delta.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#47: FILE: drivers/mtd/nand/ams-delta.c:2:
+ *  drivers/mtd/nand/ams-delta.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#69: FILE: drivers/mtd/nand/ams-delta.c:24:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#78: FILE: drivers/mtd/nand/ams-delta.c:33:
+static struct mtd_info *ams_delta_mtd = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LONG_LINE: line length of 185 exceeds 100 columns
#80: FILE: drivers/mtd/nand/ams-delta.c:35:
+#define NAND_MASK (AMS_DELTA_LATCH2_NAND_NRE | AMS_DELTA_LATCH2_NAND_NWE | AMS_DELTA_LATCH2_NAND_CLE | AMS_DELTA_LATCH2_NAND_ALE | AMS_DELTA_LATCH2_NAND_NCE | AMS_DELTA_LATCH2_NAND_NWP)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#83: FILE: drivers/mtd/nand/ams-delta.c:38:
+#define T_NAND_CTL_SETALE(iob) ams_delta_latch2_write(AMS_DELTA_LATCH2_NAND_ALE, AMS_DELTA_LATCH2_NAND_ALE)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#85: FILE: drivers/mtd/nand/ams-delta.c:40:
+#define T_NAND_CTL_SETCLE(iob) ams_delta_latch2_write(AMS_DELTA_LATCH2_NAND_CLE, AMS_DELTA_LATCH2_NAND_CLE)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#87: FILE: drivers/mtd/nand/ams-delta.c:42:
+#define T_NAND_CTL_CLRNCE(iob) ams_delta_latch2_write(AMS_DELTA_LATCH2_NAND_NCE, AMS_DELTA_LATCH2_NAND_NCE)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#116: FILE: drivers/mtd/nand/ams-delta.c:71:
+ *	hardware specific access to control-lines
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#120: FILE: drivers/mtd/nand/ams-delta.c:75:
+	switch(cmd){
[...]
+		case NAND_CTL_SETCLE: T_NAND_CTL_SETCLE(cmd); break;
+		case NAND_CTL_CLRCLE: T_NAND_CTL_CLRCLE(cmd); break;
[...]
+		case NAND_CTL_SETALE: T_NAND_CTL_SETALE(cmd); break;
+		case NAND_CTL_CLRALE: T_NAND_CTL_CLRALE(cmd); break;
[...]
+		case NAND_CTL_SETNCE: T_NAND_CTL_SETNCE(cmd); break;
+		case NAND_CTL_CLRNCE: T_NAND_CTL_CLRNCE(cmd); break;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open brace '{'
#120: FILE: drivers/mtd/nand/ams-delta.c:75:
+	switch(cmd){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#120: FILE: drivers/mtd/nand/ams-delta.c:75:
+	switch(cmd){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#121: FILE: drivers/mtd/nand/ams-delta.c:76:
+	switch(cmd){
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#122: FILE: drivers/mtd/nand/ams-delta.c:77:
+		case NAND_CTL_SETCLE: T_NAND_CTL_SETCLE(cmd); break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#123: FILE: drivers/mtd/nand/ams-delta.c:78:
+		case NAND_CTL_CLRCLE: T_NAND_CTL_CLRCLE(cmd); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#125: FILE: drivers/mtd/nand/ams-delta.c:80:
+		case NAND_CTL_SETALE: T_NAND_CTL_SETALE(cmd); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#126: FILE: drivers/mtd/nand/ams-delta.c:81:
+		case NAND_CTL_CLRALE: T_NAND_CTL_CLRALE(cmd); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#128: FILE: drivers/mtd/nand/ams-delta.c:83:
+		case NAND_CTL_SETNCE: T_NAND_CTL_SETNCE(cmd); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#129: FILE: drivers/mtd/nand/ams-delta.c:84:
+		case NAND_CTL_CLRNCE: T_NAND_CTL_CLRNCE(cmd); break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/mtd/nand/ams-delta.c:97:
+	ams_delta_latch2_write(AMS_DELTA_LATCH2_NAND_NWE,
+			AMS_DELTA_LATCH2_NAND_NWE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: drivers/mtd/nand/ams-delta.c:110:
+	ams_delta_latch2_write(AMS_DELTA_LATCH2_NAND_NRE,
+			AMS_DELTA_LATCH2_NAND_NRE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/mtd/nand/ams-delta.c:116:
+static void ams_delta_write_buf(struct mtd_info *mtd, const u_char *buf,
+		int len)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#165: FILE: drivers/mtd/nand/ams-delta.c:120:
+	for (i=0; i<len; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#165: FILE: drivers/mtd/nand/ams-delta.c:120:
+	for (i=0; i<len; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#173: FILE: drivers/mtd/nand/ams-delta.c:128:
+	for (i=0; i<len; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#173: FILE: drivers/mtd/nand/ams-delta.c:128:
+	for (i=0; i<len; i++)
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: drivers/mtd/nand/ams-delta.c:133:
+static int ams_delta_verify_buf(struct mtd_info *mtd, const u_char *buf,
+		int len)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#182: FILE: drivers/mtd/nand/ams-delta.c:137:
+	for (i=0; i<len; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#182: FILE: drivers/mtd/nand/ams-delta.c:137:
+	for (i=0; i<len; i++)
 	           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: drivers/mtd/nand/ams-delta.c:152:
+int __init ams_delta_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: drivers/mtd/nand/ams-delta.c:158:
+	ams_delta_mtd = kmalloc (sizeof(struct mtd_info) +

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ams_delta_mtd)...) over kmalloc(sizeof(struct mtd_info)...)
#203: FILE: drivers/mtd/nand/ams-delta.c:158:
+	ams_delta_mtd = kmalloc (sizeof(struct mtd_info) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: drivers/mtd/nand/ams-delta.c:159:
+					sizeof (struct nand_chip), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#206: FILE: drivers/mtd/nand/ams-delta.c:161:
+		printk (KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: drivers/mtd/nand/ams-delta.c:161:
+		printk (KERN_WARNING

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#206: FILE: drivers/mtd/nand/ams-delta.c:161:
+	if (!ams_delta_mtd) {
+		printk (KERN_WARNING

CHECK:SPACING: No space is necessary after a cast
#215: FILE: drivers/mtd/nand/ams-delta.c:170:
+	this = (struct nand_chip *) (&ams_delta_mtd[1]);

CHECK:SPACING: No space is necessary after a cast
#218: FILE: drivers/mtd/nand/ams-delta.c:173:
+	memset((char *) ams_delta_mtd, 0, sizeof(struct mtd_info));

CHECK:SPACING: No space is necessary after a cast
#219: FILE: drivers/mtd/nand/ams-delta.c:174:
+	memset((char *) this, 0, sizeof(struct nand_chip));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#237: FILE: drivers/mtd/nand/ams-delta.c:192:
+		printk(KERN_NOTICE

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#245: FILE: drivers/mtd/nand/ams-delta.c:200:
+	ams_delta_latch2_write(NAND_MASK, AMS_DELTA_LATCH2_NAND_NRE | \

WARNING:TYPO_SPELLING: 'existance' may be misspelled - perhaps 'existence'?
#249: FILE: drivers/mtd/nand/ams-delta.c:204:
+        /* Scan to find existance of the device */
                         ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/mtd/nand/ams-delta.c:204:
+        /* Scan to find existance of the device */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#250: FILE: drivers/mtd/nand/ams-delta.c:205:
+	if (nand_scan (ams_delta_mtd, 1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/mtd/nand/ams-delta.c:212:
+	add_mtd_partitions(ams_delta_mtd, partition_info,
+			ARRAY_SIZE(partition_info));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#262: FILE: drivers/mtd/nand/ams-delta.c:217:
+	kfree (ams_delta_mtd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: drivers/mtd/nand/ams-delta.c:227:
+static void __exit ams_delta_cleanup (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: drivers/mtd/nand/ams-delta.c:230:
+	nand_release (ams_delta_mtd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#278: FILE: drivers/mtd/nand/ams-delta.c:233:
+	kfree (ams_delta_mtd);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076242.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 24 warnings, 10 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076242.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
