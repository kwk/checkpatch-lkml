WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
       for the task to unschedule and activates the task on its new runqueue.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#67: FILE: arch/i386/kernel/smp.c:488:
+static spinlock_t migration_lock[NR_CPUS] = { [0 ... NR_CPUS-1] = SPIN_LOCK_UNLOCKED};
                                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#68: FILE: arch/i386/kernel/smp.c:489:
+static task_t *new_task[NR_CPUS] = { [0 ... NR_CPUS-1] = NULL};
                                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#81: FILE: arch/i386/kernel/smp.c:503:
+	if (p->cpus_allowed & (1UL<<cpu)) {
 	                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#113: FILE: arch/i386/kernel/smp.c:531:
+	if (p->cpus_allowed & (1UL<<this_cpu)) {
 	                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: arch/i386/kernel/smp.c:552:
+^I^I^I * following function fails only if p==current or p has $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/linux/sched.h:154:
+extern void sched_task_migrated(struct task_struct *p, long state);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/linux/sched.h:155:
+extern int sched_move_task(task_t *p, int src_cpu, int tgt_cpu);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#165: FILE: kernel/fork.c:696:
+		if (likely(p->cpus_allowed & (1UL<<smp_processor_id())))
 		                                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->curr == rq->idle'
#194: FILE: kernel/sched.c:319:
+		if ((rq->curr == rq->idle) || (p->prio < rq->curr->prio))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->prio < rq->curr->prio'
#194: FILE: kernel/sched.c:319:
+		if ((rq->curr == rq->idle) || (p->prio < rq->curr->prio))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000475483.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 1 warnings, 9 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000475483.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
