WARNING:TYPO_SPELLING: 'scaning' may be misspelled - perhaps 'scanning'?
#51: 
scaning the block bitmap to verify if the avalible window has a free
^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'avalible' may be misspelled - perhaps 'available'?
#51: 
scaning the block bitmap to verify if the avalible window has a free
                                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'targetting' may be misspelled - perhaps 'targeting'?
#57: 
else is targetting at the same window. Question was should we reserve
        ^^^^^^^^^^

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#66: 
Signed-Off-By: Mingming Cao <cmm@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#88: FILE: fs/ext3/balloc.c:753:
+static int find_next_reservable_window(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: fs/ext3/balloc.c:756:
+				struct super_block * sb, int start_block,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prev != my_rsv'
#127: FILE: fs/ext3/balloc.c:817:
+	if ((prev != my_rsv) && (!rsv_is_empty(&my_rsv->rsv_window)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#130: FILE: fs/ext3/balloc.c:820:
+	/* let's book the whole avaliable window for now
 	                        ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: fs/ext3/balloc.c:947:
+	ret = find_next_reservable_window(search_head, my_rsv, sb,
+						start_block, group_end_block);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start_block >= my_rsv->rsv_start'
#241: FILE: fs/ext3/balloc.c:989:
+	if ((start_block >= my_rsv->rsv_start) &&
+		  (start_block < my_rsv->rsv_end))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start_block < my_rsv->rsv_end'
#241: FILE: fs/ext3/balloc.c:989:
+	if ((start_block >= my_rsv->rsv_start) &&
+		  (start_block < my_rsv->rsv_end))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: fs/ext3/balloc.c:990:
+	if ((start_block >= my_rsv->rsv_start) &&
+		  (start_block < my_rsv->rsv_end))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret < 0'
#316: FILE: fs/ext3/balloc.c:1083:
+		if (rsv_is_empty(&my_rsv->rsv_window) || (ret < 0) ||
+			!goal_in_my_reservation(&my_rsv->rsv_window, goal, group, sb)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: fs/ext3/balloc.c:1084:
+		if (rsv_is_empty(&my_rsv->rsv_window) || (ret < 0) ||
+			!goal_in_my_reservation(&my_rsv->rsv_window, goal, group, sb)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'my_rsv->rsv_end < group_first_block'
#332: FILE: fs/ext3/balloc.c:1093:
+		if ((my_rsv->rsv_start >= group_first_block + EXT3_BLOCKS_PER_GROUP(sb))
+		    || (my_rsv->rsv_end < group_first_block))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#333: FILE: fs/ext3/balloc.c:1094:
+		if ((my_rsv->rsv_start >= group_first_block + EXT3_BLOCKS_PER_GROUP(sb))
+		    || (my_rsv->rsv_end < group_first_block))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#346: FILE: fs/ext3/file.c:37:
 	if ((filp->f_mode & FMODE_WRITE) &&
 			(atomic_read(&inode->i_writecount) == 1))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: fs/ext3/file.c:42:
+^I^Iup(&EXT3_I(inode)->truncate_sem); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000186795.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 10 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000186795.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
