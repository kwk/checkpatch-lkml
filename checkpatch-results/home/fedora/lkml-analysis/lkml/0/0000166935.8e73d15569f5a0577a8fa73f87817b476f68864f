WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#28: 
propogation wherever needed.
^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: fs/namespace.c:91:
+struct vfsmount *__lookup_mnt(struct vfsmount *mnt, struct dentry *dentry,
+		struct dentry *root)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: fs/namespace.c:105:
+		if (p->mnt_parent == mnt && p->mnt_mountpoint == dentry &&
+				(root == NULL || p->mnt_root == root)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root"
#81: FILE: fs/namespace.c:105:
+				(root == NULL || p->mnt_root == root)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#111: FILE: fs/namespace.c:136:
+		 * as the original if that was on one */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: fs/namespace.c:172:
+static struct vfsmount *do_attach_mnt(struct vfsmount *mnt,
+		struct dentry *dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#137: FILE: fs/namespace.c:175:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#140: FILE: fs/namespace.c:178:
+	nd.mnt = mnt;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#141: FILE: fs/namespace.c:179:
+	nd.dentry = dentry;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#142: FILE: fs/namespace.c:180:
+	attach_mnt(child_mnt, &nd);
 	                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#148: FILE: fs/namespace.c:186:
+static void attach_prepare_mnt(struct vfsmount *mnt, struct nameidata *nd)
                                                                        ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#158: FILE: fs/namespace.c:196:
+	struct vfsmount *parent = mnt->mnt_parent;
+	BUG_ON(parent==mnt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#158: FILE: fs/namespace.c:196:
+	BUG_ON(parent==mnt);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#158: FILE: fs/namespace.c:196:
+	BUG_ON(parent==mnt);
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#159: FILE: fs/namespace.c:197:
+	if(list_empty(&mnt->mnt_hash))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: fs/namespace.c:199:
+		list_add(&mnt->mnt_hash,
+			mount_hashtable+hash(parent, mnt->mnt_mountpoint));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: fs/namespace.c:199:
+			mount_hashtable+hash(parent, mnt->mnt_mountpoint));
 			               ^

ERROR:SPACING: space required before the open parenthesis '('
#162: FILE: fs/namespace.c:200:
+	if(list_empty(&mnt->mnt_child))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: fs/namespace.c:207:
+struct vfsmount *do_attach_prepare_mnt(struct vfsmount *mnt,
+		struct dentry *dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#174: FILE: fs/namespace.c:212:
+	struct nameidata nd;
 	                 ^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#176: FILE: fs/namespace.c:214:
+	if (clone_flag) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: fs/namespace.c:215:
+		if(!(child_mnt = clone_mnt(template_mnt,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#177: FILE: fs/namespace.c:215:
+		if(!(child_mnt = clone_mnt(template_mnt,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: fs/namespace.c:216:
+		if(!(child_mnt = clone_mnt(template_mnt,
+				template_mnt->mnt_root)))

CHECK:BRACES: Unbalanced braces around else statement
#180: FILE: fs/namespace.c:218:
+	} else

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#183: FILE: fs/namespace.c:221:
+	nd.mnt = mnt;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#184: FILE: fs/namespace.c:222:
+	nd.dentry = dentry;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#186: FILE: fs/namespace.c:224:
+	attach_prepare_mnt(child_mnt, &nd);
 	                               ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: fs/namespace.c:248:
+	struct list_head *prev = p->mnt_mounts.prev;
+	while (prev != &p->mnt_mounts) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#310: FILE: fs/namespace.c:668:
+ /*
+ *  @source_mnt : mount tree to be attached

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#311: FILE: fs/namespace.c:669:
+ *  @nd		: place the mount tree @source_mnt is attached
      ^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: fs/namespace.c:677:
+ *  | source^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#320: FILE: fs/namespace.c:678:
+ *  |   |   ^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: fs/namespace.c:679:
+ *  |   v ^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#323: FILE: fs/namespace.c:681:
+ *  |^I     ^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: fs/namespace.c:682:
+ *  |  shared^I| shared (++) ^I|      shared (+)|shared (+)| shared (+)|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#325: FILE: fs/namespace.c:683:
+ *  |^I^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#326: FILE: fs/namespace.c:684:
+ *  |^I^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#327: FILE: fs/namespace.c:685:
+ *  | private^I| shared (+)^I|      private^I | private  | private  ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#328: FILE: fs/namespace.c:686:
+ *  |^I^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#329: FILE: fs/namespace.c:687:
+ *  |^I^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#330: FILE: fs/namespace.c:688:
+ *  | slave^I| shared (+)^I|      private   | private  | private  ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#331: FILE: fs/namespace.c:689:
+ *  |^I^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#332: FILE: fs/namespace.c:690:
+ *  |^I^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#333: FILE: fs/namespace.c:691:
+ *  | unclonable|    -^I^I|       -^I |   -^I    |   - ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: fs/namespace.c:692:
+ *  |^I^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: fs/namespace.c:693:
+ *  |^I^I|^I^I|       ^I |   ^I    |    ^I|$

WARNING:TYPO_SPELLING: 'propogated' may be misspelled - perhaps 'propagated'?
#338: FILE: fs/namespace.c:696:
+ * (++)  the mount will be propogated to all the vfsmounts in the pnode tree
                            ^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: fs/namespace.c:697:
+ *    ^I  of the destination vfsmount, and all the non-slave new mounts in$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: fs/namespace.c:698:
+ *    ^I  destination vfsmount will be added the source vfsmount's pnode.$

WARNING:TYPO_SPELLING: 'propogated' may be misspelled - perhaps 'propagated'?
#341: FILE: fs/namespace.c:699:
+ * (+)  the mount will be propogated to the destination vfsmount
                           ^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#342: FILE: fs/namespace.c:700:
+ *    ^I  and the new mount will be added to the source vfsmount's pnode.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#351: FILE: fs/namespace.c:709:
+ *
+  */

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#353: FILE: fs/namespace.c:711:
+		struct nameidata *nd)
 		                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: fs/namespace.c:711:
+static int attach_recursive_mnt(struct vfsmount *source_mnt,
+		struct nameidata *nd)

WARNING:LINE_SPACING: Missing a blank line after declarations
#367: FILE: fs/namespace.c:725:
+		LIST_HEAD(head);
+		spin_lock(&vfsmount_lock);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#398: FILE: fs/namespace.c:756:
+		p=m;
 		 ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#401: FILE: fs/namespace.c:759:
+		src_pnode = (IS_MNT_SHARED(m))?
 		                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#409: FILE: fs/namespace.c:767:
+		if (!(tmp_pnode = pnode_alloc()))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#412: FILE: fs/namespace.c:770:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#414: FILE: fs/namespace.c:772:
+			if ((ret = pnode_prepare_mount(dest_pnode, tmp_pnode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: fs/namespace.c:773:
+			if ((ret = pnode_prepare_mount(dest_pnode, tmp_pnode,
+					mntpt_dentry, m, mntpt_mnt)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: fs/namespace.c:778:
+				do_attach_prepare_mnt(mntpt_mnt,
+					mntpt_dentry, m, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#457: FILE: fs/namespace.c:815:
+		struct vfspnode *master_pnode = tmp_pnode->pnode_master;
+		list_del_init(&tmp_pnode->pnode_peer_slave);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#466: FILE: fs/namespace.c:824:
+^I^I^I * ^I^Ia slave mnt.$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#504: FILE: fs/namespace.c:862:
+		err = attach_recursive_mnt(mnt, nd);
 		                                ^^

WARNING:REPEATED_WORD: Possible repeated word: 'dir'
#513: FILE: fs/namespace.c:940:
+ * This operation is equivalent of mount --bind dir dir

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#513: FILE: fs/namespace.c:940:
+ /*
+ * This operation is equivalent of mount --bind dir dir

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#517: FILE: fs/namespace.c:944:
+ * under the new mount.
+  */

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#521: FILE: fs/namespace.c:948:
+	struct nameidata nd;
 	                 ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: fs/namespace.c:969:
+		list_for_each_entry_safe(child_mnt, next,
+				&mnt->mnt_mounts, mnt_child) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#543: FILE: fs/namespace.c:970:
+				&mnt->mnt_mounts, mnt_child) {
+

ERROR:SPACING: space required before the open parenthesis '('
#544: FILE: fs/namespace.c:971:
+			if(child_mnt->mnt_mountpoint == dentry)

ERROR:SPACING: space required before the open parenthesis '('
#547: FILE: fs/namespace.c:974:
+			if(!is_subdir(child_mnt->mnt_mountpoint, dentry))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#550: FILE: fs/namespace.c:977:
+			detach_mnt(child_mnt, &nd);
 			                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#551: FILE: fs/namespace.c:978:
+			nd.mnt = newmnt;
 			^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#552: FILE: fs/namespace.c:979:
+			attach_mnt(child_mnt, &nd);
 			                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#555: FILE: fs/namespace.c:982:
+		nd.mnt = mnt;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#556: FILE: fs/namespace.c:983:
+		nd.dentry = dentry;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#557: FILE: fs/namespace.c:984:
+		do_attach_mnt(nd.mnt, nd.dentry, newmnt);
 		              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#557: FILE: fs/namespace.c:984:
+		do_attach_mnt(nd.mnt, nd.dentry, newmnt);
 		                      ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: fs/namespace.c:985:
+ ^I^Ispin_unlock(&vfsmount_lock);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#558: FILE: fs/namespace.c:985:
+ ^I^Ispin_unlock(&vfsmount_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: fs/namespace.c:985:
+ ^I^Ispin_unlock(&vfsmount_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: fs/namespace.c:986:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#559: FILE: fs/namespace.c:986:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: fs/namespace.c:986:
+ ^I}$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#564: FILE: fs/namespace.c:991:
+ /*
+ * Inverse operation of do_make_mounted()

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#565: FILE: fs/namespace.c:992:
+ * Inverse operation of do_make_mounted()
+  */

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#569: FILE: fs/namespace.c:996:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#585: FILE: fs/namespace.c:1012:
+		detach_mnt(child_mnt, &nd);
 		                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#586: FILE: fs/namespace.c:1013:
+		nd.mnt = parent_mnt;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#587: FILE: fs/namespace.c:1014:
+		attach_mnt(child_mnt, &nd);
 		                       ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: fs/namespace.c:1015:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#588: FILE: fs/namespace.c:1015:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: fs/namespace.c:1015:
+ ^I}$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#589: FILE: fs/namespace.c:1016:
+	detach_mnt(mnt, &nd);
 	                 ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: fs/namespace.c:1017:
+ ^Ispin_unlock(&vfsmount_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#590: FILE: fs/namespace.c:1017:
+ ^Ispin_unlock(&vfsmount_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: fs/namespace.c:1017:
+ ^Ispin_unlock(&vfsmount_lock);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#595: FILE: fs/namespace.c:1022:
+ * @nd: contains the vfsmount and the dentry where the new mount
     ^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#596: FILE: fs/namespace.c:1023:
+ * ^Iis the be created$

WARNING:TYPO_SPELLING: 'propogate' may be misspelled - perhaps 'propagate'?
#599: FILE: fs/namespace.c:1026:
+ * propogate the mount to all other mounts if the mountpoint
    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#602: FILE: fs/namespace.c:1029:
+int make_mounted(struct nameidata *nd, struct vfsmount **mnt)
                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#606: FILE: fs/namespace.c:1033:
+	int err = mount_is_safe(nd);
 	                        ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#607: FILE: fs/namespace.c:1034:
+	int err = mount_is_safe(nd);
+	if (err)

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: fs/namespace.c:1038:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#611: FILE: fs/namespace.c:1038:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: fs/namespace.c:1038:
+ ^I/*$

WARNING:TYPO_SPELLING: 'propogate' may be misspelled - perhaps 'propagate'?
#615: FILE: fs/namespace.c:1042:
+	 * Also propogate the mount if parent_mnt
 	        ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: fs/namespace.c:1044:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#617: FILE: fs/namespace.c:1044:
+ ^I */$

ERROR:SPACING: space required before the open parenthesis '('
#618: FILE: fs/namespace.c:1045:
+	if(parent_dentry != parent_mnt->mnt_root) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#618: FILE: fs/namespace.c:1045:
+	if(parent_dentry != parent_mnt->mnt_root) {
[...]
+ 	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: fs/namespace.c:1048:
+			 pnode_make_mounted(parent_mnt->mnt_pnode,
+					 parent_mnt, parent_dentry) :

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: fs/namespace.c:1052:
+ ^I} else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#625: FILE: fs/namespace.c:1052:
+ ^I} else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: fs/namespace.c:1052:
+ ^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#625: FILE: fs/namespace.c:1052:
+ 	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#631: FILE: fs/namespace.c:1058:
+ /*
+ * Inverse operation of make_mounted()

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#632: FILE: fs/namespace.c:1059:
+ * Inverse operation of make_mounted()
+  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: fs/namespace.c:1073:
+ ^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#646: FILE: fs/namespace.c:1073:
+ ^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: fs/namespace.c:1073:
+ ^Ielse$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#660: FILE: fs/namespace.c:1122:
+	struct vfsmount *mnt = NULL, *overlay_mnt=NULL;
 	                                         ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#677: FILE: fs/namespace.c:1140:
 	if (check_mnt(nd->mnt) && (!recurse || check_mnt(old_nd.mnt))) {
+

ERROR:SPACING: space required before the open parenthesis '('
#685: FILE: fs/namespace.c:1148:
+		if(IS_MNT_SHARED(old_nd.mnt) &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#685: FILE: fs/namespace.c:1148:
+		if(IS_MNT_SHARED(old_nd.mnt) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#686: FILE: fs/namespace.c:1149:
+		if(IS_MNT_SHARED(old_nd.mnt) &&
+			(err = make_mounted(&old_nd, &overlay_mnt)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: fs/namespace.c:1167:
+ ^I^I^Ispin_lock(&vfsmount_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#709: FILE: fs/namespace.c:1167:
+ ^I^I^Ispin_lock(&vfsmount_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: fs/namespace.c:1167:
+ ^I^I^Ispin_lock(&vfsmount_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: fs/namespace.c:1168:
+ ^I^I^Iumount_tree(mnt);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#710: FILE: fs/namespace.c:1168:
+ ^I^I^Iumount_tree(mnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: fs/namespace.c:1168:
+ ^I^I^Iumount_tree(mnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: fs/namespace.c:1169:
+ ^I^I^Ispin_unlock(&vfsmount_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#711: FILE: fs/namespace.c:1169:
+ ^I^I^Ispin_unlock(&vfsmount_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: fs/namespace.c:1169:
+ ^I^I^Ispin_unlock(&vfsmount_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: fs/namespace.c:1176:
+ ^I^I} else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#718: FILE: fs/namespace.c:1176:
+ ^I^I} else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: fs/namespace.c:1176:
+ ^I^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#718: FILE: fs/namespace.c:1176:
+ 		} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: fs/namespace.c:1177:
+ ^I^I^Imntput(mnt);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#719: FILE: fs/namespace.c:1177:
+ ^I^I^Imntput(mnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: fs/namespace.c:1177:
+ ^I^I^Imntput(mnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: fs/namespace.c:1178:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#720: FILE: fs/namespace.c:1178:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: fs/namespace.c:1178:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: fs/namespace.c:1184:
+ ^Ipath_release(&old_nd);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#726: FILE: fs/namespace.c:1184:
+ ^Ipath_release(&old_nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: fs/namespace.c:1184:
+ ^Ipath_release(&old_nd);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#912: FILE: fs/pnode.c:95:
+ * ^I^Itree.$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#917: FILE: fs/pnode.c:100:
+	struct vfspnode	*master_pnode=context->master_pnode;
 	               	             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#921: FILE: fs/pnode.c:104:
+		BUG_ON(!context->start);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#938: FILE: fs/pnode.c:121:
+				BUG_ON(context->level != 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#967: FILE: fs/pnode.c:150:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#977: FILE: fs/pnode.c:161:
+		list_add(&mnt->mnt_pnode_mntlist,
+				&pnode->pnode_slavevfs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#982: FILE: fs/pnode.c:165:
+		list_add(&mnt->mnt_pnode_mntlist,
+				&pnode->pnode_vfs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1000: FILE: fs/pnode.c:192:
+	list_add(&slave_pnode->pnode_peer_slave,
+			&pnode->pnode_slavepnode);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1015: FILE: fs/pnode.c:210:
+ ^I__pnode_disassociate_mnt(mnt);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1015: FILE: fs/pnode.c:210:
+ ^I__pnode_disassociate_mnt(mnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: fs/pnode.c:210:
+ ^I__pnode_disassociate_mnt(mnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1024: FILE: fs/pnode.c:218:
+ ^I__pnode_disassociate_mnt(mnt);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1024: FILE: fs/pnode.c:218:
+ ^I__pnode_disassociate_mnt(mnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: fs/pnode.c:218:
+ ^I__pnode_disassociate_mnt(mnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1034: FILE: fs/pnode.c:226:
+ ^I__pnode_disassociate_mnt(mnt);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1034: FILE: fs/pnode.c:226:
+ ^I__pnode_disassociate_mnt(mnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1034: FILE: fs/pnode.c:226:
+ ^I__pnode_disassociate_mnt(mnt);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1044: FILE: fs/pnode.c:236:
+	int i,count;
 	     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1048: FILE: fs/pnode.c:240:
+	list_for_each_entry_safe(slave_pnode,  pnext,
+			&pnode->pnode_slavepnode, pnode_peer_slave) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1051: FILE: fs/pnode.c:243:
+		list_move(&slave_pnode->pnode_peer_slave,
+				&peer_pnode->pnode_slavepnode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1055: FILE: fs/pnode.c:247:
+	list_for_each_entry_safe(slave_mnt,  next,
+			&pnode->pnode_slavevfs, mnt_pnode_mntlist) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1058: FILE: fs/pnode.c:250:
+		list_move(&slave_mnt->mnt_pnode_mntlist,
+				&peer_pnode->pnode_slavevfs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1062: FILE: fs/pnode.c:254:
+	list_for_each_entry_safe(mnt, next,
+			&pnode->pnode_vfs, mnt_pnode_mntlist) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1065: FILE: fs/pnode.c:257:
+		list_move(&mnt->mnt_pnode_mntlist,
+				&peer_pnode->pnode_vfs);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1078: FILE: fs/pnode.c:270:
+	for (i=0 ; i <count; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1078: FILE: fs/pnode.c:270:
+	for (i=0 ; i <count; i++)
 	             ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1086: FILE: fs/pnode.c:278:
+ *  ^I^Inew mount is created at dentry 'dentry'$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1095: FILE: fs/pnode.c:287:
+struct vfsmount *pnode_make_mounted(struct vfspnode *pnode,
+		struct vfsmount *mnt, struct dentry *dentry)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1098: FILE: fs/pnode.c:290:
+	int ret=0, level;
 	       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1099: FILE: fs/pnode.c:291:
+   ^Istruct vfspnode *master_pnode;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1099: FILE: fs/pnode.c:291:
+   ^Istruct vfspnode *master_pnode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: fs/pnode.c:291:
+   ^Istruct vfspnode *master_pnode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1101: FILE: fs/pnode.c:293:
+    ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1101: FILE: fs/pnode.c:293:
+    ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1101: FILE: fs/pnode.c:293:
+    ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1114: FILE: fs/pnode.c:306:
+			master_child_pnode = p_array[level-1];
 			                                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1118: FILE: fs/pnode.c:310:
+		if (!(child_pnode = pnode_alloc())) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1125: FILE: fs/pnode.c:317:
+			pnode_add_slave_pnode(master_child_pnode,
+					child_pnode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1131: FILE: fs/pnode.c:323:
+		list_for_each_entry_safe(member_mnt,
+			t_m, &pnode->pnode_vfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1133: FILE: fs/pnode.c:325:
+			if (!(child_mnt = do_make_mounted(member_mnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1134: FILE: fs/pnode.c:326:
+			if (!(child_mnt = do_make_mounted(member_mnt,
+					dentry))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1142: FILE: fs/pnode.c:334:
+		list_for_each_entry_safe(slave_mnt, t_m,
+			&pnode->pnode_slavevfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1144: FILE: fs/pnode.c:336:
+			if (!(child_mnt = do_make_mounted(slave_mnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1145: FILE: fs/pnode.c:337:
+			if (!(child_mnt = do_make_mounted(slave_mnt,
+					dentry))) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1166: FILE: fs/pnode.c:358:
+	int ret=0;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1181: FILE: fs/pnode.c:373:
+	int ret=0;
 	       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1182: FILE: fs/pnode.c:374:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1182: FILE: fs/pnode.c:374:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: fs/pnode.c:374:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1192: FILE: fs/pnode.c:384:
+		list_for_each_entry_safe(member_mnt,
+			t_m, &pnode->pnode_vfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1194: FILE: fs/pnode.c:386:
+			if ((ret = vfs_make_unmounted(member_mnt)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1199: FILE: fs/pnode.c:391:
+		list_for_each_entry_safe(slave_mnt, t_m,
+			&pnode->pnode_slavevfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1201: FILE: fs/pnode.c:393:
+			if ((ret = vfs_make_unmounted(slave_mnt)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1212: FILE: fs/pnode.c:404:
+int vfs_prepare_mount_func(struct vfsmount *mnt, enum pnode_vfs_type flag,
+		struct vfspnode *pnode,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p_mnt != mnt'
#1220: FILE: fs/pnode.c:412:
+	if ((p_mnt != mnt) || (source_mnt == source_mnt->mnt_parent)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'source_mnt == source_mnt->mnt_parent'
#1220: FILE: fs/pnode.c:412:
+	if ((p_mnt != mnt) || (source_mnt == source_mnt->mnt_parent)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1220: FILE: fs/pnode.c:412:
+	if ((p_mnt != mnt) || (source_mnt == source_mnt->mnt_parent)) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1222: FILE: fs/pnode.c:414:
+		child_mnt = do_attach_prepare_mnt(mnt, mountpoint_dentry,
+				source_mnt, (p_mnt != mnt));

CHECK:BRACES: Unbalanced braces around else statement
#1229: FILE: fs/pnode.c:421:
+	} else

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1233: FILE: fs/pnode.c:425:
+	case PNODE_SLAVE_VFS :
 	                     ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1236: FILE: fs/pnode.c:428:
+	case PNODE_MEMBER_VFS :
 	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1245: FILE: fs/pnode.c:437:
+int pnode_prepare_mount(struct vfspnode *pnode,
+		struct vfspnode *my_pnode,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1250: FILE: fs/pnode.c:442:
+	int ret=0, level;
 	       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1251: FILE: fs/pnode.c:443:
+     ^Istruct vfspnode *master_pnode, *child_pnode, *master_child_pnode;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1251: FILE: fs/pnode.c:443:
+     ^Istruct vfspnode *master_pnode, *child_pnode, *master_child_pnode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1251: FILE: fs/pnode.c:443:
+     ^Istruct vfspnode *master_pnode, *child_pnode, *master_child_pnode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1252: FILE: fs/pnode.c:444:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1252: FILE: fs/pnode.c:444:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1252: FILE: fs/pnode.c:444:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1271: FILE: fs/pnode.c:463:
+		if (!(child_pnode = pnode_alloc()))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1276: FILE: fs/pnode.c:468:
+			pnode_add_slave_pnode(master_child_pnode,
+					child_pnode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1281: FILE: fs/pnode.c:473:
+		list_for_each_entry_safe(member_mnt,
+			t_m, &pnode->pnode_vfs, mnt_pnode_mntlist) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1283: FILE: fs/pnode.c:475:
+			if((ret=vfs_prepare_mount_func(member_mnt,
 			       ^

ERROR:SPACING: space required before the open parenthesis '('
#1283: FILE: fs/pnode.c:475:
+			if((ret=vfs_prepare_mount_func(member_mnt,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1283: FILE: fs/pnode.c:475:
+			if((ret=vfs_prepare_mount_func(member_mnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1284: FILE: fs/pnode.c:476:
+			if((ret=vfs_prepare_mount_func(member_mnt,
+				PNODE_MEMBER_VFS, child_pnode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1290: FILE: fs/pnode.c:482:
+		list_for_each_entry_safe(slave_mnt,
+			t_m, &pnode->pnode_slavevfs,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#1293: FILE: fs/pnode.c:485:
+			if((ret = vfs_prepare_mount_func(slave_mnt,
[...]
+					goto out;

ERROR:SPACING: space required before the open parenthesis '('
#1293: FILE: fs/pnode.c:485:
+			if((ret = vfs_prepare_mount_func(slave_mnt,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1293: FILE: fs/pnode.c:485:
+			if((ret = vfs_prepare_mount_func(slave_mnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1294: FILE: fs/pnode.c:486:
+			if((ret = vfs_prepare_mount_func(slave_mnt,
+				PNODE_SLAVE_VFS, child_pnode,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1307: FILE: fs/pnode.c:499:
+	BUG_ON(mnt == mnt->mnt_parent);

WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#1320: FILE: fs/pnode.c:512:
+ * @pnode: walk the propogation tree and complete the
                     ^^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1321: FILE: fs/pnode.c:513:
+ * ^Iattachments of the child mounts to the parents$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1322: FILE: fs/pnode.c:514:
+ * ^Icorrespondingly.$

WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#1323: FILE: fs/pnode.c:515:
+ * @flag: if set destroy the propogation tree
                              ^^^^^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1327: FILE: fs/pnode.c:519:
+	int ret=0;
 	       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1328: FILE: fs/pnode.c:520:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1328: FILE: fs/pnode.c:520:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: fs/pnode.c:520:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1338: FILE: fs/pnode.c:530:
+		list_for_each_entry_safe(member_mnt,
+			t_m, &pnode->pnode_vfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1340: FILE: fs/pnode.c:532:
+			if ((ret = vfs_real_mount_func(member_mnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1341: FILE: fs/pnode.c:533:
+			if ((ret = vfs_real_mount_func(member_mnt,
+							flag)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1345: FILE: fs/pnode.c:537:
+		list_for_each_entry_safe(slave_mnt, t_m,
+			&pnode->pnode_slavevfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1347: FILE: fs/pnode.c:539:
+			if ((ret = vfs_real_mount_func(slave_mnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1348: FILE: fs/pnode.c:540:
+			if ((ret = vfs_real_mount_func(slave_mnt,
+							flag)))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1354: FILE: fs/pnode.c:546:
+			BUG_ON(!list_empty(&pnode->pnode_vfs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1355: FILE: fs/pnode.c:547:
+			BUG_ON(!list_empty(&pnode->pnode_slavevfs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1356: FILE: fs/pnode.c:548:
+			BUG_ON(!list_empty(&pnode->pnode_slavepnode));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1373: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1373: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1373: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1373: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1373: FILE: include/linux/fs.h:1219:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1374: FILE: include/linux/fs.h:1220:
+extern struct vfsmount *do_attach_prepare_mnt(struct vfsmount *,
+		struct dentry *, struct vfsmount *, int );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1374: FILE: include/linux/fs.h:1220:
+		struct dentry *, struct vfsmount *, int );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1375: FILE: include/linux/fs.h:1221:
+extern void do_attach_real_mnt(struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1375: FILE: include/linux/fs.h:1221:
+extern void do_attach_real_mnt(struct vfsmount *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1377: FILE: include/linux/fs.h:1223:
+extern int do_make_unmounted(struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1377: FILE: include/linux/fs.h:1223:
+extern int do_make_unmounted(struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1389: FILE: include/linux/pnode.h:79:
+int pnode_merge_pnode(struct vfspnode *, struct vfspnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1389: FILE: include/linux/pnode.h:79:
+int pnode_merge_pnode(struct vfspnode *, struct vfspnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1391: FILE: include/linux/pnode.h:81:
+int  pnode_make_unmounted(struct vfspnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1392: FILE: include/linux/pnode.h:82:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1392: FILE: include/linux/pnode.h:82:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1392: FILE: include/linux/pnode.h:82:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1392: FILE: include/linux/pnode.h:82:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1392: FILE: include/linux/pnode.h:82:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1393: FILE: include/linux/pnode.h:83:
+int pnode_prepare_mount(struct vfspnode *, struct vfspnode *, struct dentry *,
+		struct vfsmount *, struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#1394: FILE: include/linux/pnode.h:84:
+int pnode_real_mount(struct vfspnode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1394: FILE: include/linux/pnode.h:84:
+int pnode_real_mount(struct vfspnode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1416: FILE: include/linux/dcache.h:332:
+extern struct vfsmount *__lookup_mnt(struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#1416: FILE: include/linux/dcache.h:332:
+extern struct vfsmount *__lookup_mnt(struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1416: FILE: include/linux/dcache.h:332:
+extern struct vfsmount *__lookup_mnt(struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1416: FILE: include/linux/dcache.h:332:
+extern struct vfsmount *__lookup_mnt(struct vfsmount *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1417: FILE: include/linux/dcache.h:333:
+extern struct vfsmount *__lookup_mnt(struct vfsmount *,
+		struct dentry *, struct dentry *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000166935.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 149 warnings, 64 checks, 1308 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000166935.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
