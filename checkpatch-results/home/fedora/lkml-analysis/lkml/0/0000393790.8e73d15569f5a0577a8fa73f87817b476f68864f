WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
diff -urN --exclude-from=/work/dave/linux/exclude linux-2.5.59-mjb5-clean/arch/i386/mm/Makefile linux-2.5.59-mjb5-pgtablefun/arch/i386/mm/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: arch/i386/mm/boot_ioremap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#74: FILE: arch/i386/mm/boot_ioremap.c:2:
+ * arch/i386/mm/boot_ioremap.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: arch/i386/mm/boot_ioremap.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: arch/i386/mm/boot_ioremap.c:4:
+ * Re-map functions for early boot-time before paging_init() when the $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#82: FILE: arch/i386/mm/boot_ioremap.c:10:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'happenning' may be misspelled - perhaps 'happening'?
#85: FILE: arch/i386/mm/boot_ioremap.c:13:
+ * keeps that from happenning.  If anyone has a better way, I'm listening.
                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#93: FILE: arch/i386/mm/boot_ioremap.c:21:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: arch/i386/mm/boot_ioremap.c:25:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: arch/i386/mm/boot_ioremap.c:26:
+ * I'm cheating here.  It is known that the two boot PTE pages are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: arch/i386/mm/boot_ioremap.c:28:
+ * one big array. $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#103: FILE: arch/i386/mm/boot_ioremap.c:31:
+#define BOOT_PTE_PTRS (PTRS_PER_PTE*2)
                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#107: FILE: arch/i386/mm/boot_ioremap.c:35:
+static inline boot_pte_t* boot_vaddr_to_pte(void *address)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#109: FILE: arch/i386/mm/boot_ioremap.c:37:
+	boot_pte_t* boot_pg = (boot_pte_t*)pg0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#109: FILE: arch/i386/mm/boot_ioremap.c:37:
+	boot_pte_t* boot_pg = (boot_pte_t*)pg0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#110: FILE: arch/i386/mm/boot_ioremap.c:38:
+	boot_pte_t* boot_pg = (boot_pte_t*)pg0;
+	return &boot_pg[boot_pte_index((unsigned long)address)];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: arch/i386/mm/boot_ioremap.c:46:
+static void __boot_ioremap(unsigned long phys_addr, unsigned long nrpages, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: arch/i386/mm/boot_ioremap.c:47:
+static void __boot_ioremap(unsigned long phys_addr, unsigned long nrpages, 
+		    void* virtual_source)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#119: FILE: arch/i386/mm/boot_ioremap.c:47:
+		    void* virtual_source)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#121: FILE: arch/i386/mm/boot_ioremap.c:49:
+	boot_pte_t* pte;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: arch/i386/mm/boot_ioremap.c:53:
+	for (i=0; i < nrpages; i++, phys_addr += PAGE_SIZE, pte++) {
 	      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#125: FILE: arch/i386/mm/boot_ioremap.c:53:
+	for (i=0; i < nrpages; i++, phys_addr += PAGE_SIZE, pte++) {
+		set_pte(pte, pfn_pte(phys_addr>>PAGE_OFFSET, PAGE_KERNEL));
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#126: FILE: arch/i386/mm/boot_ioremap.c:54:
+		set_pte(pte, pfn_pte(phys_addr>>PAGE_OFFSET, PAGE_KERNEL));
 		                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#132: FILE: arch/i386/mm/boot_ioremap.c:60:
+#define BOOT_IOREMAP_SIZE (BOOT_IOREMAP_PAGES*PAGE_SIZE)
                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: arch/i386/mm/boot_ioremap.c:61:
+__init char boot_ioremap_space[BOOT_IOREMAP_SIZE] $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: arch/i386/mm/boot_ioremap.c:62:
+		__attribute__ ((aligned (PAGE_SIZE)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#134: FILE: arch/i386/mm/boot_ioremap.c:62:
+		__attribute__ ((aligned (PAGE_SIZE)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: arch/i386/mm/boot_ioremap.c:67:
+ * $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#147: FILE: arch/i386/mm/boot_ioremap.c:75:
+__init void* boot_ioremap(unsigned long phys_addr, unsigned long size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: arch/i386/mm/boot_ioremap.c:79:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: arch/i386/mm/boot_ioremap.c:86:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: arch/i386/mm/boot_ioremap.c:90:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393790.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 8 warnings, 6 checks, 109 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393790.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
