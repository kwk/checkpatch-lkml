WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -Naur linux-2.4.19/fs/lockd/svclock.c linux-2.4.19-patches/fs/lockd/svclock.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#41: FILE: fs/lockd/svclock.c:246:
+           /* If the filesystem defined its own lock operation, invoke it. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#42: FILE: fs/lockd/svclock.c:247:
+           if ((block->b_file->f_file.f_op) && (block->b_file->f_file.f_op->lock)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#42: FILE: fs/lockd/svclock.c:247:
+           if ((block->b_file->f_file.f_op) && (block->b_file->f_file.f_op->lock)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#42: FILE: fs/lockd/svclock.c:247:
+           if ((block->b_file->f_file.f_op) && (block->b_file->f_file.f_op->lock)) {
+                 int error;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block->b_file->f_file.f_op'
#42: FILE: fs/lockd/svclock.c:247:
+           if ((block->b_file->f_file.f_op) && (block->b_file->f_file.f_op->lock)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block->b_file->f_file.f_op->lock'
#42: FILE: fs/lockd/svclock.c:247:
+           if ((block->b_file->f_file.f_op) && (block->b_file->f_file.f_op->lock)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#43: FILE: fs/lockd/svclock.c:248:
+                 int error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: fs/lockd/svclock.c:248:
+                 int error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#44: FILE: fs/lockd/svclock.c:249:
+                 error = block->b_file->f_file.f_op->lock(&block->b_file->f_file, F_SETLK, fl);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#44: FILE: fs/lockd/svclock.c:249:
+                 int error;
+                 error = block->b_file->f_file.f_op->lock(&block->b_file->f_file, F_SETLK, fl);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: fs/lockd/svclock.c:249:
+                 error = block->b_file->f_file.f_op->lock(&block->b_file->f_file, F_SETLK, fl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#45: FILE: fs/lockd/svclock.c:250:
+                 dprintk("nlmsvc_delete_block: filesystem (un)lock operation returned %d\n", error);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#45: FILE: fs/lockd/svclock.c:250:
+                 dprintk("nlmsvc_delete_block: filesystem (un)lock operation returned %d\n", error);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#46: FILE: fs/lockd/svclock.c:251:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: fs/lockd/svclock.c:251:
+           }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#54: FILE: fs/lockd/svclock.c:334:
      if (!(conflock = posix_test_lock(&file->f_file, &lock->fl))) {
[...]
+           error = 0;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#56: FILE: fs/lockd/svclock.c:335:
      if (!(conflock = posix_test_lock(&file->f_file, &lock->fl))) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: fs/lockd/svclock.c:336:
+           /* If the filesystem defined its own lock operation, invoke it. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: fs/lockd/svclock.c:337:
+           error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: fs/lockd/svclock.c:337:
+           error = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: fs/lockd/svclock.c:338:
+           if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: fs/lockd/svclock.c:338:
+           if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#59: FILE: fs/lockd/svclock.c:338:
+           if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {
+                 error = file->f_file.f_op->lock(&file->f_file, F_SETLK, &lock->fl);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op'
#59: FILE: fs/lockd/svclock.c:338:
+           if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op->lock'
#59: FILE: fs/lockd/svclock.c:338:
+           if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: fs/lockd/svclock.c:339:
+                 error = file->f_file.f_op->lock(&file->f_file, F_SETLK, &lock->fl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: fs/lockd/svclock.c:339:
+                 error = file->f_file.f_op->lock(&file->f_file, F_SETLK, &lock->fl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: fs/lockd/svclock.c:340:
+                 dprintk("nlmsvc_lock: filesystem lock operation returned %d\n", error);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: fs/lockd/svclock.c:340:
+                 dprintk("nlmsvc_lock: filesystem lock operation returned %d\n", error);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: fs/lockd/svclock.c:341:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: fs/lockd/svclock.c:341:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: fs/lockd/svclock.c:343:
+           if (error == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: fs/lockd/svclock.c:343:
+           if (error == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#64: FILE: fs/lockd/svclock.c:343:
+           if (error == 0)
+                 error = posix_lock_file(&file->f_file, &lock->fl, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: fs/lockd/svclock.c:344:
+                 error = posix_lock_file(&file->f_file, &lock->fl, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: fs/lockd/svclock.c:344:
+                 error = posix_lock_file(&file->f_file, &lock->fl, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: fs/lockd/svclock.c:413:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#74: FILE: fs/lockd/svclock.c:413:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {
+           int error;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op'
#74: FILE: fs/lockd/svclock.c:413:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op->lock'
#74: FILE: fs/lockd/svclock.c:413:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: fs/lockd/svclock.c:414:
+           int error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: fs/lockd/svclock.c:414:
+           int error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: fs/lockd/svclock.c:416:
+           error = file->f_file.f_op->lock(&file->f_file, F_GETLK, &lock->fl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: fs/lockd/svclock.c:416:
+           error = file->f_file.f_op->lock(&file->f_file, F_GETLK, &lock->fl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: fs/lockd/svclock.c:417:
+           if ((!error) && (lock->fl.fl_type != F_UNLCK)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: fs/lockd/svclock.c:417:
+           if ((!error) && (lock->fl.fl_type != F_UNLCK)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#78: FILE: fs/lockd/svclock.c:417:
+           if ((!error) && (lock->fl.fl_type != F_UNLCK)) {
+                 conflock->caller = "somehost";  /* FIXME */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!error'
#78: FILE: fs/lockd/svclock.c:417:
+           if ((!error) && (lock->fl.fl_type != F_UNLCK)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lock->fl.fl_type != F_UNLCK'
#78: FILE: fs/lockd/svclock.c:417:
+           if ((!error) && (lock->fl.fl_type != F_UNLCK)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: fs/lockd/svclock.c:418:
+                 conflock->caller = "somehost";  /* FIXME */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/lockd/svclock.c:418:
+                 conflock->caller = "somehost";  /* FIXME */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: fs/lockd/svclock.c:419:
+                 conflock->oh.len = 0;   /* don't return OH info */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: fs/lockd/svclock.c:419:
+                 conflock->oh.len = 0;   /* don't return OH info */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: fs/lockd/svclock.c:420:
+                 conflock->fl = lock->fl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: fs/lockd/svclock.c:420:
+                 conflock->fl = lock->fl;$

WARNING:LONG_LINE_STRING: line length of 128 exceeds 100 columns
#82: FILE: fs/lockd/svclock.c:421:
+                 dprintk("nlmsvc_testlock: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: fs/lockd/svclock.c:421:
+                 dprintk("nlmsvc_testlock: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/lockd/svclock.c:421:
+                 dprintk("nlmsvc_testlock: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",$

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#82: FILE: fs/lockd/svclock.c:421:
+                 dprintk("nlmsvc_testlock: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#83: FILE: fs/lockd/svclock.c:422:
+                       error, lock->fl.fl_type, lock->fl.fl_pid, lock->fl.fl_start, lock->fl.fl_end);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: fs/lockd/svclock.c:422:
+                       error, lock->fl.fl_type, lock->fl.fl_pid, lock->fl.fl_start, lock->fl.fl_end);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: fs/lockd/svclock.c:422:
+                 dprintk("nlmsvc_testlock: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",
+                       error, lock->fl.fl_type, lock->fl.fl_pid, lock->fl.fl_start, lock->fl.fl_end);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: fs/lockd/svclock.c:422:
+                       error, lock->fl.fl_type, lock->fl.fl_pid, lock->fl.fl_start, lock->fl.fl_end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: fs/lockd/svclock.c:423:
+                 return nlm_lck_denied;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: fs/lockd/svclock.c:423:
+                 return nlm_lck_denied;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: fs/lockd/svclock.c:424:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/lockd/svclock.c:424:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: fs/lockd/svclock.c:425:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: fs/lockd/svclock.c:465:
+     error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/lockd/svclock.c:466:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#99: FILE: fs/lockd/svclock.c:466:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {
+           error = file->f_file.f_op->lock(&file->f_file, F_SETLK, &lock->fl);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op'
#99: FILE: fs/lockd/svclock.c:466:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op->lock'
#99: FILE: fs/lockd/svclock.c:466:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: fs/lockd/svclock.c:467:
+           error = file->f_file.f_op->lock(&file->f_file, F_SETLK, &lock->fl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/lockd/svclock.c:467:
+           error = file->f_file.f_op->lock(&file->f_file, F_SETLK, &lock->fl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: fs/lockd/svclock.c:468:
+           dprintk("nlmsvc_unlock: filesystem (un)lock operation returned error %d\n", error);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/lockd/svclock.c:468:
+           dprintk("nlmsvc_unlock: filesystem (un)lock operation returned error %d\n", error);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/lockd/svclock.c:469:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: fs/lockd/svclock.c:471:
+     if (error == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#104: FILE: fs/lockd/svclock.c:471:
+     if (error == 0)
+           error = posix_lock_file(&file->f_file, &lock->fl, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: fs/lockd/svclock.c:472:
+           error = posix_lock_file(&file->f_file, &lock->fl, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: fs/lockd/svclock.c:472:
+           error = posix_lock_file(&file->f_file, &lock->fl, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: fs/lockd/svclock.c:566:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#115: FILE: fs/lockd/svclock.c:566:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {
+           struct file_lock getlock;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op'
#115: FILE: fs/lockd/svclock.c:566:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op->lock'
#115: FILE: fs/lockd/svclock.c:566:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: fs/lockd/svclock.c:567:
+           struct file_lock getlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: fs/lockd/svclock.c:567:
+           struct file_lock getlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: fs/lockd/svclock.c:568:
+           unsigned char found_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: fs/lockd/svclock.c:568:
+           unsigned char found_type;$

WARNING:TYPO_SPELLING: 'inforation' may be misspelled - perhaps 'information'?
#119: FILE: fs/lockd/svclock.c:570:
+           /* save requestor lock inforation since GETLK will overwrite it */
                                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: fs/lockd/svclock.c:570:
+           /* save requestor lock inforation since GETLK will overwrite it */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: fs/lockd/svclock.c:571:
+           getlock.fl_pid   = lock->fl.fl_pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: fs/lockd/svclock.c:571:
+           getlock.fl_pid   = lock->fl.fl_pid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: fs/lockd/svclock.c:572:
+           getlock.fl_type  = lock->fl.fl_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: fs/lockd/svclock.c:572:
+           getlock.fl_type  = lock->fl.fl_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: fs/lockd/svclock.c:573:
+           getlock.fl_start = lock->fl.fl_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/lockd/svclock.c:573:
+           getlock.fl_start = lock->fl.fl_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: fs/lockd/svclock.c:574:
+           getlock.fl_end   = lock->fl.fl_end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/lockd/svclock.c:574:
+           getlock.fl_end   = lock->fl.fl_end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: fs/lockd/svclock.c:576:
+           error = file->f_file.f_op->lock(&file->f_file, F_GETLK, &lock->fl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/lockd/svclock.c:576:
+           error = file->f_file.f_op->lock(&file->f_file, F_GETLK, &lock->fl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: fs/lockd/svclock.c:577:
+           found_type = lock->fl.fl_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/lockd/svclock.c:577:
+           found_type = lock->fl.fl_type;$

WARNING:TYPO_SPELLING: 'inforation' may be misspelled - perhaps 'information'?
#128: FILE: fs/lockd/svclock.c:579:
+           /* restore requestor lock inforation.  */
                                      ^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: fs/lockd/svclock.c:579:
+           /* restore requestor lock inforation.  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: fs/lockd/svclock.c:580:
+           lock->fl.fl_pid   = getlock.fl_pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/lockd/svclock.c:580:
+           lock->fl.fl_pid   = getlock.fl_pid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: fs/lockd/svclock.c:581:
+           lock->fl.fl_type  = getlock.fl_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/lockd/svclock.c:581:
+           lock->fl.fl_type  = getlock.fl_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: fs/lockd/svclock.c:582:
+           lock->fl.fl_start = getlock.fl_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/lockd/svclock.c:582:
+           lock->fl.fl_start = getlock.fl_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: fs/lockd/svclock.c:583:
+           lock->fl.fl_end   = getlock.fl_end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: fs/lockd/svclock.c:583:
+           lock->fl.fl_end   = getlock.fl_end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: fs/lockd/svclock.c:585:
+           if ((!error) && (found_type != F_UNLCK)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/lockd/svclock.c:585:
+           if ((!error) && (found_type != F_UNLCK)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#134: FILE: fs/lockd/svclock.c:585:
+           if ((!error) && (found_type != F_UNLCK)) {
+                 dprintk("nlmsvc_grant_blocked: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!error'
#134: FILE: fs/lockd/svclock.c:585:
+           if ((!error) && (found_type != F_UNLCK)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'found_type != F_UNLCK'
#134: FILE: fs/lockd/svclock.c:585:
+           if ((!error) && (found_type != F_UNLCK)) {

WARNING:LONG_LINE_STRING: line length of 133 exceeds 100 columns
#135: FILE: fs/lockd/svclock.c:586:
+                 dprintk("nlmsvc_grant_blocked: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: fs/lockd/svclock.c:586:
+                 dprintk("nlmsvc_grant_blocked: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: fs/lockd/svclock.c:586:
+                 dprintk("nlmsvc_grant_blocked: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",$

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#135: FILE: fs/lockd/svclock.c:586:
+                 dprintk("nlmsvc_grant_blocked: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#136: FILE: fs/lockd/svclock.c:587:
+                       error, lock->fl.fl_type, lock->fl.fl_pid, lock->fl.fl_start, lock->fl.fl_end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: fs/lockd/svclock.c:587:
+                       error, lock->fl.fl_type, lock->fl.fl_pid, lock->fl.fl_start, lock->fl.fl_end);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: fs/lockd/svclock.c:587:
+                 dprintk("nlmsvc_grant_blocked: filesystem (get)lock operation returned error %d type %d pid %d start %Ld end %Ld\n",
+                       error, lock->fl.fl_type, lock->fl.fl_pid, lock->fl.fl_start, lock->fl.fl_end);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: fs/lockd/svclock.c:587:
+                       error, lock->fl.fl_type, lock->fl.fl_pid, lock->fl.fl_start, lock->fl.fl_end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: fs/lockd/svclock.c:588:
+                 dprintk("lockd: lock still blocked\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fs/lockd/svclock.c:588:
+                 dprintk("lockd: lock still blocked\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: fs/lockd/svclock.c:590:
+                 /* If the blocker is local and recorded in the vfs lock structures, use its$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: fs/lockd/svclock.c:591:
+                  * conflock to wait on.  If the lock is denied due to the filesystem call, we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: fs/lockd/svclock.c:592:
+                  * don't have a conflicting lock so retry in a while.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: fs/lockd/svclock.c:593:
+                  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: fs/lockd/svclock.c:595:
+                 if ((conflock = posix_test_lock(&file->f_file, &lock->fl)) != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/lockd/svclock.c:595:
+                 if ((conflock = posix_test_lock(&file->f_file, &lock->fl)) != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#144: FILE: fs/lockd/svclock.c:595:
+                 if ((conflock = posix_test_lock(&file->f_file, &lock->fl)) != NULL) {
+                       nlmsvc_insert_block(block, NLM_NEVER);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#144: FILE: fs/lockd/svclock.c:595:
+                 if ((conflock = posix_test_lock(&file->f_file, &lock->fl)) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: fs/lockd/svclock.c:596:
+                       nlmsvc_insert_block(block, NLM_NEVER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/lockd/svclock.c:596:
+                       nlmsvc_insert_block(block, NLM_NEVER);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: fs/lockd/svclock.c:597:
+                       posix_block_lock(conflock, &lock->fl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/lockd/svclock.c:597:
+                       posix_block_lock(conflock, &lock->fl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: fs/lockd/svclock.c:598:
+                       up(&file->f_sema);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/lockd/svclock.c:598:
+                       up(&file->f_sema);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: fs/lockd/svclock.c:599:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/lockd/svclock.c:599:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: fs/lockd/svclock.c:600:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/lockd/svclock.c:600:
+                 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: fs/lockd/svclock.c:601:
+                 else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/lockd/svclock.c:601:
+                 else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#150: FILE: fs/lockd/svclock.c:601:
+                 else {
+                       dprintk("nlmsvc_grant_blocked: NO conflock RECORDED IN THE VFS!\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#150: FILE: fs/lockd/svclock.c:601:
+                 }
+                 else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#150: FILE: fs/lockd/svclock.c:601:
+                 else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: fs/lockd/svclock.c:602:
+                       dprintk("nlmsvc_grant_blocked: NO conflock RECORDED IN THE VFS!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: fs/lockd/svclock.c:602:
+                       dprintk("nlmsvc_grant_blocked: NO conflock RECORDED IN THE VFS!\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: fs/lockd/svclock.c:603:
+                       nlmsvc_insert_block(block, jiffies + 30 * HZ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/lockd/svclock.c:603:
+                       nlmsvc_insert_block(block, jiffies + 30 * HZ);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: fs/lockd/svclock.c:604:
+                       up(&file->f_sema);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/lockd/svclock.c:604:
+                       up(&file->f_sema);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: fs/lockd/svclock.c:605:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: fs/lockd/svclock.c:605:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: fs/lockd/svclock.c:606:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: fs/lockd/svclock.c:606:
+                 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/lockd/svclock.c:607:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/lockd/svclock.c:607:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/lockd/svclock.c:608:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/lockd/svclock.c:625:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#168: FILE: fs/lockd/svclock.c:625:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {
+           error = file->f_file.f_op->lock(&file->f_file, F_SETLK, &lock->fl);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op'
#168: FILE: fs/lockd/svclock.c:625:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_file.f_op->lock'
#168: FILE: fs/lockd/svclock.c:625:
+     if ((file->f_file.f_op) && (file->f_file.f_op->lock)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: fs/lockd/svclock.c:626:
+           error = file->f_file.f_op->lock(&file->f_file, F_SETLK, &lock->fl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/lockd/svclock.c:626:
+           error = file->f_file.f_op->lock(&file->f_file, F_SETLK, &lock->fl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: fs/lockd/svclock.c:627:
+           dprintk("nlmsvc_grant_blocked: filesystem lock operation returned error %d\n", error);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: fs/lockd/svclock.c:627:
+           dprintk("nlmsvc_grant_blocked: filesystem lock operation returned error %d\n", error);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: fs/lockd/svclock.c:628:
+           if (error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/lockd/svclock.c:628:
+           if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#171: FILE: fs/lockd/svclock.c:628:
+           if (error) {
+                 printk(KERN_WARNING "lockd: unexpected error %d in %s!\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: fs/lockd/svclock.c:629:
+                 printk(KERN_WARNING "lockd: unexpected error %d in %s!\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: fs/lockd/svclock.c:629:
+                 printk(KERN_WARNING "lockd: unexpected error %d in %s!\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#172: FILE: fs/lockd/svclock.c:629:
+                 printk(KERN_WARNING "lockd: unexpected error %d in %s!\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: fs/lockd/svclock.c:630:
+                       error, __FUNCTION__);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: fs/lockd/svclock.c:630:
+                 printk(KERN_WARNING "lockd: unexpected error %d in %s!\n",
+                       error, __FUNCTION__);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: fs/lockd/svclock.c:630:
+                       error, __FUNCTION__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#173: FILE: fs/lockd/svclock.c:630:
+                       error, __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: fs/lockd/svclock.c:631:
+                 nlmsvc_insert_block(block, jiffies + 10 * HZ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: fs/lockd/svclock.c:631:
+                 nlmsvc_insert_block(block, jiffies + 10 * HZ);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: fs/lockd/svclock.c:632:
+                 up(&file->f_sema);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: fs/lockd/svclock.c:632:
+                 up(&file->f_sema);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: fs/lockd/svclock.c:633:
+                 return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: fs/lockd/svclock.c:633:
+                 return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: fs/lockd/svclock.c:634:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: fs/lockd/svclock.c:634:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: fs/lockd/svclock.c:635:
+     }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383081.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 73 errors, 99 warnings, 21 checks, 141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383081.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
