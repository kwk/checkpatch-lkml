WARNING:LONG_LINE: line length of 151 exceeds 100 columns
#199: FILE: include/linux/mm.h:133:
+	int (*populate)(struct vm_area_struct * area, unsigned long address, unsigned long len, unsigned long prot, unsigned long pgoff, int nonblock);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: include/linux/mm.h:133:
+	int (*populate)(struct vm_area_struct * area, unsigned long address, unsigned long len, unsigned long prot, unsigned long pgoff, int nonblock);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#207: FILE: include/linux/mm.h:370:
+extern int install_page(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long addr, struct page *page, unsigned long prot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: include/linux/mm.h:370:
+extern int install_page(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long addr, struct page *page, unsigned long prot);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#211: FILE: include/linux/mm.h:374:
+extern int sys_remap_file_pages(unsigned long start, unsigned long size, unsigned long prot, unsigned long pgoff, unsigned long nonblock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: include/linux/mm.h:374:
+extern int sys_remap_file_pages(unsigned long start, unsigned long size, unsigned long prot, unsigned long pgoff, unsigned long nonblock);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#240: FILE: mm/fremap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: mm/fremap.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#253: FILE: mm/fremap.c:14:
+#include <asm/mmu_context.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#267: FILE: mm/fremap.c:28:
+			struct page *page = pfn_to_page(pfn);
+			if (!PageReserved(page)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: mm/fremap.c:47:
+int install_page(struct mm_struct *mm, struct vm_area_struct *vma,
+		unsigned long addr, struct page *page, unsigned long prot)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: mm/fremap.c:105:
+int sys_remap_file_pages(unsigned long start, unsigned long size,
+	unsigned long prot, unsigned long pgoff, unsigned long flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: mm/fremap.c:128:
+	if (vma && (vma->vm_flags & VM_SHARED) &&
+		vma->vm_ops && vma->vm_ops->populate &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: mm/shmem.c:714:
+static int shmem_getpage(struct inode *inode,
+		unsigned long idx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: mm/shmem.c:913:
+static int shmem_populate(struct vm_area_struct *vma,
+		unsigned long addr,

CHECK:SPACING: No space is necessary after a cast
#452: FILE: mm/shmem.c:925:
+	if (((loff_t) pgoff << PAGE_CACHE_SHIFT) >= inode->i_size)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: mm/mmap.c:607:
+		sys_remap_file_pages(addr, len, prot,
+					pgoff, flags & MAP_NONBLOCK);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#553: FILE: mm/filemap.c:1157:
+static struct page * filemap_getpage(struct file *file, unsigned long pgoff,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: mm/filemap.c:1158:
+static struct page * filemap_getpage(struct file *file, unsigned long pgoff,
+					int nonblock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: mm/filemap.c:1268:
+static int filemap_populate(struct vm_area_struct *vma,
+			unsigned long addr,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423711.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 6 warnings, 11 checks, 484 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423711.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
