WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	           ChangeSet	1.682   -> 1.683  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	 fs/reiserfs/namei.c	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	include/linux/reiserfs_fs.h	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	fs/reiserfs/bitmap.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# 02/08/06	green@angband.namesys.com	1.683

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# reiserfs_fs.h, namei.c, bitmap.c:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#   fix __FUNCTION__ usage to prevent gcc 3.1+ warnings

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#63: 
--- a/fs/reiserfs/bitmap.c	Tue Aug  6 10:38:10 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 5)
#68: FILE: fs/reiserfs/bitmap.c:685:
   if (inode->u.reiserfs_i.i_prealloc_count < 0)
+     reiserfs_warning("zam-4001:%s: inode has negative prealloc blocks count.\n", __FUNCTION__);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: fs/reiserfs/bitmap.c:686:
+     reiserfs_warning("zam-4001:%s: inode has negative prealloc blocks count.\n", __FUNCTION__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#70: FILE: fs/reiserfs/bitmap.c:686:
+     reiserfs_warning("zam-4001:%s: inode has negative prealloc blocks count.\n", __FUNCTION__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#77: FILE: fs/reiserfs/bitmap.c:701:
     if (!inode->u.reiserfs_i.i_prealloc_count) {
+      reiserfs_warning("zam-4001:%s: inode is in prealloc list but has no preallocated blocks.\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#79: FILE: fs/reiserfs/bitmap.c:702:
+      reiserfs_warning("zam-4001:%s: inode is in prealloc list but has no preallocated blocks.\n", __FUNCTION__);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/reiserfs/bitmap.c:702:
+      reiserfs_warning("zam-4001:%s: inode is in prealloc list but has no preallocated blocks.\n", __FUNCTION__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#79: FILE: fs/reiserfs/bitmap.c:702:
+      reiserfs_warning("zam-4001:%s: inode is in prealloc list but has no preallocated blocks.\n", __FUNCTION__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#89: FILE: fs/reiserfs/namei.c:289:
 	if (retval == IO_ERROR) {
+	    reiserfs_warning ("zam-7001: io error in %s\n", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#91: FILE: fs/reiserfs/namei.c:290:
+	    reiserfs_warning ("zam-7001: io error in %s\n", __FUNCTION__);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#91: FILE: fs/reiserfs/namei.c:290:
+	    reiserfs_warning ("zam-7001: io error in %s\n", __FUNCTION__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#98: FILE: fs/reiserfs/namei.c:415:
         if (retval != NAME_FOUND) {
+	    reiserfs_warning ("zam-7002:%s: \"reiserfs_find_entry\" has returned"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#101: FILE: fs/reiserfs/namei.c:416:
+	    reiserfs_warning ("zam-7002:%s: \"reiserfs_find_entry\" has returned"

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: fs/reiserfs/namei.c:417:
+                              " unexpected value (%d)\n", __FUNCTION__, retval);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/reiserfs/namei.c:417:
+                              " unexpected value (%d)\n", __FUNCTION__, retval);$

WARNING:SPLIT_STRING: quoted string split across lines
#102: FILE: fs/reiserfs/namei.c:417:
+	    reiserfs_warning ("zam-7002:%s: \"reiserfs_find_entry\" has returned"
+                              " unexpected value (%d)\n", __FUNCTION__, retval);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#102: FILE: fs/reiserfs/namei.c:417:
+                              " unexpected value (%d)\n", __FUNCTION__, retval);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 2)
#112: FILE: include/linux/reiserfs_fs.h:77:
 if( !( cond ) ) 								\
+  reiserfs_panic( 0, "reiserfs[%i]: assertion " #cond " failed at "	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: include/linux/reiserfs_fs.h:78:
+  reiserfs_panic( 0, "reiserfs[%i]: assertion " #cond " failed at "^I\$

ERROR:SPACING: space prohibited after that open parenthesis '('
#116: FILE: include/linux/reiserfs_fs.h:78:
+  reiserfs_panic( 0, "reiserfs[%i]: assertion " #cond " failed at "	\

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#118: FILE: include/linux/reiserfs_fs.h:80:
+		  in_interrupt() ? -1 : current -> pid, __LINE__ , __FUNCTION__ , ##args )
 		                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#118: FILE: include/linux/reiserfs_fs.h:80:
+		  in_interrupt() ? -1 : current -> pid, __LINE__ , __FUNCTION__ , ##args )
 		                                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#118: FILE: include/linux/reiserfs_fs.h:80:
+		  in_interrupt() ? -1 : current -> pid, __LINE__ , __FUNCTION__ , ##args )
 		                                                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#118: FILE: include/linux/reiserfs_fs.h:80:
+		  in_interrupt() ? -1 : current -> pid, __LINE__ , __FUNCTION__ , ##args )

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#118: FILE: include/linux/reiserfs_fs.h:80:
+		  in_interrupt() ? -1 : current -> pid, __LINE__ , __FUNCTION__ , ##args )

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 35 warnings, 0 checks, 46 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
