WARNING:TYPO_SPELLING: 'analagous' may be misspelled - perhaps 'analogous'?
#43: 
	  analagous to set_pte()
	  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#59: FILE: mm/hugetlb.c:14:
+#include <asm/pgtable.h>

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#101: FILE: mm/hugetlb.c:287:
+		BUG_ON(!src_pte || pte_none(*src_pte)); /* prefaulted */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#124: FILE: mm/hugetlb.c:310:
+	BUG_ON(start & ~HPAGE_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: mm/hugetlb.c:311:
+	BUG_ON(end & ~HPAGE_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: mm/hugetlb.c:341:
+	BUG_ON(vma->vm_start & ~HPAGE_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#154: FILE: mm/hugetlb.c:342:
+	BUG_ON(vma->vm_end & ~HPAGE_MASK);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#166: FILE: mm/hugetlb.c:354:
+		if (! pte_none(*pte))
 		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#185: FILE: mm/hugetlb.c:373:
+			if (! ret) {
 			    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#208: FILE: mm/hugetlb.c:396:
+	BUG_ON(!is_vm_hugetlb_page(vma));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#210: FILE: mm/hugetlb.c:398:
+	vpfn = vaddr/PAGE_SIZE;
 	            ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#212: FILE: mm/hugetlb.c:400:
+	while (vaddr < vma->vm_end && remainder) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#220: FILE: mm/hugetlb.c:408:
+			 * indexing below to work. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#226: FILE: mm/hugetlb.c:414:
+			page = &pte_page(*pte)[vpfn % (HPAGE_SIZE/PAGE_SIZE)];
 			                                         ^

CHECK:SPACING: No space is necessary after a cast
#805: FILE: arch/i386/mm/hugetlbpage.c:119:
+	pmd_t *pmd = (pmd_t *) pte;

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1595: FILE: include/asm-sh/pgtable.h:197:
+static inline pte_t pte_mkhuge(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_SZHUGE)); return pte; }

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1619: FILE: include/asm-i386/pgtable.h:239:
+static inline pte_t pte_mkhuge(pte_t pte)	{ (pte).pte_low |= _PAGE_PRESENT | _PAGE_PSE; return pte; }

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SETCLEAR_HUGE_PTE' is wrong - use Kconfig variables or standard guards instead
#1639: FILE: include/asm-sparc64/page.h:96:
+#define ARCH_HAS_SETCLEAR_HUGE_PTE

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SETCLEAR_HUGE_PTE' is wrong - use Kconfig variables or standard guards instead
#1663: FILE: include/asm-sh/page.h:34:
+#define ARCH_HAS_SETCLEAR_HUGE_PTE

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1675: FILE: include/asm-sh64/pgtable.h:432:
+extern inline pte_t pte_mkhuge(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_SZHUGE)); return pte; }

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SETCLEAR_HUGE_PTE' is wrong - use Kconfig variables or standard guards instead
#1688: FILE: include/asm-sh64/page.h:44:
+#define ARCH_HAS_SETCLEAR_HUGE_PTE

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1709: FILE: include/linux/hugetlb.h:59:
+#define hugetlb_clean_stale_pgtable(pte)	BUG()

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_HUGETLB_CLEAN_STALE_PGTABLE' is wrong - use Kconfig variables or standard guards instead
#1725: FILE: include/asm-i386/page.h:67:
+#define ARCH_HAS_HUGETLB_CLEAN_STALE_PGTABLE

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236071.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 13 warnings, 4 checks, 1324 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236071.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
