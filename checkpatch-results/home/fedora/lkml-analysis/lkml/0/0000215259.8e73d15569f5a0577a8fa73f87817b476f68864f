WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#166: FILE: drivers/char/vt.c:344:
+		return vc->vc_sw->con_build_attr(vc, _color, _intensity, _blink, _underline, _reverse);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#204: FILE: drivers/char/vt.c:385:
+	vc->vc_attr = build_attr(vc, vc->vc_color, vc->vc_intensity, vc->vc_blink, vc->vc_underline, vc->vc_reverse ^ vc->vc_decscnm);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#205: FILE: drivers/char/vt.c:386:
+	vc->vc_video_erase_char = (build_attr(vc, vc->vc_color, 1, vc->vc_blink, 0, vc->vc_decscnm) << 8) | ' ';

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: drivers/char/vt.c:475:
+		unsigned short oldattr = vc->vc_attr;
+		vc->vc_sw->con_bmove(vc, vc->vc_y, vc->vc_x, vc->vc_y, vc->vc_x + nr, 1,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#262: FILE: drivers/char/vt.c:497:
+		unsigned short oldattr = vc->vc_attr;
+		vc->vc_sw->con_bmove(vc, vc->vc_y, vc->vc_x + nr, vc->vc_y, vc->vc_x, 1,

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#316: FILE: drivers/char/vt.c:592:
+		scr_writew((scr_readw(p)&mask) | (vc->vc_video_erase_char & ~mask), p);
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p)...) over kmalloc(sizeof(struct vc_data)...)
#388: FILE: drivers/char/vt.c:708:
+	    p = (long) kmalloc(sizeof(struct vc_data) + sizeof(struct vt_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#526: FILE: drivers/char/vt.c:954:
+    ^Iif (vc->vc_y + 1 == vc->vc_bottom)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#526: FILE: drivers/char/vt.c:954:
+    ^Iif (vc->vc_y + 1 == vc->vc_bottom)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/char/vt.c:954:
+    ^Iif (vc->vc_y + 1 == vc->vc_bottom)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#526: FILE: drivers/char/vt.c:954:
+    	if (vc->vc_y + 1 == vc->vc_bottom)
[...]
+	else if (vc->vc_y < vc->vc_rows - 1) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: drivers/char/vt.c:957:
+^I    ^Ivc->vc_y++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#529: FILE: drivers/char/vt.c:957:
+^I    ^Ivc->vc_y++;$

CHECK:BRACES: braces {} should be used on all arms of this statement
#546: FILE: drivers/char/vt.c:968:
+	if (vc->vc_y == vc->vc_top)
[...]
+	else if (vc->vc_y > 0) {
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#561: FILE: drivers/char/vt.c:980:
+	vc->vc_need_wrap = vc->vc_x = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#863: FILE: drivers/char/vt.c:1243:
+			switch(vc->vc_par[i]) {	/* DEC private modes set/reset */

ERROR:SPACING: space required before the open parenthesis '('
#918: FILE: drivers/char/vt.c:1289:
+			switch(vc->vc_par[i]) {	/* ANSI modes set/reset */

ERROR:SPACING: space required before the open parenthesis '('
#941: FILE: drivers/char/vt.c:1309:
+	switch(vc->vc_par[0]) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1114: FILE: drivers/char/vt.c:1435:
+	vc->vc_translate	= set_translate(vc->vc_charset ? vc->vc_G1_charset : vc->vc_G0_charset, vc);

CHECK:CAMELCASE: Avoid CamelCase: <ESnormal>
#1148: FILE: drivers/char/vt.c:1449:
+	vc->vc_state		= ESnormal;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ESesc>
#1253: FILE: drivers/char/vt.c:1548:
+		vc->vc_state = ESesc;

CHECK:CAMELCASE: Avoid CamelCase: <ESsquare>
#1260: FILE: drivers/char/vt.c:1554:
+		vc->vc_state = ESsquare;

ERROR:SPACING: space required before the open parenthesis '('
#1264: FILE: drivers/char/vt.c:1557:
+	switch(vc->vc_state) {

CHECK:CAMELCASE: Avoid CamelCase: <ESnonstd>
#1275: FILE: drivers/char/vt.c:1565:
+			vc->vc_state = ESnonstd;

CHECK:CAMELCASE: Avoid CamelCase: <ESpercent>
#1279: FILE: drivers/char/vt.c:1568:
+			vc->vc_state = ESpercent;

CHECK:CAMELCASE: Avoid CamelCase: <ESsetG0>
#1297: FILE: drivers/char/vt.c:1593:
+			vc->vc_state = ESsetG0;

CHECK:CAMELCASE: Avoid CamelCase: <ESsetG1>
#1301: FILE: drivers/char/vt.c:1596:
+			vc->vc_state = ESsetG1;

CHECK:CAMELCASE: Avoid CamelCase: <EShash>
#1305: FILE: drivers/char/vt.c:1599:
+			vc->vc_state = EShash;

CHECK:CAMELCASE: Avoid CamelCase: <ESpalette>
#1320: FILE: drivers/char/vt.c:1617:
+			vc->vc_state = ESpalette;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1344: FILE: drivers/char/vt.c:1630:
+				int i = vc->vc_par[0] * 3, j = 1;
+				vc->vc_palette[i] = 16 * vc->vc_par[j++];

CHECK:CAMELCASE: Avoid CamelCase: <ESgetpars>
#1366: FILE: drivers/char/vt.c:1646:
+		vc->vc_state = ESgetpars;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1369: FILE: drivers/char/vt.c:1648:
+			vc->vc_state=ESfunckey;
 			            ^

CHECK:CAMELCASE: Avoid CamelCase: <ESfunckey>
#1369: FILE: drivers/char/vt.c:1648:
+			vc->vc_state=ESfunckey;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1380: FILE: drivers/char/vt.c:1655:
+		if (c == ';' && vc->vc_npar < NPAR - 1) {
[...]
 		} else if (c>='0' && c<='9') {
[...]
+			vc->vc_par[vc->vc_npar] += c - '0';
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1390: FILE: drivers/char/vt.c:1662:
+		} else

CHECK:CAMELCASE: Avoid CamelCase: <ESgotpars>
#1391: FILE: drivers/char/vt.c:1663:
+			vc->vc_state = ESgotpars;

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#1407: FILE: drivers/char/vt.c:1676:
+					vc->vc_cursor_type = vc->vc_par[0] | (vc->vc_par[1] << 8) | (vc->vc_par[2] << 16);

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#1501: FILE: drivers/char/vt.c:1744:
+			gotoxay(vc, vc->vc_x ,vc->vc_par[0]);
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#1501: FILE: drivers/char/vt.c:1744:
+			gotoxay(vc, vc->vc_x ,vc->vc_par[0]);
 			                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1547: FILE: drivers/char/vt.c:1773:
+			if (!vc->vc_par[0])
[...]
+			else if (vc->vc_par[0] == 3) {
[...]

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1693: FILE: drivers/char/vt.c:1899:
+	vc->vc_sw->con_putcs(vc, (u16 *)draw_from, (u16 *)draw_to - (u16 *)draw_from, vc->vc_y, draw_x); \

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1714: FILE: drivers/char/vt.c:1976:
+		} else if (vc->vc_utf) {
[...]
 		    if(c > 0x7f) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#1726: FILE: drivers/char/vt.c:1983:
+				if (vc->vc_utf_count == 0)
+				    tc = c = vc->vc_utf_char;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1727: FILE: drivers/char/vt.c:1984:
+				    tc = c = vc->vc_utf_char;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#1730: FILE: drivers/char/vt.c:1987:
 				if ((c & 0xe0) == 0xc0) {
+				    vc->vc_utf_count = 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#1735: FILE: drivers/char/vt.c:1990:
 				} else if ((c & 0xf0) == 0xe0) {
+				    vc->vc_utf_count = 2;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#1740: FILE: drivers/char/vt.c:1993:
 				} else if ((c & 0xf8) == 0xf0) {
+				    vc->vc_utf_count = 3;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#1745: FILE: drivers/char/vt.c:1996:
 				} else if ((c & 0xfc) == 0xf8) {
+				    vc->vc_utf_count = 4;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#1750: FILE: drivers/char/vt.c:1999:
 				} else if ((c & 0xfe) == 0xfc) {
+				    vc->vc_utf_count = 5;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#1755: FILE: drivers/char/vt.c:2002:
 				} else
+				    vc->vc_utf_count = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#1765: FILE: drivers/char/vt.c:2010:
 		} else {	/* no utf */
+		  tc = vc->vc_translate[vc->vc_toggle_meta ? (c | 0x80) : c];

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1780: FILE: drivers/char/vt.c:2027:
+						: CTRL_ACTION) >> c) & 1)))
+			&& (c != 127 || vc->vc_disp_ctrl)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1807: FILE: drivers/char/vt.c:2059:
+				     ((vc->vc_attr << 8) & ~himask) + ((tc & 0x100) ? himask : 0) + (tc & 0xff) :

CHECK:SPACING: No space is necessary after a cast
#1809: FILE: drivers/char/vt.c:2061:
+				   (u16 *) vc->vc_pos);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 22 warnings, 23 checks, 1930 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
