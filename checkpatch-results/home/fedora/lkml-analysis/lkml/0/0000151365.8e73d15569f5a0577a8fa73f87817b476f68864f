WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: arch/sparc/lib/atomic32.c:45:
+	unsigned long flags;
+	spin_lock_irqsave(ATOMIC_HASH(v), flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: include/asm-sparc/atomic.h:22:
+extern int atomic_cmpxchg(atomic_t *, int, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'atomic_t *' should also have an identifier name
#164: FILE: include/asm-sparc/atomic.h:22:
+extern int atomic_cmpxchg(atomic_t *, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#164: FILE: include/asm-sparc/atomic.h:22:
+extern int atomic_cmpxchg(atomic_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#164: FILE: include/asm-sparc/atomic.h:22:
+extern int atomic_cmpxchg(atomic_t *, int, int);

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: include/asm-arm26/atomic.h:70:
+        local_irq_save(flags);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: include/asm-arm26/atomic.h:70:
+        local_irq_save(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: include/asm-arm26/atomic.h:74:
+        local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: include/asm-arm26/atomic.h:74:
+        local_irq_restore(flags);$

WARNING:INLINE: plain inline is preferred over __inline__
#315: FILE: include/asm-h8300/atomic.h:85:
+static __inline__ int atomic_cmpxchg(atomic_t *v, int old, int new)

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: include/asm-h8300/atomic.h:87:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: include/asm-h8300/atomic.h:87:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: include/asm-h8300/atomic.h:88:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: include/asm-h8300/atomic.h:88:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: include/asm-h8300/atomic.h:89:
+        local_irq_save(flags);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#319: FILE: include/asm-h8300/atomic.h:89:
+        unsigned long flags;
+        local_irq_save(flags);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: include/asm-h8300/atomic.h:89:
+        local_irq_save(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: include/asm-h8300/atomic.h:90:
+        ret = v->counter;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: include/asm-h8300/atomic.h:90:
+        ret = v->counter;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: include/asm-h8300/atomic.h:91:
+        if (likely(ret == old))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: include/asm-h8300/atomic.h:91:
+        if (likely(ret == old))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: include/asm-h8300/atomic.h:92:
+                v->counter = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: include/asm-h8300/atomic.h:92:
+                v->counter = new;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: include/asm-h8300/atomic.h:93:
+        local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: include/asm-h8300/atomic.h:93:
+        local_irq_restore(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: include/asm-h8300/atomic.h:94:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: include/asm-h8300/atomic.h:94:
+        return ret;$

WARNING:INLINE: plain inline is preferred over __inline__
#338: FILE: include/asm-sh64/atomic.h:102:
+static __inline__ int atomic_cmpxchg(atomic_t *v, int old, int new)

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: include/asm-sh64/atomic.h:104:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: include/asm-sh64/atomic.h:104:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: include/asm-sh64/atomic.h:105:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: include/asm-sh64/atomic.h:105:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: include/asm-sh64/atomic.h:107:
+        local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: include/asm-sh64/atomic.h:107:
+        local_irq_save(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: include/asm-sh64/atomic.h:108:
+        ret = v->counter;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: include/asm-sh64/atomic.h:108:
+        ret = v->counter;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: include/asm-sh64/atomic.h:109:
+        if (likely(ret == old))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: include/asm-sh64/atomic.h:109:
+        if (likely(ret == old))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: include/asm-sh64/atomic.h:110:
+                v->counter = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: include/asm-sh64/atomic.h:110:
+                v->counter = new;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: include/asm-sh64/atomic.h:111:
+        local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: include/asm-sh64/atomic.h:111:
+        local_irq_restore(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: include/asm-sh64/atomic.h:113:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: include/asm-sh64/atomic.h:113:
+        return ret;$

WARNING:INLINE: plain inline is preferred over __inline__
#363: FILE: include/asm-v850/atomic.h:93:
+static __inline__ int atomic_cmpxchg(atomic_t *v, int old, int new)

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: include/asm-v850/atomic.h:95:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: include/asm-v850/atomic.h:95:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: include/asm-v850/atomic.h:96:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: include/asm-v850/atomic.h:96:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: include/asm-v850/atomic.h:98:
+        local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: include/asm-v850/atomic.h:98:
+        local_irq_save(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: include/asm-v850/atomic.h:99:
+        ret = v->counter;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: include/asm-v850/atomic.h:99:
+        ret = v->counter;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: include/asm-v850/atomic.h:100:
+        if (likely(ret == old))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: include/asm-v850/atomic.h:100:
+        if (likely(ret == old))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: include/asm-v850/atomic.h:101:
+                v->counter = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: include/asm-v850/atomic.h:101:
+                v->counter = new;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: include/asm-v850/atomic.h:102:
+        local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: include/asm-v850/atomic.h:102:
+        local_irq_restore(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: include/asm-v850/atomic.h:104:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: include/asm-v850/atomic.h:104:
+        return ret;$

WARNING:INLINE: plain inline is preferred over __inline__
#400: FILE: include/asm-sh/atomic.h:90:
+static __inline__ int atomic_cmpxchg(atomic_t *v, int old, int new)

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: include/asm-sh/atomic.h:92:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: include/asm-sh/atomic.h:92:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: include/asm-sh/atomic.h:93:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: include/asm-sh/atomic.h:93:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: include/asm-sh/atomic.h:95:
+        local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: include/asm-sh/atomic.h:95:
+        local_irq_save(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: include/asm-sh/atomic.h:96:
+        ret = v->counter;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: include/asm-sh/atomic.h:96:
+        ret = v->counter;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: include/asm-sh/atomic.h:97:
+        if (likely(ret == old))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: include/asm-sh/atomic.h:97:
+        if (likely(ret == old))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: include/asm-sh/atomic.h:98:
+                v->counter = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: include/asm-sh/atomic.h:98:
+                v->counter = new;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: include/asm-sh/atomic.h:99:
+        local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: include/asm-sh/atomic.h:99:
+        local_irq_restore(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: include/asm-sh/atomic.h:101:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: include/asm-sh/atomic.h:101:
+        return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: include/asm-arm/atomic.h:139:
+        local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: include/asm-arm/atomic.h:139:
+        local_irq_save(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: include/asm-arm/atomic.h:143:
+        local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: include/asm-arm/atomic.h:143:
+        local_irq_restore(flags);$

WARNING:INLINE: plain inline is preferred over __inline__
#451: FILE: include/asm-cris/atomic.h:126:
+static __inline__ int atomic_cmpxchg(atomic_t *v, int old, int new)

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: include/asm-cris/atomic.h:130:
+        cris_atomic_save(v, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: include/asm-cris/atomic.h:130:
+        cris_atomic_save(v, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: include/asm-cris/atomic.h:134:
+        cris_atomic_restore(v, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: include/asm-cris/atomic.h:134:
+        cris_atomic_restore(v, flags);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151365.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 48 warnings, 1 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151365.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
