WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#47: FILE: drivers/block/ioctl.c:226:
+/* Most of the generic ioctls are handled in the normal fallback path.
+   This assumes the blkdev's low level compat_ioctl always returns

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#48: FILE: drivers/block/ioctl.c:227:
+   ENOIOCTLCMD for unknown ioctls. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#49: FILE: drivers/block/ioctl.c:228:
+long compat_blkdev_ioctl(struct file *file, unsigned cmd, unsigned long arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#54: FILE: drivers/block/ioctl.c:233:
+	int ret = -ENOIOCTLCMD;
+	if (disk->fops->compat_ioctl) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#81: FILE: include/linux/fs.h:882:
+	long (*compat_ioctl) (struct file *, unsigned, unsigned long);

WARNING:SPACING: Unnecessary space before function pointer arguments
#81: FILE: include/linux/fs.h:882:
+	long (*compat_ioctl) (struct file *, unsigned, unsigned long);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#81: FILE: include/linux/fs.h:882:
+	long (*compat_ioctl) (struct file *, unsigned, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#81: FILE: include/linux/fs.h:882:
+	long (*compat_ioctl) (struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#81: FILE: include/linux/fs.h:882:
+	long (*compat_ioctl) (struct file *, unsigned, unsigned long);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#89: FILE: include/linux/fs.h:1295:
+extern long compat_blkdev_ioctl(struct file *, unsigned, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: include/linux/fs.h:1295:
+extern long compat_blkdev_ioctl(struct file *, unsigned, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#89: FILE: include/linux/fs.h:1295:
+extern long compat_blkdev_ioctl(struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#89: FILE: include/linux/fs.h:1295:
+extern long compat_blkdev_ioctl(struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#89: FILE: include/linux/fs.h:1295:
+extern long compat_blkdev_ioctl(struct file *, unsigned, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214449.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 1 checks, 49 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214449.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
