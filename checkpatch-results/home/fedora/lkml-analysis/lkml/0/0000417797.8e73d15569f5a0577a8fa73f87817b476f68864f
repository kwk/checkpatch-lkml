WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
Content-Disposition: attachment; filename=01-numa_sched_core-2.5.44-21.patch

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#57: 
--- a/arch/i386/kernel/smpboot.c	Sat Oct 19 06:01:53 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#67: FILE: arch/i386/kernel/smpboot.c:1201:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:INCLUDE_LINUX: Use #include <linux/topology.h> instead of <asm/topology.h>
#112: FILE: include/linux/sched.h:24:
+#include <asm/topology.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/linux/sched.h:446:
+extern void build_pools(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#156: FILE: kernel/sched.c:186:
+int _node_nr_cpus[MAX_NUMNODES] =3D { [0 ... MAX_NUMNODES-1] =3D NR_CPUS }=
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#156: FILE: kernel/sched.c:186:
+int _node_nr_cpus[MAX_NUMNODES] =3D { [0 ... MAX_NUMNODES-1] =3D NR_CPUS }=
                                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#156: FILE: kernel/sched.c:186:
+int _node_nr_cpus[MAX_NUMNODES] =3D { [0 ... MAX_NUMNODES-1] =3D NR_CPUS }=
                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#156: FILE: kernel/sched.c:186:
+int _node_nr_cpus[MAX_NUMNODES] =3D { [0 ... MAX_NUMNODES-1] =3D NR_CPUS }=
                                                                           ^

ERROR:SPACING: space required after that close brace '}'
#156: FILE: kernel/sched.c:186:
+int _node_nr_cpus[MAX_NUMNODES] =3D { [0 ... MAX_NUMNODES-1] =3D NR_CPUS }=

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#156: FILE: kernel/sched.c:186:
+int _node_nr_cpus[MAX_NUMNODES] =3D { [0 ... MAX_NUMNODES-1] =3D NR_CPUS }=

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: kernel/sched.c:187:
+int node_ptr[MAX_NUMNODES+1]; /* first cpu of node (logical cpus are sorte=
                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#160: FILE: kernel/sched.c:188:
+int node_ptr[MAX_NUMNODES+1]; /* first cpu of node (logical cpus are sorte=
+#define node_ncpus(node)  _node_nr_cpus[node]

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: kernel/sched.c:195:
+#define loop_over_node(cpu,node) \
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#167: FILE: kernel/sched.c:195:
+#define loop_over_node(cpu,node) \
+	for(cpu=3Dnode_ptr[node]; cpu<node_ptr[node+1]; cpu++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#167: FILE: kernel/sched.c:195:
+#define loop_over_node(cpu,node) \
+	for(cpu=3Dnode_ptr[node]; cpu<node_ptr[node+1]; cpu++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#168: FILE: kernel/sched.c:196:
+	for(cpu=3Dnode_ptr[node]; cpu<node_ptr[node+1]; cpu++)
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#168: FILE: kernel/sched.c:196:
+	for(cpu=3Dnode_ptr[node]; cpu<node_ptr[node+1]; cpu++)
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#168: FILE: kernel/sched.c:196:
+	for(cpu=3Dnode_ptr[node]; cpu<node_ptr[node+1]; cpu++)
 	                                           ^

ERROR:SPACING: space required before the open parenthesis '('
#168: FILE: kernel/sched.c:196:
+	for(cpu=3Dnode_ptr[node]; cpu<node_ptr[node+1]; cpu++)

CHECK:CAMELCASE: Avoid CamelCase: <Dnode_ptr>
#168: FILE: kernel/sched.c:196:
+	for(cpu=3Dnode_ptr[node]; cpu<node_ptr[node+1]; cpu++)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#180: FILE: kernel/sched.c:208:
+	ptr=3D0;
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#181: FILE: kernel/sched.c:209:
+	for (n=3D0; n<numnodes; n++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#181: FILE: kernel/sched.c:209:
+	for (n=3D0; n<numnodes; n++) {
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#182: FILE: kernel/sched.c:210:
+		mask =3D __node_to_cpu_mask(n) & cpu_online_map;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#183: FILE: kernel/sched.c:211:
+		node_ptr[n] =3D ptr;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#184: FILE: kernel/sched.c:212:
+		for (cpu=3D0; cpu<NR_CPUS; cpu++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#184: FILE: kernel/sched.c:212:
+		for (cpu=3D0; cpu<NR_CPUS; cpu++)
 		                 ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#184: FILE: kernel/sched.c:212:
+		for (cpu=3D0; cpu<NR_CPUS; cpu++)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#187: FILE: kernel/sched.c:215:
+		node_ncpus(n) =3D ptr - node_ptr[n];;
 		              ^

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#187: FILE: kernel/sched.c:215:
+		node_ncpus(n) =3D ptr - node_ptr[n];;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#189: FILE: kernel/sched.c:217:
+	printk("CPU nodes : %d\n",numnodes);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: kernel/sched.c:217:
+	printk("CPU nodes : %d\n",numnodes);
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#190: FILE: kernel/sched.c:218:
+	for (n=3D0; n<numnodes; n++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#190: FILE: kernel/sched.c:218:
+	for (n=3D0; n<numnodes; n++)
 	             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#191: FILE: kernel/sched.c:219:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: kernel/sched.c:219:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: kernel/sched.c:219:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: kernel/sched.c:219:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#191: FILE: kernel/sched.c:219:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#191: FILE: kernel/sched.c:219:
+		printk("node %d : %d .. %d\n",n,node_ptr[n],node_ptr[n+1]-1);
 		                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#192: FILE: kernel/sched.c:220:
+	if (cache_decay_ticks=3D=3D1)
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#192: FILE: kernel/sched.c:220:
+	if (cache_decay_ticks=3D=3D1)
 	                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#192: FILE: kernel/sched.c:220:
+	if (cache_decay_ticks=3D=3D1)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TYPO_SPELLING: 'Runn' may be misspelled - perhaps 'Run'?
#193: FILE: kernel/sched.c:221:
+		printk("WARNING: cache_decay_ticks=3D1, probably unset by platform. Runn=
 		                                                                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: kernel/sched.c:221:
+		printk("WARNING: cache_decay_ticks=3D1, probably unset by platform. Runn=

CHECK:LINE_SPACING: Please don't use multiple blank lines
#204: FILE: kernel/sched.c:231:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'easilly' may be misspelled - perhaps 'easily'?
#242: FILE: kernel/sched.c:707:
+ * This concept can be extended easilly to more than two levels (multi-lev=
                                 ^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=
                        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=
                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=
                                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=
                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=
                                                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=
                                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=
                                                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#265: FILE: kernel/sched.c:725:
+#define CPUS_BALANCED(m,t) (((m)<=3D1) || (((m)-(t))/2 < (((m)+(t))/2 + 3)=

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: kernel/sched.c:731:
+#define NODES_BALANCED(comp,this) (((comp)-(this)) < LOADSCALE/2)
                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#272: FILE: kernel/sched.c:731:
+#define NODES_BALANCED(comp,this) (((comp)-(this)) < LOADSCALE/2)
                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#272: FILE: kernel/sched.c:731:
+#define NODES_BALANCED(comp,this) (((comp)-(this)) < LOADSCALE/2)
                                                               ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#276: FILE: kernel/sched.c:734:
+static inline runqueue_t *find_busiest_queue(int this_cpu, int idle, int *=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#277: FILE: kernel/sched.c:735:
+	runqueue_t *busiest_rq =3D NULL, *this_rq =3D cpu_rq(this_cpu), *src_rq;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#277: FILE: kernel/sched.c:735:
+	runqueue_t *busiest_rq =3D NULL, *this_rq =3D cpu_rq(this_cpu), *src_rq;
 	                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#278: FILE: kernel/sched.c:736:
+	int busiest_cpu, busiest_node=3D0, cpu, load, max_avg_load, avg_load;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#279: FILE: kernel/sched.c:737:
+	int n, steal_delay, system_load =3D 0, this_node=3Dcpu_to_node(this_cpu);=
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#279: FILE: kernel/sched.c:737:
+	int n, steal_delay, system_load =3D 0, this_node=3Dcpu_to_node(this_cpu);=
 	                                                ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#279: FILE: kernel/sched.c:737:
+	int n, steal_delay, system_load =3D 0, this_node=3Dcpu_to_node(this_cpu);=
 	                                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:OxE)
#279: FILE: kernel/sched.c:737:
+	int n, steal_delay, system_load =3D 0, this_node=3Dcpu_to_node(this_cpu);=
 	                                                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Dcpu_to_node>
#279: FILE: kernel/sched.c:737:
+	int n, steal_delay, system_load =3D 0, this_node=3Dcpu_to_node(this_cpu);=

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#281: FILE: kernel/sched.c:738:
+	struct node_queue_data nd[MAX_NUMNODES], *node;
 	                       ^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#307: FILE: kernel/sched.c:740:
+		*nr_running =3D this_rq->nr_running;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#310: FILE: kernel/sched.c:742:
+		*nr_running =3D this_rq->prev_nr_running[this_cpu];
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#317: FILE: kernel/sched.c:743:
+	for (n =3D 0; n < numnodes; n++) {
 	       ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#318: FILE: kernel/sched.c:744:
+		nd[n].busiest_cpu_load =3D -1;
 		^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#318: FILE: kernel/sched.c:744:
+		nd[n].busiest_cpu_load =3D -1;
 		                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#318: FILE: kernel/sched.c:744:
+		nd[n].busiest_cpu_load =3D -1;
 		                           ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#319: FILE: kernel/sched.c:745:
+		nd[n].total_load =3D 0;
 		^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#319: FILE: kernel/sched.c:745:
+		nd[n].total_load =3D 0;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#326: FILE: kernel/sched.c:748:
+	for (cpu =3D 0; cpu < NR_CPUS; cpu++) {
 	         ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#326: FILE: kernel/sched.c:748:
+	for (cpu =3D 0; cpu < NR_CPUS; cpu++) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#327: FILE: kernel/sched.c:749:
+		if (!cpu_online(cpu)) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#328: FILE: kernel/sched.c:750:
+		node =3D &nd[cpu_to_node(cpu)];
 		          ^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#328: FILE: kernel/sched.c:750:
+		node =3D &nd[cpu_to_node(cpu)];
 		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#328: FILE: kernel/sched.c:750:
+		node =3D &nd[cpu_to_node(cpu)];
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#329: FILE: kernel/sched.c:751:
+		src_rq =3D cpu_rq(cpu);
 		       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'src_rq->nr_running < this_rq->prev_nr_running[cpu]'
#330: FILE: kernel/sched.c:752:
+		if (idle || (src_rq->nr_running < this_rq->prev_nr_running[cpu]))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#331: FILE: kernel/sched.c:753:
+			load =3D src_rq->nr_running;
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#339: FILE: kernel/sched.c:755:
+			load =3D this_rq->prev_nr_running[cpu];
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#340: FILE: kernel/sched.c:756:
+		this_rq->prev_nr_running[cpu] =3D src_rq->nr_running;
 		                              ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#341: FILE: kernel/sched.c:757:
+		node->total_load +=3D load;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#343: FILE: kernel/sched.c:759:
+			node->busiest_cpu_load =3D load;
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#344: FILE: kernel/sched.c:760:
+			node->busiest_cpu =3D cpu;
 			                  ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#350: FILE: kernel/sched.c:763:
+	busiest_cpu =3D nd[this_node].busiest_cpu;
 	                ^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#350: FILE: kernel/sched.c:763:
+	busiest_cpu =3D nd[this_node].busiest_cpu;
 	            ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#351: FILE: kernel/sched.c:764:
+	if (busiest_cpu !=3D this_cpu) {
 	                ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#352: FILE: kernel/sched.c:765:
+		if (!CPUS_BALANCED(nd[this_node].busiest_cpu_load,*nr_running)) {
 		                   ^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#352: FILE: kernel/sched.c:765:
+		if (!CPUS_BALANCED(nd[this_node].busiest_cpu_load,*nr_running)) {
 		                                                 ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#352: FILE: kernel/sched.c:765:
+		if (!CPUS_BALANCED(nd[this_node].busiest_cpu_load,*nr_running)) {
 		                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#353: FILE: kernel/sched.c:766:
+			busiest_rq =3D cpu_rq(busiest_cpu);
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#354: FILE: kernel/sched.c:767:
+			this_rq->wait_node =3D -1;
 			                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#354: FILE: kernel/sched.c:767:
+			this_rq->wait_node =3D -1;
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#361: FILE: kernel/sched.c:772:
+	max_avg_load =3D -1;
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#361: FILE: kernel/sched.c:772:
+	max_avg_load =3D -1;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#362: FILE: kernel/sched.c:773:
+	for (n =3D 0; n < numnodes; n++) {
 	       ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#363: FILE: kernel/sched.c:774:
+		node =3D &nd[n];
 		          ^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#363: FILE: kernel/sched.c:774:
+		node =3D &nd[n];
 		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#363: FILE: kernel/sched.c:774:
+		node =3D &nd[n];
 		         ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#364: FILE: kernel/sched.c:775:
+		system_load +=3D node->total_load;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#365: FILE: kernel/sched.c:776:
+		node->average_load =3D node->total_load*LOADSCALE/node_ncpus(n);
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#365: FILE: kernel/sched.c:776:
+		node->average_load =3D node->total_load*LOADSCALE/node_ncpus(n);
 		                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#365: FILE: kernel/sched.c:776:
+		node->average_load =3D node->total_load*LOADSCALE/node_ncpus(n);
 		                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#367: FILE: kernel/sched.c:778:
+			max_avg_load =3D node->average_load;
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#368: FILE: kernel/sched.c:779:
+			busiest_node =3D n;
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#376: FILE: kernel/sched.c:783:
+	if ((busiest_node =3D=3D this_node) || (max_avg_load <=3D LOADSCALE) ||
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#376: FILE: kernel/sched.c:783:
+	if ((busiest_node =3D=3D this_node) || (max_avg_load <=3D LOADSCALE) ||
 	                     ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#376: FILE: kernel/sched.c:783:
+	if ((busiest_node =3D=3D this_node) || (max_avg_load <=3D LOADSCALE) ||
 	                                                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#376: FILE: kernel/sched.c:783:
+	if ((busiest_node =3D=3D this_node) || (max_avg_load <=3D LOADSCALE) ||

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#377: FILE: kernel/sched.c:784:
+	    NODES_BALANCED(max_avg_load,nd[this_node].average_load)) {
 	                                ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#377: FILE: kernel/sched.c:784:
+	    NODES_BALANCED(max_avg_load,nd[this_node].average_load)) {
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#378: FILE: kernel/sched.c:785:
+		this_rq->wait_node =3D -1;
 		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#378: FILE: kernel/sched.c:785:
+		this_rq->wait_node =3D -1;
 		                       ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#391: FILE: kernel/sched.c:788:
+	busiest_cpu =3D nd[busiest_node].busiest_cpu;
 	                ^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#391: FILE: kernel/sched.c:788:
+	busiest_cpu =3D nd[busiest_node].busiest_cpu;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#392: FILE: kernel/sched.c:789:
+	avg_load =3D system_load*LOADSCALE/num_online_cpus();
 	         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#392: FILE: kernel/sched.c:789:
+	avg_load =3D system_load*LOADSCALE/num_online_cpus();
 	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#392: FILE: kernel/sched.c:789:
+	avg_load =3D system_load*LOADSCALE/num_online_cpus();
 	                                  ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#394: FILE: kernel/sched.c:791:
+	if (NODES_BALANCED(avg_load,nd[this_node].average_load))
 	                            ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: kernel/sched.c:791:
+	if (NODES_BALANCED(avg_load,nd[this_node].average_load))
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#395: FILE: kernel/sched.c:792:
+		steal_delay =3D NODE_DELAY_BUSY;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#397: FILE: kernel/sched.c:794:
+		steal_delay =3D NODE_DELAY_IDLE;
 		            ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#399: FILE: kernel/sched.c:796:
+	if (this_rq->wait_node !=3D busiest_node) {
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#400: FILE: kernel/sched.c:797:
+		this_rq->wait_node =3D busiest_node;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#401: FILE: kernel/sched.c:798:
+		this_rq->wait_time =3D jiffies;
 		                   ^

CHECK:BRACES: Unbalanced braces around else statement
#403: FILE: kernel/sched.c:800:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#408: FILE: kernel/sched.c:805:
+	if ((!CPUS_BALANCED(nd[busiest_node].busiest_cpu_load,*nr_running))) {
 	                    ^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#408: FILE: kernel/sched.c:805:
+	if ((!CPUS_BALANCED(nd[busiest_node].busiest_cpu_load,*nr_running))) {
 	                                                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#408: FILE: kernel/sched.c:805:
+	if ((!CPUS_BALANCED(nd[busiest_node].busiest_cpu_load,*nr_running))) {
 	                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#409: FILE: kernel/sched.c:806:
+		busiest_rq =3D cpu_rq(busiest_cpu);
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#410: FILE: kernel/sched.c:807:
+		this_rq->wait_node =3D -1;
 		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#410: FILE: kernel/sched.c:807:
+		this_rq->wait_node =3D -1;
 		                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#425: FILE: kernel/sched.c:850:
+	int imbalance, nr_running, idx, this_cpu =3D smp_processor_id();
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#432: FILE: kernel/sched.c:855:
+	busiest =3D find_busiest_queue(this_cpu, idle, &nr_running);
 	        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: kernel/sched.c:858:
+	imbalance =3D (busiest->nr_running - nr_running)/2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: kernel/sched.c:858:
+	imbalance =3D (busiest->nr_running - nr_running)/2;
 	          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#436: FILE: kernel/sched.c:858:
+	imbalance =3D (busiest->nr_running - nr_running)/2;
 	                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#438: FILE: kernel/sched.c:860:
+	nr_running =3D double_lock_balance(this_rq, busiest, this_cpu, idle, nr_r=
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#438: FILE: kernel/sched.c:860:
+	nr_running =3D double_lock_balance(this_rq, busiest, this_cpu, idle, nr_r=
 	                                                                         ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#440: FILE: kernel/sched.c:861:
+	if (busiest->nr_running <=3D nr_running + 1)
 	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#454: FILE: kernel/sched.c:939:
+#define BUSY_REBALANCE_TICK (HZ/5 ?: 1)
                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#463: FILE: kernel/sched.c:2149:
+		cpu_dest =3D __ffs(p->cpus_allowed & cpu_online_map);
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#473: FILE: kernel/sched.c:2252:
+		cache_decay_ticks=3D1;
 		                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417797.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 94 errors, 24 warnings, 34 checks, 400 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417797.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
