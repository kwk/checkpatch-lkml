CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#50: 
Maxfeldstraße 5				+49 911 74053 688
           ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#51: 
90409 Nürnberg				http://www.suse.de
       ^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# This is a BitKeeper generated diff -Nru style patch.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# ChangeSet

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#   2005/01/19 14:34:05+01:00 hare@lammermuir.suse.de 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#   Remove left-over variables.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# include/linux/input.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#   2005/01/19 14:27:07+01:00 hare@lammermuir.suse.de +0 -2

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#   Remove left-over variables.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# ChangeSet

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#   2005/01/19 14:21:57+01:00 hare@lammermuir.suse.de 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#   Implement sysfs class_device 'input_device' as abstraction of 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#   struct input_dev. This allows us to get rid of the explicit call 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#   to call_usermodehelper in drivers/input/input.c and makes the input

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#   layer driver-model compliant.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# drivers/input/input.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#   2005/01/19 14:21:51+01:00 hare@lammermuir.suse.de +6 -6

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#   Use ->phys as class_id for the device.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# include/linux/input.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
#   2005/01/18 15:49:00+01:00 hare@lammermuir.suse.de +4 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
#   Added class_device to the input_dev struct.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# drivers/input/input.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
#   2005/01/18 15:47:37+01:00 hare@lammermuir.suse.de +147 -54

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
#   Implement 'input_device' class as abstraction of

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
#   struct input_dev. Default class IDs are being generated

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
#   if the driver does not provide one.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
# 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#92: 
--- a/drivers/input/input.c	2005-01-19 14:37:05 +01:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: drivers/input/input.c:340:
+	int i = 0, j;
+	scratch = buffer;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#149: FILE: drivers/input/input.c:350:
+	printk(KERN_DEBUG "%s: PRODUCT %x/%x/%x/%x\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#149: FILE: drivers/input/input.c:350:
+	printk(KERN_DEBUG "%s: PRODUCT %x/%x/%x/%x\n", __FUNCTION__,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: drivers/input/input.c:385:
+^Iprintk(KERN_DEBUG "%s: entered for dev %p\n", __FUNCTION__, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#176: FILE: drivers/input/input.c:385:
+	printk(KERN_DEBUG "%s: entered for dev %p\n", __FUNCTION__, 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#176: FILE: drivers/input/input.c:385:
+	printk(KERN_DEBUG "%s: entered for dev %p\n", __FUNCTION__, 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: drivers/input/input.c:389:
+	dev = container_of(cdev,struct input_dev,cdev);
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: drivers/input/input.c:389:
+	dev = container_of(cdev,struct input_dev,cdev);
 	                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bit' - possible side-effects?
#193: FILE: drivers/input/input.c:396:
+#define INPUT_ATTR_BIT_B(bit, max) \
+	do { \
+		for (i = NBITS(max) - 1; i >= 0; i--) \
+			if (dev->bit[i]) break; \
+		for (; i >= 0; i--) \
+			len += sprintf(buf + len, "%lx ", dev->bit[i]); \
+		if (len) len += sprintf(buf + len, "\n"); \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#193: FILE: drivers/input/input.c:396:
+#define INPUT_ATTR_BIT_B(bit, max) \
+	do { \
+		for (i = NBITS(max) - 1; i >= 0; i--) \
+			if (dev->bit[i]) break; \
+		for (; i >= 0; i--) \
+			len += sprintf(buf + len, "%lx ", dev->bit[i]); \
+		if (len) len += sprintf(buf + len, "\n"); \
+	} while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: drivers/input/input.c:399:
+			if (dev->bit[i]) break; \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#199: FILE: drivers/input/input.c:402:
+		if (len) len += sprintf(buf + len, "\n"); \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#208: FILE: drivers/input/input.c:411:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/input/input.c:414:
+	struct input_dev *dev = container_of(class_dev, struct input_dev,cdev);
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: drivers/input/input.c:421:
+#define INPUT_CLASS_ATTR_BIT(_name,_bit) \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: drivers/input/input.c:425:
+	struct input_dev *dev = container_of(class_dev,struct input_dev,cdev); \
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: drivers/input/input.c:425:
+	struct input_dev *dev = container_of(class_dev,struct input_dev,cdev); \
 	                                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: drivers/input/input.c:426:
+        int i, len = 0; \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/input/input.c:426:
+        int i, len = 0; \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#230: FILE: drivers/input/input.c:432:
+INPUT_CLASS_ATTR_BIT(KEY,key)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: drivers/input/input.c:433:
+INPUT_CLASS_ATTR_BIT(REL,rel)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: drivers/input/input.c:434:
+INPUT_CLASS_ATTR_BIT(ABS,abs)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: drivers/input/input.c:435:
+INPUT_CLASS_ATTR_BIT(MSC,msc)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#234: FILE: drivers/input/input.c:436:
+INPUT_CLASS_ATTR_BIT(LED,led)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: drivers/input/input.c:437:
+INPUT_CLASS_ATTR_BIT(SND,snd)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: drivers/input/input.c:438:
+INPUT_CLASS_ATTR_BIT(FF,ff)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: drivers/input/input.c:442:
+	struct input_dev *dev = container_of(class_dev,struct input_dev,cdev);
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: drivers/input/input.c:442:
+	struct input_dev *dev = container_of(class_dev,struct input_dev,cdev);
 	                                                               ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#242: FILE: drivers/input/input.c:444:
+	return sprintf(buf, "%s\n", dev->phys ? dev->phys : "(none)" );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: drivers/input/input.c:449:
+	struct input_dev *dev = container_of(class_dev,struct input_dev,cdev);
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: drivers/input/input.c:449:
+	struct input_dev *dev = container_of(class_dev,struct input_dev,cdev);
 	                                                               ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#249: FILE: drivers/input/input.c:451:
+	return sprintf(buf, "%s\n", dev->name ? dev->name : "(none)" );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: drivers/input/input.c:456:
+	struct input_dev *dev = container_of(class_dev,struct input_dev,cdev);
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: drivers/input/input.c:456:
+	struct input_dev *dev = container_of(class_dev,struct input_dev,cdev);
 	                                                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/input/input.c:458:
+^Ireturn sprintf(buf, "%x/%x/%x/%x\n", dev->id.bustype, dev->id.vendor, $

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#261: FILE: drivers/input/input.c:463:
+	__ATTR( product, S_IRUGO, input_class_show_product, NULL) ,
 	                                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#261: FILE: drivers/input/input.c:463:
+	__ATTR( product, S_IRUGO, input_class_show_product, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#261: FILE: drivers/input/input.c:463:
+	__ATTR( product, S_IRUGO, input_class_show_product, NULL) ,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space prohibited after that open parenthesis '('
#262: FILE: drivers/input/input.c:464:
+	__ATTR( phys, S_IRUGO, input_class_show_phys, NULL ),

ERROR:SPACING: space prohibited before that close parenthesis ')'
#262: FILE: drivers/input/input.c:464:
+	__ATTR( phys, S_IRUGO, input_class_show_phys, NULL ),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#262: FILE: drivers/input/input.c:464:
+	__ATTR( phys, S_IRUGO, input_class_show_phys, NULL ),

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#263: FILE: drivers/input/input.c:465:
+	__ATTR( name, S_IRUGO, input_class_show_name, NULL) ,
 	                                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#263: FILE: drivers/input/input.c:465:
+	__ATTR( name, S_IRUGO, input_class_show_name, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#263: FILE: drivers/input/input.c:465:
+	__ATTR( name, S_IRUGO, input_class_show_name, NULL) ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#264: FILE: drivers/input/input.c:466:
+	__ATTR( ev, S_IRUGO, input_class_show_ev, NULL) ,
 	                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#264: FILE: drivers/input/input.c:466:
+	__ATTR( ev, S_IRUGO, input_class_show_ev, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#264: FILE: drivers/input/input.c:466:
+	__ATTR( ev, S_IRUGO, input_class_show_ev, NULL) ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#265: FILE: drivers/input/input.c:467:
+	__ATTR( key, S_IRUGO, input_class_show_key, NULL) ,
 	                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#265: FILE: drivers/input/input.c:467:
+	__ATTR( key, S_IRUGO, input_class_show_key, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#265: FILE: drivers/input/input.c:467:
+	__ATTR( key, S_IRUGO, input_class_show_key, NULL) ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#266: FILE: drivers/input/input.c:468:
+	__ATTR( rel, S_IRUGO, input_class_show_rel, NULL) ,
 	                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#266: FILE: drivers/input/input.c:468:
+	__ATTR( rel, S_IRUGO, input_class_show_rel, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#266: FILE: drivers/input/input.c:468:
+	__ATTR( rel, S_IRUGO, input_class_show_rel, NULL) ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#267: FILE: drivers/input/input.c:469:
+	__ATTR( abs, S_IRUGO, input_class_show_abs, NULL) ,
 	                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#267: FILE: drivers/input/input.c:469:
+	__ATTR( abs, S_IRUGO, input_class_show_abs, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#267: FILE: drivers/input/input.c:469:
+	__ATTR( abs, S_IRUGO, input_class_show_abs, NULL) ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#268: FILE: drivers/input/input.c:470:
+	__ATTR( msc, S_IRUGO, input_class_show_msc, NULL) ,
 	                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#268: FILE: drivers/input/input.c:470:
+	__ATTR( msc, S_IRUGO, input_class_show_msc, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#268: FILE: drivers/input/input.c:470:
+	__ATTR( msc, S_IRUGO, input_class_show_msc, NULL) ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#269: FILE: drivers/input/input.c:471:
+	__ATTR( led, S_IRUGO, input_class_show_led, NULL) ,
 	                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#269: FILE: drivers/input/input.c:471:
+	__ATTR( led, S_IRUGO, input_class_show_led, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#269: FILE: drivers/input/input.c:471:
+	__ATTR( led, S_IRUGO, input_class_show_led, NULL) ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#270: FILE: drivers/input/input.c:472:
+	__ATTR( snd, S_IRUGO, input_class_show_snd, NULL) ,
 	                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#270: FILE: drivers/input/input.c:472:
+	__ATTR( snd, S_IRUGO, input_class_show_snd, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#270: FILE: drivers/input/input.c:472:
+	__ATTR( snd, S_IRUGO, input_class_show_snd, NULL) ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#271: FILE: drivers/input/input.c:473:
+	__ATTR( ff, S_IRUGO, input_class_show_ff, NULL) ,
 	                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#271: FILE: drivers/input/input.c:473:
+	__ATTR( ff, S_IRUGO, input_class_show_ff, NULL) ,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#271: FILE: drivers/input/input.c:473:
+	__ATTR( ff, S_IRUGO, input_class_show_ff, NULL) ,

ERROR:SPACING: space prohibited after that open parenthesis '('
#275: FILE: drivers/input/input.c:477:
+static void input_device_class_release( struct class_device *class_dev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#275: FILE: drivers/input/input.c:477:
+static void input_device_class_release( struct class_device *class_dev )

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#282: FILE: drivers/input/input.c:484:
+^I.hotplug = ^Iinput_hotplug,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#283: FILE: drivers/input/input.c:485:
+^I.release = ^Iinput_device_class_release,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: drivers/input/input.c:497:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: drivers/input/input.c:501:
+	while ((ptr = strchr(ptr,'/')) != NULL) {
 	                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214088.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 53 errors, 50 warnings, 5 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214088.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
