WARNING:TYPO_SPELLING: 'Capela' may be misspelled - perhaps 'Capella'?
#52: 
On Thu, 2004-12-02 at 04:59, Rui Nuno Capela wrote:
                                      ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
> > Next step is really trying to increase the stress and look after when it

WARNING:TYPO_SPELLING: 'queing' may be misspelled - perhaps 'queueing'?
#77: 
> there's a jack patch, somewhere in the limbo, for queing all printable
                                                    ^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: jackd/engine.c:690:
+		MB_VERBOSE (engine, "at %" PRIu64

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <PRIu64>
#137: FILE: jackd/engine.c:690:
+		MB_VERBOSE (engine, "at %" PRIu64

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#149: FILE: jackd/engine.c:702:
+			    ctl->finished_at? (ctl->finished_at -
 			                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#150: FILE: jackd/engine.c:703:
+					       ctl->signalled_at): 0);
 					                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#161: FILE: jackd/engine.c:823:
+		MB_VERBOSE (engine, "load = %.4f max usecs: %.3f, "

WARNING:SPLIT_STRING: quoted string split across lines
#162: FILE: jackd/engine.c:824:
+		MB_VERBOSE (engine, "load = %.4f max usecs: %.3f, "
+			    "spare = %.3f\n", engine->control->cpu_load,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#195: FILE: jackd/engine.c:2377:
+		MB_MESSAGE ("delay of %.3f usecs exceeds estimated spare"

WARNING:SPLIT_STRING: quoted string split across lines
#196: FILE: jackd/engine.c:2378:
+		MB_MESSAGE ("delay of %.3f usecs exceeds estimated spare"
+			    " time of %.3f; restart ...\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: jackd/engine.c:2451:
+^I^I^IMB_VERBOSE (engine, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: jackd/engine.c:2451:
+			MB_VERBOSE (engine, 

CHECK:CAMELCASE: Avoid CamelCase: <PRIu32>
#210: FILE: jackd/engine.c:2453:
+				    PRIu32 ".\n", nframes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: jackd/engine.c:2680:
+	MB_VERBOSE (engine, "removing client \"%s\" from the processing chain\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: jackd/engine.c:2701:
+	MB_VERBOSE (engine, "removing client \"%s\"\n", client->control->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: jackd/engine.c:3003:
+					MB_VERBOSE (engine, "client %s: wait_fd="

WARNING:SPLIT_STRING: quoted string split across lines
#255: FILE: jackd/engine.c:3004:
+					MB_VERBOSE (engine, "client %s: wait_fd="
+						    "%d, execution_order="

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: jackd/engine.c:3005:
+^I^I^I^I^I^I    "%lu.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#256: FILE: jackd/engine.c:3005:
+						    "%d, execution_order="
+						    "%lu.\n", 

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'subgraph_client->control->name'
#258: FILE: jackd/engine.c:3007:
+						    subgraph_client->
+						    control->name,

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'subgraph_client->subgraph_wait_fd'
#260: FILE: jackd/engine.c:3009:
+						    subgraph_client->
+						    subgraph_wait_fd, n);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: jackd/engine.c:3013:
+				MB_VERBOSE (engine, "client %s: internal "

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: jackd/engine.c:3014:
+				MB_VERBOSE (engine, "client %s: internal "
+					    "client, execution_order="

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: jackd/engine.c:3015:
+^I^I^I^I^I    "%lu.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#270: FILE: jackd/engine.c:3015:
+					    "client, execution_order="
+					    "%lu.\n", 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#286: FILE: jackd/engine.c:3039:
+					MB_VERBOSE (engine, "client %s: "

WARNING:SPLIT_STRING: quoted string split across lines
#287: FILE: jackd/engine.c:3040:
+					MB_VERBOSE (engine, "client %s: "
+						    "start_fd=%d, execution"

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: jackd/engine.c:3041:
+						    "start_fd=%d, execution"
+						    "_order=%lu.\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#288: FILE: jackd/engine.c:3041:
+						    "start_fd=%d, execution"
+						    "_order=%lu.\n",

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'subgraph_client->control->name'
#290: FILE: jackd/engine.c:3043:
+						    subgraph_client->
+						    control->name,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'subgraph_client->subgraph_start_fd'
#292: FILE: jackd/engine.c:3045:
+						    subgraph_client->
+						    subgraph_start_fd, n);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: jackd/engine.c:3055:
+					MB_VERBOSE (engine, "client %s: in"

WARNING:SPLIT_STRING: quoted string split across lines
#308: FILE: jackd/engine.c:3056:
+					MB_VERBOSE (engine, "client %s: in"
+						    " subgraph after %s, "

WARNING:SPLIT_STRING: quoted string split across lines
#309: FILE: jackd/engine.c:3057:
+						    " subgraph after %s, "
+						    "execution_order="

WARNING:SPLIT_STRING: quoted string split across lines
#310: FILE: jackd/engine.c:3058:
+						    "execution_order="
+						    "%lu.\n",

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'subgraph_client->control->name'
#313: FILE: jackd/engine.c:3061:
+						    subgraph_client->
+						    control->name, n);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#322: FILE: jackd/engine.c:3087:
+		MB_VERBOSE (engine, "client %s: wait_fd=%d, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#333: FILE: jackd/engine.c:3516:
+		MB_VERBOSE (engine, "connect %s and %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#346: FILE: jackd/engine.c:3563:
+			MB_VERBOSE (engine, "DIS-connect %s and %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: jackd/engine.c:3619:
+	MB_VERBOSE (engine, "clear connections for %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: jackd/engine.c:3897:
+	MB_VERBOSE (engine, "registered port %s, offset = %u\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#424: FILE: jackd/message_buffer.c:1:
+/* -*- c-basic-offset: 4 -*-  vi:set ts=8 sts=4 sw=4: */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#427: FILE: jackd/message_buffer.c:4:
+/* message_buffer.c
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#441: FILE: jackd/message_buffer.c:18:
+static unsigned int initialised = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#442: FILE: jackd/message_buffer.c:19:
+static unsigned int in_buffer = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#443: FILE: jackd/message_buffer.c:20:
+static unsigned int out_buffer = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: jackd/message_buffer.c:27:
+    strncpy(buffer[in_buffer], msg, BUFFER_SIZE - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: jackd/message_buffer.c:28:
+    in_buffer = (in_buffer + 1) & (BUFFERS - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: jackd/message_buffer.c:33:
+    if (initialised) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#456: FILE: jackd/message_buffer.c:33:
+    if (initialised) {
+	return;
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: jackd/message_buffer.c:35:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: jackd/message_buffer.c:36:
+    mb_prefix = prefix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: jackd/message_buffer.c:38:
+    pthread_create(&writer_thread, NULL, &mb_thread_func, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: jackd/message_buffer.c:40:
+    initialised = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: jackd/message_buffer.c:45:
+    while (1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#469: FILE: jackd/message_buffer.c:46:
+	while (out_buffer != in_buffer) {
+	    fprintf(stderr, "%s%s", mb_prefix, buffer[out_buffer]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: jackd/message_buffer.c:51:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: jackd/message_buffer.c:53:
+    return NULL;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#484: FILE: jackd/message_buffer.h:1:
+/* -*- c-basic-offset: 4 -*-  vi:set ts=8 sts=4 sw=4: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#487: FILE: jackd/message_buffer.h:4:
+/* message_buffer.h
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#500: FILE: jackd/message_buffer.h:17:
+#define MB_VERBOSE(engine,format,args...)   \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#500: FILE: jackd/message_buffer.h:17:
+#define MB_VERBOSE(engine,format,args...)   \
                                 ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#500: FILE: jackd/message_buffer.h:17:
+#define MB_VERBOSE(engine,format,args...)   \
+    if ((engine)->verbose) {		    \
+	char _m[256];			    \
+	snprintf(_m, 255, format, ## args); \
+	add_message(_m);		    \
+    }

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: jackd/message_buffer.h:18:
+    if ((engine)->verbose) {^I^I    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: jackd/message_buffer.h:22:
+    }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225867.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 53 warnings, 2 checks, 368 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225867.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
