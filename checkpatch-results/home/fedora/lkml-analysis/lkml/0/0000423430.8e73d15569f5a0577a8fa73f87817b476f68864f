WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# cache_def.h               |   15 +++++++++++++++

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# include/linux/cache_def.h |   15 +++++++++++++++

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# kernel/ksyms.c            |    3 +++

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# mm/vmscan.c               |   35 +++++++++++++++++++++++++++++++++++

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# 4 files changed, 68 insertions(+)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# 02/10/14	tytso@snap.thunk.org	1.783

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
# Port of (updated) 0.8.50 cache-def patch.  (Fixed to take the BKL where necessary)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# Port of (updated) 0.8.50 cache-def patch.  (Fixed to take the BKL where necessary)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: cache_def.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#59: FILE: cache_def.h:2:
+ * linux/cache_def.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#67: FILE: cache_def.h:10:
+	void (*shrink)(int, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#67: FILE: cache_def.h:10:
+	void (*shrink)(int, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: cache_def.h:14:
+extern void register_cache(struct cache_definition *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cache_definition *' should also have an identifier name
#71: FILE: cache_def.h:14:
+extern void register_cache(struct cache_definition *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: cache_def.h:15:
+extern void unregister_cache(struct cache_definition *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cache_definition *' should also have an identifier name
#72: FILE: cache_def.h:15:
+extern void unregister_cache(struct cache_definition *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: include/linux/cache_def.h:1:
+/*

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#86: FILE: include/linux/cache_def.h:10:
+	void (*shrink)(int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#86: FILE: include/linux/cache_def.h:10:
+	void (*shrink)(int, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/linux/cache_def.h:14:
+extern void register_cache(struct cache_definition *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cache_definition *' should also have an identifier name
#90: FILE: include/linux/cache_def.h:14:
+extern void register_cache(struct cache_definition *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: include/linux/cache_def.h:15:
+extern void unregister_cache(struct cache_definition *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cache_definition *' should also have an identifier name
#91: FILE: include/linux/cache_def.h:15:
+extern void unregister_cache(struct cache_definition *);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#108: FILE: kernel/ksyms.c:108:
+EXPORT_SYMBOL(unregister_cache);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 29 warnings, 4 checks, 98 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
