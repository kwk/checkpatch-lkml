WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#42: FILE: drivers/net/Kconfig:131:
+config X25TAP
+	tristate "X.25 network tap"
+	depends on NETDEVICES && EXPERIMENTAL && NETLINK_DEV && X25
+	---help---
+	  This is a very simple X.25 driver. It bounces X.25 level2 frames
+	  to user space and expects X.25 frames to be written back to it.
+
+	  Connection state handling is left to the user pluged into the tap
+	  as explained in Documentation/networking/x25-iface.txt
+
+	  As this is an X.25 level 2 device you can use it for user level
+	  drivers and for building bridging tunnels (XOT).
+
+	  To compile this driver as a module, choose M here: the module
+	  will be called x25tap.
+
+	  If your using xotd or similar program say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: drivers/net/x25tap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#114: FILE: drivers/net/x25tap.c:37:
+/*
+ *	Index to functions.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#123: FILE: drivers/net/x25tap.c:46:
+static int x25tap_debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: drivers/net/x25tap.c:50:
+MODULE_PARM_DESC(max_taps,"Max number of x25 tap devices");
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#132: FILE: drivers/net/x25tap.c:55:
+/*
+ *	Board-specific info in dev->priv.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#136: FILE: drivers/net/x25tap.c:59:
+struct net_local
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#142: FILE: drivers/net/x25tap.c:65:
+/*
+ *	To call this a probe is a bit misleading, however for real

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#167: FILE: drivers/net/x25tap.c:90:
+	/*
+	 *	The tap specific entries in the device structure.

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#175: FILE: drivers/net/x25tap.c:98:
+	dev->flags|=IFF_NOARP;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#186: FILE: drivers/net/x25tap.c:109:
+	tap_map[unit]=dev;
 	             ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#195: FILE: drivers/net/x25tap.c:118:
+/*
+ *	Open/initialize the board.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#203: FILE: drivers/net/x25tap.c:126:
+		printk(KERN_DEBUG "%s: Doing x25tap_open()...\n", dev->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'x25tap_open', this function's name, in a string
#203: FILE: drivers/net/x25tap.c:126:
+		printk(KERN_DEBUG "%s: Doing x25tap_open()...\n", dev->name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lp->nl"
#206: FILE: drivers/net/x25tap.c:129:
+	if (lp->nl == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#214: FILE: drivers/net/x25tap.c:137:
+/*
+ *	We transmit by throwing the packet at netlink. We have to clone

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: drivers/net/x25tap.c:147:
+^I  ^Istruct sk_buff *skb2 = skb;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#224: FILE: drivers/net/x25tap.c:147:
+^I  ^Istruct sk_buff *skb2 = skb;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/net/x25tap.c:148:
+^I  ^Iskb = skb_clone(skb, GFP_ATOMIC);^I/* Clone the buffer */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: drivers/net/x25tap.c:148:
+^I  ^Iskb = skb_clone(skb, GFP_ATOMIC);^I/* Clone the buffer */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#225: FILE: drivers/net/x25tap.c:148:
+	  	struct sk_buff *skb2 = skb;
+	  	skb = skb_clone(skb, GFP_ATOMIC);	/* Clone the buffer */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: drivers/net/x25tap.c:149:
+^I  ^Iif (skb==NULL) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: drivers/net/x25tap.c:149:
+^I  ^Iif (skb==NULL) {$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#226: FILE: drivers/net/x25tap.c:149:
+	  	if (skb==NULL) {
 	  	       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#226: FILE: drivers/net/x25tap.c:149:
+	  	if (skb==NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: drivers/net/x25tap.c:154:
+^I  ^Idev_kfree_skb(skb2);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: drivers/net/x25tap.c:154:
+^I  ^Idev_kfree_skb(skb2);$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#233: FILE: drivers/net/x25tap.c:156:
+	switch (skb->data[0])
+	{

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#236: FILE: drivers/net/x25tap.c:159:
+			lp->stats.tx_bytes+=skb->len -1;
 			                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#236: FILE: drivers/net/x25tap.c:159:
+			lp->stats.tx_bytes+=skb->len -1;
 			                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#241: FILE: drivers/net/x25tap.c:164:
+				printk(KERN_DEBUG "x25tap_start_xmit: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'x25tap_start_xmit', this function's name, in a string
#241: FILE: drivers/net/x25tap.c:164:
+				printk(KERN_DEBUG "x25tap_start_xmit: "

WARNING:SPLIT_STRING: quoted string split across lines
#242: FILE: drivers/net/x25tap.c:165:
+				printk(KERN_DEBUG "x25tap_start_xmit: "
+					"Connection request\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#246: FILE: drivers/net/x25tap.c:169:
+				printk(KERN_DEBUG "x25tap_start_xmit: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'x25tap_start_xmit', this function's name, in a string
#246: FILE: drivers/net/x25tap.c:169:
+				printk(KERN_DEBUG "x25tap_start_xmit: "

WARNING:SPLIT_STRING: quoted string split across lines
#247: FILE: drivers/net/x25tap.c:170:
+				printk(KERN_DEBUG "x25tap_start_xmit: "
+					"Disconnect request\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#250: FILE: drivers/net/x25tap.c:173:
+			printk(KERN_DEBUG "x25tap_start_xmit: setting of "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'x25tap_start_xmit', this function's name, in a string
#250: FILE: drivers/net/x25tap.c:173:
+			printk(KERN_DEBUG "x25tap_start_xmit: setting of "

WARNING:SPLIT_STRING: quoted string split across lines
#251: FILE: drivers/net/x25tap.c:174:
+			printk(KERN_DEBUG "x25tap_start_xmit: setting of "
+				"options not supported\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#254: FILE: drivers/net/x25tap.c:177:
+			printk(KERN_DEBUG "x25tap_start_xmit: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'x25tap_start_xmit', this function's name, in a string
#254: FILE: drivers/net/x25tap.c:177:
+			printk(KERN_DEBUG "x25tap_start_xmit: "

WARNING:SPLIT_STRING: quoted string split across lines
#255: FILE: drivers/net/x25tap.c:178:
+			printk(KERN_DEBUG "x25tap_start_xmit: "
+				"unknown firstbyte\n");

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#259: FILE: drivers/net/x25tap.c:182:
+			return -1;
+			break;

WARNING:INLINE: plain inline is preferred over __inline__
#267: FILE: drivers/net/x25tap.c:190:
+static __inline__ int x25tap_rx_skb(struct sk_buff *skb, struct net_device *dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: drivers/net/x25tap.c:195:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#274: FILE: drivers/net/x25tap.c:197:
+		printk(KERN_DEBUG "%s : rx len = %d\n", dev->name, len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#280: FILE: drivers/net/x25tap.c:203:
+		printk(KERN_INFO "%s : user %d\n", dev->name, NETLINK_CREDS(skb)->uid);

CHECK:BRACES: braces {} should be used on all arms of this statement
#285: FILE: drivers/net/x25tap.c:208:
+	if (skb_shared(skb)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/net/x25tap.c:209:
+^I  ^Istruct sk_buff *skb2 = skb;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: drivers/net/x25tap.c:209:
+^I  ^Istruct sk_buff *skb2 = skb;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: drivers/net/x25tap.c:210:
+^I  ^Iskb = skb_clone(skb, GFP_KERNEL);^I/* Clone the buffer */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: drivers/net/x25tap.c:210:
+^I  ^Iskb = skb_clone(skb, GFP_KERNEL);^I/* Clone the buffer */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#287: FILE: drivers/net/x25tap.c:210:
+	  	struct sk_buff *skb2 = skb;
+	  	skb = skb_clone(skb, GFP_KERNEL);	/* Clone the buffer */

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: drivers/net/x25tap.c:211:
+^I  ^Iif (skb==NULL) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: drivers/net/x25tap.c:211:
+^I  ^Iif (skb==NULL) {$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#288: FILE: drivers/net/x25tap.c:211:
+	  	if (skb==NULL) {
 	  	       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#288: FILE: drivers/net/x25tap.c:211:
+	  	if (skb==NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/net/x25tap.c:216:
+^I  ^Ikfree_skb(skb2);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: drivers/net/x25tap.c:216:
+^I  ^Ikfree_skb(skb2);$

CHECK:BRACES: Unbalanced braces around else statement
#294: FILE: drivers/net/x25tap.c:217:
+	} else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#298: FILE: drivers/net/x25tap.c:221:
+	skb->protocol=htons(ETH_P_X25);
 	             ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#305: FILE: drivers/net/x25tap.c:228:
+		lp->stats.rx_bytes+=len;
 		                  ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#314: FILE: drivers/net/x25tap.c:237:
+/*
+ *	The typical workload of the driver:

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#322: FILE: drivers/net/x25tap.c:245:
+	unsigned unit = sk->sk_protocol - NETLINK_TAPBASE;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#326: FILE: drivers/net/x25tap.c:249:
+	if (unit >= max_taps || (dev = tap_map[unit]) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#327: FILE: drivers/net/x25tap.c:250:
+		printk(KERN_CRIT "x25tap: bad unit %u!\n", unit);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#333: FILE: drivers/net/x25tap.c:256:
+		printk(KERN_DEBUG "%s: x25tap_rx() %d\n", dev->name, len);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'x25tap_rx', this function's name, in a string
#333: FILE: drivers/net/x25tap.c:256:
+		printk(KERN_DEBUG "%s: x25tap_rx() %d\n", dev->name, len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#345: FILE: drivers/net/x25tap.c:268:
+		printk(KERN_DEBUG "%s: Shutting down.\n", dev->name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#360: FILE: drivers/net/x25tap.c:283:
+	struct net_local *lp = netdev_priv(dev);
+	return &lp->stats;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#363: FILE: drivers/net/x25tap.c:286:
+
+

WARNING:TYPO_SPELLING: 'hande' may be misspelled - perhaps 'handle'?
#368: FILE: drivers/net/x25tap.c:291:
+	/* netlink can only hande 16 entries unless modified */
 	                    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#372: FILE: drivers/net/x25tap.c:295:
+	tap_map = kmalloc(sizeof(struct net_device *)*max_taps, GFP_KERNEL);
 	                                             ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#372: FILE: drivers/net/x25tap.c:295:
+	tap_map = kmalloc(sizeof(struct net_device *)*max_taps, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#398: FILE: drivers/net/x25tap.c:321:
+		struct net_device *dev = tap_map[i];
+		if (dev) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187518.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 46 warnings, 9 checks, 362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187518.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
