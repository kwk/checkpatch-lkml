WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#171: FILE: drivers/usb/storage/libusual.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <bcdDeviceMin>
#217: FILE: drivers/usb/storage/libusual.c:47:
+#define UNUSUAL_DEV(id_vendor, id_product, bcdDeviceMin, bcdDeviceMax, \

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bcdDeviceMax>
#217: FILE: drivers/usb/storage/libusual.c:47:
+#define UNUSUAL_DEV(id_vendor, id_product, bcdDeviceMin, bcdDeviceMax, \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: drivers/usb/storage/libusual.c:48:
+		    vendorName, productName,useProtocol, useTransport, \
 		                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <vendorName>
#218: FILE: drivers/usb/storage/libusual.c:48:
+		    vendorName, productName,useProtocol, useTransport, \

CHECK:CAMELCASE: Avoid CamelCase: <productName>
#218: FILE: drivers/usb/storage/libusual.c:48:
+		    vendorName, productName,useProtocol, useTransport, \

CHECK:CAMELCASE: Avoid CamelCase: <useProtocol>
#218: FILE: drivers/usb/storage/libusual.c:48:
+		    vendorName, productName,useProtocol, useTransport, \

CHECK:CAMELCASE: Avoid CamelCase: <useTransport>
#218: FILE: drivers/usb/storage/libusual.c:48:
+		    vendorName, productName,useProtocol, useTransport, \

CHECK:CAMELCASE: Avoid CamelCase: <initFunction>
#219: FILE: drivers/usb/storage/libusual.c:49:
+		    initFunction, flags) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: drivers/usb/storage/libusual.c:50:
+{ USB_DEVICE_VER(id_vendor, id_product, bcdDeviceMin,bcdDeviceMax), \
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/usb/storage/libusual.c:51:
+  .driver_info = (flags)|(USB_US_TYPE_STOR<<24) }$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#221: FILE: drivers/usb/storage/libusual.c:51:
+  .driver_info = (flags)|(USB_US_TYPE_STOR<<24) }
                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#221: FILE: drivers/usb/storage/libusual.c:51:
+  .driver_info = (flags)|(USB_US_TYPE_STOR<<24) }
                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <useProto>
#223: FILE: drivers/usb/storage/libusual.c:53:
+#define USUAL_DEV(useProto, useTrans, useType) \

CHECK:CAMELCASE: Avoid CamelCase: <useTrans>
#223: FILE: drivers/usb/storage/libusual.c:53:
+#define USUAL_DEV(useProto, useTrans, useType) \

CHECK:CAMELCASE: Avoid CamelCase: <useType>
#223: FILE: drivers/usb/storage/libusual.c:53:
+#define USUAL_DEV(useProto, useTrans, useType) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/usb/storage/libusual.c:55:
+  .driver_info = ((useType)<<24) }$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#225: FILE: drivers/usb/storage/libusual.c:55:
+  .driver_info = ((useType)<<24) }
                            ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#227: FILE: drivers/usb/storage/libusual.c:57:
+struct usb_device_id storage_usb_ids [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#236: FILE: drivers/usb/storage/libusual.c:66:
+EXPORT_SYMBOL(storage_usb_ids);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/usb/storage/libusual.c:102:
+static int usu_probe(struct usb_interface *intf,
+			 const struct usb_device_id *id)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#282: FILE: drivers/usb/storage/libusual.c:112:
+	if ((stat[type].fls & (USU_MOD_FL_THREAD|USU_MOD_FL_PRESENT)) != 0) {
 	                                        ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#289: FILE: drivers/usb/storage/libusual.c:119:
+	rc = kernel_thread(usu_probe_thread, (void*)type, CLONE_VM);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#291: FILE: drivers/usb/storage/libusual.c:121:
+		printk(KERN_WARNING "libusual: "

WARNING:SPLIT_STRING: quoted string split across lines
#292: FILE: drivers/usb/storage/libusual.c:122:
+		printk(KERN_WARNING "libusual: "
+		    "Unable to start the thread for %s: %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#328: FILE: drivers/usb/storage/libusual.c:158:
+	int type = (unsigned long) arg;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#345: FILE: drivers/usb/storage/libusual.c:175:
+		printk(KERN_NOTICE "libusual: "

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: drivers/usb/storage/libusual.c:176:
+		printk(KERN_NOTICE "libusual: "
+		    "modprobe for %s succeeded, but module is not present\n",

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#361: FILE: drivers/usb/storage/libusual.c:191:
+		id->idVendor || id->bDeviceClass || id->bInterfaceClass ||

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceClass>
#361: FILE: drivers/usb/storage/libusual.c:191:
+		id->idVendor || id->bDeviceClass || id->bInterfaceClass ||

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#361: FILE: drivers/usb/storage/libusual.c:191:
+		id->idVendor || id->bDeviceClass || id->bInterfaceClass ||

WARNING:BRACES: braces {} are not necessary for single statement blocks
#364: FILE: drivers/usb/storage/libusual.c:194:
+		if (USB_US_TYPE(id->driver_info) == 0) {
+			id->driver_info |= to_bias << 24;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#377: FILE: drivers/usb/storage/libusual.c:207:
+	bias[BIAS_NAME_SIZE-1] = 0;
 	                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#381: FILE: drivers/usb/storage/libusual.c:211:
+	if ((rc = usb_register(&usu_driver)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#424: FILE: drivers/usb/storage/libusual.c:254:
+			printk(KERN_INFO

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#435: FILE: drivers/usb/storage/libusual.c:265:
+module_param_string(bias, bias, BIAS_NAME_SIZE,  S_IRUGO|S_IWUSR);
                                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#435: FILE: drivers/usb/storage/libusual.c:265:
+module_param_string(bias, bias, BIAS_NAME_SIZE,  S_IRUGO|S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#568: FILE: drivers/usb/storage/usb.c:128:
+{ USB_DEVICE_VER(id_vendor, id_product, bcdDeviceMin,bcdDeviceMax), \
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: drivers/usb/storage/usb.c:129:
+  .driver_info = (flags)|(USB_US_TYPE_STOR<<24) }$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#569: FILE: drivers/usb/storage/usb.c:129:
+  .driver_info = (flags)|(USB_US_TYPE_STOR<<24) }
                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#569: FILE: drivers/usb/storage/usb.c:129:
+  .driver_info = (flags)|(USB_US_TYPE_STOR<<24) }
                                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: drivers/usb/storage/usb.c:133:
+  .driver_info = (USB_US_TYPE_STOR<<24) }$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#573: FILE: drivers/usb/storage/usb.c:133:
+  .driver_info = (USB_US_TYPE_STOR<<24) }
                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: drivers/usb/storage/usb.c:420:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/usb/storage/usb.c:420:
+ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#691: FILE: drivers/usb/storage/usb.c:425:
+	const int id_index = id - storage_usb_ids;
+	return &us_unusual_dev_list[id_index];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#825: FILE: include/linux/usb_usual.h:1:
+/*

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#850: FILE: include/linux/usb_usual.h:26:
+#define US_DO_ALL_FLAGS						\
+	US_FLAG(SINGLE_LUN,	0x00000001)			\
+		/* allow access to only LUN 0 */		\
+	US_FLAG(NEED_OVERRIDE,	0x00000002)			\
+		/* unusual_devs entry is necessary */		\
+	US_FLAG(SCM_MULT_TARG,	0x00000004)			\
+		/* supports multiple targets */			\
+	US_FLAG(FIX_INQUIRY,	0x00000008)			\
+		/* INQUIRY response needs faking */		\
+	US_FLAG(FIX_CAPACITY,	0x00000010)			\
+		/* READ CAPACITY response too big */		\
+	US_FLAG(IGNORE_RESIDUE,	0x00000020)			\
+		/* reported residue is wrong */			\
+	US_FLAG(BULK32,		0x00000040)			\
+		/* Uses 32-byte CBW length */			\
+	US_FLAG(NOT_LOCKABLE,	0x00000080)			\
+		/* PREVENT/ALLOW not supported */		\
+	US_FLAG(GO_SLOW,	0x00000100)			\
+		/* Need delay after Command phase */		\
+	US_FLAG(NO_WP_DETECT,	0x00000200)			\
+		/* Don't check for write-protect */		\
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#872: FILE: include/linux/usb_usual.h:48:
+#define US_FLAG(name, value)	US_FL_##name = value ,
                             	                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#872: FILE: include/linux/usb_usual.h:48:
+#define US_FLAG(name, value)	US_FL_##name = value ,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#936: FILE: include/linux/usb_usual.h:112:
+extern void usb_usual_set_present(int type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#937: FILE: include/linux/usb_usual.h:113:
+extern void usb_usual_clear_present(int type);

ERROR:SPACING: space required before the open parenthesis '('
#940: FILE: include/linux/usb_usual.h:116:
+#define usb_usual_set_present(t)	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#941: FILE: include/linux/usb_usual.h:117:
+#define usb_usual_clear_present(t)	do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144702.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 16 warnings, 26 checks, 835 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144702.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
