WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
--- linux-2.5.orig/include/linux/compat_ioctl.h	2005-01-26 17:23:57.000000000 -0800

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#120: FILE: include/linux/usbdevice_fs.h:155:
+#define USBDEVFS_REAPURBdø©NDELAY32   _IOW('U', 13, u32)
                          ^

CHECK:CAMELCASE: Avoid CamelCase: <USBDEVFS_REAPURBd>
#120: FILE: include/linux/usbdevice_fs.h:155:
+#define USBDEVFS_REAPURBdø©NDELAY32   _IOW('U', 13, u32)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#120: FILE: include/linux/usbdevice_fs.h:155:
+#define USBDEVFS_REAPURBdø©NDELAY32   _IOW('U', 13, u32)

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#211: FILE: fs/compat_ioctl.c:2572:
dø©-

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: drivers/usb/core/devio.c:806:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#387: FILE: drivers/usb/core/devio.c:806:
 
+	

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#403: FILE: drivers/usb/core/devio.c:818:
+	if (uurb->flags & ~(USBDEVFS_URB_ISO_ASAP|USBDEVFS_URB_SHORT_NOT_OK|
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#403: FILE: drivers/usb/core/devio.c:818:
+	if (uurb->flags & ~(USBDEVFS_URB_ISO_ASAP|USBDEVFS_URB_SHORT_NOT_OK|
 	                                                                   ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#414: FILE: drivers/usb/core/devio.c:825:
+	if (!(uurb->type == USBDEVFS_URB_TYPE_CONTROL && (uurb->endpoint & ~USB_ENDPOINT_DIR_MASK) == 0)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#415: FILE: drivers/usb/core/devio.c:826:
+		if ((ifnum = findintfep(ps->dev, uurb->endpoint)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#423: FILE: drivers/usb/core/devio.c:832:
+		ep = ps->dev->ep_in [uurb->endpoint & USB_ENDPOINT_NUMBER_MASK];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#426: FILE: drivers/usb/core/devio.c:834:
+		ep = ps->dev->ep_out [uurb->endpoint & USB_ENDPOINT_NUMBER_MASK];

ERROR:SPACING: space required before the open parenthesis '('
#430: FILE: drivers/usb/core/devio.c:837:
+	switch(uurb->type) {

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#447: FILE: drivers/usb/core/devio.c:851:
+		if (uurb->buffer_length < (le16_to_cpup(&dr->wLength) + 8)) {

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#460: FILE: drivers/usb/core/devio.c:859:
+		uurb->endpoint = (uurb->endpoint & ~USB_ENDPOINT_DIR_MASK) | (dr->bRequestType & USB_ENDPOINT_DIR_MASK);

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#460: FILE: drivers/usb/core/devio.c:859:
+		uurb->endpoint = (uurb->endpoint & ~USB_ENDPOINT_DIR_MASK) | (dr->bRequestType & USB_ENDPOINT_DIR_MASK);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#464: FILE: drivers/usb/core/devio.c:863:
+		if (!access_ok((uurb->endpoint & USB_DIR_IN) ?  VERIFY_WRITE : VERIFY_READ, uurb->buffer, uurb->buffer_length)) {

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#478: FILE: drivers/usb/core/devio.c:879:
+		if (!access_ok((uurb->endpoint & USB_DIR_IN) ? VERIFY_WRITE : VERIFY_READ, uurb->buffer, uurb->buffer_length))

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#527: FILE: drivers/usb/core/devio.c:923:
+		if (!access_ok((uurb->endpoint & USB_DIR_IN) ? VERIFY_WRITE : VERIFY_READ, uurb->buffer, uurb->buffer_length))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#535: FILE: drivers/usb/core/devio.c:930:
+	if (!(as = alloc_async(uurb->number_of_packets))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#543: FILE: drivers/usb/core/devio.c:937:
+	if (!(as->urb->transfer_buffer = kmalloc(uurb->buffer_length, GFP_KERNEL))) {

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#554: FILE: drivers/usb/core/devio.c:946:
+        as->urb->pipe = (uurb->type << 30) | __create_pipe(ps->dev, uurb->endpoint & 0xf) | (uurb->endpoint & USB_DIR_IN);

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: drivers/usb/core/devio.c:946:
+        as->urb->pipe = (uurb->type << 30) | __create_pipe(ps->dev, uurb->endpoint & 0xf) | (uurb->endpoint & USB_DIR_IN);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: drivers/usb/core/devio.c:946:
+        as->urb->pipe = (uurb->type << 30) | __create_pipe(ps->dev, uurb->endpoint & 0xf) | (uurb->endpoint & USB_DIR_IN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: drivers/usb/core/devio.c:947:
+        as->urb->transfer_flags = uurb->flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/usb/core/devio.c:947:
+        as->urb->transfer_flags = uurb->flags;$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#587: FILE: drivers/usb/core/devio.c:972:
+		if (copy_from_user(as->urb->transfer_buffer, uurb->buffer, as->urb->transfer_buffer_length)) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#602: FILE: drivers/usb/core/devio.c:994:
+	return proc_do_submiturb(ps, &uurb, (((struct usbdevfs_urb __user *)arg)->iso_frame_desc), arg);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#634: FILE: drivers/usb/core/devio.c:1043:
+static struct async* reap_as(struct dev_state *ps)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: drivers/usb/core/devio.c:1068:
+^Iif (as) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#664: FILE: drivers/usb/core/devio.c:1068:
+	struct async *as = reap_as(ps);
+	if (as) 

WARNING:LINE_SPACING: Missing a blank line after declarations
#689: FILE: drivers/usb/core/devio.c:1090:
+	__u32  uptr;
+	if (get_user(kurb->type, &uurb->type) ||

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: drivers/usb/core/devio.c:1116:
+	if (get_urb32(&uurb,(struct usbdevfs_urb32 *)arg))
 	                   ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#718: FILE: drivers/usb/core/devio.c:1119:
+	return proc_do_submiturb(ps, &uurb, ((struct usbdevfs_urb __user *)arg)->iso_frame_desc, arg);

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#742: FILE: drivers/usb/core/devio.c:1143:
+			     &userurb->iso_frame_desc[i].actual_ldø©ength))
 			                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: drivers/usb/core/devio.c:1159:
+^Iif (as) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#761: FILE: drivers/usb/core/devio.c:1159:
+	struct async *as = reap_as(ps);
+	if (as) 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#772: FILE: drivers/usb/core/devio.c:1170:
+	if (!(as = async_getcompleted(ps)))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#789: FILE: drivers/usb/core/devio.c:1391:
+		snoop(&dev->dev, "%s: SUBMITURB32\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#796: FILE: drivers/usb/core/devio.c:1398:
+		snoop(&dev->dev, "%s: REAPURB32\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#801: FILE: drivers/usb/core/devio.c:1403:
+		snoop(&dev->dev, "%s: REAPURBDELAY32\n", __FUNCTION__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211066.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 18 warnings, 8 checks, 711 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211066.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
