WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#32: 
> * Peter Zijlstra <a.p.zijlstra@chello.nl> wrote:
                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#39: 
> hm, the second patch does not apply (and the merge didnt look trivial) - 
                                                     ^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#70: 
Since there is no lock held yet we are still preemptable; and since 
                                             ^^^^^^^^^^^

WARNING:BAD_SIGN_OFF: Duplicate signature
#112: 
Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#123: FILE: net/ipv4/icmp.c:231:
+static DEFINE_PER_CPU_LOCKED(struct socket *, __icmp_socket) = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#126: FILE: net/ipv4/icmp.c:233:
+static __inline__ struct socket * icmp_xmit_lock(int cpu)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#126: FILE: net/ipv4/icmp.c:233:
+static __inline__ struct socket * icmp_xmit_lock(int cpu)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#183: FILE: net/ipv4/icmp.c:398:
+	if (!(icmp_socket = icmp_xmit_lock(cpu)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#217: FILE: net/ipv4/icmp.c:521:
+	if (!(icmp_socket = icmp_xmit_lock(cpu)))

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#265: FILE: net/ipv4/icmp.c:1151:
+		__get_cpu_var_locked(__icmp_socket, i)->sk->sk_prot->unhash(__get_cpu_var_locked(__icmp_socket, i)->sk);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000193149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 0 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000193149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
