WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
Make the FRV arch use the generic IRQ code rather than having its own routines

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#29: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: arch/frv/Kconfig:262:
+config FUJITSU_MB93493
+	bool "MB93493 Multimedia chip"
+	help
+	  Select this option if the MB93493 multimedia chip is going to be
+	  used.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#133: FILE: arch/frv/kernel/irq-mb93091.c:41:
+	uint16_t imr = __get_IMR();

CHECK:SPACING: No space is necessary after a cast
#206: FILE: arch/frv/kernel/irq-mb93091.c:81:
+	uint16_t imr, mask = (unsigned long) _mask;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#206: FILE: arch/frv/kernel/irq-mb93091.c:81:
+	uint16_t imr, mask = (unsigned long) _mask;

CHECK:SPACING: No space is necessary after a cast
#243: FILE: arch/frv/kernel/irq-mb93091.c:112:
+		.dev_id		= (void *) 0x0028UL,

CHECK:SPACING: No space is necessary after a cast
#250: FILE: arch/frv/kernel/irq-mb93091.c:119:
+		.dev_id		= (void *) 0x0050UL,

CHECK:SPACING: No space is necessary after a cast
#257: FILE: arch/frv/kernel/irq-mb93091.c:126:
+		.dev_id		= (void *) 0x1c00UL,

CHECK:SPACING: No space is necessary after a cast
#264: FILE: arch/frv/kernel/irq-mb93091.c:133:
+		.dev_id		= (void *) 0x6386UL,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#341: FILE: arch/frv/kernel/irq-mb93093.c:40:
+	uint16_t imr = __get_IMR();

CHECK:SPACING: No space is necessary after a cast
#397: FILE: arch/frv/kernel/irq-mb93093.c:80:
+	uint16_t imr, mask = (unsigned long) _mask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#397: FILE: arch/frv/kernel/irq-mb93093.c:80:
+	uint16_t imr, mask = (unsigned long) _mask;

CHECK:SPACING: No space is necessary after a cast
#434: FILE: arch/frv/kernel/irq-mb93093.c:111:
+		.dev_id		= (void *) 0x0700UL,

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'X' may be better as '(X)' to avoid precedence issues
#478: FILE: arch/frv/kernel/irq-mb93493.c:30:
+#define IRQ_ROUTE_ONE(X) (X##_ROUTE << (X - IRQ_BASE_MB93493))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#517: FILE: arch/frv/kernel/irq-mb93493.c:50:
+	volatile void *piqsr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#537: FILE: arch/frv/kernel/irq-mb93493.c:64:
+	uint32_t iqsr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#538: FILE: arch/frv/kernel/irq-mb93493.c:65:
+	volatile void *piqsr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#588: FILE: arch/frv/kernel/irq-mb93493.c:100:
+	volatile void *piqsr = _piqsr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#590: FILE: arch/frv/kernel/irq-mb93493.c:102:
+	uint32_t iqsr;

CHECK:SPACING: No space is necessary after a cast
#621: FILE: arch/frv/kernel/irq-mb93493.c:132:
+		.dev_id		= (void *) __addr_MB93493_IQSR(0),

CHECK:SPACING: No space is necessary after a cast
#628: FILE: arch/frv/kernel/irq-mb93493.c:139:
+		.dev_id		= (void *) __addr_MB93493_IQSR(1),

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#662: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#995: FILE: arch/frv/kernel/irq.c:41:
+#define set_IRR(N,A,B,C,D) __set_IRR(N, (A << 28) | (B << 24) | (C << 20) | (D << 16))
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#995: FILE: arch/frv/kernel/irq.c:41:
+#define set_IRR(N,A,B,C,D) __set_IRR(N, (A << 28) | (B << 24) | (C << 20) | (D << 16))
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#995: FILE: arch/frv/kernel/irq.c:41:
+#define set_IRR(N,A,B,C,D) __set_IRR(N, (A << 28) | (B << 24) | (C << 20) | (D << 16))
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#995: FILE: arch/frv/kernel/irq.c:41:
+#define set_IRR(N,A,B,C,D) __set_IRR(N, (A << 28) | (B << 24) | (C << 20) | (D << 16))
                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'A' may be better as '(A)' to avoid precedence issues
#995: FILE: arch/frv/kernel/irq.c:41:
+#define set_IRR(N,A,B,C,D) __set_IRR(N, (A << 28) | (B << 24) | (C << 20) | (D << 16))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'B' may be better as '(B)' to avoid precedence issues
#995: FILE: arch/frv/kernel/irq.c:41:
+#define set_IRR(N,A,B,C,D) __set_IRR(N, (A << 28) | (B << 24) | (C << 20) | (D << 16))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'C' may be better as '(C)' to avoid precedence issues
#995: FILE: arch/frv/kernel/irq.c:41:
+#define set_IRR(N,A,B,C,D) __set_IRR(N, (A << 28) | (B << 24) | (C << 20) | (D << 16))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'D' may be better as '(D)' to avoid precedence issues
#995: FILE: arch/frv/kernel/irq.c:41:
+#define set_IRR(N,A,B,C,D) __set_IRR(N, (A << 28) | (B << 24) | (C << 20) | (D << 16))

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1000: FILE: arch/frv/kernel/irq.c:43:
+extern void __init fpga_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1006: FILE: arch/frv/kernel/irq.c:48:
+#define __reg16(ADDR) (*(volatile unsigned short *)(ADDR))

CHECK:SPACING: No space is necessary after a cast
#1016: FILE: arch/frv/kernel/irq.c:57:
+	int i = *(loff_t *) v, cpu;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1017: FILE: arch/frv/kernel/irq.c:58:
+	struct irqaction * action;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1064: FILE: arch/frv/kernel/irq.c:64:
+		seq_printf(p, "    ");

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2109: FILE: include/asm-frv/mb93493-regs.h:18:
+#define __addr_MB93493(X)	((volatile unsigned long *)(__region_CS3 + (X)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 11 warnings, 21 checks, 1604 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
