CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw_config->irq != 3'
#139: FILE: sound/oss/ad1848.c:2594:
+	if ((hw_config->irq != 3)  &&
+	    (hw_config->irq != 5)  &&
+	    (hw_config->irq != 10) &&
+	    (hw_config->irq != 12))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw_config->irq != 5'
#139: FILE: sound/oss/ad1848.c:2594:
+	if ((hw_config->irq != 3)  &&
+	    (hw_config->irq != 5)  &&
+	    (hw_config->irq != 10) &&
+	    (hw_config->irq != 12))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw_config->irq != 10'
#139: FILE: sound/oss/ad1848.c:2594:
+	if ((hw_config->irq != 3)  &&
+	    (hw_config->irq != 5)  &&
+	    (hw_config->irq != 10) &&
+	    (hw_config->irq != 12))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw_config->irq != 12'
#139: FILE: sound/oss/ad1848.c:2594:
+	if ((hw_config->irq != 3)  &&
+	    (hw_config->irq != 5)  &&
+	    (hw_config->irq != 10) &&
+	    (hw_config->irq != 12))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#159: FILE: sound/oss/ad1848.c:2635:
+	static signed char interrupt_bits[13] =
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: sound/oss/ad1848.c:2636:
+^I^I-1, -1, -1, 0x08, -1, 0x10, -1, -1, -1, -1, 0x18, -1, 0x20 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#164: FILE: sound/oss/ad1848.c:2640:
+	static signed char interrupt_bits2[13] =
+	{

WARNING:TYPO_SPELLING: 'CanBe' may be misspelled - perhaps 'Can be'?
#179: FILE: sound/oss/ad1848.c:2682:
+		/* Set up CanBe control registers. */
 		          ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#183: FILE: sound/oss/ad1848.c:2686:
+		printk(KERN_DEBUG "MSS: "

WARNING:TYPO_SPELLING: 'CanBe' may be misspelled - perhaps 'Can be'?
#184: FILE: sound/oss/ad1848.c:2687:
+			"Setting up CanBe Sound System control register\n");
 			            ^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#184: FILE: sound/oss/ad1848.c:2687:
+		printk(KERN_DEBUG "MSS: "
+			"Setting up CanBe Sound System control register\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: sound/oss/dmabuf.c:161:
+	outb(chan,0x29);
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#235: FILE: sound/oss/mpu401.c:80:
+#define	COMDPORT(base)   (base+2)
        	                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#235: FILE: sound/oss/mpu401.c:80:
+#define	COMDPORT(base)   (base+2)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#236: FILE: sound/oss/mpu401.c:81:
+#define	STATPORT(base)   (base+2)
        	                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#236: FILE: sound/oss/mpu401.c:81:
+#define	STATPORT(base)   (base+2)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: sound/oss/mpu401.c:1233:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: sound/oss/mpu401.c:1233:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
 		                                    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#285: FILE: sound/oss/mpu401.c:1233:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
 		                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: sound/oss/mpu401.c:1233:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
 		                                                        ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#285: FILE: sound/oss/mpu401.c:1233:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: sound/oss/mpu401.c:1234:
+		#define WAIT118 outb(0x00,0x5f)
 		                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#292: FILE: sound/oss/mpu401.c:1240:
+		switch (hw_config->irq)
+		{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#307: FILE: sound/oss/mpu401.c:1255:
+				printk(KERN_ERR "mpu401: Bad irq %d\n\n", hw_config->irq);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#314: FILE: sound/oss/mpu401.c:1262:
+		if (inb(0x148f) & 0x08)
+		{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#316: FILE: sound/oss/mpu401.c:1264:
+			printk(KERN_DEBUG "mpu401: No MIDI daughter board found\n\n");

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#322: FILE: sound/oss/mpu401.c:1270:
+		for (count = 0; count < 35000; count ++)
 		                                     ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#325: FILE: sound/oss/mpu401.c:1273:
+		for (count = 0; count < 65000; count ++)
 		                                     ^

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#328: FILE: sound/oss/mpu401.c:1276:
+		printk(KERN_ERR "mpu401: MIDI daughter board initalize failed at stage1\n\n");
 		                                             ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#328: FILE: sound/oss/mpu401.c:1276:
+		printk(KERN_ERR "mpu401: MIDI daughter board initalize failed at stage1\n\n");

WARNING:INDENTED_LABEL: labels should not be indented
#331: FILE: sound/oss/mpu401.c:1279:
+		set_mode_118:

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#336: FILE: sound/oss/mpu401.c:1284:
+		for (count = 0; count < sizeof(Data0485_99); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#336: FILE: sound/oss/mpu401.c:1284:
+		for (count = 0; count < sizeof(Data0485_99); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_99>
#336: FILE: sound/oss/mpu401.c:1284:
+		for (count = 0; count < sizeof(Data0485_99); count ++)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#346: FILE: sound/oss/mpu401.c:1294:
+		for (count = 0; count < sizeof(Data0485_9E); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_9E>
#346: FILE: sound/oss/mpu401.c:1294:
+		for (count = 0; count < sizeof(Data0485_9E); count ++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#347: FILE: sound/oss/mpu401.c:1295:
+			if (inb(0x485) != Data0485_9E[count])
+			{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#355: FILE: sound/oss/mpu401.c:1303:
+		for (count = 0; count < 2000; count ++)
 		                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#358: FILE: sound/oss/mpu401.c:1306:
+		if (!err)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#363: FILE: sound/oss/mpu401.c:1311:
+			for (count = 0; count < sizeof(Data0485_36); count ++)
 			                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_36>
#363: FILE: sound/oss/mpu401.c:1311:
+			for (count = 0; count < sizeof(Data0485_36); count ++)

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#366: FILE: sound/oss/mpu401.c:1314:
+			for (count = 0; count < 1500; count ++)
 			                                    ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#371: FILE: sound/oss/mpu401.c:1319:
+			for (count = 0; count < 1500; count ++)
 			                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#379: FILE: sound/oss/mpu401.c:1327:
+		for (count = 0; count < sizeof(Data0485_A9); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#379: FILE: sound/oss/mpu401.c:1327:
+		for (count = 0; count < sizeof(Data0485_A9); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_A9>
#379: FILE: sound/oss/mpu401.c:1327:
+		for (count = 0; count < sizeof(Data0485_A9); count ++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#389: FILE: sound/oss/mpu401.c:1337:
+		for (count = 0; count < sizeof(Data0485_0C); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#389: FILE: sound/oss/mpu401.c:1337:
+		for (count = 0; count < sizeof(Data0485_0C); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_0C>
#389: FILE: sound/oss/mpu401.c:1337:
+		for (count = 0; count < sizeof(Data0485_0C); count ++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#399: FILE: sound/oss/mpu401.c:1347:
+		for (count = 0; count < sizeof(Data0485_66); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#399: FILE: sound/oss/mpu401.c:1347:
+		for (count = 0; count < sizeof(Data0485_66); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_66>
#399: FILE: sound/oss/mpu401.c:1347:
+		for (count = 0; count < sizeof(Data0485_66); count ++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#409: FILE: sound/oss/mpu401.c:1357:
+		for (count = 0; count < sizeof(Data0485_60); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#409: FILE: sound/oss/mpu401.c:1357:
+		for (count = 0; count < sizeof(Data0485_60); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_60>
#409: FILE: sound/oss/mpu401.c:1357:
+		for (count = 0; count < sizeof(Data0485_60); count ++)

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#418: FILE: sound/oss/mpu401.c:1366:
+		for (count = 0; count < 35000; count ++)
 		                                     ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#421: FILE: sound/oss/mpu401.c:1369:
+		for (count = 0; count < 65000; count ++)
 		                                     ^

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#424: FILE: sound/oss/mpu401.c:1372:
+		printk(KERN_ERR "mpu401: MIDI daughter board initalize failed at stage2\n\n");
 		                                             ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#424: FILE: sound/oss/mpu401.c:1372:
+		printk(KERN_ERR "mpu401: MIDI daughter board initalize failed at stage2\n\n");

WARNING:INDENTED_LABEL: labels should not be indented
#427: FILE: sound/oss/mpu401.c:1375:
+		end_mode_118:

WARNING:INDENTED_LABEL: labels should not be indented
#429: FILE: sound/oss/mpu401.c:1377:
+		exit_mode_118:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#484: FILE: sound/oss/opl3.c:195:
+			printk(KERN_WARNING "opl3: I/O port 0x%x already in use\n", ioaddr + 0x200);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#488: FILE: sound/oss/opl3.c:199:
+			printk(KERN_WARNING "opl3: I/O port 0x%x already in use\n", ioaddr + 0x800);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#502: FILE: sound/oss/opl3.c:213:
+		printk(KERN_INFO "opl3: PC-9801-118 (or compatible) found,"

WARNING:SPLIT_STRING: quoted string split across lines
#503: FILE: sound/oss/opl3.c:214:
+		printk(KERN_INFO "opl3: PC-9801-118 (or compatible) found,"
+		       " and enabled OPL-3 functions.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#507: FILE: sound/oss/opl3.c:218:
+		printk(KERN_INFO "opl3: Sound ID is UNKNOWN."

WARNING:SPLIT_STRING: quoted string split across lines
#508: FILE: sound/oss/opl3.c:219:
+		printk(KERN_INFO "opl3: Sound ID is UNKNOWN."
+		       " Try to detect SB16 for PC-9800.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#512: FILE: sound/oss/opl3.c:223:
+		printk(KERN_ERR "opl3: "

WARNING:SPLIT_STRING: quoted string split across lines
#513: FILE: sound/oss/opl3.c:224:
+		printk(KERN_ERR "opl3: "
+		       "This sound system doesn't support OPL-3.\n");

CHECK:SPACING: No space is necessary after a cast
#576: FILE: sound/oss/opl3.c:799:
+	outb(((unsigned char) (val & 0xff)),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#593: FILE: sound/oss/opl3.c:1173:
+	outb(inb(PC9800_SOUND_IO_ID)|0x03, PC9800_SOUND_IO_ID);
 	                            ^

ERROR:SPACING: space required before the open brace '{'
#622: FILE: sound/oss/opl3.c:1212:
+	switch (PC9800_SOUND_ID()){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#636: FILE: sound/oss/opl3.c:1226:
+		printk(KERN_ERR "opl3: Sorry, this driver is not configured for your sound system.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#677: FILE: sound/oss/sb.h:1:
+#include <linux/config.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#754: FILE: sound/oss/sb_common.c:329:
+		switchh (level)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#766: FILE: sound/oss/sb_common.c:341:
+			printk(KERN_ERR "SB16: Invalid IRQ%d\n", level);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#769: FILE: sound/oss/sb_common.c:344:
+	else
[...]
 	switch (level)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#809: FILE: sound/oss/sb_common.c:770:
+	else
[...]
 	request_region(hw_config->io_base, 16, "soundblaster");

ERROR:SPACING: space required before the open brace '{'
#819: FILE: sound/oss/sb_common.c:836:
+			else if (devc->type == MDL_SB16_PC9800){

ERROR:SPACING: space required before the open parenthesis '('
#821: FILE: sound/oss/sb_common.c:838:
+				if(hw_config->name == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hw_config->name"
#821: FILE: sound/oss/sb_common.c:838:
+				if(hw_config->name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#843: FILE: sound/oss/sb_common.c:860:
+				if(devc->type == MDL_SB16_PC9800)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#845: FILE: sound/oss/sb_common.c:862:
+				else
[...]
 			        release_region(hw_config->io_base, 16);

ERROR:SPACING: space required before the open parenthesis '('
#857: FILE: sound/oss/sb_common.c:955:
+		if(devc->type == MDL_SB16_PC9800)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#859: FILE: sound/oss/sb_common.c:957:
+		else
[...]
 		release_region(devc->base, 16);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#869: FILE: sound/oss/sb_common.c:1299:
+			if (devc->type == MDL_SB16_PC9800)
+			{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#871: FILE: sound/oss/sb_common.c:1301:
+				if (hw_config->io_base != 0x80d2
+				    || hw_config->io_base != 0xc8d2)
+				{

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#872: FILE: sound/oss/sb_common.c:1302:
+				if (hw_config->io_base != 0x80d2
+				    || hw_config->io_base != 0xc8d2)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#874: FILE: sound/oss/sb_common.c:1304:
+					printk(KERN_ERR "SB16: Invalid MIDI port %x\n", hw_config->io_base);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#874: FILE: sound/oss/sb_common.c:1304:
+					printk(KERN_ERR "SB16: Invalid MIDI port %x\n", hw_config->io_base);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#878: FILE: sound/oss/sb_common.c:1308:
+			else
[...]
 			if (hw_config->io_base != 0x300 && hw_config->io_base != 0x330)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#878: FILE: sound/oss/sb_common.c:1308:
+			}
+			else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#891: FILE: sound/oss/sb_common.c:1358:
+	int n;
+	for (n = 4; n < 7; n++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#892: FILE: sound/oss/sb_common.c:1359:
+		if(check_region(ioaddr + n*0x100, 1))
 		                          ^

ERROR:SPACING: space required before the open parenthesis '('
#892: FILE: sound/oss/sb_common.c:1359:
+		if(check_region(ioaddr + n*0x100, 1))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#895: FILE: sound/oss/sb_common.c:1362:
+		if(check_region(ioaddr + n*0x100, 1))
 		                          ^

ERROR:SPACING: space required before the open parenthesis '('
#895: FILE: sound/oss/sb_common.c:1362:
+		if(check_region(ioaddr + n*0x100, 1))

WARNING:LINE_SPACING: Missing a blank line after declarations
#903: FILE: sound/oss/sb_common.c:1370:
+	int n;
+	for (n = 4; n < 7; n++)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#904: FILE: sound/oss/sb_common.c:1371:
+		request_region(ioaddr + n*0x100, 1, name);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#906: FILE: sound/oss/sb_common.c:1373:
+		request_region(ioaddr + n*0x100, 1, name);
 		                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#912: FILE: sound/oss/sb_common.c:1379:
+	int n;
+	for (n = 4; n < 7; n++)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#913: FILE: sound/oss/sb_common.c:1380:
+		release_region(ioaddr + n*0x100, 1);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#915: FILE: sound/oss/sb_common.c:1382:
+		release_region(ioaddr + n*0x100, 1);
 		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#970: FILE: sound/oss/uart401.c:51:
+#define	COMDPORT   (devc->base+0x100)
        	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#971: FILE: sound/oss/uart401.c:52:
+#define	STATPORT   (devc->base+0x100)
        	                      ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#982: FILE: sound/oss/uart401.c:315:
+		printk(KERN_INFO "uart401: could not request_region(%d, 4)\n", hw_config->io_base + 0x100);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#982: FILE: sound/oss/uart401.c:315:
+		printk(KERN_INFO "uart401: could not request_region(%d, 4)\n", hw_config->io_base + 0x100);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419021.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 37 warnings, 27 checks, 874 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419021.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
