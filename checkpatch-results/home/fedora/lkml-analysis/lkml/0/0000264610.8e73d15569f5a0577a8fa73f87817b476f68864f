WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: include/asm-x86_64/bug.h:11:
+       unsigned char ud2[2];$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#580: FILE: include/asm-x86_64/bug.h:13:
+	   like it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#583: FILE: include/asm-x86_64/bug.h:16:
+} __attribute__((packed));

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#607: FILE: include/asm-generic/bug.h:1:
+#ifndef _ASM_GENERIC_BUG_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#614: FILE: include/asm-generic/bug.h:8:
+#define BUG() do { \

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#614: FILE: include/asm-generic/bug.h:8:
+#define BUG() do { \
+	printk("kernel BUG at %s:%d!\n", __FILE__, __LINE__); \
+	panic("BUG!");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#615: FILE: include/asm-generic/bug.h:9:
+	printk("kernel BUG at %s:%d!\n", __FILE__, __LINE__); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#622: FILE: include/asm-generic/bug.h:16:
+	printk("page BUG for page at %p\n", page); \

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#623: FILE: include/asm-generic/bug.h:17:
+	BUG(); \

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#628: FILE: include/asm-generic/bug.h:22:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#628: FILE: include/asm-generic/bug.h:22:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#628: FILE: include/asm-generic/bug.h:22:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#633: FILE: include/asm-generic/bug.h:27:
+	if (unlikely((condition)!=0)) { \
 	                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#634: FILE: include/asm-generic/bug.h:28:
+		printk("Badness in %s at %s:%d\n", __FUNCTION__, __FILE__, __LINE__); \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#634: FILE: include/asm-generic/bug.h:28:
+		printk("Badness in %s at %s:%d\n", __FUNCTION__, __FILE__, __LINE__); \

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 33 warnings, 0 checks, 502 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
