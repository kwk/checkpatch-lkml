WARNING:TYPO_SPELLING: 'conected' may be misspelled - perhaps 'connected'?
#38: 
conected to more than one interface. It is not possible to add
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#81: FILE: net/ipv4/arp.c:955:
+struct neighbour *arp_lookup(u32 ip, struct net_device *dev, int creat)
                                                                  ^^^^^

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#83: FILE: net/ipv4/arp.c:957:
+        return __neigh_lookup(&arp_tbl, &ip, dev, creat);
                                                   ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: net/ipv4/arp.c:957:
+        return __neigh_lookup(&arp_tbl, &ip, dev, creat);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: net/ipv4/arp.c:957:
+        return __neigh_lookup(&arp_tbl, &ip, dev, creat);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#86: FILE: net/ipv4/arp.c:960:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#97: FILE: net/ipv4/fib_semantics.c:1039:
+extern struct neighbour *arp_lookup(u32 ip, struct net_device *dev, int creat);
                                                                         ^^^^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#120: FILE: net/ipv4/fib_semantics.c:1062:
+		if ((n->nud_state&(NUD_CONNECTED|NUD_DELAY|NUD_PROBE)) != 0) {
 		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#120: FILE: net/ipv4/fib_semantics.c:1062:
+		if ((n->nud_state&(NUD_CONNECTED|NUD_DELAY|NUD_PROBE)) != 0) {
 		                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#120: FILE: net/ipv4/fib_semantics.c:1062:
+		if ((n->nud_state&(NUD_CONNECTED|NUD_DELAY|NUD_PROBE)) != 0) {
 		                                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#135: FILE: net/ipv4/fib_semantics.c:1077:
+		if ((n = arp_lookup(ip, dev, 1)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: No space is necessary after a cast
#152: FILE: net/ipv4/route.c:1335:
+	rt = (struct rtable *) skb->dst;

CHECK:BRACES: braces {} should be used on all arms of this statement
#166: FILE: net/ipv4/route.c:2083:
+		if (res.fi->fib_flags & RTM_F_FROMARP) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#169: FILE: net/ipv4/route.c:2086:
+		} else

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#183: FILE: net/ipv4/route.c:2201:
+		if (rth->rt_type == RTN_UNICAST || rth->fl.iif == 0) {
 		                                           ^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#184: FILE: net/ipv4/route.c:2202:
+			if ((err = arp_bind_neighbour(&rth->u.dst)) != 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294074.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 11 warnings, 7 checks, 124 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294074.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
