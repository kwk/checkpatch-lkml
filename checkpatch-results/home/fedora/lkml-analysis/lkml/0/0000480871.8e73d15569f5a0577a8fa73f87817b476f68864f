WARNING:TYPO_SPELLING: 'aganist' may be misspelled - perhaps 'against'?
#43: 
I/O layer changes in 2.5. It's aganist 2.5.3-pre6. Please take a look.
                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
diff -urN -X dontdiff 253-pre6/drivers/block/ll_rw_blk.c dk-pre6/drivers/block/ll_rw_blk.c

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: drivers/block/ll_rw_blk.c:808:
+	struct disk_stat * new;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'initilize' may be misspelled - perhaps 'initialize'?
#85: FILE: drivers/block/ll_rw_blk.c:838:
+	 * At last, allocate and initilize the statistics
 	                         ^^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#87: FILE: drivers/block/ll_rw_blk.c:840:
+	new = kmalloc(sizeof(struct disk_stat),GFP_KERNEL);
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct disk_stat)...)
#87: FILE: drivers/block/ll_rw_blk.c:840:
+	new = kmalloc(sizeof(struct disk_stat),GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space prohibited after that open parenthesis '('
#88: FILE: drivers/block/ll_rw_blk.c:841:
+	if ( new == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#88: FILE: drivers/block/ll_rw_blk.c:841:
+	if ( new == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#89: FILE: drivers/block/ll_rw_blk.c:842:
+		printk(KERN_WARNING "blk_init_queue:error in allocating queue statistics\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#89: FILE: drivers/block/ll_rw_blk.c:842:
+	if ( new == NULL)
+		printk(KERN_WARNING "blk_init_queue:error in allocating queue statistics\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: drivers/block/ll_rw_blk.c:955:
+	request_queue_t * q = rq->q;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: drivers/block/ll_rw_blk.c:956:
+	struct disk_stat * ds;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ds"
#110: FILE: drivers/block/ll_rw_blk.c:959:
+	if (ds == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: drivers/md/md.c:3314:
+		request_queue_t * rq = blk_get_queue(rdev->dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: drivers/md/md.c:3315:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/md/md.c:3318:
+^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->dk_stat == NULL'
#158: FILE: drivers/md/md.c:3319:
+		if (rq == NULL || (rq->dk_stat == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rq"
#158: FILE: drivers/md/md.c:3319:
+		if (rq == NULL || (rq->dk_stat == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rq->dk_stat"
#158: FILE: drivers/md/md.c:3319:
+		if (rq == NULL || (rq->dk_stat == NULL))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: drivers/md/md.c:3321:
+^I^Icurr_events = rq->dk_stat->dk_drive_rblk + $

WARNING:SPACING: space prohibited before semicolon
#161: FILE: drivers/md/md.c:3322:
+			rq->dk_stat->dk_drive_wblk ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: fs/proc/proc_misc.c:227:
+static int show_disk_stat(char * page, int len, struct disk_stat * ds,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: fs/proc/proc_misc.c:227:
+static int show_disk_stat(char * page, int len, struct disk_stat * ds,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: fs/proc/proc_misc.c:228:
+static int show_disk_stat(char * page, int len, struct disk_stat * ds,
+				int major, int disk)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: fs/proc/proc_misc.c:294:
+		struct disk_stat * ds;

ERROR:SPACING: space required before the open brace '{'
#222: FILE: fs/proc/proc_misc.c:296:
+		if (!(blk_dev[major].queue)){

ERROR:SPACING: space required after that close brace '}'
#226: FILE: fs/proc/proc_misc.c:300:
+		}else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: fs/proc/proc_misc.c:301:
+			request_queue_t * q;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#228: FILE: fs/proc/proc_misc.c:302:
+			struct gendisk * hd = get_gendisk(mk_kdev(major,0));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: fs/proc/proc_misc.c:302:
+			struct gendisk * hd = get_gendisk(mk_kdev(major,0));
 			                                               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#229: FILE: fs/proc/proc_misc.c:303:
+			int max_disk = MINORMASK>>hd->minor_shift;
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: fs/proc/proc_misc.c:306:
+				q = blk_get_queue(mk_kdev(major,disk<<hd->minor_shift));
 				                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#232: FILE: fs/proc/proc_misc.c:306:
+				q = blk_get_queue(mk_kdev(major,disk<<hd->minor_shift));
 				                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: fs/proc/proc_misc.c:312:
+				len = show_disk_stat(page, len, ds, major,disk);
 				                                         ^

WARNING:SPACING: missing space after struct definition
#253: FILE: include/linux/blkdev.h:134:
+struct disk_stat{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: include/linux/blkdev.h:204:
+^Istruct disk_stat ^I*dk_stat;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480871.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 8 warnings, 9 checks, 203 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480871.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
