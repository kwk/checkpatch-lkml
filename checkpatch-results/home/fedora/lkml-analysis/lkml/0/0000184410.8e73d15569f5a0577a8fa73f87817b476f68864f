WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#54: FILE: drivers/s390/block/dcssblk.c:45:
+^I.owner   ^I= THIS_MODULE,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#55: FILE: drivers/s390/block/dcssblk.c:46:
+^I.open    ^I= dcssblk_open,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#56: FILE: drivers/s390/block/dcssblk.c:47:
+^I.release ^I= dcssblk_release,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#57: FILE: drivers/s390/block/dcssblk.c:48:
+^I.direct_access ^I= dcssblk_direct_access,$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#73: FILE: drivers/s390/block/dcssblk.c:655:
+				PRINT_WARN("rejecting write to ro segment %s\n", dev_info->dev.bus_id);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#92: FILE: drivers/s390/block/dcssblk.c:686:
+dcssblk_direct_access (struct inode *inode, sector_t secnum,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: drivers/s390/block/dcssblk.c:687:
+dcssblk_direct_access (struct inode *inode, sector_t secnum,
+			unsigned long *data)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#101: FILE: drivers/s390/block/dcssblk.c:695:
+	if (secnum % (PAGE_SIZE/512))
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#104: FILE: drivers/s390/block/dcssblk.c:698:
+	if ((pgoff+1)*PAGE_SIZE-1 > dev_info->end - dev_info->start)
 	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#104: FILE: drivers/s390/block/dcssblk.c:698:
+	if ((pgoff+1)*PAGE_SIZE-1 > dev_info->end - dev_info->start)
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#104: FILE: drivers/s390/block/dcssblk.c:698:
+	if ((pgoff+1)*PAGE_SIZE-1 > dev_info->end - dev_info->start)
 	                       ^

CHECK:SPACING: No space is necessary after a cast
#106: FILE: drivers/s390/block/dcssblk.c:700:
+	*data = (unsigned long) (dev_info->start+pgoff*PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#106: FILE: drivers/s390/block/dcssblk.c:700:
+	*data = (unsigned long) (dev_info->start+pgoff*PAGE_SIZE);
 	                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#106: FILE: drivers/s390/block/dcssblk.c:700:
+	*data = (unsigned long) (dev_info->start+pgoff*PAGE_SIZE);
 	                                              ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#117: FILE: include/linux/fs.h:886:
+	int (*direct_access) (struct inode *, sector_t, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#117: FILE: include/linux/fs.h:886:
+	int (*direct_access) (struct inode *, sector_t, unsigned long *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#117: FILE: include/linux/fs.h:886:
+	int (*direct_access) (struct inode *, sector_t, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#117: FILE: include/linux/fs.h:886:
+	int (*direct_access) (struct inode *, sector_t, unsigned long *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 10 warnings, 8 checks, 74 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
