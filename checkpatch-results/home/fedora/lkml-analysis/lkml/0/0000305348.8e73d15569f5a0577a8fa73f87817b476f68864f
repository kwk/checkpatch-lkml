WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
diff -p -Nur linux-2.6.1.orig/drivers/net/wan/Kconfig linux-2.6.1/drivers/net/wan/Kconfig

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#89: FILE: drivers/net/wan/pc300_tty.c:136:
+int pc300_tiocmset(struct tty_struct *, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#89: FILE: drivers/net/wan/pc300_tty.c:136:
+int pc300_tiocmset(struct tty_struct *, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#89: FILE: drivers/net/wan/pc300_tty.c:136:
+int pc300_tiocmset(struct tty_struct *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#89: FILE: drivers/net/wan/pc300_tty.c:136:
+int pc300_tiocmset(struct tty_struct *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#89: FILE: drivers/net/wan/pc300_tty.c:136:
+int pc300_tiocmset(struct tty_struct *, struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: drivers/net/wan/pc300_tty.c:137:
+int pc300_tiocmset(struct tty_struct *, struct file *,
+			unsigned int, unsigned int);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#91: FILE: drivers/net/wan/pc300_tty.c:138:
+int pc300_tiocmget(struct tty_struct *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#91: FILE: drivers/net/wan/pc300_tty.c:138:
+int pc300_tiocmget(struct tty_struct *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#91: FILE: drivers/net/wan/pc300_tty.c:138:
+int pc300_tiocmget(struct tty_struct *, struct file *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: drivers/net/wan/pc300_tty.c:158:
+	CPC_TTY_DBG("%s-tty: Clear signal %x\n",
+		((struct net_device*)(pc300dev->hdlc))->name, signal);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#113: FILE: drivers/net/wan/pc300_tty.c:158:
+		((struct net_device*)(pc300dev->hdlc))->name, signal);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#117: FILE: drivers/net/wan/pc300_tty.c:161:
+		cpc_readb(card->hw.scabase+M_REG(CTL,ch))& signal);
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#117: FILE: drivers/net/wan/pc300_tty.c:161:
+		cpc_readb(card->hw.scabase+M_REG(CTL,ch))& signal);
 		                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#117: FILE: drivers/net/wan/pc300_tty.c:161:
+		cpc_readb(card->hw.scabase+M_REG(CTL,ch))& signal);
 		                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: drivers/net/wan/pc300_tty.c:176:
+	CPC_TTY_DBG("%s-tty: Set signal %x\n",
+		((struct net_device*)(pc300dev->hdlc))->name, signal);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#136: FILE: drivers/net/wan/pc300_tty.c:176:
+		((struct net_device*)(pc300dev->hdlc))->name, signal);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#140: FILE: drivers/net/wan/pc300_tty.c:179:
+		cpc_readb(card->hw.scabase+M_REG(CTL,ch))& ~signal);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#140: FILE: drivers/net/wan/pc300_tty.c:179:
+		cpc_readb(card->hw.scabase+M_REG(CTL,ch))& ~signal);
 		                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#140: FILE: drivers/net/wan/pc300_tty.c:179:
+		cpc_readb(card->hw.scabase+M_REG(CTL,ch))& ~signal);
 		                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/net/wan/pc300_tty.c:563:
+int pc300_tiocmset(struct tty_struct *tty, struct file *file,
+			unsigned int set, unsigned int clear)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#199: FILE: drivers/net/wan/pc300_tty.c:567:
+	CPC_TTY_DBG("%s: set:%x clear:%x\n", __FUNCTION__, set, clear);

CHECK:SPACING: No space is necessary after a cast
#244: FILE: drivers/net/wan/pc300_tty.c:594:
+	st_cpc_tty_area  *cpc_tty = (st_cpc_tty_area *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#247: FILE: drivers/net/wan/pc300_tty.c:597:
+	pc300_t *card = (pc300_t *) pc300chan->card;

CHECK:SPACING: No space is necessary after a cast
#250: FILE: drivers/net/wan/pc300_tty.c:600:
+	cpc_tty = (st_cpc_tty_area *) tty->driver_data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/net/wan/pc300_tty.c:603:
+	CPC_TTY_DBG("%s-tty: tiocmget\n",
+		((struct net_device*)(pc300dev->hdlc))->name);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#253: FILE: drivers/net/wan/pc300_tty.c:603:
+		((struct net_device*)(pc300dev->hdlc))->name);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#256: FILE: drivers/net/wan/pc300_tty.c:606:
+	status = cpc_readb(card->hw.scabase+M_REG(CTL,ch));
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#256: FILE: drivers/net/wan/pc300_tty.c:606:
+	status = cpc_readb(card->hw.scabase+M_REG(CTL,ch));
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#257: FILE: drivers/net/wan/pc300_tty.c:607:
+	CPC_TTY_UNLOCK(card,flags);
 	                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305348.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 13 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305348.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
