WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -rup -x CVS 2.6.16-rt17/arch/powerpc/kernel/entry_64.S rt-powerpc/arch/powerpc/kernel/entry_64.S

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: arch/powerpc/kernel/process.c:891:
+        print_traces(current);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: arch/powerpc/kernel/process.c:891:
+        print_traces(current);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: arch/powerpc/kernel/prom.c:518:
+int notrace __init of_scan_flat_dt(int (*it)(unsigned long node,
 				     const char *uname, int depth,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: arch/powerpc/kernel/prom_init.c:249:
+static int notrace __init call_prom_ret(const char *service, int nargs, int nret,
 				prom_arg_t *rets, ...)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: arch/powerpc/kernel/prom_init.c:360:
+static unsigned int notrace __init prom_claim(unsigned long virt, unsigned long size,
 				unsigned long align)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((noreturn))
#180: FILE: arch/powerpc/kernel/prom_init.c:394:
+static void notrace __init __attribute__((noreturn)) prom_panic(const char *reason)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: arch/powerpc/kernel/prom_init.c:464:
+static int notrace __init prom_setprop(phandle node, const char *nodename,
 			       const char *pname, void *value, size_t valuelen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: arch/powerpc/kernel/prom_init.c:808:
+static unsigned long notrace __init alloc_down(unsigned long size, unsigned long align,
 				       int highmem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: arch/powerpc/kernel/prom_init.c:1619:
+static void notrace __init *make_room(unsigned long *mem_start, unsigned long *mem_end,
 			      unsigned long needed, unsigned long align)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: arch/powerpc/kernel/prom_init.c:1670:
+static void notrace __init scan_dt_build_strings(phandle node,
 					 unsigned long *mem_start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: arch/powerpc/kernel/prom_init.c:1718:
+static void notrace __init scan_dt_build_struct(phandle node, unsigned long *mem_start,
 					unsigned long *mem_end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: arch/powerpc/kernel/prom_init.c:2027:
+unsigned long notrace __init prom_init(unsigned long r3, unsigned long r4,
 			       unsigned long pp,

ERROR:SPACING: exactly one space required after that #ifdef
#487: FILE: arch/powerpc/kernel/setup_64.c:694:
+#ifdef  CONFIG_MCOUNT

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#489: FILE: arch/powerpc/kernel/setup_64.c:696:
+extern void _mcount(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: arch/powerpc/kernel/setup_64.c:700:
+	if(mcount_enabled) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#493: FILE: arch/powerpc/kernel/setup_64.c:700:
+	if(mcount_enabled) {
+		__mcount();
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: arch/powerpc/mm/hash_utils_64.c:139:
+int notrace htab_bolt_mapping(unsigned long vstart, unsigned long vend,
 		      unsigned long pstart, unsigned long mode, int psize)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#625: FILE: include/asm-powerpc/thread_info.h:34:
+#define STACK_WARN             (THREAD_SIZE/8)
                                            ^

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#666: FILE: lib/string.c:122:
+size_t notrace strlcpy(char *dest, const char *src, size_t size)

WARNING:REPEATED_WORD: Possible repeated word: 'notrace'
#684: FILE: lib/string.c:239:
+int notrace notrace strncmp(const char *cs, const char *ct, size_t count)

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#714: FILE: lib/vsprintf.c:146:
+static char * notrace number(char * buf, char * end, unsigned long long num, int base, int size, int precision, int type)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#714: FILE: lib/vsprintf.c:146:
+static char * notrace number(char * buf, char * end, unsigned long long num, int base, int size, int precision, int type)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#714: FILE: lib/vsprintf.c:146:
+static char * notrace number(char * buf, char * end, unsigned long long num, int base, int size, int precision, int type)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000048856.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 11 checks, 594 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000048856.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
