WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#138: 
http://groups.google.com/groups?hl=en&lr=lang_en&ie=UTF-8&safe=off&selm=20020416182550.J29747%40dualathlon.random&rnum=3

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: buffer.c:3138:
+       struct task_struct *tsk = current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: buffer.c:3139:
+       int interval = 1*HZ;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#154: FILE: buffer.c:3139:
+       int interval = 1*HZ;
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: buffer.c:3141:
+       struct buffer_head *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: buffer.c:3143:
+       int nr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: buffer.c:3146:
+        *      We have a bare-bones task_struct, and really should fill$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: buffer.c:3147:
+        *      in a few more things so "top" and /proc/2/{exe,root,cwd}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: buffer.c:3148:
+        *      display semi-sane things. Not real crucial though...$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: buffer.c:3149:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: buffer.c:3151:
+       tsk->session = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: buffer.c:3152:
+       tsk->pgrp = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: buffer.c:3153:
+       strcpy(tsk->comm, "usbupdate");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: buffer.c:3156:
+       spin_lock_irq(&tsk->sigmask_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: buffer.c:3157:
+       flush_signals(tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: buffer.c:3158:
+       sigfillset(&tsk->blocked);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: buffer.c:3159:
+       recalc_sigpending(tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: buffer.c:3160:
+       spin_unlock_irq(&tsk->sigmask_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: buffer.c:3162:
+       complete((struct completion *)startup);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: buffer.c:3164:
+       for (;;) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#179: FILE: buffer.c:3164:
+       for (;;) {
+       tsk->state = TASK_INTERRUPTIBLE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: buffer.c:3165:
+       tsk->state = TASK_INTERRUPTIBLE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: buffer.c:3166:
+       schedule_timeout(interval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: buffer.c:3169:
+       spin_lock(&lru_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: buffer.c:3170:
+       next = lru_list[BUF_DIRTY];      /* Addr of first element    */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: buffer.c:3171:
+       nr = nr_buffers_type[BUF_DIRTY]; /* No of BUF_DIRTY elements */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: buffer.c:3172:
+       struct buffer_head * bh = next;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: buffer.c:3172:
+       struct buffer_head * bh = next;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: buffer.c:3173:
+       unsigned int counthd, countdvd, countother, countdefault;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: buffer.c:3174:
+       unsigned int counthd, countdvd, countother, countdefault;
+       counthd = 0; countdvd = 0; countother = 0; countdefault = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: buffer.c:3174:
+       counthd = 0; countdvd = 0; countother = 0; countdefault = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: buffer.c:3175:
+       while (next && --nr >= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#190: FILE: buffer.c:3175:
+       while (next && --nr >= 0) {
+               next = bh->b_next_free;

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: buffer.c:3176:
+               next = bh->b_next_free;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: buffer.c:3176:
+               next = bh->b_next_free;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: buffer.c:3177:
+               switch (bh->b_dev) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: buffer.c:3177:
+               switch (bh->b_dev) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: buffer.c:3178:
+               case 0x0B01: countdvd++;break; /* /dev/scd1 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: buffer.c:3178:
+               case 0x0B01: countdvd++;break; /* /dev/scd1 */$

ERROR:SPACING: space required after that ';' (ctx:OxV)
#193: FILE: buffer.c:3178:
+               case 0x0B01: countdvd++;break; /* /dev/scd1 */
                                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#193: FILE: buffer.c:3178:
+               case 0x0B01: countdvd++;break; /* /dev/scd1 */

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: buffer.c:3179:
+               case 0x0341:  counthd++;break; /* /dev/hdb1 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: buffer.c:3179:
+               case 0x0341:  counthd++;break; /* /dev/hdb1 */$

ERROR:SPACING: space required after that ';' (ctx:OxV)
#194: FILE: buffer.c:3179:
+               case 0x0341:  counthd++;break; /* /dev/hdb1 */
                                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#194: FILE: buffer.c:3179:
+               case 0x0341:  counthd++;break; /* /dev/hdb1 */

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: buffer.c:3180:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: buffer.c:3180:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: buffer.c:3181:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: buffer.c:3182:
+       printk(KERN_DEBUG "hd count = %u, dvd count = %u\n", counthd, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: buffer.c:3182:
+       printk(KERN_DEBUG "hd count = %u, dvd count = %u\n", counthd, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#197: FILE: buffer.c:3182:
+       printk(KERN_DEBUG "hd count = %u, dvd count = %u\n", counthd, 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#198: FILE: buffer.c:3182:
countdvd)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: buffer.c:3183:
+       printk(KERN_DEBUG "hd count = %u, dvd count = %u\n", counthd, 
+       spin_unlock(&lru_list_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: buffer.c:3183:
+       spin_unlock(&lru_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: buffer.c:3185:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: buffer.c:3196:
+       kernel_thread(usbupdate, &startup, CLONE_FS | CLONE_FILES | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: buffer.c:3196:
+       kernel_thread(usbupdate, &startup, CLONE_FS | CLONE_FILES | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: buffer.c:3197:
+       wait_for_completion(&startup);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251849.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 39 warnings, 2 checks, 73 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251849.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
