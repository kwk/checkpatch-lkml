CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#49: FILE: arch/ppc64/kernel/signal.c:35:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#106: FILE: arch/ppc64/kernel/signal.c:270:
+	 * but don't copy softe */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#166: FILE: arch/ppc64/kernel/signal32.c:157:
+		new_ka.sa.sa_handler = (__sighandler_t)(long) handler;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#167: FILE: arch/ppc64/kernel/signal32.c:158:
+		new_ka.sa.sa_restorer = (void (*)(void))(long) restorer;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#296: FILE: arch/ppc64/kernel/signal32.c:265:
+	sr = (struct sigregs32*)(u64)sigctx.regs;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: arch/ppc64/kernel/signal32.c:270:
+	if (copy_from_user(saved_regs, &sr->gp_regs,sizeof(sr->gp_regs)))
 	                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: arch/ppc64/kernel/signal32.c:281:
+^I * handler.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: arch/ppc64/kernel/signal32.c:290:
+^I *  restore the non gpr registers $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: arch/ppc64/kernel/signal32.c:293:
+^Iregs->orig_gpr3 = (u64)(saved_regs[PT_ORIG_R3]) & 0xFFFFFFFF; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: arch/ppc64/kernel/signal32.c:294:
+^Iregs->ctr = (u64)(saved_regs[PT_CTR]) & 0xFFFFFFFF; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: arch/ppc64/kernel/signal32.c:295:
+^Iregs->link = (u64)(saved_regs[PT_LNK]) & 0xFFFFFFFF; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: arch/ppc64/kernel/signal32.c:296:
+^Iregs->xer = (u64)(saved_regs[PT_XER]) & 0xFFFFFFFF; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#346: FILE: arch/ppc64/kernel/signal32.c:302:
+	/* force the process to reload the FP registers from
+	   current->thread when it next does FP instructions */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#346: FILE: arch/ppc64/kernel/signal32.c:302:
+	   current->thread when it next does FP instructions */

WARNING:TYPO_SPELLING: 'fpr' may be misspelled - perhaps 'for'?
#352: FILE: arch/ppc64/kernel/signal32.c:308:
+	if (copy_from_user(current->thread.fpr, &sr->fp_regs,
 	                                   ^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#410: FILE: arch/ppc64/kernel/signal32.c:383:
+	if (put_user(regs->gpr[1], (u32*)(u64)newsp))

CHECK:SPACING: No space is necessary after a cast
#460: FILE: arch/ppc64/kernel/signal32.c:460:
+	signalregs = (struct sigregs32 *) (u64)sigctx.regs;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#539: FILE: arch/ppc64/kernel/signal32.c:463:
+^I^I^I   sizeof(signalregs->gp_regs))) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#561: FILE: arch/ppc64/kernel/signal32.c:484:
+^Iregs->orig_gpr3 = (u64)(saved_regs[PT_ORIG_R3]) & 0xFFFFFFFF; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: arch/ppc64/kernel/signal32.c:485:
+^Iregs->ctr = (u64)(saved_regs[PT_CTR]) & 0xFFFFFFFF; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: arch/ppc64/kernel/signal32.c:486:
+^Iregs->link = (u64)(saved_regs[PT_LNK]) & 0xFFFFFFFF; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: arch/ppc64/kernel/signal32.c:487:
+^Iregs->xer = (u64)(saved_regs[PT_XER]) & 0xFFFFFFFF; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#570: FILE: arch/ppc64/kernel/signal32.c:493:
+	/* force the process to reload the FP registers from
+	   current->thread when it next does FP instructions */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#570: FILE: arch/ppc64/kernel/signal32.c:493:
+	   current->thread when it next does FP instructions */

WARNING:TYPO_SPELLING: 'fpr' may be misspelled - perhaps 'for'?
#576: FILE: arch/ppc64/kernel/signal32.c:499:
+	if (copy_from_user(current->thread.fpr, &signalregs->fp_regs,
 	                                   ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: arch/ppc64/kernel/signal32.c:500:
+^I^I^I   sizeof(signalregs->fp_regs))) $

CHECK:SPACING: No space is necessary after a cast
#612: FILE: arch/ppc64/kernel/signal32.c:542:
+		new_ka.sa.sa_handler = (__sighandler_t)(long) handler;

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: arch/ppc64/kernel/signal32.c:568:
+  ^Ireturn ret;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#623: FILE: arch/ppc64/kernel/signal32.c:568:
+  ^Ireturn ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: arch/ppc64/kernel/signal32.c:568:
+  ^Ireturn ret;$

CHECK:SPACING: No space is necessary after a cast
#690: FILE: arch/ppc64/kernel/signal32.c:914:
+	regs->gpr[4] = (unsigned long) &rt_sf->info;

CHECK:SPACING: No space is necessary after a cast
#691: FILE: arch/ppc64/kernel/signal32.c:915:
+	regs->gpr[5] = (unsigned long) &rt_sf->uc;

CHECK:SPACING: No space is necessary after a cast
#694: FILE: arch/ppc64/kernel/signal32.c:917:
+	regs->nip    = (unsigned long) ka->sa.sa_handler;

CHECK:SPACING: No space is necessary after a cast
#695: FILE: arch/ppc64/kernel/signal32.c:918:
+	regs->link   = (unsigned long) frame->tramp;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#706: FILE: arch/ppc64/kernel/signal32.c:927:
+	printk("badframe in setup_rt_frame32, regs=%p frame=%p newsp=%lx\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: arch/ppc64/kernel/signal32.c:1053:
+^I/*  Put new stack info in local 64 bit stack struct */ $

CHECK:SPACING: No space is necessary after a cast
#745: FILE: arch/ppc64/kernel/signal32.c:1054:
+	ustack = (stack_32_t *)(long) newstack;

CHECK:SPACING: No space is necessary after a cast
#751: FILE: arch/ppc64/kernel/signal32.c:1059:
+	uss.ss_sp = (void *)(long) sssp;

CHECK:SPACING: No space is necessary after a cast
#765: FILE: arch/ppc64/kernel/signal32.c:1069:
+	ustack = (stack_32_t *)(long) oldstack;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#817: FILE: arch/ppc64/kernel/signal32.c:1222:
+				 (struct sigregs32*)(u64)frame, newsp);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#821: FILE: arch/ppc64/kernel/signal32.c:1225:
+			      (struct sigregs32*)(u64)frame, newsp);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 10 warnings, 12 checks, 749 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
