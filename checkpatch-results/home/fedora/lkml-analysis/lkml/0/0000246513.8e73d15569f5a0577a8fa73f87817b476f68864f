WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
- [PATCH]SELinux performance improvement by RCU (Re: RCU issue with SELinux)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#103: FILE: security/selinux/avc.c:61:
+	spinlock_t		slots_lock[AVC_CACHE_SLOTS];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#143: FILE: security/selinux/avc.c:198:
+	for (i =0; i < AVC_CACHE_SLOTS; i++) {
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: security/selinux/avc.c:204:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#192: FILE: security/selinux/avc.c:242:
+static void avc_node_free(struct rcu_head *rhead) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#194: FILE: security/selinux/avc.c:244:
+	struct avc_node *node;
+	node = container_of(rhead, struct avc_node, rhead);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#213: FILE: security/selinux/avc.c:253:
+	for (try = 0, ecx = 0; try < AVC_CACHE_SLOTS; try++ ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct avc_node)...)
#280: FILE: security/selinux/avc.c:283:
+	new = kmalloc(sizeof(struct avc_node), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ret"
#321: FILE: security/selinux/avc.c:315:
+	if (ret == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#392: FILE: security/selinux/avc.c:372:
+			printk(KERN_WARNING "avc:  seqno %d < latest_notif %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: security/selinux/avc.c:712:
+ * $

ERROR:SPACING: space required before the open brace '{'
#520: FILE: security/selinux/avc.c:728:
+	list_for_each_entry(pos, &avc_cache.slots[hvalue], list){

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#521: FILE: security/selinux/avc.c:729:
+		if ( ssid==pos->ae.ssid &&
 		         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#521: FILE: security/selinux/avc.c:729:
+		if ( ssid==pos->ae.ssid &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: security/selinux/avc.c:730:
+		if ( ssid==pos->ae.ssid &&
+		     tsid==pos->ae.tsid &&

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#522: FILE: security/selinux/avc.c:730:
+		     tsid==pos->ae.tsid &&
 		         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#523: FILE: security/selinux/avc.c:731:
+		     tclass==pos->ae.tclass ){
 		           ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#523: FILE: security/selinux/avc.c:731:
+		     tclass==pos->ae.tclass ){

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*node)...) over kmalloc(sizeof(struct avc_node)...)
#534: FILE: security/selinux/avc.c:742:
+	node = kmalloc(sizeof(struct avc_node), GFP_ATOMIC);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#551: FILE: security/selinux/avc.c:771:
+	list_replace_rcu(&org->list,&node->list);
 	                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#551: FILE: security/selinux/avc.c:771:
+	list_replace_rcu(&org->list,&node->list);
 	                            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#578: FILE: security/selinux/avc.c:792:
+				    tclass == node->ae.tclass ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: security/selinux/avc.c:794:
+^I^I^I^I^I                ,node->ae.tsid, node->ae.tclass);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required after that ',' (ctx:ExV)
#580: FILE: security/selinux/avc.c:794:
+					                ,node->ae.tsid, node->ae.tclass);
 					                ^

ERROR:SPACING: space required before the open brace '{'
#651: FILE: security/selinux/avc.c:923:
+		list_for_each_entry(node, &avc_cache.slots[i], list){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#745: FILE: security/selinux/avc.c:1023:
+		rc = security_compute_av(ssid,tsid,tclass,requested,&entry.avd);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#745: FILE: security/selinux/avc.c:1023:
+		rc = security_compute_av(ssid,tsid,tclass,requested,&entry.avd);
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#745: FILE: security/selinux/avc.c:1023:
+		rc = security_compute_av(ssid,tsid,tclass,requested,&entry.avd);
 		                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#745: FILE: security/selinux/avc.c:1023:
+		rc = security_compute_av(ssid,tsid,tclass,requested,&entry.avd);
 		                                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#745: FILE: security/selinux/avc.c:1023:
+		rc = security_compute_av(ssid,tsid,tclass,requested,&entry.avd);
 		                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#749: FILE: security/selinux/avc.c:1027:
+		node = avc_insert(ssid,tsid,tclass,&entry);
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#749: FILE: security/selinux/avc.c:1027:
+		node = avc_insert(ssid,tsid,tclass,&entry);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#749: FILE: security/selinux/avc.c:1027:
+		node = avc_insert(ssid,tsid,tclass,&entry);
 		                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#749: FILE: security/selinux/avc.c:1027:
+		node = avc_insert(ssid,tsid,tclass,&entry);
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#771: FILE: security/selinux/avc.c:1042:
+				avc_update_node(AVC_CALLBACK_GRANT,requested
 				                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#772: FILE: security/selinux/avc.c:1043:
+^I^I^I^I                ,ssid,tsid,tclass);$

ERROR:SPACING: space required after that ',' (ctx:ExV)
#772: FILE: security/selinux/avc.c:1043:
+				                ,ssid,tsid,tclass);
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#772: FILE: security/selinux/avc.c:1043:
+				                ,ssid,tsid,tclass);
 				                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#772: FILE: security/selinux/avc.c:1043:
+				                ,ssid,tsid,tclass);
 				                          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246513.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 3 warnings, 5 checks, 742 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246513.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
