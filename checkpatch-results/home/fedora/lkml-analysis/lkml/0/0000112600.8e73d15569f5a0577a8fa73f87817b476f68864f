WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Answering the suggestion from Pekka, here comes the separated version for 2.6.x.y

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#51: FILE: fs/minix/bitmap.c:29:
+		for (j=0; j<bh->b_size; j++)
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#51: FILE: fs/minix/bitmap.c:29:
+		for (j=0; j<bh->b_size; j++)
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#59: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#59: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#59: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#59: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#59: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#59: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: fs/minix/bitmap.c:148:
+^Iblock = 2 + sbi->s_imap_blocks + sbi->s_zmap_blocks + $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#98: FILE: fs/minix/dir.c:16:
+typedef struct minix3_dir_entry minix3_dirent;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#116: FILE: fs/minix/dir.c:118:
+					unsigned l = strnlen(de->name,sbi->s_namelen);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: fs/minix/dir.c:118:
+					unsigned l = strnlen(de->name,sbi->s_namelen);
 					                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: fs/minix/dir.c:119:
+					unsigned l = strnlen(de->name,sbi->s_namelen);
+					offset = p - kaddr;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: fs/minix/dir.c:121:
+					over = filldir(dirent, de->name, l,
+					(n<<PAGE_CACHE_SHIFT) | offset,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#119: FILE: fs/minix/dir.c:121:
+					(n<<PAGE_CACHE_SHIFT) | offset,
 					  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#122: FILE: fs/minix/dir.c:124:
+					unsigned l = strnlen(de3->name,sbi->s_namelen);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: fs/minix/dir.c:124:
+					unsigned l = strnlen(de3->name,sbi->s_namelen);
 					                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: fs/minix/dir.c:125:
+					unsigned l = strnlen(de3->name,sbi->s_namelen);
+					offset = p - kaddr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: fs/minix/dir.c:127:
+					over = filldir(dirent, de3->name, l,
+					(n<<PAGE_CACHE_SHIFT) | offset,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#125: FILE: fs/minix/dir.c:127:
+					(n<<PAGE_CACHE_SHIFT) | offset,
 					  ^

CHECK:SPACING: No space is necessary after a cast
#144: FILE: fs/minix/dir.c:183:
+		de3 = (struct minix3_dir_entry *) kaddr;

CHECK:SPACING: No space is necessary after a cast
#151: FILE: fs/minix/dir.c:185:
+		for ( ; (char *) de <= kaddr ;

WARNING:SPACING: space prohibited before semicolon
#151: FILE: fs/minix/dir.c:185:
+		for ( ; (char *) de <= kaddr ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: fs/minix/dir.c:186:
+					de = minix_next_entry(de,sbi),
 					                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: fs/minix/dir.c:187:
+					de3 = minix_next_entry(de3,sbi)) {
 					                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: fs/minix/dir.c:191:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: fs/minix/dir.c:191:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: fs/minix/dir.c:191:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: fs/minix/dir.c:196:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: fs/minix/dir.c:196:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: fs/minix/dir.c:196:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: fs/minix/dir.c:217:
+	struct minix3_dir_entry * de3;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: fs/minix/dir.c:252:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: fs/minix/dir.c:252:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: fs/minix/dir.c:252:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: fs/minix/dir.c:256:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: fs/minix/dir.c:256:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: fs/minix/dir.c:256:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                           ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#216: FILE: fs/minix/dir.c:274:
+		if (!(sbi->s_version == MINIX_V3)) {
+		memcpy (de->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: fs/minix/dir.c:275:
+		memcpy (de->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: fs/minix/dir.c:276:
+		memset (de->name + namelen, 0, sbi->s_dirsize - namelen - 2);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#220: FILE: fs/minix/dir.c:278:
+		} else {
+		memcpy (de3->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#221: FILE: fs/minix/dir.c:279:
+		memcpy (de3->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: fs/minix/dir.c:280:
+		memset (de3->name + namelen, 0, sbi->s_dirsize - namelen - 4);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: fs/minix/dir.c:324:
+	struct minix3_dir_entry * de3;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#243: FILE: fs/minix/dir.c:341:
+	de->inode = de3->inode = inode->i_ino;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#244: FILE: fs/minix/dir.c:342:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,".") : strcpy(de->name,".");
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#244: FILE: fs/minix/dir.c:342:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,".") : strcpy(de->name,".");
 	                                                                      ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#249: FILE: fs/minix/dir.c:345:
+	de->inode = de3->inode = dir->i_ino;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#250: FILE: fs/minix/dir.c:346:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,"..") : strcpy(de->name,"..");
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#250: FILE: fs/minix/dir.c:346:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,"..") : strcpy(de->name,"..");
 	                                                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#258: FILE: fs/minix/dir.c:367:
+		minix3_dirent * de3 = NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#280: FILE: fs/minix/dir.c:385:
+					if (!de->name[1]) {
[...]
+					} else if (de->name[1] != '.')
[...]
+					else if (de->name[2])
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#281: FILE: fs/minix/dir.c:386:
+						if (de->inode != inode->i_ino)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 48)
#281: FILE: fs/minix/dir.c:386:
+						if (de->inode != inode->i_ino)
+						goto not_empty;

CHECK:BRACES: braces {} should be used on all arms of this statement
#294: FILE: fs/minix/dir.c:395:
+					if (!de3->name[1]) {
[...]
+					} else if (de3->name[1] != '.')
[...]
+					else if (de3->name[2])
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#295: FILE: fs/minix/dir.c:396:
+						if (de3->inode != inode->i_ino)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 48)
#295: FILE: fs/minix/dir.c:396:
+						if (de3->inode != inode->i_ino)
+						goto not_empty;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#349: FILE: fs/minix/inode.c:132:
+		if (!(sbi->s_mount_state & MINIX_VALID_FS) && (sbi->s_version != MINIX_V3))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#350: FILE: fs/minix/inode.c:133:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#350: FILE: fs/minix/inode.c:133:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: fs/minix/inode.c:134:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "
+				"running fsck is recommended.\n", sbi->s_version);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#353: FILE: fs/minix/inode.c:136:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: fs/minix/inode.c:136:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#354: FILE: fs/minix/inode.c:137:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "
+				"running fsck is recommended.\n", sbi->s_version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: fs/minix/inode.c:138:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: fs/minix/inode.c:138:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: fs/minix/inode.c:138:
+ ^I}$

ERROR:SPACING: space prohibited after that open parenthesis '('
#363: FILE: fs/minix/inode.c:204:
+	} else if ( *(__u16 *)(bh->b_data + 24) == MINIX3_SUPER_MAGIC) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#364: FILE: fs/minix/inode.c:205:
+	} else if ( *(__u16 *)(bh->b_data + 24) == MINIX3_SUPER_MAGIC) {
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#376: FILE: fs/minix/inode.c:217:
+			if ( *(__u16 *)(bh->b_data + 28) != 1024) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#377: FILE: fs/minix/inode.c:218:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))
+ 				goto out_bad_hblock;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#377: FILE: fs/minix/inode.c:218:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))
 				                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#377: FILE: fs/minix/inode.c:218:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: fs/minix/inode.c:219:
+ ^I^I^I^Igoto out_bad_hblock;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#378: FILE: fs/minix/inode.c:219:
+ ^I^I^I^Igoto out_bad_hblock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: fs/minix/inode.c:219:
+ ^I^I^I^Igoto out_bad_hblock;$

ERROR:SPACING: space required before the open parenthesis '('
#388: FILE: fs/minix/inode.c:264:
+		if(sbi->s_version != MINIX_V3) /* s_state is now out from V3 sb */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#398: FILE: fs/minix/inode.c:268:
+	if (!(sbi->s_mount_state & MINIX_VALID_FS) && (sbi->s_version != MINIX_V3))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#399: FILE: fs/minix/inode.c:269:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: fs/minix/inode.c:269:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "

WARNING:SPLIT_STRING: quoted string split across lines
#400: FILE: fs/minix/inode.c:270:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "
+			"running fsck is recommended.\n", sbi->s_version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: fs/minix/inode.c:271:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#401: FILE: fs/minix/inode.c:271:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: fs/minix/inode.c:271:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#402: FILE: fs/minix/inode.c:272:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: fs/minix/inode.c:272:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#403: FILE: fs/minix/inode.c:273:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "
+			"running fsck is recommended.\n", sbi->s_version);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#413: FILE: fs/minix/inode.c:302:
+		printk("VFS: Can't find a Minix filesystem V1 | V2 | V3 on device "

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: fs/minix/inode.c:303:
+ ^I^I       "%s.\n", s->s_id);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#414: FILE: fs/minix/inode.c:303:
+ ^I^I       "%s.\n", s->s_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: fs/minix/inode.c:303:
+ ^I^I       "%s.\n", s->s_id);$

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: fs/minix/inode.c:303:
+		printk("VFS: Can't find a Minix filesystem V1 | V2 | V3 on device "
+ 		       "%s.\n", s->s_id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#422: FILE: fs/minix/inode.c:561:
+	struct inode * dir = dentry->d_parent->d_inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#423: FILE: fs/minix/inode.c:562:
+	struct super_block * sb = dir->i_sb;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#443: FILE: fs/minix/itree_common.c:26:
+	return (block_t *)((char*)bh->b_data + bh->b_size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#460: FILE: fs/minix/itree_common.c:295:
+	struct super_block * sb = inode->i_sb;

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#469: FILE: fs/minix/itree_common.c:305:
+	iblock = (inode->i_size + sb->s_blocksize -1) >> 10;
 	                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: include/linux/minix_fs.h:26:
+#define MINIX3_SUPER_MAGIC^I0x4d5a^I^I/* minix V3 fs */ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#497: FILE: include/linux/minix_fs.h:31:
+#define MINIX2_INODES_PER_BLOCK(b) ((b)/(sizeof (struct minix2_inode)))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#497: FILE: include/linux/minix_fs.h:31:
+#define MINIX2_INODES_PER_BLOCK(b) ((b)/(sizeof (struct minix2_inode)))
                                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112600.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 40 errors, 41 warnings, 21 checks, 422 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112600.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
