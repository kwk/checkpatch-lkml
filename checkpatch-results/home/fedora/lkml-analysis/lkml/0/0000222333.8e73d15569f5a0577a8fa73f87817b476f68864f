WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: drivers/char/fork_historic.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/char/fork_historic.c:8:
+ * Currently, only one application can use it. If needed it could be $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: drivers/char/fork_historic.c:9:
+ * extended to several applications. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: drivers/char/fork_historic.c:14:
+ * an application registers itself, it gives to the driver a RT signal $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: drivers/char/fork_historic.c:15:
+ * that will be used to pass the information. The application communicates to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/char/fork_historic.c:16:
+ * this driver by using ioctl command on the /dev/fh interface. $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: drivers/char/fork_historic.c:19:
+ * ^IThis program is free software; you can redistribute it and/or$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: drivers/char/fork_historic.c:20:
+ * ^Imodify it under the terms of the GNU General Public License as$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: drivers/char/fork_historic.c:21:
+ * ^Ipublished by the Free Software Foundation, version 2.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: drivers/char/fork_historic.c:24:
+ * ^IWITHOUT ANY WARRANTY; without even the implied warranty of$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: drivers/char/fork_historic.c:25:
+ * ^IMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#119: FILE: drivers/char/fork_historic.c:38:
+#include <asm/uaccess.h>	/* used to copy from user */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#130: FILE: drivers/char/fork_historic.c:49:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#138: FILE: drivers/char/fork_historic.c:57:
+static struct file_operations fh_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != FH_REGISTER'
#155: FILE: drivers/char/fork_historic.c:74:
+	if ((cmd != FH_REGISTER) && (cmd != FH_UNREGISTER))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != FH_UNREGISTER'
#155: FILE: drivers/char/fork_historic.c:74:
+	if ((cmd != FH_REGISTER) && (cmd != FH_UNREGISTER))

CHECK:SPACING: No space is necessary after a cast
#159: FILE: drivers/char/fork_historic.c:78:
+	if (copy_from_user(&iarg, (void __user *) arg,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#170: FILE: drivers/char/fork_historic.c:89:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: drivers/char/fork_historic.c:102:
+^I^I * The POSIX standard, states that if an inappropriate ioctl $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: drivers/char/fork_historic.c:118:
+ * time signals, additional signals of that same type that arrive in the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/char/fork_historic.c:120:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: drivers/char/fork_historic.c:127:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/char/fork_historic.c:128:
+^I * We need to be sure that fh_pid is not modified when sending $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/char/fork_historic.c:129:
+^I * fork information. As we check if the process still exists and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/char/fork_historic.c:141:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: drivers/char/fork_historic.c:146:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: drivers/char/fork_historic.c:148:
+^I^I^I *  is needed to keep jobs coherent. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: drivers/char/fork_historic.c:154:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: drivers/char/fork_historic.c:155:
+^I^I^I * process #fh_pid doesn't exist so we don't need to $

WARNING:TYPO_SPELLING: 'aslo' may be misspelled - perhaps 'also'?
#252: FILE: drivers/char/fork_historic.c:171:
+ * Register the character device. It aslo register an LSM hook
                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#259: FILE: drivers/char/fork_historic.c:178:
+		printk(KERN_ERR "fh: failed to register fh device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#264: FILE: drivers/char/fork_historic.c:183:
+		printk(KERN_ERR "fh: failed to set the fork hook \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#264: FILE: drivers/char/fork_historic.c:183:
+		printk(KERN_ERR "fh: failed to set the fork hook \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#268: FILE: drivers/char/fork_historic.c:187:
+	printk(KERN_INFO "fh: fork historic started\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#280: FILE: drivers/char/fork_historic.c:199:
+		printk(KERN_ERR "fh: Unable to register with kernel\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#284: FILE: drivers/char/fork_historic.c:203:
+	printk(KERN_INFO "fh: fork historic ended\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#300: FILE: drivers/char/Kconfig:7:
+config FORK_HISTORIC
+	tristate "Fork historic"
+	depends on SECURITY
+	default n
+	---help---
+	  This driver allows to keep the historic about the creation of
+	  processes and it gives this information to a user space 
+	  application. Currently, only one application can use it. If 
+	  needed it could be extended to several applications.
+
+ 	  It registers itself to the kernel via a LSM hook in order to 
+	  receive a signal when a fork occurs in the kernel. When a fork 
+	  occures, it follows up the information to an application if one 
+	  is registered. When an application registers itself, it gives to 
+	  the driver a RT signal that will be used to pass the information. 
+
+	  The application communicates to this driver by using ioctl command 
+	  on the "/dev/fh" interface. So, to be able to use it you need to
+	  create the "/dev/fh" character device with the correct major number
+	  that can be found by looking into the "/proc/devices".
+
+	  If unsure, say N.
+	

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/char/Kconfig:13:
+^I  processes and it gives this information to a user space $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: drivers/char/Kconfig:14:
+^I  application. Currently, only one application can use it. If $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: drivers/char/Kconfig:17:
+ ^I  It registers itself to the kernel via a LSM hook in order to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: drivers/char/Kconfig:18:
+^I  receive a signal when a fork occurs in the kernel. When a fork $

WARNING:TYPO_SPELLING: 'occures' may be misspelled - perhaps 'occurs'?
#312: FILE: drivers/char/Kconfig:19:
+	  occures, it follows up the information to an application if one 
 	  ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: drivers/char/Kconfig:19:
+^I  occures, it follows up the information to an application if one $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: drivers/char/Kconfig:20:
+^I  is registered. When an application registers itself, it gives to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: drivers/char/Kconfig:21:
+^I  the driver a RT signal that will be used to pass the information. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/char/Kconfig:23:
+^I  The application communicates to this driver by using ioctl command $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: drivers/char/Kconfig:29:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#342: FILE: include/linux/fork_historic.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: include/linux/fork_historic.h:6:
+ * ^IThis program is free software; you can redistribute it and/or$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: include/linux/fork_historic.h:7:
+ * ^Imodify it under the terms of the GNU General Public License as$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#349: FILE: include/linux/fork_historic.h:8:
+ * ^Ipublished by the Free Software Foundation, version 2.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#352: FILE: include/linux/fork_historic.h:11:
+ * ^IWITHOUT ANY WARRANTY; without even the implied warranty of$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#353: FILE: include/linux/fork_historic.h:12:
+ * ^IMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#372: FILE: include/linux/fork_historic.h:31:
+#define FH_REGISTER	_IO(FH_MAGIC,0)
                    	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#373: FILE: include/linux/fork_historic.h:32:
+#define FH_UNREGISTER	_IO(FH_MAGIC,1)
                      	            ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#375: FILE: include/linux/fork_historic.h:34:
+#define FH_MAXNR ^I1$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 24 warnings, 5 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
