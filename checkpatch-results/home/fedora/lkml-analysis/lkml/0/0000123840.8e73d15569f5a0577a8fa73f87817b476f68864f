CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#98: FILE: mm/slob.c:77:
+	spinlock_t lock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#99: FILE: mm/slob.c:78:
+	void (*ctor)(void *, struct kmem_cache *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kmem_cache *' should also have an identifier name
#99: FILE: mm/slob.c:78:
+	void (*ctor)(void *, struct kmem_cache *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#99: FILE: mm/slob.c:78:
+	void (*ctor)(void *, struct kmem_cache *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#100: FILE: mm/slob.c:79:
+	void (*dtor)(void *, struct kmem_cache *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kmem_cache *' should also have an identifier name
#100: FILE: mm/slob.c:79:
+	void (*dtor)(void *, struct kmem_cache *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#100: FILE: mm/slob.c:79:
+	void (*dtor)(void *, struct kmem_cache *, unsigned long);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#126: FILE: mm/slob.c:101:
+		BUG_ON(!cur->next);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: mm/slob.c:104:
+	BUG_ON(!x);

ERROR:SPACING: space required before the open parenthesis '('
#132: FILE: mm/slob.c:107:
+#define test_cache(x) do {} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: mm/slob.c:158:
+	struct page *page;
+	page = get_slob_page(b);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: mm/slob.c:165:
+	struct page *page;
+	page = get_slob_page(b);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: mm/slob.c:180:
+	BUG_ON(!units);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#214: FILE: mm/slob.c:213:
+				BUG_ON(cur + cur->units > prev->next);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#260: FILE: mm/slob.c:257:
+		BUG_ON(cur->next == &cachep->arena);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: mm/slob.c:264:
+		BUG_ON(b == &cachep->arena);

WARNING:LINE_SPACING: Missing a blank line after declarations
#298: FILE: mm/slob.c:295:
+		int order;
+		for (i=0, order=32; i < NR_SLOB_CACHES; i++, order <<= 1)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#298: FILE: mm/slob.c:295:
+		for (i=0, order=32; i < NR_SLOB_CACHES; i++, order <<= 1)
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#298: FILE: mm/slob.c:295:
+		for (i=0, order=32; i < NR_SLOB_CACHES; i++, order <<= 1)
 		               ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: mm/slob.c:298:
+		BUG_ON(i == NR_SLOB_CACHES);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#397: FILE: mm/slob.c:390:
+	p = slob_alloc(c, 0, PAGE_SIZE-1);
 	                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#422: FILE: mm/slob.c:418:
+	BUG_ON(atomic_read(&c->items));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#427: FILE: mm/slob.c:423:
+	printk("FIX ME: need to free memory\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#488: FILE: mm/slob.c:486:
+		int size = 32;
+		done = 1;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#494: FILE: mm/slob.c:492:
+		p = slob_alloc(&cache_cache, 0, PAGE_SIZE-1);
 		                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: mm/slob.c:497:
+		bb_cache = kmem_cache_create("bb_cache",sizeof(bigblock_t), 0,
 		                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#501: FILE: mm/slob.c:499:
+		for (i=0; i < NR_SLOB_CACHES; i++, size <<= 1)
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#515: FILE: mm/slob.c:513:
+	for (p=s->next; p != s && x < 10000; p = p->next, x++)
 	      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#516: FILE: mm/slob.c:514:
+		printk(".");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#526: FILE: mm/slob.c:524:
+		printk("%s items:%d",

CHECK:SPACING: spaces required around that '?:' (ctx:VxV)
#527: FILE: mm/slob.c:525:
+		       c->name?:"<none>",
 		              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#530: FILE: mm/slob.c:528:
+		printk("\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000123840.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 22 warnings, 4 checks, 463 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000123840.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
