WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
> - The CPU scheduler changes in -mm (sched-domains) have been hanging about

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#include <pthread.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#define NR_THREADS 100

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: arch/ppc64/kernel/smp.c:917:
+		cpumask_t tmp2 = cpumask_of_cpu(i);
+		cpus_or(cpu_domain->span, tmp1, tmp2);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: arch/ppc64/kernel/smp.c:930:
+		int j;
+		first_cpu = last_cpu = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#139: FILE: arch/ppc64/kernel/smp.c:930:
+		first_cpu = last_cpu = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: arch/ppc64/kernel/smp.c:954:
+		cpumask_t node_cpumask = node_to_cpumask(i);
+		cpus_and(nodemask, node_cpumask, cpu_online_map);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#165: FILE: arch/ppc64/kernel/smp.c:956:
+		first_cpu = last_cpu = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#187: FILE: arch/ppc64/kernel/smp.c:978:
+	first_cpu = last_cpu = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: arch/ppc64/kernel/smp.c:983:
+		cpumask_t node_cpumask = node_to_cpumask(i);
+		cpus_and(nodemask, node_cpumask, cpu_online_map);

WARNING:MEMORY_BARRIER: memory barrier without comment
#208: FILE: arch/ppc64/kernel/smp.c:999:
+	mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: arch/ppc64/kernel/smp.c:1042:
+		int j;
+		first_cpu = last_cpu = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#251: FILE: arch/ppc64/kernel/smp.c:1042:
+		first_cpu = last_cpu = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#271: FILE: arch/ppc64/kernel/smp.c:1062:
+	first_cpu = last_cpu = NULL;

WARNING:MEMORY_BARRIER: memory barrier without comment
#290: FILE: arch/ppc64/kernel/smp.c:1081:
+	mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: arch/ppc64/kernel/smp.c:1087:
+		struct sched_group *phys_group = &sched_group_phys[first_cpu(cpu_domain->span)];
+		cpu_domain->parent = phys_domain;

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SCHED_DOMAIN' is wrong - use Kconfig variables or standard guards instead
#311: FILE: include/asm-ppc64/processor.h:635:
+#define ARCH_HAS_SCHED_DOMAIN

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SCHED_WAKE_BALANCE' is wrong - use Kconfig variables or standard guards instead
#312: FILE: include/asm-ppc64/processor.h:636:
+#define ARCH_HAS_SCHED_WAKE_BALANCE

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 11 warnings, 5 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
