WARNING:TYPO_SPELLING: 'approch' may be misspelled - perhaps 'approach'?
#39: 
The reason for taking the do_no_pfn() approch rather than
                                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#49: 
seperate patch.
^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#71: FILE: drivers/char/Kconfig:424:
+config MSPEC
+	tristate "  Memory special operations driver"
+	depends on IA64
+	help
+	  If you have an ia64 and you want to enable memory special
+	  operations support (formerly known as fetchop), say Y here,
+	  otherwise say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: drivers/char/mspec.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#151: FILE: drivers/char/mspec.c:53:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#152: FILE: drivers/char/mspec.c:54:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: drivers/char/mspec.c:65:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#180: FILE: drivers/char/mspec.c:82:
+ * One of these structures is allocated when an mspec region is mmaped. The
                                                                 ^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#210: FILE: drivers/char/mspec.c:112:
+			for (i=0; i < SH2_AMO_CACHE_ENTRIES; i++) {
 			      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#219: FILE: drivers/char/mspec.c:121:
+		memset((char *) addr, 0, len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#270: FILE: drivers/char/mspec.c:172:
+			printk(KERN_WARNING "mspec_close(): "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mspec_close', this function's name, in a string
#270: FILE: drivers/char/mspec.c:172:
+			printk(KERN_WARNING "mspec_close(): "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#271: FILE: drivers/char/mspec.c:173:
+			printk(KERN_WARNING "mspec_close(): "
+			       "failed to zero page %i\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#281: FILE: drivers/char/mspec.c:183:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#287: FILE: drivers/char/mspec.c:189:
+static __inline__ pmd_t *

CHECK:SPACING: No space is necessary after a cast
#319: FILE: drivers/char/mspec.c:221:
+	maddr = (volatile unsigned long) vdata->maddr[index];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#319: FILE: drivers/char/mspec.c:221:
+	maddr = (volatile unsigned long) vdata->maddr[index];

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#346: FILE: drivers/char/mspec.c:248:
+static struct vm_operations_struct mspec_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#415: FILE: drivers/char/mspec.c:317:
+static struct file_operations fetchop_fops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#426: FILE: drivers/char/mspec.c:328:
+static struct file_operations cached_fops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#437: FILE: drivers/char/mspec.c:339:
+static struct file_operations uncached_fops = {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#472: FILE: drivers/char/mspec.c:374:
+				actual_nid = nasid_to_cnodeid(get_node_number(__pa(scratch_page[nid])));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#480: FILE: drivers/char/mspec.c:382:
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#488: FILE: drivers/char/mspec.c:390:
+		printk(KERN_ERR "%s: failed to register device %i\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#495: FILE: drivers/char/mspec.c:397:
+		printk(KERN_ERR "%s: failed to register device %i\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#502: FILE: drivers/char/mspec.c:404:
+	printk(KERN_INFO "%s %s initialized devices: %s %s %s\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#549: FILE: include/linux/mm.h:202:
+	long (*nopfn)(struct vm_area_struct * area, unsigned long address, int *type);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#578: FILE: mm/memory.c:2168:
+	spinlock_t *ptl;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#584: FILE: mm/memory.c:2174:
+	BUG_ON(!(vma->vm_flags & VM_PFNMAP));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000094211.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 22 warnings, 5 checks, 535 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000094211.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
