WARNING:TYPO_SPELLING: 'elminate' may be misspelled - perhaps 'eliminate'?
#71: 
If we had this class_match structure, we could elminate the matching  
                                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
#

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# Patch managed by http://www.holgerschurig.de/patcher.html

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
#

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: include/linux/lcd.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: Unnecessary space before function pointer arguments
#124: FILE: include/linux/lcd.h:34:
+	enum lcd_power_status	(*get_power)	(struct lcd_properties *props);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#125: FILE: include/linux/lcd.h:35:
+	void			(*set_power)	(struct lcd_properties *props, enum lcd_power_status power);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: Unnecessary space before function pointer arguments
#125: FILE: include/linux/lcd.h:35:
+	void			(*set_power)	(struct lcd_properties *props, enum lcd_power_status power);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: include/linux/lcd.h:36:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#131: FILE: include/linux/lcd.h:41:
+	int	(*get_contrast)	(struct lcd_properties *props);

WARNING:SPACING: Unnecessary space before function pointer arguments
#132: FILE: include/linux/lcd.h:42:
+	void	(*set_contrast)	(struct lcd_properties *props, int contrast);

WARNING:SPACING: Unnecessary space before function pointer arguments
#135: FILE: include/linux/lcd.h:45:
+	int (*match) (struct lcd_properties *props, struct fb_info *fb_info);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#146: FILE: drivers/video/lcd.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#147: FILE: drivers/video/lcd.c:2:
+ * linux/drivers/video/lcd.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#176: FILE: drivers/video/lcd.c:31:
+};
+#define to_lcd_device(d) container_of(d, struct lcd_class_device, class_dev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#182: FILE: drivers/video/lcd.c:37:
+};
+static spinlock_t lcd_list_lock = SPIN_LOCK_UNLOCKED;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#187: FILE: drivers/video/lcd.c:42:
+	const char *		name;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#190: FILE: drivers/video/lcd.c:45:
+};
+static const struct lcd_power_name lcd_power_names[] = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: drivers/video/lcd.c:55:
+	struct lcd_class_device *d = to_lcd_device(dev);
+	kfree(d);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#216: FILE: drivers/video/lcd.c:71:
+			sprintf(buf, "%s\n", lcd_power_names[(int)lcd_dev->props->get_power(lcd_dev->props)].name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: drivers/video/lcd.c:85:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#236: FILE: drivers/video/lcd.c:91:
+				if (lcd_dev->props->set_power) {
+					lcd_dev->props->set_power(lcd_dev->props, lcd_power_names[i].power);
+				}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#237: FILE: drivers/video/lcd.c:92:
+					lcd_dev->props->set_power(lcd_dev->props, lcd_power_names[i].power);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: drivers/video/lcd.c:109:
+^I$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#290: FILE: drivers/video/lcd.c:145:
+	unsigned long contrast = simple_strtoul(buf, &after, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: drivers/video/lcd.c:146:
+	unsigned long contrast = simple_strtoul(buf, &after, 0);
+	if (after - buf > 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#295: FILE: drivers/video/lcd.c:150:
+			if (lcd_dev->props->set_contrast) {
+				lcd_dev->props->set_contrast(lcd_dev->props, contrast);
+			}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#317: FILE: drivers/video/lcd.c:172:
+	new_lcd = kmalloc (sizeof (struct lcd_class_device), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#317: FILE: drivers/video/lcd.c:172:
+	new_lcd = kmalloc (sizeof (struct lcd_class_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_lcd)...) over kmalloc(sizeof (struct lcd_class_device)...)
#317: FILE: drivers/video/lcd.c:172:
+	new_lcd = kmalloc (sizeof (struct lcd_class_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: drivers/video/lcd.c:173:
+	if (unlikely (!new_lcd))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!new_lcd'
#318: FILE: drivers/video/lcd.c:173:
+	if (unlikely (!new_lcd))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: drivers/video/lcd.c:180:
+	memset (&new_lcd->class_dev, 0, sizeof (new_lcd->class_dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: drivers/video/lcd.c:180:
+	memset (&new_lcd->class_dev, 0, sizeof (new_lcd->class_dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: drivers/video/lcd.c:183:
+	strlcpy (new_lcd->class_dev.class_id, name, KOBJ_NAME_LEN);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#328: FILE: drivers/video/lcd.c:183:
+	strlcpy (new_lcd->class_dev.class_id, name, KOBJ_NAME_LEN);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#330: FILE: drivers/video/lcd.c:185:
+	rc = class_device_register (&new_lcd->class_dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#331: FILE: drivers/video/lcd.c:186:
+	if (unlikely (rc)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#332: FILE: drivers/video/lcd.c:187:
+		kfree (new_lcd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/video/lcd.c:202:
+^I^I^I/* node->fb->lcd_props = props $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#348: FILE: drivers/video/lcd.c:203:
+			 * get_device(props->lcd_deb) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#353: FILE: drivers/video/lcd.c:208:
+	printk(KERN_INFO "Registered lcd device: name=%s\n", new_lcd->class_dev.class_id);

WARNING:TYPO_SPELLING: 'unreigister' may be misspelled - perhaps 'unregister'?
#361: FILE: drivers/video/lcd.c:216:
+ * @props: the property to unreigister
                            ^^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#368: FILE: drivers/video/lcd.c:223:
+	struct lcd_class_device *lcd_dev;
+	if (!props)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lcd_device_unregister', this function's name, in a string
#373: FILE: drivers/video/lcd.c:228:
+	pr_debug("lcd_device_unregister: name=%s\n", lcd_dev->class_dev.class_id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#375: FILE: drivers/video/lcd.c:230:
+	class_device_remove_file (&lcd_dev->class_dev, &class_device_attr_contrast);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: drivers/video/lcd.c:231:
+	class_device_remove_file (&lcd_dev->class_dev, &class_device_attr_max_contrast);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: drivers/video/lcd.c:232:
+	class_device_remove_file (&lcd_dev->class_dev, &class_device_attr_power);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*node)...) over kmalloc(sizeof(struct lcd_fb_list_node)...)
#398: FILE: drivers/video/lcd.c:253:
+	node = kmalloc(sizeof(struct lcd_fb_list_node), GFP_KERNEL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#399: FILE: drivers/video/lcd.c:254:
+	if (!node) {
+		return -ENOMEM;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: drivers/video/lcd.c:259:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: drivers/video/lcd.c:263:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#414: FILE: drivers/video/lcd.c:269:
+				 * get_device(lcd_dev->props->lcd_dev); */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266120.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 40 warnings, 6 checks, 364 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266120.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
