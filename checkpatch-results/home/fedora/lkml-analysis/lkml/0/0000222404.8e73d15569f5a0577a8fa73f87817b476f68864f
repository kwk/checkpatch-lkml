WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#78: FILE: arch/i386/kernel/cpu/intel.c:292:
+unsigned long cmpxchg_386_u8(volatile void *ptr, u8 old, u8 new)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#99: FILE: arch/i386/kernel/cpu/intel.c:313:
+EXPORT_SYMBOL(cmpxchg_386_u8);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#101: FILE: arch/i386/kernel/cpu/intel.c:315:
+unsigned long cmpxchg_386_u16(volatile void *ptr, u16 old, u16 new)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#122: FILE: arch/i386/kernel/cpu/intel.c:336:
+EXPORT_SYMBOL(cmpxchg_386_u16);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#124: FILE: arch/i386/kernel/cpu/intel.c:338:
+unsigned long cmpxchg_386_u32(volatile void *ptr, u32 old, u32 new)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#145: FILE: arch/i386/kernel/cpu/intel.c:359:
+EXPORT_SYMBOL(cmpxchg_386_u32);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#149: FILE: arch/i386/kernel/cpu/intel.c:363:
+unsigned long long cmpxchg8b_486(volatile unsigned long long *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: arch/i386/kernel/cpu/intel.c:364:
+unsigned long long cmpxchg8b_486(volatile unsigned long long *ptr,
+	       unsigned long long old, unsigned long long newv)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#172: FILE: arch/i386/kernel/cpu/intel.c:386:
+EXPORT_SYMBOL(cmpxchg8b_486);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#185: FILE: include/asm-i386/system.h:152:
+#define ll_low(x)	*(((unsigned int*)&(x))+0)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#185: FILE: include/asm-i386/system.h:152:
+#define ll_low(x)	*(((unsigned int*)&(x))+0)
                  	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#185: FILE: include/asm-i386/system.h:152:
+#define ll_low(x)	*(((unsigned int*)&(x))+0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#186: FILE: include/asm-i386/system.h:153:
+#define ll_high(x)	*(((unsigned int*)&(x))+1)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: include/asm-i386/system.h:153:
+#define ll_high(x)	*(((unsigned int*)&(x))+1)
                   	                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#186: FILE: include/asm-i386/system.h:153:
+#define ll_high(x)	*(((unsigned int*)&(x))+1)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#204: FILE: include/asm-i386/system.h:207:
+static inline unsigned long long __get_64bit(unsigned long long * ptr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: include/asm-i386/system.h:210:
+	unsigned long long ret;
+	__asm__ __volatile__ (

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#207: FILE: include/asm-i386/system.h:210:
+	__asm__ __volatile__ (

CHECK:LINE_SPACING: Please don't use multiple blank lines
#223: FILE: include/asm-i386/system.h:226:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: include/asm-i386/system.h:266:
+#define cmpxchg(ptr,o,n)\
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: include/asm-i386/system.h:266:
+#define cmpxchg(ptr,o,n)\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#233: FILE: include/asm-i386/system.h:266:
+#define cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg((ptr), (unsigned long)(o), \
+					(unsigned long)(n), sizeof(*(ptr))))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#245: FILE: include/asm-i386/system.h:278:
+extern unsigned long cmpxchg_386_u8(volatile void *, u8, u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: include/asm-i386/system.h:278:
+extern unsigned long cmpxchg_386_u8(volatile void *, u8, u8);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#246: FILE: include/asm-i386/system.h:279:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: include/asm-i386/system.h:279:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void *' should also have an identifier name
#246: FILE: include/asm-i386/system.h:279:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#246: FILE: include/asm-i386/system.h:279:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#246: FILE: include/asm-i386/system.h:279:
+extern unsigned long cmpxchg_386_u16(volatile void *, u16, u16);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#247: FILE: include/asm-i386/system.h:280:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: include/asm-i386/system.h:280:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void *' should also have an identifier name
#247: FILE: include/asm-i386/system.h:280:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#247: FILE: include/asm-i386/system.h:280:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#247: FILE: include/asm-i386/system.h:280:
+extern unsigned long cmpxchg_386_u32(volatile void *, u32, u32);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#249: FILE: include/asm-i386/system.h:282:
+static inline unsigned long cmpxchg_386(volatile void *ptr, unsigned long old,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: include/asm-i386/system.h:283:
+static inline unsigned long cmpxchg_386(volatile void *ptr, unsigned long old,
+				      unsigned long new, int size)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: include/asm-i386/system.h:296:
+#define cmpxchg(ptr,o,n)\
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: include/asm-i386/system.h:296:
+#define cmpxchg(ptr,o,n)\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#263: FILE: include/asm-i386/system.h:296:
+#define cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))cmpxchg_386((ptr), (unsigned long)(o), \
+					(unsigned long)(n), sizeof(*(ptr))))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#277: FILE: include/asm-i386/system.h:328:
+static inline unsigned long long __cmpxchg8b(volatile unsigned long long *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: include/asm-i386/system.h:329:
+static inline unsigned long long __cmpxchg8b(volatile unsigned long long *ptr,
+		unsigned long long old, unsigned long long newv)

WARNING:LINE_SPACING: Missing a blank line after declarations
#281: FILE: include/asm-i386/system.h:332:
+	unsigned long long prev;
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#281: FILE: include/asm-i386/system.h:332:
+	__asm__ __volatile__(

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#298: FILE: include/asm-i386/system.h:349:
+extern unsigned long long cmpxchg8b_486(volatile unsigned long long *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#298: FILE: include/asm-i386/system.h:349:
+extern unsigned long long cmpxchg8b_486(volatile unsigned long long *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile unsigned long long *' should also have an identifier name
#298: FILE: include/asm-i386/system.h:349:
+extern unsigned long long cmpxchg8b_486(volatile unsigned long long *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#298: FILE: include/asm-i386/system.h:349:
+extern unsigned long long cmpxchg8b_486(volatile unsigned long long *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#298: FILE: include/asm-i386/system.h:349:
+extern unsigned long long cmpxchg8b_486(volatile unsigned long long *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: include/asm-i386/system.h:350:
+extern unsigned long long cmpxchg8b_486(volatile unsigned long long *,
+		unsigned long long, unsigned long long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222404.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 25 warnings, 15 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222404.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
