WARNING:TYPO_SPELLING: 'wasnt' may be misspelled - perhaps 'wasn't'?
#21: 
Yes this is big but 2.4 has been indented, updated and there wasnt a
                                                             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux.2.5.41/drivers/net/depca.c linux.2.5.41-ac1/drivers/net/depca.c

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#98: FILE: drivers/net/depca.c:353:
+	volatile s32 base;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#107: FILE: drivers/net/depca.c:359:
+	volatile s32 base;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#136: FILE: drivers/net/depca.c:380:
+#define DEPCA_PKT_BIN_SZ  128	/* Should be >=100 unless you
+				   increase DEPCA_PKT_STAT_SZ */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#136: FILE: drivers/net/depca.c:380:
+				   increase DEPCA_PKT_STAT_SZ */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#190: FILE: drivers/net/depca.c:403:
+	spinlock_t lock;

CHECK:CAMELCASE: Avoid CamelCase: <pktStats>
#199: FILE: drivers/net/depca.c:412:
+	} pktStats;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <txRingMask>
#200: FILE: drivers/net/depca.c:413:
+	int txRingMask;		/* TX ring mask                           */

CHECK:CAMELCASE: Avoid CamelCase: <rxRingMask>
#201: FILE: drivers/net/depca.c:414:
+	int rxRingMask;		/* RX ring mask                           */

CHECK:CAMELCASE: Avoid CamelCase: <LoadCSRs>
#251: FILE: drivers/net/depca.c:450:
+static void LoadCSRs(struct net_device *dev);

CHECK:CAMELCASE: Avoid CamelCase: <InitRestartDepca>
#252: FILE: drivers/net/depca.c:451:
+static int InitRestartDepca(struct net_device *dev);

CHECK:CAMELCASE: Avoid CamelCase: <DepcaSignature>
#253: FILE: drivers/net/depca.c:452:
+static void DepcaSignature(char *name, u_long paddr);

CHECK:CAMELCASE: Avoid CamelCase: <DevicePresent>
#254: FILE: drivers/net/depca.c:453:
+static int DevicePresent(u_long ioaddr);

CHECK:CAMELCASE: Avoid CamelCase: <SetMulticastFilter>
#257: FILE: drivers/net/depca.c:456:
+static void SetMulticastFilter(struct net_device *dev);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#269: FILE: drivers/net/depca.c:464:
+static struct net_device *insert_device(struct net_device *dev, u_long iobase, int (*init) (struct net_device *));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#278: FILE: drivers/net/depca.c:470:
+void cleanup_module(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#304: FILE: drivers/net/depca.c:483:
+static int mem;			/* For loadable module assignment
+				   use insmod mem=0x????? .... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#304: FILE: drivers/net/depca.c:483:
+				   use insmod mem=0x????? .... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#306: FILE: drivers/net/depca.c:485:
+static char *adapter_name;	/* = '\0';     If no PROM when loadable module
+				   use insmod adapter_name=DE??? ...

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iobase == 0'
#334: FILE: drivers/net/depca.c:502:
+	if ((iobase == 0) && loading_module) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#335: FILE: drivers/net/depca.c:503:
+		printk("Autoprobing is not supported when loading a module based driver.\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp == num_depcas'
#356: FILE: drivers/net/depca.c:512:
+		if ((tmp == num_depcas) && (iobase != 0) && loading_module) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iobase != 0'
#356: FILE: drivers/net/depca.c:512:
+		if ((tmp == num_depcas) && (iobase != 0) && loading_module) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#356: FILE: drivers/net/depca.c:512:
+		if ((tmp == num_depcas) && (iobase != 0) && loading_module) {
+			printk("%s: depca_probe() cannot find device at 0x%04lx.\n", dev->name, iobase);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#357: FILE: drivers/net/depca.c:513:
+			printk("%s: depca_probe() cannot find device at 0x%04lx.\n", dev->name, iobase);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#357: FILE: drivers/net/depca.c:513:
+			printk("%s: depca_probe() cannot find device at 0x%04lx.\n", dev->name, iobase);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'depca_probe', this function's name, in a string
#357: FILE: drivers/net/depca.c:513:
+			printk("%s: depca_probe() cannot find device at 0x%04lx.\n", dev->name, iobase);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#364: FILE: drivers/net/depca.c:517:
+		/*
+		   ** Walk the device list to check that at least one device

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#364: FILE: drivers/net/depca.c:517:
+		/*
+		   ** Walk the device list to check that at least one device

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#366: FILE: drivers/net/depca.c:519:
+		   ** initialised OK
+		 */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#367: FILE: drivers/net/depca.c:520:
+		for (; (dev->priv == NULL) && (dev->next != NULL); dev = dev->next);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->priv"
#367: FILE: drivers/net/depca.c:520:
+		for (; (dev->priv == NULL) && (dev->next != NULL); dev = dev->next);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->next"
#367: FILE: drivers/net/depca.c:520:
+		for (; (dev->priv == NULL) && (dev->next != NULL); dev = dev->next);

CHECK:CAMELCASE: Avoid CamelCase: <netRAM>
#385: FILE: drivers/net/depca.c:534:
+	int i, j, offset, netRAM, mem_len, status = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter == unknown'
#397: FILE: drivers/net/depca.c:554:
+	if ((adapter == unknown) || !mem_start) {	/* DEPCA device not found */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#410: FILE: drivers/net/depca.c:561:
+		printk("%s: %s at 0x%04lx (MCA slot %d)", dev->name, name, ioaddr, mca_slot);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#412: FILE: drivers/net/depca.c:563:
+		printk("%s: %s at 0x%04lx (EISA slot %d)", dev->name, name, ioaddr, (int) ((ioaddr >> 12) & 0x0f));

CHECK:SPACING: No space is necessary after a cast
#412: FILE: drivers/net/depca.c:563:
+		printk("%s: %s at 0x%04lx (EISA slot %d)", dev->name, name, ioaddr, (int) ((ioaddr >> 12) & 0x0f));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#412: FILE: drivers/net/depca.c:563:
+		printk("%s: %s at 0x%04lx (EISA slot %d)", dev->name, name, ioaddr, (int) ((ioaddr >> 12) & 0x0f));

WARNING:LONG_LINE: line length of 171 exceeds 100 columns
#447: FILE: drivers/net/depca.c:592:
+	if ((mem_len = (NUM_RX_DESC * (sizeof(struct depca_rx_desc) + RX_BUFF_SZ) + NUM_TX_DESC * (sizeof(struct depca_tx_desc) + TX_BUFF_SZ) + sizeof(struct depca_init)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#447: FILE: drivers/net/depca.c:592:
+	if ((mem_len = (NUM_RX_DESC * (sizeof(struct depca_rx_desc) + RX_BUFF_SZ) + NUM_TX_DESC * (sizeof(struct depca_tx_desc) + TX_BUFF_SZ) + sizeof(struct depca_init)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#449: FILE: drivers/net/depca.c:594:
+		printk(",\n       requests %dkB RAM: only %dkB is available!\n", (mem_len >> 10), netRAM);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#449: FILE: drivers/net/depca.c:594:
+		printk(",\n       requests %dkB RAM: only %dkB is available!\n", (mem_len >> 10), netRAM);

CHECK:SPACING: No space is necessary after a cast
#465: FILE: drivers/net/depca.c:610:
+	lp = (struct depca_private *) dev->priv;

CHECK:SPACING: No space is necessary after a cast
#466: FILE: drivers/net/depca.c:611:
+	memset((char *) dev->priv, 0, sizeof(struct depca_private));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#476: FILE: drivers/net/depca.c:618:
+		printk(KERN_ERR "depca: I/O resource 0x%x @ 0x%lx busy\n", DEPCA_TOTAL_SIZE, ioaddr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#476: FILE: drivers/net/depca.c:618:
+		printk(KERN_ERR "depca: I/O resource 0x%x @ 0x%lx busy\n", DEPCA_TOTAL_SIZE, ioaddr);

CHECK:SPACING: No space is necessary after a cast
#493: FILE: drivers/net/depca.c:636:
+	lp->rx_ring = (struct depca_rx_desc *) (lp->sh_mem + offset);

CHECK:SPACING: No space is necessary after a cast
#498: FILE: drivers/net/depca.c:640:
+	lp->tx_ring = (struct depca_tx_desc *) (lp->sh_mem + offset);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#507: FILE: drivers/net/depca.c:652:
+	for (i = 0, j = lp->rxRingMask; j > 0; i++) {
 		j >>= 1;
 	}

CHECK:SPACING: No space is necessary after a cast
#512: FILE: drivers/net/depca.c:655:
+	lp->rx_rlen = (s32) (i << 29);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#513: FILE: drivers/net/depca.c:656:
+	for (i = 0, j = lp->txRingMask; j > 0; i++) {
 		j >>= 1;
 	}

CHECK:SPACING: No space is necessary after a cast
#517: FILE: drivers/net/depca.c:659:
+	lp->tx_rlen = (s32) (i << 29);

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#539: FILE: drivers/net/depca.c:704:
+			yield();

WARNING:INDENTED_LABEL: labels should not be indented
#571: FILE: drivers/net/depca.c:748:
+      out_region:

WARNING:INDENTED_LABEL: labels should not be indented
#574: FILE: drivers/net/depca.c:750:
+      out_priv:

CHECK:LINE_SPACING: Please don't use multiple blank lines
#583: FILE: drivers/net/depca.c:756:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#626: FILE: drivers/net/depca.c:759:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#647: FILE: drivers/net/depca.c:780:
+		printk("depca_open(): Requested IRQ%d is busy\n", dev->irq);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'depca_open', this function's name, in a string
#647: FILE: drivers/net/depca.c:780:
+		printk("depca_open(): Requested IRQ%d is busy\n", dev->irq);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#650: FILE: drivers/net/depca.c:783:
+	} else {
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#661: FILE: drivers/net/depca.c:794:
+			printk("CSR0: 0x%4.4x\n", inw(DEPCA_DATA));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#662: FILE: drivers/net/depca.c:795:
+			printk("nicsr: 0x%02x\n", inb(DEPCA_NICSR));

CHECK:SPACING: No space is necessary after a cast
#674: FILE: drivers/net/depca.c:804:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#716: FILE: drivers/net/depca.c:846:
+	printk("%s: transmit timed out, status %04x, resetting.\n", dev->name, inw(DEPCA_DATA));

WARNING:INDENTED_LABEL: labels should not be indented
#768: FILE: drivers/net/depca.c:888:
+      out:

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#785: FILE: drivers/net/depca.c:903:
+		printk("depca_interrupt(): irq %d for unknown device.\n", irq);

CHECK:SPACING: No space is necessary after a cast
#931: FILE: drivers/net/depca.c:944:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#957: FILE: drivers/net/depca.c:969:
+				if (skb != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#959: FILE: drivers/net/depca.c:971:
+					unsigned char *buf;
+					skb_reserve(skb, 2);	/* 16 byte align the IP header */

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#963: FILE: drivers/net/depca.c:975:
+						len = (lp->rxRingMask - lp->rx_old + 1) * RX_BUFF_SZ;

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#965: FILE: drivers/net/depca.c:977:
+						memcpy_fromio(buf + len, lp->rx_buff[0], pkt_len - len);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#967: FILE: drivers/net/depca.c:979:
+						memcpy_fromio(buf, lp->rx_buff[lp->rx_old], pkt_len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: drivers/net/depca.c:982:
+^I^I^I^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#971: FILE: drivers/net/depca.c:983:
+^I^I^I^I^I   ** Notify the upper protocol layers that there is another $

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#971: FILE: drivers/net/depca.c:983:
+					   ** Notify the upper protocol layers that there is another 

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#971: FILE: drivers/net/depca.c:983:
+					/* 
+					   ** Notify the upper protocol layers that there is another 

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#971: FILE: drivers/net/depca.c:983:
+					/* 
+					   ** Notify the upper protocol layers that there is another 

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#973: FILE: drivers/net/depca.c:985:
+					   ** packet to handle
+					 */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#978: FILE: drivers/net/depca.c:990:
+					/*
+					   ** Update stats

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#978: FILE: drivers/net/depca.c:990:
+					/*
+					   ** Update stats

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#979: FILE: drivers/net/depca.c:991:
+					   ** Update stats
+					 */

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#984: FILE: drivers/net/depca.c:996:
+						if (pkt_len < (i * DEPCA_PKT_BIN_SZ)) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#990: FILE: drivers/net/depca.c:1002:
+						if ((*(s16 *) & buf[0] == -1) && (*(s16 *) & buf[2] == -1) && (*(s16 *) & buf[4] == -1)) {

CHECK:SPACING: No space is necessary after a cast
#990: FILE: drivers/net/depca.c:1002:
+						if ((*(s16 *) & buf[0] == -1) && (*(s16 *) & buf[2] == -1) && (*(s16 *) & buf[4] == -1)) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#990: FILE: drivers/net/depca.c:1002:
+						if ((*(s16 *) & buf[0] == -1) && (*(s16 *) & buf[2] == -1) && (*(s16 *) & buf[4] == -1)) {

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#990: FILE: drivers/net/depca.c:1002:
+						if ((*(s16 *) & buf[0] == -1) && (*(s16 *) & buf[2] == -1) && (*(s16 *) & buf[4] == -1)) {
 						              ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#990: FILE: drivers/net/depca.c:1002:
+						if ((*(s16 *) & buf[0] == -1) && (*(s16 *) & buf[2] == -1) && (*(s16 *) & buf[4] == -1)) {
 						                                           ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#990: FILE: drivers/net/depca.c:1002:
+						if ((*(s16 *) & buf[0] == -1) && (*(s16 *) & buf[2] == -1) && (*(s16 *) & buf[4] == -1)) {
 						                                                                        ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#990: FILE: drivers/net/depca.c:1002:
+						if ((*(s16 *) & buf[0] == -1) && (*(s16 *) & buf[2] == -1) && (*(s16 *) & buf[4] == -1)) {
[...]
+						} else {
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#992: FILE: drivers/net/depca.c:1004:
+						} else {

WARNING:LONG_LINE: line length of 212 exceeds 100 columns
#995: FILE: drivers/net/depca.c:1007:
+					} else if ((*(s16 *) & buf[0] == *(s16 *) & dev->dev_addr[0]) && (*(s16 *) & buf[2] == *(s16 *) & dev->dev_addr[2]) && (*(s16 *) & buf[4] == *(s16 *) & dev->dev_addr[4])) {

CHECK:SPACING: No space is necessary after a cast
#995: FILE: drivers/net/depca.c:1007:
+					} else if ((*(s16 *) & buf[0] == *(s16 *) & dev->dev_addr[0]) && (*(s16 *) & buf[2] == *(s16 *) & dev->dev_addr[2]) && (*(s16 *) & buf[4] == *(s16 *) & dev->dev_addr[4])) {

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#995: FILE: drivers/net/depca.c:1007:
+					} else if ((*(s16 *) & buf[0] == *(s16 *) & dev->dev_addr[0]) && (*(s16 *) & buf[2] == *(s16 *) & dev->dev_addr[2]) && (*(s16 *) & buf[4] == *(s16 *) & dev->dev_addr[4])) {
 					                     ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#995: FILE: drivers/net/depca.c:1007:
+					} else if ((*(s16 *) & buf[0] == *(s16 *) & dev->dev_addr[0]) && (*(s16 *) & buf[2] == *(s16 *) & dev->dev_addr[2]) && (*(s16 *) & buf[4] == *(s16 *) & dev->dev_addr[4])) {
 					                                          ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#995: FILE: drivers/net/depca.c:1007:
+					} else if ((*(s16 *) & buf[0] == *(s16 *) & dev->dev_addr[0]) && (*(s16 *) & buf[2] == *(s16 *) & dev->dev_addr[2]) && (*(s16 *) & buf[4] == *(s16 *) & dev->dev_addr[4])) {
 					                                                                           ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#995: FILE: drivers/net/depca.c:1007:
+					} else if ((*(s16 *) & buf[0] == *(s16 *) & dev->dev_addr[0]) && (*(s16 *) & buf[2] == *(s16 *) & dev->dev_addr[2]) && (*(s16 *) & buf[4] == *(s16 *) & dev->dev_addr[4])) {
 					                                                                                                ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#995: FILE: drivers/net/depca.c:1007:
+					} else if ((*(s16 *) & buf[0] == *(s16 *) & dev->dev_addr[0]) && (*(s16 *) & buf[2] == *(s16 *) & dev->dev_addr[2]) && (*(s16 *) & buf[4] == *(s16 *) & dev->dev_addr[4])) {
 					                                                                                                                                 ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#995: FILE: drivers/net/depca.c:1007:
+					} else if ((*(s16 *) & buf[0] == *(s16 *) & dev->dev_addr[0]) && (*(s16 *) & buf[2] == *(s16 *) & dev->dev_addr[2]) && (*(s16 *) & buf[4] == *(s16 *) & dev->dev_addr[4])) {
 					                                                                                                                                                      ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1001: FILE: drivers/net/depca.c:1013:
+						memset((char *) &lp->pktStats, 0, sizeof(lp->pktStats));

CHECK:SPACING: No space is necessary after a cast
#1001: FILE: drivers/net/depca.c:1013:
+						memset((char *) &lp->pktStats, 0, sizeof(lp->pktStats));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1004: FILE: drivers/net/depca.c:1016:
+					printk("%s: Memory squeeze, deferring packet.\n", dev->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1004: FILE: drivers/net/depca.c:1016:
+					printk("%s: Memory squeeze, deferring packet.\n", dev->name);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1010: FILE: drivers/net/depca.c:1022:
+			for (; lp->rx_old != entry; lp->rx_old = (++lp->rx_old) & lp->rxRingMask) {
+				writel(readl(&lp->rx_ring[lp->rx_old].base) | R_OWN, &lp->rx_ring[lp->rx_old].base);
+			}

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1011: FILE: drivers/net/depca.c:1023:
+				writel(readl(&lp->rx_ring[lp->rx_old].base) | R_OWN, &lp->rx_ring[lp->rx_old].base);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1017: FILE: drivers/net/depca.c:1029:
+		/*
+		   ** Update entry information

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1017: FILE: drivers/net/depca.c:1029:
+		/*
+		   ** Update entry information

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1018: FILE: drivers/net/depca.c:1030:
+		   ** Update entry information
+		 */

CHECK:SPACING: No space is necessary after a cast
#1032: FILE: drivers/net/depca.c:1042:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

CHECK:SPACING: No space is necessary after a cast
#1092: FILE: drivers/net/depca.c:1083:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1151: FILE: drivers/net/depca.c:1091:
+	if (depca_debug > 1) {
+		printk("%s: Shutting down ethercard, status was %2.2x.\n", dev->name, inw(DEPCA_DATA));
+	}

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1152: FILE: drivers/net/depca.c:1092:
+		printk("%s: Shutting down ethercard, status was %2.2x.\n", dev->name, inw(DEPCA_DATA));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1152: FILE: drivers/net/depca.c:1092:
+		printk("%s: Shutting down ethercard, status was %2.2x.\n", dev->name, inw(DEPCA_DATA));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1155: FILE: drivers/net/depca.c:1095:
+^I/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1156: FILE: drivers/net/depca.c:1096:
+	/* 
+	   ** We stop the DEPCA here -- it occasionally polls

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1156: FILE: drivers/net/depca.c:1096:
+	/* 
+	   ** We stop the DEPCA here -- it occasionally polls

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1157: FILE: drivers/net/depca.c:1097:
+^I   ** memory if we don't. $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1158: FILE: drivers/net/depca.c:1098:
+	   ** memory if we don't. 
+	 */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1162: FILE: drivers/net/depca.c:1102:
+	/*
+	   ** Give back the ROM in case the user wants to go to DOS

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1162: FILE: drivers/net/depca.c:1102:
+	/*
+	   ** Give back the ROM in case the user wants to go to DOS

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1163: FILE: drivers/net/depca.c:1103:
+	   ** Give back the ROM in case the user wants to go to DOS
+	 */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1171: FILE: drivers/net/depca.c:1111:
+	/*
+	   ** Free the associated irq

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1171: FILE: drivers/net/depca.c:1111:
+	/*
+	   ** Free the associated irq

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1172: FILE: drivers/net/depca.c:1112:
+	   ** Free the associated irq
+	 */

CHECK:SPACING: No space is necessary after a cast
#1181: FILE: drivers/net/depca.c:1119:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

CHECK:SPACING: No space is necessary after a cast
#1191: FILE: drivers/net/depca.c:1123:
+	outw((u16) lp->device_ram_start, DEPCA_DATA);

CHECK:SPACING: No space is necessary after a cast
#1193: FILE: drivers/net/depca.c:1125:
+	outw((u16) (lp->device_ram_start >> 16), DEPCA_DATA);

CHECK:SPACING: No space is necessary after a cast
#1212: FILE: drivers/net/depca.c:1136:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1239: FILE: drivers/net/depca.c:1147:
+	for (i = 0; (i < 100) && !(inw(DEPCA_DATA) & IDON); i++);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1244: FILE: drivers/net/depca.c:1152:
+		if (depca_debug > 2) {
+			printk("%s: DEPCA open after %d ticks, init block 0x%08lx csr0 %4.4x.\n", dev->name, i, virt_to_phys(lp->sh_mem), inw(DEPCA_DATA));
+		}

WARNING:LONG_LINE: line length of 155 exceeds 100 columns
#1245: FILE: drivers/net/depca.c:1153:
+			printk("%s: DEPCA open after %d ticks, init block 0x%08lx csr0 %4.4x.\n", dev->name, i, virt_to_phys(lp->sh_mem), inw(DEPCA_DATA));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1245: FILE: drivers/net/depca.c:1153:
+			printk("%s: DEPCA open after %d ticks, init block 0x%08lx csr0 %4.4x.\n", dev->name, i, virt_to_phys(lp->sh_mem), inw(DEPCA_DATA));

WARNING:LONG_LINE: line length of 149 exceeds 100 columns
#1248: FILE: drivers/net/depca.c:1156:
+		printk("%s: DEPCA unopen after %d ticks, init block 0x%08lx csr0 %4.4x.\n", dev->name, i, virt_to_phys(lp->sh_mem), inw(DEPCA_DATA));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1248: FILE: drivers/net/depca.c:1156:
+		printk("%s: DEPCA unopen after %d ticks, init block 0x%08lx csr0 %4.4x.\n", dev->name, i, virt_to_phys(lp->sh_mem), inw(DEPCA_DATA));

CHECK:SPACING: No space is necessary after a cast
#1261: FILE: drivers/net/depca.c:1165:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

CHECK:SPACING: No space is necessary after a cast
#1298: FILE: drivers/net/depca.c:1177:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1303: FILE: drivers/net/depca.c:1182:
+		while (lp->tx_old != lp->tx_new);	/* Wait for the ring to empty */

CHECK:SPACING: No space is necessary after a cast
#1359: FILE: drivers/net/depca.c:1208:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1367: FILE: drivers/net/depca.c:1216:
+		for (i = 0; i < (HASH_TABLE_LEN >> 3); i++) {
+			lp->init_block.mcast_table[i] = (char) 0xff;
+		}

CHECK:SPACING: No space is necessary after a cast
#1368: FILE: drivers/net/depca.c:1217:
+			lp->init_block.mcast_table[i] = (char) 0xff;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1484: FILE: drivers/net/depca.c:1259:
+	   ** See if we've been here before.
+	 */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: drivers/net/depca.c:1265:
+^I^I   ** Search for the adapter.  If an address has been given, search $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1530: FILE: drivers/net/depca.c:1268:
+		   ** first card in the system.
+		 */

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1531: FILE: drivers/net/depca.c:1269:
+		while ((dev != NULL) && ((slot = mca_find_adapter(DE212_ID, slot)) != MCA_NOTFOUND)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1531: FILE: drivers/net/depca.c:1269:
+		while ((dev != NULL) && ((slot = mca_find_adapter(DE212_ID, slot)) != MCA_NOTFOUND)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1536: FILE: drivers/net/depca.c:1274:
+^I^I^I   ** IO of card is handled by bits 1 and 2 of pos0.    $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1536: FILE: drivers/net/depca.c:1274:
+			/*
+			   ** IO of card is handled by bits 1 and 2 of pos0.    

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1536: FILE: drivers/net/depca.c:1274:
+			/*
+			   ** IO of card is handled by bits 1 and 2 of pos0.    

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1543: FILE: drivers/net/depca.c:1281:
+			   **       1    1    0x2c30
+			 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioaddr != iobase'
#1547: FILE: drivers/net/depca.c:1285:
+			if ((ioaddr) && (ioaddr != iobase)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1549: FILE: drivers/net/depca.c:1287:
+^I^I^I^I   ** Card was found, but not at the right IO location. Continue $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1549: FILE: drivers/net/depca.c:1287:
+				/*
+				   ** Card was found, but not at the right IO location. Continue 

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1549: FILE: drivers/net/depca.c:1287:
+				/*
+				   ** Card was found, but not at the right IO location. Continue 

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1551: FILE: drivers/net/depca.c:1289:
+				   ** scanning from the next MCA slot up for another card.
+				 */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1581: FILE: drivers/net/depca.c:1296:
+^I^I^I   ** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1585: FILE: drivers/net/depca.c:1300:
+^I^I^I   **      Bits           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1586: FILE: drivers/net/depca.c:1301:
+^I^I^I   **   3   2   1   0    IRQ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1592: FILE: drivers/net/depca.c:1307:
+			   * */

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1608: FILE: drivers/net/depca.c:1323:
+				printk("%s: mca_probe IRQ error.  You should never get here (%d).\n", dev->name, where);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1608: FILE: drivers/net/depca.c:1323:
+				printk("%s: mca_probe IRQ error.  You should never get here (%d).\n", dev->name, where);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mca_probe', this function's name, in a string
#1608: FILE: drivers/net/depca.c:1323:
+				printk("%s: mca_probe IRQ error.  You should never get here (%d).\n", dev->name, where);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1613: FILE: drivers/net/depca.c:1328:
+			/*
+			   ** Shared memory address of adapter is stored in bits 3-5 of pos0.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1613: FILE: drivers/net/depca.c:1328:
+			/*
+			   ** Shared memory address of adapter is stored in bits 3-5 of pos0.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1624: FILE: drivers/net/depca.c:1339:
+			   **   1  1  0       E8000-EFFFF (32K)
+			 */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1627: FILE: drivers/net/depca.c:1342:
+			if (pos[0] & 0x20) {
+				mem += 0x8000;
+			}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1632: FILE: drivers/net/depca.c:1347:
+			/*
+			   ** Get everything allocated and initialized...  (almost just

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1632: FILE: drivers/net/depca.c:1347:
+			/*
+			   ** Get everything allocated and initialized...  (almost just

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1634: FILE: drivers/net/depca.c:1349:
+			   ** like the ISA and EISA probes)
+			 */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1637: FILE: drivers/net/depca.c:1352:
+				/*
+				   ** If the MCA configuration says the card should be here,

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1637: FILE: drivers/net/depca.c:1352:
+				/*
+				   ** If the MCA configuration says the card should be here,

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1639: FILE: drivers/net/depca.c:1354:
+				   ** it really should be here.
+				 */

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#1640: FILE: drivers/net/depca.c:1355:
+				printk(KERN_ERR "%s: MCA reports card at 0x%lx but it is not responding.\n", dev->name, iobase);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1640: FILE: drivers/net/depca.c:1355:
+				printk(KERN_ERR "%s: MCA reports card at 0x%lx but it is not responding.\n", dev->name, iobase);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1644: FILE: drivers/net/depca.c:1359:
+				if ((dev = alloc_device(dev, iobase)) != NULL) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1648: FILE: drivers/net/depca.c:1363:
+						/*
+						   ** Adapter initialized correctly:  Name it in

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1648: FILE: drivers/net/depca.c:1363:
+						/*
+						   ** Adapter initialized correctly:  Name it in

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1650: FILE: drivers/net/depca.c:1365:
+						   ** /proc/mca.
+						 */

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#1651: FILE: drivers/net/depca.c:1366:
+						mca_set_adapter_name(slot, "DE210/212 Ethernet Adapter");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1658: FILE: drivers/net/depca.c:1373:
+				printk(KERN_WARNING "%s: region already allocated at 0x%04lx.\n", dev->name, iobase);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1658: FILE: drivers/net/depca.c:1373:
+				printk(KERN_WARNING "%s: region already allocated at 0x%04lx.\n", dev->name, iobase);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1662: FILE: drivers/net/depca.c:1377:
+			/*
+			   ** If this is a probe by a module, return after setting up the

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1662: FILE: drivers/net/depca.c:1377:
+			/*
+			   ** If this is a probe by a module, return after setting up the

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1664: FILE: drivers/net/depca.c:1379:
+			   ** given card.
+			 */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1669: FILE: drivers/net/depca.c:1384:
+			/*
+			   ** Set up to check the next slot and loop.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1669: FILE: drivers/net/depca.c:1384:
+			/*
+			   ** Set up to check the next slot and loop.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1670: FILE: drivers/net/depca.c:1385:
+			   ** Set up to check the next slot and loop.
+			 */

CHECK:CAMELCASE: Avoid CamelCase: <maxSlots>
#1690: FILE: drivers/net/depca.c:1399:
+	int i = num_depcas, maxSlots;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1732: FILE: drivers/net/depca.c:1416:
+	for (; (i < maxSlots) && (dev != NULL) && ports[i]; i++) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1735: FILE: drivers/net/depca.c:1419:
+				if ((dev = alloc_device(dev, ports[i])) != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1736: FILE: drivers/net/depca.c:1420:
+					if (depca_hw_init(dev, ports[i], -1) == 0) {
+						num_depcas++;
+					}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1743: FILE: drivers/net/depca.c:1427:
+			printk("%s: region already allocated at 0x%04x.\n", dev->name, ports[i]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioaddr < 0x400'
#1799: FILE: drivers/net/depca.c:1446:
+	if ((ioaddr < 0x400) && (ioaddr > 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioaddr > 0'
#1799: FILE: drivers/net/depca.c:1446:
+	if ((ioaddr < 0x400) && (ioaddr > 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1814: FILE: drivers/net/depca.c:1461:
+	for (; (i < maxSlots) && (dev != NULL); i++, iobase += EISA_SLOT_INC) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1818: FILE: drivers/net/depca.c:1465:
+					if ((dev = alloc_device(dev, iobase)) != NULL) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1819: FILE: drivers/net/depca.c:1466:
+						if (depca_hw_init(dev, iobase, -1) == 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1819: FILE: drivers/net/depca.c:1466:
+						if (depca_hw_init(dev, iobase, -1) == 0) {
+							num_depcas++;
+						}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1827: FILE: drivers/net/depca.c:1474:
+			printk("%s: region already allocated at 0x%04lx.\n", dev->name, iobase);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->base_addr == DEPCA_NDA'
#1885: FILE: drivers/net/depca.c:1497:
+		if (((dev->base_addr == DEPCA_NDA) || (dev->base_addr == 0)) && !adev) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->base_addr == 0'
#1885: FILE: drivers/net/depca.c:1497:
+		if (((dev->base_addr == DEPCA_NDA) || (dev->base_addr == 0)) && !adev) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->priv"
#1887: FILE: drivers/net/depca.c:1499:
+		} else if ((dev->priv == NULL) && (dev->base_addr == iobase)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1890: FILE: drivers/net/depca.c:1502:
+			if (dev->next == NULL) {
[...]
+			} else if (strncmp(dev->next->name, "eth", 3) != 0) {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->next"
#1890: FILE: drivers/net/depca.c:1502:
+			if (dev->next == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->next == NULL'
#1896: FILE: drivers/net/depca.c:1508:
+		if ((dev->next == NULL) || new_dev || fixed)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->next"
#1896: FILE: drivers/net/depca.c:1508:
+		if ((dev->next == NULL) || new_dev || fixed)

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1907: FILE: drivers/net/depca.c:1519:
+	if (((dev->next == NULL) && ((dev->base_addr != DEPCA_NDA) && (dev->base_addr != 0)) && !fixed) || new_dev) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->next == NULL'
#1907: FILE: drivers/net/depca.c:1519:
+	if (((dev->next == NULL) && ((dev->base_addr != DEPCA_NDA) && (dev->base_addr != 0)) && !fixed) || new_dev) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->base_addr != DEPCA_NDA'
#1907: FILE: drivers/net/depca.c:1519:
+	if (((dev->next == NULL) && ((dev->base_addr != DEPCA_NDA) && (dev->base_addr != 0)) && !fixed) || new_dev) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->base_addr != 0'
#1907: FILE: drivers/net/depca.c:1519:
+	if (((dev->next == NULL) && ((dev->base_addr != DEPCA_NDA) && (dev->base_addr != 0)) && !fixed) || new_dev) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->next"
#1907: FILE: drivers/net/depca.c:1519:
+	if (((dev->next == NULL) && ((dev->base_addr != DEPCA_NDA) && (dev->base_addr != 0)) && !fixed) || new_dev) {

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1921: FILE: drivers/net/depca.c:1531:
+static struct net_device *__init insert_device(struct net_device *dev, u_long iobase, int (*init) (struct net_device *))

CHECK:SPACING: No space is necessary after a cast
#1936: FILE: drivers/net/depca.c:1535:
+	new = (struct net_device *) kmalloc(sizeof(struct net_device), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1936: FILE: drivers/net/depca.c:1535:
+	new = (struct net_device *) kmalloc(sizeof(struct net_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct net_device)...)
#1936: FILE: drivers/net/depca.c:1535:
+	new = (struct net_device *) kmalloc(sizeof(struct net_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#1937: FILE: drivers/net/depca.c:1536:
+	if (new == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1938: FILE: drivers/net/depca.c:1537:
+		printk("eth%d: Device not initialised, insufficient memory\n", num_eth);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1938: FILE: drivers/net/depca.c:1537:
+	if (new == NULL) {
+		printk("eth%d: Device not initialised, insufficient memory\n", num_eth);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1945: FILE: drivers/net/depca.c:1543:
+		if (num_eth > 9999) {
[...]
+		} else {
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1975: FILE: drivers/net/depca.c:1560:
+		if (isdigit(*s)) {
[...]
+		} else if (j)
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ptr"
#2041: FILE: drivers/net/depca.c:1584:
+	if (ptr == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2042: FILE: drivers/net/depca.c:1585:
+		printk(KERN_ERR "depca: I/O remap failed at %lx\n", paddr + 0xc000);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2046: FILE: drivers/net/depca.c:1589:
+	for (i = 0; i < 16; i++) {
+		tmpstr[i] = readb(ptr + i);
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == unknown'
#2066: FILE: drivers/net/depca.c:1608:
+	if (*name && (i == unknown)) {

CHECK:CAMELCASE: Avoid CamelCase: <Sig>
#2135: FILE: drivers/net/depca.c:1644:
+		char Sig[sizeof(u32) << 1];

CHECK:CAMELCASE: Avoid CamelCase: <sigLength>
#2138: FILE: drivers/net/depca.c:1647:
+	short sigLength = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2170: FILE: drivers/net/depca.c:1678:
+	if (j != sigLength) {
+		status = -ENODEV;	/* search failed */
+	}

CHECK:SPACING: No space is necessary after a cast
#2217: FILE: drivers/net/depca.c:1703:
+		k += (u_char) (tmp = inb(DEPCA_PROM + x));

CHECK:SPACING: No space is necessary after a cast
#2218: FILE: drivers/net/depca.c:1704:
+		dev->dev_addr[i++] = (u_char) tmp;

CHECK:SPACING: No space is necessary after a cast
#2219: FILE: drivers/net/depca.c:1705:
+		k += (u_short) ((tmp = inb(DEPCA_PROM + x)) << 8);

CHECK:SPACING: No space is necessary after a cast
#2220: FILE: drivers/net/depca.c:1706:
+		dev->dev_addr[i++] = (u_char) tmp;

CHECK:SPACING: No space is necessary after a cast
#2228: FILE: drivers/net/depca.c:1714:
+	chksum = (u_char) inb(DEPCA_PROM + x);

CHECK:SPACING: No space is necessary after a cast
#2229: FILE: drivers/net/depca.c:1715:
+	chksum |= (u_short) (inb(DEPCA_PROM + x) << 8);

CHECK:SPACING: No space is necessary after a cast
#2244: FILE: drivers/net/depca.c:1727:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2295: FILE: drivers/net/depca.c:1733:
+^I^I/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2296: FILE: drivers/net/depca.c:1734:
+		/* 
+		   ** Caution: the write order is important here... don't set up the

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2296: FILE: drivers/net/depca.c:1734:
+		/* 
+		   ** Caution: the write order is important here... don't set up the

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2298: FILE: drivers/net/depca.c:1736:
+		   ** ownership rights until all the other information is in place.
+		 */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2314: FILE: drivers/net/depca.c:1751:
+			writew(-TX_BUFF_SZ, &lp->tx_ring[i].length);	/* packet length in buffer */

CHECK:CAMELCASE: Avoid CamelCase: <ManCode>
#2377: FILE: drivers/net/depca.c:1787:
+	char ManCode[DEPCA_STRLEN];

CHECK:CAMELCASE: Avoid CamelCase: <Id>
#2380: FILE: drivers/net/depca.c:1790:
+		char Id[4];

CHECK:CAMELCASE: Avoid CamelCase: <Eisa>
#2381: FILE: drivers/net/depca.c:1791:
+	} Eisa;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "strstr"
#2395: FILE: drivers/net/depca.c:1805:
+		if (strstr(ManCode, signatures[i]) != NULL) {

CHECK:SPACING: No space is necessary after a cast
#2475: FILE: drivers/net/depca.c:1816:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2485: FILE: drivers/net/depca.c:1825:
+		printk("%s: depca open with irq %d\n", dev->name, dev->irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2486: FILE: drivers/net/depca.c:1826:
+		printk("Descriptor head addresses (CPU):\n");

CHECK:SPACING: No space is necessary after a cast
#2487: FILE: drivers/net/depca.c:1827:
+		printk("        0x%lx  0x%lx\n", (u_long) lp->rx_ring, (u_long) lp->tx_ring);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2487: FILE: drivers/net/depca.c:1827:
+		printk("        0x%lx  0x%lx\n", (u_long) lp->rx_ring, (u_long) lp->tx_ring);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2488: FILE: drivers/net/depca.c:1828:
+		printk("Descriptor addresses (CPU):\nRX: ");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2490: FILE: drivers/net/depca.c:1830:
+			if (i < 3) {
+				printk("0x%8.8lx ", (long) &lp->rx_ring[i].base);
+			}

CHECK:SPACING: No space is necessary after a cast
#2491: FILE: drivers/net/depca.c:1831:
+				printk("0x%8.8lx ", (long) &lp->rx_ring[i].base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2491: FILE: drivers/net/depca.c:1831:
+				printk("0x%8.8lx ", (long) &lp->rx_ring[i].base);

CHECK:SPACING: No space is necessary after a cast
#2494: FILE: drivers/net/depca.c:1834:
+		printk("...0x%8.8lx\n", (long) &lp->rx_ring[i].base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2494: FILE: drivers/net/depca.c:1834:
+		printk("...0x%8.8lx\n", (long) &lp->rx_ring[i].base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2495: FILE: drivers/net/depca.c:1835:
+		printk("TX: ");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2497: FILE: drivers/net/depca.c:1837:
+			if (i < 3) {
+				printk("0x%8.8lx ", (long) &lp->tx_ring[i].base);
+			}

CHECK:SPACING: No space is necessary after a cast
#2498: FILE: drivers/net/depca.c:1838:
+				printk("0x%8.8lx ", (long) &lp->tx_ring[i].base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2498: FILE: drivers/net/depca.c:1838:
+				printk("0x%8.8lx ", (long) &lp->tx_ring[i].base);

CHECK:SPACING: No space is necessary after a cast
#2501: FILE: drivers/net/depca.c:1841:
+		printk("...0x%8.8lx\n", (long) &lp->tx_ring[i].base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2501: FILE: drivers/net/depca.c:1841:
+		printk("...0x%8.8lx\n", (long) &lp->tx_ring[i].base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2502: FILE: drivers/net/depca.c:1842:
+		printk("\nDescriptor buffers (Device):\nRX: ");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2504: FILE: drivers/net/depca.c:1844:
+			if (i < 3) {
+				printk("0x%8.8x  ", readl(&lp->rx_ring[i].base));
+			}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2505: FILE: drivers/net/depca.c:1845:
+				printk("0x%8.8x  ", readl(&lp->rx_ring[i].base));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2508: FILE: drivers/net/depca.c:1848:
+		printk("...0x%8.8x\n", readl(&lp->rx_ring[i].base));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2509: FILE: drivers/net/depca.c:1849:
+		printk("TX: ");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2511: FILE: drivers/net/depca.c:1851:
+			if (i < 3) {
+				printk("0x%8.8x  ", readl(&lp->tx_ring[i].base));
+			}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2512: FILE: drivers/net/depca.c:1852:
+				printk("0x%8.8x  ", readl(&lp->tx_ring[i].base));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2515: FILE: drivers/net/depca.c:1855:
+		printk("...0x%8.8x\n", readl(&lp->tx_ring[i].base));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2516: FILE: drivers/net/depca.c:1856:
+		printk("Initialisation block at 0x%8.8lx(Phys)\n", virt_to_phys(lp->sh_mem));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2517: FILE: drivers/net/depca.c:1857:
+		printk("        mode: 0x%4.4x\n", p->mode);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2518: FILE: drivers/net/depca.c:1858:
+		printk("        physical address: ");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2519: FILE: drivers/net/depca.c:1859:
+		for (i = 0; i < ETH_ALEN - 1; i++) {
+			printk("%2.2x:", p->phys_addr[i]);
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2520: FILE: drivers/net/depca.c:1860:
+			printk("%2.2x:", p->phys_addr[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2522: FILE: drivers/net/depca.c:1862:
+		printk("%2.2x\n", p->phys_addr[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2523: FILE: drivers/net/depca.c:1863:
+		printk("        multicast hash table: ");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2524: FILE: drivers/net/depca.c:1864:
+		for (i = 0; i < (HASH_TABLE_LEN >> 3) - 1; i++) {
+			printk("%2.2x:", p->mcast_table[i]);
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2525: FILE: drivers/net/depca.c:1865:
+			printk("%2.2x:", p->mcast_table[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2527: FILE: drivers/net/depca.c:1867:
+		printk("%2.2x\n", p->mcast_table[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2528: FILE: drivers/net/depca.c:1868:
+		printk("        rx_ring at: 0x%8.8x\n", p->rx_ring);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2529: FILE: drivers/net/depca.c:1869:
+		printk("        tx_ring at: 0x%8.8x\n", p->tx_ring);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2530: FILE: drivers/net/depca.c:1870:
+		printk("buffers (Phys): 0x%8.8lx\n", virt_to_phys(lp->sh_mem) + lp->buffs_offset);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#2531: FILE: drivers/net/depca.c:1871:
+		printk("Ring size:\nRX: %d  Log2(rxRingMask): 0x%8.8x\n", (int) lp->rxRingMask + 1, lp->rx_rlen);

CHECK:SPACING: No space is necessary after a cast
#2531: FILE: drivers/net/depca.c:1871:
+		printk("Ring size:\nRX: %d  Log2(rxRingMask): 0x%8.8x\n", (int) lp->rxRingMask + 1, lp->rx_rlen);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2531: FILE: drivers/net/depca.c:1871:
+		printk("Ring size:\nRX: %d  Log2(rxRingMask): 0x%8.8x\n", (int) lp->rxRingMask + 1, lp->rx_rlen);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2532: FILE: drivers/net/depca.c:1872:
+		printk("TX: %d  Log2(txRingMask): 0x%8.8x\n", (int) lp->txRingMask + 1, lp->tx_rlen);

CHECK:SPACING: No space is necessary after a cast
#2532: FILE: drivers/net/depca.c:1872:
+		printk("TX: %d  Log2(txRingMask): 0x%8.8x\n", (int) lp->txRingMask + 1, lp->tx_rlen);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2532: FILE: drivers/net/depca.c:1872:
+		printk("TX: %d  Log2(txRingMask): 0x%8.8x\n", (int) lp->txRingMask + 1, lp->tx_rlen);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2534: FILE: drivers/net/depca.c:1874:
+		printk("CSR2&1: 0x%4.4x", inw(DEPCA_DATA));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2536: FILE: drivers/net/depca.c:1876:
+		printk("%4.4x\n", inw(DEPCA_DATA));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2538: FILE: drivers/net/depca.c:1878:
+		printk("CSR3: 0x%4.4x\n", inw(DEPCA_DATA));

CHECK:SPACING: No space is necessary after a cast
#2670: FILE: drivers/net/depca.c:1891:
+	struct depca_private *lp = (struct depca_private *) dev->priv;

CHECK:SPACING: No space is necessary after a cast
#2671: FILE: drivers/net/depca.c:1892:
+	struct depca_ioctl *ioc = (struct depca_ioctl *) &rq->ifr_data;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2684: FILE: drivers/net/depca.c:1905:
+		for (i = 0; i < ETH_ALEN; i++) {
+			tmp.addr[i] = dev->dev_addr[i];
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2698: FILE: drivers/net/depca.c:1918:
+		for (i = 0; i < ETH_ALEN; i++) {
+			dev->dev_addr[i] = tmp.addr[i];
+		}

ERROR:SPACING: space required before the open parenthesis '('
#2745: FILE: drivers/net/depca.c:1965:
+		if(!capable(CAP_NET_ADMIN))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2747: FILE: drivers/net/depca.c:1967:
+		printk("%s: Boo!\n", dev->name);

ERROR:SPACING: space required before the open parenthesis '('
#2781: FILE: drivers/net/depca.c:2001:
+		if(!buf)

CHECK:CAMELCASE: Avoid CamelCase: <thisDepca>
#2837: FILE: drivers/net/depca.c:2049:
+	thisDepca.irq = irq;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2888: FILE: drivers/net/depca.c:2080:
 
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425315.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 180 warnings, 90 checks, 2837 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425315.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
