WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
> and the system seems to suspend fine. When resuming, the bash seems to get

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#48: 
> hda: start_power_step(step: 0)
  ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#49: 
> hda: completing PM request, suspend
  ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: Documentation/power/swsusp.txt:21:
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'is'
#131: FILE: Documentation/power/swsusp.txt:58:
+You have two ways to use this code. The first one is is with a patched

WARNING:TYPO_SPELLING: 'carefull' may be misspelled - perhaps 'careful'?
#262: FILE: Documentation/power/video.txt:30:
+bios, you'll get hard crash during resume. Be carefull.
                                               ^^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#303: FILE: arch/i386/kernel/cpu/mtrr/main.c:591:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#339: FILE: arch/i386/kernel/time.c:325:
+	unsigned long sec = get_cmos_time() + clock_cmos_diff;
+	write_seqlock_irq(&xtime_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: arch/i386/kernel/time.c:327:
+^Ixtime.tv_nsec = 0; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#404: FILE: arch/x86_64/kernel/time.c:671:
+	int error = sysdev_class_register(&rtc_sysclass);
+	if (!error)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#436: FILE: drivers/acpi/thermal.c:228:
+			printk(KERN_ERR "temperature damaged while processing\n");

WARNING:LONG_LINE: line length of 160 exceeds 100 columns
#447: FILE: drivers/acpi/thermal.c:463:
+		printk(KERN_ALERT "Are you running CPU or nuclear power plant? ACPI claims CPU temp is %ld C. Ignoring.\n", KELVIN_TO_CELSIUS(tz->temperature));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#447: FILE: drivers/acpi/thermal.c:463:
+		printk(KERN_ALERT "Are you running CPU or nuclear power plant? ACPI claims CPU temp is %ld C. Ignoring.\n", KELVIN_TO_CELSIUS(tz->temperature));

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#457: FILE: drivers/acpi/thermal.c:477:
+	printk(KERN_EMERG "Critical temperature reached (%ld C), shutting down.\n", KELVIN_TO_CELSIUS(tz->temperature));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#457: FILE: drivers/acpi/thermal.c:477:
+	printk(KERN_EMERG "Critical temperature reached (%ld C), shutting down.\n", KELVIN_TO_CELSIUS(tz->temperature));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: drivers/input/power.c:84:
+^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#533: FILE: include/linux/suspend.h:46:
+extern int software_suspend(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#551: FILE: include/linux/suspend.h:57:
 }
+#define software_resume()		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#551: FILE: include/linux/suspend.h:57:
+#define software_resume()		do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#557: FILE: include/linux/suspend.h:63:
+extern int freeze_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#558: FILE: include/linux/suspend.h:64:
+extern void thaw_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#560: FILE: include/linux/suspend.h:66:
+extern int pm_prepare_console(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#561: FILE: include/linux/suspend.h:67:
+extern void pm_restore_console(void);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#568: FILE: include/linux/suspend.h:74:
 }
+static inline int freeze_processes(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#572: FILE: include/linux/suspend.h:78:
+}
+static inline void thaw_processes(void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#574: FILE: include/linux/suspend.h:80:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#575: FILE: include/linux/suspend.h:81:
+
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#640: FILE: kernel/power/swsusp.c:347:
+	BUG_ON (sizeof(struct link) != PAGE_SIZE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#640: FILE: kernel/power/swsusp.c:347:
+	BUG_ON (sizeof(struct link) != PAGE_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#649: FILE: kernel/power/swsusp.c:354:
+	BUG_ON (fill_suspend_header(&cur->sh));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: kernel/power/swsusp.c:354:
+	BUG_ON (fill_suspend_header(&cur->sh));

WARNING:LINE_SPACING: Missing a blank line after declarations
#738: FILE: kernel/power/swsusp.c:686:
+	int res;
+	if (!software_suspend_enabled)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#756: FILE: kernel/power/swsusp.c:712:
+		if ((res = device_suspend(4))==0)
 		                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#756: FILE: kernel/power/swsusp.c:712:
+		if ((res = device_suspend(4))==0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Unbalanced braces around else statement
#765: FILE: kernel/power/swsusp.c:724:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#793: FILE: kernel/power/swsusp.c:840:
+	printk(KERN_ERR "%s%s\n", name_resume, reason);

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#800: FILE: kernel/power/swsusp.c:846:
+	if (sh->version_code != LINUX_VERSION_CODE)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 20 warnings, 11 checks, 700 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
