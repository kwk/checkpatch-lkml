WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: include/linux/mm_inline.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#113: FILE: include/linux/mmzone.h:11:
+#include <asm/atomic.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: include/linux/mmzone.h:168:
+void free_area_init_core(int nid, pg_data_t *pgdat, struct page **gmap,
   unsigned long *zones_size, unsigned long paddr, unsigned long *zholes_size,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#213: FILE: mm/page_alloc.c:268:
+balance_classzone(struct zone* classzone, unsigned int gfp_mask,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: mm/page_alloc.c:269:
+balance_classzone(struct zone* classzone, unsigned int gfp_mask,
 			unsigned int order, int * freed)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#291: FILE: mm/page_alloc.c:629:
+			printk("Zone:%s"

WARNING:SPLIT_STRING: quoted string split across lines
#292: FILE: mm/page_alloc.c:630:
+			printk("Zone:%s"
+				" freepages:%6lukB"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: mm/page_alloc.c:631:
+				" freepages:%6lukB"
+				" min:%6lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#294: FILE: mm/page_alloc.c:632:
+				" min:%6lukB"
+				" low:%6lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#295: FILE: mm/page_alloc.c:633:
+				" low:%6lukB"
+				" high:%6lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: mm/page_alloc.c:634:
+				" high:%6lukB"
+				" active:%6lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: mm/page_alloc.c:635:
+				" active:%6lukB"
+				" inactive:%6lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#298: FILE: mm/page_alloc.c:636:
+				" inactive:%6lukB"
+				"\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#383: FILE: mm/swap.c:182:
+			struct zone *zone = page_zone(page);
+			list_move(&page->lru, &zone->inactive_list);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: mm/vmscan.c:279:
+shrink_cache(int nr_pages, struct zone *zone,
 		unsigned int gfp_mask, int priority, int max_scan)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: mm/vmscan.c:302:
+			page = list_entry(zone->inactive_list.prev,
+					struct page, lru);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: mm/vmscan.c:329:
+		nr_pages = shrink_list(&page_list, nr_pages,
 					gfp_mask, priority, &max_scan);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: mm/vmscan.c:458:
+shrink_zone(struct zone *zone, int priority,
+	unsigned int gfp_mask, int nr_pages)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#572: FILE: mm/vmscan.c:479:
+	atomic_add(ratio+1, &zone->refill_counter);
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: mm/vmscan.c:507:
+shrink_caches(struct zone *classzone, int priority,
+		int gfp_mask, int nr_pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: mm/vmscan.c:517:
+			nr_pages = shrink_zone(zone, priority,
+					gfp_mask, nr_pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#614: FILE: mm/vmscan.c:529:
+try_to_free_pages(struct zone *classzone,
 		unsigned int gfp_mask, unsigned int order)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: mm/vmscan.c:538:
+		nr_pages = shrink_caches(classzone, priority,
+					gfp_mask, nr_pages);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440379.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 11 warnings, 11 checks, 580 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440379.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
