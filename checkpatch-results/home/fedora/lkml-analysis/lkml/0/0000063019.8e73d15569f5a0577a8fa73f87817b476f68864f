WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
A filesystem may want to implement this operation to improve write performance.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#62: FILE: include/linux/fs.h:349:
+typedef struct write_descriptor write_descriptor_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: include/linux/fs.h:367:
+ * @actor: function to copy user data with $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#102: FILE: include/linux/fs.h:403:
+	long (*batch_write)(struct file *, const write_descriptor_t *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const write_descriptor_t *' should also have an identifier name
#102: FILE: include/linux/fs.h:403:
+	long (*batch_write)(struct file *, const write_descriptor_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pagevec *' should also have an identifier name
#102: FILE: include/linux/fs.h:403:
+	long (*batch_write)(struct file *, const write_descriptor_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#102: FILE: include/linux/fs.h:403:
+	long (*batch_write)(struct file *, const write_descriptor_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#102: FILE: include/linux/fs.h:403:
+	long (*batch_write)(struct file *, const write_descriptor_t *,

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: mm/filemap.c:2190:
+ ^I^I^I^Isize_t bytes, const write_descriptor_t *desc)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: mm/filemap.c:2190:
+ ^I^I^I^Isize_t bytes, const write_descriptor_t *desc)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: mm/filemap.c:2190:
+static size_t write_iovec_actor(struct page *page, unsigned long offset,
+ 				size_t bytes, const write_descriptor_t *desc)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: mm/filemap.c:2190:
+ ^I^I^I^Isize_t bytes, const write_descriptor_t *desc)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: mm/filemap.c:2192:
+ ^Ireturn filemap_copy_from_user_iovec(page, offset, desc->cur_iov,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: mm/filemap.c:2192:
+ ^Ireturn filemap_copy_from_user_iovec(page, offset, desc->cur_iov,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: mm/filemap.c:2192:
+ ^Ireturn filemap_copy_from_user_iovec(page, offset, desc->cur_iov,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: mm/filemap.c:2210:
+ ^I^I^I^Iconst write_descriptor_t *desc,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: mm/filemap.c:2210:
+ ^I^I^I^Iconst write_descriptor_t *desc,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: mm/filemap.c:2210:
+static long generic_batch_write(struct file *file,
+ 				const write_descriptor_t *desc,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: mm/filemap.c:2210:
+ ^I^I^I^Iconst write_descriptor_t *desc,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: mm/filemap.c:2211:
+ ^I^I^I^Istruct pagevec *lru_pvec,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: mm/filemap.c:2211:
+ ^I^I^I^Istruct pagevec *lru_pvec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: mm/filemap.c:2211:
+ ^I^I^I^Istruct pagevec *lru_pvec,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: mm/filemap.c:2212:
+ ^I^I^I^Istruct page **cached_page, size_t *written)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#189: FILE: mm/filemap.c:2212:
+ ^I^I^I^Istruct page **cached_page, size_t *written)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: mm/filemap.c:2212:
+ ^I^I^I^Istruct page **cached_page, size_t *written)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: mm/filemap.c:2214:
+ ^Iconst struct address_space_operations *a_ops = file->f_mapping->a_ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: mm/filemap.c:2214:
+ ^Iconst struct address_space_operations *a_ops = file->f_mapping->a_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: mm/filemap.c:2214:
+ ^Iconst struct address_space_operations *a_ops = file->f_mapping->a_ops;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#255: FILE: mm/filemap.c:2255:
+					      offset+bytes);
 					            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#345: FILE: mm/filemap.c:2311:
+	struct address_space * mapping = file->f_mapping;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: mm/filemap.c:2313:
+^Istruct inode ^I*inode = mapping->host;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: mm/filemap.c:2384:
+^I} while (desc.count);^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000063019.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 20 warnings, 3 checks, 360 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000063019.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
