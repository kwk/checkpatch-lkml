CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: mm/rmap.c:608:
+static int try_to_unmap_cluster(struct mm_struct *mm, unsigned long cursor,
+	unsigned int *mapcount, struct vm_area_struct *vma)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#150: FILE: mm/rmap.c:643:
+			address < end; pte++, address += PAGE_SIZE) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#159: FILE: mm/rmap.c:652:
+		BUG_ON(PageAnon(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#215: FILE: mm/rmap.c:730:
+			if (vma->vm_flags & (VM_LOCKED|VM_RESERVED))
 			                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#217: FILE: mm/rmap.c:732:
+			cursor = (unsigned long) vma->vm_private_data;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#252: FILE: mm/rmap.c:770:
+			     (VM_NONLINEAR|VM_LOCKED|VM_RESERVED)))
 			                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#252: FILE: mm/rmap.c:770:
+			     (VM_NONLINEAR|VM_LOCKED|VM_RESERVED)))
 			                            ^

CHECK:SPACING: No space is necessary after a cast
#254: FILE: mm/rmap.c:772:
+			cursor = (unsigned long) vma->vm_private_data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: mm/rmap.c:774:
+			while (vma->vm_mm->rss &&
+				cursor < max_nl_cursor &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: mm/rmap.c:777:
+				ret = try_to_unmap_cluster(vma->vm_mm,
+						cursor, &mapcount, vma);

CHECK:SPACING: No space is necessary after a cast
#263: FILE: mm/rmap.c:781:
+				vma->vm_private_data = (void *) cursor;

CHECK:SPACING: No space is necessary after a cast
#270: FILE: mm/rmap.c:788:
+					(void *) max_nl_cursor;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#282: FILE: mm/rmap.c:800:
+		if ((vma->vm_flags & (VM_NONLINEAR|VM_RESERVED)) ==
 		                                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288941.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 12 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288941.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
