WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
The patch below adds infrastructure to track "maximum allowable latency" for power

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: drivers/acpi/processor_idle.c:458:
+		if (sleep_ticks > cx->promotion.threshold.ticks &&
+			cx->promotion.state->latency <= get_acceptable_latency()) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: drivers/acpi/processor_idle.c:502:
+	if ((pr->power.state - pr->power.states) > max_cstate ||
+		pr->power.state->latency > get_acceptable_latency()) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#114: FILE: include/linux/latency.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#150: FILE: kernel/latency.c:1:
+/*

WARNING:TYPO_SPELLING: 'appart' may be misspelled - perhaps 'apart'?
#170: FILE: kernel/latency.c:21:
+ * to keep these appart, a string based identifier is used.
                  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#188: FILE: kernel/latency.c:39:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#201: FILE: kernel/latency.c:52:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#212: FILE: kernel/latency.c:63:
+	struct latency_info *info;
+	list_for_each_entry(info, &latency_list, list) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*info)...) over kmalloc(sizeof(struct latency_info)...)
#240: FILE: kernel/latency.c:91:
+	info = kmalloc(sizeof(struct latency_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#251: FILE: kernel/latency.c:102:
+		if (strcmp(iter->identifier, identifier)==0) {
 		                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#296: FILE: kernel/latency.c:147:
+		if (strcmp(iter->identifier, identifier)==0)
 		                                        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#326: FILE: kernel/latency.c:177:
+		if (strcmp(iter->identifier, identifier)==0)
 		                                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#358: FILE: kernel/latency.c:209:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: kernel/latency.c:213:
+                                  struct tty_struct *tty)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: kernel/latency.c:213:
+static void sysrq_handle_latlist(int key, struct pt_regs *pt_regs,
+                                  struct tty_struct *tty)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: kernel/latency.c:213:
+                                  struct tty_struct *tty)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#368: FILE: kernel/latency.c:219:
+	printk(KERN_INFO "Latency restrictions list\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#369: FILE: kernel/latency.c:220:
+	printk(KERN_INFO "-------------------------\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#370: FILE: kernel/latency.c:221:
+	printk(KERN_INFO "Current minimum\t: %i\n", get_acceptable_latency());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#372: FILE: kernel/latency.c:223:
+		printk(KERN_INFO "%s\t\t: %i\n", info->identifier, info->usecs);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#374: FILE: kernel/latency.c:225:
+	printk(KERN_INFO "-------------------------\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#377: FILE: kernel/latency.c:228:
+}
+static struct sysrq_key_op sysrq_latlist_op = {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#390: FILE: kernel/latency.c:241:
+	set_acceptable_latency("kernel", 2*1000000/HZ);
 	                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#390: FILE: kernel/latency.c:241:
+	set_acceptable_latency("kernel", 2*1000000/HZ);
 	                                          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000044368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 12 warnings, 9 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000044368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
