CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/linux/netfilter_ipv4.h:82:
+extern int ip_xfrm_me_harder(struct sk_buff **pskb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BAD_SIGN_OFF: Duplicate signature
#196: 
Signed-off-by: Patrick McHardy <kaber@trash.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#245: FILE: include/linux/netfilter.h:230:
+if ((__ret=nf_hook_thresh(pf, hook, &(skb), indev, outdev, okfn, thresh, 1)) == 1)\
           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#245: FILE: include/linux/netfilter.h:230:
+if ((__ret=nf_hook_thresh(pf, hook, &(skb), indev, outdev, okfn, thresh, 1)) == 1)\

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ';' (ctx:VxV)
#247: FILE: include/linux/netfilter.h:232:
+__ret;})
      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#249: FILE: include/linux/netfilter.h:234:
+#define NF_HOOK_COND(pf, hook, skb, indev, outdev, okfn, cond)		       \
+({int __ret;								       \
+if ((__ret=nf_hook_thresh(pf, hook, &(skb), indev, outdev, okfn, INT_MIN, cond)) == 1)\
 	__ret = (okfn)(skb);						       \
 __ret;})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'okfn' - possible side-effects?
#249: FILE: include/linux/netfilter.h:234:
+#define NF_HOOK_COND(pf, hook, skb, indev, outdev, okfn, cond)		       \
+({int __ret;								       \
+if ((__ret=nf_hook_thresh(pf, hook, &(skb), indev, outdev, okfn, INT_MIN, cond)) == 1)\
 	__ret = (okfn)(skb);						       \
 __ret;})

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#251: FILE: include/linux/netfilter.h:236:
+if ((__ret=nf_hook_thresh(pf, hook, &(skb), indev, outdev, okfn, INT_MIN, cond)) == 1)\
           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#251: FILE: include/linux/netfilter.h:236:
+if ((__ret=nf_hook_thresh(pf, hook, &(skb), indev, outdev, okfn, INT_MIN, cond)) == 1)\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#259: FILE: include/linux/netfilter.h:307:
+#define NF_HOOK_COND(pf, hook, skb, indev, outdev, okfn, cond) (okfn)(skb)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb->dst->xfrm"
#318: FILE: net/ipv4/ip_output.c:210:
+	if (skb->dst->xfrm != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: net/ipv4/ip_output.c:291:
+^I^I            ip_finish_output,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103850.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 1 warnings, 4 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103850.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
