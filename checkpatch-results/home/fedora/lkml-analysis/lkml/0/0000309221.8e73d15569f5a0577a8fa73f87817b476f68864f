WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -u -p linux/drivers/net/irda.d6/mcp2120-sir.c  linux/drivers/net/irda/mcp2120-sir.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: drivers/net/irda/mcp2120-sir.c:1:
+/*********************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#40: FILE: drivers/net/irda/mcp2120-sir.c:2:
+ *            $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#41: FILE: drivers/net/irda/mcp2120-sir.c:3:
+ *    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: drivers/net/irda/mcp2120-sir.c:11:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#51: FILE: drivers/net/irda/mcp2120-sir.c:13:
+ *      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: drivers/net/irda/mcp2120-sir.c:14:
+ *     This program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: drivers/net/irda/mcp2120-sir.c:15:
+ *     modify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: drivers/net/irda/mcp2120-sir.c:16:
+ *     published by the Free Software Foundation; either version 2 of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/net/irda/mcp2120-sir.c:18:
+ *  $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#70: FILE: drivers/net/irda/mcp2120-sir.c:32:
+static int mcp2120_change_speed(struct sir_dev *dev, unsigned speed);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#104: FILE: drivers/net/irda/mcp2120-sir.c:66:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: drivers/net/irda/mcp2120-sir.c:70:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: drivers/net/irda/mcp2120-sir.c:70:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: drivers/net/irda/mcp2120-sir.c:70:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: drivers/net/irda/mcp2120-sir.c:70:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                                         ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#117: FILE: drivers/net/irda/mcp2120-sir.c:79:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: drivers/net/irda/mcp2120-sir.c:82:
+        /* reset and inhibit mcp2120 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#128: FILE: drivers/net/irda/mcp2120-sir.c:90:
+/*
+ * Function mcp2120_change_speed (dev, speed)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#134: FILE: drivers/net/irda/mcp2120-sir.c:96:
+#define MCP2120_STATE_WAIT_SPEED	(SIRDEV_STATE_DONGLE_SPEED+1)
                                 	                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#136: FILE: drivers/net/irda/mcp2120-sir.c:98:
+static int mcp2120_change_speed(struct sir_dev *dev, unsigned speed)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#138: FILE: drivers/net/irda/mcp2120-sir.c:100:
+	unsigned state = dev->fsm.substate;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: drivers/net/irda/mcp2120-sir.c:101:
+	unsigned delay = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#141: FILE: drivers/net/irda/mcp2120-sir.c:103:
+	static int ret = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#143: FILE: drivers/net/irda/mcp2120-sir.c:105:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/net/irda/mcp2120-sir.c:111:
+                udelay(500);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/net/irda/mcp2120-sir.c:111:
+                udelay(500);$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#149: FILE: drivers/net/irda/mcp2120-sir.c:111:
+                udelay(500);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#156: FILE: drivers/net/irda/mcp2120-sir.c:118:
+			/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: drivers/net/irda/mcp2120-sir.c:121:
+                        //printk("mcp2120 9600\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: drivers/net/irda/mcp2120-sir.c:125:
+                        //printk("mcp2120 19200\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: drivers/net/irda/mcp2120-sir.c:129:
+                        //printk("mcp2120 38400\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: drivers/net/irda/mcp2120-sir.c:133:
+                        //printk("mcp2120 57600\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: drivers/net/irda/mcp2120-sir.c:136:
+                        control[0] = MCP2120_115200;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/net/irda/mcp2120-sir.c:136:
+                        control[0] = MCP2120_115200;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: drivers/net/irda/mcp2120-sir.c:137:
+                        //printk("mcp2120 115200\n");$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: drivers/net/irda/mcp2120-sir.c:141:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/net/irda/mcp2120-sir.c:148:
+                //printk("mcp2120_change_speed: dongle_speed\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/net/irda/mcp2120-sir.c:154:
+                //printk("mcp2120_change_speed: mcp_wait\n");$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#196: FILE: drivers/net/irda/mcp2120-sir.c:158:
+		ERROR("%s(), undefine state %d\n", __FUNCTION__, state);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#205: FILE: drivers/net/irda/mcp2120-sir.c:167:
+/*
+ * Function mcp2120_reset (driver)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: drivers/net/irda/mcp2120-sir.c:170:
+ *      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/net/irda/mcp2120-sir.c:178:
+ *      $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#219: FILE: drivers/net/irda/mcp2120-sir.c:181:
+#define MCP2120_STATE_WAIT1_RESET	(SIRDEV_STATE_DONGLE_RESET+1)
                                  	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#220: FILE: drivers/net/irda/mcp2120-sir.c:182:
+#define MCP2120_STATE_WAIT2_RESET	(SIRDEV_STATE_DONGLE_RESET+2)
                                  	                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#224: FILE: drivers/net/irda/mcp2120-sir.c:186:
+	unsigned state = dev->fsm.substate;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#225: FILE: drivers/net/irda/mcp2120-sir.c:187:
+	unsigned delay = 0;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#228: FILE: drivers/net/irda/mcp2120-sir.c:190:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/net/irda/mcp2120-sir.c:194:
+                //printk("mcp2120_reset: dongle_reset\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: drivers/net/irda/mcp2120-sir.c:202:
+                //printk("mcp2120_reset: mcp2120_wait1\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: drivers/net/irda/mcp2120-sir.c:203:
+                /* clear RTS and wait for at least 30 ms. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/net/irda/mcp2120-sir.c:210:
+                //printk("mcp2120_reset mcp2120_wait2\n");$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#254: FILE: drivers/net/irda/mcp2120-sir.c:216:
+		ERROR("%s(), undefined state %d\n", __FUNCTION__, state);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000309221.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 19 warnings, 8 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000309221.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
