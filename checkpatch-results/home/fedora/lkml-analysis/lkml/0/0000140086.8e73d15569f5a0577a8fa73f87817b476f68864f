WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
 drivers/scsi/libata-core.c  |   80 +++++++++++++++-----------------------------

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#129: FILE: drivers/scsi/ahci.c:679:
+					dev_printk(KERN_WARNING, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: drivers/scsi/ahci.c:680:
+					dev_printk(KERN_WARNING, &pdev->dev,
+					  "unhandled interrupt on port %u\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#144: FILE: drivers/scsi/ahci.c:690:
+				dev_printk(KERN_WARNING, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/scsi/ahci.c:691:
+				dev_printk(KERN_WARNING, &pdev->dev,
+					"interrupt on disabled port %u\n", i);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#155: FILE: drivers/scsi/ahci.c:763:
+		dev_printk(KERN_ERR, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#166: FILE: drivers/scsi/ahci.c:792:
+				dev_printk(KERN_ERR, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#176: FILE: drivers/scsi/ahci.c:800:
+			dev_printk(KERN_ERR, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#184: FILE: drivers/scsi/ahci.c:806:
+			dev_printk(KERN_ERR, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#194: FILE: drivers/scsi/ahci.c:910:
+	dev_printk(KERN_INFO, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/scsi/ahci.c:911:
+	dev_printk(KERN_INFO, &pdev->dev,
+		"AHCI %02x%02x.%02x%02x "

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#207: FILE: drivers/scsi/ahci.c:926:
+	dev_printk(KERN_INFO, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: drivers/scsi/ahci.c:927:
+	dev_printk(KERN_INFO, &pdev->dev,
+		"flags: "

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#221: FILE: drivers/scsi/ahci.c:963:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#247: FILE: drivers/scsi/ata_piix.c:629:
+		dev_printk(KERN_DEBUG, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#267: FILE: drivers/scsi/ata_piix.c:676:
+		dev_printk(KERN_WARNING, &pdev->dev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#404: FILE: drivers/scsi/libata-core.c:3140:
+	printk(KERN_WARNING "ata%u: PIO error\n", ap->id);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#491: FILE: drivers/scsi/libata-core.c:4530:
+static struct ata_probe_ent *ata_pci_init_legacy_port(struct pci_dev *pdev, struct ata_port_info *port, int port_num)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BRACES: braces {} are not necessary for single statement blocks
#560: FILE: drivers/scsi/libata-scsi.c:660:
+	else {
+		/* TODO: C/H/S */
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#560: FILE: drivers/scsi/libata-scsi.c:660:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: drivers/scsi/libata-scsi.c:1215:
+ ^Iint need_sense = (err_mask != 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#577: FILE: drivers/scsi/libata-scsi.c:1215:
+ ^Iint need_sense = (err_mask != 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/scsi/libata-scsi.c:1215:
+ ^Iint need_sense = (err_mask != 0);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdb[0] == ATA_16'
#587: FILE: drivers/scsi/libata-scsi.c:1224:
+	if (((cdb[0] == ATA_16) || (cdb[0] == ATA_12)) &&
+ 	    ((cdb[2] & 0x20) || need_sense)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cdb[0] == ATA_12'
#587: FILE: drivers/scsi/libata-scsi.c:1224:
+	if (((cdb[0] == ATA_16) || (cdb[0] == ATA_12)) &&
+ 	    ((cdb[2] & 0x20) || need_sense)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: drivers/scsi/libata-scsi.c:1225:
+ ^I    ((cdb[2] & 0x20) || need_sense)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#588: FILE: drivers/scsi/libata-scsi.c:1225:
+ ^I    ((cdb[2] & 0x20) || need_sense)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: drivers/scsi/libata-scsi.c:1225:
+	if (((cdb[0] == ATA_16) || (cdb[0] == ATA_12)) &&
+ 	    ((cdb[2] & 0x20) || need_sense)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/scsi/libata-scsi.c:1225:
+ ^I    ((cdb[2] & 0x20) || need_sense)) {$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#641: FILE: drivers/scsi/libata.h:42:
+extern int ata_qc_complete_noop(struct ata_queued_cmd *qc, unsigned int err_mask);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#700: FILE: drivers/scsi/pdc_adma.c:630:
+		dev_printk(KERN_ERR, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: drivers/scsi/pdc_adma.c:631:
+		dev_printk(KERN_ERR, &pdev->dev,
+			"32-bit DMA enable failed\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#709: FILE: drivers/scsi/pdc_adma.c:636:
+		dev_printk(KERN_ERR, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#710: FILE: drivers/scsi/pdc_adma.c:637:
+		dev_printk(KERN_ERR, &pdev->dev,
+			"32-bit consistent DMA enable failed\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#719: FILE: drivers/scsi/pdc_adma.c:653:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#826: FILE: drivers/scsi/sata_mv.c:1441:
+	dev_printk(KERN_INFO, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: drivers/scsi/sata_mv.c:1442:
+	dev_printk(KERN_INFO, &pdev->dev,
+	       "%u slots %u ports %s mode IRQ via %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: drivers/scsi/sata_mv.c:1443:
+^I       (unsigned)MV_MAX_Q_DEPTH, probe_ent->n_ports, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#828: FILE: drivers/scsi/sata_mv.c:1443:
+	       (unsigned)MV_MAX_Q_DEPTH, probe_ent->n_ports, 

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#840: FILE: drivers/scsi/sata_mv.c:1465:
+		dev_printk(KERN_INFO, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#861: FILE: drivers/scsi/sata_nv.c:387:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#930: FILE: drivers/scsi/sata_promise.c:637:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#957: FILE: drivers/scsi/sata_qstor.c:409:
+						ata_qc_complete(qc,
+							ac_err_mask(sDST));

CHECK:CAMELCASE: Avoid CamelCase: <sDST>
#957: FILE: drivers/scsi/sata_qstor.c:409:
+							ac_err_mask(sDST));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#977: FILE: drivers/scsi/sata_qstor.c:604:
+				dev_printk(KERN_ERR, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#988: FILE: drivers/scsi/sata_qstor.c:612:
+			dev_printk(KERN_ERR, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#989: FILE: drivers/scsi/sata_qstor.c:613:
+			dev_printk(KERN_ERR, &pdev->dev,
+				"32-bit DMA enable failed\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#997: FILE: drivers/scsi/sata_qstor.c:618:
+			dev_printk(KERN_ERR, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#998: FILE: drivers/scsi/sata_qstor.c:619:
+			dev_printk(KERN_ERR, &pdev->dev,
+				"32-bit consistent DMA enable failed\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1007: FILE: drivers/scsi/sata_qstor.c:636:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1028: FILE: drivers/scsi/sata_sil.c:390:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#1038: FILE: drivers/scsi/sata_sil.c:467:
+		dev_printk(KERN_WARNING, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1039: FILE: drivers/scsi/sata_sil.c:468:
+		dev_printk(KERN_WARNING, &pdev->dev,
+			 "cache line size not set.  Driver may not function\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1089: FILE: drivers/scsi/sata_sil24.c:502:
+		printk(KERN_ERR "ata%u: BUG: timeout without command\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1145: FILE: drivers/scsi/sata_sil24.c:694:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#1155: FILE: drivers/scsi/sata_sil24.c:754:
+		dev_printk(KERN_ERR, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#1163: FILE: drivers/scsi/sata_sil24.c:760:
+		dev_printk(KERN_ERR, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#1175: FILE: drivers/scsi/sata_sil24.c:797:
+				dev_printk(KERN_ERR, &pdev->dev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1176: FILE: drivers/scsi/sata_sil24.c:798:
+^I^I^I^I           "failed to clear port RST\n");$

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#1187: FILE: drivers/scsi/sata_sil24.c:827:
+			dev_printk(KERN_ERR, &pdev->dev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1188: FILE: drivers/scsi/sata_sil24.c:828:
+^I^I^I           "failed to reset controller\n");$

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#1217: FILE: drivers/scsi/sata_sis.c:251:
+		dev_printk(KERN_INFO, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#1227: FILE: drivers/scsi/sata_sis.c:296:
+			dev_printk(KERN_INFO, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#1233: FILE: drivers/scsi/sata_sis.c:301:
+			dev_printk(KERN_INFO, &pdev->dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#1240: FILE: drivers/scsi/sata_sis.c:307:
+		dev_printk(KERN_INFO, &pdev->dev, "Detected SiS 182 chipset\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1261: FILE: drivers/scsi/sata_svw.c:366:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1327: FILE: drivers/scsi/sata_sx4.c:1389:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#1355: FILE: drivers/scsi/sata_uli.c:190:
+		dev_printk(KERN_INFO, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#1378: FILE: drivers/scsi/sata_via.c:263:
+	dev_printk(KERN_INFO, &pdev->dev, "routed to hard irq line %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1379: FILE: drivers/scsi/sata_via.c:264:
+	dev_printk(KERN_INFO, &pdev->dev, "routed to hard irq line %d\n",
 	       (int) (tmp8 & 0xf0) == 0xf0 ? 0 : tmp8 & 0x0f);

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1386: FILE: drivers/scsi/sata_via.c:269:
+		dev_printk(KERN_DEBUG, &pdev->dev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1388: FILE: drivers/scsi/sata_via.c:271:
+^I^I           (int) tmp8);$

CHECK:SPACING: No space is necessary after a cast
#1388: FILE: drivers/scsi/sata_via.c:271:
+		           (int) tmp8);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1398: FILE: drivers/scsi/sata_via.c:279:
+		dev_printk(KERN_DEBUG, &pdev->dev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1400: FILE: drivers/scsi/sata_via.c:281:
+^I^I           (int) tmp8);$

CHECK:SPACING: No space is necessary after a cast
#1400: FILE: drivers/scsi/sata_via.c:281:
+		           (int) tmp8);

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1410: FILE: drivers/scsi/sata_via.c:289:
+		dev_printk(KERN_DEBUG, &pdev->dev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1412: FILE: drivers/scsi/sata_via.c:291:
+^I^I           (int) tmp8);$

CHECK:SPACING: No space is necessary after a cast
#1412: FILE: drivers/scsi/sata_via.c:291:
+		           (int) tmp8);

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1421: FILE: drivers/scsi/sata_via.c:309:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#1431: FILE: drivers/scsi/sata_via.c:324:
+			dev_printk(KERN_ERR, &pdev->dev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1433: FILE: drivers/scsi/sata_via.c:326:
+^I^I       ^I^I   (int) tmp8);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1433: FILE: drivers/scsi/sata_via.c:326:
+^I^I       ^I^I   (int) tmp8);$

CHECK:SPACING: No space is necessary after a cast
#1433: FILE: drivers/scsi/sata_via.c:326:
+		       		   (int) tmp8);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#1445: FILE: drivers/scsi/sata_via.c:339:
+			dev_printk(KERN_ERR, &pdev->dev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1448: FILE: drivers/scsi/sata_via.c:342:
+^I^I^I           pci_resource_start(pdev, i),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1449: FILE: drivers/scsi/sata_via.c:343:
+^I^I^I           pci_resource_len(pdev, i));$

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#1459: FILE: drivers/scsi/sata_via.c:361:
+		dev_printk(KERN_ERR, &pdev->dev, "out of memory\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#1480: FILE: drivers/scsi/sata_vsc.c:299:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1532: FILE: include/linux/libata.h:463:
+extern void ata_qc_complete(struct ata_queued_cmd *qc, unsigned int err_mask);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1552: FILE: include/linux/libata.h:738:
+	unsigned int mask = ac_err_mask(status);
+	if (mask == 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140086.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 57 warnings, 23 checks, 1301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140086.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
