WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
This patch is to show that the swap-handling part of swsusp is really independent

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: kernel/power/swap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#112: FILE: kernel/power/swap.c:36:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#113: FILE: kernel/power/swap.c:37:
+#include <asm/mmu_context.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#114: FILE: kernel/power/swap.c:38:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#116: FILE: kernel/power/swap.c:40:
+#include <asm/io.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#128: FILE: kernel/power/swap.c:52:
+extern char resume_file[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#130: FILE: kernel/power/swap.c:54:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#135: FILE: kernel/power/swap.c:59:
+	u8 key_iv[MAXKEY+MAXIV];
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#139: FILE: kernel/power/swap.c:63:
+} __attribute__((packed, aligned(PAGE_SIZE))) swsusp_header;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#139: FILE: kernel/power/swap.c:63:
+} __attribute__((packed, aligned(PAGE_SIZE))) swsusp_header;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: kernel/power/swap.c:79:
+static int write_page(unsigned long addr, swp_entry_t * loc);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: kernel/power/swap.c:80:
+static int bio_read_page(pgoff_t page_off, void * page);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: kernel/power/swap.c:82:
+static u8 key_iv[MAXKEY+MAXIV];
                        ^

ERROR:SPACING: space required before the open parenthesis '('
#172: FILE: kernel/power/swap.c:96:
+	if(!tfm) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#173: FILE: kernel/power/swap.c:97:
+		printk(KERN_ERR "swsusp: no tfm, %s\n", modemsg);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#178: FILE: kernel/power/swap.c:102:
+	if(MAXKEY < crypto_tfm_alg_min_keysize(tfm)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required before the open parenthesis '('
#178: FILE: kernel/power/swap.c:102:
+	if(MAXKEY < crypto_tfm_alg_min_keysize(tfm)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#179: FILE: kernel/power/swap.c:103:
+		printk(KERN_ERR "swsusp: key buffer too small, %s\n", modemsg);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#185: FILE: kernel/power/swap.c:109:
+		get_random_bytes(key_iv, MAXKEY+MAXIV);
 		                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#192: FILE: kernel/power/swap.c:116:
+		printk(KERN_ERR "swsusp: key setup failure, %s\n", modemsg);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#199: FILE: kernel/power/swap.c:123:
+	if (MAXIV < len) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#200: FILE: kernel/power/swap.c:124:
+		printk(KERN_ERR "swsusp: iv buffer too small, %s\n", modemsg);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: kernel/power/swap.c:129:
+	crypto_cipher_set_iv(tfm, key_iv+MAXKEY, len);
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#207: FILE: kernel/power/swap.c:131:
+	*mem=(void *)tfm;
 	    ^

WARNING:INLINE: plain inline is preferred over __inline__
#215: FILE: kernel/power/swap.c:139:
+static __inline__ void crypto_exit(void *mem)

WARNING:INLINE: plain inline is preferred over __inline__
#220: FILE: kernel/power/swap.c:144:
+static __inline__ int crypto_write(unsigned long addr, swp_entry_t *entry, void *mem)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: kernel/power/swap.c:157:
+	error = crypto_cipher_encrypt((struct crypto_tfm *)mem, &dst, &src,
+					PAGE_SIZE);

WARNING:INLINE: plain inline is preferred over __inline__
#240: FILE: kernel/power/swap.c:164:
+static __inline__ int crypto_read(unsigned long offset, void *buf, void *mem)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#251: FILE: kernel/power/swap.c:175:
+		src.page = dst.page = virt_to_page(buf);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: kernel/power/swap.c:178:
+		error = crypto_cipher_decrypt((struct crypto_tfm *)mem, &dst,
+						&src, PAGE_SIZE);

WARNING:INLINE: plain inline is preferred over __inline__
#259: FILE: kernel/power/swap.c:183:
+static __inline__ int crypto_init(int mode, void *mem)

WARNING:INLINE: plain inline is preferred over __inline__
#264: FILE: kernel/power/swap.c:188:
+static __inline__ void crypto_exit(void *mem)

WARNING:INLINE: plain inline is preferred over __inline__
#268: FILE: kernel/power/swap.c:192:
+static __inline__ int crypto_write(unsigned long addr, swp_entry_t *entry, void *mem)

WARNING:INLINE: plain inline is preferred over __inline__
#273: FILE: kernel/power/swap.c:197:
+static __inline__ int crypto_read(unsigned long offset, void *buf, void *mem)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: kernel/power/swap.c:210:
+	if (!memcmp("SWAP-SPACE",swsusp_header.sig, 10) ||
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: kernel/power/swap.c:211:
+	    !memcmp("SWAPSPACE2",swsusp_header.sig, 10)) {
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#288: FILE: kernel/power/swap.c:212:
+		memcpy(swsusp_header.orig_sig,swsusp_header.sig, 10);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#289: FILE: kernel/power/swap.c:213:
+		memcpy(swsusp_header.sig,SWSUSP_SIG, 10);
 		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#290: FILE: kernel/power/swap.c:214:
+		memcpy(swsusp_header.key_iv, key_iv, MAXKEY+MAXIV);
 		                                           ^

CHECK:SPACING: No space is necessary after a cast
#323: FILE: kernel/power/swap.c:247:
+static int swsusp_swap_check(void) /* This is called before saving image */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#327: FILE: kernel/power/swap.c:251:
+	len=strlen(resume_file);
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#331: FILE: kernel/power/swap.c:255:
+	for (i=0; i<MAX_SWAPFILES; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#331: FILE: kernel/power/swap.c:255:
+	for (i=0; i<MAX_SWAPFILES; i++) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#333: FILE: kernel/power/swap.c:257:
+			swapfile_used[i]=SWAPFILE_UNUSED;
 			                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: kernel/power/swap.c:260:
+^I    ^I^I^Iprintk(KERN_WARNING "resume= option should be used to set suspend device" );$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#336: FILE: kernel/power/swap.c:260:
+^I    ^I^I^Iprintk(KERN_WARNING "resume= option should be used to set suspend device" );$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#336: FILE: kernel/power/swap.c:260:
+	    			printk(KERN_WARNING "resume= option should be used to set suspend device" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#336: FILE: kernel/power/swap.c:260:
+	    			printk(KERN_WARNING "resume= option should be used to set suspend device" );

CHECK:BRACES: braces {} should be used on all arms of this statement
#337: FILE: kernel/power/swap.c:261:
+				if (root_swap == 0xFFFF) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#340: FILE: kernel/power/swap.c:264:
+				} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: kernel/power/swap.c:267:
+^I  ^I^I^I/* we ignore all swap devices that are not the resume_file */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#343: FILE: kernel/power/swap.c:267:
+^I  ^I^I^I/* we ignore all swap devices that are not the resume_file */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: kernel/power/swap.c:272:
+^I^I^I^I  ^Iswapfile_used[i] = SWAPFILE_IGNORED;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: kernel/power/swap.c:272:
+^I^I^I^I  ^Iswapfile_used[i] = SWAPFILE_IGNORED;$

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#368: FILE: kernel/power/swap.c:292:
+	for (i = 0; i< MAX_SWAPFILES; i++)
 	             ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#369: FILE: kernel/power/swap.c:293:
+		if (swapfile_used[i] == SWAPFILE_IGNORED) {
+			swap_info[i].flags ^= SWP_WRITEOK;
+		}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#387: FILE: kernel/power/swap.c:311:
+static int write_page(unsigned long addr, swp_entry_t * loc)

CHECK:BRACES: braces {} should be used on all arms of this statement
#393: FILE: kernel/power/swap.c:317:
+	if (swp_offset(entry) &&
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#401: FILE: kernel/power/swap.c:325:
+	} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: kernel/power/swap.c:332:
+	pr_debug(" swsusp: Version: %u\n",swsusp_info.version_code);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: kernel/power/swap.c:333:
+	pr_debug(" swsusp: Num Pages: %ld\n",swsusp_info.num_physpages);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: kernel/power/swap.c:334:
+	pr_debug(" swsusp: UTS Sys: %s\n",swsusp_info.uts.sysname);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#411: FILE: kernel/power/swap.c:335:
+	pr_debug(" swsusp: UTS Node: %s\n",swsusp_info.uts.nodename);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#412: FILE: kernel/power/swap.c:336:
+	pr_debug(" swsusp: UTS Release: %s\n",swsusp_info.uts.release);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: kernel/power/swap.c:337:
+	pr_debug(" swsusp: UTS Version: %s\n",swsusp_info.uts.version);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#414: FILE: kernel/power/swap.c:338:
+	pr_debug(" swsusp: UTS Machine: %s\n",swsusp_info.uts.machine);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#415: FILE: kernel/power/swap.c:339:
+	pr_debug(" swsusp: UTS Domain: %s\n",swsusp_info.uts.domainname);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#416: FILE: kernel/power/swap.c:340:
+	pr_debug(" swsusp: CPUs: %d\n",swsusp_info.cpus);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#417: FILE: kernel/power/swap.c:341:
+	pr_debug(" swsusp: Image: %ld Pages\n",swsusp_info.image_pages);
 	                                      ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#421: FILE: kernel/power/swap.c:345:
+static void init_header(unsigned nr_pages, unsigned img_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#421: FILE: kernel/power/swap.c:345:
+static void init_header(unsigned nr_pages, unsigned img_pages)

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#424: FILE: kernel/power/swap.c:348:
+	swsusp_info.version_code = LINUX_VERSION_CODE;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#441: FILE: kernel/power/swap.c:365:
+		printk( "S" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#441: FILE: kernel/power/swap.c:365:
+		printk( "S" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#441: FILE: kernel/power/swap.c:365:
+		printk( "S" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#443: FILE: kernel/power/swap.c:367:
+		printk( "|\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#443: FILE: kernel/power/swap.c:367:
+		printk( "|\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#443: FILE: kernel/power/swap.c:367:
+		printk( "|\n" );

WARNING:NEW_TYPEDEFS: do not add new typedefs
#485: FILE: kernel/power/swap.c:409:
+typedef struct swp_map_page swp_map_t;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#498: FILE: kernel/power/swap.c:422:
+static swp_map_t *alloc_swp_map(unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#501: FILE: kernel/power/swap.c:425:
+	unsigned n = 0;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_swp_map', this function's name, in a string
#506: FILE: kernel/power/swap.c:430:
+	pr_debug("alloc_swp_map(): nr_pages = %d\n", nr_pages);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#546: FILE: kernel/power/swap.c:470:
+		if ((error = write_page((unsigned long)swp_map, &entry)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#569: FILE: kernel/power/swap.c:493:
+static int save_image(swp_map_t *swp, unsigned nr_pages, void *buf)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#571: FILE: kernel/power/swap.c:495:
+	unsigned n, k;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#573: FILE: kernel/power/swap.c:497:
+	unsigned mod = nr_pages / 100;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#576: FILE: kernel/power/swap.c:500:
+	if ((error = crypto_init(1, &tfm)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#578: FILE: kernel/power/swap.c:502:
+	printk("Writing data to swap (%d pages) ...     ", nr_pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: kernel/power/swap.c:509:
+				error = crypto_write((unsigned long)buf,
+						swp->entries + k, tfm);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#591: FILE: kernel/power/swap.c:515:
+				printk("\b\b\b\b%3d%%", n / mod);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#595: FILE: kernel/power/swap.c:519:
+	printk("\b\b\b\bdone\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#602: FILE: kernel/power/swap.c:526:
+	unsigned k;

WARNING:TYPO_SPELLING: 'avaiable' may be misspelled - perhaps 'available'?
#616: FILE: kernel/power/swap.c:540:
+ *	space avaiable.
   	      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#638: FILE: kernel/power/swap.c:562:
+	unsigned nr_pages;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#645: FILE: kernel/power/swap.c:569:
+		printk(KERN_ERR "swsusp: Not enough free swap\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#660: FILE: kernel/power/swap.c:584:
+	if ((error = save_image(swp_map, nr_pages, buffer)))

CHECK:CAMELCASE: Avoid CamelCase: <Free_pages_entries>
#661: FILE: kernel/power/swap.c:585:
+		goto Free_pages_entries;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#662: FILE: kernel/power/swap.c:586:
+	if ((error = snapshot_finish()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#665: FILE: kernel/power/swap.c:589:
+	if ((error = save_swp_map(swp_map, &swsusp_info.start)))

CHECK:CAMELCASE: Avoid CamelCase: <Free_map_entries>
#666: FILE: kernel/power/swap.c:590:
+		goto Free_map_entries;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#667: FILE: kernel/power/swap.c:591:
+	if ((error = close_swap()))

CHECK:CAMELCASE: Avoid CamelCase: <Free_mem>
#670: FILE: kernel/power/swap.c:594:
+Free_mem:

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#673: FILE: kernel/power/swap.c:597:
+	memset(key_iv, 0, MAXKEY+MAXIV);
 	                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#692: FILE: kernel/power/swap.c:616:
+	if ((error = swsusp_swap_check())) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#693: FILE: kernel/power/swap.c:617:
+		printk(KERN_ERR "swsusp: cannot find swap device, try swapon -a.\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#714: FILE: kernel/power/swap.c:638:
+static int end_io(struct bio * bio, unsigned int num, int err)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#722: FILE: kernel/power/swap.c:646:
+static struct block_device * resume_bdev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#735: FILE: kernel/power/swap.c:659:
+static int submit(int rw, pgoff_t page_off, void * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#738: FILE: kernel/power/swap.c:662:
+	struct bio * bio;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#749: FILE: kernel/power/swap.c:673:
+		printk("swsusp: ERROR: adding page to bio at %ld\n",page_off);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#749: FILE: kernel/power/swap.c:673:
+		printk("swsusp: ERROR: adding page to bio at %ld\n",page_off);
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#751: FILE: kernel/power/swap.c:675:
+		goto Done;

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#760: FILE: kernel/power/swap.c:684:
+		yield();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#767: FILE: kernel/power/swap.c:691:
+static int bio_read_page(pgoff_t page_off, void * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#772: FILE: kernel/power/swap.c:696:
+static int bio_write_page(pgoff_t page_off, void * page)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#784: FILE: kernel/power/swap.c:708:
+static int load_image(unsigned nr_pages, swp_entry_t start)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#788: FILE: kernel/power/swap.c:712:
+	unsigned n, k;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#791: FILE: kernel/power/swap.c:715:
+	unsigned mod = nr_pages / 100;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#797: FILE: kernel/power/swap.c:721:
+	if ((error = crypto_init(0, &tfm)))

CHECK:CAMELCASE: Avoid CamelCase: <Crypto_exit>
#803: FILE: kernel/power/swap.c:727:
+		goto Crypto_exit;

CHECK:CAMELCASE: Avoid CamelCase: <Free_buf>
#808: FILE: kernel/power/swap.c:732:
+		goto Free_buf;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#810: FILE: kernel/power/swap.c:734:
+	printk("Loading data from swap (%d pages) ...     ", nr_pages);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#813: FILE: kernel/power/swap.c:737:
+		if ((error = crypto_read(offset, (void *)swp, tfm)))

CHECK:CAMELCASE: Avoid CamelCase: <Free>
#814: FILE: kernel/power/swap.c:738:
+			goto Free;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#822: FILE: kernel/power/swap.c:746:
+				printk("\b\b\b\b%3d%%", n / mod);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#826: FILE: kernel/power/swap.c:750:
+	printk("\b\b\b\bdone\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#841: FILE: kernel/power/swap.c:765:
+static const char * sanity_check(void)

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#844: FILE: kernel/power/swap.c:768:
+	if (swsusp_info.version_code != LINUX_VERSION_CODE)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#848: FILE: kernel/power/swap.c:772:
+	if (strcmp(swsusp_info.uts.sysname,system_utsname.sysname))
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#850: FILE: kernel/power/swap.c:774:
+	if (strcmp(swsusp_info.uts.release,system_utsname.release))
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#852: FILE: kernel/power/swap.c:776:
+	if (strcmp(swsusp_info.uts.version,system_utsname.version))
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#854: FILE: kernel/power/swap.c:778:
+	if (strcmp(swsusp_info.uts.machine,system_utsname.machine))
 	                                  ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#856: FILE: kernel/power/swap.c:780:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#864: FILE: kernel/power/swap.c:788:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#867: FILE: kernel/power/swap.c:791:
+	const char * reason = NULL;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#870: FILE: kernel/power/swap.c:794:
+	if ((error = bio_read_page(swp_offset(swsusp_header.swsusp_info), &swsusp_info)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#873: FILE: kernel/power/swap.c:797:
+ ^I/* Is this same machine? */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#873: FILE: kernel/power/swap.c:797:
+ ^I/* Is this same machine? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: kernel/power/swap.c:797:
+ ^I/* Is this same machine? */$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#874: FILE: kernel/power/swap.c:798:
+	if ((reason = sanity_check())) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#875: FILE: kernel/power/swap.c:799:
+		printk(KERN_ERR "swsusp: Resume mismatch: %s\n",reason);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: kernel/power/swap.c:799:
+		printk(KERN_ERR "swsusp: Resume mismatch: %s\n",reason);
 		                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#886: FILE: kernel/power/swap.c:810:
+	if ((error = bio_read_page(0, &swsusp_header)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#890: FILE: kernel/power/swap.c:814:
+		memcpy(key_iv, swsusp_header.key_iv, MAXKEY+MAXIV);
 		                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#891: FILE: kernel/power/swap.c:815:
+		memset(swsusp_header.key_iv, 0, MAXKEY+MAXIV);
 		                                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#909: FILE: kernel/power/swap.c:833:
+	if ((error = check_sig()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#912: FILE: kernel/power/swap.c:836:
+	if ((error = check_header()))

CHECK:BRACES: braces {} should be used on all arms of this statement
#939: FILE: kernel/power/swap.c:863:
+	if (!IS_ERR(resume_bdev)) {
[...]
+	} else
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#942: FILE: kernel/power/swap.c:866:
+		if (error)
+		    blkdev_put(resume_bdev);

CHECK:BRACES: Unbalanced braces around else statement
#944: FILE: kernel/power/swap.c:868:
+	} else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#969: FILE: kernel/power/swap.c:893:
+	memset(key_iv, 0, MAXKEY+MAXIV);
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1503: FILE: kernel/power/swsusp.c:91:
+	unsigned long zone_pfn;
+	mark_free_pages(zone);

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1510: FILE: kernel/power/swsusp.c:98:
+		if (!(pfn%1000))
 		         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1511: FILE: kernel/power/swsusp.c:99:
+			printk(".");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1522: FILE: kernel/power/swsusp.c:110:
+			printk("highmem reserved page?!\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1601: FILE: kernel/power/swsusp.c:113:
+		BUG_ON(PageNosave(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*save)...) over kmalloc(sizeof(struct highmem_page)...)
#1604: FILE: kernel/power/swsusp.c:116:
+		save = kmalloc(sizeof(struct highmem_page), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#1609: FILE: kernel/power/swsusp.c:121:
+		save->data = (void *) get_zeroed_page(GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1676: FILE: kernel/power/swsusp.c:140:
+	for_each_zone (zone) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1731: FILE: kernel/power/swsusp.c:151:
+	printk("swsusp: Restoring Highmem\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1735: FILE: kernel/power/swsusp.c:155:
+		void *kaddr;
+		highmem_copy = save->next;

CHECK:SPACING: No space is necessary after a cast
#1740: FILE: kernel/power/swsusp.c:160:
+		free_page((long) save->data);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140293.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 62 errors, 68 warnings, 33 checks, 1691 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140293.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
