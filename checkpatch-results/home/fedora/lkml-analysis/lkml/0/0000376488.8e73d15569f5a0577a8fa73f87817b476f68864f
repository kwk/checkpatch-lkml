WARNING:TYPO_SPELLING: 'dependancies' may be misspelled - perhaps 'dependencies'?
#33: 
- Add some stricter dependancies on EISA_VIRTUAL_ROOT
                    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'optionnaly' may be misspelled - perhaps 'optionally'?
#52: FILE: Documentation/eisa.txt:83:
+		  optionnaly be paired with a driver-dependant value
 		  ^^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#115: FILE: drivers/eisa/Kconfig:4:
+config EISA_VLB_PRIMING
+	bool "Vesa Local Bus priming"
+	depends on X86_PC && EISA
+	default n
+	---help---
+	  Activate this option if your system contains a Vesa Local
+	  Bus (VLB) card that identify itself as an EISA card (such as
+	  the Adaptec AHA-284x).
+
+	  When in doubt, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#150: FILE: drivers/eisa/Makefile:4:
+EXTRA_CFLAGS    := -Werror

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: drivers/eisa/eisa-bus.c:135:
+static int __init eisa_register_device (struct eisa_root_device *root,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: drivers/eisa/eisa-bus.c:139:
+	memcpy (edev->id.sig, sig, EISA_SIG_LEN);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: drivers/eisa/eisa-bus.c:151:
+	if (device_register (&edev->dev))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&edev->dev'
#237: FILE: drivers/eisa/eisa-bus.c:151:
+	if (device_register (&edev->dev))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: drivers/eisa/eisa-bus.c:170:
+		if (!(edev = kmalloc (sizeof (*edev), GFP_KERNEL))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: drivers/eisa/eisa-bus.c:170:
+		if (!(edev = kmalloc (sizeof (*edev), GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#264: FILE: drivers/eisa/eisa-bus.c:170:
+		if (!(edev = kmalloc (sizeof (*edev), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#265: FILE: drivers/eisa/eisa-bus.c:171:
+			printk (KERN_ERR "EISA: Out of memory for slot %d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: drivers/eisa/eisa-bus.c:171:
+			printk (KERN_ERR "EISA: Out of memory for slot %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: drivers/eisa/eisa-bus.c:175:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: drivers/eisa/eisa-bus.c:176:
+		memset (edev, 0, sizeof (*edev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: drivers/eisa/eisa-bus.c:176:
+		memset (edev, 0, sizeof (*edev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#281: FILE: drivers/eisa/eisa-bus.c:185:
+			edev->res.start = SLOT_ADDRESS (root, i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#286: FILE: drivers/eisa/eisa-bus.c:190:
+			edev->res.start = SLOT_ADDRESS (root, i) + EISA_VENDOR_ID_OFFSET;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/eisa/eisa-bus.c:194:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: drivers/eisa/eisa-bus.c:195:
+		if (request_resource (root->res, &edev->res)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#292: FILE: drivers/eisa/eisa-bus.c:196:
+			printk (KERN_WARNING \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: drivers/eisa/eisa-bus.c:196:
+			printk (KERN_WARNING \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#292: FILE: drivers/eisa/eisa-bus.c:196:
+			printk (KERN_WARNING \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: drivers/eisa/eisa-bus.c:199:
+			kfree (edev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: drivers/eisa/eisa-bus.c:203:
+		sig_addr = SLOT_ADDRESS (root, i) + EISA_VENDOR_ID_OFFSET;

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/eisa/eisa-bus.c:205:
+                if (!(str = decode_eisa_sig (sig_addr))) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/eisa/eisa-bus.c:205:
+                if (!(str = decode_eisa_sig (sig_addr))) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: drivers/eisa/eisa-bus.c:205:
+                if (!(str = decode_eisa_sig (sig_addr))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#301: FILE: drivers/eisa/eisa-bus.c:205:
+                if (!(str = decode_eisa_sig (sig_addr))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#302: FILE: drivers/eisa/eisa-bus.c:206:
+			release_resource (&edev->res);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: drivers/eisa/eisa-bus.c:207:
+			kfree (edev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/eisa/eisa-bus.c:210:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#308: FILE: drivers/eisa/eisa-bus.c:212:
+			printk (KERN_INFO "EISA: Motherboard %s detected\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: drivers/eisa/eisa-bus.c:212:
+			printk (KERN_INFO "EISA: Motherboard %s detected\n",

CHECK:BRACES: Unbalanced braces around else statement
#310: FILE: drivers/eisa/eisa-bus.c:214:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#311: FILE: drivers/eisa/eisa-bus.c:215:
+			printk (KERN_INFO "EISA: slot %d : %s detected.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: drivers/eisa/eisa-bus.c:215:
+			printk (KERN_INFO "EISA: slot %d : %s detected.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#319: FILE: drivers/eisa/eisa-bus.c:221:
+		if (eisa_register_device (root, edev, str, i)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#320: FILE: drivers/eisa/eisa-bus.c:222:
+			printk (KERN_ERR "EISA: Failed to register %s\n", str);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: drivers/eisa/eisa-bus.c:222:
+			printk (KERN_ERR "EISA: Failed to register %s\n", str);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: drivers/eisa/eisa-bus.c:223:
+			release_resource (&edev->res);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#322: FILE: drivers/eisa/eisa-bus.c:224:
+			kfree (edev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#342: FILE: drivers/eisa/eisa-bus.c:241:
+int __init eisa_root_register (struct eisa_root_device *root)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#360: FILE: drivers/eisa/eisa-bus.c:248:
+	 * example... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: drivers/eisa/eisa-bus.c:249:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#367: FILE: drivers/eisa/eisa-bus.c:255:
+	if ((err = request_resource (&eisa_root_res, &root->eisa_root_res)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#367: FILE: drivers/eisa/eisa-bus.c:255:
+	if ((err = request_resource (&eisa_root_res, &root->eisa_root_res)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#374: FILE: drivers/eisa/eisa-bus.c:260:
+	if ((err = eisa_probe (root)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#374: FILE: drivers/eisa/eisa-bus.c:260:
+	if ((err = eisa_probe (root)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#375: FILE: drivers/eisa/eisa-bus.c:261:
+		release_resource (&root->eisa_root_res);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#599: FILE: include/linux/eisa.h:29:
+ * default to 32 bits.*/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000376488.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 40 warnings, 2 checks, 542 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000376488.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
