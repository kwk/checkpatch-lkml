WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#92: FILE: fs/fat/dir.c:1002:
+	BUG_ON(*nr_cluster > 2);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#123: FILE: fs/fat/dir.c:1013:
+	i = n = copy = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#125: FILE: fs/fat/dir.c:1015:
+		start_blknr = blknr = fat_clus_to_blknr(sbi, cluster[i]);

WARNING:TYPO_SPELLING: 'direcotry' may be misspelled - perhaps 'directory'?
#209: FILE: fs/fat/dir.c:1076:
+	/* First stage: search free direcotry entries */
 	                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#210: FILE: fs/fat/dir.c:1077:
+	free_slots = nr_bhs = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#211: FILE: fs/fat/dir.c:1078:
+	bh = prev = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#229: FILE: fs/fat/dir.c:1089:
+				bhs[nr_bhs] = prev = bh;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#241: FILE: fs/fat/dir.c:1099:
+			free_slots = nr_bhs = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dir->i_ino == MSDOS_ROOT_INO'
#253: FILE: fs/fat/dir.c:1102:
+	if ((dir->i_ino == MSDOS_ROOT_INO) && (sbi->fat_bits != 32))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->fat_bits != 32'
#253: FILE: fs/fat/dir.c:1102:
+	if ((dir->i_ino == MSDOS_ROOT_INO) && (sbi->fat_bits != 32))

WARNING:LINE_SPACING: Missing a blank line after declarations
#273: FILE: fs/fat/dir.c:1122:
+			int copy = min_t(int, sb->s_blocksize - offset, size);
+			memcpy(bhs[i]->b_data + offset, slots, copy);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: fs/fat/dir.c:1133:
+			int copy = min_t(int, sb->s_blocksize - offset, size);
+			memcpy(bhs[i]->b_data + offset, slots, copy);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#450: FILE: include/linux/msdos_fs.h:334:
+extern int fat_add_entries(struct inode *dir, void *slots, int nr_slots,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 4 warnings, 9 checks, 379 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
