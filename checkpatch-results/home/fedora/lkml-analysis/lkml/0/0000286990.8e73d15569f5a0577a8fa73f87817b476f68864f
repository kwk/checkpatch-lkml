WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> [ I'm going through a bunch of security bugs/fixes, and I'm getting a little

WARNING:TYPO_SPELLING: 'unfortuantely' may be misspelled - perhaps 'unfortunately'?
#34: 
> Andy, your patch appears to leave the core issue unfixed, unfortuantely.
                                                            ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#92: FILE: include/linux/security.h:47:
+extern void cap_bprm_apply_creds (struct linux_binprm *bprm, int unsafe);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#92: FILE: include/linux/security.h:47:
+extern void cap_bprm_apply_creds (struct linux_binprm *bprm, int unsafe);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: include/linux/security.h:1036:
+	void (*bprm_apply_creds) (struct linux_binprm * bprm, int unsafe);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#122: FILE: include/linux/security.h:1036:
+	void (*bprm_apply_creds) (struct linux_binprm * bprm, int unsafe);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: include/linux/security.h:1300:
+static inline void security_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: include/linux/security.h:1302:
+	security_ops->bprm_apply_creds (bprm, unsafe);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: include/linux/security.h:1972:
+static inline void security_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: include/linux/security.h:1974:
+	cap_bprm_apply_creds (bprm, unsafe);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#170: FILE: fs/exec.c:922:
+static inline int must_not_trace_exec (struct task_struct *p)

WARNING:LINE_SPACING: Missing a blank line after declarations
#173: FILE: fs/exec.c:925:
+	int unsafe = 0;
+	if (p->ptrace & PT_PTRACED) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#174: FILE: fs/exec.c:926:
+		if(p->ptrace & PT_PTRACE_CAP)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#205: FILE: security/selinux/hooks.c:1749:
+static void selinux_bprm_apply_creds(struct linux_binprm *bprm, int unsafe)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: security/commoncap.c:118:
+void cap_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#268: FILE: security/commoncap.c:118:
+void cap_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)
  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: security/commoncap.c:129:
+	    !cap_issubset (new_permitted, current->cap_permitted)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: security/commoncap.c:137:
+			if (!capable (CAP_SETPCAP)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: security/commoncap.c:138:
+				new_permitted = cap_intersect (new_permitted,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: security/commoncap.c:139:
+				new_permitted = cap_intersect (new_permitted,
+							current->cap_permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#329: FILE: security/dummy.c:174:
+static void dummy_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#329: FILE: security/dummy.c:174:
+static void dummy_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)
  {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286990.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 15 warnings, 2 checks, 245 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286990.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
