WARNING:TYPO_SPELLING: 'eachother' may be misspelled - perhaps 'each other'?
#32: 
In some cases multi- and single-line comment blocks follow eachother 
                                                           ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'immidiately' may be misspelled - perhaps 'immediately'?
#33: 
immidiately - usually they have been merged, but in some cases the two 
^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#58: FILE: fs/cifs/readdir.c:58:
+/* Returns one if new inode created (which therefore needs to be hashed).
+   Might check in the future if inode number changed so we can rehash inode */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#58: FILE: fs/cifs/readdir.c:58:
+   Might check in the future if inode number changed so we can rehash inode */

CHECK:CAMELCASE: Avoid CamelCase: <cFYI>
#67: FILE: fs/cifs/readdir.c:74:
+		cFYI(0, (" existing dentry with inode 0x%p",

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#72: FILE: fs/cifs/readdir.c:78:
+		/* BB overwrite old name?
+		   i.e. tmp_dentry->d_name and tmp_dentry->d_name.len?? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#72: FILE: fs/cifs/readdir.c:78:
+		   i.e. tmp_dentry->d_name and tmp_dentry->d_name.len?? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#93: FILE: fs/cifs/readdir.c:156:
+	}	/* could add code here -
+		   to validate if device or weird share type? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#93: FILE: fs/cifs/readdir.c:156:
+		   to validate if device or weird share type? */

WARNING:TYPO_SPELLING: 'Unx' may be misspelled - perhaps 'Unix'?
#94: FILE: fs/cifs/readdir.c:157:
+	/* cannot fill in nlink here as in qpathinfo version and Unx search */
 	                                                         ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#108: FILE: fs/cifs/readdir.c:168:
+	/* 512 bytes (2**9) is the fake blocksize that must be used for this
+	   calculation, even though the reported blocksize is larger */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#108: FILE: fs/cifs/readdir.c:168:
+	   calculation, even though the reported blocksize is larger */

WARNING:SPLIT_STRING: quoted string split across lines
#115: FILE: fs/cifs/readdir.c:174:
+		cFYI(1, ("Possible sparse file: "
+			 "allocation size less than end of file "));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#126: FILE: fs/cifs/readdir.c:249:
+		/* can not safely change the file size here if the client is
+		   writing to it due to potential races */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: fs/cifs/readdir.c:249:
+		   writing to it due to potential races */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#132: FILE: fs/cifs/readdir.c:253:
+	/* 512 bytes (2**9) is the fake blocksize that must be used for this
+	   calculation, not the real blocksize */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#132: FILE: fs/cifs/readdir.c:253:
+	   calculation, not the real blocksize */

WARNING:SPLIT_STRING: quoted string split across lines
#161: FILE: fs/cifs/readdir.c:364:
+		cFYI(1, ("search entry %p began after end of SMB %p "
+			 "old entry %p",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: fs/cifs/readdir.c:365:
+^I^I^I new_entry, end_of_smb, old_entry)); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <cifsFileInfo>
#217: FILE: fs/cifs/readdir.c:456:
+	struct cifsFileInfo *cifsFile =

CHECK:CAMELCASE: Avoid CamelCase: <cifsFile>
#217: FILE: fs/cifs/readdir.c:456:
+	struct cifsFileInfo *cifsFile =

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cifsFile == NULL'
#222: FILE: fs/cifs/readdir.c:460:
+	if ((cifsFile == NULL) || (ppCurrentEntry == NULL) ||
+	    (num_to_ret == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ppCurrentEntry == NULL'
#222: FILE: fs/cifs/readdir.c:460:
+	if ((cifsFile == NULL) || (ppCurrentEntry == NULL) ||
+	    (num_to_ret == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num_to_ret == NULL'
#222: FILE: fs/cifs/readdir.c:460:
+	if ((cifsFile == NULL) || (ppCurrentEntry == NULL) ||
+	    (num_to_ret == NULL))

CHECK:CAMELCASE: Avoid CamelCase: <ppCurrentEntry>
#222: FILE: fs/cifs/readdir.c:460:
+	if ((cifsFile == NULL) || (ppCurrentEntry == NULL) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cifsFile"
#222: FILE: fs/cifs/readdir.c:460:
+	if ((cifsFile == NULL) || (ppCurrentEntry == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ppCurrentEntry"
#222: FILE: fs/cifs/readdir.c:460:
+	if ((cifsFile == NULL) || (ppCurrentEntry == NULL) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!num_to_ret"
#223: FILE: fs/cifs/readdir.c:461:
+	    (num_to_ret == NULL))

CHECK:CAMELCASE: Avoid CamelCase: <CIFSFindNext>
#250: FILE: fs/cifs/readdir.c:493:
+		rc = CIFSFindNext(xid, pTcon, cifsFile->netfid,

CHECK:CAMELCASE: Avoid CamelCase: <pTcon>
#250: FILE: fs/cifs/readdir.c:493:
+		rc = CIFSFindNext(xid, pTcon, cifsFile->netfid,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#259: FILE: fs/cifs/readdir.c:500:
+		/* we found the buffer that contains the entry
+		   scan and find it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#259: FILE: fs/cifs/readdir.c:500:
+		   scan and find it */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current_entry"
#276: FILE: fs/cifs/readdir.c:512:
+		     (current_entry != NULL); i++) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#278: FILE: fs/cifs/readdir.c:514:
+			/* go entry to next entry figuring out which we need
+			   to start with

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: fs/cifs/readdir.c:516:
+^I^I^I   ^Iskip$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: fs/cifs/readdir.c:516:
+^I^I^I   ^Iskip$

CHECK:CAMELCASE: Avoid CamelCase: <cERROR>
#290: FILE: fs/cifs/readdir.c:529:
+   /* BB removeme BB */	cERROR(1, ("reached end of buf searching for pos in buf"

WARNING:SPLIT_STRING: quoted string split across lines
#291: FILE: fs/cifs/readdir.c:530:
+   /* BB removeme BB */	cERROR(1, ("reached end of buf searching for pos in buf"
+				   " %d index to find %lld rc %d",

WARNING:SPLIT_STRING: quoted string split across lines
#302: FILE: fs/cifs/readdir.c:542:
+		cFYI(1, ("can not return entries when pos_in_buf "
+			 "beyond last entry"));

CHECK:CAMELCASE: Avoid CamelCase: <cifs_strfromUCS_le>
#325: FILE: fs/cifs/readdir.c:603:
+		pqst->len = cifs_strfromUCS_le((char *)pqst->name,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#346: FILE: fs/cifs/readdir.c:628:
+	/* get filename and len into qstring
+	   get dentry

WARNING:TYPO_SPELLING: 'ionde' may be misspelled - perhaps 'inode'?
#347: FILE: fs/cifs/readdir.c:629:
+	   decide whether to create and populate ionde */
 	                                         ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#347: FILE: fs/cifs/readdir.c:629:
+	   decide whether to create and populate ionde */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#356: FILE: fs/cifs/readdir.c:647:
+			&inum /* returned */ );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#366: FILE: fs/cifs/readdir.c:660:
+			/* BB fixme - hash the 2 32 quantities bits together
+			   if necessary */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#366: FILE: fs/cifs/readdir.c:660:
+			   if necessary */

ERROR:SPACING: space required after that ',' (ctx:VxO)
#375: FILE: fs/cifs/readdir.c:668:
+				   (FILE_UNIX_INFO *)pfindEntry,&obj_type);
 				                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#375: FILE: fs/cifs/readdir.c:668:
+				   (FILE_UNIX_INFO *)pfindEntry,&obj_type);
 				                                ^

CHECK:CAMELCASE: Avoid CamelCase: <pfindEntry>
#375: FILE: fs/cifs/readdir.c:668:
+				   (FILE_UNIX_INFO *)pfindEntry,&obj_type);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#379: FILE: fs/cifs/readdir.c:671:
+			      (FILE_DIRECTORY_INFO *)pfindEntry,&obj_type);
 			                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#379: FILE: fs/cifs/readdir.c:671:
+			      (FILE_DIRECTORY_INFO *)pfindEntry,&obj_type);
 			                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#411: FILE: fs/cifs/readdir.c:842:
+					   "%d i %d", num_to_fill,i));
 					                         ^

WARNING:SPLIT_STRING: quoted string split across lines
#411: FILE: fs/cifs/readdir.c:842:
+	/* BB removeme BB */	cERROR(1, ("beyond end of smb with num to fill "
+					   "%d i %d", num_to_fill,i));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#420: FILE: fs/cifs/readdir.c:846:
+			/* if ((!(cifs_sb->mnt_cifs_flags &
+				  CIFS_MOUNT_SERVER_INUM)) ||

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#430: FILE: fs/cifs/readdir.c:855:
+			new mount parm says otherwise */
 			          ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#430: FILE: fs/cifs/readdir.c:855:
+			new mount parm says otherwise */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000196788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 32 warnings, 16 checks, 390 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000196788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
