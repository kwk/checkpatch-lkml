WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: drivers/net/cxgb3/adapter.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#67: FILE: drivers/net/cxgb3/adapter.h:24:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#68: FILE: drivers/net/cxgb3/adapter.h:25:
+#include <asm/io.h>

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#115: FILE: drivers/net/cxgb3/adapter.h:72:
+/*
+ * Bundle size for grouping offload RX packets for delivery to the stack.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#222: FILE: drivers/net/cxgb3/adapter.h:179:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#236: FILE: drivers/net/cxgb3/adapter.h:193:
+	/*
+	 * Dummy netdevices are needed when using multiple receive queues with

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#244: FILE: drivers/net/cxgb3/adapter.h:201:
+	spinlock_t stats_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#245: FILE: drivers/net/cxgb3/adapter.h:202:
+	spinlock_t work_lock;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#326: FILE: drivers/net/cxgb3/adapter.h:283:
+/*
+ * We use the spare atalk_ptr to map a net device to its SGE queue set.

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/net/cxgb3/adapter.h:311:
+^I       ^I      int irq_vec_idx, const struct qset_params *p,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: drivers/net/cxgb3/adapter.h:311:
+^I       ^I      int irq_vec_idx, const struct qset_params *p,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/net/cxgb3/adapter.h:311:
+int t3_sge_alloc_qset(adapter_t *adapter, unsigned int id, int nports,
+	       	      int irq_vec_idx, const struct qset_params *p,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#367: FILE: drivers/net/cxgb3/common.h:1:
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#393: FILE: drivers/net/cxgb3/common.h:27:
+#define CH_ERR(fmt, ...)   printk(KERN_ERR PFX fmt, ## __VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#394: FILE: drivers/net/cxgb3/common.h:28:
+#define CH_WARN(fmt, ...)  printk(KERN_WARNING PFX fmt, ## __VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#395: FILE: drivers/net/cxgb3/common.h:29:
+#define CH_ALERT(fmt, ...) printk(KERN_ALERT PFX fmt, ## __VA_ARGS__)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#398: FILE: drivers/net/cxgb3/common.h:32:
+/*
+ * More powerful macro that selectively prints messages based on msg_enable.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'adapter' - possible side-effects?
#401: FILE: drivers/net/cxgb3/common.h:35:
+#define CH_MSG(adapter, level, category, fmt, ...) do { \
+	if ((adapter)->msg_enable & NETIF_MSG_##category) \
+		printk(KERN_##level PFX "%s: " fmt, (adapter)->name, \
+		       ## __VA_ARGS__); \
+} while (0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#403: FILE: drivers/net/cxgb3/common.h:37:
+		printk(KERN_##level PFX "%s: " fmt, (adapter)->name, \

WARNING:NEW_TYPEDEFS: do not add new typedefs
#417: FILE: drivers/net/cxgb3/common.h:51:
+typedef struct adapter adapter_t;

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: drivers/net/cxgb3/common.h:149:
+        int  (*write)(adapter_t *adapter, int phy_addr, int mmd_addr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: drivers/net/cxgb3/common.h:149:
+        int  (*write)(adapter_t *adapter, int phy_addr, int mmd_addr,$

CHECK:CAMELCASE: Avoid CamelCase: <ipInReceive_hi>
#617: FILE: drivers/net/cxgb3/common.h:251:
+	u32 ipInReceive_hi;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ipInReceive_lo>
#618: FILE: drivers/net/cxgb3/common.h:252:
+	u32 ipInReceive_lo;

CHECK:CAMELCASE: Avoid CamelCase: <ipInHdrErrors_hi>
#619: FILE: drivers/net/cxgb3/common.h:253:
+	u32 ipInHdrErrors_hi;

CHECK:CAMELCASE: Avoid CamelCase: <ipInHdrErrors_lo>
#620: FILE: drivers/net/cxgb3/common.h:254:
+	u32 ipInHdrErrors_lo;

CHECK:CAMELCASE: Avoid CamelCase: <ipInAddrErrors_hi>
#621: FILE: drivers/net/cxgb3/common.h:255:
+	u32 ipInAddrErrors_hi;

CHECK:CAMELCASE: Avoid CamelCase: <ipInAddrErrors_lo>
#622: FILE: drivers/net/cxgb3/common.h:256:
+	u32 ipInAddrErrors_lo;

CHECK:CAMELCASE: Avoid CamelCase: <ipInUnknownProtos_hi>
#623: FILE: drivers/net/cxgb3/common.h:257:
+	u32 ipInUnknownProtos_hi;

CHECK:CAMELCASE: Avoid CamelCase: <ipInUnknownProtos_lo>
#624: FILE: drivers/net/cxgb3/common.h:258:
+	u32 ipInUnknownProtos_lo;

CHECK:CAMELCASE: Avoid CamelCase: <ipInDiscards_hi>
#625: FILE: drivers/net/cxgb3/common.h:259:
+	u32 ipInDiscards_hi;

CHECK:CAMELCASE: Avoid CamelCase: <ipInDiscards_lo>
#626: FILE: drivers/net/cxgb3/common.h:260:
+	u32 ipInDiscards_lo;

CHECK:CAMELCASE: Avoid CamelCase: <ipInDelivers_hi>
#627: FILE: drivers/net/cxgb3/common.h:261:
+	u32 ipInDelivers_hi;

CHECK:CAMELCASE: Avoid CamelCase: <ipInDelivers_lo>
#628: FILE: drivers/net/cxgb3/common.h:262:
+	u32 ipInDelivers_lo;

CHECK:CAMELCASE: Avoid CamelCase: <ipOutRequests_hi>
#629: FILE: drivers/net/cxgb3/common.h:263:
+	u32 ipOutRequests_hi;

CHECK:CAMELCASE: Avoid CamelCase: <ipOutRequests_lo>
#630: FILE: drivers/net/cxgb3/common.h:264:
+	u32 ipOutRequests_lo;

CHECK:CAMELCASE: Avoid CamelCase: <ipOutDiscards_hi>
#631: FILE: drivers/net/cxgb3/common.h:265:
+	u32 ipOutDiscards_hi;

CHECK:CAMELCASE: Avoid CamelCase: <ipOutDiscards_lo>
#632: FILE: drivers/net/cxgb3/common.h:266:
+	u32 ipOutDiscards_lo;

CHECK:CAMELCASE: Avoid CamelCase: <ipOutNoRoutes_hi>
#633: FILE: drivers/net/cxgb3/common.h:267:
+	u32 ipOutNoRoutes_hi;

CHECK:CAMELCASE: Avoid CamelCase: <ipOutNoRoutes_lo>
#634: FILE: drivers/net/cxgb3/common.h:268:
+	u32 ipOutNoRoutes_lo;

CHECK:CAMELCASE: Avoid CamelCase: <ipReasmTimeout>
#635: FILE: drivers/net/cxgb3/common.h:269:
+	u32 ipReasmTimeout;

CHECK:CAMELCASE: Avoid CamelCase: <ipReasmReqds>
#636: FILE: drivers/net/cxgb3/common.h:270:
+	u32 ipReasmReqds;

CHECK:CAMELCASE: Avoid CamelCase: <ipReasmOKs>
#637: FILE: drivers/net/cxgb3/common.h:271:
+	u32 ipReasmOKs;

CHECK:CAMELCASE: Avoid CamelCase: <ipReasmFails>
#638: FILE: drivers/net/cxgb3/common.h:272:
+	u32 ipReasmFails;

CHECK:CAMELCASE: Avoid CamelCase: <tcpActiveOpens>
#642: FILE: drivers/net/cxgb3/common.h:276:
+	u32 tcpActiveOpens;

CHECK:CAMELCASE: Avoid CamelCase: <tcpPassiveOpens>
#643: FILE: drivers/net/cxgb3/common.h:277:
+	u32 tcpPassiveOpens;

CHECK:CAMELCASE: Avoid CamelCase: <tcpAttemptFails>
#644: FILE: drivers/net/cxgb3/common.h:278:
+	u32 tcpAttemptFails;

CHECK:CAMELCASE: Avoid CamelCase: <tcpEstabResets>
#645: FILE: drivers/net/cxgb3/common.h:279:
+	u32 tcpEstabResets;

CHECK:CAMELCASE: Avoid CamelCase: <tcpOutRsts>
#646: FILE: drivers/net/cxgb3/common.h:280:
+	u32 tcpOutRsts;

CHECK:CAMELCASE: Avoid CamelCase: <tcpCurrEstab>
#647: FILE: drivers/net/cxgb3/common.h:281:
+	u32 tcpCurrEstab;

CHECK:CAMELCASE: Avoid CamelCase: <tcpInSegs_hi>
#648: FILE: drivers/net/cxgb3/common.h:282:
+	u32 tcpInSegs_hi;

CHECK:CAMELCASE: Avoid CamelCase: <tcpInSegs_lo>
#649: FILE: drivers/net/cxgb3/common.h:283:
+	u32 tcpInSegs_lo;

CHECK:CAMELCASE: Avoid CamelCase: <tcpOutSegs_hi>
#650: FILE: drivers/net/cxgb3/common.h:284:
+	u32 tcpOutSegs_hi;

CHECK:CAMELCASE: Avoid CamelCase: <tcpOutSegs_lo>
#651: FILE: drivers/net/cxgb3/common.h:285:
+	u32 tcpOutSegs_lo;

CHECK:CAMELCASE: Avoid CamelCase: <tcpRetransSeg_hi>
#652: FILE: drivers/net/cxgb3/common.h:286:
+	u32 tcpRetransSeg_hi;

CHECK:CAMELCASE: Avoid CamelCase: <tcpRetransSeg_lo>
#653: FILE: drivers/net/cxgb3/common.h:287:
+	u32 tcpRetransSeg_lo;

CHECK:CAMELCASE: Avoid CamelCase: <tcpInErrs_hi>
#654: FILE: drivers/net/cxgb3/common.h:288:
+	u32 tcpInErrs_hi;

CHECK:CAMELCASE: Avoid CamelCase: <tcpInErrs_lo>
#655: FILE: drivers/net/cxgb3/common.h:289:
+	u32 tcpInErrs_lo;

CHECK:CAMELCASE: Avoid CamelCase: <tcpRtoMin>
#656: FILE: drivers/net/cxgb3/common.h:290:
+	u32 tcpRtoMin;

CHECK:CAMELCASE: Avoid CamelCase: <tcpRtoMax>
#657: FILE: drivers/net/cxgb3/common.h:291:
+	u32 tcpRtoMax;

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: drivers/net/cxgb3/common.h:390:
+       ^Iu32 sip_mask;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#756: FILE: drivers/net/cxgb3/common.h:390:
+       ^Iu32 sip_mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: drivers/net/cxgb3/common.h:390:
+       ^Iu32 sip_mask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#758: FILE: drivers/net/cxgb3/common.h:392:
+       ^Iu32 dip_mask;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#758: FILE: drivers/net/cxgb3/common.h:392:
+       ^Iu32 dip_mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: drivers/net/cxgb3/common.h:392:
+       ^Iu32 dip_mask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: drivers/net/cxgb3/common.h:408:
+        unsigned short requested_speed;  /* speed user has requested */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: drivers/net/cxgb3/common.h:408:
+        unsigned short requested_speed;  /* speed user has requested */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#776: FILE: drivers/net/cxgb3/common.h:410:
+        unsigned char  requested_duplex; /* duplex user has requested */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: drivers/net/cxgb3/common.h:410:
+        unsigned char  requested_duplex; /* duplex user has requested */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: drivers/net/cxgb3/common.h:519:
+        return phy->mdio_read(phy->adapter, phy->addr, mmd, reg, valp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: drivers/net/cxgb3/common.h:519:
+        return phy->mdio_read(phy->adapter, phy->addr, mmd, reg, valp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: drivers/net/cxgb3/common.h:525:
+        return phy->mdio_write(phy->adapter, phy->addr, mmd, reg, val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: drivers/net/cxgb3/common.h:525:
+        return phy->mdio_write(phy->adapter, phy->addr, mmd, reg, val);$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'iter' - possible side-effects?
#925: FILE: drivers/net/cxgb3/common.h:559:
+#define for_each_port(adapter, iter) \
+	for (iter = 0; iter < (adapter)->params.nports; ++iter)

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10000baseT_Full>
#937: FILE: drivers/net/cxgb3/common.h:571:
+	return adapter_info(adap)->caps & SUPPORTED_10000baseT_Full;

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: drivers/net/cxgb3/common.h:593:
+                    int attempts, int delay);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: drivers/net/cxgb3/common.h:593:
+                    int attempts, int delay);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1023: FILE: drivers/net/cxgb3/common.h:657:
+                  unsigned short alpha[NCCTRL_WIN],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: drivers/net/cxgb3/common.h:657:
+                  unsigned short alpha[NCCTRL_WIN],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1045: FILE: drivers/net/cxgb3/common.h:679:
+ ^I^I^Iunsigned int size, int rspq, int ovfl_mode,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1045: FILE: drivers/net/cxgb3/common.h:679:
+ ^I^I^Iunsigned int size, int rspq, int ovfl_mode,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1045: FILE: drivers/net/cxgb3/common.h:679:
+int t3_sge_init_cqcntxt(adapter_t *adapter, unsigned int id, u64 base_addr,
+ 			unsigned int size, int rspq, int ovfl_mode,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: drivers/net/cxgb3/common.h:679:
+ ^I^I^Iunsigned int size, int rspq, int ovfl_mode,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1075: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1090: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:16:
+/*
+ * Ioctl commands specific to this driver.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1118: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:44:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1119: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:45:
+	uint32_t addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1120: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:46:
+	uint32_t val;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1124: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:50:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1125: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:51:
+	uint32_t cntxt_type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1126: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:52:
+	uint32_t cntxt_id;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1127: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:53:
+	uint32_t data[4];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1134: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:60:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1135: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:61:
+	uint32_t queue_num;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1136: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:62:
+	uint32_t idx;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1137: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:63:
+	uint32_t size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1138: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:64:
+	uint8_t  data[128];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1142: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:68:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1143: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:69:
+	uint32_t mem_id;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1144: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:70:
+	uint32_t addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1145: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:71:
+	uint32_t len;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1146: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:72:
+	uint32_t version;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1147: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:73:
+	uint8_t  buf[0];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1151: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:77:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1152: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:78:
+	uint32_t qset_idx;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1153: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:79:
+	int32_t  txq_size[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1154: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:80:
+	int32_t  rspq_size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1155: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:81:
+	int32_t  fl_size[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1156: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:82:
+	int32_t  intr_lat;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1157: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:83:
+	int32_t  polling;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1158: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:84:
+	int32_t  cong_thres;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1162: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:88:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1163: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:89:
+	uint8_t  sched;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1164: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:90:
+	uint8_t  idx;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1165: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:91:
+	uint8_t  min;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1166: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:92:
+	uint8_t  max;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1167: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:93:
+	uint8_t  binding;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1180: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:106:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1181: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:107:
+	uint32_t nmtus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1182: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:108:
+	uint16_t mtus[NMTUS];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1186: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:112:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1187: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:113:
+	uint32_t tx_pg_sz;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1188: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:114:
+	uint32_t tx_num_pg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1189: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:115:
+	uint32_t rx_pg_sz;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1190: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:116:
+	uint32_t rx_num_pg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1191: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:117:
+	uint32_t pm_total;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1195: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:121:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1196: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:122:
+	uint32_t tcam_size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1197: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:123:
+	uint32_t nservers;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1198: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:124:
+	uint32_t nroutes;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1199: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:125:
+	uint32_t nfilters;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1203: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:129:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1204: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:130:
+	uint32_t tcb_index;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1205: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:131:
+	uint32_t tcb_data[TCB_WORDS];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1209: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:135:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1210: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:136:
+	uint32_t addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1211: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:137:
+	uint32_t buf[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1215: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:141:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1216: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:142:
+	uint32_t sip;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1217: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:143:
+	uint32_t sip_mask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1218: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:144:
+	uint32_t dip;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1219: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:145:
+	uint32_t dip_mask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1220: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:146:
+	uint16_t sport;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1221: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:147:
+	uint16_t sport_mask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1222: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:148:
+	uint16_t dport;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1223: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:149:
+	uint16_t dport_mask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1228: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:154:
+	uint8_t  proto;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1229: FILE: drivers/net/cxgb3/cxgb3_ioctl.h:155:
+	uint8_t  proto_mask;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1246: FILE: drivers/net/cxgb3/firmware_exports.h:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1246: FILE: drivers/net/cxgb3/firmware_exports.h:1:
+/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1318: FILE: drivers/net/cxgb3/firmware_exports.h:73:
+/* Maximum size of a WR sent from the host, limited by the SGE. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1320: FILE: drivers/net/cxgb3/firmware_exports.h:75:
+ * Note: WR coming from ULP or TP are only limited by CIM. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1325: FILE: drivers/net/cxgb3/firmware_exports.h:80:
+ * programmed in the CTRL/TUNNEL/QP SGE Egress Context and used by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1341: FILE: drivers/net/cxgb3/firmware_exports.h:96:
+ * Ingress Traffic (e.g. DMA completion credit)  for TUNNEL Queue[i] is sent $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1348: FILE: drivers/net/cxgb3/firmware_exports.h:103:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1354: FILE: drivers/net/cxgb3/firmware_exports.h:109:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1359: FILE: drivers/net/cxgb3/firmware_exports.h:114:
+/* FW_OFLD_NUM corresponds to the number of supported OFFLOAD Queues. These $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1360: FILE: drivers/net/cxgb3/firmware_exports.h:115:
+ * queues must start at SGE Egress Context FW_OFLD_SGEEC_START. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1361: FILE: drivers/net/cxgb3/firmware_exports.h:116:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1362: FILE: drivers/net/cxgb3/firmware_exports.h:117:
+ * Note: the 'uP Token' in the SGE Egress Context fields is irrelevant for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1372: FILE: drivers/net/cxgb3/firmware_exports.h:127:
+ * $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1372: FILE: drivers/net/cxgb3/firmware_exports.h:127:
+/*
+ * 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1379: FILE: drivers/net/cxgb3/firmware_exports.h:134:
+ * The RX_PKT_TID $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1379: FILE: drivers/net/cxgb3/firmware_exports.h:134:
+/*
+ * The RX_PKT_TID 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1388: FILE: drivers/net/cxgb3/firmware_exports.h:143:
+    (65536 + FW_TUNNEL_NUM + FW_CTRL_NUM + FW_RI_NUM + FW_RX_PKT_NUM)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000017298.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 34 warnings, 110 checks, 1329 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000017298.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
