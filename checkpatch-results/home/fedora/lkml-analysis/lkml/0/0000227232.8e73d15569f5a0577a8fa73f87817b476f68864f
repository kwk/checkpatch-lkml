ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#46: FILE: drivers/base/class.c:468:
+struct class * class_find(char * name)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#46: FILE: drivers/base/class.c:468:
+struct class * class_find(char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#48: FILE: drivers/base/class.c:470:
+	struct class * this_class;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#73: FILE: drivers/base/class.c:570:
+EXPORT_SYMBOL(class_find);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: drivers/base/power/main.c:30:
+{ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#96: FILE: drivers/base/power/main.c:30:
+struct partial_device_tree default_device_tree =
+{ 

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/base/power/main.c:37:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: drivers/base/power/power.h:34:
+struct partial_device_tree $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#151: FILE: drivers/base/power/power.h:35:
+struct partial_device_tree 
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: drivers/base/power/power.h:74:
+extern void dpm_resume_tree(struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: drivers/base/power/power.h:74:
+extern void dpm_resume_tree(struct partial_device_tree * tree);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#174: FILE: drivers/base/power/power.h:76:
+extern void dpm_power_up_tree(struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: drivers/base/power/power.h:76:
+extern void dpm_power_up_tree(struct partial_device_tree * tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: drivers/base/power/resume.c:32:
+void dpm_resume_tree(struct partial_device_tree * tree)

ERROR:SPACING: space required before the open parenthesis '('
#190: FILE: drivers/base/power/resume.c:34:
+	while(!list_empty(&tree->dpm_off)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#191: FILE: drivers/base/power/resume.c:35:
+		struct list_head * entry = tree->dpm_off.next;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#215: FILE: drivers/base/power/resume.c:68:
+void device_resume_tree(struct partial_device_tree * tree)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#222: FILE: drivers/base/power/resume.c:75:
+EXPORT_SYMBOL(device_resume_tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#231: FILE: drivers/base/power/resume.c:88:
+void dpm_power_up_tree(struct partial_device_tree * tree)

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: drivers/base/power/resume.c:90:
+	while(!list_empty(&tree->dpm_off_irq)) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#236: FILE: drivers/base/power/resume.c:91:
+		struct list_head * entry = tree->dpm_off_irq.next;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#237: FILE: drivers/base/power/resume.c:92:
+		struct device * dev = to_device(entry);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#259: FILE: drivers/base/power/resume.c:120:
+#if 0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: drivers/base/power/resume.c:124:
+ * ^Ipci_find_class_storage$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#290: FILE: drivers/base/power/resume.c:151:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#303: FILE: drivers/base/power/resume.c:164:
+	struct device * dev_dev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#304: FILE: drivers/base/power/resume.c:165:
+	struct pci_dev * pci_dev = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: drivers/base/power/resume.c:166:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#306: FILE: drivers/base/power/resume.c:167:
+	while ((dev = pci_find_class(PCI_BASE_CLASS_STORAGE, dev))) {
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#321: FILE: drivers/base/power/shutdown.c:69:
+EXPORT_SYMBOL(device_shutdown);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: drivers/base/power/suspend.c:73:
+int device_suspend_tree(pm_message_t state, struct partial_device_tree * tree)

ERROR:SPACING: space required before the open parenthesis '('
#355: FILE: drivers/base/power/suspend.c:78:
+	while(!list_empty(&tree->dpm_active)) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#356: FILE: drivers/base/power/suspend.c:79:
+		struct list_head * entry = tree->dpm_active.prev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: drivers/base/power/suspend.c:122:
+int device_power_down_tree(pm_message_t state, struct partial_device_tree * tree)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#417: FILE: drivers/base/power/suspend.c:140:
+EXPORT_SYMBOL(device_power_down_tree);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#423: FILE: drivers/base/power/suspend.c:146:
+	if (!(error = device_power_down_tree(state, &default_device_tree)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 7 warnings, 3 checks, 363 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
