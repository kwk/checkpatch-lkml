WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
This patch (2/3) adds /drivers/i2c/chips/via686a.c and adds it to Kconfig and Makefile

WARNING:TYPO_SPELLING: 'utilties' may be misspelled - perhaps 'utilities'?
#44: FILE: drivers/i2c/chips/Kconfig:50:
+	  You will also need the latest user-space utilties: you can find them
 	                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: drivers/i2c/chips/Kconfig:51:
+^I  in the lm_sensors package, which you can download at $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: drivers/i2c/chips/via686a.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#62: FILE: drivers/i2c/chips/via686a.c:2:
+/*
+    via686a.c - Part of lm_sensors, Linux kernel modules

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: drivers/i2c/chips/via686a.c:3:
+                for hardware monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: drivers/i2c/chips/via686a.c:4:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: drivers/i2c/chips/via686a.c:4:
+                $

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#66: FILE: drivers/i2c/chips/via686a.c:6:
+                        Kyösti Mälkki <kmalkki@cc.hut.fi>,
                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: drivers/i2c/chips/via686a.c:6:
+                        Kyösti Mälkki <kmalkki@cc.hut.fi>,$

WARNING:TYPO_SPELLING: 'Teh' may be misspelled - perhaps 'The'?
#69: FILE: drivers/i2c/chips/via686a.c:9:
+    (Some conversion-factor data were contributed by Jonathan Teh Soon Yew 
                                                               ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: drivers/i2c/chips/via686a.c:9:
+    (Some conversion-factor data were contributed by Jonathan Teh Soon Yew $

WARNING:TYPO_SPELLING: 'teh' may be misspelled - perhaps 'the'?
#70: FILE: drivers/i2c/chips/via686a.c:10:
+    <j.teh@iname.com> and Alex van Kaam <darkside@chello.nl>.)
        ^^^

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#70: FILE: drivers/i2c/chips/via686a.c:10:
+    <j.teh@iname.com> and Alex van Kaam <darkside@chello.nl>.)
                                                   ^^^^^^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#83: FILE: drivers/i2c/chips/via686a.c:23:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#84: FILE: drivers/i2c/chips/via686a.c:24:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#88: FILE: drivers/i2c/chips/via686a.c:28:
+/*
+    Supports the Via VT82C686A, VT82C686B south bridges.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#100: FILE: drivers/i2c/chips/via686a.c:40:
+#include <asm/io.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#129: FILE: drivers/i2c/chips/via686a.c:69:
+/* If force_addr is set to anything different from 0, we forcibly enable
+   the device at the given address. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#129: FILE: drivers/i2c/chips/via686a.c:69:
+   the device at the given address. */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#130: FILE: drivers/i2c/chips/via686a.c:70:
+static int force_addr = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#136: FILE: drivers/i2c/chips/via686a.c:76:
+/* Addresses to scan.
+   Note that we can't determine the ISA address until we have initialized

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#137: FILE: drivers/i2c/chips/via686a.c:77:
+   our module */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#147: FILE: drivers/i2c/chips/via686a.c:87:
+/*
+   The Via 686a southbridge has a LM78-like chip integrated on the same IC.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/i2c/chips/via686a.c:124:
+// The following register sets temp interrupt mode (bits 1-0 for temp1, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#196: FILE: drivers/i2c/chips/via686a.c:136:
+/* Conversions. Rounding and limit checking is only done on the TO_REG
+   variants. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#196: FILE: drivers/i2c/chips/via686a.c:136:
+   variants. */

WARNING:TYPO_SPELLING: 'Teh' may be misspelled - perhaps 'The'?
#199: FILE: drivers/i2c/chips/via686a.c:139:
+// From HWMon.cpp (Copyright 1998-2000 Jonathan Teh Soon Yew):
                                                 ^^^

WARNING:TYPO_SPELLING: 'Teh' may be misspelled - perhaps 'The'?
#209: FILE: drivers/i2c/chips/via686a.c:149:
+// (These conversions were contributed by Jonathan Teh Soon Yew 
                                                    ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/i2c/chips/via686a.c:149:
+// (These conversions were contributed by Jonathan Teh Soon Yew $

WARNING:TYPO_SPELLING: 'teh' may be misspelled - perhaps 'the'?
#210: FILE: drivers/i2c/chips/via686a.c:150:
+// <j.teh@iname.com>)
       ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/i2c/chips/via686a.c:151:
+// $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: drivers/i2c/chips/via686a.c:152:
+// These get us close, but they don't completely agree with what my BIOS $

CHECK:CAMELCASE: Avoid CamelCase: <inNum>
#214: FILE: drivers/i2c/chips/via686a.c:154:
+static inline u8 IN_TO_REG(long val, int inNum)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: drivers/i2c/chips/via686a.c:157:
+^I// val is guaranteed to be positive, so we can achieve the effect of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: drivers/i2c/chips/via686a.c:158:
+^I// rounding by (...*10+5)/10.  Note that the *10 is hidden in the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: drivers/i2c/chips/via686a.c:161:
+^I// to /10 because of the rounding thing, so we /1000.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/i2c/chips/via686a.c:164:
+^I^I    SENSORS_LIMIT(((val * 210240 - 13300) / 250 + 5) / 1000, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/i2c/chips/via686a.c:168:
+^I^I    SENSORS_LIMIT(((val * 157370 - 13300) / 250 + 5) / 1000, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: drivers/i2c/chips/via686a.c:172:
+^I^I    SENSORS_LIMIT(((val * 101080 - 13300) / 250 + 5) / 1000, $

CHECK:SPACING: No space is necessary after a cast
#235: FILE: drivers/i2c/chips/via686a.c:175:
+		return (u8) SENSORS_LIMIT(((val * 41714 - 13300) / 250 + 5)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#246: FILE: drivers/i2c/chips/via686a.c:186:
+		return (long) (((250000 * val + 13300) / 210240 * 10 + 5) /10);

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#246: FILE: drivers/i2c/chips/via686a.c:186:
+		return (long) (((250000 * val + 13300) / 210240 * 10 + 5) /10);
 		                                                          ^

CHECK:SPACING: No space is necessary after a cast
#248: FILE: drivers/i2c/chips/via686a.c:188:
+		return (long) (((250000 * val + 13300) / 157370 * 10 + 5) /10);

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#248: FILE: drivers/i2c/chips/via686a.c:188:
+		return (long) (((250000 * val + 13300) / 157370 * 10 + 5) /10);
 		                                                          ^

CHECK:SPACING: No space is necessary after a cast
#250: FILE: drivers/i2c/chips/via686a.c:190:
+		return (long) (((250000 * val + 13300) / 101080 * 10 + 5) /10);

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#250: FILE: drivers/i2c/chips/via686a.c:190:
+		return (long) (((250000 * val + 13300) / 101080 * 10 + 5) /10);
 		                                                          ^

CHECK:SPACING: No space is necessary after a cast
#252: FILE: drivers/i2c/chips/via686a.c:192:
+		return (long) (((250000 * val + 13300) / 41714 * 10 + 5) /10);

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#252: FILE: drivers/i2c/chips/via686a.c:192:
+		return (long) (((250000 * val + 13300) / 41714 * 10 + 5) /10);
 		                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))
                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))
                                     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))
                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))
                                          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))
                                                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))
                                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))
                                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))
                                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))
                                                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#267: FILE: drivers/i2c/chips/via686a.c:207:
+#define FAN_FROM_REG(val,div) ((val)==0?0:(val)==255?0:1350000/((val)*(div)))

WARNING:TYPO_SPELLING: 'Teh' may be misspelled - perhaps 'The'?
#270: FILE: drivers/i2c/chips/via686a.c:210:
+// linear fits from HWMon.cpp (Copyright 1998-2000 Jonathan Teh Soon Yew)
                                                             ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: drivers/i2c/chips/via686a.c:218:
+// A fifth-order polynomial fits the unofficial data (provided by Alex van $

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#279: FILE: drivers/i2c/chips/via686a.c:219:
+// Kaam <darkside@chello.nl>) a bit better.  It also give more reasonable 
                   ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: drivers/i2c/chips/via686a.c:219:
+// Kaam <darkside@chello.nl>) a bit better.  It also give more reasonable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: drivers/i2c/chips/via686a.c:220:
+// numbers on my machine (ie. they agree with what my BIOS tells me).  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: drivers/i2c/chips/via686a.c:222:
+// temp = 1.625093e-10*val^5 - 1.001632e-07*val^4 + 2.457653e-05*val^3 - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: drivers/i2c/chips/via686a.c:225:
+// (2000-10-25- RFD: thanks to Uwe Andersen <uandersen@mayah.com> for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/i2c/chips/via686a.c:228:
+// Alas, none of the elegant function-fit solutions will work because we $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/i2c/chips/via686a.c:229:
+// aren't allowed to use floating point in the kernel and doing it with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/i2c/chips/via686a.c:230:
+// integers doesn't rpovide enough precision.  So we'll do boring old $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: drivers/i2c/chips/via686a.c:231:
+// look-up table stuff.  The unofficial data (see below) have effectively $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/i2c/chips/via686a.c:232:
+// 7-bit resolution (they are rounded to the nearest degree).  I'm assuming $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drivers/i2c/chips/via686a.c:233:
+// that the transfer function of the device is monotonic and smooth, so a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: drivers/i2c/chips/via686a.c:234:
+// smooth function fit to the data will allow us to get better precision.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: drivers/i2c/chips/via686a.c:236:
+// VIA register values 0-255.  I *10 before rounding, so we get tenth-degree $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: drivers/i2c/chips/via686a.c:237:
+// precision.  (I could have done all 1024 values for our 10-bit readings, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: drivers/i2c/chips/via686a.c:238:
+// but the function is very linear in the useful range (0-80 deg C), so $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: drivers/i2c/chips/via686a.c:239:
+// we'll just use linear interpolation for 10-bit readings.)  So, tempLUT $

CHECK:CAMELCASE: Avoid CamelCase: <tempLUT>
#301: FILE: drivers/i2c/chips/via686a.c:241:
+static const long tempLUT[] =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/i2c/chips/via686a.c:242:
+    { -709, -688, -667, -646, -627, -607, -589, -570, -553, -536, -519,$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#302: FILE: drivers/i2c/chips/via686a.c:242:
+static const long tempLUT[] =
+    { -709, -688, -667, -646, -627, -607, -589, -570, -553, -536, -519,

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#326: FILE: drivers/i2c/chips/via686a.c:266:
+/* the original LUT values from Alex van Kaam <darkside@chello.nl> 
                                                         ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/i2c/chips/via686a.c:266:
+/* the original LUT values from Alex van Kaam <darkside@chello.nl> $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#327: FILE: drivers/i2c/chips/via686a.c:267:
+/* the original LUT values from Alex van Kaam <darkside@chello.nl> 
+   (for via register values 12-240):

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: drivers/i2c/chips/via686a.c:281:
+// an extra term for a good fit to these inverse data!) and then $

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#342: FILE: drivers/i2c/chips/via686a.c:282:
+// solving for each temp value from -50 to 110 (the useable range for 
                                                     ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: drivers/i2c/chips/via686a.c:282:
+// solving for each temp value from -50 to 110 (the useable range for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: drivers/i2c/chips/via686a.c:283:
+// this chip).  Here's the fit: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/i2c/chips/via686a.c:284:
+// viaRegVal = -1.160370e-10*val^6 +3.193693e-08*val^5 - 1.464447e-06*val^4 $

CHECK:CAMELCASE: Avoid CamelCase: <viaLUT>
#347: FILE: drivers/i2c/chips/via686a.c:287:
+static const u8 viaLUT[] =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/i2c/chips/via686a.c:288:
+    { 12, 12, 13, 14, 14, 15, 16, 16, 17, 18, 18, 19, 20, 20, 21, 22, 23,$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#348: FILE: drivers/i2c/chips/via686a.c:288:
+static const u8 viaLUT[] =
+    { 12, 12, 13, 14, 14, 15, 16, 16, 17, 18, 18, 19, 20, 20, 21, 22, 23,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: drivers/i2c/chips/via686a.c:305:
+// The +5 effectively rounds off properly and the +50 is because $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/i2c/chips/via686a.c:310:
+^I    SENSORS_LIMIT(viaLUT[((val <= -500) ? 0 : (val >= 1100) ? 160 : $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#377: FILE: drivers/i2c/chips/via686a.c:317:
+#define TEMP_FROM_REG(val) ((tempLUT[(val)]*10+5)/10)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#377: FILE: drivers/i2c/chips/via686a.c:317:
+#define TEMP_FROM_REG(val) ((tempLUT[(val)]*10+5)/10)
                                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#377: FILE: drivers/i2c/chips/via686a.c:317:
+#define TEMP_FROM_REG(val) ((tempLUT[(val)]*10+5)/10)
                                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <eightBits>
#386: FILE: drivers/i2c/chips/via686a.c:326:
+	u16 eightBits = val >> 2;

CHECK:CAMELCASE: Avoid CamelCase: <twoBits>
#387: FILE: drivers/i2c/chips/via686a.c:327:
+	u16 twoBits = val & 3;

CHECK:SPACING: No space is necessary after a cast
#391: FILE: drivers/i2c/chips/via686a.c:331:
+		return (long) tempLUT[0];

CHECK:SPACING: No space is necessary after a cast
#393: FILE: drivers/i2c/chips/via686a.c:333:
+		return (long) tempLUT[255];

CHECK:BRACES: braces {} should be used on all arms of this statement
#395: FILE: drivers/i2c/chips/via686a.c:335:
+	if (twoBits == 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#396: FILE: drivers/i2c/chips/via686a.c:336:
+		return (long) tempLUT[eightBits];

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#397: FILE: drivers/i2c/chips/via686a.c:337:
+		return (long) tempLUT[eightBits];
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#397: FILE: drivers/i2c/chips/via686a.c:337:
+	else {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                               ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                                     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)
                                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#414: FILE: drivers/i2c/chips/via686a.c:354:
+#define DIV_TO_REG(val) ((val)==8?3:(val)==4?2:(val)==1?0:1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: drivers/i2c/chips/via686a.c:366:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/i2c/chips/via686a.c:366:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: drivers/i2c/chips/via686a.c:368:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/i2c/chips/via686a.c:368:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: drivers/i2c/chips/via686a.c:370:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/i2c/chips/via686a.c:370:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: drivers/i2c/chips/via686a.c:372:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/i2c/chips/via686a.c:372:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: drivers/i2c/chips/via686a.c:374:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/i2c/chips/via686a.c:374:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: drivers/i2c/chips/via686a.c:376:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/i2c/chips/via686a.c:376:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: drivers/i2c/chips/via686a.c:378:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/i2c/chips/via686a.c:378:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: drivers/i2c/chips/via686a.c:380:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/i2c/chips/via686a.c:380:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: drivers/i2c/chips/via686a.c:382:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/i2c/chips/via686a.c:382:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: drivers/i2c/chips/via686a.c:384:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/i2c/chips/via686a.c:384:
+        * VIA686A_INIT_IN_PERCENTAGE / 100)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#452: FILE: drivers/i2c/chips/via686a.c:392:
+/* For the VIA686A, we need to keep some data in memory. That
+   data is pointed to by via686a_list[NR]->data. The structure itself is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#454: FILE: drivers/i2c/chips/via686a.c:394:
+   allocated. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#488: FILE: drivers/i2c/chips/via686a.c:428:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#500: FILE: drivers/i2c/chips/via686a.c:440:
+static int via686a_id = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#503: FILE: drivers/i2c/chips/via686a.c:443:
+/* The driver. I choose to use type i2c_driver, as at is identical to both
+   smbus_driver and isa_driver, and clients could be of either kind */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#503: FILE: drivers/i2c/chips/via686a.c:443:
+   smbus_driver and isa_driver, and clients could be of either kind */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#514: FILE: drivers/i2c/chips/via686a.c:454:
+/* These files are created for each detected VIA686A. This is just a template;
+   though at first sight, you might think we could use a statically

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: drivers/i2c/chips/via686a.c:456:
+   is done through one of the 'extra' fields which are initialized $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#517: FILE: drivers/i2c/chips/via686a.c:457:
+   when a new copy is allocated. */

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#548: FILE: drivers/i2c/chips/via686a.c:488:
+	return (inb_p(client->addr + reg));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: drivers/i2c/chips/via686a.c:504:
+static int via686a_detect(struct i2c_adapter *adapter, int address,
+		   unsigned short flags, int kind)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via686a_detect', this function's name, in a string
#576: FILE: drivers/i2c/chips/via686a.c:516:
+		("via686a.o: via686a_detect called for an I2C bus adapter?!?\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required before the open parenthesis '('
#581: FILE: drivers/i2c/chips/via686a.c:521:
+	if(force_addr)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#584: FILE: drivers/i2c/chips/via686a.c:524:
+		printk("via686a.o: region 0x%x already in use!\n",

ERROR:SPACING: space required before the open parenthesis '('
#589: FILE: drivers/i2c/chips/via686a.c:529:
+	if(force_addr) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#590: FILE: drivers/i2c/chips/via686a.c:530:
+		printk("via686a.o: forcing ISA address 0x%04X\n", address);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#599: FILE: drivers/i2c/chips/via686a.c:539:
+		printk("via686a.o: enabling sensors\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#602: FILE: drivers/i2c/chips/via686a.c:542:
+^I^I                      val | 0x0001))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: drivers/i2c/chips/via686a.c:542:
+		    pci_write_config_word(s_bridge, VIA686A_ENABLE_REG,
+		                      val | 0x0001))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#606: FILE: drivers/i2c/chips/via686a.c:546:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_client)...) over kmalloc(sizeof(struct i2c_client)...)
#606: FILE: drivers/i2c/chips/via686a.c:546:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#613: FILE: drivers/i2c/chips/via686a.c:553:
+	data = (struct via686a_data *) (new_client + 1);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#629: FILE: drivers/i2c/chips/via686a.c:569:
+	if ((err = i2c_attach_client(new_client)))

CHECK:SPACING: No space is necessary after a cast
#633: FILE: drivers/i2c/chips/via686a.c:573:
+	if ((i = i2c_register_entry((struct i2c_client *) new_client,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#633: FILE: drivers/i2c/chips/via686a.c:573:
+	if ((i = i2c_register_entry((struct i2c_client *) new_client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: drivers/i2c/chips/via686a.c:574:
+	if ((i = i2c_register_entry((struct i2c_client *) new_client,
+					type_name,

WARNING:INDENTED_LABEL: labels should not be indented
#646: FILE: drivers/i2c/chips/via686a.c:586:
+      ERROR4:

WARNING:INDENTED_LABEL: labels should not be indented
#648: FILE: drivers/i2c/chips/via686a.c:588:
+      ERROR3:

WARNING:INDENTED_LABEL: labels should not be indented
#651: FILE: drivers/i2c/chips/via686a.c:591:
+      ERROR0:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: drivers/i2c/chips/via686a.c:599:
+^Ii2c_deregister_entry(((struct via686a_data *) $

CHECK:SPACING: No space is necessary after a cast
#659: FILE: drivers/i2c/chips/via686a.c:599:
+	i2c_deregister_entry(((struct via686a_data *) 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#662: FILE: drivers/i2c/chips/via686a.c:602:
+	if ((err = i2c_detach_client(client))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#683: FILE: drivers/i2c/chips/via686a.c:623:
+	/* Have to wait for reset to complete or else the following
+	   initializations won't work reliably. The delay was arrived at

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#686: FILE: drivers/i2c/chips/via686a.c:626:
+	   clears in about 2-4 udelays and that isn't nearly enough. */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#687: FILE: drivers/i2c/chips/via686a.c:627:
+	udelay(50);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:TYPO_SPELLING: 'Cofigure' may be misspelled - perhaps 'Configure'?
#723: FILE: drivers/i2c/chips/via686a.c:663:
+	/* Cofigure temp interrupt mode for continuous-interrupt operation */
 	   ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#724: FILE: drivers/i2c/chips/via686a.c:664:
+^Ivia686a_write_value(client, VIA686A_REG_TEMP_MODE, $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#738: FILE: drivers/i2c/chips/via686a.c:678:
+	    time_before(jiffies, data->last_updated) || !data->valid) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#752: FILE: drivers/i2c/chips/via686a.c:692:
+			data->fan_min[i - 1] = via686a_read_value(client,
+						     VIA686A_REG_FAN_MIN(i));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: drivers/i2c/chips/via686a.c:696:
+			data->temp[i - 1] = via686a_read_value(client,
+						 VIA686A_REG_TEMP(i)) << 2;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: drivers/i2c/chips/via686a.c:704:
+^I^I/* add in lower 2 bits $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#765: FILE: drivers/i2c/chips/via686a.c:705:
+		/* add in lower 2 bits 
+		   temp1 uses bits 7-6 of VIA686A_REG_TEMP_LOW1

CHECK:LINE_SPACING: Please don't use multiple blank lines
#793: FILE: drivers/i2c/chips/via686a.c:733:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#795: FILE: drivers/i2c/chips/via686a.c:735:
+/* The next few functions are the call-back functions of the /proc/sys and
+   sysctl files. Which function is used is defined in the ctl_table in

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#801: FILE: drivers/i2c/chips/via686a.c:741:
+   SENSORS_PROC_REAL_READ. Finally, it must get upto *nrels elements from
                                                 ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#806: FILE: drivers/i2c/chips/via686a.c:746:
+   you can assume it is large enough. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#808: FILE: drivers/i2c/chips/via686a.c:748:
+static void via686a_in(struct i2c_client *client, int operation, int ctl_name,
+		int *nrels_mag, long *results)

CHECK:BRACES: braces {} should be used on all arms of this statement
#813: FILE: drivers/i2c/chips/via686a.c:753:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/i2c/chips/via686a.c:776:
+static void via686a_fan(struct i2c_client *client, int operation, int ctl_name,
+		 int *nrels_mag, long *results)

CHECK:BRACES: braces {} should be used on all arms of this statement
#841: FILE: drivers/i2c/chips/via686a.c:781:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/i2c/chips/via686a.c:789:
+		results[1] = FAN_FROM_REG(data->fan[nr - 1],
+				 DIV_FROM_REG(data->fan_div[nr - 1]));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: drivers/i2c/chips/via686a.c:793:
+^I^I^Idata->fan_min[nr - 1] = FAN_TO_REG(results[0], $

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'data->fan_div[nr-1]'
#855: FILE: drivers/i2c/chips/via686a.c:795:
+							   DIV_FROM_REG(data->
+							      fan_div[nr -1]));

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#855: FILE: drivers/i2c/chips/via686a.c:795:
+							      fan_div[nr -1]));
 							                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/i2c/chips/via686a.c:804:
+static void via686a_temp(struct i2c_client *client, int operation, int ctl_name,
+		  int *nrels_mag, long *results)

CHECK:BRACES: braces {} should be used on all arms of this statement
#869: FILE: drivers/i2c/chips/via686a.c:809:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#894: FILE: drivers/i2c/chips/via686a.c:834:
+static void via686a_alarms(struct i2c_client *client, int operation, int ctl_name,
+		    int *nrels_mag, long *results)

WARNING:LINE_SPACING: Missing a blank line after declarations
#897: FILE: drivers/i2c/chips/via686a.c:837:
+	struct via686a_data *data = client->data;
+	if (operation == SENSORS_PROC_REAL_INFO)

CHECK:BRACES: braces {} should be used on all arms of this statement
#897: FILE: drivers/i2c/chips/via686a.c:837:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#907: FILE: drivers/i2c/chips/via686a.c:847:
+static void via686a_fan_div(struct i2c_client *client, int operation,
+		     int ctl_name, int *nrels_mag, long *results)

CHECK:BRACES: braces {} should be used on all arms of this statement
#912: FILE: drivers/i2c/chips/via686a.c:852:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#934: FILE: drivers/i2c/chips/via686a.c:874:
+static int __devinit via686a_pci_probe(struct pci_dev *dev,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#946: FILE: drivers/i2c/chips/via686a.c:886:
+		printk("via686a.o: base address not set - upgrade BIOS or use force_addr=0xaddr\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#953: FILE: drivers/i2c/chips/via686a.c:893:
+		printk("via686a.o: No Via 686A sensors found.\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#961: FILE: drivers/i2c/chips/via686a.c:901:
+static void __devexit via686a_pci_remove(struct pci_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#966: FILE: drivers/i2c/chips/via686a.c:906:
+static struct pci_device_id via686a_pci_ids[] __devinitdata = {

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#988: FILE: drivers/i2c/chips/via686a.c:928:
+MODULE_AUTHOR("Kyösti Mälkki <kmalkki@cc.hut.fi>, "
                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: drivers/i2c/chips/via686a.c:929:
+              "Mark Studebaker <mdsxyz123@yahoo.com> "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: drivers/i2c/chips/via686a.c:929:
+              "Mark Studebaker <mdsxyz123@yahoo.com> "$

WARNING:SPLIT_STRING: quoted string split across lines
#989: FILE: drivers/i2c/chips/via686a.c:929:
+MODULE_AUTHOR("Kyösti Mälkki <kmalkki@cc.hut.fi>, "
+              "Mark Studebaker <mdsxyz123@yahoo.com> "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#990: FILE: drivers/i2c/chips/via686a.c:930:
+              "Mark Studebaker <mdsxyz123@yahoo.com> "
+	      "and Bob Dougherty <bobd@stanford.edu>");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000399176.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 75 errors, 67 warnings, 63 checks, 957 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000399176.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
