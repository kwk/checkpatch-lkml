ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: arch/i386/kernel/kprobes.c:173:
+ ^I/* We're in an interrupt, but this is clear and BUG()-safe. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#104: FILE: arch/i386/kernel/kprobes.c:173:
+ ^I/* We're in an interrupt, but this is clear and BUG()-safe. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: arch/i386/kernel/kprobes.c:173:
+ ^I/* We're in an interrupt, but this is clear and BUG()-safe. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: arch/i386/kernel/kprobes.c:174:
+ ^Ipreempt_disable();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: arch/i386/kernel/kprobes.c:174:
+ ^Ipreempt_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/i386/kernel/kprobes.c:174:
+ ^Ipreempt_disable();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: arch/i386/kernel/kprobes.c:176:
+  ^I/* Check we're not actually recursing */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: arch/i386/kernel/kprobes.c:176:
+  ^I/* Check we're not actually recursing */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/i386/kernel/kprobes.c:176:
+  ^I/* Check we're not actually recursing */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: arch/i386/kernel/kprobes.c:177:
+  ^Iif (kprobe_running()) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: arch/i386/kernel/kprobes.c:177:
+  ^Iif (kprobe_running()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/i386/kernel/kprobes.c:177:
+  ^Iif (kprobe_running()) {$

CHECK:SPACING: No space is necessary after a cast
#126: FILE: arch/i386/kernel/kprobes.c:223:
+			__get_user(instr, (unsigned char __user *) addr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: arch/i386/kernel/kprobes.c:226:
+^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/i386/kernel/ptrace.c:157:
+ ^Imm_context_t *context, unsigned long *eip_limit)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: arch/i386/kernel/ptrace.c:157:
+ ^Imm_context_t *context, unsigned long *eip_limit)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: arch/i386/kernel/ptrace.c:157:
+unsigned long convert_eip_to_linear_slow(unsigned long eip, unsigned long seg,
+ 	mm_context_t *context, unsigned long *eip_limit)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/kernel/ptrace.c:157:
+ ^Imm_context_t *context, unsigned long *eip_limit)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/i386/kernel/ptrace.c:160:
+ ^Iu32 seg_ar;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: arch/i386/kernel/ptrace.c:160:
+ ^Iu32 seg_ar;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/i386/kernel/ptrace.c:160:
+ ^Iu32 seg_ar;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/i386/kernel/ptrace.c:179:
+ ^I^Idesc = get_gdt_desc(get_cpu(), seg);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: arch/i386/kernel/ptrace.c:179:
+ ^I^Idesc = get_gdt_desc(get_cpu(), seg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/i386/kernel/ptrace.c:179:
+ ^I^Idesc = get_gdt_desc(get_cpu(), seg);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#203: FILE: arch/i386/kernel/ptrace.c:184:
+	/* Check the segment exists, is within the current LDT/GDT size,
+	   that kernel/user (ring 0..3) has the appropriate privilege,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#204: FILE: arch/i386/kernel/ptrace.c:185:
+	   that it's a code segment, and get the limit. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#227: FILE: arch/i386/kernel/ptrace.c:207:
+	/* Adjust EIP and segment limit, and clamp at the kernel limit.
+	   It's legitimate for segments to wrap at 0xffffffff. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#227: FILE: arch/i386/kernel/ptrace.c:207:
+	   It's legitimate for segments to wrap at 0xffffffff. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/i386/kernel/ptrace.c:218:
+ ^Iunsigned long addr = convert_eip_to_linear(regs, regs->eip, &child->mm->context, NULL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: arch/i386/kernel/ptrace.c:218:
+ ^Iunsigned long addr = convert_eip_to_linear(regs, regs->eip, &child->mm->context, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/i386/kernel/ptrace.c:218:
+ ^Iunsigned long addr = convert_eip_to_linear(regs, regs->eip, &child->mm->context, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#331: FILE: arch/i386/mm/fault.c:67:
+	unsigned long instr = convert_eip_to_linear (regs, regs->eip,

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#349: FILE: include/asm-i386/ptrace.h:61:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: include/asm-i386/ptrace.h:99:
+ * $

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#373: FILE: include/asm-i386/ptrace.h:102:
+extern unsigned long convert_eip_to_linear_slow(unsigned long addr, unsigned long seg, mm_context_t *context, unsigned long *eip_limit);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/asm-i386/ptrace.h:102:
+extern unsigned long convert_eip_to_linear_slow(unsigned long addr, unsigned long seg, mm_context_t *context, unsigned long *eip_limit);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#375: FILE: include/asm-i386/ptrace.h:104:
+static inline unsigned long convert_eip_to_linear(struct pt_regs *regs, unsigned long addr, mm_context_t *context, unsigned long * const eip_limit)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136929.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 24 warnings, 3 checks, 310 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136929.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
