WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#54: FILE: tmp/linux-2.6.8.1/arch/i386/pci/common.c:135:
  struct pci_bus * __devinit pcibios_scan_root(int busnum)

WARNING:LINE_SPACING: Missing a blank line after declarations
#63: FILE: tmp/linux-2.6.8.1/arch/i386/pci/common.c:151:
+	struct pci_bus *bus = pci_scan_bus(busnum, &pci_root_ops, NULL);
+	if (bus)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#80: FILE: tmp/linux-2.6.8.1/drivers/pci/Kconfig:50:
+config PCI_ERROR_RECOVERY
+	bool "PCI device error recovery"
+	depends on PCI
+	---help---
+	By default, the device driver hardly recovers from PCI errors. When
+	this feature is available, the special io interface are provided
+	from the kernel.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:1:
+#include <linux/config.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/pci.h> instead of <asm/pci.h>
#110: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:9:
+#include <asm/pci.h>

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:45:
+        read_lock(&pci_whole_lock);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:45:
+        read_lock(&pci_whole_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:51:
+        read_unlock(&pci_whole_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:51:
+        read_unlock(&pci_whole_lock);$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#167: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:66:
+#define IF_IS_PCI_ERROR(status)                         \
+        if ((status & PCI_STATUS_REC_TARGET_ABORT)      \
+          ||(status & PCI_STATUS_REC_MASTER_ABORT)      \
+          ||(status & PCI_STATUS_DETECTED_PARITY))

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'status' - possible side-effects?
#167: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:66:
+#define IF_IS_PCI_ERROR(status)                         \
+        if ((status & PCI_STATUS_REC_TARGET_ABORT)      \
+          ||(status & PCI_STATUS_REC_MASTER_ABORT)      \
+          ||(status & PCI_STATUS_DETECTED_PARITY))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'status' may be better as '(status)' to avoid precedence issues
#167: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:66:
+#define IF_IS_PCI_ERROR(status)                         \
+        if ((status & PCI_STATUS_REC_TARGET_ABORT)      \
+          ||(status & PCI_STATUS_REC_MASTER_ABORT)      \
+          ||(status & PCI_STATUS_DETECTED_PARITY))

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:67:
+        if ((status & PCI_STATUS_REC_TARGET_ABORT)      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:67:
+        if ((status & PCI_STATUS_REC_TARGET_ABORT)      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:68:
+          ||(status & PCI_STATUS_REC_MASTER_ABORT)      \$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#169: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:68:
+        if ((status & PCI_STATUS_REC_TARGET_ABORT)      \
+          ||(status & PCI_STATUS_REC_MASTER_ABORT)      \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:68:
+          ||(status & PCI_STATUS_REC_MASTER_ABORT)      \$

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#169: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:68:
+          ||(status & PCI_STATUS_REC_MASTER_ABORT)      \
           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:69:
+          ||(status & PCI_STATUS_DETECTED_PARITY))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#170: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:69:
+          ||(status & PCI_STATUS_REC_MASTER_ABORT)      \
+          ||(status & PCI_STATUS_DETECTED_PARITY))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:69:
+          ||(status & PCI_STATUS_DETECTED_PARITY))$

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#170: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:69:
+          ||(status & PCI_STATUS_DETECTED_PARITY))
           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#180: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:79:
+	if (!dev->bus->self) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited before semicolon
#181: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:80:
+	for (pbus = dev->bus; pbus->parent && pbus->parent->self; pbus = pbus->parent) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#181: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:80:
+	for (pbus = dev->bus; pbus->parent && pbus->parent->self; pbus = pbus->parent) ;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#184: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:83:
+	switch (prootdev->hdr_type) {
+		case PCI_HEADER_TYPE_NORMAL: /* 0 */
[...]
+		case PCI_HEADER_TYPE_BRIDGE: /* 1 */
[...]
+		case PCI_HEADER_TYPE_CARDBUS: /* 2 */
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#193: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:92:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#205: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:104:
+		switch (prootdev->hdr_type) {
+			case PCI_HEADER_TYPE_NORMAL: /* 0 */
[...]
+			case PCI_HEADER_TYPE_BRIDGE: /* 1 */
[...]
+			case PCI_HEADER_TYPE_CARDBUS: /* 2 */
+			default:

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#214: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:113:
+				BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#237: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:136:
+	for (pbus = dev->bus; pbus->parent && pbus->parent->self;
+						pbus = pbus->parent) ;

WARNING:SPACING: space prohibited before semicolon
#238: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:137:
+						pbus = pbus->parent) ;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#243: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:142:
+		BUG();

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#249: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:148:
+	switch (prootdev->hdr_type) {
+		case PCI_HEADER_TYPE_NORMAL: /* 0 */
[...]
+		case PCI_HEADER_TYPE_BRIDGE: /* 1 */
[...]
+		case PCI_HEADER_TYPE_CARDBUS: /* 2 */
+		default:

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#258: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:157:
+			BUG();

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#310: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:209:
+EXPORT_SYMBOL (pcibus_lock_init);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:209:
+EXPORT_SYMBOL (pcibus_lock_init);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#311: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:210:
+EXPORT_SYMBOL (pcibus_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:210:
+EXPORT_SYMBOL (pcibus_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#312: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:211:
+EXPORT_SYMBOL (pcibus_unlock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#312: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:211:
+EXPORT_SYMBOL (pcibus_unlock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#313: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:212:
+EXPORT_SYMBOL (pciwhole_lock_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:212:
+EXPORT_SYMBOL (pciwhole_lock_init);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#314: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:213:
+EXPORT_SYMBOL (pciwhole_read_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#314: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:213:
+EXPORT_SYMBOL (pciwhole_read_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#315: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:214:
+EXPORT_SYMBOL (pciwhole_read_unlock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:214:
+EXPORT_SYMBOL (pciwhole_read_unlock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#316: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:215:
+EXPORT_SYMBOL (pciwhole_write_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#316: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:215:
+EXPORT_SYMBOL (pciwhole_write_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#317: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:216:
+EXPORT_SYMBOL (pciwhole_write_unlock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#317: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:216:
+EXPORT_SYMBOL (pciwhole_write_unlock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#318: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:217:
+EXPORT_SYMBOL (pcidev_extra_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:217:
+EXPORT_SYMBOL (pcidev_extra_init);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#319: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:218:
+EXPORT_SYMBOL (clear_pci_errors);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#319: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:218:
+EXPORT_SYMBOL (clear_pci_errors);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#320: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:219:
+EXPORT_SYMBOL (read_pci_errors);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:219:
+EXPORT_SYMBOL (read_pci_errors);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#321: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:220:
+EXPORT_SYMBOL (readb_check);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:220:
+EXPORT_SYMBOL (readb_check);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#322: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:221:
+EXPORT_SYMBOL (readw_check);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#322: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:221:
+EXPORT_SYMBOL (readw_check);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#323: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:222:
+EXPORT_SYMBOL (readl_check);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#323: FILE: tmp/linux-2.6.8.1/drivers/pci/pci-rec.c:222:
+EXPORT_SYMBOL (readl_check);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#392: FILE: tmp/linux-2.6.8.1/include/asm-i386/pci.h:104:
+u16 readw_check(struct pci_dev *, u16*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16*' should also have an identifier name
#392: FILE: tmp/linux-2.6.8.1/include/asm-i386/pci.h:104:
+u16 readw_check(struct pci_dev *, u16*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#393: FILE: tmp/linux-2.6.8.1/include/asm-i386/pci.h:105:
+u32 readl_check(struct pci_dev *, u32*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32*' should also have an identifier name
#393: FILE: tmp/linux-2.6.8.1/include/asm-i386/pci.h:105:
+u32 readl_check(struct pci_dev *, u32*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#450: FILE: tmp/linux-2.6.8.1/include/asm-ia64/pci.h:124:
+u16 readw_check(struct pci_dev *, u16*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16*' should also have an identifier name
#450: FILE: tmp/linux-2.6.8.1/include/asm-ia64/pci.h:124:
+u16 readw_check(struct pci_dev *, u16*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#451: FILE: tmp/linux-2.6.8.1/include/asm-ia64/pci.h:125:
+u32 readl_check(struct pci_dev *, u32*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32*' should also have an identifier name
#451: FILE: tmp/linux-2.6.8.1/include/asm-ia64/pci.h:125:
+u32 readl_check(struct pci_dev *, u32*);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#465: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:491:
+	unsigned        err_status;     /* root bridge status and other error */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:576:
+       struct rw_semaphore bus_lock;   /* for serialized operation under same root bridge */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_bus *' should also have an identifier name
#486: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1033:
+void pcibus_lock_init(struct pci_bus *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_bus *' should also have an identifier name
#487: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1034:
+void pcibus_lock(struct pci_bus *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_bus *' should also have an identifier name
#488: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1035:
+void pcibus_unlock(struct pci_bus *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#494: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1041:
+void clear_pci_errors(struct pci_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#495: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1042:
+int read_pci_errors(struct pci_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#496: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1043:
+u8  readb_check(struct pci_dev *, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#496: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1043:
+u8  readb_check(struct pci_dev *, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#497: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1044:
+u16 readw_check(struct pci_dev *, u16 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16 *' should also have an identifier name
#497: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1044:
+u16 readw_check(struct pci_dev *, u16 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#498: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1045:
+u32 readl_check(struct pci_dev *, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#498: FILE: tmp/linux-2.6.8.1/include/linux/pci.h:1045:
+u32 readl_check(struct pci_dev *, u32 *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257442.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 65 warnings, 4 checks, 421 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257442.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
