WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#37: 
> My Natsemi network card stops working with 2.6.9-rc3. After succesfully 
                                                              ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> http://www.kernel.org/pub/linux/kernel/people/akpm/patches/2.6/2.6.9-rc2/2.6.9-rc2-mm3/broken-out/natsemi-remove-compilation-warnings.patch

CHECK:SPACING: No space is necessary after a cast
#78: FILE: drivers/net/natsemi.c:774:
+	return (void __iomem *) dev->base_addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <PhyCtrl>
#94: FILE: drivers/net/natsemi.c:797:
+	writew(target, ioaddr + PhyCtrl);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#132: FILE: drivers/net/natsemi.c:869:
+	dev->base_addr = (unsigned long __force) ioaddr;

CHECK:CAMELCASE: Avoid CamelCase: <ChipConfig>
#141: FILE: drivers/net/natsemi.c:889:
+	if (readl(ioaddr + ChipConfig) & CfgExtPhy)

CHECK:CAMELCASE: Avoid CamelCase: <CfgExtPhy>
#141: FILE: drivers/net/natsemi.c:889:
+	if (readl(ioaddr + ChipConfig) & CfgExtPhy)

CHECK:CAMELCASE: Avoid CamelCase: <EECtrl>
#173: FILE: drivers/net/natsemi.c:1030:
+	void __iomem *ee_addr = addr + EECtrl;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#233: FILE: drivers/net/natsemi.c:1149:
+		return readw(ioaddr+BasicControl+(reg<<2));
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#233: FILE: drivers/net/natsemi.c:1149:
+		return readw(ioaddr+BasicControl+(reg<<2));
 		                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#233: FILE: drivers/net/natsemi.c:1149:
+		return readw(ioaddr+BasicControl+(reg<<2));
 		                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <BasicControl>
#233: FILE: drivers/net/natsemi.c:1149:
+		return readw(ioaddr+BasicControl+(reg<<2));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#246: FILE: drivers/net/natsemi.c:1161:
+		writew(data, ioaddr+BasicControl+(reg<<2));
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#246: FILE: drivers/net/natsemi.c:1161:
+		writew(data, ioaddr+BasicControl+(reg<<2));
 		                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#246: FILE: drivers/net/natsemi.c:1161:
+		writew(data, ioaddr+BasicControl+(reg<<2));
 		                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <CfgPhyDis>
#295: FILE: drivers/net/natsemi.c:1294:
+	writel(cfg | (CfgExtPhy | CfgPhyDis), ioaddr + ChipConfig);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#328: FILE: drivers/net/natsemi.c:1334:
+	bmcr = readw(ioaddr+BasicControl+(MII_BMCR<<2));
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#328: FILE: drivers/net/natsemi.c:1334:
+	bmcr = readw(ioaddr+BasicControl+(MII_BMCR<<2));
 	                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#328: FILE: drivers/net/natsemi.c:1334:
+	bmcr = readw(ioaddr+BasicControl+(MII_BMCR<<2));
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#329: FILE: drivers/net/natsemi.c:1335:
+	writel(bmcr | BMCR_RESET, ioaddr+BasicControl+(MII_BMCR<<2));
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#329: FILE: drivers/net/natsemi.c:1335:
+	writel(bmcr | BMCR_RESET, ioaddr+BasicControl+(MII_BMCR<<2));
 	                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#329: FILE: drivers/net/natsemi.c:1335:
+	writel(bmcr | BMCR_RESET, ioaddr+BasicControl+(MII_BMCR<<2));
 	                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#334: FILE: drivers/net/natsemi.c:1339:
+		bmcr = readw(ioaddr+BasicControl+(MII_BMCR<<2));
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#334: FILE: drivers/net/natsemi.c:1339:
+		bmcr = readw(ioaddr+BasicControl+(MII_BMCR<<2));
 		                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#334: FILE: drivers/net/natsemi.c:1339:
+		bmcr = readw(ioaddr+BasicControl+(MII_BMCR<<2));
 		                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <WOLCmd>
#354: FILE: drivers/net/natsemi.c:1428:
+	wcsr = readl(ioaddr + WOLCmd) & WCSR_RESET_SAVE;

CHECK:CAMELCASE: Avoid CamelCase: <RxFilterAddr>
#357: FILE: drivers/net/natsemi.c:1430:
+	rfcr = readl(ioaddr + RxFilterAddr) & RFCR_RESET_SAVE;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#362: FILE: drivers/net/natsemi.c:1433:
+		writel(i*2, ioaddr + RxFilterAddr);
 		        ^

CHECK:CAMELCASE: Avoid CamelCase: <RxFilterData>
#363: FILE: drivers/net/natsemi.c:1434:
+		pmatch[i] = readw(ioaddr + RxFilterData);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#369: FILE: drivers/net/natsemi.c:1438:
+		writel(0xa+(i*2), ioaddr + RxFilterAddr);
 		          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#369: FILE: drivers/net/natsemi.c:1438:
+		writel(0xa+(i*2), ioaddr + RxFilterAddr);
 		             ^

CHECK:CAMELCASE: Avoid CamelCase: <ChipReset>
#375: FILE: drivers/net/natsemi.c:1443:
+	writel(ChipReset, ioaddr + ChipCmd);

CHECK:CAMELCASE: Avoid CamelCase: <ChipCmd>
#375: FILE: drivers/net/natsemi.c:1443:
+	writel(ChipReset, ioaddr + ChipCmd);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#407: FILE: drivers/net/natsemi.c:1472:
+		writel(i*2, ioaddr + RxFilterAddr);
 		        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#413: FILE: drivers/net/natsemi.c:1476:
+		writel(0xa+(i*2), ioaddr + RxFilterAddr);
 		          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#413: FILE: drivers/net/natsemi.c:1476:
+		writel(0xa+(i*2), ioaddr + RxFilterAddr);
 		             ^

CHECK:CAMELCASE: Avoid CamelCase: <EepromReload>
#428: FILE: drivers/net/natsemi.c:1489:
+	writel(EepromReload, ioaddr + PCIBusCfg);

CHECK:CAMELCASE: Avoid CamelCase: <PCIBusCfg>
#428: FILE: drivers/net/natsemi.c:1489:
+	writel(EepromReload, ioaddr + PCIBusCfg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#441: FILE: drivers/net/natsemi.c:1506:
+	void __iomem * ioaddr = ns_ioaddr(dev);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#450: FILE: drivers/net/natsemi.c:1528:
+	void __iomem * ioaddr = ns_ioaddr(dev);

CHECK:CAMELCASE: Avoid CamelCase: <CfgSpeed100>
#467: FILE: drivers/net/natsemi.c:1591:
+	if (readl(ioaddr + ChipConfig) & CfgSpeed100) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#503: FILE: drivers/net/natsemi.c:1622:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#527: FILE: drivers/net/natsemi.c:1641:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#536: FILE: drivers/net/natsemi.c:1702:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#544: FILE: drivers/net/natsemi.c:1781:
+	void __iomem * ioaddr = ns_ioaddr(dev);

CHECK:CAMELCASE: Avoid CamelCase: <RxOn>
#561: FILE: drivers/net/natsemi.c:1835:
+			writel(RxOn, ioaddr + ChipCmd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#570: FILE: drivers/net/natsemi.c:1869:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#578: FILE: drivers/net/natsemi.c:2069:
+	void __iomem * ioaddr = ns_ioaddr(dev);

CHECK:CAMELCASE: Avoid CamelCase: <TxOn>
#587: FILE: drivers/net/natsemi.c:2098:
+		writel(TxOn, ioaddr + ChipCmd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#596: FILE: drivers/net/natsemi.c:2163:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#604: FILE: drivers/net/natsemi.c:2225:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#620: FILE: drivers/net/natsemi.c:2313:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#629: FILE: drivers/net/natsemi.c:2372:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#638: FILE: drivers/net/natsemi.c:2405:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#647: FILE: drivers/net/natsemi.c:2451:
+		void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#656: FILE: drivers/net/natsemi.c:2654:
+	void __iomem * ioaddr = ns_ioaddr(dev);

CHECK:CAMELCASE: Avoid CamelCase: <WakeOptsSummary>
#657: FILE: drivers/net/natsemi.c:2655:
+	u32 data = readl(ioaddr + WOLCmd) & ~WakeOptsSummary;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#675: FILE: drivers/net/natsemi.c:2684:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#684: FILE: drivers/net/natsemi.c:2720:
+	void __iomem * ioaddr = ns_ioaddr(dev);

CHECK:CAMELCASE: Avoid CamelCase: <RFCRAddressMask>
#693: FILE: drivers/net/natsemi.c:2729:
+	addr = readl(ioaddr + RxFilterAddr) & ~RFCRAddressMask;

CHECK:CAMELCASE: Avoid CamelCase: <RxFilterEnable>
#716: FILE: drivers/net/natsemi.c:2744:
+	writel(addr | RxFilterEnable, ioaddr + RxFilterAddr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#724: FILE: drivers/net/natsemi.c:2752:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#759: FILE: drivers/net/natsemi.c:2936:
+	void __iomem * ioaddr = ns_ioaddr(dev);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#764: FILE: drivers/net/natsemi.c:2940:
+		rbuf[i] = readl(ioaddr + i*4);
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#791: FILE: drivers/net/natsemi.c:2958:
+		writel(j*2, ioaddr + RxFilterAddr);
 		        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#803: FILE: drivers/net/natsemi.c:2986:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#817: FILE: drivers/net/natsemi.c:3060:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#826: FILE: drivers/net/natsemi.c:3093:
+	void __iomem * ioaddr = ns_ioaddr(dev);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#831: FILE: drivers/net/natsemi.c:3167:
 static void __devexit natsemi_remove1 (struct pci_dev *pdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#834: FILE: drivers/net/natsemi.c:3170:
+	void __iomem * ioaddr = ns_ioaddr(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#848: FILE: drivers/net/natsemi.c:3208:
+	void __iomem * ioaddr = ns_ioaddr(dev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000245573.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 3 warnings, 44 checks, 730 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000245573.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
