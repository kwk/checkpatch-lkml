WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
Here is a first attempt at bringing Alan's 2.6 and Jason's 2.4 tty/ldisc fixes 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: drivers/char/cyclades.c:2821:
+  struct tty_ldisc *ld;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/char/cyclades.c:2939:
+    ld = tty_ldisc_ref(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/char/cyclades.c:2940:
+    if (ld) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#79: FILE: drivers/char/cyclades.c:2940:
+    if (ld) {
+	    if (ld->flush_buffer)

WARNING:TABSTOP: Statements should start on a tabstop
#80: FILE: drivers/char/cyclades.c:2941:
+	    if (ld->flush_buffer)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 12)
#80: FILE: drivers/char/cyclades.c:2941:
+	    if (ld->flush_buffer)
+	    ld->flush_buffer(tty);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/char/cyclades.c:2944:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/char/cyclades.c:4706:
+    tty_wakeup(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/char/dz.c:1087:
+  if (tty->ldisc.num != N_TTY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#108: FILE: drivers/char/dz.c:1087:
+  if (tty->ldisc.num != N_TTY) {
     if (tty->ldisc.close)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/char/dz.c:1090:
+    tty->ldisc = *(tty_ldisc_get(N_TTY));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: drivers/char/epca.c:575:
+^I^Istruct tty_ldisc *ld;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/char/epca.c:576:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#136: FILE: drivers/char/epca.c:638:
+			if (ld != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#137: FILE: drivers/char/epca.c:639:
+				if(ld->flush_buffer)
+				    ld->flush_buffer(tty);

ERROR:SPACING: space required before the open parenthesis '('
#137: FILE: drivers/char/epca.c:639:
+				if(ld->flush_buffer)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: drivers/char/epca.c:746:
+^I^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#157: FILE: drivers/char/epca.c:753:
+		if (ld != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/char/epca.c:758:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: drivers/char/epca.c:1244:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: drivers/char/generic_serial.c:740:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/char/generic_serial.c:740:
+ $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#252: FILE: drivers/char/generic_serial.c:819:
+	if (ld != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: drivers/char/generic_serial.c:820:
+^I^Iif (ld->flush_buffer) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#291: FILE: drivers/char/isicom.c:1420:
+	if (ld != NULL) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#292: FILE: drivers/char/isicom.c:1421:
+		if (ld->flush_buffer)
+		ld->flush_buffer(tty);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#329: FILE: drivers/char/moxa.c:679:
+	if (ld != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#444: FILE: drivers/char/n_tty.c:91:
+ * this is not guaranteed.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/char/n_tty.c:155:
+ * at this instant in time. $

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#530: FILE: drivers/char/n_tty.c:345:
+ * Perform erase and neccessary output when an erase character is
                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'optio' may be misspelled - perhaps 'option'?
#543: FILE: drivers/char/n_tty.c:467:
+ * isig - handle the ISIG optio
                           ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: drivers/char/n_tty.c:477:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: drivers/char/n_tty.c:477:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#598: FILE: drivers/char/n_tty.c:535:
+		printk(KERN_WARNING "%s: %d input overrun(s)\n", tty_name(tty, buf),

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#611: FILE: drivers/char/n_tty.c:548:
+ * the error case if neccessary. Locking as per n_tty_receive_buf.
                      ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: drivers/char/n_tty.c:575:
+ * This is serialized with respect to itself by the rules for the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: drivers/char/n_tty.c:903:
+ * and is protected from re-entry by the tty layer. The user is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: drivers/char/n_tty.c:975:
+ * Called from the terminal layer when this line discipline is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: drivers/char/n_tty.c:976:
+ * being shut down, either because of a close or becsuse of a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: drivers/char/n_tty.c:994:
+ * Called when this line discipline is being attached to the $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#779: FILE: drivers/char/n_tty.c:1083:
+ * error code if action should be taken.
+*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: drivers/char/n_tty.c:1084:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: drivers/char/n_tty.c:1084:
+ $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#808: FILE: drivers/char/n_tty.c:1107:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: drivers/char/n_tty.c:1123:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: drivers/char/n_tty.c:1123:
+ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/char/n_tty.c:1125:
+static ssize_t read_chan(struct tty_struct *tty, struct file *file,
+	unsigned char *buf, size_t nr)

WARNING:INDENTED_LABEL: labels should not be indented
#837: FILE: drivers/char/n_tty.c:1136:
+	do_it_again:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#838: FILE: drivers/char/n_tty.c:1137:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#840: FILE: drivers/char/n_tty.c:1139:
+		printk("n_tty_read_chan: called with read_buf == NULL?!?\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: drivers/char/n_tty.c:1142:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#845: FILE: drivers/char/n_tty.c:1144:
+	if(c < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: drivers/char/n_tty.c:1146:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#917: FILE: drivers/char/pcxx.c:624:
+		if(tty->ldisc.num != N_TTY) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#957: FILE: drivers/char/riscom8.c:1185:
+	if (ld != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#958: FILE: drivers/char/riscom8.c:1186:
+		if(ld->flush_buffer)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: drivers/char/serial167.c:1946:
+    if (tty->ldisc.num != N_TTY) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1047: FILE: drivers/char/synclink.c:1006:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1056: FILE: drivers/char/synclink.c:1015:
+static void ldisc_receive_buf(struct tty_struct *tty,
+	const __u8 *data, char *flags, int count)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: drivers/char/synclink.c:1018:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1064: FILE: drivers/char/synclink.c:1023:
+		if (ld->receive_buf)
+		ld->receive_buf(tty, data, flags, count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: drivers/char/synclink.c:3327:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1111: FILE: drivers/char/synclink.c:3328:
+^Ildisc_flush_buffer(tty); ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1111: FILE: drivers/char/synclink.c:3328:
+^Ildisc_flush_buffer(tty); ^I^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#1117: FILE: drivers/char/synclink.c:7025:
 			else
[...]
+			ldisc_receive_buf(tty, info->intermediate_rxbuffer, info->flag_buf, framesize);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1124: FILE: drivers/char/synclink.c:7027:
+			ldisc_receive_buf(tty, info->intermediate_rxbuffer, info->flag_buf, framesize);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1135: FILE: drivers/char/synclink.c:7199:
+			ldisc_receive_buf(tty, info->intermediate_rxbuffer, info->flag_buf, framesize);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1147: FILE: drivers/char/tty_io.c:105:
+#define likely(x)       __builtin_expect((x),1)
                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1165: FILE: drivers/char/tty_io.c:215:
+ */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: drivers/char/tty_io.c:219:
+ unsigned long flags;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1170: FILE: drivers/char/tty_io.c:220:
+ unsigned long flags;
+ spin_lock_irqsave(&tty_termios_lock, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: drivers/char/tty_io.c:220:
+ spin_lock_irqsave(&tty_termios_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1171: FILE: drivers/char/tty_io.c:221:
+ tty->termios->c_line = num;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1172: FILE: drivers/char/tty_io.c:222:
+ spin_unlock_irqrestore(&tty_termios_lock, flags);$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1187: FILE: drivers/char/tty_io.c:237:
 {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: drivers/char/tty_io.c:238:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: drivers/char/tty_io.c:239:
+ int ret = 0;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1196: FILE: drivers/char/tty_io.c:245:
 	if (new_ldisc) {
+	    tty_ldiscs[disc] = *new_ldisc;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1206: FILE: drivers/char/tty_io.c:250:
+	} else {
+	if(tty_ldiscs[disc].refcount)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1207: FILE: drivers/char/tty_io.c:251:
+	if(tty_ldiscs[disc].refcount)
+	    ret = -EBUSY;

ERROR:SPACING: space required before the open parenthesis '('
#1207: FILE: drivers/char/tty_io.c:251:
+	if(tty_ldiscs[disc].refcount)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1209: FILE: drivers/char/tty_io.c:253:
+	else
+	    tty_ldiscs[disc].flags &= ~LDISC_FLAG_DEFINED;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1219: FILE: drivers/char/tty_io.c:261:
+EXPORT_SYMBOL(tty_register_ldisc);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1226: FILE: drivers/char/tty_io.c:268:
+        if (disc < N_TTY || disc >= NR_LDISCS)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: drivers/char/tty_io.c:268:
+        if (disc < N_TTY || disc >= NR_LDISCS)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1229: FILE: drivers/char/tty_io.c:271:
+        spin_lock_irqsave(&tty_ldisc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: drivers/char/tty_io.c:271:
+        spin_lock_irqsave(&tty_ldisc_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1231: FILE: drivers/char/tty_io.c:273:
+        ld = &tty_ldiscs[disc];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: drivers/char/tty_io.c:273:
+        ld = &tty_ldiscs[disc];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1232: FILE: drivers/char/tty_io.c:274:
+        /* Check the entry is defined */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1233: FILE: drivers/char/tty_io.c:275:
+        if(ld->flags & LDISC_FLAG_DEFINED)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: drivers/char/tty_io.c:275:
+        if(ld->flags & LDISC_FLAG_DEFINED)$

ERROR:SPACING: space required before the open parenthesis '('
#1233: FILE: drivers/char/tty_io.c:275:
+        if(ld->flags & LDISC_FLAG_DEFINED)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1235: FILE: drivers/char/tty_io.c:277:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1235: FILE: drivers/char/tty_io.c:277:
+        else$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1241: FILE: drivers/char/tty_io.c:283:
+EXPORT_SYMBOL_GPL(tty_ldisc_get);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1245: FILE: drivers/char/tty_io.c:287:
+        struct tty_ldisc *ld;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1245: FILE: drivers/char/tty_io.c:287:
+        struct tty_ldisc *ld;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1246: FILE: drivers/char/tty_io.c:288:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1246: FILE: drivers/char/tty_io.c:288:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1248: FILE: drivers/char/tty_io.c:290:
+        if (disc < N_TTY || disc >= NR_LDISCS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1248: FILE: drivers/char/tty_io.c:290:
+        if (disc < N_TTY || disc >= NR_LDISCS)$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1249: FILE: drivers/char/tty_io.c:291:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#1251: FILE: drivers/char/tty_io.c:293:
+        spin_lock_irqsave(&tty_ldisc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1251: FILE: drivers/char/tty_io.c:293:
+        spin_lock_irqsave(&tty_ldisc_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1252: FILE: drivers/char/tty_io.c:294:
+        ld = &tty_ldiscs[disc];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1252: FILE: drivers/char/tty_io.c:294:
+        ld = &tty_ldiscs[disc];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1253: FILE: drivers/char/tty_io.c:295:
+        if(ld->refcount <= 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1253: FILE: drivers/char/tty_io.c:295:
+        if(ld->refcount <= 0)$

ERROR:SPACING: space required before the open parenthesis '('
#1253: FILE: drivers/char/tty_io.c:295:
+        if(ld->refcount <= 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1254: FILE: drivers/char/tty_io.c:296:
+		BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#1255: FILE: drivers/char/tty_io.c:297:
+        ld->refcount--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1255: FILE: drivers/char/tty_io.c:297:
+        ld->refcount--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1256: FILE: drivers/char/tty_io.c:298:
+        spin_unlock_irqrestore(&tty_ldisc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: drivers/char/tty_io.c:298:
+        spin_unlock_irqrestore(&tty_ldisc_lock, flags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1258: FILE: drivers/char/tty_io.c:300:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1258: FILE: drivers/char/tty_io.c:300:
+ $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1259: FILE: drivers/char/tty_io.c:301:
+EXPORT_SYMBOL_GPL(tty_ldisc_put);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1263: FILE: drivers/char/tty_io.c:305:
+        tty->ldisc = *ld;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1263: FILE: drivers/char/tty_io.c:305:
+        tty->ldisc = *ld;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1264: FILE: drivers/char/tty_io.c:306:
+        tty->ldisc.refcount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1264: FILE: drivers/char/tty_io.c:306:
+        tty->ldisc.refcount = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1279: FILE: drivers/char/tty_io.c:321:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1279: FILE: drivers/char/tty_io.c:321:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1280: FILE: drivers/char/tty_io.c:322:
+        struct tty_ldisc *ld;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: drivers/char/tty_io.c:322:
+        struct tty_ldisc *ld;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1281: FILE: drivers/char/tty_io.c:323:
+        int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1281: FILE: drivers/char/tty_io.c:323:
+        int ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1283: FILE: drivers/char/tty_io.c:325:
+        spin_lock_irqsave(&tty_ldisc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: drivers/char/tty_io.c:325:
+        spin_lock_irqsave(&tty_ldisc_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1284: FILE: drivers/char/tty_io.c:326:
+        ld = &tty->ldisc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1284: FILE: drivers/char/tty_io.c:326:
+        ld = &tty->ldisc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1285: FILE: drivers/char/tty_io.c:327:
+        if(test_bit(TTY_LDISC, &tty->flags)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: drivers/char/tty_io.c:327:
+        if(test_bit(TTY_LDISC, &tty->flags)) {$

ERROR:SPACING: space required before the open parenthesis '('
#1285: FILE: drivers/char/tty_io.c:327:
+        if(test_bit(TTY_LDISC, &tty->flags)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1286: FILE: drivers/char/tty_io.c:328:
+^I        ld->refcount++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: drivers/char/tty_io.c:329:
+    ^I        ret = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1287: FILE: drivers/char/tty_io.c:329:
+    ^I        ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: drivers/char/tty_io.c:329:
+    ^I        ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: drivers/char/tty_io.c:331:
+    spin_unlock_irqrestore(&tty_ldisc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: drivers/char/tty_io.c:332:
+    return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1309: FILE: drivers/char/tty_io.c:351:
+        /* wait_event is a macro */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1310: FILE: drivers/char/tty_io.c:352:
+        wait_event(tty_ldisc_wait, tty_ldisc_try(tty));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1310: FILE: drivers/char/tty_io.c:352:
+        wait_event(tty_ldisc_wait, tty_ldisc_try(tty));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1311: FILE: drivers/char/tty_io.c:353:
+        return &tty->ldisc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: drivers/char/tty_io.c:353:
+        return &tty->ldisc;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1314: FILE: drivers/char/tty_io.c:356:
+EXPORT_SYMBOL_GPL(tty_ldisc_ref_wait);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: drivers/char/tty_io.c:369:
+        if(tty_ldisc_try(tty))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: drivers/char/tty_io.c:369:
+        if(tty_ldisc_try(tty))$

ERROR:SPACING: space required before the open parenthesis '('
#1327: FILE: drivers/char/tty_io.c:369:
+        if(tty_ldisc_try(tty))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1329: FILE: drivers/char/tty_io.c:371:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1329: FILE: drivers/char/tty_io.c:371:
+        return NULL;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1332: FILE: drivers/char/tty_io.c:374:
+EXPORT_SYMBOL_GPL(tty_ldisc_ref);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1336: FILE: drivers/char/tty_io.c:378:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: drivers/char/tty_io.c:378:
+        unsigned long flags;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1338: FILE: drivers/char/tty_io.c:380:
+	if(ld == NULL)
+	    BUG();

ERROR:SPACING: space required before the open parenthesis '('
#1338: FILE: drivers/char/tty_io.c:380:
+	if(ld == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#1338: FILE: drivers/char/tty_io.c:380:
+	if(ld == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1339: FILE: drivers/char/tty_io.c:381:
+	    BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#1341: FILE: drivers/char/tty_io.c:383:
+        spin_lock_irqsave(&tty_ldisc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: drivers/char/tty_io.c:383:
+        spin_lock_irqsave(&tty_ldisc_lock, flags);$

ERROR:SPACING: space required before the open parenthesis '('
#1342: FILE: drivers/char/tty_io.c:384:
+	if(ld->refcount == 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1343: FILE: drivers/char/tty_io.c:385:
+		printk(KERN_EMERG "tty_ldisc_deref: no references.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tty_ldisc_deref', this function's name, in a string
#1343: FILE: drivers/char/tty_io.c:385:
+		printk(KERN_EMERG "tty_ldisc_deref: no references.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1344: FILE: drivers/char/tty_io.c:386:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: drivers/char/tty_io.c:386:
+        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1345: FILE: drivers/char/tty_io.c:387:
+        ^Ild->refcount--;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1345: FILE: drivers/char/tty_io.c:387:
+        ^Ild->refcount--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: drivers/char/tty_io.c:387:
+        ^Ild->refcount--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1346: FILE: drivers/char/tty_io.c:388:
+        if(ld->refcount == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: drivers/char/tty_io.c:388:
+        if(ld->refcount == 0)$

ERROR:SPACING: space required before the open parenthesis '('
#1346: FILE: drivers/char/tty_io.c:388:
+        if(ld->refcount == 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1348: FILE: drivers/char/tty_io.c:390:
+        spin_unlock_irqrestore(&tty_ldisc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1348: FILE: drivers/char/tty_io.c:390:
+        spin_unlock_irqrestore(&tty_ldisc_lock, flags);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1351: FILE: drivers/char/tty_io.c:393:
+EXPORT_SYMBOL_GPL(tty_ldisc_deref);

WARNING:INDENTED_LABEL: labels should not be indented
#1374: FILE: drivers/char/tty_io.c:416:
+	restart:

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1376: FILE: drivers/char/tty_io.c:418:
+	if (tty->ldisc.num == ldisc)
+	    return 0; /* We are already in the desired discipline */

WARNING:TABSTOP: Statements should start on a tabstop
#1377: FILE: drivers/char/tty_io.c:419:
+	    return 0; /* We are already in the desired discipline */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#1383: FILE: drivers/char/tty_io.c:424:
+	if (ld == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#1390: FILE: drivers/char/tty_io.c:429:
+	if (ld == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1397: FILE: drivers/char/tty_io.c:433:
+	/*
+	* Make sure we don't change while someone holds a

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1404: FILE: drivers/char/tty_io.c:440:
+	if(tty->ldisc.refcount)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1404: FILE: drivers/char/tty_io.c:440:
+	if(tty->ldisc.refcount)
[...]
+	      first. */

ERROR:SPACING: space required before the open parenthesis '('
#1404: FILE: drivers/char/tty_io.c:440:
+	if(tty->ldisc.refcount)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1407: FILE: drivers/char/tty_io.c:443:
+	    /* Free the new ldisc we grabbed. Must drop the lock
+	      first. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1407: FILE: drivers/char/tty_io.c:443:
+	      first. */

WARNING:TABSTOP: Statements should start on a tabstop
#1410: FILE: drivers/char/tty_io.c:446:
+	    if(wait_event_interruptible(tty_ldisc_wait, tty->ldisc.refcount == 0) < 0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#1410: FILE: drivers/char/tty_io.c:446:
+	    if(wait_event_interruptible(tty_ldisc_wait, tty->ldisc.refcount == 0) < 0)
+		    return -ERESTARTSYS;

ERROR:SPACING: space required before the open parenthesis '('
#1410: FILE: drivers/char/tty_io.c:446:
+	    if(wait_event_interruptible(tty_ldisc_wait, tty->ldisc.refcount == 0) < 0)

WARNING:TABSTOP: Statements should start on a tabstop
#1411: FILE: drivers/char/tty_io.c:447:
+		    return -ERESTARTSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#1412: FILE: drivers/char/tty_io.c:448:
+	    goto restart;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1417: FILE: drivers/char/tty_io.c:453:
+^I^I     $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1460: FILE: drivers/char/tty_io.c:493:
+	/* At this point we hold a reference to the new ldisc and a
+	reference to the old ldisc. If we ended up flipping back

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1461: FILE: drivers/char/tty_io.c:494:
+	to the existing ldisc we have two references to it */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1471: FILE: drivers/char/tty_io.c:504:
+	 * ldisc callback completes.
+	*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1475: FILE: drivers/char/tty_io.c:508:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1490: FILE: drivers/char/tty_io.c:630:
+	if (test_bit(TTY_DO_WRITE_WAKEUP, &tty->flags)) {
+	    ld = tty_ldisc_ref(tty);

WARNING:TABSTOP: Statements should start on a tabstop
#1492: FILE: drivers/char/tty_io.c:632:
+	    if(ld) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#1492: FILE: drivers/char/tty_io.c:632:
+	    if(ld) {
+		    if(ld->write_wakeup)

ERROR:SPACING: space required before the open parenthesis '('
#1492: FILE: drivers/char/tty_io.c:632:
+	    if(ld) {

WARNING:TABSTOP: Statements should start on a tabstop
#1493: FILE: drivers/char/tty_io.c:633:
+		    if(ld->write_wakeup)

ERROR:SPACING: space required before the open parenthesis '('
#1493: FILE: drivers/char/tty_io.c:633:
+		    if(ld->write_wakeup)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1494: FILE: drivers/char/tty_io.c:634:
+^I    ^I^Ild->write_wakeup(tty);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1494: FILE: drivers/char/tty_io.c:634:
+^I    ^I^Ild->write_wakeup(tty);$

WARNING:TABSTOP: Statements should start on a tabstop
#1496: FILE: drivers/char/tty_io.c:636:
+	    }

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1500: FILE: drivers/char/tty_io.c:640:
+EXPORT_SYMBOL_GPL(tty_wakeup);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1524: FILE: drivers/char/tty_io.c:685:
+^I^Iif(ld != NULL) ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1524: FILE: drivers/char/tty_io.c:685:
+^I^Iif(ld != NULL) ^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1524: FILE: drivers/char/tty_io.c:685:
+		if(ld != NULL) 	
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1524: FILE: drivers/char/tty_io.c:685:
+		if(ld != NULL) 	
+		{

ERROR:SPACING: space required before the open parenthesis '('
#1524: FILE: drivers/char/tty_io.c:685:
+		if(ld != NULL) 	

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1524: FILE: drivers/char/tty_io.c:685:
+		if(ld != NULL) 	

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1535: FILE: drivers/char/tty_io.c:691:
+		if ((test_bit(TTY_DO_WRITE_WAKEUP, &tty->flags)) && ld->write_wakeup)
+		    ld->write_wakeup(tty);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1548: FILE: drivers/char/tty_io.c:706:
 	if (tty->driver.flags & TTY_DRIVER_RESET_TERMIOS)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#1551: FILE: drivers/char/tty_io.c:709:
+		unsigned long flags;
+		spin_lock_irqsave(&tty_termios_lock, flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1578: FILE: drivers/char/tty_io.c:749:
+	/* We don't want to have driver/ldisc interactions beyond
+	   the ones we did here. The driver layer expects no

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1580: FILE: drivers/char/tty_io.c:751:
+	   can't yet guarantee all that */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1583: FILE: drivers/char/tty_io.c:754:
+	if(ld)
+    	    tty_ldisc_deref(ld);

ERROR:SPACING: space required before the open parenthesis '('
#1583: FILE: drivers/char/tty_io.c:754:
+	if(ld)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1584: FILE: drivers/char/tty_io.c:755:
+    ^I    tty_ldisc_deref(ld);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1584: FILE: drivers/char/tty_io.c:755:
+    ^I    tty_ldisc_deref(ld);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: drivers/char/tty_io.c:755:
+    ^I    tty_ldisc_deref(ld);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1596: FILE: drivers/char/tty_io.c:866:
+^I    tty_wakeup(tty);^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1615: FILE: drivers/char/tty_io.c:907:
+	/* We want to wait for the line discipline to sort out in this
+	   situation */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1615: FILE: drivers/char/tty_io.c:907:
+	   situation */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1619: FILE: drivers/char/tty_io.c:911:
+		i = (ld->read)(tty,file,buf,count);
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1619: FILE: drivers/char/tty_io.c:911:
+		i = (ld->read)(tty,file,buf,count);
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1619: FILE: drivers/char/tty_io.c:911:
+		i = (ld->read)(tty,file,buf,count);
 		                           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->read)
#1619: FILE: drivers/char/tty_io.c:911:
+		i = (ld->read)(tty,file,buf,count);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1634: FILE: drivers/char/tty_io.c:988:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1652: FILE: drivers/char/tty_io.c:1026:
+		ret = do_tty_write(ld->write, tty, file,
+				(const unsigned char *) buf, count);

CHECK:SPACING: No space is necessary after a cast
#1652: FILE: drivers/char/tty_io.c:1026:
+				(const unsigned char *) buf, count);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1664: FILE: drivers/char/tty_io.c:1194:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: drivers/char/tty_io.c:1194:
+         }$

ERROR:SPACING: space required before the open parenthesis '('
#1675: FILE: drivers/char/tty_io.c:1224:
+	if(!test_bit(TTY_LDISC, &tty->flags))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1676: FILE: drivers/char/tty_io.c:1225:
+		printk(KERN_ERR "init_dev but no ldisc\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1700: FILE: drivers/char/tty_io.c:1514:
+	/*
+	* Wait for any short term users (we know they are just driver

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1704: FILE: drivers/char/tty_io.c:1518:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1706: FILE: drivers/char/tty_io.c:1520:
+	while(tty->ldisc.refcount)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1706: FILE: drivers/char/tty_io.c:1520:
+	while(tty->ldisc.refcount)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1713: FILE: drivers/char/tty_io.c:1527:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1729: FILE: drivers/char/tty_io.c:1541:
+^Itty_set_termios_ldisc(tty,N_TTY); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1729: FILE: drivers/char/tty_io.c:1541:
+	tty_set_termios_ldisc(tty,N_TTY); 
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1730: FILE: drivers/char/tty_io.c:1542:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1730: FILE: drivers/char/tty_io.c:1542:
+       $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1739: FILE: drivers/char/tty_io.c:1550:
+		tty_set_termios_ldisc(o_tty,N_TTY);
 		                           ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1759: FILE: drivers/char/tty_io.c:1733:
+	        ret = (ld->poll)(tty, filp, wait);
 	                              ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1759: FILE: drivers/char/tty_io.c:1733:
+^I        ret = (ld->poll)(tty, filp, wait);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->poll)
#1759: FILE: drivers/char/tty_io.c:1733:
+	        ret = (ld->poll)(tty, filp, wait);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->driver.ioctl)
#1803: FILE: drivers/char/tty_io.c:2123:
+		retval = (tty->driver.ioctl)(tty, file, cmd, arg);

ERROR:SPACING: space required before the open parenthesis '('
#1814: FILE: drivers/char/tty_io.c:2130:
+		if(likely(test_bit(TTY_LDISC, &tty->flags)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!disc"
#1855: FILE: drivers/char/tty_io.c:2209:
+	if (disc == NULL) /* !TTY_LDISC */

WARNING:INDENTED_LABEL: labels should not be indented
#1872: FILE: drivers/char/tty_io.c:2237:
+	out:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1885: FILE: drivers/char/tty_io.c:2250:
+^I $

ERROR:SPACING: space required before the open parenthesis '('
#1887: FILE: drivers/char/tty_io.c:2252:
+	if(test_bit(TTY_DONT_FLIP, &tty->flags))

ERROR:SPACING: space required before the open parenthesis '('
#1889: FILE: drivers/char/tty_io.c:2254:
+	else if(disc == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!disc"
#1889: FILE: drivers/char/tty_io.c:2254:
+	else if(disc == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1913: FILE: drivers/char/tty_io.c:2442:
+	memset(tty_ldiscs, 0, NR_LDISCS*sizeof(struct tty_ldisc));
 	                               ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1924: FILE: drivers/char/tty_ioctl.c:36:
+extern spinlock_t tty_termios_lock;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1941: FILE: drivers/char/tty_ioctl.c:113:
+           for the set_termios notification eventually */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1941: FILE: drivers/char/tty_ioctl.c:113:
+	/* FIXME: we need to decide on some locking/ordering semantics
+           for the set_termios notification eventually */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1941: FILE: drivers/char/tty_ioctl.c:113:
+           for the set_termios notification eventually */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1953: FILE: drivers/char/tty_ioctl.c:125:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1964: FILE: drivers/char/tty_ioctl.c:157:
+	if (ld != NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->set_termios)
#1966: FILE: drivers/char/tty_ioctl.c:159:
+			(ld->set_termios)(tty, &old_termios);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#1991: FILE: drivers/char/tty_ioctl.c:185:
+	if (ld != NULL) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1992: FILE: drivers/char/tty_ioctl.c:186:
+		if ((opt & TERMIOS_FLUSH) && ld->flush_buffer)
+		    ld->flush_buffer(tty);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2021: FILE: drivers/char/tty_ioctl.c:302:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2124: FILE: drivers/net/slip.c:917:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2136: FILE: drivers/net/slip.c:937:
+ * call is serialized against other ldisc functions $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#2197: FILE: fs/proc/proc_tty.c:121:
+		if (ld == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2198: FILE: fs/proc/proc_tty.c:122:
+^I^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2258: FILE: include/linux/tty.h:398:
+extern struct tty_ldisc *tty_ldisc_ref(struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#2258: FILE: include/linux/tty.h:398:
+extern struct tty_ldisc *tty_ldisc_ref(struct tty_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2259: FILE: include/linux/tty.h:399:
+extern void tty_ldisc_deref(struct tty_ldisc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_ldisc *' should also have an identifier name
#2259: FILE: include/linux/tty.h:399:
+extern void tty_ldisc_deref(struct tty_ldisc *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2260: FILE: include/linux/tty.h:400:
+extern struct tty_ldisc *tty_ldisc_ref_wait(struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#2260: FILE: include/linux/tty.h:400:
+extern struct tty_ldisc *tty_ldisc_ref_wait(struct tty_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2262: FILE: include/linux/tty.h:402:
+extern struct tty_ldisc *tty_ldisc_get(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2262: FILE: include/linux/tty.h:402:
+extern struct tty_ldisc *tty_ldisc_get(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2263: FILE: include/linux/tty.h:403:
+extern void tty_ldisc_put(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2263: FILE: include/linux/tty.h:403:
+extern void tty_ldisc_put(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2265: FILE: include/linux/tty.h:405:
+extern void tty_wakeup(struct tty_struct *tty);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2267: FILE: include/linux/tty.h:407:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234894.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 113 errors, 139 warnings, 33 checks, 2048 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234894.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
