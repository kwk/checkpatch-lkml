WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -ruNp 623-generic-block-io.patch-old/kernel/power/block_io.h 623-generic-block-io.patch-new/kernel/power/block_io.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#31: FILE: kernel/power/block_io.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: kernel/power/block_io.h:12:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#56: FILE: kernel/power/block_io.h:26:
+	struct page * page;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#57: FILE: kernel/power/block_io.h:27:
+	struct block_device * dev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: kernel/power/block_io.h:30:
+	struct submit_params * next;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#63: FILE: kernel/power/block_io.h:33:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: kernel/power/block_io.h:34:
+/* $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#69: FILE: kernel/power/block_io.h:39:
+	int (*set_block_size) (struct block_device * bdev, int size);

WARNING:SPACING: Unnecessary space before function pointer arguments
#69: FILE: kernel/power/block_io.h:39:
+	int (*set_block_size) (struct block_device * bdev, int size);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#70: FILE: kernel/power/block_io.h:40:
+	int (*get_block_size) (struct block_device * bdev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#70: FILE: kernel/power/block_io.h:40:
+	int (*get_block_size) (struct block_device * bdev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: kernel/power/block_io.h:41:
+^Iint (*submit_io) (int rw, $

WARNING:SPACING: Unnecessary space before function pointer arguments
#71: FILE: kernel/power/block_io.h:41:
+	int (*submit_io) (int rw, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: kernel/power/block_io.h:42:
+	int (*submit_io) (int rw, 
+		struct submit_params * submit_info, int syncio);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#72: FILE: kernel/power/block_io.h:42:
+		struct submit_params * submit_info, int syncio);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: kernel/power/block_io.h:43:
+	int (*bdev_page_io) (int rw, struct block_device * bdev, long pos,

WARNING:SPACING: Unnecessary space before function pointer arguments
#73: FILE: kernel/power/block_io.h:43:
+	int (*bdev_page_io) (int rw, struct block_device * bdev, long pos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: kernel/power/block_io.h:44:
+	int (*bdev_page_io) (int rw, struct block_device * bdev, long pos,
+			struct page * page);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: kernel/power/block_io.h:44:
+			struct page * page);

WARNING:SPACING: Unnecessary space before function pointer arguments
#75: FILE: kernel/power/block_io.h:45:
+	void (*wait_on_readahead) (int readahead_index);

WARNING:SPACING: Unnecessary space before function pointer arguments
#76: FILE: kernel/power/block_io.h:46:
+	void (*check_io_stats) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#77: FILE: kernel/power/block_io.h:47:
+	void (*reset_io_stats) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#78: FILE: kernel/power/block_io.h:48:
+	void (*finish_all_io) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#79: FILE: kernel/power/block_io.h:49:
+	int (*prepare_readahead) (int index);

WARNING:SPACING: Unnecessary space before function pointer arguments
#80: FILE: kernel/power/block_io.h:50:
+	void (*cleanup_readahead) (int index);

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#81: FILE: kernel/power/block_io.h:51:
+	struct page ** readahead_pages;

WARNING:SPACING: Unnecessary space before function pointer arguments
#82: FILE: kernel/power/block_io.h:52:
+	int (*readahead_ready) (int readahead_index);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: kernel/power/suspend_block_io.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: kernel/power/suspend_block_io.c:7:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: kernel/power/suspend_block_io.c:49:
+	struct bio * sys_struct;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#139: FILE: kernel/power/suspend_block_io.c:50:
+	long block[PAGE_SIZE/512];
 	                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#140: FILE: kernel/power/suspend_block_io.c:51:
+	struct page * buffer_page;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: kernel/power/suspend_block_io.c:52:
+	struct page * data_page;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: kernel/power/suspend_block_io.c:54:
+	struct block_device * dev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#169: FILE: kernel/power/suspend_block_io.c:80:
+struct task_struct * suspend_bio_task;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#173: FILE: kernel/power/suspend_block_io.c:84:
+static int max_outstanding_io = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#177: FILE: kernel/power/suspend_block_io.c:88:
+static int infopages = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#178: FILE: kernel/power/suspend_block_io.c:89:
+static int maxinfopages = 0;

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#181: FILE: kernel/power/suspend_block_io.c:92:
+static volatile unsigned long suspend_readahead_flags[(MAX_READAHEAD + BITS_PER_UL - 1) / BITS_PER_UL];

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#181: FILE: kernel/power/suspend_block_io.c:92:
+static volatile unsigned long suspend_readahead_flags[(MAX_READAHEAD + BITS_PER_UL - 1) / BITS_PER_UL];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: kernel/power/suspend_block_io.c:94:
+static struct page * suspend_readahead_pages[MAX_READAHEAD];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: kernel/power/suspend_block_io.c:98:
+static char * sch_caller[] = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: kernel/power/suspend_block_io.c:109:
+static int __suspend_io_cleanup(void * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: kernel/power/suspend_block_io.c:119:
+	struct io_info * first;

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: kernel/power/suspend_block_io.c:123:
+	while(!list_empty(&ioinfo_ready_for_cleanup)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: kernel/power/suspend_block_io.c:125:
+		int result;
+		first = list_entry(ioinfo_ready_for_cleanup.next, struct io_info, list);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#216: FILE: kernel/power/suspend_block_io.c:127:
+		BUG_ON(!test_and_clear_bit(IO_AWAITING_CLEANUP, &first->flags));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#222: FILE: kernel/power/suspend_block_io.c:133:
+		result = __suspend_io_cleanup((void *) first);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: kernel/power/suspend_block_io.c:148:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: kernel/power/suspend_block_io.c:158:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#252: FILE: kernel/power/suspend_block_io.c:163:
+		struct block_device * bdev = swap_info[device].bdev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#255: FILE: kernel/power/suspend_block_io.c:166:
+			request_queue_t * q = bdev_get_queue(bdev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: kernel/power/suspend_block_io.c:167:
+			request_queue_t * q = bdev_get_queue(bdev);
+			if (q && q->unplug_fn)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: kernel/power/suspend_block_io.c:180:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: kernel/power/suspend_block_io.c:184:
+static inline void cleanup_one(struct io_info * io_info)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#275: FILE: kernel/power/suspend_block_io.c:186:
+	struct page * buffer_page;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: kernel/power/suspend_block_io.c:187:
+	struct page * data_page;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: kernel/power/suspend_block_io.c:196:
+^I^I"Cleanup IO: [%p]\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: kernel/power/suspend_block_io.c:196:
+	suspend_message(SUSPEND_WRITER, SUSPEND_HIGH, 0,
+		"Cleanup IO: [%p]\n", 

CHECK:SPACING: No space is necessary after a cast
#292: FILE: kernel/power/suspend_block_io.c:203:
+		data_address = (char *) kmap(data_page);

CHECK:SPACING: No space is necessary after a cast
#293: FILE: kernel/power/suspend_block_io.c:204:
+		buffer_address = (char *) kmap(buffer_page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: kernel/power/suspend_block_io.c:209:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#299: FILE: kernel/power/suspend_block_io.c:210:
+	
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#301: FILE: kernel/power/suspend_block_io.c:212:
+	if (!reading || io_info->readahead_index == -1) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#304: FILE: kernel/power/suspend_block_io.c:215:
+			printk(KERN_EMERG "Cleanup IO: Page count on page %p is %d. Not good!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: kernel/power/suspend_block_io.c:216:
+			printk(KERN_EMERG "Cleanup IO: Page count on page %p is %d. Not good!\n",
+					buffer_page, page_count(buffer_page));

CHECK:BRACES: Unbalanced braces around else statement
#309: FILE: kernel/power/suspend_block_io.c:220:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: kernel/power/suspend_block_io.c:222:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: kernel/power/suspend_block_io.c:234:
+static struct io_info * get_io_info_struct(void)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: kernel/power/suspend_block_io.c:237:
+	struct io_info * this = NULL;

CHECK:SPACING: No space is necessary after a cast
#354: FILE: kernel/power/suspend_block_io.c:265:
+		this = (struct io_info *) newpage;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: kernel/power/suspend_block_io.c:270:
+^I^I^Ithis = (struct io_info *) (((char *) this) + $

CHECK:SPACING: No space is necessary after a cast
#359: FILE: kernel/power/suspend_block_io.c:270:
+			this = (struct io_info *) (((char *) this) + 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#383: FILE: kernel/power/suspend_block_io.c:294:
+	struct io_info * this, * next = NULL;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#383: FILE: kernel/power/suspend_block_io.c:294:
+	struct io_info * this, * next = NULL;
 	                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: kernel/power/suspend_block_io.c:302:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: kernel/power/suspend_block_io.c:303:
+^I/* $

CHECK:SPACING: No space is necessary after a cast
#398: FILE: kernel/power/suspend_block_io.c:309:
+		if (((unsigned long) this) & ~PAGE_MASK)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: kernel/power/suspend_block_io.c:313:
+^I/* $

CHECK:SPACING: No space is necessary after a cast
#409: FILE: kernel/power/suspend_block_io.c:320:
+		free_pages((unsigned long) this, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: kernel/power/suspend_block_io.c:325:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#423: FILE: kernel/power/suspend_block_io.c:334:
+static void wait_on_one_page(struct io_info * io_info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: kernel/power/suspend_block_io.c:347:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: kernel/power/suspend_block_io.c:350:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#448: FILE: kernel/power/suspend_block_io.c:359:
+ * ^I^Iany debugging info wanted.$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#454: FILE: kernel/power/suspend_block_io.c:365:
+	BUG_ON(atomic_read(&outstanding_io));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#455: FILE: kernel/power/suspend_block_io.c:366:
+	BUG_ON(infopages);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#456: FILE: kernel/power/suspend_block_io.c:367:
+	BUG_ON(!list_empty(&ioinfo_submit_batch));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#457: FILE: kernel/power/suspend_block_io.c:368:
+	BUG_ON(!list_empty(&ioinfo_busy));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#458: FILE: kernel/power/suspend_block_io.c:369:
+	BUG_ON(!list_empty(&ioinfo_ready_for_cleanup));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#459: FILE: kernel/power/suspend_block_io.c:370:
+	BUG_ON(!list_empty(&ioinfo_free));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#460: FILE: kernel/power/suspend_block_io.c:371:
+	BUG_ON(atomic_read(&buffer_allocs) != atomic_read(&buffer_frees));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: kernel/power/suspend_block_io.c:375:
+		suspend_message(SUSPEND_WRITER, SUSPEND_MEDIUM, 0,
+			"Outstanding_io after writing is %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: kernel/power/suspend_block_io.c:389:
+		suspend_message(SUSPEND_WRITER, SUSPEND_MEDIUM, 0,
+			"Buffer allocs (%d) != buffer frees (%d)",

ERROR:SPACING: space required before the open parenthesis '('
#481: FILE: kernel/power/suspend_block_io.c:392:
+	for(i = 0; i < 8; i++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: kernel/power/suspend_block_io.c:394:
+		suspend_message(SUSPEND_WRITER, SUSPEND_MEDIUM, 0,
+			"Nr schedule calls %s: %lu.\n", sch_caller[i], nr_schedule_calls[i]);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#489: FILE: kernel/power/suspend_block_io.c:400:
+static int __suspend_io_cleanup(void * data)

CHECK:SPACING: No space is necessary after a cast
#491: FILE: kernel/power/suspend_block_io.c:402:
+	struct io_info * io_info = (struct io_info *) data;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#491: FILE: kernel/power/suspend_block_io.c:402:
+	struct io_info * io_info = (struct io_info *) data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: kernel/power/suspend_block_io.c:415:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#514: FILE: kernel/power/suspend_block_io.c:425:
+		int index = readahead_index/(8 * sizeof(unsigned long));
 		                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#516: FILE: kernel/power/suspend_block_io.c:427:
+		int bit = readahead_index - (index * 8 * sizeof(unsigned long));
+		spin_lock_irqsave(&suspend_readahead_flags_lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: kernel/power/suspend_block_io.c:435:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#526: FILE: kernel/power/suspend_block_io.c:437:
+	 * finish_all_io when using keventd to do the cleanup */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#536: FILE: kernel/power/suspend_block_io.c:447:
+ * ^I^Iis completed. This is the reason we use spinlocks in$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: kernel/power/suspend_block_io.c:448:
+ * ^I^Imanipulating the io_info lists. ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: kernel/power/suspend_block_io.c:448:
+ * ^I^Imanipulating the io_info lists. ^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: kernel/power/suspend_block_io.c:449:
+ * ^I^INearly the fs/buffer.c version, but we want to mark the page as $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#538: FILE: kernel/power/suspend_block_io.c:449:
+ * ^I^INearly the fs/buffer.c version, but we want to mark the page as $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#539: FILE: kernel/power/suspend_block_io.c:450:
+ * ^I^Idone in our own structures too.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#542: FILE: kernel/power/suspend_block_io.c:453:
+static int suspend_end_bio(struct bio * bio, unsigned int num, int err)

CHECK:SPACING: No space is necessary after a cast
#544: FILE: kernel/power/suspend_block_io.c:455:
+	struct io_info *io_info = (struct io_info *) bio->bi_private;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: kernel/power/suspend_block_io.c:463:
+^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#564: FILE: kernel/power/suspend_block_io.c:475:
+ * ^IBased on Patrick's pmdisk code from long ago:$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#573: FILE: kernel/power/suspend_block_io.c:484:
+static int submit(int rw, struct io_info * io_info)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#576: FILE: kernel/power/suspend_block_io.c:487:
+	struct bio * bio = NULL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#580: FILE: kernel/power/suspend_block_io.c:491:
+		bio = bio_alloc(GFP_ATOMIC,1);
 		                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#592: FILE: kernel/power/suspend_block_io.c:503:
+		printk("ERROR: adding page to bio at %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: kernel/power/suspend_block_io.c:504:
+		printk("ERROR: adding page to bio at %ld\n",
+				io_info->block[0]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: kernel/power/suspend_block_io.c:515:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: kernel/power/suspend_block_io.c:516:
+	submit_bio(rw,bio);
 	             ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#614: FILE: kernel/power/suspend_block_io.c:525:
+ * ^I^Ibecause we have different versions for 2.4 and 2.6.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#616: FILE: kernel/power/suspend_block_io.c:527:
+static int suspend_set_block_size(struct block_device * bdev, int size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#621: FILE: kernel/power/suspend_block_io.c:532:
+static int suspend_get_block_size(struct block_device * bdev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: kernel/power/suspend_block_io.c:537:
+/* $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#631: FILE: kernel/power/suspend_block_io.c:542:
+	struct io_info * first;

ERROR:SPACING: space required before the open parenthesis '('
#636: FILE: kernel/power/suspend_block_io.c:547:
+	while(!list_empty(&ioinfo_submit_batch)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#639: FILE: kernel/power/suspend_block_io.c:550:
+		BUG_ON(!test_and_clear_bit(IO_AWAITING_SUBMIT, &first->flags));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: kernel/power/suspend_block_io.c:564:
+^I^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#662: FILE: kernel/power/suspend_block_io.c:573:
+}
+static void add_to_batch(struct io_info * io_info)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#662: FILE: kernel/power/suspend_block_io.c:573:
+static void add_to_batch(struct io_info * io_info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: kernel/power/suspend_block_io.c:576:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!suspend_bio_task'
#675: FILE: kernel/power/suspend_block_io.c:586:
+	if ((!suspend_bio_task) && (atomic_read(&submit_batch) >= submit_batch_size))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#678: FILE: kernel/power/suspend_block_io.c:589:
+}
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#682: FILE: kernel/power/suspend_block_io.c:593:
+ * ^I^INote that we use our own buffer for reading or writing.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#683: FILE: kernel/power/suspend_block_io.c:594:
+ * ^I^IThis simplifies doing readahead and asynchronous writing.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#684: FILE: kernel/power/suspend_block_io.c:595:
+ * ^I^IWe can begin a read without knowing the location into which$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#685: FILE: kernel/power/suspend_block_io.c:596:
+ * ^I^Ithe data will eventually be placed, and the buffer passed$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: kernel/power/suspend_block_io.c:597:
+ * ^I^Ifor a write can be reused immediately (essential for the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#687: FILE: kernel/power/suspend_block_io.c:598:
+ * ^I^Iplugins system).$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#688: FILE: kernel/power/suspend_block_io.c:599:
+ * ^I^IFailure? What's that?$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#691: FILE: kernel/power/suspend_block_io.c:602:
+static struct io_info * start_one(int rw, struct submit_params * submit_info)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#691: FILE: kernel/power/suspend_block_io.c:602:
+static struct io_info * start_one(int rw, struct submit_params * submit_info)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#693: FILE: kernel/power/suspend_block_io.c:604:
+	struct io_info * io_info = get_io_info_struct();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#695: FILE: kernel/power/suspend_block_io.c:606:
+	char * to, * from;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#695: FILE: kernel/power/suspend_block_io.c:606:
+	char * to, * from;
 	           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#696: FILE: kernel/power/suspend_block_io.c:607:
+	struct page * buffer_page;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: kernel/power/suspend_block_io.c:615:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#718: FILE: kernel/power/suspend_block_io.c:629:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#722: FILE: kernel/power/suspend_block_io.c:633:
+		int index = io_info->readahead_index/(8 * sizeof(unsigned long));
 		                                    ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#729: FILE: kernel/power/suspend_block_io.c:640:
+		io_info->buffer_page = buffer_page = submit_info->page;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#735: FILE: kernel/power/suspend_block_io.c:646:
+	 * actual source page's address. */

CHECK:SPACING: No space is necessary after a cast
#739: FILE: kernel/power/suspend_block_io.c:650:
+		to = (char *) buffer_virt;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: kernel/power/suspend_block_io.c:660:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#765: FILE: kernel/power/suspend_block_io.c:676:
+^I ^Isubmit(rw, io_info);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#765: FILE: kernel/power/suspend_block_io.c:676:
+^I ^Isubmit(rw, io_info);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: kernel/power/suspend_block_io.c:677:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: kernel/power/suspend_block_io.c:681:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: kernel/power/suspend_block_io.c:685:
+static int suspend_do_io(int rw, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#775: FILE: kernel/power/suspend_block_io.c:686:
+static int suspend_do_io(int rw, 
+		struct submit_params * submit_info, int syncio)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#775: FILE: kernel/power/suspend_block_io.c:686:
+		struct submit_params * submit_info, int syncio)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#777: FILE: kernel/power/suspend_block_io.c:688:
+	struct io_info * io_info = start_one(rw, submit_info);

WARNING:LINE_SPACING: Missing a blank line after declarations
#778: FILE: kernel/power/suspend_block_io.c:689:
+	struct io_info * io_info = start_one(rw, submit_info);
+	if (!io_info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#787: FILE: kernel/power/suspend_block_io.c:698:
+} $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#794: FILE: kernel/power/suspend_block_io.c:705:
+static int suspend_bdev_page_io(int rw, struct block_device * bdev, long pos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#795: FILE: kernel/power/suspend_block_io.c:706:
+static int suspend_bdev_page_io(int rw, struct block_device * bdev, long pos,
+		struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#795: FILE: kernel/power/suspend_block_io.c:706:
+		struct page * page)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#813: FILE: kernel/power/suspend_block_io.c:724:
+	int index = readahead_index/(8 * sizeof(unsigned long));
 	                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#829: FILE: kernel/power/suspend_block_io.c:740:
+	int index = readahead_index/(8 * sizeof(unsigned long));
 	                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#836: FILE: kernel/power/suspend_block_io.c:747:
+ * Set up for doing readahead on an image */

ERROR:SPACING: space required before the open parenthesis '('
#841: FILE: kernel/power/suspend_block_io.c:752:
+	if(!new_page)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#849: FILE: kernel/power/suspend_block_io.c:760:
+ * Clean up structures used for readahead */

WARNING:RETURN_VOID: void function return statements are not generally useful
#855: FILE: kernel/power/suspend_block_io.c:766:
+	return;
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#860: FILE: kernel/power/suspend_block_io.c:771:
+	 * transactions on the fly at once. If we can to more, fine. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#880: FILE: kernel/power/suspend_block_io.c:791:
+static struct suspend_plugin_ops suspend_blockwriter_ops = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#881: FILE: kernel/power/suspend_block_io.c:792:
+static struct suspend_plugin_ops suspend_blockwriter_ops = 
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 92 errors, 52 warnings, 33 checks, 872 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
