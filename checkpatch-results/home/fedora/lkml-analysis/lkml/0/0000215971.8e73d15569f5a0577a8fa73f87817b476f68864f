CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: include/linux/kernel.h:120:
+extern void __stack_smash_handler(int, char []);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#70: FILE: include/linux/kernel.h:120:
+extern void __stack_smash_handler(int, char []);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char []' should also have an identifier name
#70: FILE: include/linux/kernel.h:120:
+extern void __stack_smash_handler(int, char []);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: lib/propolice.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#95: FILE: lib/propolice.c:4:
+EXPORT_SYMBOL_NOVERS(__guard);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#96: FILE: lib/propolice.c:5:
+EXPORT_SYMBOL_NOVERS(__stack_smash_handler);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: lib/propolice.c:6:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: lib/propolice.c:6:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: lib/propolice.c:8:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: lib/propolice.c:8:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: lib/propolice.c:9:
+void $

WARNING:SPACING: space prohibited before semicolon
#103: FILE: lib/propolice.c:12:
+	static char *message = "propolice detects %x at function %s.\n" ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#104: FILE: lib/propolice.c:13:
+	static char *message = "propolice detects %x at function %s.\n" ;
+	panic (message, damaged, func);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#104: FILE: lib/propolice.c:13:
+	panic (message, damaged, func);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#114: FILE: security/Kconfig:49:
+config HARDENED_SSP
+	bool 'Hardened ProPolice SSP build support'
+	help
+	  This enables kernel building with stack-smashing protection
+	  via the -fstack-protector GCC flag.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215971.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 11 warnings, 1 checks, 54 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215971.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
