CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: mm/filemap.c:524:
+page_cache_gang_lookup(struct page **pages, struct address_space *mapping,
+		pgoff_t start, unsigned int nr_pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: mm/filemap.c:531:
+	ret = radix_tree_gang_lookup(&mapping->page_tree,
+				(void **)pages, start, nr_pages);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#436: FILE: mm/truncate.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#437: FILE: mm/truncate.c:2:
+ * mm/truncate.c - code for taking down pages from address_spaces

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#450: FILE: mm/truncate.c:15:
+#include <linux/buffer_head.h>	/* grr. try_to_release_page,
+				   block_invalidatepage */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#450: FILE: mm/truncate.c:15:
+				   block_invalidatepage */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#454: FILE: mm/truncate.c:19:
+	int (*invalidatepage)(struct page *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#454: FILE: mm/truncate.c:19:
+	int (*invalidatepage)(struct page *, unsigned long);

WARNING:LINE_SPACING: Missing a blank line after declarations
#455: FILE: mm/truncate.c:20:
+	int (*invalidatepage)(struct page *, unsigned long);
+	invalidatepage = page->mapping->a_ops->invalidatepage;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!invalidatepage"
#456: FILE: mm/truncate.c:21:
+	if (invalidatepage == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#461: FILE: mm/truncate.c:26:
+static inline void truncate_partial_page(struct page *page, unsigned partial)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#463: FILE: mm/truncate.c:28:
+	memclear_highpage_flush(page, partial, PAGE_CACHE_SIZE-partial);
 	                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#502: FILE: mm/truncate.c:67:
+	const pgoff_t start = (lstart + PAGE_CACHE_SIZE-1) >> PAGE_CACHE_SHIFT;
 	                                               ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#503: FILE: mm/truncate.c:68:
+	const unsigned partial = lstart & (PAGE_CACHE_SIZE - 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#530: FILE: mm/truncate.c:95:
+		struct page *page = find_lock_page(mapping, lstart);
+		if (page) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#557: FILE: mm/truncate.c:122:
+		printk("%s: I goofed!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#557: FILE: mm/truncate.c:122:
+		printk("%s: I goofed!\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: mm/swap.c:293:
+unsigned int pagevec_lookup(struct pagevec *pvec, struct address_space *mapping,
+		pgoff_t start, unsigned int nr_pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: include/linux/pagemap.h:46:
+page_cache_gang_lookup(struct page **pages, struct address_space *mapping,
+		pgoff_t start, unsigned int nr_pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: include/linux/pagevec.h:27:
+unsigned int pagevec_lookup(struct pagevec *pvec, struct address_space *mapping,
+		pgoff_t start, unsigned int nr_pages);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 8 checks, 641 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
