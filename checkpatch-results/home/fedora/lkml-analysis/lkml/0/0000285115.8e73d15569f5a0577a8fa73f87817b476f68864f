ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#38: 
--- a/drivers/message/i2o/i2o_config.c  2004-02-18 04:59:26.000000000 +0100

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'pass-thru' may be misspelled - perhaps 'pass-through'?
#45: FILE: drivers/message/i2o/i2o_config.c:25:
+ *		Added pass-thru support for Adaptec's raidutils
   		      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#86: FILE: drivers/message/i2o/i2o_config.c:845:
+	struct i2o_cmd_passthru *cmd = (struct i2o_cmd_passthru *) arg;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#89: FILE: drivers/message/i2o/i2o_config.c:848:
+	u32 *user_msg = (u32*)cmd->msg;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#103: FILE: drivers/message/i2o/i2o_config.c:862:
+	if(!c)

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/message/i2o/i2o_config.c:863:
+                return -ENXIO;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/message/i2o/i2o_config.c:863:
+                return -ENXIO;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#106: FILE: drivers/message/i2o/i2o_config.c:865:
+	memset(&msg, 0, MSG_FRAME_SIZE*4);
 	                              ^

ERROR:SPACING: space required before the open parenthesis '('
#107: FILE: drivers/message/i2o/i2o_config.c:866:
+	if(get_user(size, &user_msg[0]))

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#109: FILE: drivers/message/i2o/i2o_config.c:868:
+	size = size>>16;
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#112: FILE: drivers/message/i2o/i2o_config.c:871:
+	if(size > MSG_FRAME_SIZE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: drivers/message/i2o/i2o_config.c:874:
+                                              $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/message/i2o/i2o_config.c:874:
+                                              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/message/i2o/i2o_config.c:874:
+                                              $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#117: FILE: drivers/message/i2o/i2o_config.c:876:
+	if(copy_from_user((void*)msg, (void*)user_msg, size))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#117: FILE: drivers/message/i2o/i2o_config.c:876:
+	if(copy_from_user((void*)msg, (void*)user_msg, size))

ERROR:SPACING: space required before the open parenthesis '('
#117: FILE: drivers/message/i2o/i2o_config.c:876:
+	if(copy_from_user((void*)msg, (void*)user_msg, size))

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#120: FILE: drivers/message/i2o/i2o_config.c:879:
+	reply_size = reply_size>>16;
 	                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#121: FILE: drivers/message/i2o/i2o_config.c:880:
+	reply = kmalloc(REPLY_FRAME_SIZE*4, GFP_KERNEL);
 	                                ^

ERROR:SPACING: space required before the open parenthesis '('
#122: FILE: drivers/message/i2o/i2o_config.c:881:
+	if(!reply) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#123: FILE: drivers/message/i2o/i2o_config.c:882:
+		printk(KERN_WARNING"%s: Could not allocate reply buffer\n",c->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#123: FILE: drivers/message/i2o/i2o_config.c:882:
+		printk(KERN_WARNING"%s: Could not allocate reply buffer\n",c->name);
 		                                                          ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#123: FILE: drivers/message/i2o/i2o_config.c:882:
+		printk(KERN_WARNING"%s: Could not allocate reply buffer\n",c->name);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#126: FILE: drivers/message/i2o/i2o_config.c:885:
+	memset(reply, 0, REPLY_FRAME_SIZE*4);
 	                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#127: FILE: drivers/message/i2o/i2o_config.c:886:
+	sg_offset = (msg[0]>>4)&0x0f;
 	                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#127: FILE: drivers/message/i2o/i2o_config.c:886:
+	sg_offset = (msg[0]>>4)&0x0f;
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: drivers/message/i2o/i2o_config.c:890:
+	memset(sg_list,0, sizeof(sg_list[0])*SG_TABLESIZE);
 	              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#131: FILE: drivers/message/i2o/i2o_config.c:890:
+	memset(sg_list,0, sizeof(sg_list[0])*SG_TABLESIZE);
 	                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#132: FILE: drivers/message/i2o/i2o_config.c:891:
+	if(sg_offset) {

CHECK:SPACING: No space is necessary after a cast
#134: FILE: drivers/message/i2o/i2o_config.c:893:
+		struct sg_simple_element *sg = (struct sg_simple_element*) (msg+sg_offset);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#134: FILE: drivers/message/i2o/i2o_config.c:893:
+		struct sg_simple_element *sg = (struct sg_simple_element*) (msg+sg_offset);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#134: FILE: drivers/message/i2o/i2o_config.c:893:
+		struct sg_simple_element *sg = (struct sg_simple_element*) (msg+sg_offset);
 		                                                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: drivers/message/i2o/i2o_config.c:894:
+		struct sg_simple_element *sg = (struct sg_simple_element*) (msg+sg_offset);
+		sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#135: FILE: drivers/message/i2o/i2o_config.c:894:
+		sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);
 		                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#137: FILE: drivers/message/i2o/i2o_config.c:896:
+			printk(KERN_DEBUG"%s:IOCTL SG List too large (%u)\n", c->name,sg_count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#137: FILE: drivers/message/i2o/i2o_config.c:896:
+			printk(KERN_DEBUG"%s:IOCTL SG List too large (%u)\n", c->name,sg_count);
 			                                                             ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#137: FILE: drivers/message/i2o/i2o_config.c:896:
+			printk(KERN_DEBUG"%s:IOCTL SG List too large (%u)\n", c->name,sg_count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: drivers/message/i2o/i2o_config.c:897:
+			kfree (reply);

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: drivers/message/i2o/i2o_config.c:901:
+		for(i = 0; i < sg_count; i++) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#145: FILE: drivers/message/i2o/i2o_config.c:904:
+			if (!(sg[i].flag_count & 0x10000000 /*I2O_SGL_FLAGS_SIMPLE_ADDRESS_ELEMENT*/)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#146: FILE: drivers/message/i2o/i2o_config.c:905:
+				printk(KERN_DEBUG"%s:Bad SG element %d - not simple (%x)\n",c->name,i,  sg[i].flag_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#146: FILE: drivers/message/i2o/i2o_config.c:905:
+				printk(KERN_DEBUG"%s:Bad SG element %d - not simple (%x)\n",c->name,i,  sg[i].flag_count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: drivers/message/i2o/i2o_config.c:905:
+				printk(KERN_DEBUG"%s:Bad SG element %d - not simple (%x)\n",c->name,i,  sg[i].flag_count);
 				                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: drivers/message/i2o/i2o_config.c:905:
+				printk(KERN_DEBUG"%s:Bad SG element %d - not simple (%x)\n",c->name,i,  sg[i].flag_count);
 				                                                                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#146: FILE: drivers/message/i2o/i2o_config.c:905:
+				printk(KERN_DEBUG"%s:Bad SG element %d - not simple (%x)\n",c->name,i,  sg[i].flag_count);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#154: FILE: drivers/message/i2o/i2o_config.c:913:
+				printk(KERN_DEBUG"%s: Could not allocate SG buffer - size = %d buffer number %d of %d\n", c->name,sg_size,i,sg_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#154: FILE: drivers/message/i2o/i2o_config.c:913:
+				printk(KERN_DEBUG"%s: Could not allocate SG buffer - size = %d buffer number %d of %d\n", c->name,sg_size,i,sg_count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/message/i2o/i2o_config.c:913:
+				printk(KERN_DEBUG"%s: Could not allocate SG buffer - size = %d buffer number %d of %d\n", c->name,sg_size,i,sg_count);
 				                                                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/message/i2o/i2o_config.c:913:
+				printk(KERN_DEBUG"%s: Could not allocate SG buffer - size = %d buffer number %d of %d\n", c->name,sg_size,i,sg_count);
 				                                                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/message/i2o/i2o_config.c:913:
+				printk(KERN_DEBUG"%s: Could not allocate SG buffer - size = %d buffer number %d of %d\n", c->name,sg_size,i,sg_count);
 				                                                                                                           ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#154: FILE: drivers/message/i2o/i2o_config.c:913:
+				printk(KERN_DEBUG"%s: Could not allocate SG buffer - size = %d buffer number %d of %d\n", c->name,sg_size,i,sg_count);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#154: FILE: drivers/message/i2o/i2o_config.c:913:
+			if (!p) {
+				printk(KERN_DEBUG"%s: Could not allocate SG buffer - size = %d buffer number %d of %d\n", c->name,sg_size,i,sg_count);

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#158: FILE: drivers/message/i2o/i2o_config.c:917:
+			sg_list[sg_index++] = p; // sglist indexed with input frame, not our internal frame.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: drivers/message/i2o/i2o_config.c:919:
+			if(sg[i].flag_count & 0x04000000 /*I2O_SGL_FLAGS_DIR*/) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: drivers/message/i2o/i2o_config.c:921:
+^I^I^I        if (copy_from_user((void*)p,(void*)sg[i].addr_bus, sg_size)) {$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#162: FILE: drivers/message/i2o/i2o_config.c:921:
+			        if (copy_from_user((void*)p,(void*)sg[i].addr_bus, sg_size)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#162: FILE: drivers/message/i2o/i2o_config.c:921:
+			        if (copy_from_user((void*)p,(void*)sg[i].addr_bus, sg_size)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: drivers/message/i2o/i2o_config.c:921:
+			        if (copy_from_user((void*)p,(void*)sg[i].addr_bus, sg_size)) {
 			                                   ^

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#163: FILE: drivers/message/i2o/i2o_config.c:922:
+					printk(KERN_DEBUG"%s: Could not copy SG buf %d FROM user\n",c->name,i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#163: FILE: drivers/message/i2o/i2o_config.c:922:
+					printk(KERN_DEBUG"%s: Could not copy SG buf %d FROM user\n",c->name,i);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: drivers/message/i2o/i2o_config.c:922:
+					printk(KERN_DEBUG"%s: Could not copy SG buf %d FROM user\n",c->name,i);
 					                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: drivers/message/i2o/i2o_config.c:922:
+					printk(KERN_DEBUG"%s: Could not copy SG buf %d FROM user\n",c->name,i);
 					                                                                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#163: FILE: drivers/message/i2o/i2o_config.c:922:
+					printk(KERN_DEBUG"%s: Could not copy SG buf %d FROM user\n",c->name,i);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#169: FILE: drivers/message/i2o/i2o_config.c:928:
+			sg[i].addr_bus = (u32)virt_to_bus((void*)p);

ERROR:SPACING: space required before the open parenthesis '('
#174: FILE: drivers/message/i2o/i2o_config.c:933:
+	if(rcode)

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: drivers/message/i2o/i2o_config.c:936:
+	if(sg_offset) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#181: FILE: drivers/message/i2o/i2o_config.c:940:
+		struct sg_simple_element* sg;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: drivers/message/i2o/i2o_config.c:942:
+^I^I^I^I^I^I^I^I^I^I                                                                                $

WARNING:LONG_LINE: line length of 160 exceeds 100 columns
#183: FILE: drivers/message/i2o/i2o_config.c:942:
+										                                                                                

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: drivers/message/i2o/i2o_config.c:942:
+^I^I^I^I^I^I^I^I^I^I                                                                                $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#185: FILE: drivers/message/i2o/i2o_config.c:944:
+		memset(&msg, 0, MSG_FRAME_SIZE*4);
 		                              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#191: FILE: drivers/message/i2o/i2o_config.c:950:
+		size = size>>16;
 		           ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#194: FILE: drivers/message/i2o/i2o_config.c:953:
+		if (copy_from_user ((void*)msg, (void*)user_msg, size)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#194: FILE: drivers/message/i2o/i2o_config.c:953:
+		if (copy_from_user ((void*)msg, (void*)user_msg, size)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#194: FILE: drivers/message/i2o/i2o_config.c:953:
+		if (copy_from_user ((void*)msg, (void*)user_msg, size)) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#198: FILE: drivers/message/i2o/i2o_config.c:957:
+		sg_count = (size - sg_offset*4) / sizeof(struct sg_simple_element);
 		                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#201: FILE: drivers/message/i2o/i2o_config.c:960:
+		sg = (struct sg_simple_element*)(msg + sg_offset);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#207: FILE: drivers/message/i2o/i2o_config.c:966:
+				if (copy_to_user((void*)sg[j].addr_bus,(void*)sg_list[j], sg_size)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#207: FILE: drivers/message/i2o/i2o_config.c:966:
+				if (copy_to_user((void*)sg[j].addr_bus,(void*)sg_list[j], sg_size)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#207: FILE: drivers/message/i2o/i2o_config.c:966:
+				if (copy_to_user((void*)sg[j].addr_bus,(void*)sg_list[j], sg_size)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: drivers/message/i2o/i2o_config.c:966:
+				if (copy_to_user((void*)sg[j].addr_bus,(void*)sg_list[j], sg_size)) {
 				                                      ^

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#208: FILE: drivers/message/i2o/i2o_config.c:967:
+					printk(KERN_WARNING"%s: Could not copy %lx TO user %x\n",c->name, sg_list[j], sg[j].addr_bus);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#208: FILE: drivers/message/i2o/i2o_config.c:967:
+					printk(KERN_WARNING"%s: Could not copy %lx TO user %x\n",c->name, sg_list[j], sg[j].addr_bus);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: drivers/message/i2o/i2o_config.c:967:
+					printk(KERN_WARNING"%s: Could not copy %lx TO user %x\n",c->name, sg_list[j], sg[j].addr_bus);
 					                                                        ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#208: FILE: drivers/message/i2o/i2o_config.c:967:
+					printk(KERN_WARNING"%s: Could not copy %lx TO user %x\n",c->name, sg_list[j], sg[j].addr_bus);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/message/i2o/i2o_config.c:974:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/message/i2o/i2o_config.c:976:
+        if (reply_size) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/message/i2o/i2o_config.c:976:
+        if (reply_size) {$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#219: FILE: drivers/message/i2o/i2o_config.c:978:
+		if(copy_from_user(reply+2, user_msg+2, sizeof(u32)*2)) {
 		                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#219: FILE: drivers/message/i2o/i2o_config.c:978:
+		if(copy_from_user(reply+2, user_msg+2, sizeof(u32)*2)) {
 		                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#219: FILE: drivers/message/i2o/i2o_config.c:978:
+		if(copy_from_user(reply+2, user_msg+2, sizeof(u32)*2)) {
 		                                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#219: FILE: drivers/message/i2o/i2o_config.c:978:
+		if(copy_from_user(reply+2, user_msg+2, sizeof(u32)*2)) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#220: FILE: drivers/message/i2o/i2o_config.c:979:
+			printk(KERN_WARNING"%s: Could not copy message context FROM user\n",c->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#220: FILE: drivers/message/i2o/i2o_config.c:979:
+			printk(KERN_WARNING"%s: Could not copy message context FROM user\n",c->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: drivers/message/i2o/i2o_config.c:979:
+			printk(KERN_WARNING"%s: Could not copy message context FROM user\n",c->name);
 			                                                                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#220: FILE: drivers/message/i2o/i2o_config.c:979:
+			printk(KERN_WARNING"%s: Could not copy message context FROM user\n",c->name);

ERROR:SPACING: space required before the open parenthesis '('
#223: FILE: drivers/message/i2o/i2o_config.c:982:
+		if(copy_to_user(user_reply, reply, reply_size)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#224: FILE: drivers/message/i2o/i2o_config.c:983:
+			printk(KERN_WARNING"%s: Could not copy reply TO user\n",c->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: drivers/message/i2o/i2o_config.c:983:
+			printk(KERN_WARNING"%s: Could not copy reply TO user\n",c->name);
 			                                                       ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#224: FILE: drivers/message/i2o/i2o_config.c:983:
+			printk(KERN_WARNING"%s: Could not copy reply TO user\n",c->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: drivers/message/i2o/i2o_config.c:992:
+}^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: include/linux/i2o-dev.h:44:
+#define I2OPASSTHRU		_IOR(I2O_MAGIC_NUMBER,12,struct i2o_cmd_passthru)
                    		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: include/linux/i2o-dev.h:44:
+#define I2OPASSTHRU		_IOR(I2O_MAGIC_NUMBER,12,struct i2o_cmd_passthru)
                    		                        ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#258: FILE: include/linux/i2o-dev.h:47:
+struct i2o_cmd_passthru
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#261: FILE: include/linux/i2o-dev.h:50:
+	int iop;		/* number of the I2O controller, to which the
+				   message should go to */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#261: FILE: include/linux/i2o-dev.h:50:
+				   message should go to */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285115.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 53 errors, 27 warnings, 26 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285115.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
