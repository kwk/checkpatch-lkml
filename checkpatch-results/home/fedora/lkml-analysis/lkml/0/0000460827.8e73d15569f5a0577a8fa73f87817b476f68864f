WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
   timeout problems some people where expierencing. This was clarified to me by

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#96: FILE: drivers/ide/hpt34x.c:315:
+int hpt34x_dmaproc (ide_dma_action_t func, struct ata_device *drive, struct request *rq)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: drivers/ide/ide.c:1:
+/**** vi:set ts=8 sts=8 sw=8:************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#360: FILE: drivers/ide/ide.c:2845:
+	printk(KERN_INFO  "ide_setup: %s", s);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#368: FILE: drivers/ide/ide.c:2852:
+		printk(KERN_INFO" : Enabled support for IDE doublers\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#368: FILE: drivers/ide/ide.c:2852:
+		printk(KERN_INFO" : Enabled support for IDE doublers\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#377: FILE: drivers/ide/ide.c:2860:
+		printk(KERN_INFO "ATA: Prevented DMA\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#386: FILE: drivers/ide/ide.c:3414:
+	printk(KERN_INFO "ATA/ATAPI driver v" VERSION "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#395: FILE: drivers/ide/ide.c:3436:
+	printk(KERN_INFO "ATA: system bus speed %dMHz\n", system_bus_speed);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "options"
#417: FILE: drivers/ide/ide.c:3560:
+	if (options != NULL && *options) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: drivers/ide/ide.c:3564:
+			if ((next = strchr(options,' ')) != NULL)
 			                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#424: FILE: drivers/ide/ide.c:3564:
+			if ((next = strchr(options,' ')) != NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#427: FILE: drivers/ide/ide.c:3567:
+				printk(KERN_ERR "Unknown option '%s'\n", options);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#444: FILE: drivers/ide/ide-disk.c:1:
+/***** vi:set ts=8 sts=8 sw=8:************************************************

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#468: FILE: drivers/ide/ide-pci.c:1:
+/**** vi:set ts=8 sts=8 sw=8:************************************************

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#571: FILE: drivers/ide/ide-pci.c:772:
+static void __init pdc20270_device_order_fixup (struct pci_dev *dev, struct ata_pci_device *d)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#586: FILE: drivers/ide/ide-pci.c:812:
+static void __init hpt366_device_order_fixup (struct pci_dev *dev, struct ata_pci_device *d)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pin1 != pin2'
#601: FILE: drivers/ide/ide-pci.c:841:
+			if ((pin1 != pin2) && (dev->irq == dev2->irq)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->irq == dev2->irq'
#601: FILE: drivers/ide/ide-pci.c:841:
+			if ((pin1 != pin2) && (dev->irq == dev2->irq)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#619: FILE: drivers/ide/ide-pci.c:877:
+		printk(KERN_INFO "ATA: %s: ignored by PCI bus scan\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#629: FILE: drivers/ide/ide-pci.c:892:
+			printk(KERN_INFO "ATA: unknown ATA interface %s (%04x:%04x) on PCI slot %s\n",

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#633: FILE: drivers/ide/ide-pci.c:895:
+			printk(KERN_INFO "ATA: interface %s on PCI slot %s\n", dev->name, dev->slot_name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#633: FILE: drivers/ide/ide-pci.c:895:
+			printk(KERN_INFO "ATA: interface %s on PCI slot %s\n", dev->name, dev->slot_name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#642: FILE: drivers/ide/ide-probe.c:1:
+/**** vi:set ts=8 sts=8 sw=8:************************************************

CHECK:LINE_SPACING: Please don't use multiple blank lines
#716: FILE: drivers/ide/ide-probe.c:231:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#720: FILE: drivers/ide/ide-probe.c:235:
+		OUT_BYTE(drive->ctl,IDE_CONTROL_REG);	/* enable device irq */
 		                   ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#735: FILE: drivers/ide/ide-probe.c:262:
+		extern int pdc4030_identify(struct ata_device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#735: FILE: drivers/ide/ide-probe.c:262:
+		extern int pdc4030_identify(struct ata_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#808: FILE: drivers/ide/ide-probe.c:349:
+	if (OK_STAT(GET_STAT(),READY_STAT,BUSY_STAT) || drive->present || cmd == WIN_PIDENTIFY)
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#808: FILE: drivers/ide/ide-probe.c:349:
+	if (OK_STAT(GET_STAT(),READY_STAT,BUSY_STAT) || drive->present || cmd == WIN_PIDENTIFY)
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#812: FILE: drivers/ide/ide-probe.c:351:
+		if ((rc = identify(drive,cmd)))   /* send cmd and wait */
 		                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#812: FILE: drivers/ide/ide-probe.c:351:
+		if ((rc = identify(drive,cmd)))   /* send cmd and wait */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#813: FILE: drivers/ide/ide-probe.c:352:
+			rc = identify(drive,cmd); /* failed: try again */
 			                   ^

CHECK:BRACES: Unbalanced braces around else statement
#828: FILE: drivers/ide/ide-probe.c:368:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: drivers/ide/ide-probe.c:582:
+static struct ata_channel *save_match(struct ata_channel *ch, struct ata_channel *h,
+		struct ata_channel *match)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#941: FILE: drivers/ide/ide-probe.c:588:
+		printk("%s: potential irq problem with %s and %s\n", ch->name,h->name, match->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#941: FILE: drivers/ide/ide-probe.c:588:
+		printk("%s: potential irq problem with %s and %s\n", ch->name,h->name, match->name);
 		                                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: drivers/ide/ide-probe.c:636:
+^I^I        continue;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#989: FILE: drivers/ide/ide-probe.c:638:
+		ch->sharing_irq = h->sharing_irq = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: drivers/ide/ide-probe.c:641:
+		if (ch->chipset != ide_pci || h->chipset != ide_pci ||
+		     ch->serialized || h->serialized) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#994: FILE: drivers/ide/ide-probe.c:643:
+				printk("%s: potential irq problem with %s and %s\n", ch->name, h->name, match->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#994: FILE: drivers/ide/ide-probe.c:643:
+				printk("%s: potential irq problem with %s and %s\n", ch->name, h->name, match->name);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1131: FILE: drivers/ide/ide-probe.c:772:
+	extern devfs_handle_t ide_devfs_handle;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1145: FILE: drivers/ide/ide-probe.c:827:
+	gd = kmalloc (sizeof(struct gendisk), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*gd)...) over kmalloc(sizeof(struct gendisk)...)
#1145: FILE: drivers/ide/ide-probe.c:827:
+	gd = kmalloc (sizeof(struct gendisk), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1149: FILE: drivers/ide/ide-probe.c:831:
+	gd->sizes = kmalloc(ATA_MINORS * sizeof(int), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1153: FILE: drivers/ide/ide-probe.c:835:
+	gd->part = kmalloc(ATA_MINORS * sizeof(struct hd_struct), GFP_KERNEL);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1171: FILE: drivers/ide/ide-probe.c:853:
+	else
+	    goto err_kmalloc_gd_de_arr;

WARNING:TABSTOP: Statements should start on a tabstop
#1172: FILE: drivers/ide/ide-probe.c:854:
+	    goto err_kmalloc_gd_de_arr;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1177: FILE: drivers/ide/ide-probe.c:859:
+	else
+	    goto err_kmalloc_gd_flags;

WARNING:TABSTOP: Statements should start on a tabstop
#1178: FILE: drivers/ide/ide-probe.c:860:
+	    goto err_kmalloc_gd_flags;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1212: FILE: drivers/ide/ide-probe.c:893:
+	printk(KERN_CRIT "(%s) Out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1212: FILE: drivers/ide/ide-probe.c:893:
+	printk(KERN_CRIT "(%s) Out of memory\n", __FUNCTION__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460827.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 33 warnings, 10 checks, 1118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460827.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
