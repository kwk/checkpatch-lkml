WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
This patch adds page migration support to the NUMA policy layer. An additional

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#73: FILE: mm/mempolicy.c:91:
+#define MPOL_MF_DISCONTIG_OK (1<<20)	/* Skip checks for continuous vmas */
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#73: FILE: mm/mempolicy.c:91:
+#define MPOL_MF_DISCONTIG_OK (1<<20)	/* Skip checks for continuous vmas */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: mm/mempolicy.c:188:
+static inline int single_mm_mapping(struct mm_struct *mm,
+			struct address_space *mapping)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: mm/mempolicy.c:214:
+static void migrate_page_add(struct vm_area_struct *vma,
+	struct page *page, struct list_head *pagelist, unsigned long flags)

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: mm/mempolicy.c:232:
+^I ^I */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: mm/mempolicy.c:232:
+^I ^I */$

CHECK:BRACES: braces {} should be used on all arms of this statement
#149: FILE: mm/mempolicy.c:261:
+			if (pagelist) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#153: FILE: mm/mempolicy.c:265:
+			} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#225: FILE: mm/mempolicy.c:336:
+	if (vma->vm_flags & (

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: mm/mempolicy.c:383:
+			err = check_pgd_range(vma, start, endvma, nodes,
+						flags, pagelist);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#287: FILE: mm/mempolicy.c:460:
+	if ((flags & ~(unsigned long)(MPOL_MF_STRICT | MPOL_MF_MOVE | MPOL_MF_MOVE_ALL))
+	    || mode > MPOL_MAX)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: mm/mempolicy.c:498:
+	vma = check_range(mm, start, end, nmask, flags,
+	      (flags & (MPOL_MF_MOVE | MPOL_MF_MOVE_ALL)) ? &pagelist : NULL);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#333: FILE: mm/mempolicy.c:504:
+		if (!err  && !list_empty(&pagelist) && (flags & MPOL_MF_STRICT))
+				err = -EIO;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#350: FILE: include/linux/mempolicy.h:25:
+#define MPOL_MF_MOVE	(1<<1)	/* Move pages owned by this process to conform to mapping */
                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#350: FILE: include/linux/mempolicy.h:25:
+#define MPOL_MF_MOVE	(1<<1)	/* Move pages owned by this process to conform to mapping */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#351: FILE: include/linux/mempolicy.h:26:
+#define MPOL_MF_MOVE_ALL (1<<2)	/* Move every page to conform to mapping */
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#351: FILE: include/linux/mempolicy.h:26:
+#define MPOL_MF_MOVE_ALL (1<<2)	/* Move every page to conform to mapping */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141402.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 3 warnings, 14 checks, 278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141402.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
