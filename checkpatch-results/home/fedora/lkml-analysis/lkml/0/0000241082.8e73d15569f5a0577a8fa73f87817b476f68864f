WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
Nowadays, it's possible to build CONFIG_PPC_PMAC without CONFIG_PPC_PSERIES,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#176: FILE: arch/ppc64/kernel/iomap.c:1:
+#include <linux/init.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#179: FILE: arch/ppc64/kernel/iomap.c:4:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: arch/ppc64/kernel/iomap.c:7:
+ * Here comes the ppc64 implementation of the IOMAP $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#189: FILE: arch/ppc64/kernel/iomap.c:14:
+}
+unsigned int fastcall ioread16(void __iomem *addr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#193: FILE: arch/ppc64/kernel/iomap.c:18:
+}
+unsigned int fastcall ioread32(void __iomem *addr)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#198: FILE: arch/ppc64/kernel/iomap.c:23:
+EXPORT_SYMBOL(ioread16);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#199: FILE: arch/ppc64/kernel/iomap.c:24:
+EXPORT_SYMBOL(ioread32);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#205: FILE: arch/ppc64/kernel/iomap.c:30:
+}
+void fastcall iowrite16(u16 val, void __iomem *addr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#209: FILE: arch/ppc64/kernel/iomap.c:34:
+}
+void fastcall iowrite32(u32 val, void __iomem *addr)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#214: FILE: arch/ppc64/kernel/iomap.c:39:
+EXPORT_SYMBOL(iowrite16);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#215: FILE: arch/ppc64/kernel/iomap.c:40:
+EXPORT_SYMBOL(iowrite32);

CHECK:SPACING: No space is necessary after a cast
#227: FILE: arch/ppc64/kernel/iomap.c:52:
+	_insb((u8 __force *) addr, dst, count);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#229: FILE: arch/ppc64/kernel/iomap.c:54:
+}
+void ioread16_rep(void __iomem *addr, void *dst, unsigned long count)

CHECK:SPACING: No space is necessary after a cast
#231: FILE: arch/ppc64/kernel/iomap.c:56:
+	_insw_ns((u16 __force *) addr, dst, count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#233: FILE: arch/ppc64/kernel/iomap.c:58:
+}
+void ioread32_rep(void __iomem *addr, void *dst, unsigned long count)

CHECK:SPACING: No space is necessary after a cast
#235: FILE: arch/ppc64/kernel/iomap.c:60:
+	_insl_ns((u32 __force *) addr, dst, count);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#238: FILE: arch/ppc64/kernel/iomap.c:63:
+EXPORT_SYMBOL(ioread16_rep);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#239: FILE: arch/ppc64/kernel/iomap.c:64:
+EXPORT_SYMBOL(ioread32_rep);

CHECK:SPACING: No space is necessary after a cast
#243: FILE: arch/ppc64/kernel/iomap.c:68:
+	_outsb((u8 __force *) addr, src, count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#245: FILE: arch/ppc64/kernel/iomap.c:70:
+}
+void iowrite16_rep(void __iomem *addr, const void *src, unsigned long count)

CHECK:SPACING: No space is necessary after a cast
#247: FILE: arch/ppc64/kernel/iomap.c:72:
+	_outsw_ns((u16 __force *) addr, src, count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#249: FILE: arch/ppc64/kernel/iomap.c:74:
+}
+void iowrite32_rep(void __iomem *addr, const void *src, unsigned long count)

CHECK:SPACING: No space is necessary after a cast
#251: FILE: arch/ppc64/kernel/iomap.c:76:
+	_outsl_ns((u32 __force *) addr, src, count);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#254: FILE: arch/ppc64/kernel/iomap.c:79:
+EXPORT_SYMBOL(iowrite16_rep);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#255: FILE: arch/ppc64/kernel/iomap.c:80:
+EXPORT_SYMBOL(iowrite32_rep);

CHECK:SPACING: No space is necessary after a cast
#261: FILE: arch/ppc64/kernel/iomap.c:86:
+	return (void __iomem *) (port+pci_io_base);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#261: FILE: arch/ppc64/kernel/iomap.c:86:
+	return (void __iomem *) (port+pci_io_base);
 	                             ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#269: FILE: arch/ppc64/kernel/iomap.c:94:
+EXPORT_SYMBOL(ioport_unmap);

CHECK:SPACING: No space is necessary after a cast
#284: FILE: arch/ppc64/kernel/iomap.c:109:
+		return (void __iomem *) start;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#294: FILE: arch/ppc64/kernel/iomap.c:119:
+EXPORT_SYMBOL(pci_iounmap);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241082.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 12 warnings, 18 checks, 248 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241082.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
