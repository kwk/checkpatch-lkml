WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
Some bits of documentation can be found on project's homepage (and links from there):

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#128: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: include/linux/kevent.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#148: FILE: include/linux/kevent.h:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#149: FILE: include/linux/kevent.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#172: FILE: include/linux/kevent.h:40:
+typedef int (* kevent_callback_t)(struct kevent *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#172: FILE: include/linux/kevent.h:40:
+typedef int (* kevent_callback_t)(struct kevent *);
              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#193: FILE: include/linux/kevent.h:61:
+struct kevent
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#224: FILE: include/linux/kevent.h:92:
+struct kevent_user
+{

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#226: FILE: include/linux/kevent.h:94:
+	spinlock_t		kevent_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: include/linux/kevent.h:103:
+^Ispinlock_t ^I^Iready_lock;$

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#252: FILE: include/linux/kevent.h:120:
+	struct kevent_ring __user *pring;
 	                           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: include/linux/kevent.h:141:
+void kevent_storage_ready(struct kevent_storage *st,
+		kevent_callback_t ready_callback, u32 event);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#294: FILE: include/linux/kevent.h:162:
+	u->wait_num = u->im_num = u->total = u->ring_num = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#296: FILE: include/linux/kevent.h:164:
+}
+static inline void kevent_stat_print(struct kevent_user *u)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#298: FILE: include/linux/kevent.h:166:
+	printk(KERN_INFO "%s: u: %p, wait: %lu, ring: %lu, immediately: %lu, total: %lu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: include/linux/kevent.h:167:
+	printk(KERN_INFO "%s: u: %p, wait: %lu, ring: %lu, immediately: %lu, total: %lu.\n",
+			__func__, u, u->wait_num, u->ring_num, u->im_num, u->total);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#301: FILE: include/linux/kevent.h:169:
+}
+static inline void kevent_stat_im(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#305: FILE: include/linux/kevent.h:173:
+}
+static inline void kevent_stat_ring(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#309: FILE: include/linux/kevent.h:177:
+}
+static inline void kevent_stat_wait(struct kevent_user *u)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#313: FILE: include/linux/kevent.h:181:
+}
+static inline void kevent_stat_total(struct kevent_user *u)

CHECK:SPACING: No space is necessary after a cast
#318: FILE: include/linux/kevent.h:186:
+#define kevent_stat_print(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#318: FILE: include/linux/kevent.h:186:
+#define kevent_stat_print(u)		({ (void) u;})
                             		           ^

CHECK:SPACING: No space is necessary after a cast
#319: FILE: include/linux/kevent.h:187:
+#define kevent_stat_init(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#319: FILE: include/linux/kevent.h:187:
+#define kevent_stat_init(u)		({ (void) u;})
                            		           ^

CHECK:SPACING: No space is necessary after a cast
#320: FILE: include/linux/kevent.h:188:
+#define kevent_stat_im(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#320: FILE: include/linux/kevent.h:188:
+#define kevent_stat_im(u)		({ (void) u;})
                          		           ^

CHECK:SPACING: No space is necessary after a cast
#321: FILE: include/linux/kevent.h:189:
+#define kevent_stat_wait(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#321: FILE: include/linux/kevent.h:189:
+#define kevent_stat_wait(u)		({ (void) u;})
                            		           ^

CHECK:SPACING: No space is necessary after a cast
#322: FILE: include/linux/kevent.h:190:
+#define kevent_stat_ring(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#322: FILE: include/linux/kevent.h:190:
+#define kevent_stat_ring(u)		({ (void) u;})
                            		           ^

CHECK:SPACING: No space is necessary after a cast
#323: FILE: include/linux/kevent.h:191:
+#define kevent_stat_total(u)		({ (void) u;})

ERROR:SPACING: space required after that ';' (ctx:VxV)
#323: FILE: include/linux/kevent.h:191:
+#define kevent_stat_total(u)		({ (void) u;})
                             		           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#333: FILE: include/linux/kevent.h:201:
+}
+static inline void kevent_sk_reinit(struct sock *sk)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#346: FILE: include/linux/kevent.h:214:
+}
+#define sock_async(__sk)	({ (void)__sk; 0; })

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#365: FILE: include/linux/kevent.h:233:
+extern void kevent_pipe_notify(struct inode *inode, u32 events);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#371: FILE: include/linux/kevent.h:239:
+extern int kevent_signal_notify(struct task_struct *tsk, int sig);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#373: FILE: include/linux/kevent.h:241:
+static inline int kevent_signal_notify(struct task_struct *tsk, int sig) {return 0;}
                                                                                   ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#383: FILE: include/linux/kevent_storage.h:1:
+#ifndef __KEVENT_STORAGE_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#387: FILE: include/linux/kevent_storage.h:5:
+struct kevent_storage
+{

WARNING:LONG_LINE_COMMENT: line length of 129 exceeds 100 columns
#388: FILE: include/linux/kevent_storage.h:6:
+	void			*origin;		/* Originator's pointer, e.g. struct sock or struct file. Can be NULL. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: include/linux/syscalls.h:605:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min, unsigned int max,
+		struct timespec timeout, struct ukevent __user *buf, unsigned flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#412: FILE: include/linux/syscalls.h:605:
+		struct timespec timeout, struct ukevent __user *buf, unsigned flags);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#413: FILE: include/linux/syscalls.h:606:
+asmlinkage long sys_kevent_ctl(int ctl_fd, unsigned int cmd, unsigned int num, struct ukevent __user *buf);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: include/linux/syscalls.h:607:
+asmlinkage long sys_kevent_wait(int ctl_fd, unsigned int num, unsigned int old_uidx, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: include/linux/syscalls.h:608:
+asmlinkage long sys_kevent_wait(int ctl_fd, unsigned int num, unsigned int old_uidx, 
+		struct timespec timeout, unsigned int flags);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#417: FILE: include/linux/syscalls.h:610:
+asmlinkage long sys_kevent_init(int ctl_fd, struct kevent_ring __user *ring, unsigned int num, unsigned int flags);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#425: FILE: include/linux/ukevent.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#440: FILE: include/linux/ukevent.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#441: FILE: include/linux/ukevent.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: include/linux/ukevent.h:39:
+ * If it will be confirmed that kevent is ready $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: include/linux/ukevent.h:41:
+ * to userspace, otherwise it will be requeued back to storage. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: include/linux/ukevent.h:43:
+ * callback can detect when it was called from $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: include/linux/ukevent.h:44:
+ * kevent_storage_ready() - bit is set, or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: include/linux/ukevent.h:45:
+ * kevent_dequeue_ready() - bit is cleared. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#470: FILE: include/linux/ukevent.h:46:
+ * If kevent will be requeued, bit will be set again. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#490: FILE: include/linux/ukevent.h:66:
+#define KEVENT_SOCKET ^I^I0$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: include/linux/ukevent.h:130:
+ * in a usual way through sigmask update and signal callback $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#555: FILE: include/linux/ukevent.h:131:
+ * invocation. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#564: FILE: include/linux/ukevent.h:140:
+struct kevent_id
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#567: FILE: include/linux/ukevent.h:143:
+		__u32		raw[2];
+		__u64		raw_u64 __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#567: FILE: include/linux/ukevent.h:143:
+		__u64		raw_u64 __attribute__((aligned(8)));

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#572: FILE: include/linux/ukevent.h:148:
+struct ukevent
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#596: FILE: include/linux/ukevent.h:172:
+struct kevent_ring
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#601: FILE: include/linux/ukevent.h:177:
+#define^IKEVENT_CTL_ADD ^I^I0$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#660: FILE: kernel/kevent/Kconfig:20:
+config KEVENT_TIMER
+	bool "Kernel event notifications for timers"
+	depends on KEVENT
+	default y
+	help
+	  This option allows to use timers through KEVENT subsystem.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#667: FILE: kernel/kevent/Kconfig:27:
+config KEVENT_POLL
+	bool "Kernel event notifications for poll()/select()"
+	depends on KEVENT
+	default y
+	help
+	  This option allows to use kevent subsystem for poll()/select()
+	  notifications.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#675: FILE: kernel/kevent/Kconfig:35:
+config KEVENT_SOCKET
+	bool "Kernel event notifications for sockets"
+	depends on NET && KEVENT
+	default y
+	help
+	  This option enables notifications through KEVENT subsystem of 
+	  sockets operations, like new packet receiving conditions, 
+	  ready for accept conditions and so on.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: kernel/kevent/Kconfig:40:
+^I  This option enables notifications through KEVENT subsystem of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: kernel/kevent/Kconfig:41:
+^I  sockets operations, like new packet receiving conditions, $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#684: FILE: kernel/kevent/Kconfig:44:
+config KEVENT_PIPE
+	bool "Kernel event notifications for pipes"
+	depends on KEVENT
+	default y
+	help
+	  This option enables notifications through KEVENT subsystem of 
+	  pipe read/write operations.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#689: FILE: kernel/kevent/Kconfig:49:
+^I  This option enables notifications through KEVENT subsystem of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: kernel/kevent/Kconfig:61:
+^I  With KEVENT_SIGNAL_NOMASK flag being set in kevent for set of $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#725: FILE: kernel/kevent/kevent.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#740: FILE: kernel/kevent/kevent.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#741: FILE: kernel/kevent/kevent.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: kernel/kevent/kevent.c:78:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#820: FILE: kernel/kevent/kevent.c:96:
+	printk(KERN_INFO "KEVENT: Added callbacks for type %d.\n", pos);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#838: FILE: kernel/kevent/kevent.c:114:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#843: FILE: kernel/kevent/kevent.c:119:
+		return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#849: FILE: kernel/kevent/kevent.c:125:
+		return -ENOSYS;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#900: FILE: kernel/kevent/kevent.c:176:
+		ret = (k->event.ret_flags & (KEVENT_RET_BROKEN|KEVENT_RET_DONE));
 		                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#953: FILE: kernel/kevent/kevent.c:229:
+void kevent_storage_ready(struct kevent_storage *st,
+		kevent_callback_t ready_callback, u32 event)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#996: FILE: kernel/kevent/kevent_user.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1011: FILE: kernel/kevent/kevent_user.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1012: FILE: kernel/kevent/kevent_user.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1028: FILE: kernel/kevent/kevent_user.c:33:
+#include <asm/io.h>

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1059: FILE: kernel/kevent/kevent_user.c:64:
+	return (u->uidx > u->kidx)?
 	                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1060: FILE: kernel/kevent/kevent_user.c:65:
+		(u->uidx - u->kidx):
 		                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1076: FILE: kernel/kevent/kevent_user.c:81:
+ * Returns $

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#1090: FILE: kernel/kevent/kevent_user.c:95:
+	ring = u->pring;
 	          ^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1142: FILE: kernel/kevent/kevent_user.c:147:
+	u->kidx = u->uidx = u->ring_over = u->full = 0;

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#1144: FILE: kernel/kevent/kevent_user.c:149:
+	u->pring = ring;
 	   ^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1192: FILE: kernel/kevent/kevent_user.c:197:
+	struct kevent *kevent = container_of(rcu, struct kevent, rcu_head);
+	kmem_cache_free(kevent_cache, kevent);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1290: FILE: kernel/kevent/kevent_user.c:295:
+		if (k && (k->event.req_flags & KEVENT_REQ_LAST_CHECK)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1301: FILE: kernel/kevent/kevent_user.c:306:
+				k->event.ret_data[0] = k->event.ret_data[1] = 0;

CHECK:BRACES: Unbalanced braces around else statement
#1305: FILE: kernel/kevent/kevent_user.c:310:
+		} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1375: FILE: kernel/kevent/kevent_user.c:380:
+		k->event.ret_data[0] = k->event.ret_data[1] = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1393: FILE: kernel/kevent/kevent_user.c:398:
+		if (cmp > 0)
[...]
+		else if (cmp < 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1397: FILE: kernel/kevent/kevent_user.c:402:
+		else {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ukev)...) over kmalloc(sizeof(struct ukevent)...)
#1480: FILE: kernel/kevent/kevent_user.c:485:
+	ukev = kmalloc(sizeof(struct ukevent) * num, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1480: FILE: kernel/kevent/kevent_user.c:485:
+	ukev = kmalloc(sizeof(struct ukevent) * num, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1523: FILE: kernel/kevent/kevent_user.c:528:
+^I$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1541: FILE: kernel/kevent/kevent_user.c:546:
+						memcpy(&ukev[rnum], &ukev[i], sizeof(struct ukevent));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1545: FILE: kernel/kevent/kevent_user.c:550:
+			if (copy_to_user(orig, ukev, rnum*sizeof(struct ukevent)))
 			                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1611: FILE: kernel/kevent/kevent_user.c:616:
+			if (copy_to_user(arg, ukev, num*sizeof(struct ukevent)))
 			                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1669: FILE: kernel/kevent/kevent_user.c:674:
+			if (copy_to_user(arg, ukev, num*sizeof(struct ukevent)))
 			                               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1717: FILE: kernel/kevent/kevent_user.c:722:
+		if (cmp > 0)
[...]
+		else if (cmp < 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1721: FILE: kernel/kevent/kevent_user.c:726:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1783: FILE: kernel/kevent/kevent_user.c:788:
+	if (err < 0) {
[...]
+	} else if (err > 0)
[...]

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1791: FILE: kernel/kevent/kevent_user.c:796:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1818: FILE: kernel/kevent/kevent_user.c:823:
+^I^I^I^I^I^Imemcpy(&ukev[rnum], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1819: FILE: kernel/kevent/kevent_user.c:824:
+^I^I^I^I^I^I^I&ukev[i], $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1819: FILE: kernel/kevent/kevent_user.c:824:
+						memcpy(&ukev[rnum], 
+							&ukev[i], 

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1826: FILE: kernel/kevent/kevent_user.c:831:
+						if (i != rnum)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1827: FILE: kernel/kevent/kevent_user.c:832:
+^I^I^I^I^I^I^Imemcpy(&ukev[rnum], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1828: FILE: kernel/kevent/kevent_user.c:833:
+^I^I^I^I^I^I^I^I&ukev[i], $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1828: FILE: kernel/kevent/kevent_user.c:833:
+							memcpy(&ukev[rnum], 
+								&ukev[i], 

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1834: FILE: kernel/kevent/kevent_user.c:839:
+			if (copy_to_user(orig, ukev, rnum*sizeof(struct ukevent)))
 			                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1889: FILE: kernel/kevent/kevent_user.c:894:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1895: FILE: kernel/kevent/kevent_user.c:900:
+static int kevent_user_wait(struct file *file, struct kevent_user *u,
+		unsigned int min_nr, unsigned int max_nr, struct timespec timeout,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1913: FILE: kernel/kevent/kevent_user.c:918:
+				printk(KERN_INFO "kevent: author was wrong, "

WARNING:SPLIT_STRING: quoted string split across lines
#1914: FILE: kernel/kevent/kevent_user.c:919:
+				printk(KERN_INFO "kevent: author was wrong, "
+						"someone uses absolute time in %s, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1915: FILE: kernel/kevent/kevent_user.c:920:
+						"please report to remove this warning.\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#1915: FILE: kernel/kevent/kevent_user.c:920:
+						"someone uses absolute time in %s, "
+						"please report to remove this warning.\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1923: FILE: kernel/kevent/kevent_user.c:928:
+		wait_event_interruptible_timeout(u->wait,
+			((u->ready_num >= 1) && kevent_ring_space(u)) || u->need_exit, tm);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1928: FILE: kernel/kevent/kevent_user.c:933:
+		if (copy_to_user(buf + num*sizeof(struct ukevent),
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1929: FILE: kernel/kevent/kevent_user.c:934:
+		if (copy_to_user(buf + num*sizeof(struct ukevent),
+					&k->event, sizeof(struct ukevent))) {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1942: FILE: kernel/kevent/kevent_user.c:947:
+struct file_operations kevent_user_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1948: FILE: kernel/kevent/kevent_user.c:953:
+static int kevent_ctl_process(struct file *file, unsigned int cmd, unsigned int num, void __user *arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1984: FILE: kernel/kevent/kevent_user.c:989:
+asmlinkage long sys_kevent_get_events(int ctl_fd, unsigned int min_nr, unsigned int max_nr,
+		struct timespec timeout, struct ukevent __user *buf, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1984: FILE: kernel/kevent/kevent_user.c:989:
+		struct timespec timeout, struct ukevent __user *buf, unsigned flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2007: FILE: kernel/kevent/kevent_user.c:1012:
+static int kevent_get_sb(struct file_system_type *fs_type, int flags,
+		   const char *dev_name, void *data, struct vfsmount *mnt)

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#2023: FILE: kernel/kevent/kevent_user.c:1028:
+static struct dentry_operations keventfs_dentry_operations = {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2027: FILE: kernel/kevent/kevent_user.c:1032:
+asmlinkage long sys_kevent_init(struct kevent_ring __user *ring, unsigned int num, unsigned int flags)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num == 1'
#2037: FILE: kernel/kevent/kevent_user.c:1042:
+	if ((ring && !num) || (!ring && num) || (num == 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#2051: FILE: kernel/kevent/kevent_user.c:1056:
+	inode->i_mode = S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2054: FILE: kernel/kevent/kevent_user.c:1059:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2094: FILE: kernel/kevent/kevent_user.c:1099:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#2108: FILE: kernel/kevent/kevent_user.c:1113:
+	struct kevent_ring __user *ring = u->pring;
 	                                     ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'over != u->ring_over'
#2120: FILE: kernel/kevent/kevent_user.c:1125:
+	if ((over != u->ring_over - 1) && (over != u->ring_over))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2166: FILE: kernel/kevent/kevent_user.c:1171:
+ * kevents from ready queue and copy them into the buffer. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2171: FILE: kernel/kevent/kevent_user.c:1176:
+asmlinkage long sys_kevent_wait(int ctl_fd, unsigned int num, unsigned int old_uidx, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2172: FILE: kernel/kevent/kevent_user.c:1177:
+asmlinkage long sys_kevent_wait(int ctl_fd, unsigned int num, unsigned int old_uidx, 
+		struct timespec timeout, unsigned int flags)

WARNING:TYPO_SPELLING: 'pring' may be misspelled - perhaps 'print'?
#2190: FILE: kernel/kevent/kevent_user.c:1195:
+	ring = u->pring;
 	          ^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2193: FILE: kernel/kevent/kevent_user.c:1198:
+#if 0

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'u->uidx != new_uidx'
#2199: FILE: kernel/kevent/kevent_user.c:1204:
+	if ((u->uidx != new_uidx) && (new_uidx != 0xffffffff)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_uidx != 0xffffffff'
#2199: FILE: kernel/kevent/kevent_user.c:1204:
+	if ((u->uidx != new_uidx) && (new_uidx != 0xffffffff)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2217: FILE: kernel/kevent/kevent_user.c:1222:
+				printk(KERN_INFO "kevent: author was wrong, "

WARNING:SPLIT_STRING: quoted string split across lines
#2218: FILE: kernel/kevent/kevent_user.c:1223:
+				printk(KERN_INFO "kevent: author was wrong, "
+						"someone uses absolute time in %s, "

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2219: FILE: kernel/kevent/kevent_user.c:1224:
+						"please report to remove this warning.\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#2219: FILE: kernel/kevent/kevent_user.c:1224:
+						"someone uses absolute time in %s, "
+						"please report to remove this warning.\n", __func__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2227: FILE: kernel/kevent/kevent_user.c:1232:
+^I^I^I((u->ready_num >= 1) && kevent_ring_space(u)) || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2227: FILE: kernel/kevent/kevent_user.c:1232:
+		wait_event_interruptible_timeout(u->wait,
+			((u->ready_num >= 1) && kevent_ring_space(u)) || 

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2233: FILE: kernel/kevent/kevent_user.c:1238:
+	for (i=0; i<num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2233: FILE: kernel/kevent/kevent_user.c:1238:
+	for (i=0; i<num; ++i) {
 	           ^

WARNING:TYPO_SPELLING: 'fucntion' may be misspelled - perhaps 'function'?
#2256: FILE: kernel/kevent/kevent_user.c:1261:
+ * This fucntion returns actual number of kevents which were committed.
         ^^^^^^^^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2302: FILE: kernel/kevent/kevent_user.c:1307:
+asmlinkage long sys_kevent_ctl(int fd, unsigned int cmd, unsigned int num, struct ukevent __user *arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2330: FILE: kernel/kevent/kevent_user.c:1335:
+	kevent_cache = kmem_cache_create("kevent_cache",
+			sizeof(struct kevent), 0, SLAB_PANIC, NULL, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2331: FILE: kernel/kevent/kevent_user.c:1336:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2333: FILE: kernel/kevent/kevent_user.c:1338:
+	kevent_user_cache = kmem_cache_create("kevent_user_cache",
+			sizeof(struct kevent_user), 0, SLAB_PANIC, NULL, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2334: FILE: kernel/kevent/kevent_user.c:1339:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2338: FILE: kernel/kevent/kevent_user.c:1343:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2344: FILE: kernel/kevent/kevent_user.c:1349:
+	printk(KERN_INFO "KEVENT subsystem has been successfully registered.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000007223.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 50 errors, 57 warnings, 57 checks, 2242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000007223.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
