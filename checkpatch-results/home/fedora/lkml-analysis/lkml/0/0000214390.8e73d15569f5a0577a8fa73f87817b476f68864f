CHECK:MACRO_ARG_REUSE: Macro argument reuse 'policy' - possible side-effects?
#125: FILE: include/linux/sched.h:138:
+#define SCHED_RANGE(policy)	((policy) == SCHED_NORMAL || \
+				(policy) == SCHED_FIFO || \
+				(policy) == SCHED_RR || \
+				(policy) == SCHED_ISO)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'policy' - possible side-effects?
#130: FILE: include/linux/sched.h:143:
+#define SCHED_RT(policy)	((policy) == SCHED_FIFO || \
+				(policy) == SCHED_RR)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#159: FILE: include/linux/sysctl.h:138:
+	KERN_ISO_CPU=68,	/* int: cpu% allowed by SCHED_ISO class */
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#160: FILE: include/linux/sysctl.h:139:
+	KERN_ISO_PERIOD=69,	/* int: seconds over which SCHED_ISO cpu is decayed */
 	               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: kernel/sched.c:213:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#212: FILE: kernel/sched.c:313:
+	if ((!iso_task(p) && !iso_task(rq->curr)) || rq->iso_refractory ||
[...]
+			if (p->prio < rq->curr->prio)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: kernel/sched.c:314:
+	if ((!iso_task(p) && !iso_task(rq->curr)) || rq->iso_refractory ||
+		rt_task(p) || rt_task(rq->curr)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#261: FILE: kernel/sched.c:618:
+	runqueue_t *rq = task_rq(p);
+	list_add_tail(&p->iso_list, &rq->iso_queue);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: kernel/sched.c:635:
+	runqueue_t *rq = task_rq(p);
+	list_move_tail(&p->iso_list, &rq->iso_queue);

WARNING:LINE_SPACING: Missing a blank line after declarations
#342: FILE: kernel/sched.c:2458:
+	int ret = 0;
+	if (rq->iso_ticks < (iso_period * HZ * 100 - 99))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#345: FILE: kernel/sched.c:2461:
+	if (!rq->iso_refractory && (rq->iso_ticks /
[...]
+			rq->iso_refractory = 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: kernel/sched.c:2474:
+^Iif (rq->iso_ticks) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#358: FILE: kernel/sched.c:2474:
+	int ret = 0;
+	if (rq->iso_ticks) 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#362: FILE: kernel/sched.c:2478:
+	if (rq->iso_refractory && (rq->iso_ticks /
[...]
+			rq->iso_refractory = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: kernel/sched.c:2481:
+^I^I^Iif (iso_queued(rq)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: kernel/sched.c:2505:
+^Ielse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: kernel/sched.c:2548:
+^I^I * was hit, or SCHED_ISO task(s) are waiting and the $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#452: FILE: kernel/sched.c:2635:
+static task_t* queue_iso(runqueue_t *rq, prio_array_t *array)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: kernel/sched.c:2639:
+	prio_array_t *old_array = p->array;
+	list_del(&p->run_list);

CHECK:BRACES: Unbalanced braces around else statement
#520: FILE: kernel/sched.c:2932:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'param->sched_priority == 0'
#553: FILE: kernel/sched.c:3414:
+	if ((!SCHED_RT(policy)) != (param->sched_priority == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#607: FILE: kernel/sched.c:4964:
+		rq->iso_refractory = rq->iso_ticks = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#637: FILE: kernel/sysctl.c:223:
+/* Constants for minimum and maximum testing in vm_table.
+   We use these as one-element integer vectors. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#637: FILE: kernel/sysctl.c:223:
+   We use these as one-element integer vectors. */

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#656: FILE: kernel/sysctl.c:649:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214390.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 11 warnings, 6 checks, 520 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214390.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
