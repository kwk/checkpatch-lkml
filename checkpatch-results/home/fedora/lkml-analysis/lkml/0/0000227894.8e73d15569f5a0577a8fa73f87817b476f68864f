WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
diff -ruN 205-device-pm-trees-old/drivers/base/power/main.c 205-device-pm-trees-new/drivers/base/power/main.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: drivers/base/power/main.c:30:
+{ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#60: FILE: drivers/base/power/main.c:30:
+struct partial_device_tree default_device_tree =
+{ 

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: drivers/base/power/main.c:37:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/base/power/power.h:39:
+struct partial_device_tree $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#115: FILE: drivers/base/power/power.h:40:
+struct partial_device_tree 
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: drivers/base/power/power.h:79:
+extern void dpm_resume_tree(struct partial_device_tree * tree);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: drivers/base/power/power.h:79:
+extern void dpm_resume_tree(struct partial_device_tree * tree);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: drivers/base/power/power.h:81:
+extern void dpm_power_up_tree(struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: drivers/base/power/power.h:81:
+extern void dpm_power_up_tree(struct partial_device_tree * tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: drivers/base/power/resume.c:32:
+void dpm_resume_tree(struct partial_device_tree * tree)

ERROR:SPACING: space required before the open parenthesis '('
#155: FILE: drivers/base/power/resume.c:35:
+	while(!list_empty(&tree->dpm_off)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: drivers/base/power/resume.c:36:
+		struct list_head * entry = tree->dpm_off.next;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: drivers/base/power/resume.c:75:
+void device_resume_tree(struct partial_device_tree * tree)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#190: FILE: drivers/base/power/resume.c:82:
+EXPORT_SYMBOL(device_resume_tree);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: drivers/base/power/resume.c:95:
+void dpm_power_up_tree(struct partial_device_tree * tree)

ERROR:SPACING: space required before the open parenthesis '('
#203: FILE: drivers/base/power/resume.c:97:
+	while(!list_empty(&tree->dpm_off_irq)) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#204: FILE: drivers/base/power/resume.c:98:
+		struct list_head * entry = tree->dpm_off_irq.next;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#233: FILE: drivers/base/power/shutdown.c:68:
+EXPORT_SYMBOL(device_shutdown);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: drivers/base/power/suspend.c:68:
+int device_suspend_tree(u32 state, struct partial_device_tree * tree)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: drivers/base/power/suspend.c:75:
+		struct list_head * entry = tree->dpm_active.prev;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#295: FILE: drivers/base/power/suspend.c:111:
+EXPORT_SYMBOL(device_suspend_tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: drivers/base/power/suspend.c:129:
+int device_power_down_tree(u32 state, struct partial_device_tree * tree)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#332: FILE: drivers/base/power/suspend.c:143:
+EXPORT_SYMBOL_GPL(device_power_down_tree);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#338: FILE: drivers/base/power/suspend.c:149:
+	if (!(error = device_power_down_tree(state, &default_device_tree)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#347: FILE: drivers/base/power/tree.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#366: FILE: drivers/base/power/tree.c:20:
+void device_merge_tree(	struct partial_device_tree * source,

ERROR:SPACING: space prohibited after that open parenthesis '('
#366: FILE: drivers/base/power/tree.c:20:
+void device_merge_tree(	struct partial_device_tree * source,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/base/power/tree.c:21:
+void device_merge_tree(	struct partial_device_tree * source,
+			struct partial_device_tree * dest)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: drivers/base/power/tree.c:21:
+			struct partial_device_tree * dest)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#378: FILE: drivers/base/power/tree.c:32:
+ * ^Idevice_switch_trees - Move a device and its ancestors to a new tree$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#379: FILE: drivers/base/power/tree.c:33:
+ * ^I@dev:^IThe lowest device to be moved.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: drivers/base/power/tree.c:34:
+ * ^I@tree:^IThe destination tree.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#382: FILE: drivers/base/power/tree.c:36:
+ * ^INote that siblings can be left in the original tree. This is because$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#383: FILE: drivers/base/power/tree.c:37:
+ * ^Iwe want to be able to keep part of a tree in one state while part is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#384: FILE: drivers/base/power/tree.c:38:
+ * ^Iin another.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#386: FILE: drivers/base/power/tree.c:40:
+ * ^ISince we iterate all the way back to the top, and may move entries$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#387: FILE: drivers/base/power/tree.c:41:
+ * ^Ialready in the destination tree, we will never violate the depth$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#388: FILE: drivers/base/power/tree.c:42:
+ * ^Ifirst property of the destination tree.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#391: FILE: drivers/base/power/tree.c:45:
+void device_switch_trees(struct device * dev, struct partial_device_tree * tree)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#391: FILE: drivers/base/power/tree.c:45:
+void device_switch_trees(struct device * dev, struct partial_device_tree * tree)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#396: FILE: drivers/base/power/tree.c:50:
+		switch (dev->current_list) {
+			case DEVICE_LIST_DPM_ACTIVE:
[...]
+			case DEVICE_LIST_DPM_OFF:
[...]
+			case DEVICE_LIST_DPM_OFF_IRQ:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: drivers/base/power/tree.c:61:
+^I^I^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#413: FILE: drivers/base/power/tree.c:67:
+EXPORT_SYMBOL(device_switch_trees);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#416: FILE: drivers/base/power/tree.c:70:
+ * ^Icreate_device_tree - Create a new device tree$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#419: FILE: drivers/base/power/tree.c:73:
+struct partial_device_tree * device_create_tree(void)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#421: FILE: drivers/base/power/tree.c:75:
+	struct partial_device_tree * new_tree;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: drivers/base/power/tree.c:77:
+^Inew_tree = (struct partial_device_tree *) $

CHECK:SPACING: No space is necessary after a cast
#423: FILE: drivers/base/power/tree.c:77:
+	new_tree = (struct partial_device_tree *) 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: drivers/base/power/tree.c:91:
+ * ^Idevice_destroy_tree - Destroy a dynamically created tree$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#440: FILE: drivers/base/power/tree.c:94:
+void device_destroy_tree(struct partial_device_tree * tree)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#442: FILE: drivers/base/power/tree.c:96:
+	BUG_ON(tree == &default_device_tree);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: drivers/base/power/tree.c:97:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#444: FILE: drivers/base/power/tree.c:98:
+	BUG_ON(!list_empty(&tree->dpm_active));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#445: FILE: drivers/base/power/tree.c:99:
+	BUG_ON(!list_empty(&tree->dpm_off));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#446: FILE: drivers/base/power/tree.c:100:
+	BUG_ON(!list_empty(&tree->dpm_off_irq));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#451: FILE: drivers/base/power/tree.c:105:
+EXPORT_SYMBOL(device_destroy_tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#480: FILE: include/linux/device.h:289:
+	struct partial_device_tree * tree; /* Which tree of devices this

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#481: FILE: include/linux/device.h:290:
+	struct partial_device_tree * tree; /* Which tree of devices this
+					      device is in */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#481: FILE: include/linux/device.h:290:
+					      device is in */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#483: FILE: include/linux/device.h:292:
+	int	current_list;		/* Which list within the tree the
+					   device is on (speeds moving) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#483: FILE: include/linux/device.h:292:
+					   device is on (speeds moving) */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#498: FILE: include/linux/pm.h:242:
+extern int device_suspend_tree(u32 state, struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#498: FILE: include/linux/pm.h:242:
+extern int device_suspend_tree(u32 state, struct partial_device_tree * tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#500: FILE: include/linux/pm.h:244:
+extern int device_power_down_tree(u32 state, struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#500: FILE: include/linux/pm.h:244:
+extern int device_power_down_tree(u32 state, struct partial_device_tree * tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#502: FILE: include/linux/pm.h:246:
+extern void device_power_up_tree(struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#502: FILE: include/linux/pm.h:246:
+extern void device_power_up_tree(struct partial_device_tree * tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#506: FILE: include/linux/pm.h:248:
+extern void device_resume_tree(struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#506: FILE: include/linux/pm.h:248:
+extern void device_resume_tree(struct partial_device_tree * tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#507: FILE: include/linux/pm.h:249:
+extern void device_merge_tree(	struct partial_device_tree * source,

ERROR:SPACING: space prohibited after that open parenthesis '('
#507: FILE: include/linux/pm.h:249:
+extern void device_merge_tree(	struct partial_device_tree * source,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#507: FILE: include/linux/pm.h:249:
+extern void device_merge_tree(	struct partial_device_tree * source,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: include/linux/pm.h:250:
+extern void device_merge_tree(	struct partial_device_tree * source,
+				struct partial_device_tree * dest);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#508: FILE: include/linux/pm.h:250:
+				struct partial_device_tree * dest);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#509: FILE: include/linux/pm.h:251:
+extern void device_switch_trees(struct device * dev, struct partial_device_tree * tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#509: FILE: include/linux/pm.h:251:
+extern void device_switch_trees(struct device * dev, struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#509: FILE: include/linux/pm.h:251:
+extern void device_switch_trees(struct device * dev, struct partial_device_tree * tree);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#510: FILE: include/linux/pm.h:252:
+extern void dpm_power_up_tree(struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#510: FILE: include/linux/pm.h:252:
+extern void dpm_power_up_tree(struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#511: FILE: include/linux/pm.h:253:
+extern int sysdev_suspend(u32 state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#512: FILE: include/linux/pm.h:254:
+extern int sysdev_resume(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#513: FILE: include/linux/pm.h:255:
+extern struct partial_device_tree * device_create_tree(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#513: FILE: include/linux/pm.h:255:
+extern struct partial_device_tree * device_create_tree(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: include/linux/pm.h:256:
+extern void device_destroy_tree(struct partial_device_tree * tree);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#514: FILE: include/linux/pm.h:256:
+extern void device_destroy_tree(struct partial_device_tree * tree);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227894.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 27 warnings, 16 checks, 428 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227894.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
