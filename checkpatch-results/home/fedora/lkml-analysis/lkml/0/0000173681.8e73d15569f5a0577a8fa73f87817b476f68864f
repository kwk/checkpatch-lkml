WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#24: 
Signed-Off-By: Chandra Seetharaman <sekharan@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#25: 
Signed-Off-By: Vivek Kashyap <kashyapv@us.ibm.com>

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#26: 
Signed-Off-By: Gerrit Huizenga <gh@us.ibm.com>

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'parres->cnt_guarantee == CKRM_SHARE_DONTCARE'
#44: FILE: kernel/ckrm/ckrm_numtasks.c:299:
+		if ((parres->cnt_guarantee == CKRM_SHARE_DONTCARE) ||
+				(self->my_guarantee == CKRM_SHARE_DONTCARE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->my_guarantee == CKRM_SHARE_DONTCARE'
#44: FILE: kernel/ckrm/ckrm_numtasks.c:299:
+		if ((parres->cnt_guarantee == CKRM_SHARE_DONTCARE) ||
+				(self->my_guarantee == CKRM_SHARE_DONTCARE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#45: FILE: kernel/ckrm/ckrm_numtasks.c:300:
+		if ((parres->cnt_guarantee == CKRM_SHARE_DONTCARE) ||
+				(self->my_guarantee == CKRM_SHARE_DONTCARE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'parres->cnt_limit == CKRM_SHARE_DONTCARE'
#54: FILE: kernel/ckrm/ckrm_numtasks.c:310:
+		if ((parres->cnt_limit == CKRM_SHARE_DONTCARE) ||
+				(self->my_limit == CKRM_SHARE_DONTCARE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->my_limit == CKRM_SHARE_DONTCARE'
#54: FILE: kernel/ckrm/ckrm_numtasks.c:310:
+		if ((parres->cnt_limit == CKRM_SHARE_DONTCARE) ||
+				(self->my_limit == CKRM_SHARE_DONTCARE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#55: FILE: kernel/ckrm/ckrm_numtasks.c:311:
+		if ((parres->cnt_limit == CKRM_SHARE_DONTCARE) ||
+				(self->my_limit == CKRM_SHARE_DONTCARE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->cnt_guarantee == CKRM_SHARE_DONTCARE'
#64: FILE: kernel/ckrm/ckrm_numtasks.c:322:
+		if ((res->cnt_guarantee == CKRM_SHARE_DONTCARE) ||
+				(self->my_guarantee == CKRM_SHARE_DONTCARE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->my_guarantee == CKRM_SHARE_DONTCARE'
#64: FILE: kernel/ckrm/ckrm_numtasks.c:322:
+		if ((res->cnt_guarantee == CKRM_SHARE_DONTCARE) ||
+				(self->my_guarantee == CKRM_SHARE_DONTCARE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: kernel/ckrm/ckrm_numtasks.c:323:
+		if ((res->cnt_guarantee == CKRM_SHARE_DONTCARE) ||
+				(self->my_guarantee == CKRM_SHARE_DONTCARE)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173681.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 4 warnings, 9 checks, 27 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173681.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
