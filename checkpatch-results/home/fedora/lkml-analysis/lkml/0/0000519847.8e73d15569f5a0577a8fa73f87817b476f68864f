WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
My first attempt at a patch - this fix was actually supported by ConnectTech

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#53: FILE: drivers/char/serial.c:1422:
+	if (state->lmode_fn)
+	  (state->lmode_fn)(state,TIOCSER485SET,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#54: FILE: drivers/char/serial.c:1423:
+	  (state->lmode_fn)(state,TIOCSER485SET,NULL);
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#54: FILE: drivers/char/serial.c:1423:
+	  (state->lmode_fn)(state,TIOCSER485SET,NULL);
 	                                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (state->lmode_fn)
#54: FILE: drivers/char/serial.c:1423:
+	  (state->lmode_fn)(state,TIOCSER485SET,NULL);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#63: FILE: drivers/char/serial.c:2531:
+	struct serial_state * state = info->state;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#73: FILE: drivers/char/serial.c:2591:
+	  if (state->lmode_fn)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#73: FILE: drivers/char/serial.c:2591:
+	  if (state->lmode_fn)
+	    return (state->lmode_fn)(state, cmd, (unsigned int *) arg);

WARNING:TABSTOP: Statements should start on a tabstop
#74: FILE: drivers/char/serial.c:2592:
+	    return (state->lmode_fn)(state, cmd, (unsigned int *) arg);

CHECK:SPACING: No space is necessary after a cast
#74: FILE: drivers/char/serial.c:2592:
+	    return (state->lmode_fn)(state, cmd, (unsigned int *) arg);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (state->lmode_fn)
#74: FILE: drivers/char/serial.c:2592:
+	    return (state->lmode_fn)(state, cmd, (unsigned int *) arg);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#97: FILE: drivers/char/serial.c:4159:
+static int pci_cti485_fn(struct serial_state *state, int ioctl,
+			 unsigned int *value) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#99: FILE: drivers/char/serial.c:4161:
+			 unsigned int *value) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: drivers/char/serial.c:4162:
+        static unsigned char done_init = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: drivers/char/serial.c:4162:
+        static unsigned char done_init = 0;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#100: FILE: drivers/char/serial.c:4162:
+        static unsigned char done_init = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:BRACES: braces {} should be used on all arms of this statement
#120: FILE: drivers/char/serial.c:4182:
+	if (value)
[...]
+	else if (!done_init) {
[...]

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#125: FILE: drivers/char/serial.c:4187:
+		switch (bits) {
+			case 0x03:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#136: FILE: drivers/char/serial.c:4198:
+	switch (state->lmode) {
+		default:
+		case TIOCSER485FULLDUPLEX:
[...]
+		case TIOCSER485HALFDUPLEX:
[...]
+		case TIOCSER485SLAVEMULTIPLEX:

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#192: FILE: drivers/char/serial.c:4254:
+static int pci_cti485_4_fn(struct serial_state *state, int ioctl,
+			   unsigned int *value) {

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#198: FILE: drivers/char/serial.c:4260:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#203: FILE: drivers/char/serial.c:4265:
+static int pci_cti485_2_fn(struct serial_state *state, int ioctl,
+			   unsigned int *value) {

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#209: FILE: drivers/char/serial.c:4271:
+		return -ENOSYS;

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please don't use multiple blank lines
#314: FILE: include/asm-i386/ioctls.h:78:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519847.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 11 warnings, 6 checks, 264 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519847.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
