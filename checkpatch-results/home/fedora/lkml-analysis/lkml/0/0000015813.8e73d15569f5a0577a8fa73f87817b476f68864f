CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#85: FILE: include/linux/fs.h:1628:
 }
+extern void prune_icache_sb(int nr_to_scan, struct super_block *sb);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: include/linux/fs.h:1628:
+extern void prune_icache_sb(int nr_to_scan, struct super_block *sb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: include/linux/fs.h:1629:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: include/linux/fs.h:1629:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: fs/inode.c:431:
+^I^Iif (inode->i_state || atomic_read(&inode->i_count) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_sb != sb'
#106: FILE: fs/inode.c:431:
+		if (inode->i_state || atomic_read(&inode->i_count) 
+			|| (sb && (inode->i_sb != sb))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#107: FILE: fs/inode.c:432:
+		if (inode->i_state || atomic_read(&inode->i_count) 
+			|| (sb && (inode->i_sb != sb))) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#120: FILE: fs/inode.c:470:
+EXPORT_SYMBOL(prune_icache_sb);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000015813.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 2 warnings, 4 checks, 47 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000015813.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
