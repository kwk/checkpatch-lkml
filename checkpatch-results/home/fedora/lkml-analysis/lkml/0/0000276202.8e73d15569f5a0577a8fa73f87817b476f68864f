WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#36: 
  Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: drivers/base/bus.c:47:
+drv_attr_store(struct kobject * kobj, struct attribute * attr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: drivers/base/bus.c:47:
+drv_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: drivers/base/bus.c:95:
+bus_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: drivers/base/bus.c:95:
+bus_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#204: FILE: drivers/base/bus.c:157:
+int bus_for_each_dev(struct bus_type * bus, struct device * start,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#204: FILE: drivers/base/bus.c:157:
+int bus_for_each_dev(struct bus_type * bus, struct device * start,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#310: FILE: drivers/base/bus.c:311:
+				printk(KERN_WARNING

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#330: FILE: drivers/base/bus.c:343:
+		struct device * dev = container_of(entry, struct device, bus_list);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#337: FILE: drivers/base/bus.c:348:
+				printk(KERN_WARNING

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#357: FILE: drivers/base/bus.c:389:
+		struct device * dev = container_of(entry, struct device, driver_list);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: drivers/base/bus.c:547:
+	struct kobject * k = kset_find_obj(&bus_subsys.kset, name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: drivers/base/class.c:36:
+class_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: drivers/base/class.c:36:
+class_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#599: FILE: drivers/base/class.c:189:
+class_device_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#599: FILE: drivers/base/class.c:189:
+class_device_attr_store(struct kobject * kobj, struct attribute * attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#672: FILE: drivers/base/class_simple.c:180:
+int class_simple_set_hotplug(struct class_simple *cs,
 	int (*hotplug)(struct class_device *dev, char **envp, int num_envp, char *buffer, int buffer_size))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#709: FILE: drivers/base/core.c:49:
+dev_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#709: FILE: drivers/base/core.c:49:
+dev_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:SPACING: space required before the open parenthesis '('
#840: FILE: drivers/base/core.c:374:
+		if((error = fn(child, data)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#840: FILE: drivers/base/core.c:374:
+		if((error = fn(child, data)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1006: FILE: drivers/base/interface.c:2:
+ * drivers/base/interface.c - common driverfs interface that's exported to

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1045: FILE: drivers/base/interface.c:38:
+	state = simple_strtoul(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1065: FILE: drivers/base/node.c:31:
+static SYSDEV_ATTR(cpumap, S_IRUGO, node_read_cpumap, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1088: FILE: drivers/base/node.c:66:
+static SYSDEV_ATTR(meminfo, S_IRUGO, node_read_meminfo, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1097: FILE: drivers/base/node.c:106:
+static SYSDEV_ATTR(numastat, S_IRUGO, node_read_numastat, NULL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1284: FILE: drivers/base/power/runtime.c:58:
+	if (!(error = suspend_device(dev, state)))

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1412: FILE: drivers/base/power/suspend.c:60:
  *	Check the return value for each. If it returns 0, then we move the
+ *	the device to the dpm_off list. If it returns -EAGAIN, we move it to

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1457: FILE: drivers/base/power/suspend.c:121:
+		if ((error = suspend_device(dev, state)))

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1495: FILE: drivers/base/power/sysfs.c:38:
+	state = simple_strtoul(buf, &rest, 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1564: FILE: drivers/base/sys.c:44:
+sysdev_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1564: FILE: drivers/base/sys.c:44:
+sysdev_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1628: FILE: drivers/base/sys.c:119:
+int sysdev_driver_register(struct sysdev_class * cls,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1654: FILE: drivers/base/sys.c:184:
+	error = kobject_set_name(&sysdev->kobj, "%s%d",
+			 kobject_name(&cls->kset.kobj), sysdev->id);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 10 warnings, 2 checks, 1583 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
