Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:TYPO_SPELLING: 'memmory' may be misspelled - perhaps 'memory'?
#42: 
    stuff like that. All the custom DOS high system memmory loaded
                                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'preferr' may be misspelled - perhaps 'prefer'?
#51: 
- Make do_ide_request preferr to handle the device matching the request
                      ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
diff -durNp -X /tmp/diff.V3naum linux-2.5.29/Documentation/ide.txt linux/Documentation/ide.txt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/ide/cmd640.c:700:
+ *^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: drivers/ide/cmd640.c:704:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/ide/cmd640.c:704:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: drivers/ide/cmd640.c:709:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/ide/cmd640.c:727:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: drivers/ide/cmd640.c:731:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/ide/cmd640.c:731:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#228: FILE: drivers/ide/cmd640.c:732:
+ 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#232: FILE: drivers/ide/cmd640.c:736:
+	unsigned long flags;
+	spin_lock_irqsave(&pci_lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: drivers/ide/cmd640.c:737:
+^I$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ch' - possible side-effects?
#268: FILE: drivers/ide/cs5530.c:61:
+#define CS5530_BASEREG(ch)	(((ch)->dma_base & ~0xf) + ((ch)->unit ? 0x30 : 0x20))

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#311: FILE: drivers/ide/cs5530.c:96:
+	struct ata_device *mate = &ch->drives[unit^1];
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#321: FILE: drivers/ide/cs5530.c:105:
+	outb(inb(ch->dma_base+2)&~(unit?0x40:0x20), ch->dma_base+2); /* clear DMA_capable bit */
 	                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#321: FILE: drivers/ide/cs5530.c:105:
+	outb(inb(ch->dma_base+2)&~(unit?0x40:0x20), ch->dma_base+2); /* clear DMA_capable bit */
 	                        ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#321: FILE: drivers/ide/cs5530.c:105:
+	outb(inb(ch->dma_base+2)&~(unit?0x40:0x20), ch->dma_base+2); /* clear DMA_capable bit */
 	                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#321: FILE: drivers/ide/cs5530.c:105:
+	outb(inb(ch->dma_base+2)&~(unit?0x40:0x20), ch->dma_base+2); /* clear DMA_capable bit */
 	                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#321: FILE: drivers/ide/cs5530.c:105:
+	outb(inb(ch->dma_base+2)&~(unit?0x40:0x20), ch->dma_base+2); /* clear DMA_capable bit */
 	                                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#348: FILE: drivers/ide/cs5530.c:184:
+	outb(inb(ch->dma_base+2)|(unit?0x40:0x20), ch->dma_base+2);	/* set DMA_capable bit */
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#348: FILE: drivers/ide/cs5530.c:184:
+	outb(inb(ch->dma_base+2)|(unit?0x40:0x20), ch->dma_base+2);	/* set DMA_capable bit */
 	                        ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#348: FILE: drivers/ide/cs5530.c:184:
+	outb(inb(ch->dma_base+2)|(unit?0x40:0x20), ch->dma_base+2);	/* set DMA_capable bit */
 	                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#348: FILE: drivers/ide/cs5530.c:184:
+	outb(inb(ch->dma_base+2)|(unit?0x40:0x20), ch->dma_base+2);	/* set DMA_capable bit */
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#348: FILE: drivers/ide/cs5530.c:184:
+	outb(inb(ch->dma_base+2)|(unit?0x40:0x20), ch->dma_base+2);	/* set DMA_capable bit */
 	                                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#382: FILE: drivers/ide/cs5530.c:295:
+	/* We think a 64kB transfer is a 0 byte transfer, so set our
+	   segment size to be one sector smaller than 64kB. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#382: FILE: drivers/ide/cs5530.c:295:
+	   segment size to be one sector smaller than 64kB. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#383: FILE: drivers/ide/cs5530.c:296:
+	ch->max_segment_size = (1<<16) - 512;
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#410: FILE: drivers/ide/cs5530.c:307:
+	d0_timings = inl(basereg+0);
 	                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#412: FILE: drivers/ide/cs5530.c:309:
+		outl(cs5530_pio_timings[(d0_timings>>31)&1][0], basereg+0);
 		                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#412: FILE: drivers/ide/cs5530.c:309:
+		outl(cs5530_pio_timings[(d0_timings>>31)&1][0], basereg+0);
 		                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#412: FILE: drivers/ide/cs5530.c:309:
+		outl(cs5530_pio_timings[(d0_timings>>31)&1][0], basereg+0);
 		                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#416: FILE: drivers/ide/cs5530.c:313:
+	if (CS5530_BAD_PIO(inl(basereg+8))) {	/* PIO timings not initialized? */
 	                              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#417: FILE: drivers/ide/cs5530.c:314:
+		outl(cs5530_pio_timings[(d0_timings>>31)&1][0], basereg+8);
 		                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#417: FILE: drivers/ide/cs5530.c:314:
+		outl(cs5530_pio_timings[(d0_timings>>31)&1][0], basereg+8);
 		                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#417: FILE: drivers/ide/cs5530.c:314:
+		outl(cs5530_pio_timings[(d0_timings>>31)&1][0], basereg+8);
 		                                                       ^

WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#547: FILE: drivers/ide/ide.c:557:
+				 * choosen thus far and the queue is ready for
 				   ^^^^^^^

WARNING:TYPO_SPELLING: 'wan't' may be misspelled - perhaps 'want'?
#594: FILE: drivers/ide/ide.c:575:
+			 * make sure that it wan't throw stones at us when we
 			                     ^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#715: FILE: drivers/ide/ide.c:681:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#755: FILE: drivers/ide/ide-cd.c:1620:
+			if (ATA_OP_READY != ata_status_poll(drive, SEEK_STAT, 0, IDECD_SEEK_TIMEOUT, rq)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#755: FILE: drivers/ide/ide-cd.c:1620:
+			if (ATA_OP_READY != ata_status_poll(drive, SEEK_STAT, 0, IDECD_SEEK_TIMEOUT, rq)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:BRACES: Unbalanced braces around else statement
#760: FILE: drivers/ide/ide-cd.c:1623:
+			} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#831: FILE: drivers/ide/main.c:190:
+	/* Most controllers cannot do transfers across 64kB boundaries.
+	   trm290 can do transfers within a 4GB boundary, so it changes

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#832: FILE: drivers/ide/main.c:191:
+	   this mask accordingly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#836: FILE: drivers/ide/main.c:195:
+	/* Some chipsets (cs5530, any others?) think a 64kB transfer
+	   is 0 byte transfer, so set the limit one sector smaller.

WARNING:TYPO_SPELLING: 'invidual' may be misspelled - perhaps 'individual'?
#838: FILE: drivers/ide/main.c:197:
+	   invidual chipsets with this problem change ch->max_segment_size. */
 	   ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#838: FILE: drivers/ide/main.c:197:
+	   invidual chipsets with this problem change ch->max_segment_size. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#839: FILE: drivers/ide/main.c:198:
+	ch->max_segment_size = (1<<16) - 512;
 	                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#872: FILE: drivers/ide/main.c:841:
+	printk(KERN_INFO  "ide%s", s);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#880: FILE: drivers/ide/main.c:848:
+		printk(KERN_INFO" : Enabled support for ATA doublers\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#880: FILE: drivers/ide/main.c:848:
+		printk(KERN_INFO" : Enabled support for ATA doublers\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#907: FILE: drivers/ide/main.c:961:
+				extern void init_ali14xx(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#916: FILE: drivers/ide/main.c:969:
+				extern void init_umc8672(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#925: FILE: drivers/ide/main.c:977:
+				extern void init_dtc2278(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#934: FILE: drivers/ide/main.c:993:
+				extern void init_ht6560b(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#943: FILE: drivers/ide/main.c:1001:
+				extern void init_qd65xx(void);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#992: FILE: drivers/ide/pcidma.c:389:
+	BUG_ON(i > PRD_ENTRIES);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1024: FILE: drivers/ide/pcidma.c:397:
+		/* Delete this test after linux ~2.5.35, as we care
+		   about performance in this loop. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1024: FILE: drivers/ide/pcidma.c:397:
+		   about performance in this loop. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1025: FILE: drivers/ide/pcidma.c:398:
+		BUG_ON(cur_len > ch->max_segment_size);

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#1073: FILE: drivers/ide/probe.c:44:
+ * This is called from the partition-table code in pt/msdos.c
                                                       ^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442881.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 29 warnings, 26 checks, 1069 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442881.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
