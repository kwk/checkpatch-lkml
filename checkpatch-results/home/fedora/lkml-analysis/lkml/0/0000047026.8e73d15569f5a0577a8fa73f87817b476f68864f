WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
>>I'm not sure that's a good idea. I always had my doubts that power of twos

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#91: 
//  EXTRAVERSION =-rc1-mm3
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#158: FILE: mm/slab.c:588:
+	unsigned long addr;
+	addr = (unsigned long)objp;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#160: FILE: mm/slab.c:590:
+	addr &= ~(PAGE_SIZE-1);
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#299: FILE: mm/slab.c:1208:
+		off = ALIGN(off, sizeof(void*));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#300: FILE: mm/slab.c:1209:
+		off += (cachep->num*sizeof(kmem_bufctl_t) +
 		                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: mm/slab.c:1210:
+^I^I^I       ^Isizeof(struct slab));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: mm/slab.c:1210:
+^I^I^I       ^Isizeof(struct slab));$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#303: FILE: mm/slab.c:1212:
+	off=ALIGN(off, align);
 	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#312: FILE: mm/slab.c:1221:
+	avail = PAGE_SIZE * (1<<cachep->gfporder);
 	                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#313: FILE: mm/slab.c:1222:
+	used = cachep->data_offset + cachep->buffer_size*cachep->num;
 	                                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#315: FILE: mm/slab.c:1224:
+	ret = (avail-used)/(cachep->colour_off);
 	            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#315: FILE: mm/slab.c:1224:
+	ret = (avail-used)/(cachep->colour_off);
 	                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: mm/slab.c:1229:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#336: FILE: mm/slab.c:1245:
+		hdr = ALIGN(hdr, sizeof(void*));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#338: FILE: mm/slab.c:1247:
+		hdr += sizeof(struct slab)+count*sizeof(kmem_bufctl_t);
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#338: FILE: mm/slab.c:1247:
+		hdr += sizeof(struct slab)+count*sizeof(kmem_bufctl_t);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#340: FILE: mm/slab.c:1249:
+	hdr = ALIGN(hdr,align);
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#342: FILE: mm/slab.c:1251:
+	pages = (count*size+hdr+PAGE_SIZE-1)/PAGE_SIZE;
 	              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#342: FILE: mm/slab.c:1251:
+	pages = (count*size+hdr+PAGE_SIZE-1)/PAGE_SIZE;
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#342: FILE: mm/slab.c:1251:
+	pages = (count*size+hdr+PAGE_SIZE-1)/PAGE_SIZE;
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#342: FILE: mm/slab.c:1251:
+	pages = (count*size+hdr+PAGE_SIZE-1)/PAGE_SIZE;
 	                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#342: FILE: mm/slab.c:1251:
+	pages = (count*size+hdr+PAGE_SIZE-1)/PAGE_SIZE;
 	                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: mm/slab.c:1266:
+static void calculate_sizes(int *numobj, int *gfporder,
+			size_t size, size_t align, int on_slab)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#367: FILE: mm/slab.c:1276:
+		while (get_pagecnt(size, align, on_slab, num+1) == 1) {
 		                                            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#367: FILE: mm/slab.c:1276:
+		while (get_pagecnt(size, align, on_slab, num+1) == 1) {
+			num++;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: mm/slab.c:1758:
+^Ivoid *addr = objp_to_pagehdr(slabp->s_mem);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#523: FILE: mm/slab.c:1894:
+		printk(KERN_ERR "%s: alignment too large (%d)\n", name, align);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: mm/slab.c:2047:
+^I^Iif(gfp_on > gfp_off || $

ERROR:SPACING: space required before the open parenthesis '('
#550: FILE: mm/slab.c:2047:
+		if(gfp_on > gfp_off || 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: mm/slab.c:2048:
+		if(gfp_on > gfp_off || 
+				(num_on > num_off && size > PAGE_SIZE/8)) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#551: FILE: mm/slab.c:2048:
+				(num_on > num_off && size > PAGE_SIZE/8)) {
 				                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#644: FILE: mm/slab.c:2316:
+			+ ALIGN(sizeof(struct kmem_pagehdr), sizeof(void*))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: mm/slab.c:2429:
+static void slab_map_pages(void *addr, struct kmem_cache *cachep,
+				struct slab *slabp, int nodeid)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#678: FILE: mm/slab.c:2433:
+	phdr = (struct kmem_pagehdr*)addr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#758: FILE: mm/slab.c:2572:
+		printk(KERN_ERR "%p is %s.\n", virt_to_cache(objp),

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: include/asm-i386/thread_info.h:106:
+^I ^Iret = __get_free_pages(GFP_KERNEL, THREAD_GFPORDER) \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#812: FILE: include/asm-i386/thread_info.h:106:
+^I ^Iret = __get_free_pages(GFP_KERNEL, THREAD_GFPORDER) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: include/asm-i386/thread_info.h:113:
+^I ^I__get_free_pages(GFP_KERNEL, THREAD_GFPORDER)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#820: FILE: include/asm-i386/thread_info.h:113:
+^I ^I__get_free_pages(GFP_KERNEL, THREAD_GFPORDER)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000047026.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 9 warnings, 19 checks, 703 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000047026.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
