WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
To reproduce the problem insert kprobes on schedule() and do_IRQ() functions and

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#64: FILE: arch/i386/kernel/kprobes.c:194:
+			if (kprobe_status == KPROBE_HIT_SS &&
+				*p->ainsn.insn == BREAKPOINT_INSTRUCTION) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: arch/ia64/kernel/kprobes.c:99:
+ ^I * Bits 37:40 Major opcode to be zero$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#77: FILE: arch/ia64/kernel/kprobes.c:99:
+ ^I * Bits 37:40 Major opcode to be zero$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#81: FILE: arch/ia64/kernel/kprobes.c:103:
+	if ((!major_opcode) && (!((kprobe_inst >> 27) & 0x1FF)) ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!major_opcode'
#81: FILE: arch/ia64/kernel/kprobes.c:103:
+	if ((!major_opcode) && (!((kprobe_inst >> 27) & 0x1FF)) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: arch/ia64/kernel/kprobes.c:105:
+^I ^Ip->ainsn.inst_flag |= INST_FLAG_BREAK_INST;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: arch/ia64/kernel/kprobes.c:105:
+^I ^Ip->ainsn.inst_flag |= INST_FLAG_BREAK_INST;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#109: FILE: arch/ia64/kernel/kprobes.c:616:
+			if ( (kprobe_status == KPROBE_HIT_SS) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kprobe_status == KPROBE_HIT_SS'
#109: FILE: arch/ia64/kernel/kprobes.c:616:
+			if ( (kprobe_status == KPROBE_HIT_SS) &&
+	 		     (p->ainsn.inst_flag == INST_FLAG_BREAK_INST)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->ainsn.inst_flag == INST_FLAG_BREAK_INST'
#109: FILE: arch/ia64/kernel/kprobes.c:616:
+			if ( (kprobe_status == KPROBE_HIT_SS) &&
+	 		     (p->ainsn.inst_flag == INST_FLAG_BREAK_INST)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: arch/ia64/kernel/kprobes.c:617:
+^I ^I^I     (p->ainsn.inst_flag == INST_FLAG_BREAK_INST)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#110: FILE: arch/ia64/kernel/kprobes.c:617:
+^I ^I^I     (p->ainsn.inst_flag == INST_FLAG_BREAK_INST)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: arch/ia64/kernel/kprobes.c:617:
+			if ( (kprobe_status == KPROBE_HIT_SS) &&
+	 		     (p->ainsn.inst_flag == INST_FLAG_BREAK_INST)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/ia64/kernel/kprobes.c:618:
+  ^I^I^I^Iia64_psr(regs)->ss = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: arch/ia64/kernel/kprobes.c:618:
+  ^I^I^I^Iia64_psr(regs)->ss = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/ia64/kernel/kprobes.c:618:
+  ^I^I^I^Iia64_psr(regs)->ss = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: arch/ppc64/kernel/kprobes.c:156:
+			kprobe_opcode_t insn = *p->ainsn.insn;
+			if (kprobe_status == KPROBE_HIT_SS &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: arch/ppc64/kernel/kprobes.c:157:
+			if (kprobe_status == KPROBE_HIT_SS &&
+					is_trap(insn)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: arch/x86_64/kernel/kprobes.c:315:
+			if (kprobe_status == KPROBE_HIT_SS &&
+				*p->ainsn.insn == BREAKPOINT_INSTRUCTION) {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'instr' - possible side-effects?
#192: FILE: include/asm-ppc64/kprobes.h:45:
+#define is_trap(instr)	(IS_TW(instr) || IS_TD(instr) || \
+			IS_TWI(instr) || IS_TDI(instr))

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: kernel/kprobes.c:163:
+ ^Ilocal_irq_restore(flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#211: FILE: kernel/kprobes.c:163:
+ ^Ilocal_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: kernel/kprobes.c:163:
+ ^Ilocal_irq_restore(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: kernel/kprobes.c:173:
+ ^Ilocal_irq_restore(flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: kernel/kprobes.c:173:
+ ^Ilocal_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: kernel/kprobes.c:173:
+ ^Ilocal_irq_restore(flags);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155286.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 11 warnings, 8 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155286.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
