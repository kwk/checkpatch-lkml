WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
http://www.mulix.org/patches/trident-cleanup-indentation-D1-2.6.0.patch.gz).

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#67: FILE: sound/oss/trident.c:37:
  *^IFoundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: sound/oss/trident.c:40:
+ *  v0.14.10i $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: sound/oss/trident.c:41:
+ *      December 29 2003 Muli Ben-Yehuda <mulix@mulix.org> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: sound/oss/trident.c:42:
+ *      major cleanup for 2.6, fix a few error patch buglets $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: sound/oss/trident.c:43:
+ *      with returning without properly cleaning up first, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: sound/oss/trident.c:44:
+ *      get rid of lock_kernel(). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: sound/oss/trident.c:444:
+enum dmabuf_mode { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: sound/oss/trident.c:445:
+^IDM_PLAYBACK = 0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: sound/oss/trident.c:447:
+}; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#121: FILE: sound/oss/trident.c:517:
+static inline int lock_set_fmt(struct trident_state* state)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: sound/oss/trident.c:520:
+^I^Ireturn -EFAULT; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: sound/oss/trident.c:522:
+^Ireturn 0; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#134: FILE: sound/oss/trident.c:525:
+static inline void unlock_set_fmt(struct trident_state* state)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: sound/oss/trident.c:527:
+^Iclear_bit(0, &state->fmt_flag); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: sound/oss/trident.c:675:
+#endif /* DEBUG */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: sound/oss/trident.c:1331:
+^Iint ret, i, order; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#226: FILE: sound/oss/trident.c:1333:
+	if ((ret = lock_set_fmt(state)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: sound/oss/trident.c:1334:
+^I^Ireturn ret; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: sound/oss/trident.c:1363:
+^I^I^I^Iorder = state->dmabuf.buforder - 1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: sound/oss/trident.c:1410:
+^I^Ielse /* DM_PLAYBACK */ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#263: FILE: sound/oss/trident.c:1428:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#264: FILE: sound/oss/trident.c:1429:
+static inline int prog_dmabuf_record(struct trident_state* state)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: sound/oss/trident.c:1431:
+^Ireturn prog_dmabuf(state, DM_RECORD); $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#269: FILE: sound/oss/trident.c:1434:
+static inline int prog_dmabuf_playback(struct trident_state* state)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: sound/oss/trident.c:1436:
+^Ireturn prog_dmabuf(state, DM_PLAYBACK); $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#282: FILE: sound/oss/trident.c:1879:
+	if (!dmabuf->ready && (ret = prog_dmabuf_record(state)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: sound/oss/trident.c:1983:
+^Iint lret; /* for lock_set_fmt */ $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#299: FILE: sound/oss/trident.c:2001:
+	if (!dmabuf->ready && (ret = prog_dmabuf_playback(state)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: sound/oss/trident.c:2080:
+^I^Iif ((lret = lock_set_fmt(state)) < 0) { $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#317: FILE: sound/oss/trident.c:2080:
+		if ((lret = lock_set_fmt(state)) < 0) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: sound/oss/trident.c:2081:
+^I^I^Iret = lret; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: sound/oss/trident.c:2082:
+^I^I^Igoto out; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: sound/oss/trident.c:2131:
+out_nolock: $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#363: FILE: sound/oss/trident.c:2209:
+		if ((ret = prog_dmabuf_playback(state)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#367: FILE: sound/oss/trident.c:2212:
+		if ((ret = prog_dmabuf_record(state)) != 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: sound/oss/trident.c:2249:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#387: FILE: sound/oss/trident.c:2249:
+
+	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: sound/oss/trident.c:2250:
+^Imapped = ((file->f_mode & (FMODE_WRITE | FMODE_READ)) && dmabuf->mapped); $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#399: FILE: sound/oss/trident.c:2312:
+		if ((ret = lock_set_fmt(state)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: sound/oss/trident.c:2313:
+^I^I^Ireturn ret; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#410: FILE: sound/oss/trident.c:2336:
+			if ((val = prog_dmabuf_playback(state)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#418: FILE: sound/oss/trident.c:2343:
+			if ((val = prog_dmabuf_record(state)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: sound/oss/trident.c:2349:
+^I^I/* neither READ nor WRITE? is this even possible? */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: sound/oss/trident.c:2350:
+^I^Iret = -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: sound/oss/trident.c:2351:
+^I^Ibreak; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#436: FILE: sound/oss/trident.c:2364:
+		if ((ret = lock_set_fmt(state)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: sound/oss/trident.c:2365:
+^I^I^Ireturn ret; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#447: FILE: sound/oss/trident.c:2396:
+			if ((ret = lock_set_fmt(state)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: sound/oss/trident.c:2397:
+^I^I^I^Ireturn ret; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#458: FILE: sound/oss/trident.c:2500:
+		if (!dmabuf->ready && (val = prog_dmabuf_playback(state)) != 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#467: FILE: sound/oss/trident.c:2520:
+		if (!dmabuf->ready && (val = prog_dmabuf_record(state)) != 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: sound/oss/trident.c:2583:
+^I^Iif (!dmabuf->ready && (val = prog_dmabuf_record(state)) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#494: FILE: sound/oss/trident.c:2583:
+		if (!dmabuf->ready && (val = prog_dmabuf_record(state)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: sound/oss/trident.c:2605:
+^I^Iif (!dmabuf->ready && (val = prog_dmabuf_playback(state)) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#503: FILE: sound/oss/trident.c:2605:
+		if (!dmabuf->ready && (val = prog_dmabuf_playback(state)) 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#512: FILE: sound/oss/trident.c:2632:
+		if (!dmabuf->ready && (val = prog_dmabuf_playback(state)) != 0) {

WARNING:TYPO_SPELLING: 'redundacy' may be misspelled - perhaps 'redundancy'?
#520: FILE: sound/oss/trident.c:2711:
+	/* TODO: there's some redundacy here wrt the check below */ 
 	                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: sound/oss/trident.c:2711:
+^I/* TODO: there's some redundacy here wrt the check below */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: sound/oss/trident.c:2712:
+^I/* for multi_use_count > 0. Should we return -EBUSY or find */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: sound/oss/trident.c:2713:
+^I/* a different card? for now, don't break current behaviour */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#523: FILE: sound/oss/trident.c:2714:
+^I/* -- mulix */ $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#533: FILE: sound/oss/trident.c:2735:
+				state = card->states[i] = kmalloc(sizeof(*state), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: sound/oss/trident.c:2737:
+^I^I^I^I^Iup(&card->open_sem); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: sound/oss/trident.c:3587:
+^Iunsigned long num; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: sound/oss/trident.c:3592:
+^I^Ireturn 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: sound/oss/trident.c:3596:
+^I^I^Icontinue; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: sound/oss/trident.c:3598:
+^I^Inum = ali_multi_channels_5_1[state_count]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: sound/oss/trident.c:3602:
+^I^I^Ichannel->num = num; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: sound/oss/trident.c:3607:
+^I^I^I^Inum = ali_multi_channels_5_1[state_count]; $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#630: FILE: sound/oss/trident.c:3612:
+		s = card->states[i] = kmalloc(sizeof(*state), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#632: FILE: sound/oss/trident.c:3614:
+^I^I^Inum = ali_multi_channels_5_1[state_count]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: sound/oss/trident.c:3615:
+^I^I^Iali_free_pcm_channel(card, num); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: sound/oss/trident.c:3618:
+^I^I^I^Inum = ali_multi_channels_5_1[state_count]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: sound/oss/trident.c:3619:
+^I^I^I^Iali_free_pcm_channel(card, num); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#644: FILE: sound/oss/trident.c:3624:
+^I^Imemset(s, 0, sizeof(*state)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: sound/oss/trident.c:3625:
+^I^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#647: FILE: sound/oss/trident.c:3627:
+		s->dmabuf.ossfragshift = s->dmabuf.ossmaxfrags =

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: sound/oss/trident.c:3636:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#661: FILE: sound/oss/trident.c:3641:
+^I^I^Inum = ali_multi_channels_5_1[state_count]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: sound/oss/trident.c:3642:
+^I^I^Iali_free_pcm_channel(card, num); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: sound/oss/trident.c:3971:
+^I^I^I^I^Iloop = state->multi_channels_adjust_count - diff; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#675: FILE: sound/oss/trident.c:3971:
+					int diff = state->chans_num - other_dma_nums;
+					loop = state->multi_channels_adjust_count - diff; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: sound/oss/trident.c:4123:
+^I/* TODO: recognize if we have a PM capable codec and only do this */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: sound/oss/trident.c:4124:
+^I/* if the codec is PM capable */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: sound/oss/trident.c:4223:
+^I^Icodec->dev_mixer = register_sound_mixer(&trident_mixer_fops, -1); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: sound/oss/trident.c:4241:
+^I^I^Ifor (i = 0; i < 64; i++) { $

WARNING:LINE_SPACING: Missing a blank line after declarations
#707: FILE: sound/oss/trident.c:4243:
+				u16 reg = ali_ac97_get(card, num_ac97, i * 2);
+				card->mixer_regs[i][num_ac97] = reg;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#717: FILE: sound/oss/trident.c:4347:
+	if ((card = kmalloc(sizeof(*card), GFP_KERNEL)) == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: sound/oss/trident.c:4456:
+^I^I^I^Istruct ac97_codec* codec = card->ac97_codec[i]; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#727: FILE: sound/oss/trident.c:4456:
+				struct ac97_codec* codec = card->ac97_codec[i]; 

WARNING:LINE_SPACING: Missing a blank line after declarations
#728: FILE: sound/oss/trident.c:4457:
+				struct ac97_codec* codec = card->ac97_codec[i]; 
+				unregister_sound_mixer(codec->dev_mixer);

WARNING:SPLIT_STRING: quoted string split across lines
#742: FILE: sound/oss/trident.c:4573:
+MODULE_DESCRIPTION("Trident 4DWave/SiS 7018/ALi 5451 and Tvia/IGST CyberPro5050 PCI "
+		   "Audio Driver");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#766: FILE: sound/oss/trident.h:361:
+        printk(DEBUG msg , ##args );      \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: sound/oss/trident.h:361:
+        printk(DEBUG msg , ##args );      \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#766: FILE: sound/oss/trident.h:361:
+        printk(DEBUG msg , ##args );      \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#766: FILE: sound/oss/trident.h:361:
+        printk(DEBUG msg , ##args );      \
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#766: FILE: sound/oss/trident.h:361:
+        printk(DEBUG msg , ##args );      \

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315148.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 85 errors, 8 warnings, 5 checks, 655 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315148.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
