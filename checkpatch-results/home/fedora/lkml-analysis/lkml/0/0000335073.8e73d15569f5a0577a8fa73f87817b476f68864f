WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#38: 
D: suck.  Since noone uses them, replace them with tested versions,
                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .31726-linux-2.6.0-test5-bk9/include/linux/moduleparam.h .31726-linux-2.6.0-test5-bk9.updated/include/linux/moduleparam.h

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#58: FILE: include/linux/moduleparam.h:39:
+struct kparam_array
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#79: FILE: include/linux/moduleparam.h:128:
+#define module_param_array(name, type, num, perm)			\
+	static struct kparam_array __param_arr_##name			\
+	= { ARRAY_SIZE(name), &num, param_set_##type, param_get_##type,	\
+	    sizeof(name[0]), name };					\
+	module_param_call(name, param_array_set, param_array_get, 	\
+			  &__param_arr_##name, perm)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'num' may be better as '(num)' to avoid precedence issues
#79: FILE: include/linux/moduleparam.h:128:
+#define module_param_array(name, type, num, perm)			\
+	static struct kparam_array __param_arr_##name			\
+	= { ARRAY_SIZE(name), &num, param_set_##type, param_get_##type,	\
+	    sizeof(name[0]), name };					\
+	module_param_call(name, param_array_set, param_array_get, 	\
+			  &__param_arr_##name, perm)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#81: FILE: include/linux/moduleparam.h:130:
+	static struct kparam_array __param_arr_##name			\
+	= { ARRAY_SIZE(name), &num, param_set_##type, param_get_##type,	\

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: include/linux/moduleparam.h:132:
+^Imodule_param_call(name, param_array_set, param_array_get, ^I\$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: include/linux/moduleparam.h:135:
+extern int param_array_set(const char *val, struct kernel_param *kp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: include/linux/moduleparam.h:136:
+extern int param_array_get(char *buffer, struct kernel_param *kp);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#244: FILE: kernel/params.c:354:
+EXPORT_SYMBOL(param_array_get);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#285: FILE: drivers/eisa/eisa-bus.c:200:
+	if (is_forced_dev (enable_dev, enable_dev_count, root, edev))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: drivers/eisa/eisa-bus.c:203:
+	if (is_forced_dev (disable_dev, disable_dev_count, root, edev))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335073.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 6 warnings, 5 checks, 240 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335073.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
