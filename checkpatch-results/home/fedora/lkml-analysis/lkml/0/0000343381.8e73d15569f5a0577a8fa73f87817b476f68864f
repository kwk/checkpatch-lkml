WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
this patch fix the warning: concatenation of string literals with __FUNCTION__ is deprecated

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#47: FILE: drivers/hotplug/cpqphp.h:750:
+	dbg("%s: slot->device = %d, ctrl->slot_device_offset = %d \n", __FUNCTION__, slot->device, ctrl->slot_device_offset);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#47: FILE: drivers/hotplug/cpqphp.h:750:
+	dbg("%s: slot->device = %d, ctrl->slot_device_offset = %d \n", __FUNCTION__, slot->device, ctrl->slot_device_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#47: FILE: drivers/hotplug/cpqphp.h:750:
+	dbg("%s: slot->device = %d, ctrl->slot_device_offset = %d \n", __FUNCTION__, slot->device, ctrl->slot_device_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#56: FILE: drivers/hotplug/cpqphp.h:788:
+	dbg("%s - start\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#65: FILE: drivers/hotplug/cpqphp.h:798:
+	dbg("%s - end\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#76: FILE: drivers/hotplug/cpqphp_core.c:323:
+	dbg("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#85: FILE: drivers/hotplug/cpqphp_core.c:485:
+	dbg("%s %p, %d, %d, %p\n", __FUNCTION__, ops, bus_num, dev_num, slot);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#94: FILE: drivers/hotplug/cpqphp_core.c:601:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#103: FILE: drivers/hotplug/cpqphp_core.c:636:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#112: FILE: drivers/hotplug/cpqphp_core.c:676:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#121: FILE: drivers/hotplug/cpqphp_core.c:704:
+	dbg("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#130: FILE: drivers/hotplug/cpqphp_core.c:725:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#139: FILE: drivers/hotplug/cpqphp_core.c:743:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#148: FILE: drivers/hotplug/cpqphp_core.c:761:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#157: FILE: drivers/hotplug/cpqphp_core.c:780:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#166: FILE: drivers/hotplug/cpqphp_core.c:868:
+			err("%s : pci_read_config_word failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#175: FILE: drivers/hotplug/cpqphp_core.c:879:
+			err("%s : out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#183: FILE: drivers/hotplug/cpqphp_core.c:886:
+			err("%s : pci_read_config_word failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#192: FILE: drivers/hotplug/cpqphp_core.c:1142:
+		err("%s: unable to save PCI configuration data, error %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#201: FILE: drivers/hotplug/cpqphp_core.c:1172:
+		err("%s: unable to save PCI configuration data, error %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#214: FILE: drivers/hotplug/cpqphp_ctrl.c:775:
+		    __FUNCTION__, size, node, node->base, node->length);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#220: FILE: drivers/hotplug/cpqphp_ctrl.c:780:
+			dbg("%s: not aligned\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#229: FILE: drivers/hotplug/cpqphp_ctrl.c:806:
+			dbg("%s: too big\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#238: FILE: drivers/hotplug/cpqphp_ctrl.c:823:
+		dbg("%s: got one!!!\n", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: drivers/hotplug/cpqphp_ctrl.c:858:
+	dbg("%s: head = %p, *head = %p\n",__FUNCTION__, head, *head);
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#247: FILE: drivers/hotplug/cpqphp_ctrl.c:858:
+	dbg("%s: head = %p, *head = %p\n",__FUNCTION__, head, *head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: drivers/hotplug/cpqphp_ctrl.c:945:
+		dbg ("%s - waking up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#256: FILE: drivers/hotplug/cpqphp_ctrl.c:945:
+		dbg ("%s - waking up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#267: FILE: drivers/hotplug/cpqphp_ctrl.c:1398:
+	    __FUNCTION__, func->device, ctrl->slot_device_offset, hp_slot);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#276: FILE: drivers/hotplug/cpqphp_ctrl.c:1447:
+	dbg("%s: before down\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#279: FILE: drivers/hotplug/cpqphp_ctrl.c:1449:
+	dbg("%s: after down\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#282: FILE: drivers/hotplug/cpqphp_ctrl.c:1451:
+	dbg("%s: before slot_enable\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#286: FILE: drivers/hotplug/cpqphp_ctrl.c:1454:
+	dbg("%s: before green_LED_blink\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#290: FILE: drivers/hotplug/cpqphp_ctrl.c:1457:
+	dbg("%s: before amber_LED_blink\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#294: FILE: drivers/hotplug/cpqphp_ctrl.c:1460:
+	dbg("%s: before set_SOGO\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#299: FILE: drivers/hotplug/cpqphp_ctrl.c:1464:
+	dbg("%s: before wait_for_ctrl_irq\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#302: FILE: drivers/hotplug/cpqphp_ctrl.c:1466:
+	dbg("%s: after wait_for_ctrl_irq\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#306: FILE: drivers/hotplug/cpqphp_ctrl.c:1469:
+	dbg("%s: before up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#309: FILE: drivers/hotplug/cpqphp_ctrl.c:1471:
+	dbg("%s: after up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#313: FILE: drivers/hotplug/cpqphp_ctrl.c:1474:
+	dbg("%s: before long_delay\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#316: FILE: drivers/hotplug/cpqphp_ctrl.c:1476:
+	dbg("%s: after long_delay\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#319: FILE: drivers/hotplug/cpqphp_ctrl.c:1478:
+	dbg("%s: func status = %x\n", __FUNCTION__, func->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#325: FILE: drivers/hotplug/cpqphp_ctrl.c:1483:
+		dbg("%s: temp register set to %x by power fault\n", __FUNCTION__, temp_register);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#333: FILE: drivers/hotplug/cpqphp_ctrl.c:1489:
+		dbg("%s: pci_read_config_dword returns %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#334: FILE: drivers/hotplug/cpqphp_ctrl.c:1490:
+		dbg("%s: temp_register is %x\n", __FUNCTION__, temp_register);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#340: FILE: drivers/hotplug/cpqphp_ctrl.c:1495:
+			dbg("%s: temp register set to %x by error\n", __FUNCTION__, temp_register);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#349: FILE: drivers/hotplug/cpqphp_ctrl.c:1511:
+		dbg("%s: back from configure_new_device\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#358: FILE: drivers/hotplug/cpqphp_ctrl.c:1548:
+		dbg("%s: configure linux pci_dev structure\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#367: FILE: drivers/hotplug/cpqphp_ctrl.c:1615:
+	dbg("In %s, hp_slot = %d\n", __FUNCTION__, hp_slot);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#376: FILE: drivers/hotplug/cpqphp_ctrl.c:1945:
+			dbg("Error! func NULL in %s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#385: FILE: drivers/hotplug/cpqphp_ctrl.c:1969:
+			dbg("Error! func NULL in %s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#394: FILE: drivers/hotplug/cpqphp_ctrl.c:2084:
+		dbg("%s: rc = %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#403: FILE: drivers/hotplug/cpqphp_ctrl.c:2350:
+	dbg("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#408: FILE: drivers/hotplug/cpqphp_ctrl.c:2354:
+		dbg("%s: rc = %d\n", __FUNCTION__, rc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: drivers/hotplug/cpqphp_nvram.c:163:
+	dbg ("%s - returned %d\n",__FUNCTION__, result);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#419: FILE: drivers/hotplug/cpqphp_nvram.c:163:
+	dbg ("%s - returned %d\n",__FUNCTION__, result);
 	                         ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#419: FILE: drivers/hotplug/cpqphp_nvram.c:163:
+	dbg ("%s - returned %d\n",__FUNCTION__, result);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#430: FILE: drivers/hotplug/cpqphp_pci.c:142:
+		dbg("@@@@@@@@@@@ cpqhp_slot_create in %s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#439: FILE: drivers/hotplug/cpqphp_pci.c:309:
+	dbg("%s: bus/dev/func = %x/%x/%x\n", __FUNCTION__, func->bus, func->device, func->function);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#450: FILE: drivers/hotplug/cpqphp_pci.c:358:
+	    __FUNCTION__, dev_num, bus_num, int_pin, irq_num);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#453: FILE: drivers/hotplug/cpqphp_pci.c:360:
+	dbg("%s:rc %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#462: FILE: drivers/hotplug/cpqphp_pci.c:1588:
+	dbg("%s\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#473: FILE: drivers/hotplug/pci_hotplug_core.c:52:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#473: FILE: drivers/hotplug/pci_hotplug_core.c:52:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#473: FILE: drivers/hotplug/pci_hotplug_core.c:52:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)
                                                                           ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#473: FILE: drivers/hotplug/pci_hotplug_core.c:52:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)
                                                                                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#473: FILE: drivers/hotplug/pci_hotplug_core.c:52:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)
                                                                                                    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#473: FILE: drivers/hotplug/pci_hotplug_core.c:52:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#484: FILE: drivers/hotplug/pci_hotplug_util.c:44:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#484: FILE: drivers/hotplug/pci_hotplug_util.c:44:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#484: FILE: drivers/hotplug/pci_hotplug_util.c:44:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)
                                                                           ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#484: FILE: drivers/hotplug/pci_hotplug_util.c:44:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)
                                                                                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#484: FILE: drivers/hotplug/pci_hotplug_util.c:44:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)
                                                                                                    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#484: FILE: drivers/hotplug/pci_hotplug_util.c:44:
+#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __FUNCTION__ , ## arg); } while (0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000343381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 67 warnings, 0 checks, 396 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000343381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
