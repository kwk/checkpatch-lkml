WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#80: FILE: arch/sparc64/kernel/pci_iommu.c:395:
+		printk("pci_unmap_single called on non-mapped region %08x,%08x from %016lx\n",

CHECK:SPACING: No space is necessary after a cast
#94: FILE: arch/sparc64/kernel/pci_iommu.c:445:
+		if ((bus_addr >> 32) != (dma64_addr_t) 0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#95: FILE: arch/sparc64/kernel/pci_iommu.c:446:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#97: FILE: arch/sparc64/kernel/pci_iommu.c:448:
+		return pci_unmap_single(pdev, (dma_addr_t) bus_addr,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'SG' - possible side-effects?
#104: FILE: arch/sparc64/kernel/pci_iommu.c:455:
+#define SG_ENT_PHYS_ADDRESS(SG)	\
+	((SG)->address ? \
+	 __pa((SG)->address) : \
+	 (__pa(page_address((SG)->page)) + (SG)->offset))

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#146: FILE: arch/sparc64/kernel/pci_iommu.c:520:
+				 (SG_ENT_PHYS_ADDRESS(sg) + sg->length - 1UL)) >> PAGE_SHIFT) == 0UL) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#230: FILE: arch/sparc64/kernel/pci_iommu.c:657:
+	npages = (PAGE_ALIGN(sglist[i].dma_address + sglist[i].dma_length) - bus_addr) >> PAGE_SHIFT;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: arch/sparc64/kernel/pci_iommu.c:664:
+		printk("pci_unmap_sg called on non-mapped region %016lx,%d from %016lx\n",

CHECK:SPACING: No space is necessary after a cast
#248: FILE: arch/sparc64/kernel/pci_iommu.c:677:
+		u32 vaddr = (u32) bus_addr;

CHECK:SPACING: No space is necessary after a cast
#276: FILE: arch/sparc64/kernel/pci_iommu.c:783:
+		if ((bus_addr >> 32) != (dma64_addr_t) 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#277: FILE: arch/sparc64/kernel/pci_iommu.c:784:
+			BUG();

CHECK:SPACING: No space is necessary after a cast
#279: FILE: arch/sparc64/kernel/pci_iommu.c:786:
+		return pci_dma_sync_single(pdev, (dma_addr_t) bus_addr,

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#314: FILE: arch/sparc64/kernel/pci_iommu.c:844:
+		npages = (PAGE_ALIGN(sglist[i].dma_address + sglist[i].dma_length) - bus_addr) >> PAGE_SHIFT;

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#384: FILE: arch/sparc64/kernel/iommu_common.c:58:
+static int verify_one_map(struct scatterlist *dma_sg, struct scatterlist **__sg, int nents, iopte_t **__iopte)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#423: FILE: arch/sparc64/kernel/iommu_common.c:178:
+		printk("verify_sglist: Crap, messed up mappings, dumping, iodma at ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#424: FILE: arch/sparc64/kernel/iommu_common.c:179:
+		printk("%016lx.\n", sg->dma_address & PAGE_MASK);

WARNING:SPLIT_STRING: quoted string split across lines
#429: FILE: arch/sparc64/kernel/iommu_common.c:183:
 			printk("sg(%d): address(%p) length(%x) "
+			       "dma_address[%016lx] dma_length[%08x]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#458: FILE: arch/sparc64/kernel/iommu_common.c:202:
+	dent_addr = (u64) ((unsigned long)sg->address & (PAGE_SIZE - 1UL));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'SG' - possible side-effects?
#489: FILE: arch/sparc64/kernel/sbus.c:379:
+#define SG_ENT_PHYS_ADDRESS(SG)	\
+	((SG)->address ? \
+	 __pa((SG)->address) : \
+	 (__pa(page_address((SG)->page)) + (SG)->offset))

CHECK:SPACING: No space is necessary after a cast
#518: FILE: arch/sparc64/kernel/sbus.c:408:
+				tmp = (unsigned long) SG_ENT_PHYS_ADDRESS(sg);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#530: FILE: arch/sparc64/kernel/sbus.c:443:
+				 (SG_ENT_PHYS_ADDRESS(sg) + sg->length - 1UL)) >> PAGE_SHIFT) == 0UL) {

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#620: FILE: arch/sparc64/kernel/iommu_common.h:21:
+extern void verify_sglist(struct scatterlist *sg, int nents, iopte_t *iopte, int npages);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#629: FILE: arch/sparc64/kernel/iommu_common.h:31:
+extern unsigned long prepare_sg(struct scatterlist *sg, int nents);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#637: FILE: arch/sparc64/kernel/sparc64_ksyms.c:220:
+EXPORT_SYMBOL(pci64_unmap_page);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#641: FILE: arch/sparc64/kernel/sparc64_ksyms.c:224:
+EXPORT_SYMBOL(pci64_unmap_sg);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:SPACING: space prohibited after that open parenthesis '('
#656: FILE: arch/parisc/kernel/ccio-dma.c:641:
+static int ccio_dma_supported( struct pci_dev *dev, u64 mask)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:SPACING: space prohibited after that open parenthesis '('
#667: FILE: arch/parisc/kernel/pci-dma.c:80:
+static int pa11_dma_supported( struct pci_dev *dev, u64 mask)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:SPACING: space prohibited after that open parenthesis '('
#678: FILE: arch/parisc/kernel/ccio-rm-dma.c:96:
+static int ccio_dma_supported( struct pci_dev *dev, u64 mask)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:SPACING: space prohibited after that open parenthesis '('
#689: FILE: arch/parisc/kernel/sba_iommu.c:782:
+sba_dma_supported( struct pci_dev *dev, u64 mask)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#795: FILE: include/asm-alpha/pci.h:147:
+extern int pci_dma_supported(struct pci_dev *hwdev, u64 mask);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#834: FILE: include/asm-i386/pci.h:98:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#843: FILE: include/asm-i386/pci.h:107:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#852: FILE: include/asm-i386/pci.h:116:
+		BUG();

CHECK:SPACING: No space is necessary after a cast
#854: FILE: include/asm-i386/pci.h:118:
+	return (((dma64_addr_t) (page - mem_map)) *

CHECK:SPACING: No space is necessary after a cast
#855: FILE: include/asm-i386/pci.h:119:
+		((dma64_addr_t) PAGE_SIZE)) + (dma64_addr_t) offset;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#862: FILE: include/asm-i386/pci.h:126:
+		BUG();

ERROR:SPACING: space prohibited before that close parenthesis ')'
#881: FILE: include/asm-i386/pci.h:156:
+	for (i = 0; i < nents; i++ ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#883: FILE: include/asm-i386/pci.h:158:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#885: FILE: include/asm-i386/pci.h:160:
+			BUG();

CHECK:SPACING: No space is necessary after a cast
#932: FILE: include/asm-i386/pci.h:245:
+#define sg_dma_address(sg)	((dma_addr_t) ((sg)->dma_address))

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: include/asm-i386/scatterlist.h:5:
+    char *  address;    /* Location data is to be transferred to, NULL for$

ERROR:POINTER_LOCATION: "foo *  bar" should be "foo *bar"
#944: FILE: include/asm-i386/scatterlist.h:5:
+    char *  address;    /* Location data is to be transferred to, NULL for

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#945: FILE: include/asm-i386/scatterlist.h:6:
+			 * highmem page */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: include/asm-i386/scatterlist.h:9:
+    struct page * page; /* Location for highmem page, if any */$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#948: FILE: include/asm-i386/scatterlist.h:9:
+    struct page * page; /* Location for highmem page, if any */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: include/asm-i386/scatterlist.h:10:
+    unsigned int offset;/* for highmem, page offset */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: include/asm-i386/scatterlist.h:12:
+    dma64_addr_t dma_address;$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1050: FILE: include/asm-sparc64/pci.h:79:
+#define pci_unmap_page(dev,addr,sz,dir) pci_unmap_single(dev,addr,sz,dir)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1050: FILE: include/asm-sparc64/pci.h:79:
+#define pci_unmap_page(dev,addr,sz,dir) pci_unmap_single(dev,addr,sz,dir)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1050: FILE: include/asm-sparc64/pci.h:79:
+#define pci_unmap_page(dev,addr,sz,dir) pci_unmap_single(dev,addr,sz,dir)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1050: FILE: include/asm-sparc64/pci.h:79:
+#define pci_unmap_page(dev,addr,sz,dir) pci_unmap_single(dev,addr,sz,dir)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1050: FILE: include/asm-sparc64/pci.h:79:
+#define pci_unmap_page(dev,addr,sz,dir) pci_unmap_single(dev,addr,sz,dir)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1050: FILE: include/asm-sparc64/pci.h:79:
+#define pci_unmap_page(dev,addr,sz,dir) pci_unmap_single(dev,addr,sz,dir)
                                                                     ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1055: FILE: include/asm-sparc64/pci.h:84:
+extern dma64_addr_t pci64_map_page(struct pci_dev *hwdev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1058: FILE: include/asm-sparc64/pci.h:87:
+extern void pci64_unmap_page(struct pci_dev *hwdev, dma64_addr_t dma_addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1069: FILE: include/asm-sparc64/pci.h:105:
+extern int pci_map_sg(struct pci_dev *hwdev, struct scatterlist *sg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1071: FILE: include/asm-sparc64/pci.h:107:
+extern int pci64_map_sg(struct pci_dev *hwdev, struct scatterlist *sg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1079: FILE: include/asm-sparc64/pci.h:114:
+extern void pci_unmap_sg(struct pci_dev *hwdev, struct scatterlist *sg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1081: FILE: include/asm-sparc64/pci.h:116:
+extern void pci64_unmap_sg(struct pci_dev *hwdev, struct scatterlist *sg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1091: FILE: include/asm-sparc64/pci.h:128:
+extern void pci_dma_sync_single(struct pci_dev *hwdev, dma_addr_t dma_handle,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1093: FILE: include/asm-sparc64/pci.h:130:
+extern void pci64_dma_sync_single(struct pci_dev *hwdev, dma64_addr_t dma_handle,

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1102: FILE: include/asm-sparc64/pci.h:140:
+extern void pci64_dma_sync_sg(struct pci_dev *hwdev, struct scatterlist *sg, int nelems, int direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1102: FILE: include/asm-sparc64/pci.h:140:
+extern void pci64_dma_sync_sg(struct pci_dev *hwdev, struct scatterlist *sg, int nelems, int direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1110: FILE: include/asm-sparc64/pci.h:147:
+extern int pci_dma_supported(struct pci_dev *hwdev, u64 mask);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: No space is necessary after a cast
#1144: FILE: include/asm-sparc64/scatterlist.h:24:
+#define sg_dma_address(sg)	((dma_addr_t) ((sg)->dma_address))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1146: FILE: include/asm-sparc64/scatterlist.h:26:
+#define sg_dma_len(sg)     ^I((sg)->dma_length)$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1217: FILE: include/asm-ia64/pci.h:55:
+pci_dma_supported (struct pci_dev *hwdev, u64 mask)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1250: FILE: net/ipv6/mcast.c:8:
+ *	$Id: mcast.c,v 1.38 2001/08/15 07:36:31 davem Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000518916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 61 warnings, 26 checks, 1084 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000518916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
