WARNING:TYPO_SPELLING: 'thre' may be misspelled - perhaps 'three'?
#25: 
The Coverity checker spotted that thre was a memory leak if the second 
                                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#53: FILE: drivers/media/dvb/bt8xx/dst_ca.c:476:
+	p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#53: FILE: drivers/media/dvb/bt8xx/dst_ca.c:476:
+	p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#53: FILE: drivers/media/dvb/bt8xx/dst_ca.c:476:
+	p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p_ca_message)...) over kmalloc(sizeof (struct ca_msg)...)
#53: FILE: drivers/media/dvb/bt8xx/dst_ca.c:476:
+	p_ca_message = (struct ca_msg *) kmalloc(sizeof (struct ca_msg), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#54: FILE: drivers/media/dvb/bt8xx/dst_ca.c:477:
+	p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#54: FILE: drivers/media/dvb/bt8xx/dst_ca.c:477:
+	p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#54: FILE: drivers/media/dvb/bt8xx/dst_ca.c:477:
+	p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p_ca_slot_info)...) over kmalloc(sizeof (struct ca_slot_info)...)
#54: FILE: drivers/media/dvb/bt8xx/dst_ca.c:477:
+	p_ca_slot_info = (struct ca_slot_info *) kmalloc(sizeof (struct ca_slot_info), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#55: FILE: drivers/media/dvb/bt8xx/dst_ca.c:478:
+	p_ca_caps = (struct ca_caps *) kmalloc(sizeof (struct ca_caps), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#55: FILE: drivers/media/dvb/bt8xx/dst_ca.c:478:
+	p_ca_caps = (struct ca_caps *) kmalloc(sizeof (struct ca_caps), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#55: FILE: drivers/media/dvb/bt8xx/dst_ca.c:478:
+	p_ca_caps = (struct ca_caps *) kmalloc(sizeof (struct ca_caps), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p_ca_caps)...) over kmalloc(sizeof (struct ca_caps)...)
#55: FILE: drivers/media/dvb/bt8xx/dst_ca.c:478:
+	p_ca_caps = (struct ca_caps *) kmalloc(sizeof (struct ca_caps), GFP_KERNEL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#57: FILE: drivers/media/dvb/bt8xx/dst_ca.c:480:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095787.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 7 checks, 27 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095787.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
