Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -urNp fat_super_err_fix/fs/fat/inode.c fat_vfat_opt_shift/fs/fat/inode.c

CHECK:BRACES: braces {} should be used on all arms of this statement
#44: FILE: fs/fat/inode.c:206:
+	if (s) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#45: FILE: fs/fat/inode.c:207:
+		if (!strcmp(s,"1") || !strcmp(s,"yes") || !strcmp(s,"true"))
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#45: FILE: fs/fat/inode.c:207:
+		if (!strcmp(s,"1") || !strcmp(s,"yes") || !strcmp(s,"true"))
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#45: FILE: fs/fat/inode.c:207:
+		if (!strcmp(s,"1") || !strcmp(s,"yes") || !strcmp(s,"true"))
 		                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#47: FILE: fs/fat/inode.c:209:
+		else if (!strcmp(s,"0") || !strcmp(s,"no") || !strcmp(s,"false"))
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#47: FILE: fs/fat/inode.c:209:
+		else if (!strcmp(s,"0") || !strcmp(s,"no") || !strcmp(s,"false"))
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#47: FILE: fs/fat/inode.c:209:
+		else if (!strcmp(s,"0") || !strcmp(s,"no") || !strcmp(s,"false"))
 		                                                       ^

CHECK:BRACES: Unbalanced braces around else statement
#51: FILE: fs/fat/inode.c:213:
+	} else

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#81: FILE: fs/fat/inode.c:233:
+		opts->shortname = VFAT_SFN_DISPLAY_LOWER|VFAT_SFN_CREATE_WIN95;
 		                                        ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#86: FILE: fs/fat/inode.c:238:
+	opts->quiet = opts->showexec = opts->sys_immutable = opts->dotsOK =  0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <dotsOK>
#86: FILE: fs/fat/inode.c:238:
+	opts->quiet = opts->showexec = opts->sys_immutable = opts->dotsOK =  0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#87: FILE: fs/fat/inode.c:239:
+	opts->utf8 = opts->unicode_xlate = opts->posixfs = 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: fs/fat/inode.c:249:
+		if ((value = strchr(this_char,'=')) != NULL)
 		                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#102: FILE: fs/fat/inode.c:249:
+		if ((value = strchr(this_char,'=')) != NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#121: FILE: fs/fat/inode.c:275:
+			if (!is_vfat)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#123: FILE: fs/fat/inode.c:277:
+			else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#145: FILE: fs/fat/inode.c:331:
+		else if (!strcmp(this_char,"cvf_format")) {
 		                          ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#145: FILE: fs/fat/inode.c:331:
 		}
+		else if (!strcmp(this_char,"cvf_format")) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#148: FILE: fs/fat/inode.c:334:
+			strncpy(cvf_format,value,20);
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#148: FILE: fs/fat/inode.c:334:
+			strncpy(cvf_format,value,20);
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: fs/fat/inode.c:336:
+		else if (!strcmp(this_char,"cvf_options")) {
 		                          ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#150: FILE: fs/fat/inode.c:336:
+		}
+		else if (!strcmp(this_char,"cvf_options")) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: fs/fat/inode.c:339:
+			strncpy(cvf_options,value,100);
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: fs/fat/inode.c:339:
+			strncpy(cvf_options,value,100);
 			                         ^

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#156: FILE: fs/fat/inode.c:342:
+		/* msdos specific */
 		   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: fs/fat/inode.c:343:
+		else if (!is_vfat && !strcmp(this_char,"dots")) {
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: fs/fat/inode.c:346:
+		else if (!is_vfat && !strcmp(this_char,"nodots")) {
 		                                      ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#160: FILE: fs/fat/inode.c:346:
+		}
+		else if (!is_vfat && !strcmp(this_char,"nodots")) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: fs/fat/inode.c:349:
+		else if (!is_vfat && !strcmp(this_char,"dotsOK") && value) {
 		                                      ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#163: FILE: fs/fat/inode.c:349:
+		}
+		else if (!is_vfat && !strcmp(this_char,"dotsOK") && value) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: fs/fat/inode.c:350:
+			if (!strcmp(value,"yes")) opts->dotsOK = 1;
 			                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#164: FILE: fs/fat/inode.c:350:
+			if (!strcmp(value,"yes")) opts->dotsOK = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#165: FILE: fs/fat/inode.c:351:
+			else if (!strcmp(value,"no")) opts->dotsOK = 0;
 			                      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#165: FILE: fs/fat/inode.c:351:
+			else if (!strcmp(value,"no")) opts->dotsOK = 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#166: FILE: fs/fat/inode.c:352:
+			else ret = 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#170: FILE: fs/fat/inode.c:356:
+		else if (is_vfat && !strcmp(this_char,"iocharset") && value) {
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#182: FILE: fs/fat/inode.c:377:
+		else if (is_vfat && !strcmp(this_char,"utf8")) {
 		                                     ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#182: FILE: fs/fat/inode.c:377:
 		}
+		else if (is_vfat && !strcmp(this_char,"utf8")) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#184: FILE: fs/fat/inode.c:379:
+			if (ret) opts->utf8 = val;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#186: FILE: fs/fat/inode.c:381:
+		else if (is_vfat && !strcmp(this_char,"uni_xlate")) {
 		                                     ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#186: FILE: fs/fat/inode.c:381:
+		}
+		else if (is_vfat && !strcmp(this_char,"uni_xlate")) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#188: FILE: fs/fat/inode.c:383:
+			if (ret) opts->unicode_xlate = val;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: fs/fat/inode.c:385:
+		else if (is_vfat && !strcmp(this_char,"posix")) {
 		                                     ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#190: FILE: fs/fat/inode.c:385:
+		}
+		else if (is_vfat && !strcmp(this_char,"posix")) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#192: FILE: fs/fat/inode.c:387:
+			if (ret) opts->posixfs = val;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#194: FILE: fs/fat/inode.c:389:
+		else if (is_vfat && !strcmp(this_char,"nonumtail")) {
 		                                     ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#194: FILE: fs/fat/inode.c:389:
+		}
+		else if (is_vfat && !strcmp(this_char,"nonumtail")) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#196: FILE: fs/fat/inode.c:391:
+			if (ret) {
+				opts->numtail = !val;
+			}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#204: FILE: fs/fat/inode.c:395:
 		}
+		else if (is_vfat && !strcmp(this_char, "shortname")) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: fs/fat/inode.c:411:
+			printk("FAT: Unrecognized mount option %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: fs/fat/inode.c:424:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 40 errors, 4 warnings, 8 checks, 331 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
