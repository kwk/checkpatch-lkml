WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#43: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: include/linux/adma/md_adma.h:1:
+#ifndef _MD_ADMA_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: include/linux/adma/md_adma.h:12:
+int md_issue_copy_data(int frombio, struct bio *bio,
+		     struct page *page, sector_t sector,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/md/md_adma.c:1:
+/*

WARNING:TYPO_SPELLING: 'Asychronous' may be misspelled - perhaps 'Asynchronous'?
#77: FILE: drivers/md/md_adma.c:2:
+ * md_adma.c : Asychronous DMA / XOR support for Raid5 and Raid6 acceleration
                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#91: FILE: drivers/md/md_adma.c:16:
+#define PRINTK(x...) ((void)(MD_ADMA_DEBUG && printk(x)))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#114: FILE: drivers/md/md_adma.c:39:
+	int i, failed=0;
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: drivers/md/md_adma.c:43:
+^I * the result being that subsequent xor operations will be queued even though $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#122: FILE: drivers/md/md_adma.c:47:
+	if (!atomic_dec_and_test(&sh->xor_count))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#124: FILE: drivers/md/md_adma.c:49:
+		switch(stripe_command) {
+			case CHECK_PARITY:
[...]
+			case READ_MODIFY_WRITE:
+			case RECONSTRUCT_WRITE:
[...]
+			case COMPUTE_BLOCK:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#124: FILE: drivers/md/md_adma.c:49:
+		switch(stripe_command) {

CHECK:CAMELCASE: Avoid CamelCase: <R5_InAsyncXor>
#138: FILE: drivers/md/md_adma.c:63:
+		if (unlikely(!test_and_clear_bit(R5_InAsyncXor, &sh->state)))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#139: FILE: drivers/md/md_adma.c:64:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#144: FILE: drivers/md/md_adma.c:69:
+	for (i=disks; i--; ) {
 	      ^

CHECK:CAMELCASE: Avoid CamelCase: <In_sync>
#149: FILE: drivers/md/md_adma.c:74:
+		if (!rdev || !test_bit(In_sync, &rdev->flags)) {

CHECK:CAMELCASE: Avoid CamelCase: <R5_ReadError>
#151: FILE: drivers/md/md_adma.c:76:
+			clear_bit(R5_ReadError, &dev->flags);

CHECK:CAMELCASE: Avoid CamelCase: <R5_ReWrite>
#152: FILE: drivers/md/md_adma.c:77:
+			clear_bit(R5_ReWrite, &dev->flags);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#155: FILE: drivers/md/md_adma.c:80:
+		if (!rdev || !test_bit(In_sync, &rdev->flags)
+		    || test_bit(R5_ReadError, &dev->flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Insync>
#158: FILE: drivers/md/md_adma.c:83:
+			set_bit(R5_Insync, &dev->flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/md/md_adma.c:87:
+^I/* we finish off the compute_parity or compute_block call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/md/md_adma.c:88:
+^I * and advance the stripe state $

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#165: FILE: drivers/md/md_adma.c:90:
+	switch(stripe_command) {
+		case READ_MODIFY_WRITE:
+		case RECONSTRUCT_WRITE:
[...]
+		case CHECK_PARITY:
[...]
+		case COMPUTE_BLOCK:
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#165: FILE: drivers/md/md_adma.c:90:
+	switch(stripe_command) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#168: FILE: drivers/md/md_adma.c:93:
+			for (i=disks; i--;) {
 			      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/md/md_adma.c:94:
+^I^I^I^Iif (test_bit(R5_LOCKED, &sh->dev[i].flags) && $

CHECK:CAMELCASE: Avoid CamelCase: <R5_Overlap>
#172: FILE: drivers/md/md_adma.c:97:
+					if (test_and_clear_bit(R5_Overlap, &sh->dev[i].flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantwrite>
#180: FILE: drivers/md/md_adma.c:105:
+					set_bit(R5_Wantwrite, &sh->dev[i].flags);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#182: FILE: drivers/md/md_adma.c:107:
+					if (!test_bit(R5_Insync, &sh->dev[i].flags)
+					    || (i==sh->pd_idx && failed == 0))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#182: FILE: drivers/md/md_adma.c:107:
+					    || (i==sh->pd_idx && failed == 0))
 					         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: drivers/md/md_adma.c:112:
+^I^I^Iif (test_and_clear_bit(STRIPE_PREREAD_ACTIVE, $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#200: FILE: drivers/md/md_adma.c:125:
+			BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#218: FILE: drivers/md/md_adma.c:143:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: drivers/md/md_adma.c:151:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/md/md_adma.c:153:
+ * $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/md/md_adma.c:157:
+int md_issue_copy_data(int frombio, struct bio *bio,
+		     struct page *page, sector_t sector,

ERROR:SPACING: space required before the open parenthesis '('
#243: FILE: drivers/md/md_adma.c:168:
+	if(!test_bit(ADMA_ENG_CAP_COPY, &eng->flags))

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#247: FILE: drivers/md/md_adma.c:172:
+		page_offset = (signed)(bio->bi_sector - sector) * 512;

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#249: FILE: drivers/md/md_adma.c:174:
+		page_offset = (signed)(sector - bio->bi_sector) * -512;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: drivers/md/md_adma.c:176:
+		int len = bio_iovec_idx(bio,i)->bv_len;
 		                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#263: FILE: drivers/md/md_adma.c:188:
+		else clen = len;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: drivers/md/md_adma.c:189:
+^I^I^I$

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#266: FILE: drivers/md/md_adma.c:191:
+			char *ba = __bio_kmap_atomic(bio, i, KM_USER0);
 			      ^^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#271: FILE: drivers/md/md_adma.c:196:
+				if (next_desc) adma_set_desc_flags(desc, ADMA_AUTO_REAP);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#275: FILE: drivers/md/md_adma.c:200:
+				buf[0] = pa+page_offset;
 				           ^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#276: FILE: drivers/md/md_adma.c:201:
+				buf[1] = ba+b_offset;
 				         ^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#276: FILE: drivers/md/md_adma.c:201:
+				buf[1] = ba+b_offset;
 				           ^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#278: FILE: drivers/md/md_adma.c:203:
+				buf[0] = ba+b_offset;
 				         ^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#278: FILE: drivers/md/md_adma.c:203:
+				buf[0] = ba+b_offset;
 				           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#279: FILE: drivers/md/md_adma.c:204:
+				buf[1] = pa+page_offset;
 				           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#282: FILE: drivers/md/md_adma.c:207:
+			if (pio) goto pio_memcpy;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: drivers/md/md_adma.c:210:
+^I^I^I * (pio_adma on highmem platforms or dma address restrictions) $

ERROR:SPACING: space required before the open parenthesis '('
#291: FILE: drivers/md/md_adma.c:216:
+			if(!test_bit(ADMA_ENG_CAP_HIGHMEM, &eng->flags))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#295: FILE: drivers/md/md_adma.c:220:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: drivers/md/md_adma.c:229:
+^I^I^I^I^I/* we run the thread directly since we are not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: drivers/md/md_adma.c:242:
+^I^I^I^I $

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#332: FILE: drivers/md/md_adma.c:257:
+			__bio_kunmap_atomic(ba, KM_USER0);
 			                    ^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#334: FILE: drivers/md/md_adma.c:259:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: drivers/md/md_adma.c:264:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#340: FILE: drivers/md/md_adma.c:265:
+	if (desc) { /* queue and run the final descriptor */
[...]
+	} else if (pio) 
[...]

ERROR:SPACING: space required before the open parenthesis '('
#344: FILE: drivers/md/md_adma.c:269:
+		if(!frombio) { /* we are reading so client expects data immediately */

CHECK:BRACES: braces {} should be used on all arms of this statement
#344: FILE: drivers/md/md_adma.c:269:
+		if(!frombio) { /* we are reading so client expects data immediately */
[...]
+		} else adma_wakeup_thread(eng->thread);
[...]

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#347: FILE: drivers/md/md_adma.c:272:
+		} else adma_wakeup_thread(eng->thread);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: drivers/md/md_adma.c:273:
+^I} else if (pio) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 9)
#355: FILE: drivers/md/md_adma.c:280:
+if (likely(desc))							    \
+	 max_sources = adma_get_source_count(eng);			    \

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 9)
#357: FILE: drivers/md/md_adma.c:282:
+else									    \
+	 max_sources = MAX_XOR_BLOCKS;					    \

CHECK:BRACES: braces {} should be used on all arms of this statement
#360: FILE: drivers/md/md_adma.c:285:
+	if (desc) {							    \
[...]
+	} else xor_block(count, STRIPE_SIZE, ptr);			    \
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: drivers/md/md_adma.c:300:
+      ^I^I}^I^I^I^I^I^I^I    \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#375: FILE: drivers/md/md_adma.c:300:
+      ^I^I}^I^I^I^I^I^I^I    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/md/md_adma.c:300:
+      ^I^I}^I^I^I^I^I^I^I    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/md/md_adma.c:301:
+      ^I^Idesc = last ? desc : next_desc;^I^I^I^I    \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#376: FILE: drivers/md/md_adma.c:301:
+      ^I^Idesc = last ? desc : next_desc;^I^I^I^I    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/md/md_adma.c:301:
+      ^I^Idesc = last ? desc : next_desc;^I^I^I^I    \$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#377: FILE: drivers/md/md_adma.c:302:
+	} else xor_block(count, STRIPE_SIZE, ptr);			    \

ERROR:SPACING: space required before the open parenthesis '('
#380: FILE: drivers/md/md_adma.c:305:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#393: FILE: drivers/md/md_adma.c:318:
+	if(!test_bit(ADMA_ENG_CAP_XOR, &eng->flags))

ERROR:SPACING: space required before the open parenthesis '('
#394: FILE: drivers/md/md_adma.c:319:
+		if(desc) adma_put_desc(desc);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#394: FILE: drivers/md/md_adma.c:319:
+		if(desc) adma_put_desc(desc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: drivers/md/md_adma.c:322:
+	PRINTK("compute_parity, stripe %llu, method %d\n",
+		(unsigned long long)sh->sector, method);

ERROR:SPACING: space required before the open parenthesis '('
#404: FILE: drivers/md/md_adma.c:329:
+	switch(method) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#407: FILE: drivers/md/md_adma.c:332:
+			BUG();

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#408: FILE: drivers/md/md_adma.c:333:
+		for (i=disks ; i-- ;) {
 		      ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#409: FILE: drivers/md/md_adma.c:334:
+			if (i==pd_idx)
 			     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#416: FILE: drivers/md/md_adma.c:341:
+				if (sh->dev[i].written || sh->dev[i].inwrite) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#416: FILE: drivers/md/md_adma.c:341:
+				if (sh->dev[i].written || sh->dev[i].inwrite) BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 41)
#419: FILE: drivers/md/md_adma.c:344:
+				if (likely(desc))
+					 max_sources = adma_get_source_count(eng);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 41)
#421: FILE: drivers/md/md_adma.c:346:
+				else
+					 max_sources = MAX_XOR_BLOCKS;

CHECK:BRACES: braces {} should be used on all arms of this statement
#424: FILE: drivers/md/md_adma.c:349:
+					if (desc) {
[...]
+					} else xor_block(count, STRIPE_SIZE, ptr);
[...]

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#425: FILE: drivers/md/md_adma.c:350:
+						eng->build_desc(desc, ADMA_XOR, ptr, count, STRIPE_SIZE, 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#426: FILE: drivers/md/md_adma.c:351:
+						if (last) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#427: FILE: drivers/md/md_adma.c:352:
+							adma_set_callback(desc, raid5_adma_xor_callback, sh, method);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#429: FILE: drivers/md/md_adma.c:354:
+						} else {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#431: FILE: drivers/md/md_adma.c:356:
+							if (likely(next_desc))

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#432: FILE: drivers/md/md_adma.c:357:
+								adma_set_desc_flags(desc, ADMA_AUTO_REAP);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#435: FILE: drivers/md/md_adma.c:360:
+						if (likely(!last) && unlikely(!next_desc)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: drivers/md/md_adma.c:364:
+^I^I^I^I      ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#439: FILE: drivers/md/md_adma.c:364:
+^I^I^I^I      ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: drivers/md/md_adma.c:365:
+^I^I^I^I      ^I^Idesc = last ? desc : next_desc;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#440: FILE: drivers/md/md_adma.c:365:
+^I^I^I^I      ^I^Idesc = last ? desc : next_desc;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#441: FILE: drivers/md/md_adma.c:366:
+					} else xor_block(count, STRIPE_SIZE, ptr);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#450: FILE: drivers/md/md_adma.c:375:
+		for (i= disks; i-- ;)
 		      ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#451: FILE: drivers/md/md_adma.c:376:
+			if (i!=pd_idx && sh->dev[i].towrite) {
 			     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#455: FILE: drivers/md/md_adma.c:380:
+				if (sh->dev[i].written || sh->dev[i].inwrite) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#455: FILE: drivers/md/md_adma.c:380:
+				if (sh->dev[i].written || sh->dev[i].inwrite) BUG();

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#462: FILE: drivers/md/md_adma.c:387:
+	if (count>1) {
 	         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#465: FILE: drivers/md/md_adma.c:390:
+		if (likely(desc))
+			 max_sources = adma_get_source_count(eng);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#467: FILE: drivers/md/md_adma.c:392:
+		else
+			 max_sources = MAX_XOR_BLOCKS;

CHECK:BRACES: braces {} should be used on all arms of this statement
#470: FILE: drivers/md/md_adma.c:395:
+			if (desc) {
[...]
+			} else xor_block(count, STRIPE_SIZE, ptr);
[...]

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#473: FILE: drivers/md/md_adma.c:398:
+					adma_set_callback(desc, raid5_adma_xor_callback, sh, method);

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: drivers/md/md_adma.c:410:
+^I^I      ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#485: FILE: drivers/md/md_adma.c:410:
+^I^I      ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: drivers/md/md_adma.c:411:
+^I^I      ^I^Idesc = last ? desc : next_desc;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#486: FILE: drivers/md/md_adma.c:411:
+^I^I      ^I^Idesc = last ? desc : next_desc;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#487: FILE: drivers/md/md_adma.c:412:
+			} else xor_block(count, STRIPE_SIZE, ptr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/md/md_adma.c:418:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#498: FILE: drivers/md/md_adma.c:423:
+			struct bio *wbi = sh->dev[i].inwrite;
+			while (wbi && wbi->bi_sector < sector + STRIPE_SECTORS) {

ERROR:SPACING: space required before the open parenthesis '('
#507: FILE: drivers/md/md_adma.c:432:
+	switch(method) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 41)
#516: FILE: drivers/md/md_adma.c:441:
+				if (likely(desc))
+					 max_sources = adma_get_source_count(eng);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 41)
#518: FILE: drivers/md/md_adma.c:443:
+				else
+					 max_sources = MAX_XOR_BLOCKS;

CHECK:BRACES: braces {} should be used on all arms of this statement
#521: FILE: drivers/md/md_adma.c:446:
+					if (desc) {
[...]
+					} else xor_block(count, STRIPE_SIZE, ptr);
[...]

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#522: FILE: drivers/md/md_adma.c:447:
+						eng->build_desc(desc, ADMA_XOR, ptr, count, STRIPE_SIZE, 0);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#523: FILE: drivers/md/md_adma.c:448:
+						if (last) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#524: FILE: drivers/md/md_adma.c:449:
+							adma_set_callback(desc, raid5_adma_xor_callback, sh, method);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#526: FILE: drivers/md/md_adma.c:451:
+						} else {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#528: FILE: drivers/md/md_adma.c:453:
+							if (likely(next_desc))

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#529: FILE: drivers/md/md_adma.c:454:
+								adma_set_desc_flags(desc, ADMA_AUTO_REAP);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#532: FILE: drivers/md/md_adma.c:457:
+						if (likely(!last) && unlikely(!next_desc)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: drivers/md/md_adma.c:461:
+^I^I^I^I      ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#536: FILE: drivers/md/md_adma.c:461:
+^I^I^I^I      ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: drivers/md/md_adma.c:462:
+^I^I^I^I      ^I^Idesc = last ? desc : next_desc;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: drivers/md/md_adma.c:462:
+^I^I^I^I      ^I^Idesc = last ? desc : next_desc;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#538: FILE: drivers/md/md_adma.c:463:
+					} else xor_block(count, STRIPE_SIZE, ptr);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 41)
#551: FILE: drivers/md/md_adma.c:476:
+				if (likely(desc))
+					 max_sources = adma_get_source_count(eng);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 41)
#553: FILE: drivers/md/md_adma.c:478:
+				else
+					 max_sources = MAX_XOR_BLOCKS;

CHECK:BRACES: braces {} should be used on all arms of this statement
#556: FILE: drivers/md/md_adma.c:481:
+					if (desc) {
[...]
+					} else xor_block(count, STRIPE_SIZE, ptr);
[...]

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#557: FILE: drivers/md/md_adma.c:482:
+						eng->build_desc(desc, ADMA_XOR, ptr, count, STRIPE_SIZE, 0);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#558: FILE: drivers/md/md_adma.c:483:
+						if (last) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#559: FILE: drivers/md/md_adma.c:484:
+							adma_set_callback(desc, raid5_adma_xor_callback, sh, method);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#561: FILE: drivers/md/md_adma.c:486:
+						} else {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#563: FILE: drivers/md/md_adma.c:488:
+							if (likely(next_desc))

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#564: FILE: drivers/md/md_adma.c:489:
+								adma_set_desc_flags(desc, ADMA_AUTO_REAP);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#567: FILE: drivers/md/md_adma.c:492:
+						if (likely(!last) && unlikely(!next_desc)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: drivers/md/md_adma.c:496:
+^I^I^I^I      ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#571: FILE: drivers/md/md_adma.c:496:
+^I^I^I^I      ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: drivers/md/md_adma.c:497:
+^I^I^I^I      ^I^Idesc = last ? desc : next_desc;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#572: FILE: drivers/md/md_adma.c:497:
+^I^I^I^I      ^I^Idesc = last ? desc : next_desc;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#573: FILE: drivers/md/md_adma.c:498:
+					} else xor_block(count, STRIPE_SIZE, ptr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#580: FILE: drivers/md/md_adma.c:505:
+		if (last) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#580: FILE: drivers/md/md_adma.c:505:
+		if (last) BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#583: FILE: drivers/md/md_adma.c:508:
+		if (likely(desc))
+			 max_sources = adma_get_source_count(eng);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#585: FILE: drivers/md/md_adma.c:510:
+		else
+			 max_sources = MAX_XOR_BLOCKS;

CHECK:BRACES: braces {} should be used on all arms of this statement
#588: FILE: drivers/md/md_adma.c:513:
+			if (desc) {
[...]
+			} else xor_block(count, STRIPE_SIZE, ptr);
[...]

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#591: FILE: drivers/md/md_adma.c:516:
+					adma_set_callback(desc, raid5_adma_xor_callback, sh, method);

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: drivers/md/md_adma.c:528:
+^I^I      ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#603: FILE: drivers/md/md_adma.c:528:
+^I^I      ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: drivers/md/md_adma.c:529:
+^I^I      ^I^Idesc = last ? desc : next_desc;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#604: FILE: drivers/md/md_adma.c:529:
+^I^I      ^I^Idesc = last ? desc : next_desc;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#605: FILE: drivers/md/md_adma.c:530:
+			} else xor_block(count, STRIPE_SIZE, ptr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: drivers/md/md_adma.c:539:
+^I/* if we did not xor asynchronously then we need $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108604.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 67 warnings, 27 checks, 568 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108604.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
