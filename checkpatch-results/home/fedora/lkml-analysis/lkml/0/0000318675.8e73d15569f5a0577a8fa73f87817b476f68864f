WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#67: 
 * command line argument "pci=exp" to force PCI Express, similar to "conf1" and "conf2"

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#120: FILE: arch/i386/kernel/pci-pc.c:440:
+static u32 rrbar_phys=0xe0000000UL;
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#124: FILE: arch/i386/kernel/pci-pc.c:444:
+static u32 rrbar_size=0x10000000UL;
                      ^

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#128: FILE: arch/i386/kernel/pci-pc.c:448:
+static void* rrbar_virt=NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#128: FILE: arch/i386/kernel/pci-pc.c:448:
+static void* rrbar_virt=NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#128: FILE: arch/i386/kernel/pci-pc.c:448:
+static void* rrbar_virt=NULL;
                        ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#132: FILE: arch/i386/kernel/pci-pc.c:452:
+extern int PCI_CFG_SPACE_SIZE;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: arch/i386/kernel/pci-pc.c:456:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'presense' may be misspelled - perhaps 'presence'?
#139: FILE: arch/i386/kernel/pci-pc.c:459:
+ * deassert PCI-E presense. If PCI-E not present,
                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: arch/i386/kernel/pci-pc.c:462:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: arch/i386/kernel/pci-pc.c:464:
+ * $

WARNING:TYPO_SPELLING: 'presense' may be misspelled - perhaps 'presence'?
#149: FILE: arch/i386/kernel/pci-pc.c:469:
+  /* TODO: check PCI-Ex presense */
                         ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/i386/kernel/pci-pc.c:470:
+  rrbar_virt=ioremap(rrbar_phys,rrbar_size);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#150: FILE: arch/i386/kernel/pci-pc.c:470:
+  rrbar_virt=ioremap(rrbar_phys,rrbar_size);
             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: arch/i386/kernel/pci-pc.c:470:
+  rrbar_virt=ioremap(rrbar_phys,rrbar_size);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/kernel/pci-pc.c:471:
+  if (!rrbar_virt) return 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#151: FILE: arch/i386/kernel/pci-pc.c:471:
+  if (!rrbar_virt) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/i386/kernel/pci-pc.c:472:
+  return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/i386/kernel/pci-pc.c:480:
+  if (rrbar_virt) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#160: FILE: arch/i386/kernel/pci-pc.c:480:
+  if (rrbar_virt) {
+    iounmap(rrbar_virt);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#160: FILE: arch/i386/kernel/pci-pc.c:480:
+  if (rrbar_virt) {
+    iounmap(rrbar_virt);
+  }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/i386/kernel/pci-pc.c:481:
+    iounmap(rrbar_virt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/i386/kernel/pci-pc.c:482:
+  }$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: arch/i386/kernel/pci-pc.c:485:
+static int pci_exp_read (int seg, int bus, int dev, int fn, int reg, int len, u32 *value)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/i386/kernel/pci-pc.c:487:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#167: FILE: arch/i386/kernel/pci-pc.c:487:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#167: FILE: arch/i386/kernel/pci-pc.c:487:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#167: FILE: arch/i386/kernel/pci-pc.c:487:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#167: FILE: arch/i386/kernel/pci-pc.c:487:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#167: FILE: arch/i386/kernel/pci-pc.c:487:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#167: FILE: arch/i386/kernel/pci-pc.c:487:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
                                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: arch/i386/kernel/pci-pc.c:488:
+  if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: arch/i386/kernel/pci-pc.c:488:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
+  if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/i386/kernel/pci-pc.c:488:
+  if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#168: FILE: arch/i386/kernel/pci-pc.c:488:
+  if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) 
+    return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/i386/kernel/pci-pc.c:489:
+    return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/i386/kernel/pci-pc.c:490:
+  switch (len) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/i386/kernel/pci-pc.c:491:
+  case 1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/i386/kernel/pci-pc.c:492:
+    *value=readb(addr);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#172: FILE: arch/i386/kernel/pci-pc.c:492:
+    *value=readb(addr);
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/i386/kernel/pci-pc.c:493:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/i386/kernel/pci-pc.c:494:
+  case 2:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/i386/kernel/pci-pc.c:495:
+    if (reg&1) return -EINVAL;$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#175: FILE: arch/i386/kernel/pci-pc.c:495:
+    if (reg&1) return -EINVAL;
            ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#175: FILE: arch/i386/kernel/pci-pc.c:495:
+    if (reg&1) return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/i386/kernel/pci-pc.c:496:
+    *value=readw(addr);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#176: FILE: arch/i386/kernel/pci-pc.c:496:
+    *value=readw(addr);
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: arch/i386/kernel/pci-pc.c:497:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/i386/kernel/pci-pc.c:498:
+  case 4:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/i386/kernel/pci-pc.c:499:
+    if (reg&3) return -EINVAL;$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#179: FILE: arch/i386/kernel/pci-pc.c:499:
+    if (reg&3) return -EINVAL;
            ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#179: FILE: arch/i386/kernel/pci-pc.c:499:
+    if (reg&3) return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/i386/kernel/pci-pc.c:500:
+    *value=readl(addr);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#180: FILE: arch/i386/kernel/pci-pc.c:500:
+    *value=readl(addr);
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/i386/kernel/pci-pc.c:501:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/i386/kernel/pci-pc.c:502:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/i386/kernel/pci-pc.c:503:
+  return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: arch/i386/kernel/pci-pc.c:506:
+static int pci_exp_write (int seg, int bus, int dev, int fn, int reg, int len, u32 value)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/i386/kernel/pci-pc.c:508:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#188: FILE: arch/i386/kernel/pci-pc.c:508:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#188: FILE: arch/i386/kernel/pci-pc.c:508:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: arch/i386/kernel/pci-pc.c:508:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: arch/i386/kernel/pci-pc.c:508:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: arch/i386/kernel/pci-pc.c:508:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: arch/i386/kernel/pci-pc.c:508:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
                                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: arch/i386/kernel/pci-pc.c:509:
+  if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: arch/i386/kernel/pci-pc.c:509:
+  void* addr=rrbar_virt+(bus << 20)+(dev << 15)+(fn << 12)+reg;
+  if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: arch/i386/kernel/pci-pc.c:509:
+  if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#189: FILE: arch/i386/kernel/pci-pc.c:509:
+  if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) 
+    return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/i386/kernel/pci-pc.c:510:
+    return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/i386/kernel/pci-pc.c:511:
+  switch (len) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/i386/kernel/pci-pc.c:512:
+  case 1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/i386/kernel/pci-pc.c:513:
+    writeb(value,addr);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: arch/i386/kernel/pci-pc.c:513:
+    writeb(value,addr);
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/i386/kernel/pci-pc.c:514:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: arch/i386/kernel/pci-pc.c:515:
+  case 2:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/i386/kernel/pci-pc.c:516:
+    if (reg&1) return -EINVAL;$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#196: FILE: arch/i386/kernel/pci-pc.c:516:
+    if (reg&1) return -EINVAL;
            ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: arch/i386/kernel/pci-pc.c:516:
+    if (reg&1) return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/i386/kernel/pci-pc.c:517:
+    writew(value,addr);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: arch/i386/kernel/pci-pc.c:517:
+    writew(value,addr);
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/i386/kernel/pci-pc.c:518:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/i386/kernel/pci-pc.c:519:
+  case 4:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/i386/kernel/pci-pc.c:520:
+    if (reg&3) return -EINVAL;$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#200: FILE: arch/i386/kernel/pci-pc.c:520:
+    if (reg&3) return -EINVAL;
            ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: arch/i386/kernel/pci-pc.c:520:
+    if (reg&3) return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/i386/kernel/pci-pc.c:521:
+    writel(value,addr);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: arch/i386/kernel/pci-pc.c:521:
+    writel(value,addr);
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/i386/kernel/pci-pc.c:522:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/i386/kernel/pci-pc.c:523:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/i386/kernel/pci-pc.c:524:
+  return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: arch/i386/kernel/pci-pc.c:529:
+  int result; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/i386/kernel/pci-pc.c:529:
+  int result; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/i386/kernel/pci-pc.c:530:
+  u32 data;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: arch/i386/kernel/pci-pc.c:531:
+  result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: arch/i386/kernel/pci-pc.c:531:
+  u32 data;
+  result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/i386/kernel/pci-pc.c:531:
+  result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/i386/kernel/pci-pc.c:533:
+  *value = (u8)data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/i386/kernel/pci-pc.c:534:
+  return result;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: arch/i386/kernel/pci-pc.c:539:
+  int result; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/i386/kernel/pci-pc.c:539:
+  int result; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/i386/kernel/pci-pc.c:540:
+  u32 data;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: arch/i386/kernel/pci-pc.c:541:
+  result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: arch/i386/kernel/pci-pc.c:541:
+  u32 data;
+  result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/i386/kernel/pci-pc.c:541:
+  result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/i386/kernel/pci-pc.c:543:
+  *value = (u16)data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/i386/kernel/pci-pc.c:544:
+  return result;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: arch/i386/kernel/pci-pc.c:549:
+  return pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/i386/kernel/pci-pc.c:549:
+  return pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: arch/i386/kernel/pci-pc.c:555:
+  return pci_exp_write(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/i386/kernel/pci-pc.c:555:
+  return pci_exp_write(0, dev->bus->number, PCI_SLOT(dev->devfn), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: arch/i386/kernel/pci-pc.c:561:
+  return pci_exp_write(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: arch/i386/kernel/pci-pc.c:561:
+  return pci_exp_write(0, dev->bus->number, PCI_SLOT(dev->devfn), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: arch/i386/kernel/pci-pc.c:567:
+  return pci_exp_write(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/i386/kernel/pci-pc.c:567:
+  return pci_exp_write(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: arch/i386/kernel/pci-pc.c:572:
+  pci_exp_read_config_byte,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: arch/i386/kernel/pci-pc.c:573:
+  pci_exp_read_config_word,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/i386/kernel/pci-pc.c:574:
+  pci_exp_read_config_dword,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: arch/i386/kernel/pci-pc.c:575:
+  pci_exp_write_config_byte,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/i386/kernel/pci-pc.c:576:
+  pci_exp_write_config_word,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/i386/kernel/pci-pc.c:577:
+  pci_exp_write_config_dword$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: arch/i386/kernel/pci-pc.c:620:
+    if (pci_express_init()) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/i386/kernel/pci-pc.c:621:
+        if (pci_sanity_check(&pci_express_conf)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/i386/kernel/pci-pc.c:621:
+        if (pci_sanity_check(&pci_express_conf)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#270: FILE: arch/i386/kernel/pci-pc.c:621:
+        if (pci_sanity_check(&pci_express_conf)) {
+            PCI_CFG_SPACE_SIZE=4096;

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: arch/i386/kernel/pci-pc.c:622:
+            PCI_CFG_SPACE_SIZE=4096;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/i386/kernel/pci-pc.c:622:
+            PCI_CFG_SPACE_SIZE=4096;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#271: FILE: arch/i386/kernel/pci-pc.c:622:
+            PCI_CFG_SPACE_SIZE=4096;
                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#273: FILE: arch/i386/kernel/pci-pc.c:624:
+			printk(KERN_INFO "PCI: Using configuration type PCI Express\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: arch/i386/kernel/pci-pc.c:627:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/i386/kernel/pci-pc.c:627:
+        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#276: FILE: arch/i386/kernel/pci-pc.c:627:
+        } else {
+            pci_express_fini();

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: arch/i386/kernel/pci-pc.c:628:
+            pci_express_fini();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/i386/kernel/pci-pc.c:628:
+            pci_express_fini();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: arch/i386/kernel/pci-pc.c:629:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/i386/kernel/pci-pc.c:629:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/i386/kernel/pci-pc.c:630:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: arch/i386/kernel/pci-pc.c:1565:
+^Iif ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2 | PCI_PROBE_EXP)) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#289: FILE: arch/i386/kernel/pci-pc.c:1565:
+	if ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2 | PCI_PROBE_EXP)) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#310: FILE: arch/i386/kernel/pci-pc.c:1658:
 	}
+	else if (!strcmp(str, "exp")) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#325: FILE: drivers/pci/proc.c:19:
+int PCI_CFG_SPACE_SIZE=256;
                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318675.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 84 warnings, 12 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318675.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
