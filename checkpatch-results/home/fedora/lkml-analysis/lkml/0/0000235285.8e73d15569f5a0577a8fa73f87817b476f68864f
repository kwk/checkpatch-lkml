WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#55: FILE: drivers/video/hpfb.c:22:
+#include <asm/uaccess.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#138: FILE: drivers/video/hpfb.c:79:
+			  unsigned blue, unsigned transp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#138: FILE: drivers/video/hpfb.c:79:
+			  unsigned blue, unsigned transp,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#142: FILE: drivers/video/hpfb.c:83:
+	unsigned char _red  =red>>8;
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#142: FILE: drivers/video/hpfb.c:83:
+	unsigned char _red  =red>>8;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#143: FILE: drivers/video/hpfb.c:84:
+	unsigned char _green=green>>8;
 	                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#143: FILE: drivers/video/hpfb.c:84:
+	unsigned char _green=green>>8;
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#144: FILE: drivers/video/hpfb.c:85:
+	unsigned char _blue =blue>>8;
 	                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#144: FILE: drivers/video/hpfb.c:85:
+	unsigned char _blue =blue>>8;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#145: FILE: drivers/video/hpfb.c:86:
+	unsigned char _regno=regno;
 	                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: drivers/video/hpfb.c:97:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#175: FILE: drivers/video/hpfb.c:110:
+	while (in_be16(fb_regs + 0x6002) & 0x4) udelay(1);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#204: FILE: drivers/video/hpfb.c:130:
+	if (rr >= 0)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#210: FILE: drivers/video/hpfb.c:136:
+	if (rr >= 0)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/video/hpfb.c:150:
+static void hpfb_copyarea(struct fb_info *info, const struct fb_copyarea *area) $

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#246: FILE: drivers/video/hpfb.c:172:
+	topcat_blit(region->dx, region->dy, region->dx, region->dy, region->width, region->height, -1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: drivers/video/hpfb.c:203:
+#define HPFB_FBWMSB^I0x05^I/* Frame buffer width ^I^I*/$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#303: FILE: drivers/video/hpfb.c:224:
+	if (phys_base >= DIOII_BASE)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#312: FILE: drivers/video/hpfb.c:229:
+	if (DIO_SECID(fb_regs) != DIO_ID2_TOPCAT)
+	{

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#314: FILE: drivers/video/hpfb.c:231:
+		/* This is the magic incantation the HP X server uses to make Catseye boards work. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#315: FILE: drivers/video/hpfb.c:232:
+		while (in_be16(fb_regs+0x4800) & 1)
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#317: FILE: drivers/video/hpfb.c:234:
+		out_be16(fb_regs+0x4800, 0);	/* Catseye status */
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#318: FILE: drivers/video/hpfb.c:235:
+		out_be16(fb_regs+0x4510, 0);	/* VB */
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#319: FILE: drivers/video/hpfb.c:236:
+		out_be16(fb_regs+0x4512, 0);	/* TCNTRL */
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#320: FILE: drivers/video/hpfb.c:237:
+		out_be16(fb_regs+0x4514, 0);	/* ACNTRL */
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#321: FILE: drivers/video/hpfb.c:238:
+		out_be16(fb_regs+0x4516, 0);	/* PNCNTRL */
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#322: FILE: drivers/video/hpfb.c:239:
+		out_be16(fb_regs+0x4206, 0x90);	/* RUG Command/Status */
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#323: FILE: drivers/video/hpfb.c:240:
+		out_be16(fb_regs+0x60a2, 0);	/* Overlay Mask */
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#324: FILE: drivers/video/hpfb.c:241:
+		out_be16(fb_regs+0x60bc, 0);	/* Ram Select */
 		                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#342: FILE: drivers/video/hpfb.c:259:
+	printk(KERN_INFO "hpfb: framebuffer at 0x%lx, mapped to 0x%lx, size %dk\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#343: FILE: drivers/video/hpfb.c:260:
+	       fb_info.fix.smem_start, fb_start, fb_info.fix.smem_len/1024);
 	                                                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#344: FILE: drivers/video/hpfb.c:261:
+	printk(KERN_INFO "hpfb: mode is %dx%dx%d, linelength=%d\n",

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#345: FILE: drivers/video/hpfb.c:262:
+	       hpfb_defined.xres, hpfb_defined.yres, hpfb_defined.bits_per_pixel, fb_info.fix.line_length);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#410: FILE: drivers/video/hpfb.c:302:
 	if (register_framebuffer(&fb_info) < 0)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#416: FILE: drivers/video/hpfb.c:308:
+	printk(KERN_INFO "fb%d: %s frame buffer device\n",

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#471: FILE: drivers/video/hpfb.c:355:
+	if (!err && (i == DIO_ID_FBUFFER) && topcat_sid_ok(sid = DIO_SECID(INTFBVADDR)))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == DIO_ID_FBUFFER'
#471: FILE: drivers/video/hpfb.c:355:
+	if (!err && (i == DIO_ID_FBUFFER) && topcat_sid_ok(sid = DIO_SECID(INTFBVADDR)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#471: FILE: drivers/video/hpfb.c:355:
+	if (!err && (i == DIO_ID_FBUFFER) && topcat_sid_ok(sid = DIO_SECID(INTFBVADDR)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#473: FILE: drivers/video/hpfb.c:357:
+		printk(KERN_INFO "Internal Topcat found (secondary id %02x)\n", sid);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#474: FILE: drivers/video/hpfb.c:358:
+		if (hpfb_init_one(INTFBPADDR, INTFBVADDR))
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#479: FILE: drivers/video/hpfb.c:363:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#479: FILE: drivers/video/hpfb.c:363:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#484: FILE: drivers/video/hpfb.c:368:
+		if ((sc = dio_find(DIO_ENCODE_ID(DIO_ID_FBUFFER, DIO_ID2_LRCATSEYE))) < 0 &&
+		    (sc = dio_find(DIO_ENCODE_ID(DIO_ID_FBUFFER, DIO_ID2_HRCCATSEYE))) < 0 &&
+		    (sc = dio_find(DIO_ENCODE_ID(DIO_ID_FBUFFER, DIO_ID2_HRMCATSEYE))) < 0 &&
+		    (sc = dio_find(DIO_ENCODE_ID(DIO_ID_FBUFFER, DIO_ID2_TOPCAT))) < 0)
+		{

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#484: FILE: drivers/video/hpfb.c:368:
+		if ((sc = dio_find(DIO_ENCODE_ID(DIO_ID_FBUFFER, DIO_ID2_LRCATSEYE))) < 0 &&

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#495: FILE: drivers/video/hpfb.c:379:
+		if (sc >= DIOII_SCBASE)
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#503: FILE: drivers/video/hpfb.c:387:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#503: FILE: drivers/video/hpfb.c:387:
+		}
+		else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#510: FILE: drivers/video/hpfb.c:394:
+		printk(KERN_INFO "Topcat found at DIO select code %d "

WARNING:SPLIT_STRING: quoted string split across lines
#511: FILE: drivers/video/hpfb.c:395:
+		printk(KERN_INFO "Topcat found at DIO select code %d "
+		       "(secondary id %02x)\n", sc, sid);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#512: FILE: drivers/video/hpfb.c:396:
+		if (hpfb_init_one(paddr, vaddr))
+		{

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 13 warnings, 14 checks, 482 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
