WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#37: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONST_STRUCT: struct file_operations should normally be const
#84: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:48:
+			 int mode, struct file_operations *fop,

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#100: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:64:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#119: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:83:
+		       struct file_operations *fop, void *data)

WARNING:SIZEOF_PARENTHESIS: sizeof ipath_stats should be sizeof(ipath_stats)
#140: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:104:
+				       sizeof ipath_stats);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#143: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:107:
+static struct file_operations atomic_stats_ops = {

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#147: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:111:
+#define NUM_COUNTERS sizeof(struct infinipath_counters) / sizeof(u64)

WARNING:SIZEOF_PARENTHESIS: sizeof counters should be sizeof(counters)
#162: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:126:
+				       sizeof counters);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#165: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:129:
+static struct file_operations atomic_counters_ops = {

CHECK:SPACING: No space is necessary after a cast
#181: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:145:
+	nodeinfo[1] = (u32) (dd->ipath_guid >> 32);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#182: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:146:
+	nodeinfo[2] = (u32) (dd->ipath_guid & 0xffffffff);

WARNING:SIZEOF_PARENTHESIS: sizeof nodeinfo should be sizeof(nodeinfo)
#198: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:162:
+				       sizeof nodeinfo);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#201: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:165:
+static struct file_operations atomic_node_info_ops = {

WARNING:SIZEOF_PARENTHESIS: sizeof portinfo should be sizeof(portinfo)
#215: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:179:
+	memset(portinfo, 0, sizeof portinfo);

CHECK:BRACES: braces {} should be used on all arms of this statement
#241: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:205:
+	if (tmp == IPATH_IBSTATE_INIT)
[...]
+	else if (tmp == IPATH_IBSTATE_ARM)
[...]
+	else if (tmp == IPATH_IBSTATE_ACTIVE)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#247: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:211:
+	else {

WARNING:SPLIT_STRING: quoted string split across lines
#280: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:244:
+		ipath_dbg("Problem, ipath_ibmtu 0x%x not a valid IB MTU, "
+			  "treat as 2048\n", dd->ipath_ibmtu);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:257:
+^Iportinfo[10] = ^I/* VLArbitrationLowCap is 0 (only one VL) */$

WARNING:SIZEOF_PARENTHESIS: sizeof portinfo should be sizeof(portinfo)
#323: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:287:
+				       sizeof portinfo);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#326: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:290:
+static struct file_operations atomic_port_info_ops = {

ERROR:SPACING: space prohibited after that open parenthesis '('
#340: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:304:
+	if ( pos < 0) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#391: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:355:
+	if ( pos < 0) {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#432: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:396:
+static struct file_operations flash_ops = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#446: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:410:
+		[1] = {"atomic_stats", &atomic_stats_ops, S_IRUGO},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#452: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:416:
+		printk(KERN_ERR "simple_fill_super failed: %d\n", ret);

WARNING:SIZEOF_PARENTHESIS: sizeof unit should be sizeof(unit)
#463: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:427:
+		snprintf(unit, sizeof unit, "%02d", dd->ipath_unit);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#464: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:428:
+		ret = create_file(unit, S_IFDIR|S_IRUGO|S_IXUGO, sb->s_root,
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#464: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:428:
+		ret = create_file(unit, S_IFDIR|S_IRUGO|S_IXUGO, sb->s_root,
 		                                       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#464: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:428:
+		ret = create_file(unit, S_IFDIR|S_IRUGO|S_IXUGO, sb->s_root,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#467: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:431:
+			printk(KERN_ERR "create_file(%s) failed: %d\n",

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#472: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:436:
+		ret = create_file("atomic_counters", S_IRUGO, dir, &tmp,

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:437:
+^I^I^I          &atomic_counters_ops, dd);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:437:
+		ret = create_file("atomic_counters", S_IRUGO, dir, &tmp,
+			          &atomic_counters_ops, dd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#475: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:439:
+			printk(KERN_ERR "create_file(%s/atomic_counters) "

WARNING:SPLIT_STRING: quoted string split across lines
#476: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:440:
+			printk(KERN_ERR "create_file(%s/atomic_counters) "
+			       "failed: %d\n", unit, ret);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#480: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:444:
+		ret = create_file("node_info", S_IRUGO, dir, &tmp,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#483: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:447:
+			printk(KERN_ERR "create_file(%s/node_info) "

WARNING:SPLIT_STRING: quoted string split across lines
#484: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:448:
+			printk(KERN_ERR "create_file(%s/node_info) "
+			       "failed: %d\n", unit, ret);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#488: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:452:
+		ret = create_file("port_info", S_IRUGO, dir, &tmp,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#491: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:455:
+			printk(KERN_ERR "create_file(%s/port_info) "

WARNING:SPLIT_STRING: quoted string split across lines
#492: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:456:
+			printk(KERN_ERR "create_file(%s/port_info) "
+			       "failed: %d\n", unit, ret);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#496: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:460:
+		ret = create_file("flash", S_IRUGO, dir, &tmp,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#499: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:463:
+			printk(KERN_ERR "create_file(%s/flash) "

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:464:
+			printk(KERN_ERR "create_file(%s/flash) "
+			       "failed: %d\n", unit, ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:483:
+^I^I^I^I        int flags, const char *dev_name,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: drivers/infiniband/hw/ipath/ipath_fs.c:483:
+static struct super_block *ipathfs_get_sb(struct file_system_type *fs_type,
+				        int flags, const char *dev_name,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#545: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:1:
+/*

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#600: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:56:
+	val = simple_strtoul(str, &end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: No space is necessary after a cast
#632: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:88:
+			(unsigned long long) ipath_stats.sps_ ##attr); \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#634: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:90:
+	static DRIVER_ATTR(name, S_IRUGO, show_stat_##name, NULL)

CHECK:SPACING: No space is necessary after a cast
#729: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:185:
+			 (unsigned long long) *(dd->ipath_statusp));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dd->ipath_statusp
#729: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:185:
+			 (unsigned long long) *(dd->ipath_statusp));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#732: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:188:
+static const char *ipath_status_str[] = {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dd->ipath_statusp
#757: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:213:
+	s = *(dd->ipath_statusp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#779: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:235:
+static ssize_t show_boardversion(struct device *dev,
+			       struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:289:
+static ssize_t store_mlid(struct device *dev,
+			 struct device_attribute *attr,

CHECK:SPACING: No space is necessary after a cast
#866: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:322:
+	guid = (u8 *) & (dd->ipath_guid);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#866: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:322:
+	guid = (u8 *) & (dd->ipath_guid);
 	              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dd->ipath_guid
#866: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:322:
+	guid = (u8 *) & (dd->ipath_guid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#875: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:331:
+static ssize_t store_guid(struct device *dev,
+			 struct device_attribute *attr,

CHECK:SPACING: No space is necessary after a cast
#891: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:347:
+	ng = (u8 *) &nguid;

WARNING:SIZEOF_PARENTHESIS: sizeof dd->ipath_serial should be sizeof(dd->ipath_serial)
#928: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:384:
+	buf[sizeof dd->ipath_serial] = '\0';

WARNING:SIZEOF_PARENTHESIS: sizeof dd->ipath_serial should be sizeof(dd->ipath_serial)
#929: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:385:
+	memcpy(buf, dd->ipath_serial, sizeof dd->ipath_serial);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'attr' - possible side-effects?
#943: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:399:
+#define DEVICE_COUNTER(name, attr) \
+	static ssize_t show_counter_##name(struct device *dev, \
+					   struct device_attribute *attr, \
+					   char *buf) \
+	{ \
+		struct ipath_devdata *dd = dev_get_drvdata(dev); \
+		return scnprintf(\
+			buf, PAGE_SIZE, "%llu\n", (unsigned long long) \
+			ipath_snap_cntr( \
+				dd, offsetof(struct infinipath_counters, \
+					     attr) / sizeof(u64)));	\
+	} \
+	static DEVICE_ATTR(name, S_IRUGO, show_counter_##name, NULL);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'attr' may be better as '(attr)' to avoid precedence issues
#943: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:399:
+#define DEVICE_COUNTER(name, attr) \
+	static ssize_t show_counter_##name(struct device *dev, \
+					   struct device_attribute *attr, \
+					   char *buf) \
+	{ \
+		struct ipath_devdata *dd = dev_get_drvdata(dev); \
+		return scnprintf(\
+			buf, PAGE_SIZE, "%llu\n", (unsigned long long) \
+			ipath_snap_cntr( \
+				dd, offsetof(struct infinipath_counters, \
+					     attr) / sizeof(u64)));	\
+	} \
+	static DEVICE_ATTR(name, S_IRUGO, show_counter_##name, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#943: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:399:
+#define DEVICE_COUNTER(name, attr) \
+	static ssize_t show_counter_##name(struct device *dev, \
+					   struct device_attribute *attr, \
+					   char *buf) \
+	{ \
+		struct ipath_devdata *dd = dev_get_drvdata(dev); \
+		return scnprintf(\
+			buf, PAGE_SIZE, "%llu\n", (unsigned long long) \
+			ipath_snap_cntr( \
+				dd, offsetof(struct infinipath_counters, \
+					     attr) / sizeof(u64)));	\
+	} \
+	static DEVICE_ATTR(name, S_IRUGO, show_counter_##name, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#955: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:411:
+	static DEVICE_ATTR(name, S_IRUGO, show_counter_##name, NULL);

CHECK:CAMELCASE: Avoid CamelCase: <IBLinkDownedCnt>
#957: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:413:
+DEVICE_COUNTER(ib_link_downeds, IBLinkDownedCnt);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <IBLinkErrRecoveryCnt>
#958: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:414:
+DEVICE_COUNTER(ib_link_err_recoveries, IBLinkErrRecoveryCnt);

CHECK:CAMELCASE: Avoid CamelCase: <IBStatusChangeCnt>
#959: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:415:
+DEVICE_COUNTER(ib_status_changes, IBStatusChangeCnt);

CHECK:CAMELCASE: Avoid CamelCase: <IBSymbolErrCnt>
#960: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:416:
+DEVICE_COUNTER(ib_symbol_errs, IBSymbolErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <LBFlowStallCnt>
#961: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:417:
+DEVICE_COUNTER(lb_flow_stalls, LBFlowStallCnt);

CHECK:CAMELCASE: Avoid CamelCase: <LBIntCnt>
#962: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:418:
+DEVICE_COUNTER(lb_ints, LBIntCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxBadFormatCnt>
#963: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:419:
+DEVICE_COUNTER(rx_bad_formats, RxBadFormatCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxBufOvflCnt>
#964: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:420:
+DEVICE_COUNTER(rx_buf_ovfls, RxBufOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxDataPktCnt>
#965: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:421:
+DEVICE_COUNTER(rx_data_pkts, RxDataPktCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxDroppedPktCnt>
#966: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:422:
+DEVICE_COUNTER(rx_dropped_pkts, RxDroppedPktCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxDwordCnt>
#967: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:423:
+DEVICE_COUNTER(rx_dwords, RxDwordCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxEBPCnt>
#968: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:424:
+DEVICE_COUNTER(rx_ebps, RxEBPCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxFlowCtrlErrCnt>
#969: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:425:
+DEVICE_COUNTER(rx_flow_ctrl_errs, RxFlowCtrlErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxFlowPktCnt>
#970: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:426:
+DEVICE_COUNTER(rx_flow_pkts, RxFlowPktCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxICRCErrCnt>
#971: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:427:
+DEVICE_COUNTER(rx_icrc_errs, RxICRCErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxLenErrCnt>
#972: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:428:
+DEVICE_COUNTER(rx_len_errs, RxLenErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxLinkProblemCnt>
#973: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:429:
+DEVICE_COUNTER(rx_link_problems, RxLinkProblemCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxLPCRCErrCnt>
#974: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:430:
+DEVICE_COUNTER(rx_lpcrc_errs, RxLPCRCErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxMaxMinLenErrCnt>
#975: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:431:
+DEVICE_COUNTER(rx_max_min_len_errs, RxMaxMinLenErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxP0HdrEgrOvflCnt>
#976: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:432:
+DEVICE_COUNTER(rx_p0_hdr_egr_ovfls, RxP0HdrEgrOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxP1HdrEgrOvflCnt>
#977: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:433:
+DEVICE_COUNTER(rx_p1_hdr_egr_ovfls, RxP1HdrEgrOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxP2HdrEgrOvflCnt>
#978: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:434:
+DEVICE_COUNTER(rx_p2_hdr_egr_ovfls, RxP2HdrEgrOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxP3HdrEgrOvflCnt>
#979: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:435:
+DEVICE_COUNTER(rx_p3_hdr_egr_ovfls, RxP3HdrEgrOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxP4HdrEgrOvflCnt>
#980: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:436:
+DEVICE_COUNTER(rx_p4_hdr_egr_ovfls, RxP4HdrEgrOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxP5HdrEgrOvflCnt>
#981: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:437:
+DEVICE_COUNTER(rx_p5_hdr_egr_ovfls, RxP5HdrEgrOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxP6HdrEgrOvflCnt>
#982: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:438:
+DEVICE_COUNTER(rx_p6_hdr_egr_ovfls, RxP6HdrEgrOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxP7HdrEgrOvflCnt>
#983: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:439:
+DEVICE_COUNTER(rx_p7_hdr_egr_ovfls, RxP7HdrEgrOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxP8HdrEgrOvflCnt>
#984: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:440:
+DEVICE_COUNTER(rx_p8_hdr_egr_ovfls, RxP8HdrEgrOvflCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxPKeyMismatchCnt>
#985: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:441:
+DEVICE_COUNTER(rx_pkey_mismatches, RxPKeyMismatchCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxTIDFullErrCnt>
#986: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:442:
+DEVICE_COUNTER(rx_tid_full_errs, RxTIDFullErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxTIDValidErrCnt>
#987: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:443:
+DEVICE_COUNTER(rx_tid_valid_errs, RxTIDValidErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <RxVCRCErrCnt>
#988: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:444:
+DEVICE_COUNTER(rx_vcrc_errs, RxVCRCErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <TxDataPktCnt>
#989: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:445:
+DEVICE_COUNTER(tx_data_pkts, TxDataPktCnt);

CHECK:CAMELCASE: Avoid CamelCase: <TxDroppedPktCnt>
#990: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:446:
+DEVICE_COUNTER(tx_dropped_pkts, TxDroppedPktCnt);

CHECK:CAMELCASE: Avoid CamelCase: <TxDwordCnt>
#991: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:447:
+DEVICE_COUNTER(tx_dwords, TxDwordCnt);

CHECK:CAMELCASE: Avoid CamelCase: <TxFlowPktCnt>
#992: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:448:
+DEVICE_COUNTER(tx_flow_pkts, TxFlowPktCnt);

CHECK:CAMELCASE: Avoid CamelCase: <TxFlowStallCnt>
#993: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:449:
+DEVICE_COUNTER(tx_flow_stalls, TxFlowStallCnt);

CHECK:CAMELCASE: Avoid CamelCase: <TxLenErrCnt>
#994: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:450:
+DEVICE_COUNTER(tx_len_errs, TxLenErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <TxMaxMinLenErrCnt>
#995: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:451:
+DEVICE_COUNTER(tx_max_min_len_errs, TxMaxMinLenErrCnt);

CHECK:CAMELCASE: Avoid CamelCase: <TxUnderrunCnt>
#996: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:452:
+DEVICE_COUNTER(tx_underruns, TxUnderrunCnt);

CHECK:CAMELCASE: Avoid CamelCase: <TxUnsupVLErrCnt>
#997: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:453:
+DEVICE_COUNTER(tx_unsup_vl_errs, TxUnsupVLErrCnt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:506:
+static ssize_t store_reset(struct device *dev,
+			 struct device_attribute *attr,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1068: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:524:
+		dev_info(dev,"Unit %d is disabled, can't reset\n",
 		            ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1074: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:530:
+	return ret<0 ? ret : count;
 	          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1078: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:534:
+static ssize_t store_link_state(struct device *dev,
+			 struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1104: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:560:
+static ssize_t show_mtu(struct device *dev,
+			 struct device_attribute *attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1108: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:564:
+	struct ipath_devdata *dd = dev_get_drvdata(dev);
+	return scnprintf(buf, PAGE_SIZE, "%u\n", dd->ipath_ibmtu);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1137: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:593:
+static ssize_t show_enabled(struct device *dev,
+			 struct device_attribute *attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1141: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:597:
+	struct ipath_devdata *dd = dev_get_drvdata(dev);
+	return scnprintf(buf, PAGE_SIZE, "%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1146: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:602:
+static ssize_t store_enabled(struct device *dev,
+			 struct device_attribute *attr,

CHECK:BRACES: Unbalanced braces around else statement
#1170: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:626:
+		else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1175: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:631:
+	}
+	else if (!(dd->ipath_flags & IPATH_DISABLED)) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1186: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:642:
+static DRIVER_ATTR(num_units, S_IRUGO, show_num_units, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1187: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:643:
+static DRIVER_ATTR(version, S_IRUGO, show_version, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_guid' to 'guid_show' 'store_guid' to 'guid_store'
#1199: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:655:
+static DEVICE_ATTR(guid, S_IWUSR | S_IRUGO, show_guid, store_guid);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1199: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:655:
+static DEVICE_ATTR(guid, S_IWUSR | S_IRUGO, show_guid, store_guid);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_lid' to 'lid_show' 'store_lid' to 'lid_store'
#1200: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:656:
+static DEVICE_ATTR(lid, S_IWUSR | S_IRUGO, show_lid, store_lid);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1200: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:656:
+static DEVICE_ATTR(lid, S_IWUSR | S_IRUGO, show_lid, store_lid);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'store_link_state' to 'link_state_store'
#1201: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:657:
+static DEVICE_ATTR(link_state, S_IWUSR, NULL, store_link_state);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1201: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:657:
+static DEVICE_ATTR(link_state, S_IWUSR, NULL, store_link_state);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_mlid' to 'mlid_show' 'store_mlid' to 'mlid_store'
#1202: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:658:
+static DEVICE_ATTR(mlid, S_IWUSR | S_IRUGO, show_mlid, store_mlid);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1202: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:658:
+static DEVICE_ATTR(mlid, S_IWUSR | S_IRUGO, show_mlid, store_mlid);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_mtu' to 'mtu_show' 'store_mtu' to 'mtu_store'
#1203: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:659:
+static DEVICE_ATTR(mtu, S_IWUSR | S_IRUGO, show_mtu, store_mtu);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1203: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:659:
+static DEVICE_ATTR(mtu, S_IWUSR | S_IRUGO, show_mtu, store_mtu);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_enabled' to 'enabled_show' 'store_enabled' to 'enabled_store'
#1204: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:660:
+static DEVICE_ATTR(enabled, S_IWUSR | S_IRUGO, show_enabled, store_enabled);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1204: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:660:
+static DEVICE_ATTR(enabled, S_IWUSR | S_IRUGO, show_enabled, store_enabled);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_nguid' to 'nguid_show'
#1205: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:661:
+static DEVICE_ATTR(nguid, S_IRUGO, show_nguid, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1205: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:661:
+static DEVICE_ATTR(nguid, S_IRUGO, show_nguid, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'store_reset' to 'reset_store'
#1206: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:662:
+static DEVICE_ATTR(reset, S_IWUSR, NULL, store_reset);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1206: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:662:
+static DEVICE_ATTR(reset, S_IWUSR, NULL, store_reset);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_serial' to 'serial_show'
#1207: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:663:
+static DEVICE_ATTR(serial, S_IRUGO, show_serial, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1207: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:663:
+static DEVICE_ATTR(serial, S_IRUGO, show_serial, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_status' to 'status_show'
#1208: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:664:
+static DEVICE_ATTR(status, S_IRUGO, show_status, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1208: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:664:
+static DEVICE_ATTR(status, S_IRUGO, show_status, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_status_str' to 'status_str_show'
#1209: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:665:
+static DEVICE_ATTR(status_str, S_IRUGO, show_status_str, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1209: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:665:
+static DEVICE_ATTR(status_str, S_IRUGO, show_status_str, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_boardversion' to 'boardversion_show'
#1210: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:666:
+static DEVICE_ATTR(boardversion, S_IRUGO, show_boardversion, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1210: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:666:
+static DEVICE_ATTR(boardversion, S_IRUGO, show_boardversion, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_unit' to 'unit_show'
#1211: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:667:
+static DEVICE_ATTR(unit, S_IRUGO, show_unit, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1211: FILE: drivers/infiniband/hw/ipath/ipath_sysfs.c:667:
+static DEVICE_ATTR(unit, S_IRUGO, show_unit, NULL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091588.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 70 warnings, 68 checks, 1266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091588.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
