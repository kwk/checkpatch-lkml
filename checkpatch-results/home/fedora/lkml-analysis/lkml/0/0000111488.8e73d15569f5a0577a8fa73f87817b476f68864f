WARNING:TYPO_SPELLING: 'unsinged' may be misspelled - perhaps 'unsigned'?
#40: 
unsinged long ext2_find_next_zero_bit(const unsigned long *addr,
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
--- 2.6-git.orig/include/asm-generic/bitops.h	2006-01-25 19:14:11.000000000 +0900

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#55: FILE: include/asm-generic/bitops.h:8:
+#define BITOP_LE_SWIZZLE	((BITS_PER_LONG-1) & ~0x7)
                         	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#69: FILE: include/asm-generic/bitops.h:520:
+static __inline__ int generic_test_le_bit(unsigned long nr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: include/asm-generic/bitops.h:521:
+static __inline__ int generic_test_le_bit(unsigned long nr,
+				  __const__ unsigned long *addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#73: FILE: include/asm-generic/bitops.h:524:
+	__const__ unsigned char	*tmp = (__const__ unsigned char *) addr;
+	return (tmp[nr >> 3] >> (nr & 7)) & 1;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#89: FILE: include/asm-generic/bitops.h:540:
+static __inline__ int generic_test_le_bit(unsigned long nr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: include/asm-generic/bitops.h:541:
+static __inline__ int generic_test_le_bit(unsigned long nr,
+				  __const__ unsigned long *addr)

CHECK:SPACING: No space is necessary after a cast
#92: FILE: include/asm-generic/bitops.h:543:
+	__const__ unsigned char	*tmp = (__const__ unsigned char *) addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: include/asm-generic/bitops.h:544:
+	__const__ unsigned char	*tmp = (__const__ unsigned char *) addr;
+	return (tmp[nr >> 3] >> (nr & 7)) & 1;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#112: FILE: include/asm-generic/bitops.h:563:
+static inline unsigned long ext2_swabp(const unsigned long * x)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#115: FILE: include/asm-generic/bitops.h:566:
+	return (unsigned long) __swab64p((u64 *) x);

CHECK:SPACING: No space is necessary after a cast
#117: FILE: include/asm-generic/bitops.h:568:
+	return (unsigned long) __swab32p((u32 *) x);

CHECK:SPACING: No space is necessary after a cast
#127: FILE: include/asm-generic/bitops.h:578:
+	return (unsigned long) __swab64((u64) y);

CHECK:SPACING: No space is necessary after a cast
#129: FILE: include/asm-generic/bitops.h:580:
+	return (unsigned long) __swab32((u32) y);

WARNING:INLINE: plain inline is preferred over __inline__
#135: FILE: include/asm-generic/bitops.h:586:
+static __inline__ unsigned long generic_find_next_zero_le_bit(const unsigned long *addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: include/asm-generic/bitops.h:587:
+static __inline__ unsigned long generic_find_next_zero_le_bit(const unsigned long *addr,
+				unsigned long size, unsigned long offset)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#158: FILE: include/asm-generic/bitops.h:609:
+		if (~(tmp = *(p++)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: include/asm-generic/bitops.h:632:
+        generic_find_next_zero_le_bit((addr), (size), 0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: include/asm-generic/bitops.h:632:
+        generic_find_next_zero_le_bit((addr), (size), 0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#183: FILE: include/asm-generic/bitops.h:634:
+#define ext2_set_bit(nr,addr)	\
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: include/asm-generic/bitops.h:635:
+	generic___test_and_set_le_bit((nr),(unsigned long *)(addr))
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: include/asm-generic/bitops.h:636:
+#define ext2_clear_bit(nr,addr)	\
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#186: FILE: include/asm-generic/bitops.h:637:
+	generic___test_and_clear_le_bit((nr),(unsigned long *)(addr))
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#188: FILE: include/asm-generic/bitops.h:639:
+#define ext2_test_bit(nr,addr)	\
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: include/asm-generic/bitops.h:640:
+	generic_test_le_bit((nr),(unsigned long *)(addr))
 	                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111488.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 8 warnings, 9 checks, 147 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111488.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
