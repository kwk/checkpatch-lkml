WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -urN -I \$.*\$ --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal linux-2.5.14/include/linux/sched.h working-2.5.14-init-task/include/linux/sched.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#41: FILE: include/linux/sched.h:657:
+extern struct task_struct *do_fork(unsigned long, unsigned long, struct pt_regs *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#41: FILE: include/linux/sched.h:657:
+extern struct task_struct *do_fork(unsigned long, unsigned long, struct pt_regs *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#41: FILE: include/linux/sched.h:657:
+extern struct task_struct *do_fork(unsigned long, unsigned long, struct pt_regs *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#41: FILE: include/linux/sched.h:657:
+extern struct task_struct *do_fork(unsigned long, unsigned long, struct pt_regs *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#41: FILE: include/linux/sched.h:657:
+extern struct task_struct *do_fork(unsigned long, unsigned long, struct pt_regs *, unsigned long);

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: arch/ppc/kernel/process.c:445:
+	struct task_struct *p;
+	p = do_fork(p1, regs->gpr[1], regs, 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#137: FILE: arch/ppc/kernel/process.c:453:
+	struct task_struct *p;
+	p = do_fork(SIGCHLD, regs->gpr[1], regs, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#146: FILE: arch/ppc/kernel/process.c:461:
+	struct task_struct *p;
+	p = do_fork(CLONE_VFORK | CLONE_VM | SIGCHLD, regs->gpr[1], regs, 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#159: FILE: arch/ppc/kernel/smp.c:346:
+		p = do_fork(CLONE_VM|CLONE_PID, 0, &regs, 0);
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 2 checks, 156 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
