WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#27: 
is included by clip.c and doesnt export symbols -- it should probably
                          ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#114: FILE: net/atm/clip.c:766:
+	extern struct atm_clip_ops *atm_clip_ops;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#127: FILE: net/atm/clip.c:779:
+	extern struct atm_clip_ops *atm_clip_ops;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#139: FILE: net/atm/clip.c:791:
+	if (start_timer == 0) del_timer(&idle_timer);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#161: FILE: net/atm/common.c:36:
+struct atm_lane_ops *atm_lane_ops = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#171: FILE: net/atm/common.c:45:
+struct atm_mpoa_ops *atm_mpoa_ops = NULL;

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#179: FILE: net/atm/common.c:62:
+#if defined(CONFIG_ATM_CLIP) || defined(CONFIG_ATM_CLIP_MODULE)

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#181: FILE: net/atm/common.c:64:
+struct atm_clip_ops *atm_clip_ops = NULL;

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#205: FILE: net/atm/common.c:650:
+#if defined(CONFIG_ATM_CLIP) || defined(CONFIG_ATM_CLIP_MODULE)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!atm_clip_ops"
#221: FILE: net/atm/common.c:663:
+			if (atm_clip_ops == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#225: FILE: net/atm/common.c:667:
+				ret_val = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: net/atm/common.c:681:
+				ret_val = atm_clip_ops->clip_mkip(vcc,arg);
 				                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: net/atm/common.c:687:
+				ret_val = atm_clip_ops->clip_setentry(vcc,arg);
 				                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: net/atm/common.c:693:
+				ret_val = atm_clip_ops->clip_encap(vcc,arg);
 				                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: net/atm/common.c:703:
+                        if (atm_lane_ops == NULL)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: net/atm/common.c:703:
+                        if (atm_lane_ops == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!atm_lane_ops"
#266: FILE: net/atm/common.c:703:
+                        if (atm_lane_ops == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: net/atm/common.c:706:
+                        if (atm_lane_ops && !try_module_get(atm_lane_ops->owner)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: net/atm/common.c:706:
+                        if (atm_lane_ops && !try_module_get(atm_lane_ops->owner)) {$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#294: FILE: net/atm/common.c:727:
+				ret_val = atm_lane_ops->vcc_attach(vcc, (void*)arg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!atm_mpoa_ops"
#306: FILE: net/atm/common.c:737:
+			if (atm_mpoa_ops == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: net/atm/common.c:738:
+                                request_module("mpoa");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: net/atm/common.c:738:
+                                request_module("mpoa");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: net/atm/common.c:1153:
+        error = atm_proc_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: net/atm/common.c:1153:
+        error = atm_proc_init();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: net/atm/common.c:1154:
+        if (error) printk("atm_proc_init fails with %d\n",error);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: net/atm/common.c:1154:
+        if (error) printk("atm_proc_init fails with %d\n",error);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#394: FILE: net/atm/common.c:1154:
+        if (error) printk("atm_proc_init fails with %d\n",error);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: net/atm/common.c:1154:
+        if (error) printk("atm_proc_init fails with %d\n",error);
                                                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#394: FILE: net/atm/common.c:1154:
+        if (error) printk("atm_proc_init fails with %d\n",error);

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: net/atm/lec.c:551:
+        .send^I= lec_atm_send,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: net/atm/lec.c:551:
+        .send^I= lec_atm_send,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: net/atm/lec.c:830:
+        .lecd_attach =^Ilecd_attach,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: net/atm/lec.c:830:
+        .lecd_attach =^Ilecd_attach,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: net/atm/lec.c:831:
+        .mcast_attach =^Ilec_mcast_attach,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: net/atm/lec.c:831:
+        .mcast_attach =^Ilec_mcast_attach,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: net/atm/lec.c:832:
+        .vcc_attach =^Ilec_vcc_attach,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: net/atm/lec.c:832:
+        .vcc_attach =^Ilec_vcc_attach,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: net/atm/lec.c:833:
+        .get_lecs = ^Iget_dev_lec,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#521: FILE: net/atm/lec.c:833:
+        .get_lecs = ^Iget_dev_lec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: net/atm/lec.c:833:
+        .get_lecs = ^Iget_dev_lec,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: net/atm/lec.c:834:
+        .owner =^ITHIS_MODULE$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: net/atm/lec.c:834:
+        .owner =^ITHIS_MODULE$

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: net/atm/lec.c:839:
+        extern struct atm_lane_ops *atm_lane_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: net/atm/lec.c:839:
+        extern struct atm_lane_ops *atm_lane_ops;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#528: FILE: net/atm/lec.c:839:
+        extern struct atm_lane_ops *atm_lane_ops;

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: net/atm/lec.c:841:
+        atm_lane_ops = &__atm_lane_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: net/atm/lec.c:841:
+        atm_lane_ops = &__atm_lane_ops;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: net/atm/lec.c:842:
+        printk("lec.c: " __DATE__ " " __TIME__ " initialized\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: net/atm/lec.c:842:
+        printk("lec.c: " __DATE__ " " __TIME__ " initialized\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#532: FILE: net/atm/lec.c:842:
+        printk("lec.c: " __DATE__ " " __TIME__ " initialized\n");

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#532: FILE: net/atm/lec.c:842:
+        printk("lec.c: " __DATE__ " " __TIME__ " initialized\n");

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#532: FILE: net/atm/lec.c:842:
+        printk("lec.c: " __DATE__ " " __TIME__ " initialized\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: net/atm/lec.c:850:
+        extern struct atm_lane_ops *atm_lane_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: net/atm/lec.c:850:
+        extern struct atm_lane_ops *atm_lane_ops;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#541: FILE: net/atm/lec.c:850:
+        extern struct atm_lane_ops *atm_lane_ops;

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: net/atm/lec.c:853:
+        atm_lane_ops = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: net/atm/lec.c:853:
+        atm_lane_ops = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: net/atm/lec.c:866:
+              }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: net/atm/lec.c:866:
+              }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: net/atm/lec.h:68:
+        struct module *owner;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: net/atm/lec.h:68:
+        struct module *owner;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: net/atm/mpc.c:1393:
+        .mpoad_attach =^Iatm_mpoa_mpoad_attach,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: net/atm/mpc.c:1393:
+        .mpoad_attach =^Iatm_mpoa_mpoad_attach,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: net/atm/mpc.c:1394:
+        .vcc_attach =^Iatm_mpoa_vcc_attach,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: net/atm/mpc.c:1394:
+        .vcc_attach =^Iatm_mpoa_vcc_attach,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: net/atm/mpc.c:1395:
+        .owner =^ITHIS_MODULE$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: net/atm/mpc.c:1395:
+        .owner =^ITHIS_MODULE$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#632: FILE: net/atm/mpc.c:1400:
+	extern struct atm_mpoa_ops *atm_mpoa_ops;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#659: FILE: net/atm/mpc.c:1417:
+	extern struct atm_mpoa_ops *atm_mpoa_ops;

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: net/atm/mpc.h:51:
+        struct module *owner;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: net/atm/mpc.h:51:
+        struct module *owner;$

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#718: FILE: net/atm/proc.c:42:
+#if defined(CONFIG_ATM_CLIP) || defined(CONFIG_ATM_CLIP_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#738: FILE: net/atm/proc.c:91:
+#if defined(CONFIG_ATM_CLIP) || defined(CONFIG_ATM_CLIP_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#748: FILE: net/atm/proc.c:180:
+#if defined(CONFIG_ATM_CLIP) || defined(CONFIG_ATM_CLIP_MODULE)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vcc->push == atm_clip_ops->clip_push'
#749: FILE: net/atm/proc.c:181:
+	if (atm_clip_ops && (vcc->push == atm_clip_ops->clip_push)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#758: FILE: net/atm/proc.c:395:
+#if defined(CONFIG_ATM_CLIP) || defined(CONFIG_ATM_CLIP_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#876: FILE: net/atm/proc.c:607:
+#if defined(CONFIG_ATM_CLIP) || defined(CONFIG_ATM_CLIP_MODULE)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: net/atm/proc.c:628:
+	if (vc) remove_proc_entry("vc",atm_proc_root);
 	                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#888: FILE: net/atm/proc.c:628:
+	if (vc) remove_proc_entry("vc",atm_proc_root);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#889: FILE: net/atm/proc.c:629:
+	if (lec) remove_proc_entry("lec",atm_proc_root);
 	                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#889: FILE: net/atm/proc.c:629:
+	if (lec) remove_proc_entry("lec",atm_proc_root);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#890: FILE: net/atm/proc.c:630:
+	if (arp) remove_proc_entry("arp",atm_proc_root);
 	                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#890: FILE: net/atm/proc.c:630:
+	if (arp) remove_proc_entry("arp",atm_proc_root);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#891: FILE: net/atm/proc.c:631:
+	if (svc) remove_proc_entry("svc",atm_proc_root);
 	                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#891: FILE: net/atm/proc.c:631:
+	if (svc) remove_proc_entry("svc",atm_proc_root);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#892: FILE: net/atm/proc.c:632:
+	if (pvc) remove_proc_entry("pvc",atm_proc_root);
 	                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#892: FILE: net/atm/proc.c:632:
+	if (pvc) remove_proc_entry("pvc",atm_proc_root);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#893: FILE: net/atm/proc.c:633:
+	if (devices) remove_proc_entry("devices",atm_proc_root);
 	                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#893: FILE: net/atm/proc.c:633:
+	if (devices) remove_proc_entry("devices",atm_proc_root);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#894: FILE: net/atm/proc.c:634:
+	remove_proc_entry("net/atm",NULL);
 	                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#936: FILE: net/atm/pvc.c:127:
+		printk(KERN_ERR "ATMPVC: can't register (%d)", error);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#987: FILE: net/atm/svc.c:448:
+		printk(KERN_ERR "ATMSVC: can't register (%d)\n", error);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1013: FILE: include/net/atmclip.h:68:
+	int (*clip_mkip)(struct atm_vcc *vcc,int timeout);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1014: FILE: include/net/atmclip.h:69:
+	int (*clip_setentry)(struct atm_vcc *vcc,u32 ip);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1015: FILE: include/net/atmclip.h:70:
+	int (*clip_encap)(struct atm_vcc *vcc,int mode);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1016: FILE: include/net/atmclip.h:71:
+	void (*clip_push)(struct atm_vcc *vcc,struct sk_buff *skb);
 	                                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 51 errors, 42 warnings, 4 checks, 840 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
