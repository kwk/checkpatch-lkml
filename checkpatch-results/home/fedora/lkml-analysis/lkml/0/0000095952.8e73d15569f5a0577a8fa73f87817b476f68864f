WARNING:TYPO_SPELLING: 'capabilty' may be misspelled - perhaps 'capability'?
#31: 
capabilty of the parent process to trace the child process but code
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#47: FILE: security/commoncap.c:62:
+       if (!cap_issubset (child->cap_permitted, parent->cap_permitted)){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#47: FILE: security/commoncap.c:62:
+       if (!cap_issubset (child->cap_permitted, parent->cap_permitted)){
+               if(!cap_capable(parent,CAP_SYS_PTRACE)){

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#47: FILE: security/commoncap.c:62:
+       if (!cap_issubset (child->cap_permitted, parent->cap_permitted)){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#47: FILE: security/commoncap.c:62:
+       if (!cap_issubset (child->cap_permitted, parent->cap_permitted)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#48: FILE: security/commoncap.c:63:
+               if(!cap_capable(parent,CAP_SYS_PTRACE)){$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: security/commoncap.c:63:
+               if(!cap_capable(parent,CAP_SYS_PTRACE)){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#48: FILE: security/commoncap.c:63:
+               if(!cap_capable(parent,CAP_SYS_PTRACE)){
+                       parent->flags |= PF_SUPERPRIV;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#48: FILE: security/commoncap.c:63:
+               if(!cap_capable(parent,CAP_SYS_PTRACE)){
                                      ^

ERROR:SPACING: space required before the open brace '{'
#48: FILE: security/commoncap.c:63:
+               if(!cap_capable(parent,CAP_SYS_PTRACE)){

ERROR:SPACING: space required before the open parenthesis '('
#48: FILE: security/commoncap.c:63:
+               if(!cap_capable(parent,CAP_SYS_PTRACE)){

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#48: FILE: security/commoncap.c:63:
+               if(!cap_capable(parent,CAP_SYS_PTRACE)){
[...]
+               else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#49: FILE: security/commoncap.c:64:
+                       parent->flags |= PF_SUPERPRIV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: security/commoncap.c:64:
+                       parent->flags |= PF_SUPERPRIV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: security/commoncap.c:65:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: security/commoncap.c:65:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: security/commoncap.c:66:
+               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: security/commoncap.c:66:
+               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#51: FILE: security/commoncap.c:66:
+               else
+                       return -EPERM;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#51: FILE: security/commoncap.c:66:
+               }
+               else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#52: FILE: security/commoncap.c:67:
+                       return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: security/commoncap.c:67:
+                       return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: security/commoncap.c:68:
+       }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095952.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 13 warnings, 0 checks, 16 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095952.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
