CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: drivers/infiniband/core/addr.c:65:
+int rdma_copy_addr(struct rdma_dev_addr *dev_addr, struct net_device *dev,
+		     const unsigned char *dst_dev_addr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: drivers/infiniband/core/cma.c:478:
+		ret = iw_cm_init_qp_attr(id_priv->cm_id.iw, qp_attr,
+					qp_attr_mask);

CHECK:SPACING: No space is necessary after a cast
#395: FILE: drivers/infiniband/core/cma.c:1026:
+		sin = (struct sockaddr_in *) &id_priv->id.route.addr.src_addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#397: FILE: drivers/infiniband/core/cma.c:1028:
+		sin = (struct sockaddr_in *) &id_priv->id.route.addr.dst_addr;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#408: FILE: drivers/infiniband/core/cma.c:1039:
+		BUG_ON(1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#480: FILE: drivers/infiniband/core/cma.c:1111:
+	sin = (struct sockaddr_in *) &new_cm_id->route.addr.src_addr;

CHECK:SPACING: No space is necessary after a cast
#482: FILE: drivers/infiniband/core/cma.c:1113:
+	sin = (struct sockaddr_in *) &new_cm_id->route.addr.dst_addr;

CHECK:SPACING: No space is necessary after a cast
#521: FILE: drivers/infiniband/core/cma.c:1174:
+	sin = (struct sockaddr_in *) &id_priv->id.route.addr.src_addr;

WARNING:SIZEOF_PARENTHESIS: sizeof *work should be sizeof(*work)
#565: FILE: drivers/infiniband/core/cma.c:1416:
+	work = kzalloc(sizeof *work, GFP_KERNEL);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#605: FILE: drivers/infiniband/core/cma.c:1854:
+	struct sockaddr_in* sin;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#617: FILE: drivers/infiniband/core/cma.c:1866:
+	sin = (struct sockaddr_in*) &id_priv->id.route.addr.src_addr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#617: FILE: drivers/infiniband/core/cma.c:1866:
+	sin = (struct sockaddr_in*) &id_priv->id.route.addr.src_addr;

CHECK:SPACING: No space is necessary after a cast
#620: FILE: drivers/infiniband/core/cma.c:1869:
+	sin = (struct sockaddr_in*) &id_priv->id.route.addr.dst_addr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#620: FILE: drivers/infiniband/core/cma.c:1869:
+	sin = (struct sockaddr_in*) &id_priv->id.route.addr.dst_addr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: drivers/infiniband/core/cma.c:1954:
+static int cma_accept_iw(struct rdma_id_private *id_priv,
+		  struct rdma_conn_param *conn_param)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#679: FILE: drivers/infiniband/core/cma.c:1967:
+	if (id_priv->id.qp) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#681: FILE: drivers/infiniband/core/cma.c:1969:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#970: FILE: drivers/infiniband/core/verbs.c:93:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: include/rdma/ib_addr.h:76:
+int rdma_copy_addr(struct rdma_dev_addr *dev_addr, struct net_device *dev,
+	      const unsigned char *dst_dev_addr);

WARNING:SIZEOF_PARENTHESIS: sizeof *gid should be sizeof(*gid)
#1093: FILE: include/rdma/ib_addr.h:122:
+	memcpy(gid, dev_addr->src_dev_addr, sizeof *gid);

WARNING:SIZEOF_PARENTHESIS: sizeof *gid should be sizeof(*gid)
#1099: FILE: include/rdma/ib_addr.h:128:
+	memcpy(gid, dev_addr->dst_dev_addr, sizeof *gid);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1117: FILE: include/rdma/ib_verbs.h:61:
+^IRDMA_NODE_IB_CA ^I= 1,$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1138: FILE: include/rdma/ib_verbs.h:91:
+	IB_DEVICE_ZERO_STAG		= (1<<15),
 	                   		    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1139: FILE: include/rdma/ib_verbs.h:92:
+	IB_DEVICE_SEND_W_INV		= (1<<16),
 	                    		    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1140: FILE: include/rdma/ib_verbs.h:93:
+	IB_DEVICE_MEM_WINDOW		= (1<<17)
 	                    		    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000039883.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 7 warnings, 15 checks, 953 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000039883.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
