WARNING:TYPO_SPELLING: 'non-existant' may be misspelled - perhaps 'non-existent'?
#45: 
non-existant code for sub jiffies stuff, these parts of this
^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#65: 
diff -urP -I \$Id:.*Exp \$ -X /usr/src/patch.exclude linux-2.5.38-bk5-org/include/linux/hrtime.h linux/include/linux/hrtime.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: include/linux/hrtime.h:1:
+#ifndef _HRTIME_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#72: FILE: include/linux/hrtime.h:4:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: include/linux/hrtime.h:9:
+ * will work as long as the CONFIG is not set.  Once an $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: include/linux/hrtime.h:10:
+ * arch defines the CONFIG, it had better have the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: include/linux/hrtime.h:20:
+        unsigned long _arch_to_usec; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: include/linux/hrtime.h:20:
+        unsigned long _arch_to_usec; $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: include/linux/hrtime.h:20:
+        unsigned long _arch_to_usec; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: include/linux/hrtime.h:21:
+        unsigned long _arch_to_nsec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: include/linux/hrtime.h:21:
+        unsigned long _arch_to_nsec;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: include/linux/hrtime.h:22:
+        unsigned long _usec_to_arch; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: include/linux/hrtime.h:22:
+        unsigned long _usec_to_arch; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: include/linux/hrtime.h:22:
+        unsigned long _usec_to_arch; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: include/linux/hrtime.h:23:
+        unsigned long _nsec_to_arch;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: include/linux/hrtime.h:23:
+        unsigned long _nsec_to_arch;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: include/linux/hrtime.h:24:
+        long _cycles_per_jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: include/linux/hrtime.h:24:
+        long _cycles_per_jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: include/linux/hrtime.h:25:
+        unsigned long _arch_to_latch;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: include/linux/hrtime.h:25:
+        unsigned long _arch_to_latch;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#95: FILE: include/linux/hrtime.h:27:
+};
+extern struct timer_conversion_bits timer_conversion_bits;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: include/linux/hrtime.h:29:
+ * The following four values are not used for machines $

WARNING:TYPO_SPELLING: 'caculated' may be misspelled - perhaps 'calculated'?
#99: FILE: include/linux/hrtime.h:31:
+ * are caculated at boot time. They are used to 
        ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: include/linux/hrtime.h:31:
+ * are caculated at boot time. They are used to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: include/linux/hrtime.h:34:
+ * divisors, however.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: include/linux/hrtime.h:36:
+#define arch_to_usec timer_conversion_bits._arch_to_usec $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: include/linux/hrtime.h:38:
+#define usec_to_arch timer_conversion_bits._usec_to_arch $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: include/linux/hrtime.h:41:
+#define arch_to_latch timer_conversion_bits._arch_to_latch $

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#117: FILE: include/linux/hrtime.h:49:
+ * The actual function will be called with the offset in "arch" (parm 2)
                                                                  ^^^^

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#118: FILE: include/linux/hrtime.h:50:
+ * defined sub_jiffie units from the reference jiffie boundry (parm 1)to
                                                       ^^^^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#118: FILE: include/linux/hrtime.h:50:
+ * defined sub_jiffie units from the reference jiffie boundry (parm 1)to
                                                                ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: include/linux/hrtime.h:59:
+ * time has passed.  In this case a "close" in time should be used to $

WARNING:TYPO_SPELLING: 'ususally' may be misspelled - perhaps 'usually'?
#129: FILE: include/linux/hrtime.h:61:
+ * should just call do_timer(). If the interrupt code ususally does stuff
                                                       ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: include/linux/hrtime.h:63:
+ * indicate that a new jiffie has started.  This flag is to keep this code $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: include/linux/hrtime.h:67:
+#define schedule_next_int(s,d,a) 0
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: include/linux/hrtime.h:67:
+#define schedule_next_int(s,d,a) 0
                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: include/linux/hrtime.h:73:
+ * a timer has expired.  Since no sub_expire value will be used if "arch" $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: include/linux/hrtime.h:87:
+ * worst case timer interrupt.  I.e. it may be that a call to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: include/linux/hrtime.h:91:
+ * calculate the worst case loop time from timer set up to int to $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: include/linux/hrtime.h:102:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#193: FILE: include/linux/hrtime.h:125:
+#define update_jiffies() (*(u64 *)&jiffies_64)++

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: include/linux/hrtime.h:131:
+#define schedule_next_int(a,b,c)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: include/linux/hrtime.h:131:
+#define schedule_next_int(a,b,c)
                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: include/linux/hrtime.h:134:
+ * If we included a high-res file, we may have gotten a more efficient $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: include/linux/hrtime.h:135:
+ * u64/u32, u64%u32 routine.  The one in div64.h actually handles a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: include/linux/hrtime.h:141:
+ * $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: include/linux/hrtime.h:148:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: include/linux/hrtime.h:148:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#216: FILE: include/linux/hrtime.h:148:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
+                       u64 result = dividend;           \
+                       *remainder = do_div(result,divisor); \
+                       result; })

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: include/linux/hrtime.h:149:
+                       u64 result = dividend;           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: include/linux/hrtime.h:149:
+                       u64 result = dividend;           \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: include/linux/hrtime.h:150:
+                       *remainder = do_div(result,divisor); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: include/linux/hrtime.h:150:
+                       *remainder = do_div(result,divisor); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: include/linux/hrtime.h:150:
+                       *remainder = do_div(result,divisor); \
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: include/linux/hrtime.h:151:
+                       result; })$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: include/linux/hrtime.h:151:
+                       result; })$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#239: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#239: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#239: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#239: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#239: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
+type name(p1_type p1,p2_type p2)\
+{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: include/linux/signal.h:231:
+type name(p1_type p1,p2_type p2)\
                     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#247: FILE: include/linux/signal.h:238:
+#define NANOSLEEP_ENTRY(a) asmlinkage long sys_nanosleep( struct timespec* rqtp, \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#247: FILE: include/linux/signal.h:238:
+#define NANOSLEEP_ENTRY(a) asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: include/linux/signal.h:239:
+                                                          struct timespec * rmtp) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: include/linux/signal.h:239:
+                                                          struct timespec * rmtp) \$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: include/linux/signal.h:239:
+                                                          struct timespec * rmtp) \

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: include/linux/signal.h:244:
+                               clockid_t which_clock,      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: include/linux/signal.h:244:
+                               clockid_t which_clock,      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: include/linux/signal.h:245:
+                               int flags,                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: include/linux/signal.h:245:
+                               int flags,                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: include/linux/signal.h:246:
+                               const struct timespec *rqtp, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: include/linux/signal.h:246:
+                               const struct timespec *rqtp, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: include/linux/signal.h:247:
+                               struct timespec *rmtp)       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: include/linux/signal.h:247:
+                               struct timespec *rmtp)       \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: include/linux/signal.h:249:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: include/linux/signal.h:249:
+ $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#321: FILE: include/linux/time.h:140:
+extern int do_sys_settimeofday(struct timeval *tv, struct timezone *tz);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: include/linux/timer.h:21:
+        long sub_expires;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: include/linux/timer.h:21:
+        long sub_expires;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#343: FILE: include/linux/timer.h:28:
+extern void update_real_wall_time(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: include/linux/timer.h:44:
+int mod_timer_hr(struct timer_list *timer, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: include/linux/timer.h:45:
+                 unsigned long expires,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: include/linux/timer.h:45:
+                 unsigned long expires,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: include/linux/timer.h:46:
+                 long sub_expires);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: include/linux/timer.h:46:
+                 long sub_expires);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: include/linux/timer.h:48:
+#define  mod_timer_hr(a,b,c) mod_timer(a,b)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: include/linux/timer.h:48:
+#define  mod_timer_hr(a,b,c) mod_timer(a,b)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: include/linux/timer.h:48:
+#define  mod_timer_hr(a,b,c) mod_timer(a,b)
                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: include/linux/timer.h:57:
+        timer->sub_expires = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: include/linux/timer.h:57:
+        timer->sub_expires = 0;$

CHECK:SPACING: No space is necessary after a cast
#367: FILE: include/linux/timer.h:58:
+	timer->list.next = timer->list.prev =(struct list_head *) NULL;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#367: FILE: include/linux/timer.h:58:
+	timer->list.next = timer->list.prev =(struct list_head *) NULL;
 	                                    ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#367: FILE: include/linux/timer.h:58:
+	timer->list.next = timer->list.prev =(struct list_head *) NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#369: FILE: include/linux/timer.h:60:
 }
+#define TIMER_INIT(fun) {function: fun}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: kernel/timer.c:17:
+ *  2002-08-13  High res timers code by George Anzinger $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: kernel/timer.c:50:
+ rwlock_t xtime_lock __cacheline_aligned_in_smp = RW_LOCK_UNLOCKED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: kernel/timer.c:119:
+        for (i = 0; i < NEW_TVEC_SIZE; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: kernel/timer.c:119:
+        for (i = 0; i < NEW_TVEC_SIZE; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: kernel/timer.c:120:
+                INIT_LIST_HEAD( new_tvec + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: kernel/timer.c:120:
+                INIT_LIST_HEAD( new_tvec + i);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#537: FILE: kernel/timer.c:120:
+                INIT_LIST_HEAD( new_tvec + i);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!running_timer"
#589: FILE: kernel/timer.c:131:
+#define timer_is_inactive() (running_timer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#596: FILE: kernel/timer.c:138:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: kernel/timer.c:145:
+        unsigned long expires = timer->expires;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: kernel/timer.c:145:
+        unsigned long expires = timer->expires;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: kernel/timer.c:146:
+        IF_HIGH_RES(int sub_expires = timer->sub_expires;)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#604: FILE: kernel/timer.c:146:
+        unsigned long expires = timer->expires;
+        IF_HIGH_RES(int sub_expires = timer->sub_expires;)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: kernel/timer.c:146:
+        IF_HIGH_RES(int sub_expires = timer->sub_expires;)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: kernel/timer.c:147:
+                int indx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: kernel/timer.c:147:
+                int indx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: kernel/timer.c:148:
+        struct list_head *pos,*list_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: kernel/timer.c:148:
+        struct list_head *pos,*list_start;$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#606: FILE: kernel/timer.c:148:
+        struct list_head *pos,*list_start;
                              ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#606: FILE: kernel/timer.c:148:
+        struct list_head *pos,*list_start;
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: kernel/timer.c:150:
+        if ( time_before(expires, timer_jiffies) ){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: kernel/timer.c:150:
+        if ( time_before(expires, timer_jiffies) ){$

ERROR:SPACING: space required before the open brace '{'
#608: FILE: kernel/timer.c:150:
+        if ( time_before(expires, timer_jiffies) ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#608: FILE: kernel/timer.c:150:
+        if ( time_before(expires, timer_jiffies) ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#608: FILE: kernel/timer.c:150:
+        if ( time_before(expires, timer_jiffies) ){

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: kernel/timer.c:151:
+                /*$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: kernel/timer.c:152:
+                 * already expired, schedule for next tick $

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: kernel/timer.c:152:
+                 * already expired, schedule for next tick $

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: kernel/timer.c:153:
+                 * would like to do better here$

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: kernel/timer.c:154:
+                 * Actually this now works just fine with the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: kernel/timer.c:155:
+                 * back up of timer_jiffies in "run_timer_list".$

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: kernel/timer.c:156:
+                 * Note that this puts the timer on a list other$

ERROR:CODE_INDENT: code indent should use tabs where possible
#615: FILE: kernel/timer.c:157:
+                 * than the one it idexes to.  We don't want to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: kernel/timer.c:158:
+                 * change the expires value in the timer as it is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: kernel/timer.c:159:
+                 * used by the repeat code in setitimer and the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#618: FILE: kernel/timer.c:160:
+                 * POSIX timers code.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: kernel/timer.c:161:
+                         */$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#619: FILE: kernel/timer.c:161:
+                 * POSIX timers code.
+                         */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: kernel/timer.c:162:
+                expires = timer_jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: kernel/timer.c:162:
+                expires = timer_jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: kernel/timer.c:163:
+                IF_HIGH_RES(sub_expires = 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: kernel/timer.c:163:
+                IF_HIGH_RES(sub_expires = 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: kernel/timer.c:164:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: kernel/timer.c:164:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: kernel/timer.c:165:
+                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: kernel/timer.c:165:
+                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: kernel/timer.c:165:
+                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: kernel/timer.c:166:
+        indx =  expires & NEW_TVEC_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: kernel/timer.c:166:
+        indx =  expires & NEW_TVEC_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: kernel/timer.c:167:
+        if ((expires - timer_jiffies) <= NEW_TVEC_SIZE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: kernel/timer.c:167:
+        if ((expires - timer_jiffies) <= NEW_TVEC_SIZE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: kernel/timer.c:169:
+                unsigned long jiffies_f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: kernel/timer.c:169:
+                unsigned long jiffies_f;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: kernel/timer.c:170:
+                /*$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: kernel/timer.c:171:
+                 * The high diff bits are the same, goes to the head of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: kernel/timer.c:171:
+                 * The high diff bits are the same, goes to the head of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: kernel/timer.c:172:
+                 * the list, sort on sub_expire.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: kernel/timer.c:173:
+                 */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#632: FILE: kernel/timer.c:174:
+                for (pos = (list_start = &new_tvec[indx])->next; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: kernel/timer.c:174:
+                for (pos = (list_start = &new_tvec[indx])->next; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: kernel/timer.c:174:
+                for (pos = (list_start = &new_tvec[indx])->next; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: kernel/timer.c:175:
+                     pos != list_start; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: kernel/timer.c:175:
+                     pos != list_start; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: kernel/timer.c:175:
+                     pos != list_start; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: kernel/timer.c:176:
+                     pos = pos->next){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: kernel/timer.c:176:
+                     pos = pos->next){$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: kernel/timer.c:177:
+                        struct timer_list *tmr = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: kernel/timer.c:177:
+                        struct timer_list *tmr = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: kernel/timer.c:177:
+                        struct timer_list *tmr = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: kernel/timer.c:178:
+                                list_entry(pos,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: kernel/timer.c:178:
+                                list_entry(pos,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: kernel/timer.c:179:
+                                           struct timer_list,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: kernel/timer.c:179:
+                                           struct timer_list,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: kernel/timer.c:180:
+                                           list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: kernel/timer.c:180:
+                                           list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: kernel/timer.c:181:
+                        if ((tmr->sub_expires >= sub_expires) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: kernel/timer.c:181:
+                        if ((tmr->sub_expires >= sub_expires) ||$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr->sub_expires >= sub_expires'
#639: FILE: kernel/timer.c:181:
+                        if ((tmr->sub_expires >= sub_expires) ||
+                            (tmr->expires != expires)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr->expires != expires'
#639: FILE: kernel/timer.c:181:
+                        if ((tmr->sub_expires >= sub_expires) ||
+                            (tmr->expires != expires)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: kernel/timer.c:182:
+                            (tmr->expires != expires)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: kernel/timer.c:182:
+                            (tmr->expires != expires)){$

ERROR:SPACING: space required before the open brace '{'
#640: FILE: kernel/timer.c:182:
+                            (tmr->expires != expires)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: kernel/timer.c:183:
+                                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: kernel/timer.c:183:
+                                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: kernel/timer.c:184:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: kernel/timer.c:184:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: kernel/timer.c:185:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: kernel/timer.c:185:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#644: FILE: kernel/timer.c:186:
+                list_add_tail(&timer->list, pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: kernel/timer.c:186:
+                list_add_tail(&timer->list, pos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: kernel/timer.c:187:
+                /*$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#646: FILE: kernel/timer.c:188:
+                 * Notes to me.  Use jiffies here instead of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: kernel/timer.c:188:
+                 * Notes to me.  Use jiffies here instead of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: kernel/timer.c:189:
+                 * timer_jiffies to prevent adding unneeded interrupts.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: kernel/timer.c:190:
+                 * Timer_is_inactive() is false if we are currently $

ERROR:CODE_INDENT: code indent should use tabs where possible
#648: FILE: kernel/timer.c:190:
+                 * Timer_is_inactive() is false if we are currently $

WARNING:TYPO_SPELLING: 'activly' may be misspelled - perhaps 'actively'?
#649: FILE: kernel/timer.c:191:
+                 * activly dispatching timers.  Since we are under
                    ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#649: FILE: kernel/timer.c:191:
+                 * activly dispatching timers.  Since we are under$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: kernel/timer.c:192:
+                 * the same spin lock, it being false means that $

ERROR:CODE_INDENT: code indent should use tabs where possible
#650: FILE: kernel/timer.c:192:
+                 * the same spin lock, it being false means that $

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: kernel/timer.c:193:
+                 * it has dropped the spinlock to call the timer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: kernel/timer.c:194:
+                 * function, which could well be who called us.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: kernel/timer.c:195:
+                 * In any case, we don't need a new interrupt as$

ERROR:CODE_INDENT: code indent should use tabs where possible
#654: FILE: kernel/timer.c:196:
+                 * the timer dispach code (run_timer_list) will$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: kernel/timer.c:197:
+                 * pick this up when the function it is calling $

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: kernel/timer.c:197:
+                 * pick this up when the function it is calling $

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: kernel/timer.c:198:
+                 * returns.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: kernel/timer.c:199:
+                 */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: kernel/timer.c:200:
+                if ( expires == (jiffies_f = jiffies) && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: kernel/timer.c:200:
+                if ( expires == (jiffies_f = jiffies) && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: kernel/timer.c:200:
+                if ( expires == (jiffies_f = jiffies) && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#658: FILE: kernel/timer.c:200:
+                if ( expires == (jiffies_f = jiffies) && 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#658: FILE: kernel/timer.c:200:
+                if ( expires == (jiffies_f = jiffies) && 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: kernel/timer.c:201:
+                     list_start->next == &timer->list &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: kernel/timer.c:201:
+                if ( expires == (jiffies_f = jiffies) && 
+                     list_start->next == &timer->list &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: kernel/timer.c:201:
+                     list_start->next == &timer->list &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#660: FILE: kernel/timer.c:202:
+                     timer_is_inactive()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: kernel/timer.c:202:
+                     timer_is_inactive()) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#661: FILE: kernel/timer.c:203:
+                        schedule_next_int(jiffies_f, sub_expires,1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: kernel/timer.c:203:
+                        schedule_next_int(jiffies_f, sub_expires,1);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#661: FILE: kernel/timer.c:203:
+                        schedule_next_int(jiffies_f, sub_expires,1);
                                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: kernel/timer.c:204:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: kernel/timer.c:204:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#666: FILE: kernel/timer.c:206:
+                pos = (&new_tvec[indx])->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: kernel/timer.c:206:
+                pos = (&new_tvec[indx])->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#667: FILE: kernel/timer.c:207:
+                list_add_tail(&timer->list, pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: kernel/timer.c:207:
+                list_add_tail(&timer->list, pos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: kernel/timer.c:209:
+        }else{$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: kernel/timer.c:209:
+        }else{$

ERROR:SPACING: space required before the open brace '{'
#669: FILE: kernel/timer.c:209:
+        }else{

ERROR:SPACING: space required after that close brace '}'
#669: FILE: kernel/timer.c:209:
+        }else{

ERROR:CODE_INDENT: code indent should use tabs where possible
#670: FILE: kernel/timer.c:210:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#671: FILE: kernel/timer.c:211:
+                 * The high diff bits differ, search from the tail$

ERROR:CODE_INDENT: code indent should use tabs where possible
#672: FILE: kernel/timer.c:212:
+                 * The for will pick up an empty list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: kernel/timer.c:213:
+                 */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#674: FILE: kernel/timer.c:214:
+                for (pos = (list_start = &new_tvec[indx])->prev; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: kernel/timer.c:214:
+                for (pos = (list_start = &new_tvec[indx])->prev; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: kernel/timer.c:214:
+                for (pos = (list_start = &new_tvec[indx])->prev; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: kernel/timer.c:215:
+                     pos != list_start; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: kernel/timer.c:215:
+                     pos != list_start; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: kernel/timer.c:215:
+                     pos != list_start; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#676: FILE: kernel/timer.c:216:
+                     pos = pos->prev){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: kernel/timer.c:216:
+                     pos = pos->prev){$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: kernel/timer.c:217:
+                        struct timer_list *tmr = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: kernel/timer.c:217:
+                        struct timer_list *tmr = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: kernel/timer.c:217:
+                        struct timer_list *tmr = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#678: FILE: kernel/timer.c:218:
+                                list_entry(pos,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: kernel/timer.c:218:
+                                list_entry(pos,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#679: FILE: kernel/timer.c:219:
+                                           struct timer_list,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: kernel/timer.c:219:
+                                           struct timer_list,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: kernel/timer.c:220:
+                                           list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: kernel/timer.c:220:
+                                           list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: kernel/timer.c:221:
+                        if (time_after(tmr->expires, expires)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: kernel/timer.c:221:
+                        if (time_after(tmr->expires, expires)){$

ERROR:SPACING: space required before the open brace '{'
#681: FILE: kernel/timer.c:221:
+                        if (time_after(tmr->expires, expires)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#681: FILE: kernel/timer.c:221:
+                        if (time_after(tmr->expires, expires)){
+                                continue;
+                        }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: kernel/timer.c:222:
+                                continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: kernel/timer.c:222:
+                                continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: kernel/timer.c:223:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: kernel/timer.c:223:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#684: FILE: kernel/timer.c:224:
+                        IF_HIGH_RES($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: kernel/timer.c:224:
+                        IF_HIGH_RES($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#684: FILE: kernel/timer.c:224:
+                        IF_HIGH_RES(

ERROR:CODE_INDENT: code indent should use tabs where possible
#685: FILE: kernel/timer.c:225:
+                                if ((tmr->expires != expires) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: kernel/timer.c:225:
+                                if ((tmr->expires != expires) ||$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr->expires != expires'
#685: FILE: kernel/timer.c:225:
+                                if ((tmr->expires != expires) ||
+                                    (tmr->sub_expires < sub_expires)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr->sub_expires < sub_expires'
#685: FILE: kernel/timer.c:225:
+                                if ((tmr->expires != expires) ||
+                                    (tmr->sub_expires < sub_expires)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: kernel/timer.c:226:
+                                    (tmr->sub_expires < sub_expires)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: kernel/timer.c:226:
+                                    (tmr->sub_expires < sub_expires)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: kernel/timer.c:227:
+                                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: kernel/timer.c:227:
+                                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#688: FILE: kernel/timer.c:228:
+                                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: kernel/timer.c:228:
+                                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: kernel/timer.c:229:
+                                );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: kernel/timer.c:229:
+                                );$

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: kernel/timer.c:230:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: kernel/timer.c:230:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: kernel/timer.c:231:
+                list_add(&timer->list, pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: kernel/timer.c:231:
+                list_add(&timer->list, pos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: kernel/timer.c:232:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: kernel/timer.c:232:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: kernel/timer.c:233:
+                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: kernel/timer.c:233:
+                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: kernel/timer.c:233:
+                                $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#694: FILE: kernel/timer.c:234:
+                                
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#703: FILE: kernel/timer.c:273:
 }
+#ifdef CONFIG_HIGH_RES_TIMERS

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: kernel/timer.c:277:
+int mod_timer_hr(struct timer_list *timer, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#708: FILE: kernel/timer.c:278:
+                 unsigned long expires,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: kernel/timer.c:278:
+                 unsigned long expires,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: kernel/timer.c:279:
+                 long sub_expires)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: kernel/timer.c:279:
+                 long sub_expires)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: kernel/timer.c:286:
+        timer->sub_expires = sub_expires;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: kernel/timer.c:286:
+        timer->sub_expires = sub_expires;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#761: FILE: kernel/timer.c:348:
+        IF_HIGH_RES( unsigned long jiffies_f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: kernel/timer.c:348:
+        IF_HIGH_RES( unsigned long jiffies_f;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#761: FILE: kernel/timer.c:348:
+        IF_HIGH_RES( unsigned long jiffies_f;

ERROR:CODE_INDENT: code indent should use tabs where possible
#762: FILE: kernel/timer.c:349:
+                     long sub_jiff = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: kernel/timer.c:349:
+                     long sub_jiff = -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: kernel/timer.c:350:
+                     long sub_jiffie_f);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#763: FILE: kernel/timer.c:350:
+                     long sub_jiff = -1;
+                     long sub_jiffie_f);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: kernel/timer.c:350:
+                     long sub_jiffie_f);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#764: FILE: kernel/timer.c:351:
+        spin_lock_irq(&timerlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: kernel/timer.c:351:
+        spin_lock_irq(&timerlist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#766: FILE: kernel/timer.c:353:
+        read_lock(&xtime_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: kernel/timer.c:353:
+        read_lock(&xtime_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#767: FILE: kernel/timer.c:354:
+        jiffies_f = jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: kernel/timer.c:354:
+        jiffies_f = jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#768: FILE: kernel/timer.c:355:
+        sub_jiffie_f = sub_jiffie() + quick_get_cpuctr();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: kernel/timer.c:355:
+        sub_jiffie_f = sub_jiffie() + quick_get_cpuctr();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#769: FILE: kernel/timer.c:356:
+        read_unlock(&xtime_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: kernel/timer.c:356:
+        read_unlock(&xtime_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#770: FILE: kernel/timer.c:357:
+        while ( unlikely(sub_jiffie_f >= cycles_per_jiffies)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: kernel/timer.c:357:
+        while ( unlikely(sub_jiffie_f >= cycles_per_jiffies)){$

ERROR:SPACING: space required before the open brace '{'
#770: FILE: kernel/timer.c:357:
+        while ( unlikely(sub_jiffie_f >= cycles_per_jiffies)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#770: FILE: kernel/timer.c:357:
+        while ( unlikely(sub_jiffie_f >= cycles_per_jiffies)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#771: FILE: kernel/timer.c:358:
+                sub_jiffie_f -= cycles_per_jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: kernel/timer.c:358:
+                sub_jiffie_f -= cycles_per_jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#772: FILE: kernel/timer.c:359:
+                jiffies_f++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: kernel/timer.c:359:
+                jiffies_f++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#773: FILE: kernel/timer.c:360:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#773: FILE: kernel/timer.c:360:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: kernel/timer.c:361:
+        while ((long)(jiffies_f - timer_jiffies) >= 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: kernel/timer.c:361:
+        while ((long)(jiffies_f - timer_jiffies) >= 0) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: kernel/timer.c:366:
+                head = new_tvec + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#785: FILE: kernel/timer.c:366:
+                head = new_tvec + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: kernel/timer.c:366:
+                head = new_tvec + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#786: FILE: kernel/timer.c:367:
+                        (timer_jiffies  & NEW_TVEC_MASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: kernel/timer.c:367:
+                        (timer_jiffies  & NEW_TVEC_MASK);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: kernel/timer.c:368:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: kernel/timer.c:369:
+                 * Note that we never move "head" but continue to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#789: FILE: kernel/timer.c:370:
+                 * pick the first entry from it.  This allows new$

ERROR:CODE_INDENT: code indent should use tabs where possible
#790: FILE: kernel/timer.c:371:
+                 * entries to be inserted while we unlock for the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: kernel/timer.c:372:
+                 * function call below.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: kernel/timer.c:373:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: kernel/timer.c:383:
+                        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: kernel/timer.c:384:
+                         * This would be simpler if we never got behind$

ERROR:CODE_INDENT: code indent should use tabs where possible
#807: FILE: kernel/timer.c:385:
+                         * i.e. if timer_jiffies == jiffies, we could$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: kernel/timer.c:386:
+                         * drop one of the tests.  Since we may get $

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: kernel/timer.c:386:
+                         * drop one of the tests.  Since we may get $

ERROR:CODE_INDENT: code indent should use tabs where possible
#809: FILE: kernel/timer.c:387:
+                         * behind, (in fact we don't up date until$

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: kernel/timer.c:388:
+                         * we are behind to allow sub_jiffie entries)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: kernel/timer.c:389:
+                         * we need a way to negate the sub_jiffie$

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: kernel/timer.c:390:
+                         * test in that case...$

ERROR:CODE_INDENT: code indent should use tabs where possible
#813: FILE: kernel/timer.c:391:
+                         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: kernel/timer.c:392:
+                        if (time_before(timer->expires, jiffies_f)||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: kernel/timer.c:392:
+                        if (time_before(timer->expires, jiffies_f)||$

ERROR:SPACING: spaces required around that '||' (ctx:VxE)
#814: FILE: kernel/timer.c:392:
+                        if (time_before(timer->expires, jiffies_f)||
                                                                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'timer->expires == jiffies_f'
#814: FILE: kernel/timer.c:392:
+                        if (time_before(timer->expires, jiffies_f)||
+                            ((timer->expires == jiffies_f) &&
+                             timer->sub_expires <= sub_jiffie_f))

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: kernel/timer.c:393:
+                            ((timer->expires == jiffies_f) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: kernel/timer.c:393:
+                            ((timer->expires == jiffies_f) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#816: FILE: kernel/timer.c:394:
+                             timer->sub_expires <= sub_jiffie_f))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: kernel/timer.c:394:
+                             timer->sub_expires <= sub_jiffie_f))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: kernel/timer.c:396:
+                        if (time_before_eq(timer->expires, jiffies))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: kernel/timer.c:396:
+                        if (time_before_eq(timer->expires, jiffies))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: kernel/timer.c:398:
+                                {fn = timer->function;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: kernel/timer.c:398:
+                                {fn = timer->function;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: kernel/timer.c:399:
+                                data= timer->data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: kernel/timer.c:399:
+                                data= timer->data;$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#821: FILE: kernel/timer.c:399:
+                                data= timer->data;
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#832: FILE: kernel/timer.c:401:
+                                detach_timer(timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: kernel/timer.c:401:
+                                detach_timer(timer);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#833: FILE: kernel/timer.c:402:
+                                timer->list.next = timer->list.prev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: kernel/timer.c:402:
+                                timer->list.next = timer->list.prev = NULL;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#833: FILE: kernel/timer.c:402:
+                                timer->list.next = timer->list.prev = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#834: FILE: kernel/timer.c:403:
+                                timer_enter(timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: kernel/timer.c:403:
+                                timer_enter(timer);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: kernel/timer.c:404:
+                                spin_unlock_irq(&timerlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: kernel/timer.c:404:
+                                spin_unlock_irq(&timerlist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#836: FILE: kernel/timer.c:405:
+                                fn(data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#836: FILE: kernel/timer.c:405:
+                                fn(data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: kernel/timer.c:406:
+                                spin_lock_irq(&timerlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: kernel/timer.c:406:
+                                spin_lock_irq(&timerlist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#838: FILE: kernel/timer.c:407:
+                                timer_exit();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: kernel/timer.c:407:
+                                timer_exit();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#839: FILE: kernel/timer.c:408:
+                                goto repeat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: kernel/timer.c:408:
+                                goto repeat;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#840: FILE: kernel/timer.c:409:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: kernel/timer.c:409:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: kernel/timer.c:411:
+                        else{$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: kernel/timer.c:411:
+                        else{$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 33)
#842: FILE: kernel/timer.c:411:
+                        else{
[...]
+                                 if (timer->expires == jiffies_f ){

ERROR:SPACING: space required before the open brace '{'
#842: FILE: kernel/timer.c:411:
+                        else{

CHECK:BRACES: Unbalanced braces around else statement
#842: FILE: kernel/timer.c:411:
+                        else{

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: kernel/timer.c:412:
+                                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: kernel/timer.c:413:
+                                 * The new timer list is not always emptied$

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: kernel/timer.c:414:
+                                 * here as it contains:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#846: FILE: kernel/timer.c:415:
+                                 * a.) entries (list size)^N*jiffies out and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#847: FILE: kernel/timer.c:416:
+                                 * b.) entries that match in jiffies, but have$

ERROR:CODE_INDENT: code indent should use tabs where possible
#848: FILE: kernel/timer.c:417:
+                                 *     sub_expire times further out than now.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: kernel/timer.c:418:
+                                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#850: FILE: kernel/timer.c:419:
+                                 if (timer->expires == jiffies_f ){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: kernel/timer.c:419:
+                                 if (timer->expires == jiffies_f ){$

ERROR:SPACING: space required before the open brace '{'
#850: FILE: kernel/timer.c:419:
+                                 if (timer->expires == jiffies_f ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#850: FILE: kernel/timer.c:419:
+                                 if (timer->expires == jiffies_f ){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#850: FILE: kernel/timer.c:419:
+                                 if (timer->expires == jiffies_f ){
+                                        sub_jiff = timer->sub_expires;
+                                }

ERROR:CODE_INDENT: code indent should use tabs where possible
#851: FILE: kernel/timer.c:420:
+                                        sub_jiff = timer->sub_expires;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: kernel/timer.c:420:
+                                        sub_jiff = timer->sub_expires;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#852: FILE: kernel/timer.c:421:
+                                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: kernel/timer.c:421:
+                                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: kernel/timer.c:422:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: kernel/timer.c:422:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#855: FILE: kernel/timer.c:424:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: kernel/timer.c:424:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: kernel/timer.c:427:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#861: FILE: kernel/timer.c:428:
+         * It is faster to back out the last bump, than to prevent it.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#862: FILE: kernel/timer.c:429:
+         * This allows zero time inserts as well as sub_jiffie values in$

ERROR:CODE_INDENT: code indent should use tabs where possible
#863: FILE: kernel/timer.c:430:
+         * the current jiffie.  Did not work for the cascade as tv1.index$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: kernel/timer.c:431:
+         * also needs adjusting. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#864: FILE: kernel/timer.c:431:
+         * also needs adjusting. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#865: FILE: kernel/timer.c:432:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#866: FILE: kernel/timer.c:433:
+        --timer_jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: kernel/timer.c:433:
+        --timer_jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#868: FILE: kernel/timer.c:435:
+        IF_HIGH_RES(if (schedule_next_int( jiffies_f, sub_jiff, 0)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: kernel/timer.c:435:
+        IF_HIGH_RES(if (schedule_next_int( jiffies_f, sub_jiff, 0)){$

ERROR:SPACING: space required before the open brace '{'
#868: FILE: kernel/timer.c:435:
+        IF_HIGH_RES(if (schedule_next_int( jiffies_f, sub_jiff, 0)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#868: FILE: kernel/timer.c:435:
+        IF_HIGH_RES(if (schedule_next_int( jiffies_f, sub_jiff, 0)){

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#868: FILE: kernel/timer.c:435:
+        IF_HIGH_RES(if (schedule_next_int( jiffies_f, sub_jiff, 0)){
[...]
+                });

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#869: FILE: kernel/timer.c:436:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: kernel/timer.c:437:
+                 * If schedule_next_int says the time has passed$

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: kernel/timer.c:438:
+                 * bump the tasklet lock so we go round again$

ERROR:CODE_INDENT: code indent should use tabs where possible
#872: FILE: kernel/timer.c:439:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#873: FILE: kernel/timer.c:440:
+                mark_bh(TIMER_BH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: kernel/timer.c:440:
+                mark_bh(TIMER_BH);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: kernel/timer.c:441:
+                });$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: kernel/timer.c:441:
+                });$

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: kernel/timer.c:443:
+        spin_unlock_irq(&timerlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: kernel/timer.c:443:
+        spin_unlock_irq(&timerlist_lock);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#902: FILE: kernel/timer.c:770:
+        return ticks; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#902: FILE: kernel/timer.c:770:
+        return ticks; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: kernel/timer.c:770:
+        return ticks; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: kernel/timer.c:776:
+ ^Iunsigned long ticks;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#908: FILE: kernel/timer.c:776:
+ ^Iunsigned long ticks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: kernel/timer.c:776:
+ ^Iunsigned long ticks;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#910: FILE: kernel/timer.c:778:
+         * To get the time of day really right, we need to make sure $

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: kernel/timer.c:778:
+         * To get the time of day really right, we need to make sure $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#910: FILE: kernel/timer.c:778:
+       /*
+         * To get the time of day really right, we need to make sure 

ERROR:CODE_INDENT: code indent should use tabs where possible
#911: FILE: kernel/timer.c:779:
+         * every one is on the same jiffie. (Because of adj_time, etc.)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#912: FILE: kernel/timer.c:780:
+         * So we provide this for the high res code.  Must be called $

ERROR:CODE_INDENT: code indent should use tabs where possible
#912: FILE: kernel/timer.c:780:
+         * So we provide this for the high res code.  Must be called $

ERROR:CODE_INDENT: code indent should use tabs where possible
#913: FILE: kernel/timer.c:781:
+         * under the write(xtime_lock).  (External locking allows the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: kernel/timer.c:782:
+         * caller to include sub jiffies in the lock region.)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: kernel/timer.c:783:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: kernel/timer.c:784:
+ ^Iticks = jiffies - wall_jiffies;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#916: FILE: kernel/timer.c:784:
+ ^Iticks = jiffies - wall_jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: kernel/timer.c:784:
+ ^Iticks = jiffies - wall_jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: kernel/timer.c:793:
+        unsigned long ticks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: kernel/timer.c:793:
+        unsigned long ticks;$

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#929: FILE: kernel/timer.c:795:
+	calc_load(ticks);       /* This is dum.  Change calc_load to a timer */
 	                                   ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: kernel/timer.c:796:
+ ^Irun_timer_list();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#930: FILE: kernel/timer.c:796:
+ ^Irun_timer_list();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: kernel/timer.c:796:
+ ^Irun_timer_list();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: kernel/timer.c:801:
+        update_jiffies();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: kernel/timer.c:801:
+        update_jiffies();$

ERROR:SPACING: space prohibited after that open parenthesis '('
#941: FILE: kernel/timer.c:805:
+	IF_HIGH_RES( if (new_jiffie()))

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: kernel/timer.c:806:
+                update_process_times(user_mode(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: kernel/timer.c:806:
+                update_process_times(user_mode(regs));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#951: FILE: kernel/timer.c:1012:
+#if 0  $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#951: FILE: kernel/timer.c:1012:
+#if 0  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: kernel/timer.c:1014:
+// correct below.  $

WARNING:TYPO_SPELLING: 'paramerts' may be misspelled - perhaps 'parameters'?
#957: FILE: kernel/timer.c:1018:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#957: FILE: kernel/timer.c:1018:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                                                      ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#957: FILE: kernel/timer.c:1018:
+// Some systems may find these paramerts in other ways than as entry parms, $

WARNING:TYPO_SPELLING: 'paramerters' may be misspelled - perhaps 'parameters'?
#959: FILE: kernel/timer.c:1020:
+// first parameter, where as other archs pass it as one of the paramerters.
                                                                ^^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: kernel/timer.c:1024:
+        NANOSLEEP_ENTRY(^Istruct timespec t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: kernel/timer.c:1024:
+        NANOSLEEP_ENTRY(^Istruct timespec t;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#965: FILE: kernel/timer.c:1024:
+        NANOSLEEP_ENTRY(	struct timespec t;

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: kernel/timer.c:1025:
+                                unsigned long expire;)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: kernel/timer.c:1025:
+                                unsigned long expire;)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#968: FILE: kernel/timer.c:1027:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: kernel/timer.c:1028:
+                // The following code expects rqtp, rmtp to be available as a result of$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: kernel/timer.c:1029:
+                // the above macro.  Also any regs needed for the _do_signal() macro $

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: kernel/timer.c:1029:
+                // the above macro.  Also any regs needed for the _do_signal() macro $

WARNING:TYPO_SPELLING: 'shoule' may be misspelled - perhaps 'should'?
#971: FILE: kernel/timer.c:1030:
+                // shoule be set up here.
                    ^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: kernel/timer.c:1030:
+                // shoule be set up here.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#973: FILE: kernel/timer.c:1032:
+                //asmlinkage long sys_nanosleep(struct timespec *rqtp, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: kernel/timer.c:1032:
+                //asmlinkage long sys_nanosleep(struct timespec *rqtp, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: kernel/timer.c:1033:
+                //  struct timespec *rmtp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#975: FILE: kernel/timer.c:1034:
+                //  {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#976: FILE: kernel/timer.c:1035:
+                //    struct timespec t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: kernel/timer.c:1036:
+                //    unsigned long expire;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: kernel/timer.c:1047:
+                current->state = TASK_INTERRUPTIBLE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: kernel/timer.c:1047:
+                current->state = TASK_INTERRUPTIBLE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: kernel/timer.c:1048:
+        } while((expire = schedule_timeout(expire)) && !_do_signal());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: kernel/timer.c:1048:
+        } while((expire = schedule_timeout(expire)) && !_do_signal());$

ERROR:SPACING: space required before the open parenthesis '('
#989: FILE: kernel/timer.c:1048:
+        } while((expire = schedule_timeout(expire)) && !_do_signal());

ERROR:SPACING: space prohibited after that open parenthesis '('
#1001: FILE: net/ipv4/inetpeer.c:101:
+	TIMER_INIT( &peer_check_expire );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1001: FILE: net/ipv4/inetpeer.c:101:
+	TIMER_INIT( &peer_check_expire );

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429440.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 304 errors, 155 warnings, 23 checks, 889 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429440.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
