WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
the next few(up to the requested size and not beyond the reservation window)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#71: FILE: fs/ext3/balloc.c:722:
+	while (num < *count && goal < end
+		&& ext3_test_allocatable(goal, bitmap_bh)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#72: FILE: fs/ext3/balloc.c:723:
+		&& ext3_test_allocatable(goal, bitmap_bh)
+		&& claim_block(sb_bgl_lock(EXT3_SB(sb), group), goal, bitmap_bh)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: fs/ext3/balloc.c:1069:
+		ret = ext3_try_to_allocate(sb, handle, group, bitmap_bh,
+						goal, count, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: fs/ext3/balloc.c:1175:
+int ext3_new_blocks(handle_t *handle, struct inode *inode,
+			unsigned long goal, unsigned long *count, int *errp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: fs/ext3/balloc.c:1429:
+int ext3_new_block(handle_t *handle, struct inode *inode,
+			unsigned long goal, int *errp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#202: FILE: include/linux/ext3_fs.h:736:
+extern int ext3_new_blocks (handle_t *, struct inode *, unsigned long,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#202: FILE: include/linux/ext3_fs.h:736:
+extern int ext3_new_blocks (handle_t *, struct inode *, unsigned long,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#202: FILE: include/linux/ext3_fs.h:736:
+extern int ext3_new_blocks (handle_t *, struct inode *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#202: FILE: include/linux/ext3_fs.h:736:
+extern int ext3_new_blocks (handle_t *, struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#202: FILE: include/linux/ext3_fs.h:736:
+extern int ext3_new_blocks (handle_t *, struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#202: FILE: include/linux/ext3_fs.h:736:
+extern int ext3_new_blocks (handle_t *, struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#202: FILE: include/linux/ext3_fs.h:736:
+extern int ext3_new_blocks (handle_t *, struct inode *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: include/linux/ext3_fs.h:737:
+extern int ext3_new_blocks (handle_t *, struct inode *, unsigned long,
+			unsigned long *, int *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000117182.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 7 checks, 141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000117182.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
