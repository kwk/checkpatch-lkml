WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
diff -uNr linux-2.4.21.vanilla/arch/i386/config.in linux-2.4.21.patched/arch/i386/config.in

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#147: FILE: drivers/leds/kbeat_led.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#156: FILE: drivers/leds/kbeat_led.c:10:
+static unsigned char kbeat_state = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#160: FILE: drivers/leds/kbeat_led.c:14:
+static unsigned int kbeat_interval = HZ/2;
                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: drivers/leds/kbeat_led.c:17:
+kbeat_beat (unsigned long GoOnGccWarnMeThen)

CHECK:CAMELCASE: Avoid CamelCase: <GoOnGccWarnMeThen>
#163: FILE: drivers/leds/kbeat_led.c:17:
+kbeat_beat (unsigned long GoOnGccWarnMeThen)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/leds/kbeat_led.c:19:
+  kbeat_state = ~kbeat_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/leds/kbeat_led.c:20:
+  led_set (kbeat_led, kbeat_state, THIS_MODULE);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: drivers/leds/kbeat_led.c:20:
+  led_set (kbeat_led, kbeat_state, THIS_MODULE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/leds/kbeat_led.c:22:
+  kbeat_timer.expires=jiffies + kbeat_interval;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#168: FILE: drivers/leds/kbeat_led.c:22:
+  kbeat_timer.expires=jiffies + kbeat_interval;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/leds/kbeat_led.c:23:
+  kbeat_timer.function=kbeat_beat;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#169: FILE: drivers/leds/kbeat_led.c:23:
+  kbeat_timer.function=kbeat_beat;
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/leds/kbeat_led.c:24:
+  add_timer(&kbeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/leds/kbeat_led.c:30:
+  del_timer_sync (&kbeat_timer);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: drivers/leds/kbeat_led.c:30:
+  del_timer_sync (&kbeat_timer);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/leds/kbeat_led.c:31:
+  led_release(kbeat_led, THIS_MODULE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/leds/kbeat_led.c:37:
+  if (led_reserve(&kbeat_led, THIS_MODULE) == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#183: FILE: drivers/leds/kbeat_led.c:37:
+  if (led_reserve(&kbeat_led, THIS_MODULE) == 0)
+  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#183: FILE: drivers/leds/kbeat_led.c:37:
+  if (led_reserve(&kbeat_led, THIS_MODULE) == 0)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/leds/kbeat_led.c:38:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/leds/kbeat_led.c:39:
+    printk(KERN_INFO "kbeat_led: got LED %.8x\n", kbeat_led);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#185: FILE: drivers/leds/kbeat_led.c:39:
+    printk(KERN_INFO "kbeat_led: got LED %.8x\n", kbeat_led);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/leds/kbeat_led.c:40:
+    if ((kbeat_stps <= 0) || ((kbeat_interval = HZ/kbeat_stps) == 0))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#186: FILE: drivers/leds/kbeat_led.c:40:
+    if ((kbeat_stps <= 0) || ((kbeat_interval = HZ/kbeat_stps) == 0))
+      kbeat_interval = HZ/2;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#186: FILE: drivers/leds/kbeat_led.c:40:
+    if ((kbeat_stps <= 0) || ((kbeat_interval = HZ/kbeat_stps) == 0))
                                                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kbeat_stps <= 0'
#186: FILE: drivers/leds/kbeat_led.c:40:
+    if ((kbeat_stps <= 0) || ((kbeat_interval = HZ/kbeat_stps) == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#186: FILE: drivers/leds/kbeat_led.c:40:
+    if ((kbeat_stps <= 0) || ((kbeat_interval = HZ/kbeat_stps) == 0))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/leds/kbeat_led.c:41:
+      kbeat_interval = HZ/2;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#187: FILE: drivers/leds/kbeat_led.c:41:
+      kbeat_interval = HZ/2;
                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/leds/kbeat_led.c:42:
+    init_timer(&kbeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/leds/kbeat_led.c:43:
+    kbeat_timer.expires=jiffies + kbeat_interval;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#189: FILE: drivers/leds/kbeat_led.c:43:
+    kbeat_timer.expires=jiffies + kbeat_interval;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/leds/kbeat_led.c:44:
+    kbeat_timer.function=kbeat_beat;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#190: FILE: drivers/leds/kbeat_led.c:44:
+    kbeat_timer.function=kbeat_beat;
                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/leds/kbeat_led.c:45:
+    add_timer(&kbeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/leds/kbeat_led.c:46:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/leds/kbeat_led.c:47:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/leds/kbeat_led.c:48:
+  return -ENODEV;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: drivers/leds/kbeat_led.c:51:
+module_init (kbeat_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: drivers/leds/kbeat_led.c:52:
+module_exit (kbeat_exit);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#209: FILE: drivers/leds/leds.c:1:
+#include <linux/module.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#221: FILE: drivers/leds/leds.c:13:
+#include <asm/uaccess.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#228: FILE: drivers/leds/leds.c:20:
+static int have_devfs = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: drivers/leds/leds.c:23:
+del_all_owned_by_pid (pid_t who, struct linux_leds_info *leds)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/leds/leds.c:25:
+  int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: drivers/leds/leds.c:26:
+  int i;
+  if (leds->owners == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/leds/leds.c:26:
+  if (leds->owners == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#234: FILE: drivers/leds/leds.c:26:
+  if (leds->owners == NULL)
+    return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!leds->owners"
#234: FILE: drivers/leds/leds.c:26:
+  if (leds->owners == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/leds/leds.c:27:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/leds/leds.c:28:
+  for (i = 0 ; i < leds->count ; ++i)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#236: FILE: drivers/leds/leds.c:28:
+  for (i = 0 ; i < leds->count ; ++i)
+    if ((leds->owners[i].ownertype == leds_user) && (leds->owners[i].ownerdata.processdata.pid == who))

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#237: FILE: drivers/leds/leds.c:29:
+    if ((leds->owners[i].ownertype == leds_user) && (leds->owners[i].ownerdata.processdata.pid == who))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/leds/leds.c:29:
+    if ((leds->owners[i].ownertype == leds_user) && (leds->owners[i].ownerdata.processdata.pid == who))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#237: FILE: drivers/leds/leds.c:29:
+    if ((leds->owners[i].ownertype == leds_user) && (leds->owners[i].ownerdata.processdata.pid == who))
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#237: FILE: drivers/leds/leds.c:29:
+    if ((leds->owners[i].ownertype == leds_user) && (leds->owners[i].ownerdata.processdata.pid == who))
+    {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'leds->owners[i].ownertype == leds_user'
#237: FILE: drivers/leds/leds.c:29:
+    if ((leds->owners[i].ownertype == leds_user) && (leds->owners[i].ownerdata.processdata.pid == who))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'leds->owners[i].ownerdata.processdata.pid == who'
#237: FILE: drivers/leds/leds.c:29:
+    if ((leds->owners[i].ownertype == leds_user) && (leds->owners[i].ownerdata.processdata.pid == who))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/leds/leds.c:30:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/leds/leds.c:31:
+      leds->owners[i].ownertype = leds_noone;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/leds/leds.c:32:
+      leds->release(leds->data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/leds/leds.c:33:
+    }$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: drivers/leds/leds.c:37:
+release_all_owned_by_pid (pid_t pid)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/leds/leds.c:39:
+  struct list_head *hd;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: drivers/leds/leds.c:40:
+  struct list_head *hd;
+  write_lock(&led_list_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/leds/leds.c:40:
+  write_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/leds/leds.c:41:
+  hd = &led_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/leds/leds.c:42:
+  while (hd->next != &led_list)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#250: FILE: drivers/leds/leds.c:42:
+  while (hd->next != &led_list)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#250: FILE: drivers/leds/leds.c:42:
+  while (hd->next != &led_list)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/leds/leds.c:43:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/leds/leds.c:44:
+    hd = hd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/leds/leds.c:45:
+    del_all_owned_by_pid (pid, (struct linux_leds_info *)hd);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: drivers/leds/leds.c:45:
+    del_all_owned_by_pid (pid, (struct linux_leds_info *)hd);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/leds/leds.c:46:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/leds/leds.c:47:
+  write_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/leds/leds.c:53:
+  int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#262: FILE: drivers/leds/leds.c:54:
+  int i;
+  if (leds->owners == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/leds/leds.c:54:
+  if (leds->owners == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#262: FILE: drivers/leds/leds.c:54:
+  if (leds->owners == NULL)
+    return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!leds->owners"
#262: FILE: drivers/leds/leds.c:54:
+  if (leds->owners == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/leds/leds.c:55:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/leds/leds.c:56:
+  for (i = 0 ; i < leds->count ; ++i)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#264: FILE: drivers/leds/leds.c:56:
+  for (i = 0 ; i < leds->count ; ++i)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#264: FILE: drivers/leds/leds.c:56:
+  for (i = 0 ; i < leds->count ; ++i)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/leds/leds.c:57:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/leds/leds.c:58:
+    switch (who->ownertype)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#266: FILE: drivers/leds/leds.c:58:
+    switch (who->ownertype)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/leds/leds.c:59:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/leds/leds.c:60:
+      case leds_noone:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/leds/leds.c:62:
+      case leds_kernel:$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#271: FILE: drivers/leds/leds.c:63:
+	if (leds->owners[i].ownerdata.module == who->ownerdata.module)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#271: FILE: drivers/leds/leds.c:63:
+	if (leds->owners[i].ownerdata.module == who->ownerdata.module)
+	{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/leds/leds.c:69:
+      case leds_user:$

WARNING:LONG_LINE: line length of 171 exceeds 100 columns
#278: FILE: drivers/leds/leds.c:70:
+	if ((leds->owners[i].ownerdata.processdata.pid == who->ownerdata.processdata.pid) && (leds->owners[i].ownerdata.processdata.uid == who->ownerdata.processdata.uid))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#278: FILE: drivers/leds/leds.c:70:
+	if ((leds->owners[i].ownerdata.processdata.pid == who->ownerdata.processdata.pid) && (leds->owners[i].ownerdata.processdata.uid == who->ownerdata.processdata.uid))
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#278: FILE: drivers/leds/leds.c:70:
+	if ((leds->owners[i].ownerdata.processdata.pid == who->ownerdata.processdata.pid) && (leds->owners[i].ownerdata.processdata.uid == who->ownerdata.processdata.uid))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'leds->owners[i].ownerdata.processdata.pid == who->ownerdata.processdata.pid'
#278: FILE: drivers/leds/leds.c:70:
+	if ((leds->owners[i].ownerdata.processdata.pid == who->ownerdata.processdata.pid) && (leds->owners[i].ownerdata.processdata.uid == who->ownerdata.processdata.uid))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'leds->owners[i].ownerdata.processdata.uid == who->ownerdata.processdata.uid'
#278: FILE: drivers/leds/leds.c:70:
+	if ((leds->owners[i].ownerdata.processdata.pid == who->ownerdata.processdata.pid) && (leds->owners[i].ownerdata.processdata.uid == who->ownerdata.processdata.uid))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/leds/leds.c:75:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: drivers/leds/leds.c:76:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/leds/leds.c:82:
+  struct list_head *hd;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: drivers/leds/leds.c:83:
+  struct list_head *hd;
+  write_lock(&led_list_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/leds/leds.c:83:
+  write_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/leds/leds.c:84:
+  hd = &led_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/leds/leds.c:85:
+  while (hd->next != &led_list)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#293: FILE: drivers/leds/leds.c:85:
+  while (hd->next != &led_list)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#293: FILE: drivers/leds/leds.c:85:
+  while (hd->next != &led_list)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/leds/leds.c:86:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/leds/leds.c:87:
+    hd = hd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: drivers/leds/leds.c:88:
+    del_all_owned_by (pid, (struct linux_leds_info *)hd);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: drivers/leds/leds.c:88:
+    del_all_owned_by (pid, (struct linux_leds_info *)hd);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/leds/leds.c:89:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/leds/leds.c:90:
+  write_unlock(&led_list_lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: drivers/leds/leds.c:93:
+int leds_read_proc (char *buf, char **start, off_t offset, int count, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/leds/leds.c:95:
+  int len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/leds/leds.c:96:
+  int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/leds/leds.c:97:
+  int id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/leds/leds.c:98:
+  struct list_head *hd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/leds/leds.c:99:
+  *start=buf;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#307: FILE: drivers/leds/leds.c:99:
+  *start=buf;
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/leds/leds.c:100:
+  if (offset == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#308: FILE: drivers/leds/leds.c:100:
+  if (offset == 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#308: FILE: drivers/leds/leds.c:100:
+  if (offset == 0)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/leds/leds.c:101:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/leds/leds.c:102:
+    len += sprintf (buf+len, "LED ID:           PID/Module Name:  UID:              \n");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: drivers/leds/leds.c:102:
+    len += sprintf (buf+len, "LED ID:           PID/Module Name:  UID:              \n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#310: FILE: drivers/leds/leds.c:102:
+    len += sprintf (buf+len, "LED ID:           PID/Module Name:  UID:              \n");
                        ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#310: FILE: drivers/leds/leds.c:102:
+    len += sprintf (buf+len, "LED ID:           PID/Module Name:  UID:              \n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/leds/leds.c:103:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/leds/leds.c:104:
+  else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#312: FILE: drivers/leds/leds.c:104:
+  else
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#312: FILE: drivers/leds/leds.c:104:
+  else
+  {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#312: FILE: drivers/leds/leds.c:104:
+  }
+  else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/leds/leds.c:105:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/leds/leds.c:106:
+    offset /= 55;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/leds/leds.c:107:
+    --offset; /* The header -- almost forgot ;-) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/leds/leds.c:108:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: drivers/leds/leds.c:109:
+  read_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: drivers/leds/leds.c:110:
+  hd = &led_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/leds/leds.c:111:
+  while ((hd->next != &led_list) && ( len + 55 <= count))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#319: FILE: drivers/leds/leds.c:111:
+  while ((hd->next != &led_list) && ( len + 55 <= count))
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#319: FILE: drivers/leds/leds.c:111:
+  while ((hd->next != &led_list) && ( len + 55 <= count))
+  {

ERROR:SPACING: space prohibited after that open parenthesis '('
#319: FILE: drivers/leds/leds.c:111:
+  while ((hd->next != &led_list) && ( len + 55 <= count))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/leds/leds.c:112:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/leds/leds.c:113:
+    hd = hd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/leds/leds.c:114:
+    if (((struct linux_leds_info *)hd)->count < offset)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#322: FILE: drivers/leds/leds.c:114:
+    if (((struct linux_leds_info *)hd)->count < offset)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#322: FILE: drivers/leds/leds.c:114:
+    if (((struct linux_leds_info *)hd)->count < offset)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: drivers/leds/leds.c:115:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: drivers/leds/leds.c:116:
+      offset -=((struct linux_leds_info *)hd)->count;$

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#324: FILE: drivers/leds/leds.c:116:
+      offset -=((struct linux_leds_info *)hd)->count;
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/leds/leds.c:117:
+      continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/leds/leds.c:118:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: drivers/leds/leds.c:119:
+    for (i=0 ; i < ((struct linux_leds_info *)hd)->count ; ++i)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#327: FILE: drivers/leds/leds.c:119:
+    for (i=0 ; i < ((struct linux_leds_info *)hd)->count ; ++i)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#327: FILE: drivers/leds/leds.c:119:
+    for (i=0 ; i < ((struct linux_leds_info *)hd)->count ; ++i)
+    {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#327: FILE: drivers/leds/leds.c:119:
+    for (i=0 ; i < ((struct linux_leds_info *)hd)->count ; ++i)
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/leds/leds.c:120:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/leds/leds.c:121:
+      if (i >= offset)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#329: FILE: drivers/leds/leds.c:121:
+      if (i >= offset)
+      {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/leds/leds.c:122:
+      {$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#331: FILE: drivers/leds/leds.c:123:
+	if ( len + 55 > count)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#331: FILE: drivers/leds/leds.c:123:
+	if ( len + 55 > count)
+	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#331: FILE: drivers/leds/leds.c:123:
+	if ( len + 55 > count)

WARNING:TABSTOP: Statements should start on a tabstop
#334: FILE: drivers/leds/leds.c:126:
+	  return len;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: drivers/leds/leds.c:131:
+	len += sprintf (buf+len, "%.16X  ", id);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#339: FILE: drivers/leds/leds.c:131:
+	len += sprintf (buf+len, "%.16X  ", id);
 	                   ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#340: FILE: drivers/leds/leds.c:132:
+	if (((struct linux_leds_info *)hd)->owners == NULL)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#340: FILE: drivers/leds/leds.c:132:
+	if (((struct linux_leds_info *)hd)->owners == NULL)
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!owners"
#340: FILE: drivers/leds/leds.c:132:
+	if (((struct linux_leds_info *)hd)->owners == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#342: FILE: drivers/leds/leds.c:134:
+	  len += sprintf (buf+len, "Not allocated                       \n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#342: FILE: drivers/leds/leds.c:134:
+	  len += sprintf (buf+len, "Not allocated                       \n");
 	                     ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#342: FILE: drivers/leds/leds.c:134:
+	  len += sprintf (buf+len, "Not allocated                       \n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#344: FILE: drivers/leds/leds.c:136:
+	else if (((struct linux_leds_info *)hd)->owners[i].ownertype == leds_noone)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#344: FILE: drivers/leds/leds.c:136:
+	else if (((struct linux_leds_info *)hd)->owners[i].ownertype == leds_noone)
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#344: FILE: drivers/leds/leds.c:136:
+	}
+	else if (((struct linux_leds_info *)hd)->owners[i].ownertype == leds_noone)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#346: FILE: drivers/leds/leds.c:138:
+	  len += sprintf (buf+len, "Not allocated                       \n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#346: FILE: drivers/leds/leds.c:138:
+	  len += sprintf (buf+len, "Not allocated                       \n");
 	                     ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#346: FILE: drivers/leds/leds.c:138:
+	  len += sprintf (buf+len, "Not allocated                       \n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#348: FILE: drivers/leds/leds.c:140:
+	else if (((struct linux_leds_info *)hd)->owners[i].ownertype == leds_kernel)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#348: FILE: drivers/leds/leds.c:140:
+	else if (((struct linux_leds_info *)hd)->owners[i].ownertype == leds_kernel)
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#348: FILE: drivers/leds/leds.c:140:
+	}
+	else if (((struct linux_leds_info *)hd)->owners[i].ownertype == leds_kernel)

WARNING:TABSTOP: Statements should start on a tabstop
#350: FILE: drivers/leds/leds.c:142:
+	  int c;

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#351: FILE: drivers/leds/leds.c:143:
+	  c = sprintf (buf+len, "%.36s", ((struct linux_leds_info *)hd)->owners[i].ownerdata.module->name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#351: FILE: drivers/leds/leds.c:143:
+	  int c;
+	  c = sprintf (buf+len, "%.36s", ((struct linux_leds_info *)hd)->owners[i].ownerdata.module->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: drivers/leds/leds.c:143:
+	  c = sprintf (buf+len, "%.36s", ((struct linux_leds_info *)hd)->owners[i].ownerdata.module->name);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#351: FILE: drivers/leds/leds.c:143:
+	  c = sprintf (buf+len, "%.36s", ((struct linux_leds_info *)hd)->owners[i].ownerdata.module->name);
 	                  ^

WARNING:TABSTOP: Statements should start on a tabstop
#353: FILE: drivers/leds/leds.c:145:
+	  while (c < 36)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#353: FILE: drivers/leds/leds.c:145:
+	  while (c < 36)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#353: FILE: drivers/leds/leds.c:145:
+	  while (c < 36)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#354: FILE: drivers/leds/leds.c:146:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#355: FILE: drivers/leds/leds.c:147:
+	    len += sprintf (buf+len, " ");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#355: FILE: drivers/leds/leds.c:147:
+	    len += sprintf (buf+len, " ");
 	                       ^

WARNING:TABSTOP: Statements should start on a tabstop
#357: FILE: drivers/leds/leds.c:149:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: drivers/leds/leds.c:150:
+	  len += sprintf (buf+len, "\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#358: FILE: drivers/leds/leds.c:150:
+	  len += sprintf (buf+len, "\n");
 	                     ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#360: FILE: drivers/leds/leds.c:152:
+	else if (((struct linux_leds_info *)hd)->owners[i].ownertype == leds_user)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#360: FILE: drivers/leds/leds.c:152:
+	else if (((struct linux_leds_info *)hd)->owners[i].ownertype == leds_user)
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#360: FILE: drivers/leds/leds.c:152:
+	}
+	else if (((struct linux_leds_info *)hd)->owners[i].ownertype == leds_user)

WARNING:TABSTOP: Statements should start on a tabstop
#362: FILE: drivers/leds/leds.c:154:
+	  int c;

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#363: FILE: drivers/leds/leds.c:155:
+	  c = sprintf (buf+len, "%-16u", ((struct linux_leds_info *)hd)->owners[i].ownerdata.processdata.pid);

WARNING:LINE_SPACING: Missing a blank line after declarations
#363: FILE: drivers/leds/leds.c:155:
+	  int c;
+	  c = sprintf (buf+len, "%-16u", ((struct linux_leds_info *)hd)->owners[i].ownerdata.processdata.pid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#363: FILE: drivers/leds/leds.c:155:
+	  c = sprintf (buf+len, "%-16u", ((struct linux_leds_info *)hd)->owners[i].ownerdata.processdata.pid);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#363: FILE: drivers/leds/leds.c:155:
+	  c = sprintf (buf+len, "%-16u", ((struct linux_leds_info *)hd)->owners[i].ownerdata.processdata.pid);
 	                  ^

WARNING:TABSTOP: Statements should start on a tabstop
#365: FILE: drivers/leds/leds.c:157:
+	  while (c < 18)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#365: FILE: drivers/leds/leds.c:157:
+	  while (c < 18)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#365: FILE: drivers/leds/leds.c:157:
+	  while (c < 18)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#366: FILE: drivers/leds/leds.c:158:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#367: FILE: drivers/leds/leds.c:159:
+	    len += sprintf (buf+len, " ");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#367: FILE: drivers/leds/leds.c:159:
+	    len += sprintf (buf+len, " ");
 	                       ^

WARNING:TABSTOP: Statements should start on a tabstop
#369: FILE: drivers/leds/leds.c:161:
+	  }

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#370: FILE: drivers/leds/leds.c:162:
+	  c = sprintf (buf+len, "%-16u", ((struct linux_leds_info *)hd)->owners[i].ownerdata.processdata.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: drivers/leds/leds.c:162:
+	  c = sprintf (buf+len, "%-16u", ((struct linux_leds_info *)hd)->owners[i].ownerdata.processdata.uid);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#370: FILE: drivers/leds/leds.c:162:
+	  c = sprintf (buf+len, "%-16u", ((struct linux_leds_info *)hd)->owners[i].ownerdata.processdata.uid);
 	                  ^

WARNING:TABSTOP: Statements should start on a tabstop
#372: FILE: drivers/leds/leds.c:164:
+	  while (c < 18)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#372: FILE: drivers/leds/leds.c:164:
+	  while (c < 18)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#372: FILE: drivers/leds/leds.c:164:
+	  while (c < 18)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#373: FILE: drivers/leds/leds.c:165:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#374: FILE: drivers/leds/leds.c:166:
+	    len += sprintf (buf+len, " ");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#374: FILE: drivers/leds/leds.c:166:
+	    len += sprintf (buf+len, " ");
 	                       ^

WARNING:TABSTOP: Statements should start on a tabstop
#376: FILE: drivers/leds/leds.c:168:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: drivers/leds/leds.c:169:
+	  len += sprintf (buf+len, "\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#377: FILE: drivers/leds/leds.c:169:
+	  len += sprintf (buf+len, "\n");
 	                     ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#379: FILE: drivers/leds/leds.c:171:
+	else
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#379: FILE: drivers/leds/leds.c:171:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#379: FILE: drivers/leds/leds.c:171:
+	}
+	else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#381: FILE: drivers/leds/leds.c:173:
+	  len += sprintf (buf+len,"Corrupted structure encountered     \n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#381: FILE: drivers/leds/leds.c:173:
+	  len += sprintf (buf+len,"Corrupted structure encountered     \n");
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: drivers/leds/leds.c:173:
+	  len += sprintf (buf+len,"Corrupted structure encountered     \n");
 	                         ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#381: FILE: drivers/leds/leds.c:173:
+	  len += sprintf (buf+len,"Corrupted structure encountered     \n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/leds/leds.c:175:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/leds/leds.c:176:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/leds/leds.c:177:
+    offset = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/leds/leds.c:178:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/leds/leds.c:179:
+  read_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/leds/leds.c:180:
+  *eof = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/leds/leds.c:181:
+  return len;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#393: FILE: drivers/leds/leds.c:185:
+leds_add (struct linux_leds_info *leds)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/leds/leds.c:187:
+  struct list_head *hd;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#396: FILE: drivers/leds/leds.c:188:
+  struct list_head *hd;
+  MOD_INC_USE_COUNT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/leds/leds.c:188:
+  MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/leds/leds.c:189:
+  INIT_LIST_HEAD(&leds->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/leds/leds.c:190:
+  leds->owners=NULL;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#398: FILE: drivers/leds/leds.c:190:
+  leds->owners=NULL;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/leds/leds.c:191:
+  leds->id=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#399: FILE: drivers/leds/leds.c:191:
+  leds->id=0;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/leds/leds.c:192:
+  write_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/leds/leds.c:193:
+  hd = &led_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/leds/leds.c:194:
+  while (hd->next != &led_list)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#402: FILE: drivers/leds/leds.c:194:
+  while (hd->next != &led_list)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#402: FILE: drivers/leds/leds.c:194:
+  while (hd->next != &led_list)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/leds/leds.c:195:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/leds/leds.c:196:
+    hd = hd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/leds/leds.c:197:
+    if (leds->id < ((struct linux_leds_info *)hd)->id)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#405: FILE: drivers/leds/leds.c:197:
+    if (leds->id < ((struct linux_leds_info *)hd)->id)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#405: FILE: drivers/leds/leds.c:197:
+    if (leds->id < ((struct linux_leds_info *)hd)->id)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/leds/leds.c:198:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/leds/leds.c:199:
+      list_add_tail(&leds->list, hd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/leds/leds.c:200:
+      write_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/leds/leds.c:201:
+      return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/leds/leds.c:202:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/leds/leds.c:203:
+    ++leds->id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/leds/leds.c:204:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/leds/leds.c:205:
+  list_add_tail(&leds->list, &led_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/leds/leds.c:206:
+  write_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/leds/leds.c:207:
+  return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: drivers/leds/leds.c:211:
+leds_del (struct linux_leds_info *leds)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/leds/leds.c:213:
+  MOD_DEC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/leds/leds.c:214:
+  write_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/leds/leds.c:215:
+  list_del (&leds->list);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#423: FILE: drivers/leds/leds.c:215:
+  list_del (&leds->list);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/leds/leds.c:216:
+  write_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/leds/leds.c:217:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/leds/leds.c:223:
+  unsigned int cnt = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/leds/leds.c:224:
+  struct list_head *hd;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#433: FILE: drivers/leds/leds.c:225:
+  struct list_head *hd;
+  read_lock(&led_list_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/leds/leds.c:225:
+  read_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/leds/leds.c:226:
+  hd = &led_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/leds/leds.c:227:
+  while (hd->next != &led_list)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#435: FILE: drivers/leds/leds.c:227:
+  while (hd->next != &led_list)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#435: FILE: drivers/leds/leds.c:227:
+  while (hd->next != &led_list)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/leds/leds.c:228:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/leds/leds.c:229:
+    hd = hd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/leds/leds.c:230:
+    cnt += ((struct linux_leds_info *)hd)->count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/leds/leds.c:231:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/leds/leds.c:232:
+  read_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/leds/leds.c:233:
+  return cnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/leds/leds.c:239:
+  if (leds->owners == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#447: FILE: drivers/leds/leds.c:239:
+  if (leds->owners == NULL)
+    return -EBUSY;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!leds->owners"
#447: FILE: drivers/leds/leds.c:239:
+  if (leds->owners == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/leds/leds.c:240:
+    return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/leds/leds.c:241:
+  if (leds->owners[idx].ownertype == leds_noone)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#449: FILE: drivers/leds/leds.c:241:
+  if (leds->owners[idx].ownertype == leds_noone)
+    return -EBUSY;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/leds/leds.c:242:
+    return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: drivers/leds/leds.c:243:
+  if (leds->owners[idx].ownertype != who->ownertype)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#451: FILE: drivers/leds/leds.c:243:
+  if (leds->owners[idx].ownertype != who->ownertype)
+    return -EPERM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/leds/leds.c:244:
+    return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/leds/leds.c:245:
+  switch (who->ownertype)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#453: FILE: drivers/leds/leds.c:245:
+  switch (who->ownertype)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/leds/leds.c:246:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/leds/leds.c:247:
+    case leds_noone:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/leds/leds.c:248:
+      return -EBADFD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/leds/leds.c:249:
+    case leds_user:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/leds/leds.c:250:
+      if (leds->owners[idx].ownerdata.processdata.pid != who->ownerdata.processdata.pid)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/leds/leds.c:252:
+      leds->owners[idx].ownertype = leds_noone;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/leds/leds.c:253:
+      return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/leds/leds.c:254:
+    case leds_kernel:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/leds/leds.c:255:
+      if (leds->owners[idx].ownerdata.module != who->ownerdata.module)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/leds/leds.c:257:
+      leds->owners[idx].ownertype = leds_noone;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/leds/leds.c:258:
+      return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/leds/leds.c:259:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/leds/leds.c:260:
+  return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/leds/leds.c:266:
+  if (leds->owners == NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#474: FILE: drivers/leds/leds.c:266:
+  if (leds->owners == NULL)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#474: FILE: drivers/leds/leds.c:266:
+  if (leds->owners == NULL)
+  {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!leds->owners"
#474: FILE: drivers/leds/leds.c:266:
+  if (leds->owners == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/leds/leds.c:267:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/leds/leds.c:268:
+    int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#477: FILE: drivers/leds/leds.c:269:
+    int i;
+    leds->owners = kmalloc (leds->count * sizeof(struct led_owner), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: drivers/leds/leds.c:269:
+    leds->owners = kmalloc (leds->count * sizeof(struct led_owner), GFP_KERNEL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#477: FILE: drivers/leds/leds.c:269:
+    leds->owners = kmalloc (leds->count * sizeof(struct led_owner), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#477: FILE: drivers/leds/leds.c:269:
+    leds->owners = kmalloc (leds->count * sizeof(struct led_owner), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/leds/leds.c:270:
+    if (leds->owners == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#478: FILE: drivers/leds/leds.c:270:
+    if (leds->owners == NULL)
+      return -ENOMEM;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!leds->owners"
#478: FILE: drivers/leds/leds.c:270:
+    if (leds->owners == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/leds/leds.c:271:
+      return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: drivers/leds/leds.c:272:
+    for (i = 0 ; i < leds->count ; ++i)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#480: FILE: drivers/leds/leds.c:272:
+    for (i = 0 ; i < leds->count ; ++i)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#480: FILE: drivers/leds/leds.c:272:
+    for (i = 0 ; i < leds->count ; ++i)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: drivers/leds/leds.c:273:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: drivers/leds/leds.c:274:
+      leds->owners[i].ownertype = leds_noone;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/leds/leds.c:275:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: drivers/leds/leds.c:276:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: drivers/leds/leds.c:277:
+  if (leds->owners[idx].ownertype == leds_noone)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#485: FILE: drivers/leds/leds.c:277:
+  if (leds->owners[idx].ownertype == leds_noone)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#485: FILE: drivers/leds/leds.c:277:
+  if (leds->owners[idx].ownertype == leds_noone)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/leds/leds.c:278:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/leds/leds.c:279:
+    leds->owners[idx].ownertype = who->ownertype;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/leds/leds.c:280:
+    switch (who->ownertype)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#488: FILE: drivers/leds/leds.c:280:
+    switch (who->ownertype)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/leds/leds.c:281:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: drivers/leds/leds.c:282:
+      case leds_noone:$

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#492: FILE: drivers/leds/leds.c:284:
+	return -EBADFD;
+	break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/leds/leds.c:285:
+      case leds_user:$

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#497: FILE: drivers/leds/leds.c:289:
+	return 0;
+	break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/leds/leds.c:290:
+      case leds_kernel:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: drivers/leds/leds.c:293:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: drivers/leds/leds.c:294:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/leds/leds.c:295:
+  return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: drivers/leds/leds.c:301:
+  int ret = -EBUSY;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#510: FILE: drivers/leds/leds.c:302:
+  int ret = -EBUSY;
+  read_lock(&led_list_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/leds/leds.c:302:
+  read_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/leds/leds.c:303:
+  if (leds->owners == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#511: FILE: drivers/leds/leds.c:303:
+  if (leds->owners == NULL)
+    ret = 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!leds->owners"
#511: FILE: drivers/leds/leds.c:303:
+  if (leds->owners == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/leds/leds.c:304:
+    ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/leds/leds.c:305:
+  if (leds->owners[idx].ownertype == who->ownertype)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#513: FILE: drivers/leds/leds.c:305:
+  if (leds->owners[idx].ownertype == who->ownertype)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#513: FILE: drivers/leds/leds.c:305:
+  if (leds->owners[idx].ownertype == who->ownertype)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/leds/leds.c:306:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: drivers/leds/leds.c:307:
+    switch (who->ownertype)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#515: FILE: drivers/leds/leds.c:307:
+    switch (who->ownertype)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: drivers/leds/leds.c:308:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: drivers/leds/leds.c:309:
+      case leds_noone:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: drivers/leds/leds.c:311:
+      case leds_user:$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#520: FILE: drivers/leds/leds.c:312:
+	if (leds->owners[idx].ownerdata.processdata.pid != who->ownerdata.processdata.pid)
+	  break;

WARNING:TABSTOP: Statements should start on a tabstop
#521: FILE: drivers/leds/leds.c:313:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: drivers/leds/leds.c:316:
+      case leds_kernel:$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#525: FILE: drivers/leds/leds.c:317:
+	if (leds->owners[idx].ownerdata.module != who->ownerdata.module)
+	  break;

WARNING:TABSTOP: Statements should start on a tabstop
#526: FILE: drivers/leds/leds.c:318:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/leds/leds.c:320:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: drivers/leds/leds.c:321:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: drivers/leds/leds.c:322:
+  read_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/leds/leds.c:323:
+  return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/leds/leds.c:329:
+  struct list_head *hd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/leds/leds.c:330:
+  int tmp;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#539: FILE: drivers/leds/leds.c:331:
+  int tmp;
+  write_lock(&led_list_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/leds/leds.c:331:
+  write_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: drivers/leds/leds.c:332:
+  hd = &led_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/leds/leds.c:333:
+  while (hd->next != &led_list)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#541: FILE: drivers/leds/leds.c:333:
+  while (hd->next != &led_list)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#541: FILE: drivers/leds/leds.c:333:
+  while (hd->next != &led_list)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: drivers/leds/leds.c:334:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: drivers/leds/leds.c:335:
+    hd = hd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/leds/leds.c:336:
+    if (((which >> 24) & 0xff) == ((struct linux_leds_info *)hd)->id)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#544: FILE: drivers/leds/leds.c:336:
+    if (((which >> 24) & 0xff) == ((struct linux_leds_info *)hd)->id)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#544: FILE: drivers/leds/leds.c:336:
+    if (((which >> 24) & 0xff) == ((struct linux_leds_info *)hd)->id)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: drivers/leds/leds.c:337:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: drivers/leds/leds.c:338:
+      if ((tmp = del_led_owner(who, which & 0xffffff, (struct linux_leds_info *)hd)) == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#546: FILE: drivers/leds/leds.c:338:
+      if ((tmp = del_led_owner(who, which & 0xffffff, (struct linux_leds_info *)hd)) == 0)
+      {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#546: FILE: drivers/leds/leds.c:338:
+      if ((tmp = del_led_owner(who, which & 0xffffff, (struct linux_leds_info *)hd)) == 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/leds/leds.c:339:
+      {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/leds/leds.c:341:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: drivers/leds/leds.c:342:
+      write_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: drivers/leds/leds.c:343:
+      return tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: drivers/leds/leds.c:344:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: drivers/leds/leds.c:345:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: drivers/leds/leds.c:346:
+  write_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/leds/leds.c:347:
+  return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: drivers/leds/leds.c:353:
+  struct list_head *hd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/leds/leds.c:354:
+  int tmp;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#563: FILE: drivers/leds/leds.c:355:
+  int tmp;
+  write_lock(&led_list_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: drivers/leds/leds.c:355:
+  write_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: drivers/leds/leds.c:356:
+  hd = &led_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/leds/leds.c:357:
+  while (hd->next != &led_list)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#565: FILE: drivers/leds/leds.c:357:
+  while (hd->next != &led_list)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#565: FILE: drivers/leds/leds.c:357:
+  while (hd->next != &led_list)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: drivers/leds/leds.c:358:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: drivers/leds/leds.c:359:
+    int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#568: FILE: drivers/leds/leds.c:360:
+    int i;
+    hd = hd->next;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: drivers/leds/leds.c:360:
+    hd = hd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: drivers/leds/leds.c:361:
+    for (i=0 ; i < ((struct linux_leds_info *)hd)->count ; ++i)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#569: FILE: drivers/leds/leds.c:361:
+    for (i=0 ; i < ((struct linux_leds_info *)hd)->count ; ++i)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#569: FILE: drivers/leds/leds.c:361:
+    for (i=0 ; i < ((struct linux_leds_info *)hd)->count ; ++i)
+    {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#569: FILE: drivers/leds/leds.c:361:
+    for (i=0 ; i < ((struct linux_leds_info *)hd)->count ; ++i)
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: drivers/leds/leds.c:362:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: drivers/leds/leds.c:363:
+      if ((tmp = add_led_owner(who, i, (struct linux_leds_info *)hd)) == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#571: FILE: drivers/leds/leds.c:363:
+      if ((tmp = add_led_owner(who, i, (struct linux_leds_info *)hd)) == 0)
+      {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#571: FILE: drivers/leds/leds.c:363:
+      if ((tmp = add_led_owner(who, i, (struct linux_leds_info *)hd)) == 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: drivers/leds/leds.c:364:
+      {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: drivers/leds/leds.c:371:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: drivers/leds/leds.c:372:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: drivers/leds/leds.c:373:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: drivers/leds/leds.c:374:
+  write_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/leds/leds.c:375:
+  return -ENODEV;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#587: FILE: drivers/leds/leds.c:379:
+led_set_real (struct led_owner *who, unsigned int which, unsigned char state)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/leds/leds.c:381:
+  struct list_head *hd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: drivers/leds/leds.c:382:
+  int ret;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#591: FILE: drivers/leds/leds.c:383:
+  int ret;
+  read_lock(&led_list_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: drivers/leds/leds.c:383:
+  read_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: drivers/leds/leds.c:384:
+  hd = &led_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: drivers/leds/leds.c:385:
+  if (state) state=~0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#593: FILE: drivers/leds/leds.c:385:
+  if (state) state=~0;
                   ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#593: FILE: drivers/leds/leds.c:385:
+  if (state) state=~0;
                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#593: FILE: drivers/leds/leds.c:385:
+  if (state) state=~0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: drivers/leds/leds.c:386:
+  while (hd->next != &led_list)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#594: FILE: drivers/leds/leds.c:386:
+  while (hd->next != &led_list)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#594: FILE: drivers/leds/leds.c:386:
+  while (hd->next != &led_list)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/leds/leds.c:387:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: drivers/leds/leds.c:388:
+    hd = hd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/leds/leds.c:389:
+    if (((which >> 24) & 0xff) == ((struct linux_leds_info *)hd)->id)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#597: FILE: drivers/leds/leds.c:389:
+    if (((which >> 24) & 0xff) == ((struct linux_leds_info *)hd)->id)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#597: FILE: drivers/leds/leds.c:389:
+    if (((which >> 24) & 0xff) == ((struct linux_leds_info *)hd)->id)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: drivers/leds/leds.c:390:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: drivers/leds/leds.c:391:
+      if ((which & 0xffffff) > ((struct linux_leds_info *)hd)->count)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#599: FILE: drivers/leds/leds.c:391:
+      if ((which & 0xffffff) > ((struct linux_leds_info *)hd)->count)
+      {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: drivers/leds/leds.c:392:
+      {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: drivers/leds/leds.c:395:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/leds/leds.c:396:
+      if ((ret = is_allowed(who, which & 0xffffff, (struct linux_leds_info *)hd)) == 0)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#604: FILE: drivers/leds/leds.c:396:
+      if ((ret = is_allowed(who, which & 0xffffff, (struct linux_leds_info *)hd)) == 0)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#605: FILE: drivers/leds/leds.c:397:
+	((struct linux_leds_info *)hd)->set_state(which & 0xffffff, state, ((struct linux_leds_info *)hd)->data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/leds/leds.c:398:
+      read_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/leds/leds.c:399:
+      return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: drivers/leds/leds.c:400:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: drivers/leds/leds.c:401:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: drivers/leds/leds.c:402:
+  read_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: drivers/leds/leds.c:403:
+  return -ENODEV;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#614: FILE: drivers/leds/leds.c:406:
+int led_release (unsigned int idx, struct module *mod)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/leds/leds.c:408:
+  struct led_owner a;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#617: FILE: drivers/leds/leds.c:409:
+  struct led_owner a;
+  a.ownertype = leds_kernel;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: drivers/leds/leds.c:409:
+  a.ownertype = leds_kernel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: drivers/leds/leds.c:410:
+  a.ownerdata.module = mod;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/leds/leds.c:411:
+  return led_release_real(&a, idx);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#622: FILE: drivers/leds/leds.c:414:
+int led_reserve (unsigned int *which, struct module *mod)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/leds/leds.c:416:
+  struct led_owner a;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#625: FILE: drivers/leds/leds.c:417:
+  struct led_owner a;
+  a.ownertype = leds_kernel;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: drivers/leds/leds.c:417:
+  a.ownertype = leds_kernel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: drivers/leds/leds.c:418:
+  a.ownerdata.module = mod;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: drivers/leds/leds.c:419:
+  return led_reserve_real(&a, which);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/leds/leds.c:425:
+  struct led_owner a;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#634: FILE: drivers/leds/leds.c:426:
+  struct led_owner a;
+  a.ownertype = leds_kernel;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: drivers/leds/leds.c:426:
+  a.ownertype = leds_kernel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: drivers/leds/leds.c:427:
+  a.ownerdata.module = mod;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/leds/leds.c:428:
+  return led_set_real(&a, idx, state);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: drivers/leds/leds.c:434:
+  struct list_head *hd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: drivers/leds/leds.c:435:
+  unsigned char state;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#644: FILE: drivers/leds/leds.c:436:
+  unsigned char state;
+  read_lock(&led_list_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: drivers/leds/leds.c:436:
+  read_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: drivers/leds/leds.c:437:
+  hd = &led_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: drivers/leds/leds.c:438:
+  while (hd->next != &led_list)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#646: FILE: drivers/leds/leds.c:438:
+  while (hd->next != &led_list)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#646: FILE: drivers/leds/leds.c:438:
+  while (hd->next != &led_list)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: drivers/leds/leds.c:439:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: drivers/leds/leds.c:440:
+    hd = hd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: drivers/leds/leds.c:441:
+    if (((which >> 24) & 0xff) == ((struct linux_leds_info *)hd)->id)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#649: FILE: drivers/leds/leds.c:441:
+    if (((which >> 24) & 0xff) == ((struct linux_leds_info *)hd)->id)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#649: FILE: drivers/leds/leds.c:441:
+    if (((which >> 24) & 0xff) == ((struct linux_leds_info *)hd)->id)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/leds/leds.c:442:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/leds/leds.c:443:
+      if ((which & 0xffffff) > ((struct linux_leds_info *)hd)->count)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#651: FILE: drivers/leds/leds.c:443:
+      if ((which & 0xffffff) > ((struct linux_leds_info *)hd)->count)
+      {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: drivers/leds/leds.c:444:
+      {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: drivers/leds/leds.c:447:
+      }$

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#656: FILE: drivers/leds/leds.c:448:
+      state = ((struct linux_leds_info *)hd)->get_state(which & 0xffffff, ((struct linux_leds_info *)hd)->data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: drivers/leds/leds.c:448:
+      state = ((struct linux_leds_info *)hd)->get_state(which & 0xffffff, ((struct linux_leds_info *)hd)->data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: drivers/leds/leds.c:449:
+      read_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: drivers/leds/leds.c:450:
+      if (state) state=~0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#658: FILE: drivers/leds/leds.c:450:
+      if (state) state=~0;
                       ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#658: FILE: drivers/leds/leds.c:450:
+      if (state) state=~0;
                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#658: FILE: drivers/leds/leds.c:450:
+      if (state) state=~0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: drivers/leds/leds.c:451:
+      return state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: drivers/leds/leds.c:452:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: drivers/leds/leds.c:453:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: drivers/leds/leds.c:454:
+  read_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: drivers/leds/leds.c:455:
+  return -ENODEV;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#667: FILE: drivers/leds/leds.c:459:
+leds_ioctl (struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)
                                               ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#667: FILE: drivers/leds/leds.c:459:
+leds_ioctl (struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: drivers/leds/leds.c:461:
+  unsigned int idx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: drivers/leds/leds.c:462:
+  unsigned char state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: drivers/leds/leds.c:463:
+  signed int tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: drivers/leds/leds.c:464:
+  struct led_owner a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: drivers/leds/leds.c:465:
+  pid_t pid;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#674: FILE: drivers/leds/leds.c:466:
+  pid_t pid;
+  if (MINOR(inode->i_rdev) != 0xff) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: drivers/leds/leds.c:466:
+  if (MINOR(inode->i_rdev) != 0xff) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#674: FILE: drivers/leds/leds.c:466:
+  if (MINOR(inode->i_rdev) != 0xff) {
+    return -ENOTTY;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#674: FILE: drivers/leds/leds.c:466:
+  if (MINOR(inode->i_rdev) != 0xff) {
+    return -ENOTTY;
+  }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: drivers/leds/leds.c:467:
+    return -ENOTTY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/leds/leds.c:468:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: drivers/leds/leds.c:469:
+  if (_IOC_TYPE(cmd) != LINUX_LEDS_IOC_MAGIC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#677: FILE: drivers/leds/leds.c:469:
+  if (_IOC_TYPE(cmd) != LINUX_LEDS_IOC_MAGIC) {
+    return -ENOTTY;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#677: FILE: drivers/leds/leds.c:469:
+  if (_IOC_TYPE(cmd) != LINUX_LEDS_IOC_MAGIC) {
+    return -ENOTTY;
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: drivers/leds/leds.c:470:
+    return -ENOTTY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: drivers/leds/leds.c:471:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: drivers/leds/leds.c:472:
+  if (_IOC_NR(cmd) > LINUX_LEDS_IOC_MAX_NR) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#680: FILE: drivers/leds/leds.c:472:
+  if (_IOC_NR(cmd) > LINUX_LEDS_IOC_MAX_NR) {
+    return -ENOTTY;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#680: FILE: drivers/leds/leds.c:472:
+  if (_IOC_NR(cmd) > LINUX_LEDS_IOC_MAX_NR) {
+    return -ENOTTY;
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: drivers/leds/leds.c:473:
+    return -ENOTTY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: drivers/leds/leds.c:474:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: drivers/leds/leds.c:475:
+  if ((_IOC_DIR(cmd) & _IOC_READ) && (!access_ok(VERIFY_WRITE, (void *)arg, _IOC_SIZE(cmd))))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#683: FILE: drivers/leds/leds.c:475:
+  if ((_IOC_DIR(cmd) & _IOC_READ) && (!access_ok(VERIFY_WRITE, (void *)arg, _IOC_SIZE(cmd))))
+    return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/leds/leds.c:476:
+    return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/leds/leds.c:477:
+  else if ((_IOC_DIR(cmd) & _IOC_WRITE) && (!access_ok(VERIFY_READ, (void *)arg, _IOC_SIZE(cmd))))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#685: FILE: drivers/leds/leds.c:477:
+  else if ((_IOC_DIR(cmd) & _IOC_WRITE) && (!access_ok(VERIFY_READ, (void *)arg, _IOC_SIZE(cmd))))
+    return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/leds/leds.c:478:
+    return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: drivers/leds/leds.c:479:
+  a.ownertype = leds_user;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: drivers/leds/leds.c:480:
+  a.ownerdata.processdata.pid = current->tgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: drivers/leds/leds.c:481:
+  a.ownerdata.processdata.uid = current->uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: drivers/leds/leds.c:482:
+  switch (cmd)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#690: FILE: drivers/leds/leds.c:482:
+  switch (cmd)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: drivers/leds/leds.c:483:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: drivers/leds/leds.c:484:
+    case LINUX_LEDS_IOC_COUNT_LEDS:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: drivers/leds/leds.c:485:
+      idx = leds_count();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: drivers/leds/leds.c:486:
+      __put_user(idx, (unsigned int *)arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: drivers/leds/leds.c:487:
+      return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: drivers/leds/leds.c:488:
+    case LINUX_LEDS_IOC_SET_LED:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: drivers/leds/leds.c:489:
+      __get_user (idx, &(((struct linux_leds *)arg)->idx));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#697: FILE: drivers/leds/leds.c:489:
+      __get_user (idx, &(((struct linux_leds *)arg)->idx));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: drivers/leds/leds.c:490:
+      __get_user (state, &(((struct linux_leds *)arg)->state));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#698: FILE: drivers/leds/leds.c:490:
+      __get_user (state, &(((struct linux_leds *)arg)->state));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: drivers/leds/leds.c:491:
+      return led_set_real (&a, idx, state);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#699: FILE: drivers/leds/leds.c:491:
+      return led_set_real (&a, idx, state);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/leds/leds.c:492:
+    case LINUX_LEDS_IOC_GET_LED:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: drivers/leds/leds.c:493:
+      __get_user (idx, &(((struct linux_leds *)arg)->idx));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#701: FILE: drivers/leds/leds.c:493:
+      __get_user (idx, &(((struct linux_leds *)arg)->idx));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: drivers/leds/leds.c:494:
+      tmp = led_get(idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: drivers/leds/leds.c:495:
+      if (tmp < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: drivers/leds/leds.c:497:
+      state = ((unsigned int)tmp) &0xff;$

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#705: FILE: drivers/leds/leds.c:497:
+      state = ((unsigned int)tmp) &0xff;
                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: drivers/leds/leds.c:498:
+      __put_user (state, &(((struct linux_leds *)arg)->state));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#706: FILE: drivers/leds/leds.c:498:
+      __put_user (state, &(((struct linux_leds *)arg)->state));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: drivers/leds/leds.c:499:
+      return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: drivers/leds/leds.c:500:
+    case LINUX_LEDS_IOC_RESERVE_LED:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/leds/leds.c:501:
+      tmp = led_reserve_real (&a, &idx);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#709: FILE: drivers/leds/leds.c:501:
+      tmp = led_reserve_real (&a, &idx);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: drivers/leds/leds.c:502:
+      __put_user (idx, (unsigned int *)arg);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#710: FILE: drivers/leds/leds.c:502:
+      __put_user (idx, (unsigned int *)arg);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: drivers/leds/leds.c:503:
+      return tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: drivers/leds/leds.c:504:
+    case LINUX_LEDS_IOC_RELEASE_LED:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: drivers/leds/leds.c:505:
+      __get_user (idx, (unsigned int *)arg);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#713: FILE: drivers/leds/leds.c:505:
+      __get_user (idx, (unsigned int *)arg);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: drivers/leds/leds.c:506:
+      return led_release_real (&a, idx);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#714: FILE: drivers/leds/leds.c:506:
+      return led_release_real (&a, idx);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: drivers/leds/leds.c:507:
+    case LINUX_LEDS_IOC_BREAK_LOCK:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: drivers/leds/leds.c:508:
+      __get_user (pid, (pid_t *)arg);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#716: FILE: drivers/leds/leds.c:508:
+      __get_user (pid, (pid_t *)arg);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/leds/leds.c:509:
+      if (!capable(CAP_DAC_OVERRIDE))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#717: FILE: drivers/leds/leds.c:509:
+      if (!capable(CAP_DAC_OVERRIDE))
+      {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: drivers/leds/leds.c:510:
+      {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#720: FILE: drivers/leds/leds.c:512:
+	release_all_owned_by (&a);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: drivers/leds/leds.c:513:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: drivers/leds/leds.c:514:
+      else$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#722: FILE: drivers/leds/leds.c:514:
+      }
+      else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: drivers/leds/leds.c:516:
+      return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: drivers/leds/leds.c:517:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: drivers/leds/leds.c:519:
+  return -ENOTTY;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#731: FILE: drivers/leds/leds.c:523:
+leds_open (struct inode *inode, struct file *filp)
                                              ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#731: FILE: drivers/leds/leds.c:523:
+leds_open (struct inode *inode, struct file *filp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: drivers/leds/leds.c:525:
+  if (MINOR(inode->i_rdev) != 0xff) return -ENODEV;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#733: FILE: drivers/leds/leds.c:525:
+  if (MINOR(inode->i_rdev) != 0xff) return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: drivers/leds/leds.c:526:
+  MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: drivers/leds/leds.c:527:
+  return 0;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#739: FILE: drivers/leds/leds.c:531:
+leds_release (struct inode *inode, struct file *filp)
                                                 ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#739: FILE: drivers/leds/leds.c:531:
+leds_release (struct inode *inode, struct file *filp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: drivers/leds/leds.c:533:
+  release_all_owned_by_pid (current->tgid);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#741: FILE: drivers/leds/leds.c:533:
+  release_all_owned_by_pid (current->tgid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: drivers/leds/leds.c:534:
+  MOD_DEC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: drivers/leds/leds.c:535:
+  return 0;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#746: FILE: drivers/leds/leds.c:538:
+struct file_operations leds_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#748: FILE: drivers/leds/leds.c:540:
+release: leds_release,
        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#749: FILE: drivers/leds/leds.c:541:
+ioctl: leds_ioctl,
      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#750: FILE: drivers/leds/leds.c:542:
+owner: THIS_MODULE,
      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#754: FILE: drivers/leds/leds.c:546:
+leds_exit (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: drivers/leds/leds.c:548:
+  remove_proc_entry("leds", NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: drivers/leds/leds.c:549:
+  if (have_devfs)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#757: FILE: drivers/leds/leds.c:549:
+  if (have_devfs)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#757: FILE: drivers/leds/leds.c:549:
+  if (have_devfs)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: drivers/leds/leds.c:550:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: drivers/leds/leds.c:551:
+    devfs_unregister (ledsctl);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#759: FILE: drivers/leds/leds.c:551:
+    devfs_unregister (ledsctl);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: drivers/leds/leds.c:552:
+    devfs_unregister (ledsdir);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#760: FILE: drivers/leds/leds.c:552:
+    devfs_unregister (ledsdir);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: drivers/leds/leds.c:553:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: drivers/leds/leds.c:554:
+  unregister_chrdev(leds_major_num, "leds");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#766: FILE: drivers/leds/leds.c:558:
+leds_init (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: drivers/leds/leds.c:560:
+  int maj;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#769: FILE: drivers/leds/leds.c:561:
+  int maj;
+  maj = register_chrdev(0, "leds", &leds_fops);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: drivers/leds/leds.c:561:
+  maj = register_chrdev(0, "leds", &leds_fops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: drivers/leds/leds.c:562:
+  if (maj < 0) return maj;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#770: FILE: drivers/leds/leds.c:562:
+  if (maj < 0) return maj;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: drivers/leds/leds.c:563:
+  leds_major_num = maj;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: drivers/leds/leds.c:564:
+  printk(KERN_NOTICE "leds: assigned major number %u\n", leds_major_num);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#772: FILE: drivers/leds/leds.c:564:
+  printk(KERN_NOTICE "leds: assigned major number %u\n", leds_major_num);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#773: FILE: drivers/leds/leds.c:565:
+  write_lock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: drivers/leds/leds.c:566:
+  INIT_LIST_HEAD(&led_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: drivers/leds/leds.c:567:
+  write_unlock(&led_list_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: drivers/leds/leds.c:568:
+  ledsdir = devfs_mk_dir (NULL, "leds", NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#776: FILE: drivers/leds/leds.c:568:
+  ledsdir = devfs_mk_dir (NULL, "leds", NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: drivers/leds/leds.c:569:
+  if (ledsdir != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#777: FILE: drivers/leds/leds.c:569:
+  if (ledsdir != NULL)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#777: FILE: drivers/leds/leds.c:569:
+  if (ledsdir != NULL)
+  {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ledsdir"
#777: FILE: drivers/leds/leds.c:569:
+  if (ledsdir != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: drivers/leds/leds.c:570:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: drivers/leds/leds.c:571:
+    have_devfs = 1;$

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#780: FILE: drivers/leds/leds.c:572:
+    ledsctl = devfs_register (ledsdir, "ctl", DEVFS_FL_DEFAULT, leds_major_num, 0xff, S_IFCHR | 0666 , &leds_fops, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: drivers/leds/leds.c:572:
+    ledsctl = devfs_register (ledsdir, "ctl", DEVFS_FL_DEFAULT, leds_major_num, 0xff, S_IFCHR | 0666 , &leds_fops, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#780: FILE: drivers/leds/leds.c:572:
+    ledsctl = devfs_register (ledsdir, "ctl", DEVFS_FL_DEFAULT, leds_major_num, 0xff, S_IFCHR | 0666 , &leds_fops, NULL);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#780: FILE: drivers/leds/leds.c:572:
+    ledsctl = devfs_register (ledsdir, "ctl", DEVFS_FL_DEFAULT, leds_major_num, 0xff, S_IFCHR | 0666 , &leds_fops, NULL);
                                                                                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: drivers/leds/leds.c:573:
+    if (ledsctl == NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#781: FILE: drivers/leds/leds.c:573:
+    if (ledsctl == NULL)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#781: FILE: drivers/leds/leds.c:573:
+    if (ledsctl == NULL)
+    {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ledsctl"
#781: FILE: drivers/leds/leds.c:573:
+    if (ledsctl == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: drivers/leds/leds.c:574:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: drivers/leds/leds.c:575:
+      devfs_unregister (ledsdir);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#783: FILE: drivers/leds/leds.c:575:
+      devfs_unregister (ledsdir);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: drivers/leds/leds.c:576:
+      unregister_chrdev(leds_major_num, "leds");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: drivers/leds/leds.c:577:
+      return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: drivers/leds/leds.c:578:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: drivers/leds/leds.c:579:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: drivers/leds/leds.c:580:
+  create_proc_read_entry("leds", 0, NULL, leds_read_proc, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: drivers/leds/leds.c:581:
+  return 0;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#797: FILE: drivers/leds/leds.c:589:
+EXPORT_SYMBOL(led_get);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#798: FILE: drivers/leds/leds.c:590:
+EXPORT_SYMBOL(led_set);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#799: FILE: drivers/leds/leds.c:591:
+EXPORT_SYMBOL(led_reserve);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#800: FILE: drivers/leds/leds.c:592:
+EXPORT_SYMBOL(led_release);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#801: FILE: drivers/leds/leds.c:593:
+EXPORT_SYMBOL(leds_count);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#802: FILE: drivers/leds/leds.c:594:
+EXPORT_SYMBOL(leds_add);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#803: FILE: drivers/leds/leds.c:595:
+EXPORT_SYMBOL(leds_del);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#832: FILE: drivers/leds/parport_leds.c:1:
+#include <linux/module.h>

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#839: FILE: drivers/leds/parport_leds.c:8:
+static spinlock_t parled_lock= SPIN_LOCK_UNLOCKED;
                              ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#840: FILE: drivers/leds/parport_leds.c:9:
+static unsigned char parled_state = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#842: FILE: drivers/leds/parport_leds.c:11:
+static struct pardevice *parleds_dev = NULL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#845: FILE: drivers/leds/parport_leds.c:14:
+release (void *ignore)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: drivers/leds/parport_leds.c:16:
+  MOD_DEC_USE_COUNT;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#851: FILE: drivers/leds/parport_leds.c:20:
+reserve (void *ignore)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: drivers/leds/parport_leds.c:22:
+  MOD_INC_USE_COUNT;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#857: FILE: drivers/leds/parport_leds.c:26:
+set_state (unsigned int idx, unsigned char state, void *ignore)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: drivers/leds/parport_leds.c:28:
+  spin_lock(&parled_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: drivers/leds/parport_leds.c:29:
+  parled_state &= ~(1 << idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: drivers/leds/parport_leds.c:30:
+  parled_state |= state & (1 << idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: drivers/leds/parport_leds.c:31:
+  parleds_dev->port->ops->write_data (parleds_dev->port, parled_state);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#862: FILE: drivers/leds/parport_leds.c:31:
+  parleds_dev->port->ops->write_data (parleds_dev->port, parled_state);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: drivers/leds/parport_leds.c:32:
+  spin_unlock(&parled_lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#867: FILE: drivers/leds/parport_leds.c:36:
+get_state (unsigned int idx, void *ignore)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: drivers/leds/parport_leds.c:38:
+  unsigned char reg;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#870: FILE: drivers/leds/parport_leds.c:39:
+  unsigned char reg;
+  spin_lock(&parled_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: drivers/leds/parport_leds.c:39:
+  spin_lock(&parled_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: drivers/leds/parport_leds.c:40:
+  reg = parled_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: drivers/leds/parport_leds.c:41:
+  spin_unlock(&parled_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: drivers/leds/parport_leds.c:42:
+  reg &= (1 << idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: drivers/leds/parport_leds.c:43:
+  return reg;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#878: FILE: drivers/leds/parport_leds.c:47:
+attach (struct parport *thing)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: drivers/leds/parport_leds.c:49:
+  if (parled_parport >= 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#880: FILE: drivers/leds/parport_leds.c:49:
+  if (parled_parport >= 0)
+    return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: drivers/leds/parport_leds.c:50:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: drivers/leds/parport_leds.c:51:
+  for (parled_parport = 0 ; parled_parport < PARPORT_MAX ; ++parled_parport)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#882: FILE: drivers/leds/parport_leds.c:51:
+  for (parled_parport = 0 ; parled_parport < PARPORT_MAX ; ++parled_parport)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#882: FILE: drivers/leds/parport_leds.c:51:
+  for (parled_parport = 0 ; parled_parport < PARPORT_MAX ; ++parled_parport)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: drivers/leds/parport_leds.c:52:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: drivers/leds/parport_leds.c:53:
+    if (thing == NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#884: FILE: drivers/leds/parport_leds.c:53:
+    if (thing == NULL)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#884: FILE: drivers/leds/parport_leds.c:53:
+    if (thing == NULL)
+    {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thing"
#884: FILE: drivers/leds/parport_leds.c:53:
+    if (thing == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: drivers/leds/parport_leds.c:54:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: drivers/leds/parport_leds.c:55:
+      printk (KERN_DEBUG "parport_leds: Moo %d\n", parled_parport);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#886: FILE: drivers/leds/parport_leds.c:55:
+      printk (KERN_DEBUG "parport_leds: Moo %d\n", parled_parport);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#886: FILE: drivers/leds/parport_leds.c:55:
+      printk (KERN_DEBUG "parport_leds: Moo %d\n", parled_parport);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: drivers/leds/parport_leds.c:56:
+      continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: drivers/leds/parport_leds.c:57:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: drivers/leds/parport_leds.c:58:
+    if (thing->number == parled_parport)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#889: FILE: drivers/leds/parport_leds.c:58:
+    if (thing->number == parled_parport)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#889: FILE: drivers/leds/parport_leds.c:58:
+    if (thing->number == parled_parport)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: drivers/leds/parport_leds.c:59:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: drivers/leds/parport_leds.c:60:
+      struct pardevice *dev;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#892: FILE: drivers/leds/parport_leds.c:61:
+      struct pardevice *dev;
+      dev = parport_register_device (thing, "leds", NULL, NULL, NULL, PARPORT_DEV_EXCL, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: drivers/leds/parport_leds.c:61:
+      dev = parport_register_device (thing, "leds", NULL, NULL, NULL, PARPORT_DEV_EXCL, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#892: FILE: drivers/leds/parport_leds.c:61:
+      dev = parport_register_device (thing, "leds", NULL, NULL, NULL, PARPORT_DEV_EXCL, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: drivers/leds/parport_leds.c:62:
+      if (dev == NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#893: FILE: drivers/leds/parport_leds.c:62:
+      if (dev == NULL)
+      {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#893: FILE: drivers/leds/parport_leds.c:62:
+      if (dev == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: drivers/leds/parport_leds.c:63:
+      {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#895: FILE: drivers/leds/parport_leds.c:64:
+	printk (KERN_DEBUG "parport_leds: Baa %d\n", parled_parport);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#895: FILE: drivers/leds/parport_leds.c:64:
+	printk (KERN_DEBUG "parport_leds: Baa %d\n", parled_parport);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: drivers/leds/parport_leds.c:66:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: drivers/leds/parport_leds.c:67:
+      if (!parport_claim (dev) == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#898: FILE: drivers/leds/parport_leds.c:67:
+      if (!parport_claim (dev) == 0)
+      {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#898: FILE: drivers/leds/parport_leds.c:67:
+      if (!parport_claim (dev) == 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#899: FILE: drivers/leds/parport_leds.c:68:
+      {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: drivers/leds/parport_leds.c:70:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: drivers/leds/parport_leds.c:71:
+      else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#902: FILE: drivers/leds/parport_leds.c:71:
+      else
+      {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#902: FILE: drivers/leds/parport_leds.c:71:
+      }
+      else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: drivers/leds/parport_leds.c:72:
+      {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: drivers/leds/parport_leds.c:74:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: drivers/leds/parport_leds.c:75:
+      return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: drivers/leds/parport_leds.c:76:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: drivers/leds/parport_leds.c:77:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: drivers/leds/parport_leds.c:78:
+  parled_parport = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: drivers/leds/parport_leds.c:79:
+  return;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#914: FILE: drivers/leds/parport_leds.c:83:
+detach (struct parport *thing)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#920: FILE: drivers/leds/parport_leds.c:89:
+set_state:set_state,
          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#921: FILE: drivers/leds/parport_leds.c:90:
+reserve:reserve,
        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#922: FILE: drivers/leds/parport_leds.c:91:
+release:release,
        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#924: FILE: drivers/leds/parport_leds.c:93:
+drivername:THIS_MODULE,
           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#929: FILE: drivers/leds/parport_leds.c:98:
+attach:attach,
       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#930: FILE: drivers/leds/parport_leds.c:99:
+detach:detach,
       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#934: FILE: drivers/leds/parport_leds.c:103:
+init_parallel_leds (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: drivers/leds/parport_leds.c:105:
+  int c;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#937: FILE: drivers/leds/parport_leds.c:106:
+  int c;
+  if (parport_register_driver (&parleds_driver) != 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: drivers/leds/parport_leds.c:106:
+  if (parport_register_driver (&parleds_driver) != 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#937: FILE: drivers/leds/parport_leds.c:106:
+  if (parport_register_driver (&parleds_driver) != 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#937: FILE: drivers/leds/parport_leds.c:106:
+  if (parport_register_driver (&parleds_driver) != 0)
+  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#937: FILE: drivers/leds/parport_leds.c:106:
+  if (parport_register_driver (&parleds_driver) != 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&parleds_driver'
#937: FILE: drivers/leds/parport_leds.c:106:
+  if (parport_register_driver (&parleds_driver) != 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: drivers/leds/parport_leds.c:107:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: drivers/leds/parport_leds.c:108:
+    printk (KERN_INFO "parport_leds: parport_register_driver failed\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#939: FILE: drivers/leds/parport_leds.c:108:
+    printk (KERN_INFO "parport_leds: parport_register_driver failed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#939: FILE: drivers/leds/parport_leds.c:108:
+    printk (KERN_INFO "parport_leds: parport_register_driver failed\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: drivers/leds/parport_leds.c:109:
+    return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: drivers/leds/parport_leds.c:110:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: drivers/leds/parport_leds.c:111:
+  if (parled_parport < 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#942: FILE: drivers/leds/parport_leds.c:111:
+  if (parled_parport < 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#942: FILE: drivers/leds/parport_leds.c:111:
+  if (parled_parport < 0)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: drivers/leds/parport_leds.c:112:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: drivers/leds/parport_leds.c:113:
+    parport_unregister_driver (&parleds_driver);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#944: FILE: drivers/leds/parport_leds.c:113:
+    parport_unregister_driver (&parleds_driver);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: drivers/leds/parport_leds.c:114:
+    printk (KERN_INFO "parport_leds: couldn't claim a parallel port\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#945: FILE: drivers/leds/parport_leds.c:114:
+    printk (KERN_INFO "parport_leds: couldn't claim a parallel port\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#945: FILE: drivers/leds/parport_leds.c:114:
+    printk (KERN_INFO "parport_leds: couldn't claim a parallel port\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/leds/parport_leds.c:115:
+    return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: drivers/leds/parport_leds.c:116:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: drivers/leds/parport_leds.c:117:
+  c = leds_add (&parleds);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#948: FILE: drivers/leds/parport_leds.c:117:
+  c = leds_add (&parleds);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: drivers/leds/parport_leds.c:118:
+  if (c != 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#949: FILE: drivers/leds/parport_leds.c:118:
+  if (c != 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#949: FILE: drivers/leds/parport_leds.c:118:
+  if (c != 0)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: drivers/leds/parport_leds.c:119:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: drivers/leds/parport_leds.c:120:
+    parport_unregister_driver (&parleds_driver);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#951: FILE: drivers/leds/parport_leds.c:120:
+    parport_unregister_driver (&parleds_driver);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: drivers/leds/parport_leds.c:121:
+    printk (KERN_INFO "parport_leds: leds_add failed\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#952: FILE: drivers/leds/parport_leds.c:121:
+    printk (KERN_INFO "parport_leds: leds_add failed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#952: FILE: drivers/leds/parport_leds.c:121:
+    printk (KERN_INFO "parport_leds: leds_add failed\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: drivers/leds/parport_leds.c:122:
+    return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: drivers/leds/parport_leds.c:123:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: drivers/leds/parport_leds.c:124:
+  return c;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#959: FILE: drivers/leds/parport_leds.c:128:
+cleanup_parallel_leds (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: drivers/leds/parport_leds.c:130:
+  leds_del (&parleds);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#961: FILE: drivers/leds/parport_leds.c:130:
+  leds_del (&parleds);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: drivers/leds/parport_leds.c:131:
+  parport_release (parleds_dev);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#962: FILE: drivers/leds/parport_leds.c:131:
+  parport_release (parleds_dev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: drivers/leds/parport_leds.c:132:
+  parport_unregister_device (parleds_dev);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#963: FILE: drivers/leds/parport_leds.c:132:
+  parport_unregister_device (parleds_dev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: drivers/leds/parport_leds.c:133:
+  parport_unregister_driver (&parleds_driver);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#964: FILE: drivers/leds/parport_leds.c:133:
+  parport_unregister_driver (&parleds_driver);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#980: FILE: drivers/leds/piix4e_leds.c:1:
+#include <linux/module.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#987: FILE: drivers/leds/piix4e_leds.c:8:
+#include <asm/io.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#994: FILE: drivers/leds/piix4e_leds.c:15:
+release (void * ignored)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#994: FILE: drivers/leds/piix4e_leds.c:15:
+release (void * ignored)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: drivers/leds/piix4e_leds.c:17:
+  MOD_DEC_USE_COUNT;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1000: FILE: drivers/leds/piix4e_leds.c:21:
+reserve (void * ignored)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1000: FILE: drivers/leds/piix4e_leds.c:21:
+reserve (void * ignored)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: drivers/leds/piix4e_leds.c:23:
+  MOD_INC_USE_COUNT;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1006: FILE: drivers/leds/piix4e_leds.c:27:
+set_state (unsigned int idx, unsigned char state, void *ignored)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: drivers/leds/piix4e_leds.c:29:
+  unsigned char reg;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1009: FILE: drivers/leds/piix4e_leds.c:30:
+  unsigned char reg;
+  spin_lock(&bxled_lock[idx]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: drivers/leds/piix4e_leds.c:30:
+  spin_lock(&bxled_lock[idx]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: drivers/leds/piix4e_leds.c:31:
+  reg = inb(bxled_port[idx]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: drivers/leds/piix4e_leds.c:32:
+  reg &= ~bxled_mask[idx];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: drivers/leds/piix4e_leds.c:33:
+  reg |= state & bxled_mask[idx];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: drivers/leds/piix4e_leds.c:34:
+  outb (reg, bxled_port[idx]);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1013: FILE: drivers/leds/piix4e_leds.c:34:
+  outb (reg, bxled_port[idx]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: drivers/leds/piix4e_leds.c:35:
+  spin_unlock(&bxled_lock[idx]);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1018: FILE: drivers/leds/piix4e_leds.c:39:
+get_state (unsigned int idx, void * ignored)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1018: FILE: drivers/leds/piix4e_leds.c:39:
+get_state (unsigned int idx, void * ignored)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: drivers/leds/piix4e_leds.c:41:
+  unsigned char reg;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1021: FILE: drivers/leds/piix4e_leds.c:42:
+  unsigned char reg;
+  spin_lock(&bxled_lock[idx]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: drivers/leds/piix4e_leds.c:42:
+  spin_lock(&bxled_lock[idx]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: drivers/leds/piix4e_leds.c:43:
+  reg = inb(bxled_port[idx]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: drivers/leds/piix4e_leds.c:44:
+  spin_unlock(&bxled_lock[idx]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: drivers/leds/piix4e_leds.c:45:
+  reg &= bxled_mask[idx];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: drivers/leds/piix4e_leds.c:46:
+  return reg;$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1030: FILE: drivers/leds/piix4e_leds.c:51:
+set_state:set_state,
          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1031: FILE: drivers/leds/piix4e_leds.c:52:
+reserve:reserve,
        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1032: FILE: drivers/leds/piix4e_leds.c:53:
+release:release,
        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1034: FILE: drivers/leds/piix4e_leds.c:55:
+data:NULL,
     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1035: FILE: drivers/leds/piix4e_leds.c:56:
+drivername:THIS_MODULE,
           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1039: FILE: drivers/leds/piix4e_leds.c:60:
+init_isp1100_lights (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: drivers/leds/piix4e_leds.c:62:
+  int c;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1042: FILE: drivers/leds/piix4e_leds.c:63:
+  int c;
+  if (!pci_present())

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: drivers/leds/piix4e_leds.c:63:
+  if (!pci_present())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1042: FILE: drivers/leds/piix4e_leds.c:63:
+  if (!pci_present())
+    return -ENODEV;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: drivers/leds/piix4e_leds.c:64:
+    return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: drivers/leds/piix4e_leds.c:65:
+  if (!(pci_find_device(PCI_VENDOR_ID_INTEL,PCI_DEVICE_ID_INTEL_82371AB_3,NULL)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1044: FILE: drivers/leds/piix4e_leds.c:65:
+  if (!(pci_find_device(PCI_VENDOR_ID_INTEL,PCI_DEVICE_ID_INTEL_82371AB_3,NULL)))
+    return -ENODEV;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1044: FILE: drivers/leds/piix4e_leds.c:65:
+  if (!(pci_find_device(PCI_VENDOR_ID_INTEL,PCI_DEVICE_ID_INTEL_82371AB_3,NULL)))
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1044: FILE: drivers/leds/piix4e_leds.c:65:
+  if (!(pci_find_device(PCI_VENDOR_ID_INTEL,PCI_DEVICE_ID_INTEL_82371AB_3,NULL)))
                                                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: drivers/leds/piix4e_leds.c:66:
+    return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: drivers/leds/piix4e_leds.c:67:
+  if (!request_region (bxled_port[0], 1, "Intel PIIX4E LED U1"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1046: FILE: drivers/leds/piix4e_leds.c:67:
+  if (!request_region (bxled_port[0], 1, "Intel PIIX4E LED U1"))
+    return -EBUSY;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1046: FILE: drivers/leds/piix4e_leds.c:67:
+  if (!request_region (bxled_port[0], 1, "Intel PIIX4E LED U1"))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: drivers/leds/piix4e_leds.c:68:
+    return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: drivers/leds/piix4e_leds.c:69:
+  c = -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1049: FILE: drivers/leds/piix4e_leds.c:70:
+  if (!request_region (bxled_port[1], 1, "Intel PIIX4E LED U2"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1049: FILE: drivers/leds/piix4e_leds.c:70:
+  if (!request_region (bxled_port[1], 1, "Intel PIIX4E LED U2"))
+    goto cleanup_zero;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1049: FILE: drivers/leds/piix4e_leds.c:70:
+  if (!request_region (bxled_port[1], 1, "Intel PIIX4E LED U2"))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: drivers/leds/piix4e_leds.c:71:
+    goto cleanup_zero;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: drivers/leds/piix4e_leds.c:76:
+  c = -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: drivers/leds/piix4e_leds.c:77:
+  set_state (0, 0, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1056: FILE: drivers/leds/piix4e_leds.c:77:
+  set_state (0, 0, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: drivers/leds/piix4e_leds.c:78:
+  set_state (1, 0, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1057: FILE: drivers/leds/piix4e_leds.c:78:
+  set_state (1, 0, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: drivers/leds/piix4e_leds.c:79:
+  if (get_state (0, NULL))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1058: FILE: drivers/leds/piix4e_leds.c:79:
+  if (get_state (0, NULL))
+    goto cleanup_both;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1058: FILE: drivers/leds/piix4e_leds.c:79:
+  if (get_state (0, NULL))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: drivers/leds/piix4e_leds.c:80:
+    goto cleanup_both;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: drivers/leds/piix4e_leds.c:81:
+  if (get_state (1, NULL))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1060: FILE: drivers/leds/piix4e_leds.c:81:
+  if (get_state (1, NULL))
+    goto cleanup_both;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1060: FILE: drivers/leds/piix4e_leds.c:81:
+  if (get_state (1, NULL))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: drivers/leds/piix4e_leds.c:82:
+    goto cleanup_both;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: drivers/leds/piix4e_leds.c:83:
+  set_state (0, ~0, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1062: FILE: drivers/leds/piix4e_leds.c:83:
+  set_state (0, ~0, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: drivers/leds/piix4e_leds.c:84:
+  set_state (1, ~0, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1063: FILE: drivers/leds/piix4e_leds.c:84:
+  set_state (1, ~0, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: drivers/leds/piix4e_leds.c:85:
+  if (!get_state (0, NULL))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1064: FILE: drivers/leds/piix4e_leds.c:85:
+  if (!get_state (0, NULL))
+    goto cleanup_both;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1064: FILE: drivers/leds/piix4e_leds.c:85:
+  if (!get_state (0, NULL))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: drivers/leds/piix4e_leds.c:86:
+    goto cleanup_both;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: drivers/leds/piix4e_leds.c:87:
+  if (!get_state (1, NULL))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1066: FILE: drivers/leds/piix4e_leds.c:87:
+  if (!get_state (1, NULL))
+    goto cleanup_both;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1066: FILE: drivers/leds/piix4e_leds.c:87:
+  if (!get_state (1, NULL))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: drivers/leds/piix4e_leds.c:88:
+    goto cleanup_both;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: drivers/leds/piix4e_leds.c:89:
+  c = leds_add (&bxleds);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1068: FILE: drivers/leds/piix4e_leds.c:89:
+  c = leds_add (&bxleds);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: drivers/leds/piix4e_leds.c:90:
+  if (c != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1069: FILE: drivers/leds/piix4e_leds.c:90:
+  if (c != 0)
+    goto cleanup_both;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: drivers/leds/piix4e_leds.c:91:
+    goto cleanup_both;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: drivers/leds/piix4e_leds.c:92:
+  return c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: drivers/leds/piix4e_leds.c:94:
+  release_region (bxled_port[1], 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1073: FILE: drivers/leds/piix4e_leds.c:94:
+  release_region (bxled_port[1], 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: drivers/leds/piix4e_leds.c:96:
+  release_region (bxled_port[0], 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1075: FILE: drivers/leds/piix4e_leds.c:96:
+  release_region (bxled_port[0], 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: drivers/leds/piix4e_leds.c:97:
+  return c;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1080: FILE: drivers/leds/piix4e_leds.c:101:
+cleanup_isp1100_lights (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1082: FILE: drivers/leds/piix4e_leds.c:103:
+  leds_del (&bxleds);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1082: FILE: drivers/leds/piix4e_leds.c:103:
+  leds_del (&bxleds);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: drivers/leds/piix4e_leds.c:104:
+  release_region (bxled_port[1], 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1083: FILE: drivers/leds/piix4e_leds.c:104:
+  release_region (bxled_port[1], 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: drivers/leds/piix4e_leds.c:105:
+  release_region (bxled_port[0], 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1084: FILE: drivers/leds/piix4e_leds.c:105:
+  release_region (bxled_port[0], 1);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1100: FILE: drivers/leds/ubeat.c:1:
+#include <linux/module.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1114: FILE: drivers/leds/ubeat.c:15:
+static volatile int ubeat_have_led = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1114: FILE: drivers/leds/ubeat.c:15:
+static volatile int ubeat_have_led = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1115: FILE: drivers/leds/ubeat.c:16:
+static int have_devfs = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1117: FILE: drivers/leds/ubeat.c:18:
+static volatile unsigned char ubeat_state = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1117: FILE: drivers/leds/ubeat.c:18:
+static volatile unsigned char ubeat_state = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1124: FILE: drivers/leds/ubeat.c:25:
+static volatile int inuse = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1124: FILE: drivers/leds/ubeat.c:25:
+static volatile int inuse = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1128: FILE: drivers/leds/ubeat.c:29:
+ubeat_timeup (unsigned long ignored)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: drivers/leds/ubeat.c:31:
+  if (atomic_read(&ubeat_carp) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1130: FILE: drivers/leds/ubeat.c:31:
+  if (atomic_read(&ubeat_carp) == 0)
+    return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1131: FILE: drivers/leds/ubeat.c:32:
+    return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: drivers/leds/ubeat.c:33:
+  atomic_set (&ubeat_carp, 0);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1132: FILE: drivers/leds/ubeat.c:33:
+  atomic_set (&ubeat_carp, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: drivers/leds/ubeat.c:34:
+  printk(KERN_ALERT "ubeat: User heartbeat not detected - FIX ME!!!!\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1133: FILE: drivers/leds/ubeat.c:34:
+  printk(KERN_ALERT "ubeat: User heartbeat not detected - FIX ME!!!!\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1137: FILE: drivers/leds/ubeat.c:38:
+ubeat_ioctl (struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)
                                                ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1137: FILE: drivers/leds/ubeat.c:38:
+ubeat_ioctl (struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1139: FILE: drivers/leds/ubeat.c:40:
+  if (MINOR(inode->i_rdev) != 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1139: FILE: drivers/leds/ubeat.c:40:
+  if (MINOR(inode->i_rdev) != 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1139: FILE: drivers/leds/ubeat.c:40:
+  if (MINOR(inode->i_rdev) != 0)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1140: FILE: drivers/leds/ubeat.c:41:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1141: FILE: drivers/leds/ubeat.c:42:
+    printk( KERN_DEBUG "ubeat: Minor number was %u\n", MINOR(inode->i_rdev));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1141: FILE: drivers/leds/ubeat.c:42:
+    printk( KERN_DEBUG "ubeat: Minor number was %u\n", MINOR(inode->i_rdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1141: FILE: drivers/leds/ubeat.c:42:
+    printk( KERN_DEBUG "ubeat: Minor number was %u\n", MINOR(inode->i_rdev));

ERROR:SPACING: space prohibited after that open parenthesis '('
#1141: FILE: drivers/leds/ubeat.c:42:
+    printk( KERN_DEBUG "ubeat: Minor number was %u\n", MINOR(inode->i_rdev));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: drivers/leds/ubeat.c:43:
+    return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: drivers/leds/ubeat.c:44:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1144: FILE: drivers/leds/ubeat.c:45:
+  if (_IOC_TYPE(cmd) != LINUX_UBEAT_IOC_MAGIC)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1144: FILE: drivers/leds/ubeat.c:45:
+  if (_IOC_TYPE(cmd) != LINUX_UBEAT_IOC_MAGIC)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1144: FILE: drivers/leds/ubeat.c:45:
+  if (_IOC_TYPE(cmd) != LINUX_UBEAT_IOC_MAGIC)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1145: FILE: drivers/leds/ubeat.c:46:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1146: FILE: drivers/leds/ubeat.c:47:
+    printk( KERN_DEBUG "ubeat: Magic number was 0x%x\n", _IOC_TYPE(cmd));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1146: FILE: drivers/leds/ubeat.c:47:
+    printk( KERN_DEBUG "ubeat: Magic number was 0x%x\n", _IOC_TYPE(cmd));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1146: FILE: drivers/leds/ubeat.c:47:
+    printk( KERN_DEBUG "ubeat: Magic number was 0x%x\n", _IOC_TYPE(cmd));

ERROR:SPACING: space prohibited after that open parenthesis '('
#1146: FILE: drivers/leds/ubeat.c:47:
+    printk( KERN_DEBUG "ubeat: Magic number was 0x%x\n", _IOC_TYPE(cmd));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1147: FILE: drivers/leds/ubeat.c:48:
+    return -ENOTTY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1148: FILE: drivers/leds/ubeat.c:49:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1149: FILE: drivers/leds/ubeat.c:50:
+  if (_IOC_NR(cmd) > LINUX_UBEAT_IOC_MAX_NR)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1149: FILE: drivers/leds/ubeat.c:50:
+  if (_IOC_NR(cmd) > LINUX_UBEAT_IOC_MAX_NR)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1149: FILE: drivers/leds/ubeat.c:50:
+  if (_IOC_NR(cmd) > LINUX_UBEAT_IOC_MAX_NR)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: drivers/leds/ubeat.c:51:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1151: FILE: drivers/leds/ubeat.c:52:
+    printk( KERN_DEBUG "ubeat: Command number was %u\n", _IOC_NR(cmd));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1151: FILE: drivers/leds/ubeat.c:52:
+    printk( KERN_DEBUG "ubeat: Command number was %u\n", _IOC_NR(cmd));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1151: FILE: drivers/leds/ubeat.c:52:
+    printk( KERN_DEBUG "ubeat: Command number was %u\n", _IOC_NR(cmd));

ERROR:SPACING: space prohibited after that open parenthesis '('
#1151: FILE: drivers/leds/ubeat.c:52:
+    printk( KERN_DEBUG "ubeat: Command number was %u\n", _IOC_NR(cmd));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: drivers/leds/ubeat.c:53:
+    return -ENOTTY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1153: FILE: drivers/leds/ubeat.c:54:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1154: FILE: drivers/leds/ubeat.c:55:
+  switch (cmd)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1154: FILE: drivers/leds/ubeat.c:55:
+  switch (cmd)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1155: FILE: drivers/leds/ubeat.c:56:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1156: FILE: drivers/leds/ubeat.c:57:
+    case LINUX_UBEAT_IOC_POKE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1157: FILE: drivers/leds/ubeat.c:58:
+      spin_lock(&ubeat_use_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: drivers/leds/ubeat.c:59:
+      del_timer_sync(&ubeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1159: FILE: drivers/leds/ubeat.c:60:
+      ubeat_timer.expires = jiffies + ubeat_interval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1160: FILE: drivers/leds/ubeat.c:61:
+      add_timer(&ubeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1161: FILE: drivers/leds/ubeat.c:62:
+      spin_unlock(&ubeat_use_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: drivers/leds/ubeat.c:63:
+      if (ubeat_have_led)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1162: FILE: drivers/leds/ubeat.c:63:
+      if (ubeat_have_led)
+      {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1163: FILE: drivers/leds/ubeat.c:64:
+      {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1166: FILE: drivers/leds/ubeat.c:67:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: drivers/leds/ubeat.c:68:
+      return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: drivers/leds/ubeat.c:69:
+    case LINUX_UBEAT_IOC_FIXT:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: drivers/leds/ubeat.c:70:
+      spin_lock(&ubeat_use_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: drivers/leds/ubeat.c:71:
+      del_timer_sync(&ubeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1171: FILE: drivers/leds/ubeat.c:72:
+      ubeat_timer.expires = jiffies + ubeat_interval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1172: FILE: drivers/leds/ubeat.c:73:
+      add_timer(&ubeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1173: FILE: drivers/leds/ubeat.c:74:
+      spin_unlock(&ubeat_use_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1174: FILE: drivers/leds/ubeat.c:75:
+      atomic_set (&ubeat_carp, 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1174: FILE: drivers/leds/ubeat.c:75:
+      atomic_set (&ubeat_carp, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1175: FILE: drivers/leds/ubeat.c:76:
+      return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1176: FILE: drivers/leds/ubeat.c:77:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1177: FILE: drivers/leds/ubeat.c:78:
+  return -ENOTTY;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1180: FILE: drivers/leds/ubeat.c:81:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1182: FILE: drivers/leds/ubeat.c:83:
+ubeat_open (struct inode *inode, struct file *filp)
                                               ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1182: FILE: drivers/leds/ubeat.c:83:
+ubeat_open (struct inode *inode, struct file *filp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: drivers/leds/ubeat.c:85:
+  MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: drivers/leds/ubeat.c:86:
+  spin_lock(&ubeat_use_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: drivers/leds/ubeat.c:87:
+  ++inuse;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: drivers/leds/ubeat.c:88:
+  del_timer_sync(&ubeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: drivers/leds/ubeat.c:89:
+  ubeat_timer.expires = jiffies + ubeat_interval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: drivers/leds/ubeat.c:90:
+  add_timer(&ubeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1190: FILE: drivers/leds/ubeat.c:91:
+  spin_unlock(&ubeat_use_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1191: FILE: drivers/leds/ubeat.c:92:
+  return 0;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1195: FILE: drivers/leds/ubeat.c:96:
+ubeat_release (struct inode *inode, struct file *filp)
                                                  ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1195: FILE: drivers/leds/ubeat.c:96:
+ubeat_release (struct inode *inode, struct file *filp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1197: FILE: drivers/leds/ubeat.c:98:
+  MOD_DEC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1198: FILE: drivers/leds/ubeat.c:99:
+  spin_lock(&ubeat_use_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1199: FILE: drivers/leds/ubeat.c:100:
+  --inuse;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1200: FILE: drivers/leds/ubeat.c:101:
+  if (inuse == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1200: FILE: drivers/leds/ubeat.c:101:
+  if (inuse == 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1200: FILE: drivers/leds/ubeat.c:101:
+  if (inuse == 0)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1201: FILE: drivers/leds/ubeat.c:102:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1202: FILE: drivers/leds/ubeat.c:103:
+    del_timer_sync(&ubeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: drivers/leds/ubeat.c:104:
+    atomic_set (&ubeat_carp, 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1203: FILE: drivers/leds/ubeat.c:104:
+    atomic_set (&ubeat_carp, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1204: FILE: drivers/leds/ubeat.c:105:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: drivers/leds/ubeat.c:106:
+  spin_unlock(&ubeat_use_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: drivers/leds/ubeat.c:107:
+  return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1209: FILE: drivers/leds/ubeat.c:110:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1210: FILE: drivers/leds/ubeat.c:111:
+static struct file_operations ubeat_fops = {

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1212: FILE: drivers/leds/ubeat.c:113:
+release: ubeat_release,
        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1213: FILE: drivers/leds/ubeat.c:114:
+ioctl: ubeat_ioctl,
      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1214: FILE: drivers/leds/ubeat.c:115:
+owner: THIS_MODULE,
      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: drivers/leds/ubeat.c:121:
+  del_timer_sync(&ubeat_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1221: FILE: drivers/leds/ubeat.c:122:
+  if (ubeat_have_led)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1221: FILE: drivers/leds/ubeat.c:122:
+  if (ubeat_have_led)
+    led_release(ubeat_led, THIS_MODULE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1222: FILE: drivers/leds/ubeat.c:123:
+    led_release(ubeat_led, THIS_MODULE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: drivers/leds/ubeat.c:124:
+  if (have_devfs)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1223: FILE: drivers/leds/ubeat.c:124:
+  if (have_devfs)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1223: FILE: drivers/leds/ubeat.c:124:
+  if (have_devfs)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1224: FILE: drivers/leds/ubeat.c:125:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: drivers/leds/ubeat.c:126:
+    devfs_unregister (ubeatctl);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1225: FILE: drivers/leds/ubeat.c:126:
+    devfs_unregister (ubeatctl);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: drivers/leds/ubeat.c:127:
+    devfs_unregister (ubeatdir);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1226: FILE: drivers/leds/ubeat.c:127:
+    devfs_unregister (ubeatdir);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: drivers/leds/ubeat.c:128:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: drivers/leds/ubeat.c:129:
+  unregister_chrdev(ubeat_major_num, "ubeat");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: drivers/leds/ubeat.c:135:
+  int maj;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1235: FILE: drivers/leds/ubeat.c:136:
+  int maj;
+  atomic_set (&ubeat_carp, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1235: FILE: drivers/leds/ubeat.c:136:
+  atomic_set (&ubeat_carp, 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1235: FILE: drivers/leds/ubeat.c:136:
+  atomic_set (&ubeat_carp, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1236: FILE: drivers/leds/ubeat.c:137:
+  maj = register_chrdev(0, "ubeat", &ubeat_fops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1237: FILE: drivers/leds/ubeat.c:138:
+  if (maj < 0) return maj;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1237: FILE: drivers/leds/ubeat.c:138:
+  if (maj < 0) return maj;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: drivers/leds/ubeat.c:139:
+  ubeat_major_num = maj;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: drivers/leds/ubeat.c:140:
+  printk (KERN_NOTICE "ubeat: got major number %u\n", ubeat_major_num);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1239: FILE: drivers/leds/ubeat.c:140:
+  printk (KERN_NOTICE "ubeat: got major number %u\n", ubeat_major_num);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1239: FILE: drivers/leds/ubeat.c:140:
+  printk (KERN_NOTICE "ubeat: got major number %u\n", ubeat_major_num);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1240: FILE: drivers/leds/ubeat.c:141:
+  ubeatdir = devfs_mk_dir(NULL, "ubeat", NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1241: FILE: drivers/leds/ubeat.c:142:
+  if (ubeatdir != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1241: FILE: drivers/leds/ubeat.c:142:
+  if (ubeatdir != NULL)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1241: FILE: drivers/leds/ubeat.c:142:
+  if (ubeatdir != NULL)
+  {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubeatdir"
#1241: FILE: drivers/leds/ubeat.c:142:
+  if (ubeatdir != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1242: FILE: drivers/leds/ubeat.c:143:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1243: FILE: drivers/leds/ubeat.c:144:
+    have_devfs = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1244: FILE: drivers/leds/ubeat.c:145:
+    unregister_chrdev(ubeat_major_num, "ubeat");$

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1245: FILE: drivers/leds/ubeat.c:146:
+    ubeatctl = devfs_register (ubeatdir, "pokeme", DEVFS_FL_DEFAULT, ubeat_major_num, 0, S_IFCHR | 0660 , &ubeat_fops, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1245: FILE: drivers/leds/ubeat.c:146:
+    ubeatctl = devfs_register (ubeatdir, "pokeme", DEVFS_FL_DEFAULT, ubeat_major_num, 0, S_IFCHR | 0660 , &ubeat_fops, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1245: FILE: drivers/leds/ubeat.c:146:
+    ubeatctl = devfs_register (ubeatdir, "pokeme", DEVFS_FL_DEFAULT, ubeat_major_num, 0, S_IFCHR | 0660 , &ubeat_fops, NULL);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1245: FILE: drivers/leds/ubeat.c:146:
+    ubeatctl = devfs_register (ubeatdir, "pokeme", DEVFS_FL_DEFAULT, ubeat_major_num, 0, S_IFCHR | 0660 , &ubeat_fops, NULL);
                                                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1246: FILE: drivers/leds/ubeat.c:147:
+    if (ubeatctl == NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1246: FILE: drivers/leds/ubeat.c:147:
+    if (ubeatctl == NULL)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1246: FILE: drivers/leds/ubeat.c:147:
+    if (ubeatctl == NULL)
+    {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubeatctl"
#1246: FILE: drivers/leds/ubeat.c:147:
+    if (ubeatctl == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1247: FILE: drivers/leds/ubeat.c:148:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1248: FILE: drivers/leds/ubeat.c:149:
+      devfs_unregister (ubeatdir);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1248: FILE: drivers/leds/ubeat.c:149:
+      devfs_unregister (ubeatdir);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1249: FILE: drivers/leds/ubeat.c:150:
+      unregister_chrdev(ubeat_major_num, "ubeat");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1250: FILE: drivers/leds/ubeat.c:151:
+      return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1251: FILE: drivers/leds/ubeat.c:152:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1252: FILE: drivers/leds/ubeat.c:153:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1253: FILE: drivers/leds/ubeat.c:154:
+  if (led_reserve(&ubeat_led, THIS_MODULE) == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1253: FILE: drivers/leds/ubeat.c:154:
+  if (led_reserve(&ubeat_led, THIS_MODULE) == 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1253: FILE: drivers/leds/ubeat.c:154:
+  if (led_reserve(&ubeat_led, THIS_MODULE) == 0)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: drivers/leds/ubeat.c:155:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1255: FILE: drivers/leds/ubeat.c:156:
+    printk (KERN_INFO "ubeat_led: got led %.8x\n", ubeat_led);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1255: FILE: drivers/leds/ubeat.c:156:
+    printk (KERN_INFO "ubeat_led: got led %.8x\n", ubeat_led);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1255: FILE: drivers/leds/ubeat.c:156:
+    printk (KERN_INFO "ubeat_led: got led %.8x\n", ubeat_led);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: drivers/leds/ubeat.c:157:
+    ubeat_have_led = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1257: FILE: drivers/leds/ubeat.c:158:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1258: FILE: drivers/leds/ubeat.c:159:
+  if (ubeat_timeout == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1258: FILE: drivers/leds/ubeat.c:159:
+  if (ubeat_timeout == 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1258: FILE: drivers/leds/ubeat.c:159:
+  if (ubeat_timeout == 0)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1259: FILE: drivers/leds/ubeat.c:160:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1260: FILE: drivers/leds/ubeat.c:161:
+    printk (KERN_INFO "ubeat_led: timeout value '0' is invalid, using 2\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1260: FILE: drivers/leds/ubeat.c:161:
+    printk (KERN_INFO "ubeat_led: timeout value '0' is invalid, using 2\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1260: FILE: drivers/leds/ubeat.c:161:
+    printk (KERN_INFO "ubeat_led: timeout value '0' is invalid, using 2\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1261: FILE: drivers/leds/ubeat.c:162:
+    ubeat_timeout = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1262: FILE: drivers/leds/ubeat.c:163:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1263: FILE: drivers/leds/ubeat.c:164:
+  if (ubeat_timeout < 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1263: FILE: drivers/leds/ubeat.c:164:
+  if (ubeat_timeout < 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1263: FILE: drivers/leds/ubeat.c:164:
+  if (ubeat_timeout < 0)
+  {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1263: FILE: drivers/leds/ubeat.c:164:
+  if (ubeat_timeout < 0)
[...]
+  } else {
[...]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1264: FILE: drivers/leds/ubeat.c:165:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1265: FILE: drivers/leds/ubeat.c:166:
+    ubeat_interval = HZ / (-1 * ubeat_timeout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1266: FILE: drivers/leds/ubeat.c:167:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1266: FILE: drivers/leds/ubeat.c:167:
+  } else {
+    ubeat_interval = HZ * ubeat_timeout;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1267: FILE: drivers/leds/ubeat.c:168:
+    ubeat_interval = HZ * ubeat_timeout;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1268: FILE: drivers/leds/ubeat.c:169:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1269: FILE: drivers/leds/ubeat.c:170:
+  if (ubeat_interval == 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1269: FILE: drivers/leds/ubeat.c:170:
+  if (ubeat_interval == 0)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1269: FILE: drivers/leds/ubeat.c:170:
+  if (ubeat_interval == 0)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1270: FILE: drivers/leds/ubeat.c:171:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1271: FILE: drivers/leds/ubeat.c:172:
+    printk (KERN_INFO "ubeat_led: timeout value out of range, using 2\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1271: FILE: drivers/leds/ubeat.c:172:
+    printk (KERN_INFO "ubeat_led: timeout value out of range, using 2\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1271: FILE: drivers/leds/ubeat.c:172:
+    printk (KERN_INFO "ubeat_led: timeout value out of range, using 2\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1272: FILE: drivers/leds/ubeat.c:173:
+    ubeat_interval = 2 * HZ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1273: FILE: drivers/leds/ubeat.c:174:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: drivers/leds/ubeat.c:175:
+  init_timer (&ubeat_timer);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1274: FILE: drivers/leds/ubeat.c:175:
+  init_timer (&ubeat_timer);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1275: FILE: drivers/leds/ubeat.c:176:
+  ubeat_timer.function = ubeat_timeup;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1276: FILE: drivers/leds/ubeat.c:177:
+  return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1301: FILE: include/linux/leds.h:1:
+#ifndef LINUX_LEDS_H__

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#1309: FILE: include/linux/leds.h:9:
+enum ownertype
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1310: FILE: include/linux/leds.h:10:
+  leds_noone = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: include/linux/leds.h:11:
+  leds_kernel,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1312: FILE: include/linux/leds.h:12:
+  leds_user,$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1316: FILE: include/linux/leds.h:16:
+struct led_owner
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1317: FILE: include/linux/leds.h:17:
+  enum ownertype ownertype;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: include/linux/leds.h:18:
+  union$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: include/linux/leds.h:19:
+  {$

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#1319: FILE: include/linux/leds.h:19:
+  union
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: include/linux/leds.h:20:
+    struct module *module;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: include/linux/leds.h:21:
+    struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: include/linux/leds.h:22:
+      pid_t pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: include/linux/leds.h:23:
+      uid_t uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: include/linux/leds.h:24:
+    } processdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: include/linux/leds.h:25:
+  } ownerdata;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1329: FILE: include/linux/leds.h:29:
+struct linux_leds_info
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1330: FILE: include/linux/leds.h:30:
+  struct list_head list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1331: FILE: include/linux/leds.h:31:
+  unsigned int id:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: include/linux/leds.h:32:
+  unsigned int count:24;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1333: FILE: include/linux/leds.h:33:
+  unsigned char (*get_state)(unsigned int, void *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1333: FILE: include/linux/leds.h:33:
+  unsigned char (*get_state)(unsigned int, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1333: FILE: include/linux/leds.h:33:
+  unsigned char (*get_state)(unsigned int, void *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1334: FILE: include/linux/leds.h:34:
+  void (*set_state)(unsigned int, unsigned char, void *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1334: FILE: include/linux/leds.h:34:
+  void (*set_state)(unsigned int, unsigned char, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#1334: FILE: include/linux/leds.h:34:
+  void (*set_state)(unsigned int, unsigned char, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1334: FILE: include/linux/leds.h:34:
+  void (*set_state)(unsigned int, unsigned char, void *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1335: FILE: include/linux/leds.h:35:
+  void (*reserve)(void *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1335: FILE: include/linux/leds.h:35:
+  void (*reserve)(void *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: include/linux/leds.h:36:
+  void (*release)(void *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1336: FILE: include/linux/leds.h:36:
+  void (*release)(void *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: include/linux/leds.h:37:
+  void *data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: include/linux/leds.h:38:
+  struct module *drivername;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: include/linux/leds.h:39:
+  struct led_owner *owners;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1342: FILE: include/linux/leds.h:42:
+extern int led_get(unsigned int idx);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1343: FILE: include/linux/leds.h:43:
+extern int led_set(unsigned int idx, unsigned char state, struct module *mod);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1344: FILE: include/linux/leds.h:44:
+extern int led_reserve(unsigned int *idx, struct module *mod);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1345: FILE: include/linux/leds.h:45:
+extern int led_release(unsigned int idx, struct module *mod);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1346: FILE: include/linux/leds.h:46:
+extern unsigned int leds_count(void);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1347: FILE: include/linux/leds.h:47:
+extern int leds_add (struct linux_leds_info *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1347: FILE: include/linux/leds.h:47:
+extern int leds_add (struct linux_leds_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct linux_leds_info *' should also have an identifier name
#1347: FILE: include/linux/leds.h:47:
+extern int leds_add (struct linux_leds_info *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1348: FILE: include/linux/leds.h:48:
+extern int leds_del (struct linux_leds_info *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1348: FILE: include/linux/leds.h:48:
+extern int leds_del (struct linux_leds_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct linux_leds_info *' should also have an identifier name
#1348: FILE: include/linux/leds.h:48:
+extern int leds_del (struct linux_leds_info *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: include/linux/leds.h:55:
+  unsigned int idx; /* LEDS are indexed from zero */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: include/linux/leds.h:56:
+  unsigned char state; /* 0 for off, ~0 for on */$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1373: FILE: include/linux/ubeat.h:1:
+#ifndef LINUX_UBEAT_H__

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350302.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 134 errors, 929 warnings, 57 checks, 1283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350302.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
