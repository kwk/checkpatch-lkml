WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#36: FILE: Makefile:4:
+EXTRAVERSION = .12
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#50: FILE: arch/ia64/sn/kernel/xpc_channel.c:282:
+	bte_ret = xp_bte_copy((u64) src, (u64) dst, (u64) cnt,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#51: FILE: arch/ia64/sn/kernel/xpc_channel.c:283:
+	bte_ret = xp_bte_copy((u64) src, (u64) dst, (u64) cnt,
+					(BTE_NORMAL | BTE_WACQUIRE), NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#91: FILE: arch/ia64/sn/kernel/xpc_main.c:1224:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: arch/ia64/sn/kernel/xpc_main.c:1226:
+	buf_size = max(XPC_RP_VARS_SIZE,
+				XPC_RP_HEADER_SIZE + XP_NASID_MASK_BYTES);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: arch/ia64/sn/kernel/xpc_main.c:1228:
+	xpc_remote_copy_buffer = xpc_kmalloc_cacheline_aligned(buf_size,
+				     GFP_KERNEL, &xpc_remote_copy_buffer_base);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xpc_remote_copy_buffer"
#96: FILE: arch/ia64/sn/kernel/xpc_main.c:1229:
+	if (xpc_remote_copy_buffer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: arch/ia64/sn/kernel/xpc_partition.c:148:
+		bte_res = xp_bte_copy(rp_pa, buf, buf_len,
 					(BTE_NOTIFY | BTE_WACQUIRE), NULL);

CHECK:SPACING: No space is necessary after a cast
#169: FILE: arch/ia64/sn/kernel/xpc_partition.c:446:
+					(u64) remote_vars,

CHECK:SPACING: No space is necessary after a cast
#179: FILE: arch/ia64/sn/kernel/xpc_partition.c:497:
+	bres = xp_bte_copy(*remote_rp_pa, (u64) remote_rp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: arch/ia64/sn/kernel/xpc_partition.c:498:
+	bres = xp_bte_copy(*remote_rp_pa, (u64) remote_rp,
 				XPC_RP_HEADER_SIZE + xp_nasid_mask_bytes,

CHECK:SPACING: No space is necessary after a cast
#192: FILE: arch/ia64/sn/kernel/xpc_partition.c:553:
+	bres = xp_bte_copy(remote_vars_pa, (u64) remote_vars, XPC_RP_VARS_SIZE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: arch/ia64/sn/kernel/xpc_partition.c:554:
+	bres = xp_bte_copy(remote_vars_pa, (u64) remote_vars, XPC_RP_VARS_SIZE,
 				(BTE_NOTIFY | BTE_WACQUIRE), NULL);

CHECK:SPACING: No space is necessary after a cast
#201: FILE: arch/ia64/sn/kernel/xpc_partition.c:1234:
+	bte_res = xp_bte_copy(part_nasid_pa, (u64) nasid_mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: arch/ia64/sn/kernel/xpc_partition.c:1235:
+	bte_res = xp_bte_copy(part_nasid_pa, (u64) nasid_mask,
 			xp_nasid_mask_bytes, (BTE_NOTIFY | BTE_WACQUIRE), NULL);

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: drivers/md/dm-exception-store.c:216:
+			DMWARN("chunk size %llu in device metadata overrides "
+			       "table chunk size of %llu.",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/md/dm-exception-store.c:413:
+	ps->callbacks = dm_vcalloc(ps->exceptions_per_area,
+			sizeof(*ps->callbacks));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#541: FILE: drivers/md/dm-raid1.c:109:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#544: FILE: drivers/md/dm-raid1.c:112:
+ *---------------------------------------------------------------*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*nreg)...) over kmalloc(sizeof(struct region)...)
#588: FILE: drivers/md/dm-raid1.c:258:
+		nreg = kmalloc(sizeof(struct region), GFP_NOIO);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#848: FILE: drivers/md/dm.c:912:
+	BUG_ON(old_md != MINOR_ALLOCED);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: drivers/md/dm.c:1054:
+^I           test_bit(DMF_FREEING, &md->flags))) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#903: FILE: drivers/md/dm.c:1094:
+	BUG_ON(test_bit(DMF_FREEING, &md->flags));

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_1000baseT_Full>
#998: FILE: drivers/net/sky2.c:402:
+			if (sky2->advertising & ADVERTISED_1000baseT_Full)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_1000baseT_Half>
#1000: FILE: drivers/net/sky2.c:404:
+			if (sky2->advertising & ADVERTISED_1000baseT_Half)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1062: FILE: drivers/net/sky2.c:2303:
 static int __devinit sky2_reset(struct sky2_hw *hw)

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Half>
#1093: FILE: drivers/net/sky2.c:2450:
+		u32 modes = SUPPORTED_10baseT_Half

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Full>
#1094: FILE: drivers/net/sky2.c:2451:
+			| SUPPORTED_10baseT_Full

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Half>
#1095: FILE: drivers/net/sky2.c:2452:
+			| SUPPORTED_100baseT_Half

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Full>
#1096: FILE: drivers/net/sky2.c:2453:
+			| SUPPORTED_100baseT_Full

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Full>
#1102: FILE: drivers/net/sky2.c:2458:
+				| SUPPORTED_1000baseT_Full;

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Half>
#1108: FILE: drivers/net/sky2.c:2461:
+		return  SUPPORTED_1000baseT_Half

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1145: FILE: drivers/net/sky2.c:3204:
+	init_waitqueue_head (&hw->msi_wait);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1172: FILE: drivers/net/sky2.h:1323:
+	PHY_M_FIB_FORCE_LNK	= 1<<10,/* Force Link Good */
 	                   	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1173: FILE: drivers/net/sky2.h:1324:
+	PHY_M_FIB_SIGD_POL	= 1<<9,	/* SIGDET Polarity */
 	                  	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1174: FILE: drivers/net/sky2.h:1325:
+	PHY_M_FIB_TX_DIS	= 1<<3,	/* Transmitter Disable */
 	                	   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1186: FILE: drivers/net/sky2.h:1577:
+^I^I  ^I  GMR_FS_MII_ERR | GMR_FS_BAD_FC |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1186: FILE: drivers/net/sky2.h:1577:
+^I^I  ^I  GMR_FS_MII_ERR | GMR_FS_BAD_FC |$

WARNING:TABSTOP: Statements should start on a tabstop
#1300: FILE: fs/binfmt_elf.c:392:
+	    if (BAD_ADDR(k) || eppnt->p_filesz > eppnt->p_memsz ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#1364: FILE: fs/ext2/super.c:274:
+	if (inode == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1367: FILE: fs/ext2/super.c:277:
+	if (is_bad_inode(inode)
+	    || (generation && inode->i_generation != generation)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1370: FILE: fs/ext2/super.c:280:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1378: FILE: fs/ext2/super.c:288:
+		iput(inode);
 		^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1384: FILE: fs/ext2/super.c:294:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fl"
#1408: FILE: fs/locks.c:1394:
+	if (fl == NULL)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1446: FILE: include/asm-ia64/sn/xp.h:63:
+ * ^Isrc - physical address of the source of the transfer.$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1471: FILE: include/asm-ia64/sn/xp.h:86:
+	BUG_ON(REGION_NUMBER(vdst) != RGN_KERNEL);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1494: FILE: include/asm-ia64/sn/xpc.h:689:
+extern void *xpc_kmalloc_cacheline_aligned(size_t, gfp_t, void **);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1494: FILE: include/asm-ia64/sn/xpc.h:689:
+extern void *xpc_kmalloc_cacheline_aligned(size_t, gfp_t, void **);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#1494: FILE: include/asm-ia64/sn/xpc.h:689:
+extern void *xpc_kmalloc_cacheline_aligned(size_t, gfp_t, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#1494: FILE: include/asm-ia64/sn/xpc.h:689:
+extern void *xpc_kmalloc_cacheline_aligned(size_t, gfp_t, void **);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1552: FILE: include/linux/skbuff.h:1023:
+	int err = pskb_trim(skb, len);
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1552: FILE: include/linux/skbuff.h:1023:
+	BUG_ON(err);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1781: FILE: net/sctp/socket.c:1249:
+		if (sock_flag(sk, SOCK_LINGER) && !sk->sk_lingertime) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1787: FILE: net/sctp/socket.c:1255:
+		} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000039880.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 19 warnings, 35 checks, 1508 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000039880.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
