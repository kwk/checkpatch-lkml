WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
bits set, and the framework code assigns the appropriate event handler to the

WARNING:TYPO_SPELLING: 'evalutation' may be misspelled - perhaps 'evaluation'?
#46: 
runtime evalutation of the assigned function bits.
        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: include/linux/clockchips.h:1:
+/*  linux/include/linux/clockchips.h

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#72: FILE: include/linux/clockchips.h:1:
+/*  linux/include/linux/clockchips.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clock_event_device *' should also have an identifier name
#149: FILE: include/linux/clockchips.h:78:
+	void		(*set_next_event)(unsigned long evt,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clock_event_device *' should also have an identifier name
#151: FILE: include/linux/clockchips.h:80:
+	void		(*set_mode)(enum clock_event_mode mode,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#170: FILE: include/linux/clockchips.h:99:
+	uint64_t tmp = ((uint64_t)ticks) << shift;

CHECK:SPACING: No space is necessary after a cast
#173: FILE: include/linux/clockchips.h:102:
+	return (unsigned long) tmp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: include/linux/clockchips.h:106:
+extern int register_local_clockevent(struct clock_event_device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: include/linux/clockchips.h:107:
+extern int register_global_clockevent(struct clock_event_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct clock_event_device *' should also have an identifier name
#178: FILE: include/linux/clockchips.h:107:
+extern int register_global_clockevent(struct clock_event_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: include/linux/clockchips.h:108:
+extern unsigned long clockevent_delta2ns(unsigned long latch,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: include/linux/clockchips.h:110:
+extern void clockevents_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: include/linux/clockchips.h:112:
+extern int clockevents_init_next_event(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/clockchips.h:113:
+extern int clockevents_set_next_event(ktime_t expires, int force);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: include/linux/clockchips.h:114:
+extern int clockevents_next_event_available(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: include/linux/clockchips.h:115:
+extern void clockevents_resume_events(void);

ERROR:SPACING: space required before the open parenthesis '('
#189: FILE: include/linux/clockchips.h:118:
+# define clockevents_init()		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#190: FILE: include/linux/clockchips.h:119:
+# define clockevents_resume_events()	do { } while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#203: FILE: include/linux/hrtimer.h:148:
+extern ktime_t ktime_get(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: include/linux/hrtimer.h:149:
+extern ktime_t ktime_get_real(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#279: FILE: kernel/time/clockevents.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#280: FILE: kernel/time/clockevents.c:2:
+ * linux/kernel/time/clockevents.c

CHECK:SPACING: No space is necessary after a cast
#352: FILE: kernel/time/clockevents.c:74:
+	u64 clc = ((u64) latch << evt->shift);

CHECK:SPACING: No space is necessary after a cast
#360: FILE: kernel/time/clockevents.c:82:
+	return (unsigned long) clc;

WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#445: FILE: kernel/time/clockevents.c:167:
+ * The event handler is choosen by the capability flags of the clock event
                         ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#456: FILE: kernel/time/clockevents.c:178:
+	handle_update_profile,		/* 6: Update process times +
+					      profiling */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#456: FILE: kernel/time/clockevents.c:178:
+					      profiling */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#458: FILE: kernel/time/clockevents.c:180:
+	handle_tick_update_profile,	/* 7: Tick + update process times +
+					      profiling */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#458: FILE: kernel/time/clockevents.c:180:
+					      profiling */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#495: FILE: kernel/time/clockevents.c:217:
+	printk(KERN_INFO "Clock event device %s configured with caps set: "

WARNING:SPLIT_STRING: quoted string split across lines
#496: FILE: kernel/time/clockevents.c:218:
+	printk(KERN_INFO "Clock event device %s configured with caps set: "
+	       "%02x\n", evt->name, descr->real_caps);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#515: FILE: kernel/time/clockevents.c:237:
+		printk(KERN_ERR "Global clock event device already installed: "

WARNING:SPLIT_STRING: quoted string split across lines
#516: FILE: kernel/time/clockevents.c:238:
+		printk(KERN_ERR "Global clock event device already installed: "
+		       "%s. Ignoring new global eventsoruce %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#529: FILE: kernel/time/clockevents.c:251:
+		printk(KERN_ERR "Unsupported clock event device %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#568: FILE: kernel/time/clockevents.c:290:
+		printk(KERN_INFO "Clock event device %s new caps set: %02x\n" ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#568: FILE: kernel/time/clockevents.c:290:
+		printk(KERN_INFO "Clock event device %s new caps set: %02x\n" ,
 		                                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#577: FILE: kernel/time/clockevents.c:299:
+		printk(KERN_INFO "Clock event device %s disabled\n" ,

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#577: FILE: kernel/time/clockevents.c:299:
+		printk(KERN_INFO "Clock event device %s disabled\n" ,
 		                                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#602: FILE: kernel/time/clockevents.c:324:
+		printk(KERN_ERR "Unsupported clock event device %s\n",

CHECK:BRACES: Unbalanced braces around else statement
#625: FILE: kernel/time/clockevents.c:347:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#626: FILE: kernel/time/clockevents.c:348:
+		printk(KERN_INFO "Inactive clock event device %s registered\n",

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#756: FILE: kernel/time/clockevents.c:478:
+	int64_t delta = ktime_to_ns(ktime_sub(expires, ktime_get()));

ERROR:SPACING: space required before the open parenthesis '('
#819: FILE: kernel/time/clockevents.c:541:
+	switch(action) {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#836: FILE: kernel/time/clockevents.c:558:
+static struct notifier_block __devinitdata clockevents_nb = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after clockevents_nb
#836: FILE: kernel/time/clockevents.c:558:
+static struct notifier_block __devinitdata clockevents_nb = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: kernel/time/clockevents.c:565:
+	clockevents_cpu_notify(&clockevents_nb, (unsigned long)CPU_UP_PREPARE,
+				(void *)(long)smp_processor_id());

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031654.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 25 warnings, 17 checks, 745 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031654.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
