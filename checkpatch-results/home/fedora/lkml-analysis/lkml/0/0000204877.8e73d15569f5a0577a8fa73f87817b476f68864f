WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Content-Disposition: attachment; filename=kexec-tools-crashdump-elf-headers-x86.patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: kexec/arch/i386/crashdump-x86.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: kexec/arch/i386/crashdump-x86.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#79: FILE: kexec/arch/i386/crashdump-x86.c:18:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#97: FILE: kexec/arch/i386/crashdump-x86.c:36:
+ * A separate program header is created for backup region */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:STATIC_CONST_CHAR_ARRAY: const array should probably be static const
#116: FILE: kexec/arch/i386/crashdump-x86.c:55:
+	const char iomem[]= "/proc/iomem";

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#116: FILE: kexec/arch/i386/crashdump-x86.c:55:
+	const char iomem[]= "/proc/iomem";
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#120: FILE: kexec/arch/i386/crashdump-x86.c:59:
+	FILE *fp;
+	fp = fopen(iomem, "r");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#127: FILE: kexec/arch/i386/crashdump-x86.c:66:
+	 * 640K in different manner hence hardcoding it */

ERROR:SPACING: space required before the open parenthesis '('
#133: FILE: kexec/arch/i386/crashdump-x86.c:72:
+	while(fgets(line, sizeof(line), fp) != 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#137: FILE: kexec/arch/i386/crashdump-x86.c:76:
+		int type, consumed, count;
+		if (memory_ranges >= CRASH_MAX_MEMORY_RANGES)

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#139: FILE: kexec/arch/i386/crashdump-x86.c:78:
+		count = sscanf(line, "%Lx-%Lx : %n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: kexec/arch/i386/crashdump-x86.c:79:
+		count = sscanf(line, "%Lx-%Lx : %n",
+			&start, &end, &consumed);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#144: FILE: kexec/arch/i386/crashdump-x86.c:83:
+#if 0

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#145: FILE: kexec/arch/i386/crashdump-x86.c:84:
+		printf("%016Lx-%016Lx : %s",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: kexec/arch/i386/crashdump-x86.c:85:
+		printf("%016Lx-%016Lx : %s",
+			start, end, str);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#151: FILE: kexec/arch/i386/crashdump-x86.c:90:
+		} else if (memcmp(str, "Crash kernel\n", 13) == 0) {
[...]
+				crash_reserved_mem.start = start;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#153: FILE: kexec/arch/i386/crashdump-x86.c:92:
+				 * use this region to boot into. */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#167: FILE: kexec/arch/i386/crashdump-x86.c:106:
+#if 0

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#168: FILE: kexec/arch/i386/crashdump-x86.c:107:
+		printf("%016Lx-%016Lx : %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: kexec/arch/i386/crashdump-x86.c:108:
+		printf("%016Lx-%016Lx : %s\n",
+			start, end, str);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#180: FILE: kexec/arch/i386/crashdump-x86.c:119:
+ * boot. Segment start and end should be aligned to 1K boundary. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: kexec/arch/i386/crashdump-x86.c:121:
+int add_memmap(struct memory_range *memmap_p, unsigned long long addr,
+								size_t size)

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#188: FILE: kexec/arch/i386/crashdump-x86.c:127:
+	if ((addr%1024) || (size%1024))
 	         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#188: FILE: kexec/arch/i386/crashdump-x86.c:127:
+	if ((addr%1024) || (size%1024))
 	                        ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#197: FILE: kexec/arch/i386/crashdump-x86.c:136:
+			break;
+		else

WARNING:BRACES: braces {} are not necessary for single statement blocks
#207: FILE: kexec/arch/i386/crashdump-x86.c:146:
+		if (mstart == 0 && mend == 0) {
+			break;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#210: FILE: kexec/arch/i386/crashdump-x86.c:149:
+		if (mstart <= (addr+size-1) && mend >=addr) {
 		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#210: FILE: kexec/arch/i386/crashdump-x86.c:149:
+		if (mstart <= (addr+size-1) && mend >=addr) {
 		                        ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#210: FILE: kexec/arch/i386/crashdump-x86.c:149:
+		if (mstart <= (addr+size-1) && mend >=addr) {
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#214: FILE: kexec/arch/i386/crashdump-x86.c:153:
+			tidx = i+1;
 			        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#218: FILE: kexec/arch/i386/crashdump-x86.c:157:
+		for (j = nr_entries-1; j >= tidx; j--) {
 		                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#218: FILE: kexec/arch/i386/crashdump-x86.c:157:
+		for (j = nr_entries-1; j >= tidx; j--) {
+			memmap_p[j+1] = memmap_p[j];
+		}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#219: FILE: kexec/arch/i386/crashdump-x86.c:158:
+			memmap_p[j+1] = memmap_p[j];
 			          ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#223: FILE: kexec/arch/i386/crashdump-x86.c:162:
+#if 0

WARNING:BRACES: braces {} are not necessary for single statement blocks
#228: FILE: kexec/arch/i386/crashdump-x86.c:167:
+		if (mstart == 0 && mend == 0) {
+			break;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: kexec/arch/i386/crashdump-x86.c:171:
+		printf("%016llx - %016llx\n",
+			mstart, mend);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#239: FILE: kexec/arch/i386/crashdump-x86.c:178:
+ * boot. Segment start and end should be aligned to 1K boundary. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: kexec/arch/i386/crashdump-x86.c:180:
+int delete_memmap(struct memory_range *memmap_p, unsigned long long addr,
+								size_t size)

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#248: FILE: kexec/arch/i386/crashdump-x86.c:187:
+	if ((addr%1024) || (size%1024))
 	         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#248: FILE: kexec/arch/i386/crashdump-x86.c:187:
+	if ((addr%1024) || (size%1024))
 	                        ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#256: FILE: kexec/arch/i386/crashdump-x86.c:195:
+			break;
+		else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#271: FILE: kexec/arch/i386/crashdump-x86.c:210:
+			if (mstart == addr && mend == (addr+size-1)) {
 			                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#271: FILE: kexec/arch/i386/crashdump-x86.c:210:
+			if (mstart == addr && mend == (addr+size-1)) {
 			                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#277: FILE: kexec/arch/i386/crashdump-x86.c:216:
+			if (mstart != addr && mend != (addr+size-1)) {
 			                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#277: FILE: kexec/arch/i386/crashdump-x86.c:216:
+			if (mstart != addr && mend != (addr+size-1)) {
 			                                        ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#290: FILE: kexec/arch/i386/crashdump-x86.c:229:
+				break;
+			} else {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#296: FILE: kexec/arch/i386/crashdump-x86.c:235:
+	if ((operation == 1) && tidx >=0) {
 	                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'operation == 1'
#296: FILE: kexec/arch/i386/crashdump-x86.c:235:
+	if ((operation == 1) && tidx >=0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#298: FILE: kexec/arch/i386/crashdump-x86.c:237:
+		for (j = nr_entries-1; j > tidx; j--) {
 		                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#298: FILE: kexec/arch/i386/crashdump-x86.c:237:
+		for (j = nr_entries-1; j > tidx; j--) {
+			memmap_p[j+1] = memmap_p[j];
+		}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#299: FILE: kexec/arch/i386/crashdump-x86.c:238:
+			memmap_p[j+1] = memmap_p[j];
 			          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#301: FILE: kexec/arch/i386/crashdump-x86.c:240:
+		memmap_p[tidx+1] = temp_region;
 		             ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#303: FILE: kexec/arch/i386/crashdump-x86.c:242:
+	if ((operation == -1) && tidx >=0) {
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#305: FILE: kexec/arch/i386/crashdump-x86.c:244:
+		for (j = i+1; j < CRASH_MAX_MEMMAP_NR; j++) {
 		          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#305: FILE: kexec/arch/i386/crashdump-x86.c:244:
+		for (j = i+1; j < CRASH_MAX_MEMMAP_NR; j++) {
+			memmap_p[j-1] = memmap_p[j];
+		}

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#306: FILE: kexec/arch/i386/crashdump-x86.c:245:
+			memmap_p[j-1] = memmap_p[j];
 			          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#308: FILE: kexec/arch/i386/crashdump-x86.c:247:
+		memmap_p[j-1].start = memmap_p[j-1].end = 0;
 		          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#308: FILE: kexec/arch/i386/crashdump-x86.c:247:
+		memmap_p[j-1].start = memmap_p[j-1].end = 0;
 		                                ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#308: FILE: kexec/arch/i386/crashdump-x86.c:247:
+		memmap_p[j-1].start = memmap_p[j-1].end = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#310: FILE: kexec/arch/i386/crashdump-x86.c:249:
+#if 0

WARNING:BRACES: braces {} are not necessary for single statement blocks
#315: FILE: kexec/arch/i386/crashdump-x86.c:254:
+		if (mstart == 0 && mend == 0) {
+			break;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: kexec/arch/i386/crashdump-x86.c:258:
+		printf("%016llx - %016llx\n",
+			mstart, mend);

ERROR:SPACING: spaces required around that '/=' (ctx:WxV)
#333: FILE: kexec/arch/i386/crashdump-x86.c:272:
+	} while ((i /=10) > 0);
 	            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#345: FILE: kexec/arch/i386/crashdump-x86.c:284:
+ * memory regions the new kernel can use to boot into. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#361: FILE: kexec/arch/i386/crashdump-x86.c:300:
+		unsigned long startk, endk;
+		startk = (memmap_p[i].start/1024);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#361: FILE: kexec/arch/i386/crashdump-x86.c:300:
+		startk = (memmap_p[i].start/1024);
 		                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#362: FILE: kexec/arch/i386/crashdump-x86.c:301:
+		endk = ((memmap_p[i].end + 1)/1024);
 		                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#368: FILE: kexec/arch/i386/crashdump-x86.c:307:
+		 * up precious command line length. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#371: FILE: kexec/arch/i386/crashdump-x86.c:310:
+		strcpy (str_mmap, " memmap=");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#372: FILE: kexec/arch/i386/crashdump-x86.c:311:
+		ultoa((endk-startk), str_tmp);
 		           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#373: FILE: kexec/arch/i386/crashdump-x86.c:312:
+		strcat (str_mmap, str_tmp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#374: FILE: kexec/arch/i386/crashdump-x86.c:313:
+		strcat (str_mmap, "K@");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: kexec/arch/i386/crashdump-x86.c:315:
+		strcat (str_mmap, str_tmp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: kexec/arch/i386/crashdump-x86.c:316:
+		strcat (str_mmap, "K");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#385: FILE: kexec/arch/i386/crashdump-x86.c:324:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#399: FILE: kexec/arch/i386/crashdump-x86.c:338:
+	 * Ensure 1K alignment*/

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#400: FILE: kexec/arch/i386/crashdump-x86.c:339:
+	if (addr%1024)
 	        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#402: FILE: kexec/arch/i386/crashdump-x86.c:341:
+	addr = addr/1024;
 	           ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#413: FILE: kexec/arch/i386/crashdump-x86.c:352:
+#if 0

WARNING:STATIC_CONST_CHAR_ARRAY: const array should probably be static const
#423: FILE: kexec/arch/i386/crashdump-x86.c:362:
+	const char crash_notes[]= "/sys/kernel/crash_notes";

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#423: FILE: kexec/arch/i386/crashdump-x86.c:362:
+	const char crash_notes[]= "/sys/kernel/crash_notes";
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#437: FILE: kexec/arch/i386/crashdump-x86.c:376:
+		int count;
+		count = sscanf(line, "%lx", addr);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#437: FILE: kexec/arch/i386/crashdump-x86.c:376:
+		count = sscanf(line, "%lx", addr);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#442: FILE: kexec/arch/i386/crashdump-x86.c:381:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: kexec/arch/i386/crashdump-x86.c:390:
+int prepare_crash_memory_elf_headers(struct kexec_info *info, void *buf,
+					unsigned long size)

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Ehdr>
#453: FILE: kexec/arch/i386/crashdump-x86.c:392:
+	Elf64_Ehdr *elf;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Phdr>
#454: FILE: kexec/arch/i386/crashdump-x86.c:393:
+	Elf64_Phdr *phdr;

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#457: FILE: kexec/arch/i386/crashdump-x86.c:396:
+	long int nr_cpus = 0;

CHECK:SPACING: No space is necessary after a cast
#460: FILE: kexec/arch/i386/crashdump-x86.c:399:
+	bufp = (char*) buf;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#460: FILE: kexec/arch/i386/crashdump-x86.c:399:
+	bufp = (char*) buf;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#462: FILE: kexec/arch/i386/crashdump-x86.c:401:
+	elf = (Elf64_Ehdr *) bufp;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#467: FILE: kexec/arch/i386/crashdump-x86.c:406:
+	elf->e_ident[EI_VERSION]= EV_CURRENT;
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#469: FILE: kexec/arch/i386/crashdump-x86.c:408:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#469: FILE: kexec/arch/i386/crashdump-x86.c:408:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#478: FILE: kexec/arch/i386/crashdump-x86.c:417:
+	elf->e_phentsize= sizeof(Elf64_Phdr);
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#480: FILE: kexec/arch/i386/crashdump-x86.c:419:
+	elf->e_shentsize= 0;
 	                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#486: FILE: kexec/arch/i386/crashdump-x86.c:425:
+	if (nr_cpus < 0) {
+		return -1;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: kexec/arch/i386/crashdump-x86.c:430:
+	if (get_crash_notes_section_addr (&notes_addr) < 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&notes_addr'
#491: FILE: kexec/arch/i386/crashdump-x86.c:430:
+	if (get_crash_notes_section_addr (&notes_addr) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#491: FILE: kexec/arch/i386/crashdump-x86.c:430:
+	if (get_crash_notes_section_addr (&notes_addr) < 0) {
+		return -1;
+	}

CHECK:SPACING: No space is necessary after a cast
#496: FILE: kexec/arch/i386/crashdump-x86.c:435:
+		phdr = (Elf64_Phdr *) bufp;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#501: FILE: kexec/arch/i386/crashdump-x86.c:440:
+		phdr->p_vaddr	= phdr->p_paddr	= notes_offset;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#502: FILE: kexec/arch/i386/crashdump-x86.c:441:
+		phdr->p_filesz	= phdr->p_memsz	= MAX_NOTE_BYTES;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#505: FILE: kexec/arch/i386/crashdump-x86.c:444:
+^I^Inotes_offset ^I+= MAX_NOTE_BYTES;$

WARNING:TYPO_SPELLING: 'seprate' may be misspelled - perhaps 'separate'?
#509: FILE: kexec/arch/i386/crashdump-x86.c:448:
+	 * A seprate program header for Backup Region*/
 	     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#509: FILE: kexec/arch/i386/crashdump-x86.c:448:
+	 * A seprate program header for Backup Region*/

WARNING:LINE_SPACING: Missing a blank line after declarations
#512: FILE: kexec/arch/i386/crashdump-x86.c:451:
+		unsigned long long mstart, mend;
+		mstart = crash_memory_range[i].start;

CHECK:SPACING: No space is necessary after a cast
#516: FILE: kexec/arch/i386/crashdump-x86.c:455:
+		phdr = (Elf64_Phdr *) bufp;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#519: FILE: kexec/arch/i386/crashdump-x86.c:458:
+		phdr->p_flags	= PF_R|PF_W|PF_X;
 		             	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#519: FILE: kexec/arch/i386/crashdump-x86.c:458:
+		phdr->p_flags	= PF_R|PF_W|PF_X;
 		             	           ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#524: FILE: kexec/arch/i386/crashdump-x86.c:463:
+		phdr->p_vaddr = phdr->p_paddr = mstart;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#525: FILE: kexec/arch/i386/crashdump-x86.c:464:
+		phdr->p_filesz	= phdr->p_memsz	= mend - mstart + 1;

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#538: FILE: kexec/arch/i386/crashdump-x86.h:4:
+int get_crash_memory_ranges(struct memory_range** range, int* ranges);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#538: FILE: kexec/arch/i386/crashdump-x86.h:4:
+int get_crash_memory_ranges(struct memory_range** range, int* ranges);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: kexec/arch/i386/crashdump-x86.h:6:
+int prepare_crash_memory_elf_headers(struct kexec_info *info, void *buf,
+						unsigned long size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: kexec/arch/i386/crashdump-x86.h:8:
+int add_memmap(struct memory_range *memmap_p, unsigned long long addr,
+								size_t size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: kexec/arch/i386/crashdump-x86.h:10:
+int delete_memmap(struct memory_range *memmap_p, unsigned long long addr,
+								size_t size);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#551: FILE: kexec/arch/i386/crashdump-x86.h:17:
+#define __pa(x)		((unsigned long)(x)-PAGE_OFFSET)
                		                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#590: FILE: kexec/arch/i386/kexec-elf-x86.c:170:
+	 * that case. */

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#609: FILE: kexec/arch/i386/kexec-elf-x86.c:251:
+			long int nr_cpus = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#614: FILE: kexec/arch/i386/kexec-elf-x86.c:256:
+			if (get_crash_memory_ranges(&mem_range, &nr_ranges) < 0) {
+				return -1;
+			}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#618: FILE: kexec/arch/i386/kexec-elf-x86.c:260:
+			 * boot into. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: kexec/arch/i386/kexec-elf-x86.c:262:
+ ^I^I^Imemmap_p = xmalloc(sz);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#620: FILE: kexec/arch/i386/kexec-elf-x86.c:262:
+ ^I^I^Imemmap_p = xmalloc(sz);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: kexec/arch/i386/kexec-elf-x86.c:262:
+ ^I^I^Imemmap_p = xmalloc(sz);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: kexec/arch/i386/kexec-elf-x86.c:263:
+ ^I^I^Imemset(memmap_p, 0, sz);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#621: FILE: kexec/arch/i386/kexec-elf-x86.c:263:
+ ^I^I^Imemset(memmap_p, 0, sz);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: kexec/arch/i386/kexec-elf-x86.c:263:
+ ^I^I^Imemset(memmap_p, 0, sz);$

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#623: FILE: kexec/arch/i386/kexec-elf-x86.c:265:
+			sz = crash_reserved_mem.end - crash_reserved_mem.start +1;
 			                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: kexec/arch/i386/kexec-elf-x86.c:267:
+ ^I^I^I/* Create a backup region segment to store backup data*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#625: FILE: kexec/arch/i386/kexec-elf-x86.c:267:
+ ^I^I^I/* Create a backup region segment to store backup data*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: kexec/arch/i386/kexec-elf-x86.c:267:
+ ^I^I^I/* Create a backup region segment to store backup data*/$

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: kexec/arch/i386/kexec-elf-x86.c:277:
+ ^I^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#635: FILE: kexec/arch/i386/kexec-elf-x86.c:277:
+ ^I^I^I */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#638: FILE: kexec/arch/i386/kexec-elf-x86.c:280:
+				fprintf(stderr,"kexec_load (elf header segment)"
 				              ^

WARNING:SPLIT_STRING: quoted string split across lines
#639: FILE: kexec/arch/i386/kexec-elf-x86.c:281:
+				fprintf(stderr,"kexec_load (elf header segment)"
+					" failed: %s\n", strerror(errno));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#642: FILE: kexec/arch/i386/kexec-elf-x86.c:284:
+^I^I^Isz = ^Isizeof(Elf64_Ehdr) +$

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#645: FILE: kexec/arch/i386/kexec-elf-x86.c:287:
+			sz = (sz + align - 1) & ~(align -1);
 			                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 63 warnings, 56 checks, 610 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
