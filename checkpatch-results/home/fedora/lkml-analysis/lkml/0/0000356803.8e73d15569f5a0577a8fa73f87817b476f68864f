WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> o We need a kernel side API for reporting error events to userspace (could

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: include/linux/kerror.h:1:
+#ifndef _KERROR_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/linux/kerror.h:10:
+extern int kernel_error_event(void *data, size_t len, __u32 groups);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/linux/kerror.h:11:
+extern int kernel_error_event_iov(const struct iovec *iov,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: include/linux/kerror.h:12:
+extern int kernel_error_event_iov(const struct iovec *iov,
+	unsigned int nseg, __u32 groups);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#113: FILE: include/linux/kerror.h:15:
+	{ return -ENOSYS; }

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: include/linux/kerror.h:17:
+static inline int kernel_error_event_iov(const struct iovec *iov,
+	unsigned int nseg, __u32 groups)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#116: FILE: include/linux/kerror.h:18:
+	{ return -ENOSYS; }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#151: FILE: net/netlink/kerror.c:1:
+/* kerror.c: Kernel error event logging facility.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: net/netlink/kerror.c:41:
+int kernel_error_event_iov(const struct iovec *iov, unsigned int nseg,
+	u32 groups)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#204: FILE: net/netlink/kerror.c:54:
+	if (skb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#214: FILE: net/netlink/kerror.c:64:
+		memcpy(p, (const void*)iov[seg].iov_base, iov[seg].iov_len);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#238: FILE: net/netlink/kerror.c:88:
+	struct iovec iov;
+	iov.iov_base = data;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#245: FILE: net/netlink/kerror.c:95:
+	printk(KERN_INFO "Initializing KERROR netlink socket\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kerror_nl"
#248: FILE: net/netlink/kerror.c:98:
+	if (kerror_nl == NULL)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'kerror_init', this function's name, in a string
#249: FILE: net/netlink/kerror.c:99:
+		panic("kerror_init: cannot initialize kerror_nl\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#277: FILE: net/netsyms.c:510:
+EXPORT_SYMBOL(kernel_error_event_iov);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 7 checks, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
