WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'a969fd5a4e162c4485ae8f3e49d674656a18fa36', maybe rebased or not pulled?
#56: 
commit a969fd5a4e162c4485ae8f3e49d674656a18fa36

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '9167b0b9a0ab7907191523f5a0528e3b9c288e21', maybe rebased or not pulled?
#61: 
commit 9167b0b9a0ab7907191523f5a0528e3b9c288e21

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'a343bb7750e6a098909c34f5c5dfddbc4fa40053', maybe rebased or not pulled?
#66: 
commit a343bb7750e6a098909c34f5c5dfddbc4fa40053

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '16b4289c7460ba9c04af40c574949dcca9029658', maybe rebased or not pulled?
#71: 
commit 16b4289c7460ba9c04af40c574949dcca9029658

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'e8896495bca8490a427409e0886d63d05419ec65', maybe rebased or not pulled?
#76: 
commit e8896495bca8490a427409e0886d63d05419ec65

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '3cedf13af9f7e61aca0dbbd11b601ac93bf93a9f', maybe rebased or not pulled?
#81: 
commit 3cedf13af9f7e61aca0dbbd11b601ac93bf93a9f

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '8e037094c414172481c5ce903efdab50ce932343', maybe rebased or not pulled?
#86: 
commit 8e037094c414172481c5ce903efdab50ce932343

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '79558f3610efd7928e8882b2eaca3093b283630e', maybe rebased or not pulled?
#91: 
commit 79558f3610efd7928e8882b2eaca3093b283630e

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '01df9c5e918ae5559f2d96da0143f8bfbb9e6171', maybe rebased or not pulled?
#96: 
commit 01df9c5e918ae5559f2d96da0143f8bfbb9e6171

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '8f8e7a50f450fcb86a5b2ffb94543c57a14f8260', maybe rebased or not pulled?
#101: 
commit 8f8e7a50f450fcb86a5b2ffb94543c57a14f8260

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '68adb0af51ebccb72ffb14d49cb8121b1afc4259', maybe rebased or not pulled?
#106: 
commit 68adb0af51ebccb72ffb14d49cb8121b1afc4259

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'dff02cc1a34fcb60904a2c57cb351857cc11219e', maybe rebased or not pulled?
#111: 
commit dff02cc1a34fcb60904a2c57cb351857cc11219e

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '5d67476fff2df6ff12f60b540fd0e74cf2a668f9', maybe rebased or not pulled?
#116: 
commit 5d67476fff2df6ff12f60b540fd0e74cf2a668f9

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'a634904a7de0d3a0bc606f608007a34e8c05bfee', maybe rebased or not pulled?
#121: 
commit a634904a7de0d3a0bc606f608007a34e8c05bfee

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'ddeff520f02b92128132c282c350fa72afffb84a', maybe rebased or not pulled?
#126: 
commit ddeff520f02b92128132c282c350fa72afffb84a

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXUGO' are not preferred. Consider using octal permissions '0111'.
#222: FILE: fs/namei.c:254:
+	if ((mask & MAY_EXEC) && S_ISREG(mode) && !(mode & S_IXUGO))

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#248: FILE: fs/nfs/file.c:317:
+		return !nfs_wb_page(page->mapping->host, page);
+	else

WARNING:LINE_SPACING: Missing a blank line after declarations
#292: FILE: fs/nfs/nfs4proc.c:2728:
+	ssize_t ret;
+	do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#321: FILE: fs/nfs/nfs4proc.c:2783:
+	int err;
+	do {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: fs/nfs/nfs4proc.c:2785:
+		err = nfs4_handle_exception(NFS_SERVER(inode),
+				__nfs4_proc_set_acl(inode, buf, buflen),

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#341: FILE: fs/nfs/nfs4xdr.c:3358:
+	uint32_t	len, attrlen, xlen;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#463: FILE: include/linux/sunrpc/rpc_pipe_fs.h:45:
+extern int rpc_rmdir(struct dentry *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#463: FILE: include/linux/sunrpc/rpc_pipe_fs.h:45:
+extern int rpc_rmdir(struct dentry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#466: FILE: include/linux/sunrpc/rpc_pipe_fs.h:47:
+extern int rpc_unlink(struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#466: FILE: include/linux/sunrpc/rpc_pipe_fs.h:47:
+extern int rpc_unlink(struct dentry *);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#562: FILE: net/sunrpc/clnt.c:1190:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'call_verify', this function's name, in a string
#563: FILE: net/sunrpc/clnt.c:1191:
+		       "call_verify: XDR representation not a multiple of"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#564: FILE: net/sunrpc/clnt.c:1192:
+		       "call_verify: XDR representation not a multiple of"
+		       " 4 bytes: 0x%x\n", task->tk_rqstp->rq_rcv_buf.len);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000044311.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 24 warnings, 4 checks, 453 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000044311.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
