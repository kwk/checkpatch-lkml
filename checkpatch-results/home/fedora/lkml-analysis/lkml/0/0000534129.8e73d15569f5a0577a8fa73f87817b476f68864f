WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#60: 
//  EXTRAVERSION = -ac8
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#68: FILE: kernel/ptrace.c:22:
+static int access_one_page(struct mm_struct * mm, struct vm_area_struct * vma, unsigned long addr, void *buf, size_t len, int write)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#68: FILE: kernel/ptrace.c:22:
+static int access_one_page(struct mm_struct * mm, struct vm_area_struct * vma, unsigned long addr, void *buf, size_t len, int write)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#68: FILE: kernel/ptrace.c:22:
+static int access_one_page(struct mm_struct * mm, struct vm_area_struct * vma, unsigned long addr, void *buf, size_t len, int write)

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#134: FILE: kernel/ptrace.c:96:
+static int access_mm(struct mm_struct *mm, struct vm_area_struct * vma, unsigned long addr, void *buf, size_t len, int write, int *pcopied)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: kernel/ptrace.c:96:
+static int access_mm(struct mm_struct *mm, struct vm_area_struct * vma, unsigned long addr, void *buf, size_t len, int write, int *pcopied)

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: kernel/ptrace.c:157:
+		mm_segment_t old;
+		old = get_fs();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'failues' may be misspelled - perhaps 'failures'?
#197: FILE: kernel/ptrace.c:159:
+		/* silently ignore failues, perhaps the caller
 		                   ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: kernel/ptrace.c:171:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: kernel/ptrace.c:175:
+ * if do_write is true, then the data is written into 'mm:oaddr' $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: kernel/ptrace.c:179:
+
+

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#218: FILE: kernel/ptrace.c:180:
+int copy_user_to_user(char *cbuf, struct mm_struct *mm, unsigned long oaddr, size_t len, int do_write)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: kernel/ptrace.c:182:
+	struct vm_area_struct * vma;

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: kernel/ptrace.c:184:
+	int retval;
+	down_read(&mm->mmap_sem);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#241: FILE: include/linux/mm.h:443:
+extern int access_process_vm(struct task_struct *tsk, unsigned long addr, void *buf, size_t len, int write);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: include/linux/mm.h:443:
+extern int access_process_vm(struct task_struct *tsk, unsigned long addr, void *buf, size_t len, int write);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#248: FILE: include/linux/mm.h:450:
+extern int copy_user_to_user(char *cbuf, struct mm_struct *mm, unsigned long oaddr, size_t len, int do_write);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: include/linux/mm.h:450:
+extern int copy_user_to_user(char *cbuf, struct mm_struct *mm, unsigned long oaddr, size_t len, int do_write);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000534129.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 9 warnings, 3 checks, 182 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000534129.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
