WARNING:INCLUDE_LINUX: Use #include <linux/topology.h> instead of <asm/topology.h>
#58: FILE: kernel/sched.c:35:
+#include <asm/topology.h>

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#61: FILE: kernel/sched.c:37:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#108: FILE: kernel/sched.c:694:
+	busiest_on_node =3D NULL;
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#109: FILE: kernel/sched.c:695:
+	busiest_off_node =3D NULL;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#112: FILE: kernel/sched.c:697:
+	max_load_on_node =3D 1;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#113: FILE: kernel/sched.c:698:
+	max_load_off_node =3D 3;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#114: FILE: kernel/sched.c:699:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#125: FILE: kernel/sched.c:711:
+		if (__cpu_to_node(i) =3D=3D __cpu_to_node(this_cpu)) {
 		                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: kernel/sched.c:711:
+		if (__cpu_to_node(i) =3D=3D __cpu_to_node(this_cpu)) {
 		                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#125: FILE: kernel/sched.c:711:
+		if (__cpu_to_node(i) =3D=3D __cpu_to_node(this_cpu)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#126: FILE: kernel/sched.c:712:
+			if ((load > max_load_on_node) && (rq_src !=3D this_rq)) {
 			                                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'load > max_load_on_node'
#126: FILE: kernel/sched.c:712:
+			if ((load > max_load_on_node) && (rq_src !=3D this_rq)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#127: FILE: kernel/sched.c:713:
+				busiest_on_node =3D rq_src;
 				                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#128: FILE: kernel/sched.c:714:
+				max_load_on_node =3D load;
 				                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#132: FILE: kernel/sched.c:718:
+				busiest_off_node =3D rq_src;
 				                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#133: FILE: kernel/sched.c:719:
+				max_load_off_node =3D load;
 				                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#149: FILE: kernel/sched.c:725:
+		*imbalance =3D (max_load_on_node - nr_running) / 2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#149: FILE: kernel/sched.c:725:
+		*imbalance =3D (max_load_on_node - nr_running) / 2;
 		           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: kernel/sched.c:726:
+		if (idle || (*imbalance >=3D  (max_load_on_node + 3)/4)) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#150: FILE: kernel/sched.c:726:
+		if (idle || (*imbalance >=3D  (max_load_on_node + 3)/4)) {
 		                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#150: FILE: kernel/sched.c:726:
+		if (idle || (*imbalance >=3D  (max_load_on_node + 3)/4)) {
 		                                                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#150: FILE: kernel/sched.c:726:
+		if (idle || (*imbalance >=3D  (max_load_on_node + 3)/4)) {
+			busiest =3D busiest_on_node;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#151: FILE: kernel/sched.c:727:
+			busiest =3D busiest_on_node;
 			        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#167: FILE: kernel/sched.c:733:
+		if (nr_running*4 >=3D max_load_off_node)=20
 		              ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#167: FILE: kernel/sched.c:733:
+		if (nr_running*4 >=3D max_load_off_node)=20
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#167: FILE: kernel/sched.c:733:
+		if (nr_running*4 >=3D max_load_off_node)=20
 		                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#167: FILE: kernel/sched.c:733:
+		if (nr_running*4 >=3D max_load_off_node)=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#169: FILE: kernel/sched.c:735:
+		busiest =3D busiest_off_node;=20
 		        ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#169: FILE: kernel/sched.c:735:
+		busiest =3D busiest_off_node;=20
 		                            ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#169: FILE: kernel/sched.c:735:
+		busiest =3D busiest_off_node;=20
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#170: FILE: kernel/sched.c:736:
+		*imbalance =3D 1;
 		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#170: FILE: kernel/sched.c:736:
+		*imbalance =3D 1;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#171: FILE: kernel/sched.c:737:
+	}=20
 	 ^

ERROR:SPACING: space required after that close brace '}'
#171: FILE: kernel/sched.c:737:
+	}=20

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#173: FILE: kernel/sched.c:739:
+		nr_running =3D double_lock_balance(this_rq, busiest, this_cpu, idle, nr_=
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#173: FILE: kernel/sched.c:739:
+		nr_running =3D double_lock_balance(this_rq, busiest, this_cpu, idle, nr_=
 		                                                                        ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#179: FILE: kernel/sched.c:744:
+		if (busiest->nr_running <=3D nr_running + 1) {
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#181: FILE: kernel/sched.c:746:
+			busiest =3D NULL;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#203: FILE: kernel/sched.c:2148:
+	old_mask =3D p->cpus_allowed;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#220: FILE: kernel/sched.c:2165:
+static DEFINE_PER_CPU(int, last_exec_cpu) =3D 0;
                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#229: FILE: kernel/sched.c:2174:
+	int i, minload, best_cpu, cur_cpu, node;
+	best_cpu =3D task_cpu(p);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#229: FILE: kernel/sched.c:2174:
+	best_cpu =3D task_cpu(p);
 	         ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#230: FILE: kernel/sched.c:2175:
+	if (cpu_rq(best_cpu)->nr_running <=3D 2)
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#233: FILE: kernel/sched.c:2178:
+	node =3D __cpu_to_node(__get_cpu_var(last_exec_cpu));
 	     ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#234: FILE: kernel/sched.c:2179:
+	if (++node >=3D numnodes)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#235: FILE: kernel/sched.c:2180:
+		node =3D 0;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#236: FILE: kernel/sched.c:2181:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#237: FILE: kernel/sched.c:2182:
+	cur_cpu =3D __node_to_first_cpu(node);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#238: FILE: kernel/sched.c:2183:
+	minload =3D cpu_rq(best_cpu)->nr_running;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#240: FILE: kernel/sched.c:2185:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#240: FILE: kernel/sched.c:2185:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#245: FILE: kernel/sched.c:2190:
+			minload =3D cpu_rq(cur_cpu)->nr_running;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#246: FILE: kernel/sched.c:2191:
+			best_cpu =3D cur_cpu;
 			         ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#248: FILE: kernel/sched.c:2193:
+		if (++cur_cpu >=3D NR_CPUS)
 		              ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#248: FILE: kernel/sched.c:2193:
+		if (++cur_cpu >=3D NR_CPUS)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#249: FILE: kernel/sched.c:2194:
+			cur_cpu =3D 0;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#251: FILE: kernel/sched.c:2196:
+	__get_cpu_var(last_exec_cpu) =3D best_cpu;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#260: FILE: kernel/sched.c:2205:
+		new_cpu =3D sched_best_cpu(current);
 		        ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#261: FILE: kernel/sched.c:2206:
+		if (new_cpu !=3D smp_processor_id())
 		            ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#288: FILE: include/linux/sched.h:170:
+extern void sched_balance_exec(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422664.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 48 errors, 7 warnings, 5 checks, 236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422664.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
