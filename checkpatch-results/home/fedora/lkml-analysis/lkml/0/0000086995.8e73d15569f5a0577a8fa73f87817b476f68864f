WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: exports.c:1:
+#include "fireflier.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: exports.c:6:
+void fireflier_sk_ctxid(struct sock *sk,u32 *sid) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#53: FILE: exports.c:6:
+void fireflier_sk_ctxid(struct sock *sk,u32 *sid) 
                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#56: FILE: exports.c:9:
+	struct socket *sock;
+	sock = sk->sk_socket;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#57: FILE: exports.c:10:
+	if (sock)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#60: FILE: exports.c:13:
+		struct inode *inode;
+		inode = SOCK_INODE(sock);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#61: FILE: exports.c:14:
+		if (inode)
+		{

WARNING:LINE_SPACING: Missing a blank line after declarations
#64: FILE: exports.c:17:
+			struct fireflier_inode_security_struct *isec;
+			isec = inode->i_security;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#78: FILE: exports.c:31:
+EXPORT_SYMBOL_GPL(fireflier_sk_ctxid);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#79: FILE: exports.c:32:
+EXPORT_SYMBOL_GPL(fireflier_available);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: fireflier.h:1:
+#ifndef _FIREFLIER_H

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: fireflier.h:6:
+void fireflier_sk_ctxid(struct sock *sk,u32 *ctxid);
                                        ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#92: FILE: fireflier.h:8:
+int fireflier_ctx_to_id(const char* dev,unsigned long inode,u32 *ctxid);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: fireflier.h:8:
+int fireflier_ctx_to_id(const char* dev,unsigned long inode,u32 *ctxid);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: fireflier.h:8:
+int fireflier_ctx_to_id(const char* dev,unsigned long inode,u32 *ctxid);
                                                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086995.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 7 warnings, 0 checks, 42 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086995.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
