ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#58: FILE: drivers/md/raid5.c:1231:
+	int complete=0;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 32)
#60: FILE: drivers/md/raid5.c:1233:
+	if (test_bit(STRIPE_OP_RCW, &sh->state) &&
[...]
+				clear_bit(STRIPE_OP_RCW, &sh->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: drivers/md/raid5.c:1234:
+	if (test_bit(STRIPE_OP_RCW, &sh->state) &&
+			test_bit(STRIPE_OP_RCW_Done, &sh->ops.state)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 32)
#67: FILE: drivers/md/raid5.c:1240:
+	if (test_bit(STRIPE_OP_RMW, &sh->state) &&
[...]
+				clear_bit(STRIPE_OP_RMW, &sh->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: drivers/md/raid5.c:1241:
+	if (test_bit(STRIPE_OP_RMW, &sh->state) &&
+			test_bit(STRIPE_OP_RMW_Done, &sh->ops.state)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#71: FILE: drivers/md/raid5.c:1244:
+				BUG_ON(++complete == 2);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#74: FILE: drivers/md/raid5.c:1247:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#78: FILE: drivers/md/raid5.c:1251:
+	if (locked == 0) {
[...]
+	} else if (locked && complete == 0) /* the queue has an operation in flight */
[...]
+	else if (complete)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#83: FILE: drivers/md/raid5.c:1256:
+			for (i=disks ; i-- ;) {
 			      ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#86: FILE: drivers/md/raid5.c:1259:
+				if (i!=pd_idx && dev->towrite) {
 				     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#93: FILE: drivers/md/raid5.c:1266:
+			BUG_ON(!test_bit(R5_UPTODATE, &sh->dev[pd_idx].flags));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#96: FILE: drivers/md/raid5.c:1269:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#98: FILE: drivers/md/raid5.c:1271:
+				struct r5dev *dev = &sh->dev[i];
+				if (i==pd_idx)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#98: FILE: drivers/md/raid5.c:1271:
+				if (i==pd_idx)
 				     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#116: FILE: drivers/md/raid5.c:1289:
+	if (locked > 0) {
[...]
+	} else if (locked == 0)
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: drivers/md/raid5.c:1297:
+	PRINTK("%s: stripe %llu locked: %d complete: %d op_state: %lx\n",
+		__FUNCTION__, (unsigned long long)sh->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#124: FILE: drivers/md/raid5.c:1297:
+		__FUNCTION__, (unsigned long long)sh->sector,

CHECK:BRACES: braces {} should be used on all arms of this statement
#147: FILE: drivers/md/raid5.c:1409:
+	if (--sh->ops.queue_count == 0) {
[...]
+	} else if (sh->ops.queue_count < 0)
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#164: FILE: drivers/md/raid5.c:1426:
+	int overlap=0, new_work=0, written=0;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#164: FILE: drivers/md/raid5.c:1426:
+	int overlap=0, new_work=0, written=0;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#164: FILE: drivers/md/raid5.c:1426:
+	int overlap=0, new_work=0, written=0;
 	                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: drivers/md/raid5.c:1437:
+		PRINTK("%s: stripe %llu STRIPE_OP_RMW op_state: %lx\n",
+			__FUNCTION__, (unsigned long long)sh->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#175: FILE: drivers/md/raid5.c:1437:
+			__FUNCTION__, (unsigned long long)sh->sector,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#181: FILE: drivers/md/raid5.c:1443:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#196: FILE: drivers/md/raid5.c:1458:
+					BUG_ON(dev->written);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#206: FILE: drivers/md/raid5.c:1468:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: drivers/md/raid5.c:1470:
+				struct r5dev *dev = &sh->dev[i];
+				written++;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#214: FILE: drivers/md/raid5.c:1476:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#216: FILE: drivers/md/raid5.c:1478:
+				struct r5dev *dev = &sh->dev[i];
+				if (dev->written) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/md/raid5.c:1495:
+		PRINTK("%s: stripe %llu STRIPE_OP_RCW op_state: %lx\n",
+			__FUNCTION__, (unsigned long long)sh->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#233: FILE: drivers/md/raid5.c:1495:
+			__FUNCTION__, (unsigned long long)sh->sector,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#239: FILE: drivers/md/raid5.c:1501:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#241: FILE: drivers/md/raid5.c:1503:
+				struct r5dev *dev = &sh->dev[i];
+				if (i!=pd_idx && dev->towrite &&

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#241: FILE: drivers/md/raid5.c:1503:
+				if (i!=pd_idx && dev->towrite &&
 				     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#241: FILE: drivers/md/raid5.c:1503:
+				if (i!=pd_idx && dev->towrite &&
[...]
+				} else if (i==pd_idx)
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/md/raid5.c:1504:
+				if (i!=pd_idx && dev->towrite &&
+					test_bit(R5_LOCKED, &dev->flags)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#246: FILE: drivers/md/raid5.c:1508:
+					BUG_ON(dev->written);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/md/raid5.c:1515:
+					drain_bio(dev->written, dev->sector,
+						dev->page);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#254: FILE: drivers/md/raid5.c:1516:
+				} else if (i==pd_idx)
 				            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#260: FILE: drivers/md/raid5.c:1522:
+			for (i=disks; i--;)
 			      ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#274: FILE: drivers/md/raid5.c:1536:
+
+		}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#284: FILE: drivers/md/raid5.c:1546:
+		for (i=disks ; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: drivers/md/raid5.c:1548:
+			struct r5dev *dev = &sh->dev[i];
+			if (dev->written)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#291: FILE: drivers/md/raid5.c:1553:
+		for (i= disks; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#293: FILE: drivers/md/raid5.c:1555:
+			struct r5dev *dev = &sh->dev[i];
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Overlap>
#293: FILE: drivers/md/raid5.c:1555:
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/md/raid5.c:1842:
+	if (to_write || test_bit(STRIPE_OP_RCW, &sh->state) ||
+		test_bit(STRIPE_OP_RMW, &sh->state)) {

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#355: FILE: drivers/md/raid5.c:1914:
+		/* ...or, if we have previously started write operations we can now advance the state */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '||' (ctx:WxV)
#356: FILE: drivers/md/raid5.c:1915:
+		if ((locked == 0 && (rcw == 0 ||rmw == 0) &&
 		                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: drivers/md/raid5.c:1916:
+		if ((locked == 0 && (rcw == 0 ||rmw == 0) &&
+		    !test_bit(STRIPE_BIT_DELAY, &sh->state)) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#360: FILE: drivers/md/raid5.c:1919:
+			int work_queued = handle_write_operations5(sh, rcw, locked);
+			if (work_queued == 0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#360: FILE: drivers/md/raid5.c:1919:
+			if (work_queued == 0) {
[...]
-			if (test_and_clear_bit(STRIPE_PREREAD_ACTIVE, &sh->state)) {
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#362: FILE: drivers/md/raid5.c:1921:
+				for (i=disks; i--;)
 				      ^

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantwrite>
#366: FILE: drivers/md/raid5.c:1925:
+						set_bit(R5_Wantwrite, &sh->dev[i].flags);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#367: FILE: drivers/md/raid5.c:1926:
+						if (!test_bit(R5_Insync, &sh->dev[i].flags)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:CAMELCASE: Avoid CamelCase: <R5_Insync>
#367: FILE: drivers/md/raid5.c:1926:
+						if (!test_bit(R5_Insync, &sh->dev[i].flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#368: FILE: drivers/md/raid5.c:1927:
+						if (!test_bit(R5_Insync, &sh->dev[i].flags)
+						    || (i==sh->pd_idx && failed == 0))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#368: FILE: drivers/md/raid5.c:1927:
+						    || (i==sh->pd_idx && failed == 0))
 						         ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#373: FILE: drivers/md/raid5.c:1932:
+					if (atomic_read(&conf->preread_active_stripes) < IO_THRESHOLD)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#411: FILE: drivers/md/raid5.c:3374:
+	if ((conf->block_ops_queue = create_workqueue(conf->workqueue_name))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#479: FILE: include/linux/raid/raid5.h:154:
+^I^Iu32 ^I^I^Idma_result;^I/* storage for dma engine results */$

CHECK:CAMELCASE: Avoid CamelCase: <R5_Consistent>
#501: FILE: include/linux/raid/raid5.h:181:
+#define	R5_Consistent	11	/* Block is HW DMA-able without a cache flush */

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#522: FILE: include/linux/raid/raid5.h:216:
+ * - The _End definitions are a signal from handle_stripe to the work queue to
+ *   to ensure the completion of the operation so the results can be committed

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#536: FILE: include/linux/raid/raid5.h:230:
+#define^ISTRIPE_OP_CHECK_Gen   ^I^I9$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#554: FILE: include/linux/raid/raid5.h:291:
+	void (*do_block_ops)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000063439.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 23 warnings, 21 checks, 499 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000063439.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
