WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#23: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#24: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#26: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
#	           ChangeSet	1.547   -> 1.548  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
#	arch/ia64/sn/io/pci.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
#	arch/ia64/kernel/pci.c	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#	include/asm-ia64/pci.h	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# 02/08/30	hannal@us.ibm.com	1.548

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# [PATCH] PCI: ia64 pci_ops changes

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# ia64 pci ops changes

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#41: 
--- a/arch/ia64/kernel/pci.c	Fri Aug 30 15:00:24 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#58: FILE: arch/ia64/kernel/pci.c:60:
+__pci_sal_read (int seg, int bus, int dev, int fn, int reg, int len, u32 *value)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#67: FILE: arch/ia64/kernel/pci.c:76:
+__pci_sal_write (int seg, int bus, int dev, int fn, int reg, int len, u32 value)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: arch/ia64/kernel/pci.c:86:
+pci_sal_read (struct pci_bus *bus, unsigned int devfn, int where, int size, u32 *value)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: arch/ia64/kernel/pci.c:93:
+pci_sal_write (struct pci_bus *bus, unsigned int devfn, int where, int size, u32 value)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#152: FILE: arch/ia64/kernel/pci.c:100:
+^I.read = ^Ipci_sal_read,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: arch/ia64/sn/io/pci.c:49:
+static int snia64_read (struct pci_bus *bus, unsigned char devfn,

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/ia64/sn/io/pci.c:50:
+                                   int where, int size, unsigned char *val)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: arch/ia64/sn/io/pci.c:50:
+static int snia64_read (struct pci_bus *bus, unsigned char devfn,
+                                   int where, int size, unsigned char *val)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/ia64/sn/io/pci.c:50:
+                                   int where, int size, unsigned char *val)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#186: FILE: arch/ia64/sn/io/pci.c:55:
+	if ( (bus == NULL) || (val == (unsigned char *)0) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#186: FILE: arch/ia64/sn/io/pci.c:55:
+	if ( (bus == NULL) || (val == (unsigned char *)0) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus == NULL'
#186: FILE: arch/ia64/sn/io/pci.c:55:
+	if ( (bus == NULL) || (val == (unsigned char *)0) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#186: FILE: arch/ia64/sn/io/pci.c:55:
+	if ( (bus == NULL) || (val == (unsigned char *)0) ) {
 		return PCIBIOS_DEVICE_NOT_FOUND;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus"
#186: FILE: arch/ia64/sn/io/pci.c:55:
+	if ( (bus == NULL) || (val == (unsigned char *)0) ) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#194: FILE: arch/ia64/sn/io/pci.c:61:
+		__FUNCTION__, bus->number, PCI_SLOT(devfn), PCI_FUNC(devfn));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: arch/ia64/sn/io/pci.c:72:
+static int snia64_write (struct pci_bus *bus, unsigned char devfn,

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: arch/ia64/sn/io/pci.c:73:
+                                    int where, int size, unsigned char val)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: arch/ia64/sn/io/pci.c:73:
+static int snia64_write (struct pci_bus *bus, unsigned char devfn,
+                                    int where, int size, unsigned char val)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/ia64/sn/io/pci.c:73:
+                                    int where, int size, unsigned char val)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#265: FILE: arch/ia64/sn/io/pci.c:77:
+	if ( bus == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#265: FILE: arch/ia64/sn/io/pci.c:77:
+	if ( bus == NULL) {
 		return PCIBIOS_DEVICE_NOT_FOUND;
 	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus"
#265: FILE: arch/ia64/sn/io/pci.c:77:
+	if ( bus == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: arch/ia64/sn/io/pci.c:85:
+^I/*if (dev->vendor == PCI_VENDOR_ID_SGI && $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#350: FILE: arch/ia64/sn/io/pci.c:93:
+		__FUNCTION__, bus->number, PCI_SLOT(devfn), PCI_FUNC(devfn));

CHECK:SPACING: No space is necessary after a cast
#354: FILE: arch/ia64/sn/io/pci.c:96:
+	pciio_config_set( device_vertex, (unsigned)where, size, (uint64_t) val);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#354: FILE: arch/ia64/sn/io/pci.c:96:
+	pciio_config_set( device_vertex, (unsigned)where, size, (uint64_t) val);

ERROR:SPACING: space prohibited after that open parenthesis '('
#354: FILE: arch/ia64/sn/io/pci.c:96:
+	pciio_config_set( device_vertex, (unsigned)where, size, (uint64_t) val);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#367: FILE: arch/ia64/sn/io/pci.c:103:
+^I.write = ^Isnia64_write,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436129.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 33 warnings, 6 checks, 326 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436129.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
