ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: Documentation/filesystems/vfs.txt:408:
+Directory Entry Cache (dcache)                                        <section> $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: Documentation/filesystems/vfs.txt:411:
+struct dentry_operations      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: Documentation/filesystems/vfs.txt:514:
+in every component during path look-up. Since 2.5.10 onwards, $

WARNING:TYPO_SPELLING: 'signficantly' may be misspelled - perhaps 'significantly'?
#135: FILE: Documentation/filesystems/vfs.txt:517:
+dentries as possible. This signficantly decreases the number
                            ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'signficantly' may be misspelled - perhaps 'significantly'?
#137: FILE: Documentation/filesystems/vfs.txt:519:
+lock hold time signficantly and affects performance in large
                ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: Documentation/filesystems/vfs.txt:529:
+else the dcache_lock must be taken for both traversing as well as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: Documentation/filesystems/vfs.txt:530:
+updating. The hash chain updations too take the dcache_lock. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: Documentation/filesystems/vfs.txt:531:
+The significant change is the way d_lookup traverses the hash chain, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: Documentation/filesystems/vfs.txt:532:
+it doesn't acquire the dcache_lock for this and rely on RCU to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: Documentation/filesystems/vfs.txt:533:
+ensure that the dentry has not been *freed*. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: Documentation/filesystems/vfs.txt:540:
+of path names to find the dentry corresponding to the $

WARNING:TYPO_SPELLING: 'conjuction' may be misspelled - perhaps 'conjunction'?
#183: FILE: Documentation/filesystems/vfs.txt:565:
+   is inserted. This works in conjuction with hlist_for_each_rcu()
                               ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: Documentation/filesystems/vfs.txt:571:
+3. The dentry looked up without holding dcache_lock by cannot be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: Documentation/filesystems/vfs.txt:572:
+   returned for walking if it is unhashed. It then may have a NULL $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: Documentation/filesystems/vfs.txt:573:
+   d_inode or other bogosity since RCU doesn't protect the other $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: Documentation/filesystems/vfs.txt:574:
+   fields in the dentry. We therefore use a flag DCACHE_UNHASHED to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: Documentation/filesystems/vfs.txt:575:
+   indicate unhashed  dentries and use this in conjunction with a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: Documentation/filesystems/vfs.txt:576:
+   per-dentry lock (d_lock). Once looked up without the dcache_lock, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: Documentation/filesystems/vfs.txt:577:
+   we acquire the per-dentry lock (d_lock) and check if the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: Documentation/filesystems/vfs.txt:578:
+   dentry is unhashed. If so, the look-up is failed. If not, the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: Documentation/filesystems/vfs.txt:582:
+   walk for that component it doesn't go away. In pre-2.5.10 code, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: Documentation/filesystems/vfs.txt:583:
+   this was done holding a reference to the dentry. dcache_rcu does $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: Documentation/filesystems/vfs.txt:584:
+   the same.  In some sense, dcache_rcu path walking looks like $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: Documentation/filesystems/vfs.txt:587:
+5. All dentry hash chain updations must take the dcache_lock as well as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: Documentation/filesystems/vfs.txt:588:
+   the per-dentry lock in that order. dput() does this to ensure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: Documentation/filesystems/vfs.txt:590:
+   doesn't get deleted before dget() can be done on it. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: Documentation/filesystems/vfs.txt:617:
+rename semantics.  Issues related to race with rename are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: Documentation/filesystems/vfs.txt:625:
+   lock (rename_lock). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: Documentation/filesystems/vfs.txt:628:
+   a rename is allowed to happen simultaneously. To avoid memcmp() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: Documentation/filesystems/vfs.txt:634:
+3. Hash table walking during look-up may move to a different bucket as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: Documentation/filesystems/vfs.txt:635:
+   the current dentry is moved to a different bucket due to rename. $

WARNING:TYPO_SPELLING: 'theoritical' may be misspelled - perhaps 'theoretical'?
#261: FILE: Documentation/filesystems/vfs.txt:643:
+4. There can be a theoritical race when a dentry keeps coming back
                   ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'theoritical' may be misspelled - perhaps 'theoretical'?
#264: FILE: Documentation/filesystems/vfs.txt:646:
+   But this is not any worse that theoritical livelocks we already
                                   ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: Documentation/filesystems/vfs.txt:653:
+1. Existing dcache interfaces (pre-2.5.62) exported to filesystem $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: Documentation/filesystems/vfs.txt:654:
+   don't change. Only dcache internal implementation changes. However $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: Documentation/filesystems/vfs.txt:655:
+   filesystems *must not* delete from the dentry hash chains directly $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: Documentation/filesystems/vfs.txt:656:
+   using the list macros like allowed earlier. They must use dcache $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: Documentation/filesystems/vfs.txt:662:
+3. For a hashed dentry, checking of d_count needs to be protected $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 5 warnings, 0 checks, 236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
