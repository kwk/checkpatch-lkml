Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:TYPO_SPELLING: 'ressurect' may be misspelled - perhaps 'resurrect'?
#28: 
If we're ever going to ressurect umsdos it should be a stackable
                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#39: 
 fs/msdos/Makefile        |    2 -
    ^^^^^

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#40: 
 fs/msdos/namei.c         |   56 ++++++++++++++++++++++++++++++++++-------------
    ^^^^^

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#44: 
 fs/msdos/msdosfs_syms.c  |   53 --------------------------------------------
    ^^^^^

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#48: 
diff -puN fs/msdos/Makefile~fat_unexport-symbols fs/msdos/Makefile
             ^^^^^

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#48: 
diff -puN fs/msdos/Makefile~fat_unexport-symbols fs/msdos/Makefile
                                                    ^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
--- linux-2.6.6-rc3/fs/msdos/Makefile~fat_unexport-symbols	2004-05-02 19:15:47.000000000 +0900

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#49: 
--- linux-2.6.6-rc3/fs/msdos/Makefile~fat_unexport-symbols	2004-05-02 19:15:47.000000000 +0900
                       ^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#123: FILE: fs/msdos/namei.c:197:
+		struct nameidata *nd)
 		                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: fs/msdos/namei.c:197:
+static struct dentry *msdos_lookup(struct inode *dir, struct dentry *dentry,
+		struct nameidata *nd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: fs/msdos/namei.c:263:
+static int msdos_create(struct inode *dir, struct dentry *dentry, int mode,
 		struct nameidata *nd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: fs/msdos/namei.c:540:
+static int msdos_rename(struct inode *old_dir, struct dentry *old_dentry,
+		struct inode *new_dir, struct dentry *new_dentry)

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#186: FILE: fs/msdos/namei.c:576:
+static struct inode_operations msdos_dir_inode_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#195: FILE: fs/msdos/namei.c:586:
+static int msdos_fill_super(struct super_block *sb,void *data, int silent)
                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: fs/msdos/namei.c:599:
+static struct super_block *msdos_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data)

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#212: FILE: fs/msdos/namei.c:606:
+	.name		= "msdos",
 	     		   ^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#252: FILE: fs/vfat/namei.c:809:
+		struct nameidata *nd)
 		                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: fs/vfat/namei.c:809:
+static struct dentry *vfat_lookup(struct inode *dir, struct dentry *dentry,
+		struct nameidata *nd)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#261: FILE: fs/vfat/namei.c:858:
+static int vfat_create(struct inode *dir, struct dentry* dentry, int mode,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: fs/vfat/namei.c:859:
+static int vfat_create(struct inode *dir, struct dentry* dentry, int mode,
 		struct nameidata *nd)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#270: FILE: fs/vfat/namei.c:912:
+static int vfat_rmdir(struct inode *dir, struct dentry* dentry)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#289: FILE: fs/vfat/namei.c:963:
+static int vfat_mkdir(struct inode *dir,struct dentry* dentry,int mode)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#289: FILE: fs/vfat/namei.c:963:
+static int vfat_mkdir(struct inode *dir,struct dentry* dentry,int mode)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#289: FILE: fs/vfat/namei.c:963:
+static int vfat_mkdir(struct inode *dir,struct dentry* dentry,int mode)
                                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: fs/vfat/namei.c:1009:
+static int vfat_rename(struct inode *old_dir, struct dentry *old_dentry,
+		struct inode *new_dir, struct dentry *new_dentry)

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#311: FILE: fs/vfat/namei.c:1097:
+static struct inode_operations vfat_dir_inode_operations = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: fs/vfat/namei.c:1124:
+static struct super_block *vfat_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000284574.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 13 warnings, 8 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000284574.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
