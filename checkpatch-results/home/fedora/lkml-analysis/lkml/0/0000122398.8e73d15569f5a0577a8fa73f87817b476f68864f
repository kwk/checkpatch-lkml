WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: drivers/rtc/rtc-dev.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#55: FILE: drivers/rtc/rtc-dev.c:12:
+ * the Free Software Foundation; version 2 of the License.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CONST_STRUCT: struct rtc_class_ops should normally be const
#69: FILE: drivers/rtc/rtc-dev.c:26:
+	struct rtc_class_ops *ops = rtc->ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#81: FILE: drivers/rtc/rtc-dev.c:38:
+	if (err == 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#94: FILE: drivers/rtc/rtc-dev.c:51:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: drivers/rtc/rtc-dev.c:113:
+static int rtc_dev_ioctl(struct inode *inode, struct file *file, unsigned int cmd,
+		     unsigned long arg)

WARNING:CONST_STRUCT: struct rtc_class_ops should normally be const
#160: FILE: drivers/rtc/rtc-dev.c:117:
+	struct rtc_class_ops *ops = rtc_get_ops(class_dev);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#179: FILE: drivers/rtc/rtc-dev.c:136:
+		if ((err = rtc_read_alarm(class_dev, &alarm)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#182: FILE: drivers/rtc/rtc-dev.c:139:
+		if ((err = copy_to_user(uarg, &alarm.time, sizeof(tm))))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#187: FILE: drivers/rtc/rtc-dev.c:144:
+		if ((err = copy_from_user(&alarm.time, uarg, sizeof(tm))))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#202: FILE: drivers/rtc/rtc-dev.c:159:
+		if ((err = rtc_read_time(class_dev, &tm)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#205: FILE: drivers/rtc/rtc-dev.c:162:
+		if ((err = copy_to_user(uarg, &tm, sizeof(tm))))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#213: FILE: drivers/rtc/rtc-dev.c:170:
+		if ((err = copy_from_user(&tm, uarg, sizeof(tm))))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#218: FILE: drivers/rtc/rtc-dev.c:175:
+#if 0

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#242: FILE: drivers/rtc/rtc-dev.c:199:
+		if ((err = copy_from_user(&alarm, uarg, sizeof(alarm))))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#249: FILE: drivers/rtc/rtc-dev.c:206:
+		if ((err = rtc_read_alarm(class_dev, &alarm)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#252: FILE: drivers/rtc/rtc-dev.c:209:
+		if ((err = copy_to_user(uarg, &alarm, sizeof(alarm))))

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: drivers/rtc/rtc-dev.c:235:
+	struct rtc_device *rtc = to_rtc_device(file->private_data);
+	return fasync_helper(fd, file, on, &rtc->async_queue);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#281: FILE: drivers/rtc/rtc-dev.c:238:
+static struct file_operations rtc_dev_fops = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: drivers/rtc/rtc-dev.c:251:
+        return print_dev_t(buf, class_dev->devt);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/rtc/rtc-dev.c:251:
+        return print_dev_t(buf, class_dev->devt);$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#296: FILE: drivers/rtc/rtc-dev.c:253:
+static CLASS_DEVICE_ATTR(dev, S_IRUGO, rtc_dev_show_dev, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/rtc/rtc-dev.c:258:
+static int rtc_dev_add_device(struct class_device *class_dev,
+				struct class_interface *class_intf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/rtc/rtc-dev.c:290:
+	dev_info(class_dev->dev, "rtc intf: dev (%d:%d)\n",
+		MAJOR(class_dev->devt),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: drivers/rtc/rtc-dev.c:302:
+static void rtc_dev_remove_device(struct class_device *class_dev,
+					struct class_interface *class_intf)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#374: FILE: drivers/rtc/rtc-dev.c:331:
+	if ((err = alloc_chrdev_region(&rtc_devt, 0, RTC_DEV_MAX, "rtc")) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#375: FILE: drivers/rtc/rtc-dev.c:332:
+		printk(KERN_ERR "%s: failed to allocate char dev region\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/rtc/rtc-dev.c:333:
+		printk(KERN_ERR "%s: failed to allocate char dev region\n",
+			__FILE__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#380: FILE: drivers/rtc/rtc-dev.c:337:
+	if ((err = rtc_interface_register(&rtc_dev_interface)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#381: FILE: drivers/rtc/rtc-dev.c:338:
+		printk(KERN_ERR "%s: failed to register the interface\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: drivers/rtc/rtc-dev.c:339:
+		printk(KERN_ERR "%s: failed to register the interface\n",
+			__FILE__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 11 warnings, 8 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
