WARNING:TYPO_SPELLING: 'OT' may be misspelled - perhaps 'TO'?
#18: 
Subject: Re: [OT] Re: keyboard driver of 2.6 kernel
              ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#64: 
--- a/Documentation/Configure.help	2006-01-04 23:54:15.000000000 +0000

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: drivers/char/rpl/Makefile:4:
+# This file is GPL. See other files for the full Blurb. I'm lazy today. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#141: FILE: drivers/char/rpl/rpldev.c:1:
+/*=============================================================================

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#142: FILE: drivers/char/rpl/rpldev.c:2:
+/*=============================================================================
+ttyrpld - TTY replay daemon

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#144: FILE: drivers/char/rpl/rpldev.c:4:
+  Copyright © Jan Engelhardt <jengelh [at] linux01 gwdg de>, 2004 - 2005
             ^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#159: FILE: drivers/char/rpl/rpldev.c:19:
+  Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#163: FILE: drivers/char/rpl/rpldev.c:23:
+=============================================================================*/

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#166: FILE: drivers/char/rpl/rpldev.c:26:
+#include <asm/uaccess.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tty' - possible side-effects?
#191: FILE: drivers/char/rpl/rpldev.c:51:
+#define IS_PTY_MASTER(tty) \
+      (((tty)->driver.major >= UNIX98_PTY_MASTER_MAJOR && \
+      (tty)->driver.major < UNIX98_PTY_MASTER_MAJOR + \
+      UNIX98_PTY_MAJOR_COUNT) || (tty)->driver.major == PTY_MASTER_MAJOR)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/char/rpl/rpldev.c:52:
+      (((tty)->driver.major >= UNIX98_PTY_MASTER_MAJOR && \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/char/rpl/rpldev.c:53:
+      (tty)->driver.major < UNIX98_PTY_MASTER_MAJOR + \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/char/rpl/rpldev.c:54:
+      UNIX98_PTY_MAJOR_COUNT) || (tty)->driver.major == PTY_MASTER_MAJOR)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tty' - possible side-effects?
#195: FILE: drivers/char/rpl/rpldev.c:55:
+#define TTY_DEVNR(tty) \
+      cpu_to_le32(mkdev_26(MAJOR(tty->device), MINOR(tty->device)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tty' may be better as '(tty)' to avoid precedence issues
#195: FILE: drivers/char/rpl/rpldev.c:55:
+#define TTY_DEVNR(tty) \
+      cpu_to_le32(mkdev_26(MAJOR(tty->device), MINOR(tty->device)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/char/rpl/rpldev.c:56:
+      cpu_to_le32(mkdev_26(MAJOR(tty->device), MINOR(tty->device)))$

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: drivers/char/rpl/rpldev.c:66:
+#define SKIP_PTM(tty)   if(IS_PTY_MASTER(tty)) return 0;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#206: FILE: drivers/char/rpl/rpldev.c:66:
+#define SKIP_PTM(tty)   if(IS_PTY_MASTER(tty)) return 0;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#206: FILE: drivers/char/rpl/rpldev.c:66:
+#define SKIP_PTM(tty)   if(IS_PTY_MASTER(tty)) return 0;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#206: FILE: drivers/char/rpl/rpldev.c:66:
+#define SKIP_PTM(tty)   if(IS_PTY_MASTER(tty)) return 0;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#214: FILE: drivers/char/rpl/rpldev.c:74:
+/*static int krpl_ioctl(struct tty_struct *, struct tty_struct *, unsigned int,
+  unsigned long);*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: drivers/char/rpl/rpldev.c:74:
+  unsigned long);*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: drivers/char/rpl/rpldev.c:83:
+                          unsigned long);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/char/rpl/rpldev.c:83:
+                          unsigned long);$

CHECK:CAMELCASE: Avoid CamelCase: <Pull_queue>
#238: FILE: drivers/char/rpl/rpldev.c:98:
+static DECLARE_WAIT_QUEUE_HEAD(Pull_queue);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Buffer_lock>
#239: FILE: drivers/char/rpl/rpldev.c:99:
+static DECLARE_MUTEX(Buffer_lock);

CHECK:CAMELCASE: Avoid CamelCase: <Open_lock>
#240: FILE: drivers/char/rpl/rpldev.c:100:
+static DECLARE_MUTEX(Open_lock);

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#241: FILE: drivers/char/rpl/rpldev.c:101:
+static char *Buffer = NULL, *BufRP = NULL, *BufWP = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <Buffer>
#241: FILE: drivers/char/rpl/rpldev.c:101:
+static char *Buffer = NULL, *BufRP = NULL, *BufWP = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <BufRP>
#241: FILE: drivers/char/rpl/rpldev.c:101:
+static char *Buffer = NULL, *BufRP = NULL, *BufWP = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <BufWP>
#241: FILE: drivers/char/rpl/rpldev.c:101:
+static char *Buffer = NULL, *BufRP = NULL, *BufWP = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <Bufsize>
#242: FILE: drivers/char/rpl/rpldev.c:102:
+static size_t Bufsize = 32 * 1024;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#243: FILE: drivers/char/rpl/rpldev.c:103:
+static int Minor_nr = MISC_DYNAMIC_MINOR, Open_count = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Minor_nr>
#243: FILE: drivers/char/rpl/rpldev.c:103:
+static int Minor_nr = MISC_DYNAMIC_MINOR, Open_count = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Open_count>
#243: FILE: drivers/char/rpl/rpldev.c:103:
+static int Minor_nr = MISC_DYNAMIC_MINOR, Open_count = 0;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#246: FILE: drivers/char/rpl/rpldev.c:106:
+static struct file_operations kmi_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/char/rpl/rpldev.c:107:
+    .open    = urpl_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/char/rpl/rpldev.c:108:
+    .read    = urpl_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/char/rpl/rpldev.c:109:
+    .llseek  = urpl_seek,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/char/rpl/rpldev.c:110:
+    .ioctl   = urpl_ioctl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/char/rpl/rpldev.c:111:
+    .poll    = urpl_poll,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/char/rpl/rpldev.c:112:
+    .release = urpl_close,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/char/rpl/rpldev.c:113:
+    .owner   = THIS_MODULE,$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#255: FILE: drivers/char/rpl/rpldev.c:115:
+};
+static struct miscdevice kmi_miscinfo = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/char/rpl/rpldev.c:116:
+    .minor = MISC_DYNAMIC_MINOR,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/char/rpl/rpldev.c:117:
+    .name  = "rpl",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/char/rpl/rpldev.c:118:
+    .fops  = &kmi_fops,$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#271: FILE: drivers/char/rpl/rpldev.c:131:
+__init extern int rpl_init_module(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/char/rpl/rpldev.c:132:
+    int eax;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#273: FILE: drivers/char/rpl/rpldev.c:133:
+    int eax;
+    kmi_miscinfo.minor = Minor_nr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/char/rpl/rpldev.c:133:
+    kmi_miscinfo.minor = Minor_nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/char/rpl/rpldev.c:134:
+    if((eax = misc_register(&kmi_miscinfo)) != 0)$

ERROR:SPACING: space required before the open parenthesis '('
#274: FILE: drivers/char/rpl/rpldev.c:134:
+    if((eax = misc_register(&kmi_miscinfo)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#274: FILE: drivers/char/rpl/rpldev.c:134:
+    if((eax = misc_register(&kmi_miscinfo)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: drivers/char/rpl/rpldev.c:135:
+        return eax;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/char/rpl/rpldev.c:135:
+        return eax;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/char/rpl/rpldev.c:136:
+    Minor_nr = kmi_miscinfo.minor; // give minor back to sysfs$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/char/rpl/rpldev.c:137:
+    printk(KERN_DEBUG PREFIX "registered at minor %d\n", Minor_nr);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#277: FILE: drivers/char/rpl/rpldev.c:137:
+    printk(KERN_DEBUG PREFIX "registered at minor %d\n", Minor_nr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/char/rpl/rpldev.c:138:
+    return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#281: FILE: drivers/char/rpl/rpldev.c:141:
+__exit extern void rpl_cleanup_module(void) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/char/rpl/rpldev.c:142:
+    misc_deregister(&kmi_miscinfo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/char/rpl/rpldev.c:143:
+    return;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#291: FILE: drivers/char/rpl/rpldev.c:151:
+ struct file *filp)
               ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: drivers/char/rpl/rpldev.c:151:
+static int krpl_init(struct tty_struct *tty, struct tty_struct *ctl,
+ struct file *filp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/char/rpl/rpldev.c:151:
+ struct file *filp)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#294: FILE: drivers/char/rpl/rpldev.c:154:
+    /* Called from drivers/char/tty_io.c:init_dev() when the refcount of a tty
+    raises from zero to one. Usually, an EVT_OPEN follows an EVT_INIT. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#294: FILE: drivers/char/rpl/rpldev.c:154:
+    raises from zero to one. Usually, an EVT_OPEN follows an EVT_INIT. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/char/rpl/rpldev.c:155:
+    struct rpldev_packet p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: drivers/char/rpl/rpldev.c:156:
+    char dev[MAXFNLEN], *full_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/char/rpl/rpldev.c:157:
+    int len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/char/rpl/rpldev.c:159:
+    SKIP_PTM(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/char/rpl/rpldev.c:161:
+    p.dev   = TTY_DEVNR(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/char/rpl/rpldev.c:162:
+    p.event = EVT_INIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/char/rpl/rpldev.c:163:
+    p.magic = MAGIC_SIG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/char/rpl/rpldev.c:164:
+    fill_time(&p.time);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#307: FILE: drivers/char/rpl/rpldev.c:167:
+    /* "/dev/tty" is an evil case, because its ownership is not the same as
+    that of a better node, e.g. /dev/tty1. Do not pass it to userspace. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#307: FILE: drivers/char/rpl/rpldev.c:167:
+    that of a better node, e.g. /dev/tty1. Do not pass it to userspace. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/char/rpl/rpldev.c:168:
+    if(filp->f_dentry->d_inode->i_rdev == MKDEV(TTYAUX_MAJOR, 0) ||$

ERROR:SPACING: space required before the open parenthesis '('
#308: FILE: drivers/char/rpl/rpldev.c:168:
+    if(filp->f_dentry->d_inode->i_rdev == MKDEV(TTYAUX_MAJOR, 0) ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#308: FILE: drivers/char/rpl/rpldev.c:168:
+    if(filp->f_dentry->d_inode->i_rdev == MKDEV(TTYAUX_MAJOR, 0) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: drivers/char/rpl/rpldev.c:169:
+    if(filp->f_dentry->d_inode->i_rdev == MKDEV(TTYAUX_MAJOR, 0) ||
+     IS_ERR(full_dev = d_path(filp->f_dentry, filp->f_vfsmnt,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/char/rpl/rpldev.c:169:
+     IS_ERR(full_dev = d_path(filp->f_dentry, filp->f_vfsmnt,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/char/rpl/rpldev.c:170:
+     IS_ERR(full_dev = d_path(filp->f_dentry, filp->f_vfsmnt,
+     dev, sizeof(dev)))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/char/rpl/rpldev.c:170:
+     dev, sizeof(dev)))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: drivers/char/rpl/rpldev.c:171:
+        p.size = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/char/rpl/rpldev.c:171:
+        p.size = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: drivers/char/rpl/rpldev.c:172:
+        return mv_buffer(&p, NULL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/char/rpl/rpldev.c:172:
+        return mv_buffer(&p, NULL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/char/rpl/rpldev.c:173:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/char/rpl/rpldev.c:175:
+    p.size = cpu_to_le16(len = strlen(full_dev));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/char/rpl/rpldev.c:176:
+    return mv_buffer(&p, full_dev, len);$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#320: FILE: drivers/char/rpl/rpldev.c:180:
+ struct file *filp)
               ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: drivers/char/rpl/rpldev.c:180:
+static int krpl_open(struct tty_struct *tty, struct tty_struct *ctl,
+ struct file *filp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/char/rpl/rpldev.c:180:
+ struct file *filp)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#323: FILE: drivers/char/rpl/rpldev.c:183:
+    /* Called from drivers/char/tty_io.c:tty_open() whenever an open() on a
+    tty succeeds. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#323: FILE: drivers/char/rpl/rpldev.c:183:
+    tty succeeds. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: drivers/char/rpl/rpldev.c:184:
+    struct rpldev_packet p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/char/rpl/rpldev.c:185:
+    char dev[MAXFNLEN], *full_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/char/rpl/rpldev.c:186:
+    int len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/char/rpl/rpldev.c:188:
+    SKIP_PTM(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/char/rpl/rpldev.c:190:
+    p.dev   = TTY_DEVNR(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/char/rpl/rpldev.c:191:
+    p.event = EVT_OPEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/char/rpl/rpldev.c:192:
+    p.magic = MAGIC_SIG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/char/rpl/rpldev.c:193:
+    fill_time(&p.time);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/char/rpl/rpldev.c:195:
+    if(filp->f_dentry->d_inode->i_rdev == MKDEV(TTYAUX_MAJOR, 0) ||$

ERROR:SPACING: space required before the open parenthesis '('
#335: FILE: drivers/char/rpl/rpldev.c:195:
+    if(filp->f_dentry->d_inode->i_rdev == MKDEV(TTYAUX_MAJOR, 0) ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#335: FILE: drivers/char/rpl/rpldev.c:195:
+    if(filp->f_dentry->d_inode->i_rdev == MKDEV(TTYAUX_MAJOR, 0) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/char/rpl/rpldev.c:196:
+    if(filp->f_dentry->d_inode->i_rdev == MKDEV(TTYAUX_MAJOR, 0) ||
+     IS_ERR(full_dev = d_path(filp->f_dentry, filp->f_vfsmnt,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/char/rpl/rpldev.c:196:
+     IS_ERR(full_dev = d_path(filp->f_dentry, filp->f_vfsmnt,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/char/rpl/rpldev.c:197:
+     IS_ERR(full_dev = d_path(filp->f_dentry, filp->f_vfsmnt,
+     dev, sizeof(dev)))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/char/rpl/rpldev.c:197:
+     dev, sizeof(dev)))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/char/rpl/rpldev.c:198:
+        p.size = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/char/rpl/rpldev.c:198:
+        p.size = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: drivers/char/rpl/rpldev.c:199:
+        return mv_buffer(&p, NULL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/char/rpl/rpldev.c:199:
+        return mv_buffer(&p, NULL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/char/rpl/rpldev.c:200:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/char/rpl/rpldev.c:202:
+    p.size = cpu_to_le16(len = strlen(full_dev));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/char/rpl/rpldev.c:203:
+    return mv_buffer(&p, full_dev, len);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/char/rpl/rpldev.c:207:
+static int krpl_read(const char __user *buf, size_t count,
+ struct tty_struct *tty)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/char/rpl/rpldev.c:207:
+ struct tty_struct *tty)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#350: FILE: drivers/char/rpl/rpldev.c:210:
+    /* The data flow is a bit weird at first. krpl_read() gets the data on its
+    way between ttyDriver(master) -> /dev/stdin(slave), meaning this function

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#352: FILE: drivers/char/rpl/rpldev.c:212:
+    onscreen. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/char/rpl/rpldev.c:213:
+    struct rpldev_packet p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/char/rpl/rpldev.c:215:
+    SKIP_PTM(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/char/rpl/rpldev.c:216:
+    if(count == 0) return 0;$

ERROR:SPACING: space required before the open parenthesis '('
#356: FILE: drivers/char/rpl/rpldev.c:216:
+    if(count == 0) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#356: FILE: drivers/char/rpl/rpldev.c:216:
+    if(count == 0) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/char/rpl/rpldev.c:218:
+    p.dev   = TTY_DEVNR(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/char/rpl/rpldev.c:219:
+    p.size  = cpu_to_le16(count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/char/rpl/rpldev.c:220:
+    p.event = EVT_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/char/rpl/rpldev.c:221:
+    p.magic = MAGIC_SIG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/char/rpl/rpldev.c:222:
+    fill_time(&p.time);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/char/rpl/rpldev.c:223:
+    return mv_buffer(&p, buf, count);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/char/rpl/rpldev.c:227:
+static int krpl_write(const char __user *buf, size_t count,
+ struct tty_struct *tty)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/char/rpl/rpldev.c:227:
+ struct tty_struct *tty)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#370: FILE: drivers/char/rpl/rpldev.c:230:
+    /* Data flow: /dev/stdout(slave) -> tty driver(master).
+    There are two ways an application can use a tty:

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#383: FILE: drivers/char/rpl/rpldev.c:243:
+    you need if the EVT_WRITE packets do not suffice. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/char/rpl/rpldev.c:244:
+    struct rpldev_packet p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/char/rpl/rpldev.c:246:
+    SKIP_PTM(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/char/rpl/rpldev.c:247:
+    if(count == 0) return 0;$

ERROR:SPACING: space required before the open parenthesis '('
#387: FILE: drivers/char/rpl/rpldev.c:247:
+    if(count == 0) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#387: FILE: drivers/char/rpl/rpldev.c:247:
+    if(count == 0) return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/char/rpl/rpldev.c:249:
+    p.dev   = TTY_DEVNR(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/char/rpl/rpldev.c:250:
+    p.size  = cpu_to_le16(count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/char/rpl/rpldev.c:251:
+    p.event = EVT_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/char/rpl/rpldev.c:252:
+    p.magic = MAGIC_SIG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/char/rpl/rpldev.c:253:
+    fill_time(&p.time);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/char/rpl/rpldev.c:254:
+    return mv_buffer(&p, buf, count);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#398: FILE: drivers/char/rpl/rpldev.c:258:
+/*
+static int krpl_ioctl(struct tty_struct *tty, struct tty_struct *ctl,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#416: FILE: drivers/char/rpl/rpldev.c:276:
+static int krpl_close(struct tty_struct *tty, struct tty_struct *other) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/char/rpl/rpldev.c:277:
+    struct rpldev_packet p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/char/rpl/rpldev.c:279:
+    SKIP_PTM(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/char/rpl/rpldev.c:281:
+    p.dev   = TTY_DEVNR(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/char/rpl/rpldev.c:282:
+    p.size  = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/char/rpl/rpldev.c:283:
+    p.event = EVT_CLOSE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/char/rpl/rpldev.c:284:
+    p.magic = MAGIC_SIG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/char/rpl/rpldev.c:285:
+    fill_time(&p.time);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/char/rpl/rpldev.c:286:
+    return mv_buffer(&p, NULL, 0);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#429: FILE: drivers/char/rpl/rpldev.c:289:
+static int krpl_deinit(struct tty_struct *tty, struct tty_struct *other) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/char/rpl/rpldev.c:290:
+    struct rpldev_packet p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/char/rpl/rpldev.c:292:
+    if(IS_PTY_MASTER(tty)) tty = other;$

ERROR:SPACING: space required before the open parenthesis '('
#432: FILE: drivers/char/rpl/rpldev.c:292:
+    if(IS_PTY_MASTER(tty)) tty = other;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#432: FILE: drivers/char/rpl/rpldev.c:292:
+    if(IS_PTY_MASTER(tty)) tty = other;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/char/rpl/rpldev.c:294:
+    p.dev   = TTY_DEVNR(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/char/rpl/rpldev.c:295:
+    p.size  = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/char/rpl/rpldev.c:296:
+    p.event = EVT_DEINIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/char/rpl/rpldev.c:297:
+    p.magic = MAGIC_SIG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/char/rpl/rpldev.c:298:
+    fill_time(&p.time);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/char/rpl/rpldev.c:299:
+    return mv_buffer(&p, NULL, 0);$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#443: FILE: drivers/char/rpl/rpldev.c:303:
+static int urpl_open(struct inode *inode, struct file *filp) {
                                                        ^^^^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#443: FILE: drivers/char/rpl/rpldev.c:303:
+static int urpl_open(struct inode *inode, struct file *filp) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/char/rpl/rpldev.c:305:
+    if(inode != NULL) {$

ERROR:SPACING: space required before the open parenthesis '('
#445: FILE: drivers/char/rpl/rpldev.c:305:
+    if(inode != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "inode"
#445: FILE: drivers/char/rpl/rpldev.c:305:
+    if(inode != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: drivers/char/rpl/rpldev.c:306:
+        inode->i_mtime = CURRENT_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/char/rpl/rpldev.c:306:
+        inode->i_mtime = CURRENT_TIME;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: drivers/char/rpl/rpldev.c:307:
+        inode->i_mode &= ~(S_IWUGO | S_IXUGO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/char/rpl/rpldev.c:307:
+        inode->i_mode &= ~(S_IWUGO | S_IXUGO);$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO | S_IXUGO' are not preferred. Consider using octal permissions '0333'.
#447: FILE: drivers/char/rpl/rpldev.c:307:
+        inode->i_mode &= ~(S_IWUGO | S_IXUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/char/rpl/rpldev.c:308:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#451: FILE: drivers/char/rpl/rpldev.c:311:
+    /* The RPL device should only be opened once, since otherwise, different
+    packets could go to different readers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#451: FILE: drivers/char/rpl/rpldev.c:311:
+    packets could go to different readers. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/char/rpl/rpldev.c:312:
+    down(&Open_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/char/rpl/rpldev.c:313:
+    if(Open_count) {$

ERROR:SPACING: space required before the open parenthesis '('
#453: FILE: drivers/char/rpl/rpldev.c:313:
+    if(Open_count) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: drivers/char/rpl/rpldev.c:314:
+        up(&Open_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/char/rpl/rpldev.c:314:
+        up(&Open_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: drivers/char/rpl/rpldev.c:315:
+        return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/char/rpl/rpldev.c:315:
+        return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/char/rpl/rpldev.c:316:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/char/rpl/rpldev.c:317:
+    ++Open_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/char/rpl/rpldev.c:318:
+    up(&Open_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/char/rpl/rpldev.c:320:
+    down(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/char/rpl/rpldev.c:321:
+    Buffer = __vmalloc(Bufsize, GFP_KERNEL | __GFP_HIGHMEM, PAGE_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/char/rpl/rpldev.c:322:
+    if(Buffer == NULL) {$

ERROR:SPACING: space required before the open parenthesis '('
#462: FILE: drivers/char/rpl/rpldev.c:322:
+    if(Buffer == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Buffer"
#462: FILE: drivers/char/rpl/rpldev.c:322:
+    if(Buffer == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: drivers/char/rpl/rpldev.c:323:
+        up(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/char/rpl/rpldev.c:323:
+        up(&Buffer_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: drivers/char/rpl/rpldev.c:324:
+        up(&Open_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: drivers/char/rpl/rpldev.c:324:
+        up(&Open_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: drivers/char/rpl/rpldev.c:325:
+        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/char/rpl/rpldev.c:325:
+        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/char/rpl/rpldev.c:326:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/char/rpl/rpldev.c:327:
+    BufRP = BufWP = Buffer;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#467: FILE: drivers/char/rpl/rpldev.c:327:
+    BufRP = BufWP = Buffer;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#470: FILE: drivers/char/rpl/rpldev.c:330:
+    /* Update links. I do it here 'cause I do not want memory copying (from the
+    tty driver to the buffer) when there is no one to read. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#470: FILE: drivers/char/rpl/rpldev.c:330:
+    tty driver to the buffer) when there is no one to read. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/char/rpl/rpldev.c:331:
+    rpl_qinit   = krpl_init;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/char/rpl/rpldev.c:332:
+    rpl_qopen   = krpl_open;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: drivers/char/rpl/rpldev.c:333:
+    rpl_qread   = krpl_read;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/char/rpl/rpldev.c:334:
+    rpl_qwrite  = krpl_write;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/char/rpl/rpldev.c:336:
+    rpl_qclose  = krpl_close;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: drivers/char/rpl/rpldev.c:337:
+    rpl_qdeinit = krpl_deinit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/char/rpl/rpldev.c:338:
+    up(&Buffer_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: drivers/char/rpl/rpldev.c:341:
+            Access Time: if data is read from the device$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#481: FILE: drivers/char/rpl/rpldev.c:341:
+    /* The inode's times are changed as follows:
+            Access Time: if data is read from the device

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: drivers/char/rpl/rpldev.c:345:
+    if(inode != NULL)$

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: drivers/char/rpl/rpldev.c:345:
+    if(inode != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "inode"
#485: FILE: drivers/char/rpl/rpldev.c:345:
+    if(inode != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: drivers/char/rpl/rpldev.c:346:
+        inode->i_ctime = CURRENT_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/char/rpl/rpldev.c:346:
+        inode->i_ctime = CURRENT_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/char/rpl/rpldev.c:347:
+    return 0;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#490: FILE: drivers/char/rpl/rpldev.c:350:
+static ssize_t urpl_read(struct file *filp, char __user *buf, size_t count,
                                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/char/rpl/rpldev.c:351:
+static ssize_t urpl_read(struct file *filp, char __user *buf, size_t count,
+ loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: drivers/char/rpl/rpldev.c:351:
+ loff_t *ppos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/char/rpl/rpldev.c:353:
+    int eax;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/char/rpl/rpldev.c:356:
+    if(count == 0) return 0;$

ERROR:SPACING: space required before the open parenthesis '('
#496: FILE: drivers/char/rpl/rpldev.c:356:
+    if(count == 0) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#496: FILE: drivers/char/rpl/rpldev.c:356:
+    if(count == 0) return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: drivers/char/rpl/rpldev.c:359:
+    if(down_interruptible(&Buffer_lock))$

ERROR:SPACING: space required before the open parenthesis '('
#499: FILE: drivers/char/rpl/rpldev.c:359:
+    if(down_interruptible(&Buffer_lock))

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: drivers/char/rpl/rpldev.c:360:
+        return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: drivers/char/rpl/rpldev.c:360:
+        return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: drivers/char/rpl/rpldev.c:362:
+    while(BufRP == BufWP) {$

ERROR:SPACING: space required before the open parenthesis '('
#502: FILE: drivers/char/rpl/rpldev.c:362:
+    while(BufRP == BufWP) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: drivers/char/rpl/rpldev.c:363:
+        up(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/char/rpl/rpldev.c:363:
+        up(&Buffer_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: drivers/char/rpl/rpldev.c:364:
+        if(filp->f_flags & O_NONBLOCK)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: drivers/char/rpl/rpldev.c:364:
+        if(filp->f_flags & O_NONBLOCK)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#504: FILE: drivers/char/rpl/rpldev.c:364:
+        if(filp->f_flags & O_NONBLOCK)
+            return -EAGAIN;

ERROR:SPACING: space required before the open parenthesis '('
#504: FILE: drivers/char/rpl/rpldev.c:364:
+        if(filp->f_flags & O_NONBLOCK)

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: drivers/char/rpl/rpldev.c:365:
+            return -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/char/rpl/rpldev.c:365:
+            return -EAGAIN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: drivers/char/rpl/rpldev.c:366:
+        if(wait_event_interruptible(Pull_queue, (BufRP != BufWP)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/char/rpl/rpldev.c:366:
+        if(wait_event_interruptible(Pull_queue, (BufRP != BufWP)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#506: FILE: drivers/char/rpl/rpldev.c:366:
+        if(wait_event_interruptible(Pull_queue, (BufRP != BufWP)))
+            return -ERESTARTSYS;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'BufRP != BufWP'
#506: FILE: drivers/char/rpl/rpldev.c:366:
+        if(wait_event_interruptible(Pull_queue, (BufRP != BufWP)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#506: FILE: drivers/char/rpl/rpldev.c:366:
+        if(wait_event_interruptible(Pull_queue, (BufRP != BufWP)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: drivers/char/rpl/rpldev.c:367:
+            return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/char/rpl/rpldev.c:367:
+            return -ERESTARTSYS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: drivers/char/rpl/rpldev.c:368:
+        if(down_interruptible(&Buffer_lock))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: drivers/char/rpl/rpldev.c:368:
+        if(down_interruptible(&Buffer_lock))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#508: FILE: drivers/char/rpl/rpldev.c:368:
+        if(down_interruptible(&Buffer_lock))
+            return -ERESTARTSYS;

ERROR:SPACING: space required before the open parenthesis '('
#508: FILE: drivers/char/rpl/rpldev.c:368:
+        if(down_interruptible(&Buffer_lock))

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: drivers/char/rpl/rpldev.c:369:
+            return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: drivers/char/rpl/rpldev.c:369:
+            return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/char/rpl/rpldev.c:370:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/char/rpl/rpldev.c:373:
+    count = min_uint(count, avail_R());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/char/rpl/rpldev.c:374:
+    eax   = mv_to_user(buf, count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: drivers/char/rpl/rpldev.c:376:
+    up(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: drivers/char/rpl/rpldev.c:377:
+    filp->f_dentry->d_inode->i_atime = CURRENT_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/char/rpl/rpldev.c:378:
+    return (eax != 0) ? eax : count;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#521: FILE: drivers/char/rpl/rpldev.c:381:
+static loff_t urpl_seek(struct file *filp, loff_t offset, int origin) {
                                      ^^^^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#521: FILE: drivers/char/rpl/rpldev.c:381:
+static loff_t urpl_seek(struct file *filp, loff_t offset, int origin) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#523: FILE: drivers/char/rpl/rpldev.c:383:
+    /* Since you can not seek in the circular buffer, the only purpose of
+    seek() is to skip some bytes and "manually" advance the read pointer RP

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#525: FILE: drivers/char/rpl/rpldev.c:385:
+    with offset == 0. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: drivers/char/rpl/rpldev.c:387:
+    if(origin == SEEK_END && offset == 0) {$

ERROR:SPACING: space required before the open parenthesis '('
#527: FILE: drivers/char/rpl/rpldev.c:387:
+    if(origin == SEEK_END && offset == 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: drivers/char/rpl/rpldev.c:388:
+        if(down_interruptible(&Buffer_lock))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/char/rpl/rpldev.c:388:
+        if(down_interruptible(&Buffer_lock))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#528: FILE: drivers/char/rpl/rpldev.c:388:
+        if(down_interruptible(&Buffer_lock))
+            return -ERESTARTSYS;

ERROR:SPACING: space required before the open parenthesis '('
#528: FILE: drivers/char/rpl/rpldev.c:388:
+        if(down_interruptible(&Buffer_lock))

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: drivers/char/rpl/rpldev.c:389:
+            return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: drivers/char/rpl/rpldev.c:389:
+            return -ERESTARTSYS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: drivers/char/rpl/rpldev.c:390:
+        BufRP = BufWP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: drivers/char/rpl/rpldev.c:390:
+        BufRP = BufWP;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: drivers/char/rpl/rpldev.c:391:
+        up(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/char/rpl/rpldev.c:391:
+        up(&Buffer_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: drivers/char/rpl/rpldev.c:392:
+        filp->f_dentry->d_inode->i_atime = CURRENT_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: drivers/char/rpl/rpldev.c:392:
+        filp->f_dentry->d_inode->i_atime = CURRENT_TIME;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: drivers/char/rpl/rpldev.c:393:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/char/rpl/rpldev.c:393:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/char/rpl/rpldev.c:394:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: drivers/char/rpl/rpldev.c:396:
+    if(origin != SEEK_CUR) return -ESPIPE;$

ERROR:SPACING: space required before the open parenthesis '('
#536: FILE: drivers/char/rpl/rpldev.c:396:
+    if(origin != SEEK_CUR) return -ESPIPE;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#536: FILE: drivers/char/rpl/rpldev.c:396:
+    if(origin != SEEK_CUR) return -ESPIPE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/char/rpl/rpldev.c:397:
+    if(offset == 0) return 0;$

ERROR:SPACING: space required before the open parenthesis '('
#537: FILE: drivers/char/rpl/rpldev.c:397:
+    if(offset == 0) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#537: FILE: drivers/char/rpl/rpldev.c:397:
+    if(offset == 0) return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/char/rpl/rpldev.c:399:
+    if(down_interruptible(&Buffer_lock))$

ERROR:SPACING: space required before the open parenthesis '('
#539: FILE: drivers/char/rpl/rpldev.c:399:
+    if(down_interruptible(&Buffer_lock))

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: drivers/char/rpl/rpldev.c:400:
+        return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: drivers/char/rpl/rpldev.c:400:
+        return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/char/rpl/rpldev.c:401:
+    BufRP = Buffer + (BufRP - Buffer + min_uint(offset, avail_R())) % Bufsize;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#542: FILE: drivers/char/rpl/rpldev.c:402:
+    if(BufRP >= Buffer + Bufsize) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: drivers/char/rpl/rpldev.c:402:
+    if(BufRP >= Buffer + Bufsize) { $

ERROR:SPACING: space required before the open parenthesis '('
#542: FILE: drivers/char/rpl/rpldev.c:402:
+    if(BufRP >= Buffer + Bufsize) { 

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: drivers/char/rpl/rpldev.c:403:
+        WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: drivers/char/rpl/rpldev.c:403:
+        WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: drivers/char/rpl/rpldev.c:404:
+        BufRP = BufWP = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/char/rpl/rpldev.c:404:
+        BufRP = BufWP = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#544: FILE: drivers/char/rpl/rpldev.c:404:
+        BufRP = BufWP = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: drivers/char/rpl/rpldev.c:405:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/char/rpl/rpldev.c:407:
+    up(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: drivers/char/rpl/rpldev.c:408:
+    filp->f_dentry->d_inode->i_atime = CURRENT_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/char/rpl/rpldev.c:409:
+    return 0;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#552: FILE: drivers/char/rpl/rpldev.c:412:
+static int urpl_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,
                                                         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: drivers/char/rpl/rpldev.c:413:
+static int urpl_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,
+ unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: drivers/char/rpl/rpldev.c:413:
+ unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/char/rpl/rpldev.c:415:
+    if(_IOC_TYPE(cmd) != RPL_IOC_MAGIC)$

ERROR:SPACING: space required before the open parenthesis '('
#555: FILE: drivers/char/rpl/rpldev.c:415:
+    if(_IOC_TYPE(cmd) != RPL_IOC_MAGIC)

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: drivers/char/rpl/rpldev.c:416:
+        return -ENOTTY; /* ENAUGHTY */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: drivers/char/rpl/rpldev.c:416:
+        return -ENOTTY; /* ENAUGHTY */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: drivers/char/rpl/rpldev.c:418:
+    switch(cmd) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#558: FILE: drivers/char/rpl/rpldev.c:418:
+    switch(cmd) {
+        case RPL_IOC_GETBUFSIZE:
[...]
+        case RPL_IOC_GETRAVAIL:
[...]
+        case RPL_IOC_GETWAVAIL:
[...]
+        case RPL_IOC_IDENTIFY:
[...]
+        case RPL_IOC_SEEK:
[...]
+        case RPL_IOC_FLUSH:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#558: FILE: drivers/char/rpl/rpldev.c:418:
+    switch(cmd) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: drivers/char/rpl/rpldev.c:419:
+        case RPL_IOC_GETBUFSIZE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: drivers/char/rpl/rpldev.c:419:
+        case RPL_IOC_GETBUFSIZE:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: drivers/char/rpl/rpldev.c:420:
+            return Bufsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: drivers/char/rpl/rpldev.c:420:
+            return Bufsize;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: drivers/char/rpl/rpldev.c:421:
+        case RPL_IOC_GETRAVAIL:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: drivers/char/rpl/rpldev.c:421:
+        case RPL_IOC_GETRAVAIL:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: drivers/char/rpl/rpldev.c:422:
+            return avail_R();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/char/rpl/rpldev.c:422:
+            return avail_R();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: drivers/char/rpl/rpldev.c:423:
+        case RPL_IOC_GETWAVAIL:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: drivers/char/rpl/rpldev.c:423:
+        case RPL_IOC_GETWAVAIL:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: drivers/char/rpl/rpldev.c:424:
+            return avail_W();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: drivers/char/rpl/rpldev.c:424:
+            return avail_W();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: drivers/char/rpl/rpldev.c:425:
+        case RPL_IOC_IDENTIFY:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/char/rpl/rpldev.c:425:
+        case RPL_IOC_IDENTIFY:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: drivers/char/rpl/rpldev.c:426:
+            return 0xC0FFEE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: drivers/char/rpl/rpldev.c:426:
+            return 0xC0FFEE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: drivers/char/rpl/rpldev.c:427:
+        case RPL_IOC_SEEK:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: drivers/char/rpl/rpldev.c:427:
+        case RPL_IOC_SEEK:$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#568: FILE: drivers/char/rpl/rpldev.c:428:
+            return urpl_seek(filp, arg, SEEK_CUR);
                              ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: drivers/char/rpl/rpldev.c:428:
+            return urpl_seek(filp, arg, SEEK_CUR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: drivers/char/rpl/rpldev.c:428:
+            return urpl_seek(filp, arg, SEEK_CUR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: drivers/char/rpl/rpldev.c:429:
+        case RPL_IOC_FLUSH:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: drivers/char/rpl/rpldev.c:429:
+        case RPL_IOC_FLUSH:$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#570: FILE: drivers/char/rpl/rpldev.c:430:
+            return urpl_seek(filp, 0, SEEK_END);
                              ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: drivers/char/rpl/rpldev.c:430:
+            return urpl_seek(filp, 0, SEEK_END);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: drivers/char/rpl/rpldev.c:430:
+            return urpl_seek(filp, 0, SEEK_END);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: drivers/char/rpl/rpldev.c:431:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: drivers/char/rpl/rpldev.c:433:
+    return -ENOTTY;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#576: FILE: drivers/char/rpl/rpldev.c:436:
+static unsigned int urpl_poll(struct file *filp, poll_table *wait) {
                                            ^^^^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#576: FILE: drivers/char/rpl/rpldev.c:436:
+static unsigned int urpl_poll(struct file *filp, poll_table *wait) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#577: FILE: drivers/char/rpl/rpldev.c:437:
+    poll_wait(filp, &Pull_queue, wait);
               ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/char/rpl/rpldev.c:437:
+    poll_wait(filp, &Pull_queue, wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/char/rpl/rpldev.c:438:
+    return POLLIN | POLLRDNORM;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#581: FILE: drivers/char/rpl/rpldev.c:441:
+static int urpl_close(struct inode *inode, struct file *filp) {
                                                         ^^^^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#581: FILE: drivers/char/rpl/rpldev.c:441:
+static int urpl_close(struct inode *inode, struct file *filp) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: drivers/char/rpl/rpldev.c:442:
+    rpl_qinit   = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/char/rpl/rpldev.c:443:
+    rpl_qopen   = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/char/rpl/rpldev.c:444:
+    rpl_qread   = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: drivers/char/rpl/rpldev.c:445:
+    rpl_qwrite  = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/char/rpl/rpldev.c:446:
+    rpl_qioctl  = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/char/rpl/rpldev.c:447:
+    rpl_qclose  = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/char/rpl/rpldev.c:448:
+    rpl_qdeinit = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/char/rpl/rpldev.c:449:
+    down(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: drivers/char/rpl/rpldev.c:450:
+    vfree(Buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: drivers/char/rpl/rpldev.c:451:
+    Buffer = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: drivers/char/rpl/rpldev.c:452:
+    up(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: drivers/char/rpl/rpldev.c:453:
+    --Open_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: drivers/char/rpl/rpldev.c:454:
+    return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#598: FILE: drivers/char/rpl/rpldev.c:458:
+static inline ssize_t avail_R(void) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: drivers/char/rpl/rpldev.c:460:
+    if(BufWP >= BufRP)$

ERROR:SPACING: space required before the open parenthesis '('
#600: FILE: drivers/char/rpl/rpldev.c:460:
+    if(BufWP >= BufRP)

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: drivers/char/rpl/rpldev.c:461:
+        return BufWP - BufRP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: drivers/char/rpl/rpldev.c:461:
+        return BufWP - BufRP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: drivers/char/rpl/rpldev.c:462:
+    return BufWP + Bufsize - BufRP;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#605: FILE: drivers/char/rpl/rpldev.c:465:
+static inline ssize_t avail_W(void) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/char/rpl/rpldev.c:467:
+    if(BufWP >= BufRP)$

ERROR:SPACING: space required before the open parenthesis '('
#607: FILE: drivers/char/rpl/rpldev.c:467:
+    if(BufWP >= BufRP)

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: drivers/char/rpl/rpldev.c:468:
+        return BufRP + Bufsize - BufWP - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: drivers/char/rpl/rpldev.c:468:
+        return BufRP + Bufsize - BufWP - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: drivers/char/rpl/rpldev.c:469:
+    return BufRP - BufWP - 1;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#612: FILE: drivers/char/rpl/rpldev.c:472:
+static inline void fill_time(struct timeval *tv) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: drivers/char/rpl/rpldev.c:473:
+    do_gettimeofday(tv);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#616: FILE: drivers/char/rpl/rpldev.c:476:
+    /* The following code all gets optimized away on LE, yay! And even on BE,
+    it is reduced by 50%. Just think of how ugly a #if-#endif wrappage

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#617: FILE: drivers/char/rpl/rpldev.c:477:
+    would be. :-) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: drivers/char/rpl/rpldev.c:478:
+    if(sizeof(tv->tv_sec) == sizeof(uint32_t))$

ERROR:SPACING: space required before the open parenthesis '('
#618: FILE: drivers/char/rpl/rpldev.c:478:
+    if(sizeof(tv->tv_sec) == sizeof(uint32_t))

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: drivers/char/rpl/rpldev.c:479:
+        tv->tv_sec = cpu_to_le32(tv->tv_sec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/char/rpl/rpldev.c:479:
+        tv->tv_sec = cpu_to_le32(tv->tv_sec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: drivers/char/rpl/rpldev.c:480:
+    else if(sizeof(tv->tv_sec) == sizeof(uint64_t))$

ERROR:SPACING: space required before the open parenthesis '('
#620: FILE: drivers/char/rpl/rpldev.c:480:
+    else if(sizeof(tv->tv_sec) == sizeof(uint64_t))

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: drivers/char/rpl/rpldev.c:481:
+        tv->tv_sec = cpu_to_le64(tv->tv_sec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: drivers/char/rpl/rpldev.c:481:
+        tv->tv_sec = cpu_to_le64(tv->tv_sec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: drivers/char/rpl/rpldev.c:483:
+    if(sizeof(tv->tv_usec) == sizeof(uint32_t))$

ERROR:SPACING: space required before the open parenthesis '('
#623: FILE: drivers/char/rpl/rpldev.c:483:
+    if(sizeof(tv->tv_usec) == sizeof(uint32_t))

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: drivers/char/rpl/rpldev.c:484:
+        tv->tv_usec = cpu_to_le32(tv->tv_usec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/char/rpl/rpldev.c:484:
+        tv->tv_usec = cpu_to_le32(tv->tv_usec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: drivers/char/rpl/rpldev.c:485:
+    else if(sizeof(tv->tv_usec) == sizeof(uint64_t))$

ERROR:SPACING: space required before the open parenthesis '('
#625: FILE: drivers/char/rpl/rpldev.c:485:
+    else if(sizeof(tv->tv_usec) == sizeof(uint64_t))

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: drivers/char/rpl/rpldev.c:486:
+        tv->tv_usec = cpu_to_le64(tv->tv_usec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: drivers/char/rpl/rpldev.c:486:
+        tv->tv_usec = cpu_to_le64(tv->tv_usec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: drivers/char/rpl/rpldev.c:488:
+    return;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#631: FILE: drivers/char/rpl/rpldev.c:491:
+static inline unsigned int min_uint(unsigned int a, unsigned int b) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/char/rpl/rpldev.c:492:
+    return (a < b) ? a : b;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#635: FILE: drivers/char/rpl/rpldev.c:495:
+static inline uint32_t mkdev_26(unsigned long maj, unsigned long min) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#637: FILE: drivers/char/rpl/rpldev.c:497:
+    /* Enforce the in-2.6-kernel scheme on userspace. That's because computing
+    the compatibility scheme (minor:12,major:12,minor:8) takes longer to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#638: FILE: drivers/char/rpl/rpldev.c:498:
+    compute. See the optimization statement at the top. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: drivers/char/rpl/rpldev.c:499:
+    return (maj << 20) | (min & 0xFFFFF);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#642: FILE: drivers/char/rpl/rpldev.c:502:
+static int mv_buffer(struct rpldev_packet *p, const void *buf, size_t count) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#644: FILE: drivers/char/rpl/rpldev.c:504:
+    /* Copy the contents the tty driver received to our circulary buffer and
+    also add a header (rpld_packet) to it so that the userspace daemon can

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#645: FILE: drivers/char/rpl/rpldev.c:505:
+    recognize the type. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: drivers/char/rpl/rpldev.c:506:
+    if(down_interruptible(&Buffer_lock))$

ERROR:SPACING: space required before the open parenthesis '('
#646: FILE: drivers/char/rpl/rpldev.c:506:
+    if(down_interruptible(&Buffer_lock))

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: drivers/char/rpl/rpldev.c:507:
+        return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: drivers/char/rpl/rpldev.c:507:
+        return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: drivers/char/rpl/rpldev.c:508:
+    if(avail_W() < sizeof(struct rpldev_packet) + count) {$

ERROR:SPACING: space required before the open parenthesis '('
#648: FILE: drivers/char/rpl/rpldev.c:508:
+    if(avail_W() < sizeof(struct rpldev_packet) + count) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#649: FILE: drivers/char/rpl/rpldev.c:509:
+        up(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: drivers/char/rpl/rpldev.c:509:
+        up(&Buffer_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#650: FILE: drivers/char/rpl/rpldev.c:510:
+        return -ENOSPC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/char/rpl/rpldev.c:510:
+        return -ENOSPC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/char/rpl/rpldev.c:511:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: drivers/char/rpl/rpldev.c:513:
+    mv_buffer2(p, sizeof(struct rpldev_packet));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: drivers/char/rpl/rpldev.c:514:
+    if(count > 0)$

ERROR:SPACING: space required before the open parenthesis '('
#654: FILE: drivers/char/rpl/rpldev.c:514:
+    if(count > 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: drivers/char/rpl/rpldev.c:515:
+        mv_buffer2(buf, count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: drivers/char/rpl/rpldev.c:515:
+        mv_buffer2(buf, count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: drivers/char/rpl/rpldev.c:517:
+    up(&Buffer_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: drivers/char/rpl/rpldev.c:518:
+    wake_up(&Pull_queue);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: drivers/char/rpl/rpldev.c:519:
+    return count;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#662: FILE: drivers/char/rpl/rpldev.c:522:
+static inline void mv_buffer2(const void *src, size_t count) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#664: FILE: drivers/char/rpl/rpldev.c:524:
+    /* This function is responsible for copying (a specific amount of
+    arbitrary data) into the circulary buffer. (Taking the wrappage into

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#666: FILE: drivers/char/rpl/rpldev.c:526:
+    there is enough room. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: drivers/char/rpl/rpldev.c:527:
+    size_t x = Buffer + Bufsize - BufWP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: drivers/char/rpl/rpldev.c:529:
+    if(count < x) {$

ERROR:SPACING: space required before the open parenthesis '('
#669: FILE: drivers/char/rpl/rpldev.c:529:
+    if(count < x) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#670: FILE: drivers/char/rpl/rpldev.c:530:
+        memcpy(BufWP, src, count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: drivers/char/rpl/rpldev.c:530:
+        memcpy(BufWP, src, count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#671: FILE: drivers/char/rpl/rpldev.c:531:
+        BufWP += count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: drivers/char/rpl/rpldev.c:531:
+        BufWP += count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: drivers/char/rpl/rpldev.c:532:
+    } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: drivers/char/rpl/rpldev.c:533:
+        memcpy(BufWP, src, x);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: drivers/char/rpl/rpldev.c:533:
+        memcpy(BufWP, src, x);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: drivers/char/rpl/rpldev.c:534:
+        memcpy(Buffer, src + x, count - x);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: drivers/char/rpl/rpldev.c:534:
+        memcpy(Buffer, src + x, count - x);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: drivers/char/rpl/rpldev.c:535:
+        BufWP = Buffer + count - x;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: drivers/char/rpl/rpldev.c:535:
+        BufWP = Buffer + count - x;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/char/rpl/rpldev.c:536:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: drivers/char/rpl/rpldev.c:538:
+    return;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#681: FILE: drivers/char/rpl/rpldev.c:541:
+static inline int mv_to_user(char __user *dest, size_t count) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#683: FILE: drivers/char/rpl/rpldev.c:543:
+    /* mv_to_user() reads COUNT bytes from the circulary buffer and puts it
+    into userspace memory. The caller must make sure that COUNT is at most

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#684: FILE: drivers/char/rpl/rpldev.c:544:
+    avail_R(). */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/char/rpl/rpldev.c:545:
+    size_t x = Buffer + Bufsize - BufRP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/char/rpl/rpldev.c:546:
+    int eax  = 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#689: FILE: drivers/char/rpl/rpldev.c:549:
+    /* Since this operation might block due to userspace page faults, the
+    userspace daemon should really have DEST memory-locked. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#689: FILE: drivers/char/rpl/rpldev.c:549:
+    userspace daemon should really have DEST memory-locked. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: drivers/char/rpl/rpldev.c:550:
+    if(count < x) {$

ERROR:SPACING: space required before the open parenthesis '('
#690: FILE: drivers/char/rpl/rpldev.c:550:
+    if(count < x) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: drivers/char/rpl/rpldev.c:551:
+        if((eax = copy_to_user(dest, BufRP, count)) == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: drivers/char/rpl/rpldev.c:551:
+        if((eax = copy_to_user(dest, BufRP, count)) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#691: FILE: drivers/char/rpl/rpldev.c:551:
+        if((eax = copy_to_user(dest, BufRP, count)) == 0)
+            BufRP += count;

ERROR:SPACING: space required before the open parenthesis '('
#691: FILE: drivers/char/rpl/rpldev.c:551:
+        if((eax = copy_to_user(dest, BufRP, count)) == 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#691: FILE: drivers/char/rpl/rpldev.c:551:
+        if((eax = copy_to_user(dest, BufRP, count)) == 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: drivers/char/rpl/rpldev.c:552:
+            BufRP += count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: drivers/char/rpl/rpldev.c:552:
+            BufRP += count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: drivers/char/rpl/rpldev.c:553:
+    } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: drivers/char/rpl/rpldev.c:554:
+        if((eax = copy_to_user(dest, BufRP, x)) == 0 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: drivers/char/rpl/rpldev.c:554:
+        if((eax = copy_to_user(dest, BufRP, x)) == 0 &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#694: FILE: drivers/char/rpl/rpldev.c:554:
+        if((eax = copy_to_user(dest, BufRP, x)) == 0 &&
[...]
+            BufRP = Buffer + count - x;

ERROR:SPACING: space required before the open parenthesis '('
#694: FILE: drivers/char/rpl/rpldev.c:554:
+        if((eax = copy_to_user(dest, BufRP, x)) == 0 &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#694: FILE: drivers/char/rpl/rpldev.c:554:
+        if((eax = copy_to_user(dest, BufRP, x)) == 0 &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: drivers/char/rpl/rpldev.c:555:
+         (eax = copy_to_user(dest + x, Buffer, count - x)) == 0)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: drivers/char/rpl/rpldev.c:555:
+        if((eax = copy_to_user(dest, BufRP, x)) == 0 &&
+         (eax = copy_to_user(dest + x, Buffer, count - x)) == 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: drivers/char/rpl/rpldev.c:555:
+         (eax = copy_to_user(dest + x, Buffer, count - x)) == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: drivers/char/rpl/rpldev.c:556:
+            BufRP = Buffer + count - x;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: drivers/char/rpl/rpldev.c:556:
+            BufRP = Buffer + count - x;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: drivers/char/rpl/rpldev.c:557:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: drivers/char/rpl/rpldev.c:559:
+    return eax;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#707: FILE: drivers/char/rpl/rpl_ioctl.h:1:
+/*=============================================================================

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#708: FILE: drivers/char/rpl/rpl_ioctl.h:2:
+/*=============================================================================
+ttyrpld - TTY replay daemon

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#710: FILE: drivers/char/rpl/rpl_ioctl.h:4:
+  Copyright © Jan Engelhardt <jengelh [at] linux01 gwdg de>, 2004 - 2005
             ^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#725: FILE: drivers/char/rpl/rpl_ioctl.h:19:
+  Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#729: FILE: drivers/char/rpl/rpl_ioctl.h:23:
+=============================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#738: FILE: drivers/char/rpl/rpl_ioctl.h:32:
+    /* Some weird *BSD scheme makes me use IOWR, otherwise readin the pointer
+    within kernel space does not seem to work. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#738: FILE: drivers/char/rpl/rpl_ioctl.h:32:
+    within kernel space does not seem to work. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: drivers/char/rpl/rpl_ioctl.h:33:
+    RPL_IOC_MAGIC      = 0xB7,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: drivers/char/rpl/rpl_ioctl.h:34:
+    RPL_IOC_GETBUFSIZE = _IOWR(RPL_IOC_MAGIC, 1, size_t),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: drivers/char/rpl/rpl_ioctl.h:35:
+    RPL_IOC_GETRAVAIL  = _IOWR(RPL_IOC_MAGIC, 2, size_t),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: drivers/char/rpl/rpl_ioctl.h:36:
+    RPL_IOC_GETWAVAIL  = _IOWR(RPL_IOC_MAGIC, 3, size_t),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: drivers/char/rpl/rpl_ioctl.h:37:
+    RPL_IOC_IDENTIFY   = _IOWR(RPL_IOC_MAGIC, 4, size_t),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: drivers/char/rpl/rpl_ioctl.h:38:
+    RPL_IOC_SEEK       = _IOWR(RPL_IOC_MAGIC, 5, size_t),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: drivers/char/rpl/rpl_ioctl.h:39:
+    RPL_IOC_FLUSH      = _IOWR(RPL_IOC_MAGIC, 6, size_t),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: drivers/char/rpl/rpl_ioctl.h:40:
+    RPL_IOC__MAXNUM    = _IOWR(RPL_IOC_MAGIC, 7, size_t),$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#756: FILE: drivers/char/rpl/rpl_packet.h:1:
+/*=============================================================================

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#757: FILE: drivers/char/rpl/rpl_packet.h:2:
+/*=============================================================================
+ttyrpld - TTY replay daemon

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#759: FILE: drivers/char/rpl/rpl_packet.h:4:
+  Copyright © Jan Engelhardt <jengelh [at] linux01 gwdg de>, 2004 - 2005
             ^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#774: FILE: drivers/char/rpl/rpl_packet.h:19:
+  Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#778: FILE: drivers/char/rpl/rpl_packet.h:23:
+=============================================================================*/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#782: FILE: drivers/char/rpl/rpl_packet.h:27:
+#define __PACKED __attribute__((packed))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: drivers/char/rpl/rpl_packet.h:33:
+    EVT_NONE = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: drivers/char/rpl/rpl_packet.h:34:
+    EVT_OPEN,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: drivers/char/rpl/rpl_packet.h:35:
+    EVT_READ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: drivers/char/rpl/rpl_packet.h:36:
+    EVT_WRITE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: drivers/char/rpl/rpl_packet.h:37:
+    EVT_IOCTL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: drivers/char/rpl/rpl_packet.h:38:
+    EVT_CLOSE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: drivers/char/rpl/rpl_packet.h:39:
+    EVT_INIT    = 0x69,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: drivers/char/rpl/rpl_packet.h:40:
+    EVT_DEINIT  = 0x64,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: drivers/char/rpl/rpl_packet.h:41:
+    EVT_ID_PROG = 0xF0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/char/rpl/rpl_packet.h:42:
+    EVT_ID_DEVPATH,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/char/rpl/rpl_packet.h:43:
+    EVT_max,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: drivers/char/rpl/rpl_packet.h:44:
+    MAGIC_SIG = 0xEE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: drivers/char/rpl/rpl_packet.h:48:
+    uint32_t dev;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#803: FILE: drivers/char/rpl/rpl_packet.h:48:
+    uint32_t dev;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: drivers/char/rpl/rpl_packet.h:49:
+    uint16_t size;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#804: FILE: drivers/char/rpl/rpl_packet.h:49:
+    uint16_t size;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: drivers/char/rpl/rpl_packet.h:50:
+    uint8_t event, magic;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#805: FILE: drivers/char/rpl/rpl_packet.h:50:
+    uint8_t event, magic;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: drivers/char/rpl/rpl_packet.h:51:
+    struct timeval time;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: drivers/char/rpl/rpl_packet.h:55:
+    uint16_t size;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#810: FILE: drivers/char/rpl/rpl_packet.h:55:
+    uint16_t size;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: drivers/char/rpl/rpl_packet.h:56:
+    uint8_t event, magic;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#811: FILE: drivers/char/rpl/rpl_packet.h:56:
+    uint8_t event, magic;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: drivers/char/rpl/rpl_packet.h:57:
+    struct timeval time;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: drivers/char/tty_io.c:125:
+int (*rpl_qioctl)(struct tty_struct *, struct tty_struct *, unsigned int,
+  unsigned long) = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: drivers/char/tty_io.c:125:
+  unsigned long) = NULL;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#835: FILE: drivers/char/tty_io.c:126:
+EXPORT_SYMBOL(rpl_qinit);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#836: FILE: drivers/char/tty_io.c:127:
+EXPORT_SYMBOL(rpl_qopen);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#837: FILE: drivers/char/tty_io.c:128:
+EXPORT_SYMBOL(rpl_qread);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#838: FILE: drivers/char/tty_io.c:129:
+EXPORT_SYMBOL(rpl_qwrite);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#839: FILE: drivers/char/tty_io.c:130:
+EXPORT_SYMBOL(rpl_qclose);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#840: FILE: drivers/char/tty_io.c:131:
+EXPORT_SYMBOL(rpl_qdeinit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#841: FILE: drivers/char/tty_io.c:132:
+EXPORT_SYMBOL(rpl_qioctl);

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: drivers/char/tty_io.c:1023:
+        if(i > 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: drivers/char/tty_io.c:1023:
+        if(i > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#853: FILE: drivers/char/tty_io.c:1023:
+        if(i > 0) {
+            inode->i_atime = CURRENT_TIME;

ERROR:SPACING: space required before the open parenthesis '('
#853: FILE: drivers/char/tty_io.c:1023:
+        if(i > 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: drivers/char/tty_io.c:1024:
+            inode->i_atime = CURRENT_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: drivers/char/tty_io.c:1024:
+            inode->i_atime = CURRENT_TIME;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: drivers/char/tty_io.c:1026:
+            if(rpl_qread != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: drivers/char/tty_io.c:1026:
+            if(rpl_qread != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#856: FILE: drivers/char/tty_io.c:1026:
+            if(rpl_qread != NULL)
+		    rpl_qread(buf, i, tty);

ERROR:SPACING: space required before the open parenthesis '('
#856: FILE: drivers/char/tty_io.c:1026:
+            if(rpl_qread != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rpl_qread"
#856: FILE: drivers/char/tty_io.c:1026:
+            if(rpl_qread != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#859: FILE: drivers/char/tty_io.c:1029:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: drivers/char/tty_io.c:1029:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#868: FILE: drivers/char/tty_io.c:1084:
+                if(rpl_qwrite != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: drivers/char/tty_io.c:1084:
+                if(rpl_qwrite != NULL)$

ERROR:SPACING: space required before the open parenthesis '('
#868: FILE: drivers/char/tty_io.c:1084:
+                if(rpl_qwrite != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rpl_qwrite"
#868: FILE: drivers/char/tty_io.c:1084:
+                if(rpl_qwrite != NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#880: FILE: drivers/char/tty_io.c:1181:
+		    struct file *filp)
 		                 ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: drivers/char/tty_io.c:1327:
+        if(rpl_qinit != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: drivers/char/tty_io.c:1327:
+        if(rpl_qinit != NULL)$

ERROR:SPACING: space required before the open parenthesis '('
#889: FILE: drivers/char/tty_io.c:1327:
+        if(rpl_qinit != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rpl_qinit"
#889: FILE: drivers/char/tty_io.c:1327:
+        if(rpl_qinit != NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#890: FILE: drivers/char/tty_io.c:1328:
+		rpl_qinit(tty, o_tty, filp);
 		                      ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#900: FILE: drivers/char/tty_io.c:1625:
+        if(rpl_qclose != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#900: FILE: drivers/char/tty_io.c:1625:
+        if(rpl_qclose != NULL)$

ERROR:SPACING: space required before the open parenthesis '('
#900: FILE: drivers/char/tty_io.c:1625:
+        if(rpl_qclose != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rpl_qclose"
#900: FILE: drivers/char/tty_io.c:1625:
+        if(rpl_qclose != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#912: FILE: drivers/char/tty_io.c:1638:
+        if(rpl_qdeinit != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: drivers/char/tty_io.c:1638:
+        if(rpl_qdeinit != NULL)$

ERROR:SPACING: space required before the open parenthesis '('
#912: FILE: drivers/char/tty_io.c:1638:
+        if(rpl_qdeinit != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rpl_qdeinit"
#912: FILE: drivers/char/tty_io.c:1638:
+        if(rpl_qdeinit != NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#924: FILE: drivers/char/tty_io.c:1768:
+				if (!init_dev(device, &tty, filp))
 				                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#934: FILE: drivers/char/tty_io.c:1789:
+	retval = init_dev(device, &tty, filp);
 	                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: drivers/char/tty_io.c:1858:
+        if(rpl_qopen != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: drivers/char/tty_io.c:1858:
+        if(rpl_qopen != NULL)$

ERROR:SPACING: space required before the open parenthesis '('
#944: FILE: drivers/char/tty_io.c:1858:
+        if(rpl_qopen != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rpl_qopen"
#944: FILE: drivers/char/tty_io.c:1858:
+        if(rpl_qopen != NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#945: FILE: drivers/char/tty_io.c:1859:
+		rpl_qopen(tty, current->tty, filp);
 		                             ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: drivers/char/tty_io.c:2149:
+        if(rpl_qioctl != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: drivers/char/tty_io.c:2149:
+        if(rpl_qioctl != NULL)$

ERROR:SPACING: space required before the open parenthesis '('
#955: FILE: drivers/char/tty_io.c:2149:
+        if(rpl_qioctl != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rpl_qioctl"
#955: FILE: drivers/char/tty_io.c:2149:
+        if(rpl_qioctl != NULL)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#966: FILE: include/linux/km_rpldev.h:1:
+/*=============================================================================

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#967: FILE: include/linux/km_rpldev.h:2:
+/*=============================================================================
+ttyrpld - TTY replay daemon

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#969: FILE: include/linux/km_rpldev.h:4:
+  Copyright © Jan Engelhardt <jengelh [at] linux01 gwdg de>, 2004 - 2005
             ^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#984: FILE: include/linux/km_rpldev.h:19:
+  Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#988: FILE: include/linux/km_rpldev.h:23:
+=============================================================================*/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#995: FILE: include/linux/km_rpldev.h:30:
+extern int (*rpl_qinit)(struct tty_struct *, struct tty_struct *, struct file *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#995: FILE: include/linux/km_rpldev.h:30:
+extern int (*rpl_qinit)(struct tty_struct *, struct tty_struct *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#995: FILE: include/linux/km_rpldev.h:30:
+extern int (*rpl_qinit)(struct tty_struct *, struct tty_struct *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#996: FILE: include/linux/km_rpldev.h:31:
+extern int (*rpl_qopen)(struct tty_struct *, struct tty_struct *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#996: FILE: include/linux/km_rpldev.h:31:
+extern int (*rpl_qopen)(struct tty_struct *, struct tty_struct *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#996: FILE: include/linux/km_rpldev.h:31:
+extern int (*rpl_qopen)(struct tty_struct *, struct tty_struct *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#997: FILE: include/linux/km_rpldev.h:32:
+extern int (*rpl_qread)(const char *, size_t, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#997: FILE: include/linux/km_rpldev.h:32:
+extern int (*rpl_qread)(const char *, size_t, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#997: FILE: include/linux/km_rpldev.h:32:
+extern int (*rpl_qread)(const char *, size_t, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#998: FILE: include/linux/km_rpldev.h:33:
+extern int (*rpl_qwrite)(const char *, size_t, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#998: FILE: include/linux/km_rpldev.h:33:
+extern int (*rpl_qwrite)(const char *, size_t, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#998: FILE: include/linux/km_rpldev.h:33:
+extern int (*rpl_qwrite)(const char *, size_t, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#999: FILE: include/linux/km_rpldev.h:34:
+extern int (*rpl_qclose)(struct tty_struct *, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#999: FILE: include/linux/km_rpldev.h:34:
+extern int (*rpl_qclose)(struct tty_struct *, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#1000: FILE: include/linux/km_rpldev.h:35:
+extern int (*rpl_qdeinit)(struct tty_struct *, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#1000: FILE: include/linux/km_rpldev.h:35:
+extern int (*rpl_qdeinit)(struct tty_struct *, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#1001: FILE: include/linux/km_rpldev.h:36:
+extern int (*rpl_qioctl)(struct tty_struct *, struct tty_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#1001: FILE: include/linux/km_rpldev.h:36:
+extern int (*rpl_qioctl)(struct tty_struct *, struct tty_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1001: FILE: include/linux/km_rpldev.h:36:
+extern int (*rpl_qioctl)(struct tty_struct *, struct tty_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1001: FILE: include/linux/km_rpldev.h:36:
+extern int (*rpl_qioctl)(struct tty_struct *, struct tty_struct *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1002: FILE: include/linux/km_rpldev.h:37:
+extern int (*rpl_qioctl)(struct tty_struct *, struct tty_struct *,
+  unsigned int, unsigned long);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: include/linux/km_rpldev.h:37:
+  unsigned int, unsigned long);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 159 errors, 391 warnings, 48 checks, 898 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
