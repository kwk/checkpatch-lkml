ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Pat Gefre <pfg@sgi.com'
#42: 
Acked-by: Pat Gefre <pfg@sgi.com

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#118: FILE: drivers/sn/ioc4.c:61:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#120: FILE: drivers/sn/ioc4.c:63:
+			       "%s: IOC4 submodule %s probe failed "
+			       "for pci_dev %s",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#121: FILE: drivers/sn/ioc4.c:64:
+			       __FUNCTION__, module_name(is->is_owner),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#147: FILE: drivers/sn/ioc4.c:90:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#149: FILE: drivers/sn/ioc4.c:92:
+			       "%s: IOC4 submodule %s remove failed "
+			       "for pci_dev %s.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#150: FILE: drivers/sn/ioc4.c:93:
+			       __FUNCTION__, module_name(is->is_owner),

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#167: FILE: drivers/sn/ioc4.c:110:
+	uint32_t pcmd;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#178: FILE: drivers/sn/ioc4.c:117:
+		       __FUNCTION__, pci_name(pdev));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*idd)...) over kmalloc(sizeof(struct ioc4_driver_data)...)
#189: FILE: drivers/sn/ioc4.c:123:
+	idd = kmalloc(sizeof(struct ioc4_driver_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#191: FILE: drivers/sn/ioc4.c:125:
+		printk(KERN_WARNING

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#191: FILE: drivers/sn/ioc4.c:125:
+	if (!idd) {
+		printk(KERN_WARNING

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#193: FILE: drivers/sn/ioc4.c:127:
+		       __FUNCTION__, pci_name(pdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#205: FILE: drivers/sn/ioc4.c:139:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#207: FILE: drivers/sn/ioc4.c:141:
+		       "%s: Unable to find IOC4 misc resource "
+		       "for pci_dev %s.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#208: FILE: drivers/sn/ioc4.c:142:
+		       __FUNCTION__, pci_name(idd->idd_pdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#214: FILE: drivers/sn/ioc4.c:148:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#216: FILE: drivers/sn/ioc4.c:150:
+		       "%s: Unable to request IOC4 misc region "
+		       "for pci_dev %s.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#217: FILE: drivers/sn/ioc4.c:151:
+		       __FUNCTION__, pci_name(idd->idd_pdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#224: FILE: drivers/sn/ioc4.c:158:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#226: FILE: drivers/sn/ioc4.c:160:
+		       "%s: Unable to remap IOC4 misc region "
+		       "for pci_dev %s.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#227: FILE: drivers/sn/ioc4.c:161:
+		       __FUNCTION__, pci_name(idd->idd_pdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#261: FILE: drivers/sn/ioc4.c:195:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#263: FILE: drivers/sn/ioc4.c:197:
+			       "%s: IOC4 submodule 0x%s probe failed "
+			       "for pci_dev %s.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#264: FILE: drivers/sn/ioc4.c:198:
+			       __FUNCTION__, module_name(is->is_owner),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#297: FILE: drivers/sn/ioc4.c:229:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#299: FILE: drivers/sn/ioc4.c:231:
+			       "%s: IOC4 submodule 0x%s remove failed "
+			       "for pci_dev %s.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#300: FILE: drivers/sn/ioc4.c:232:
+			       __FUNCTION__, module_name(is->is_owner),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#309: FILE: drivers/sn/ioc4.c:241:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: drivers/sn/ioc4.c:243:
+		       "%s: Unable to get IOC4 misc mapping for pci_dev %s. "
+		       "Device removal may be incomplete.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#312: FILE: drivers/sn/ioc4.c:244:
+		       __FUNCTION__, pci_name(idd->idd_pdev));

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#337: FILE: drivers/sn/ioc4.c:264:
+static struct pci_driver __devinitdata ioc4_driver = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after ioc4_driver
#337: FILE: drivers/sn/ioc4.c:264:
+static struct pci_driver __devinitdata ioc4_driver = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#352: FILE: drivers/sn/ioc4.c:278:
+static int __devinit

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#361: FILE: drivers/sn/ioc4.c:285:
+static void __devexit

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#377: FILE: drivers/sn/ioc4.c:298:
+EXPORT_SYMBOL(ioc4_register_submodule);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#378: FILE: drivers/sn/ioc4.c:299:
+EXPORT_SYMBOL(ioc4_unregister_submodule);

WARNING:TYPO_SPELLING: 'pass-thru' may be misspelled - perhaps 'pass-through'?
#428: FILE: drivers/serial/ioc4_serial.c:133:
+#define IOC4_OTHER_IR_ATA_INT		0x00000001  /* ATAPI intr pass-thru */
                              		                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#511: FILE: drivers/serial/ioc4_serial.c:286:
+	uint32_t sbbr01_l;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#512: FILE: drivers/serial/ioc4_serial.c:287:
+	uint32_t sbbr01_h;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#513: FILE: drivers/serial/ioc4_serial.c:288:
+	uint32_t sbbr23_l;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#514: FILE: drivers/serial/ioc4_serial.c:289:
+	uint32_t sbbr23_h;

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_p' - possible side-effects?
#534: FILE: drivers/serial/ioc4_serial.c:377:
+#define PENDING(_p)	(readl(&(_p)->ip_mem->sio_ir.raw) & _p->ip_ienb)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#708: FILE: drivers/serial/ioc4_serial.c:997:
+		printk ("%s : %d : mem 0x%p sio_ir 0x%x sio_ies 0x%x "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#708: FILE: drivers/serial/ioc4_serial.c:997:
+		printk ("%s : %d : mem 0x%p sio_ir 0x%x sio_ies 0x%x "

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#709: FILE: drivers/serial/ioc4_serial.c:998:
+		printk ("%s : %d : mem 0x%p sio_ir 0x%x sio_ies 0x%x "
+				"other_ir 0x%x other_ies 0x%x mask 0x%x\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#736: FILE: drivers/serial/ioc4_serial.c:1042:
+	BUG_ON(ioc4_misc == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ioc4_misc"
#736: FILE: drivers/serial/ioc4_serial.c:1042:
+	BUG_ON(ioc4_misc == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#861: FILE: drivers/serial/ioc4_serial.c:2658:
+	DPRINT_CONFIG(("%s (0x%p, 0x%p)\n", __FUNCTION__, idd->idd_pdev, idd->idd_pci_id));

WARNING:SPLIT_STRING: quoted string split across lines
#872: FILE: drivers/serial/ioc4_serial.c:2667:
 			"ioc4 (%p): unable to get request region for "
+				"uart space\n", (void *)idd->idd_pdev);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#887: FILE: drivers/serial/ioc4_serial.c:2680:
+				__FUNCTION__, (void *)idd->idd_misc_regs, (void *)serial));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#947: FILE: drivers/serial/ioc4_serial.c:2729:
+	if (!request_irq(idd->idd_pdev->irq, ioc4_intr, SA_SHIRQ,
 				"sgi-ioc4serial", (void *)soft)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#954: FILE: drivers/serial/ioc4_serial.c:2734:
+			__FUNCTION__, idd->idd_pdev->irq);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#958: FILE: drivers/serial/ioc4_serial.c:2736:
+	if ((ret = ioc4_attach_local(idd->idd_pdev, control, soft,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#959: FILE: drivers/serial/ioc4_serial.c:2737:
+	if ((ret = ioc4_attach_local(idd->idd_pdev, control, soft,
+				soft->is_ioc4_misc_addr,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#966: FILE: drivers/serial/ioc4_serial.c:2743:
+	if ((ret = ioc4_serial_core_attach(idd->idd_pdev)))

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1032: FILE: drivers/serial/ioc4_serial.c:2833:
+static void __devexit ioc4_serial_exit(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1079: FILE: drivers/ide/pci/sgiioc4.c:731:
+static int __devinit

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1085: FILE: drivers/ide/pci/sgiioc4.c:737:
+static void __devexit

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1104: FILE: include/linux/ioc4.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1129: FILE: include/linux/ioc4.h:26:
+		uint32_t raw;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1144: FILE: include/linux/ioc4.h:41:
+	uint32_t pci_err_addr_h;	/* Bits 63-32 of error addr */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1146: FILE: include/linux/ioc4.h:43:
+		uint32_t raw;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1159: FILE: include/linux/ioc4.h:56:
+		uint32_t raw;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1175: FILE: include/linux/ioc4.h:72:
+		uint32_t raw;

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1179: FILE: include/linux/ioc4.h:76:
+			uint32_t sio_diag_idle:1;	/* Active ser req? */
 			                         	          ^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1185: FILE: include/linux/ioc4.h:82:
+	uint32_t unused1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1187: FILE: include/linux/ioc4.h:84:
+		uint32_t raw;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1196: FILE: include/linux/ioc4.h:93:
+	uint32_t unused2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1198: FILE: include/linux/ioc4.h:95:
+		uint32_t raw;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1209: FILE: include/linux/ioc4.h:106:
+		uint32_t raw;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1215: FILE: include/linux/ioc4.h:112:
+	uint32_t unused3;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1217: FILE: include/linux/ioc4.h:114:
+		uint32_t raw;

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1237: FILE: include/linux/ioc4.h:134:
+	struct __iomem ioc4_misc_regs *idd_misc_regs;
 	                              ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#1246: FILE: include/linux/ioc4.h:143:
+	int (*is_probe) (struct ioc4_driver_data *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioc4_driver_data *' should also have an identifier name
#1246: FILE: include/linux/ioc4.h:143:
+	int (*is_probe) (struct ioc4_driver_data *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#1247: FILE: include/linux/ioc4.h:144:
+	int (*is_remove) (struct ioc4_driver_data *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioc4_driver_data *' should also have an identifier name
#1247: FILE: include/linux/ioc4.h:144:
+	int (*is_remove) (struct ioc4_driver_data *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1256: FILE: include/linux/ioc4.h:153:
+extern int ioc4_register_submodule(struct ioc4_submodule *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioc4_submodule *' should also have an identifier name
#1256: FILE: include/linux/ioc4.h:153:
+extern int ioc4_register_submodule(struct ioc4_submodule *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1257: FILE: include/linux/ioc4.h:154:
+extern void ioc4_unregister_submodule(struct ioc4_submodule *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioc4_submodule *' should also have an identifier name
#1257: FILE: include/linux/ioc4.h:154:
+extern void ioc4_unregister_submodule(struct ioc4_submodule *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 54 warnings, 25 checks, 1168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
