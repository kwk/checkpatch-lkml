WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#21: 
In message <Pine.LNX.4.33.0201291801550.1747-100000@penguin.transmeta.com> you 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#48: FILE: include/linux/cache.h:7:
+#define ALIGN(x,a) (((x)+(a)-1)&~((a)-1))
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#48: FILE: include/linux/cache.h:7:
+#define ALIGN(x,a) (((x)+(a)-1)&~((a)-1))
                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#48: FILE: include/linux/cache.h:7:
+#define ALIGN(x,a) (((x)+(a)-1)&~((a)-1))
                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#48: FILE: include/linux/cache.h:7:
+#define ALIGN(x,a) (((x)+(a)-1)&~((a)-1))
                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#48: FILE: include/linux/cache.h:7:
+#define ALIGN(x,a) (((x)+(a)-1)&~((a)-1))
                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#48: FILE: include/linux/cache.h:7:
+#define ALIGN(x,a) (((x)+(a)-1)&~((a)-1))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((section(".data.percpu")))
#64: FILE: include/linux/smp.h:74:
+#define __per_cpu_data	__attribute__((section(".data.percpu")))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#69: FILE: include/linux/smp.h:79:
+#define per_cpu(var, cpu) \
+	(*((__typeof__(&var))((void *)&var + __per_cpu_offset[(cpu)])))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#69: FILE: include/linux/smp.h:79:
+#define per_cpu(var, cpu) \
+	(*((__typeof__(&var))((void *)&var + __per_cpu_offset[(cpu)])))

CHECK:SPACING: spaces preferred around that '&' (ctx:BxV)
#70: FILE: include/linux/smp.h:80:
+	(*((__typeof__(&var))((void *)&var + __per_cpu_offset[(cpu)])))
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: include/linux/smp.h:82:
+#define this_cpu(var) per_cpu(var,smp_processor_id())
                                  ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#109: FILE: init/main.c:288:
+	extern char __per_cpu_start, __per_cpu_end;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#113: FILE: init/main.c:292:
+	ptr = alloc_bootmem(size * NR_CPUS);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#115: FILE: init/main.c:294:
+	for (i = 0; i < NR_CPUS; i++, ptr += size) {

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#199: FILE: kernel/softirq.c:149:
+struct tasklet_head
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 8 checks, 195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
