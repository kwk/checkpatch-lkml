WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
linux-2.6.10-rc2-bk16, which moves sysfs_get_kobject and release_sysfs_dirent

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#62: FILE: fs/sysfs/dir.c:60:
+void release_sysfs_dirent(struct sysfs_dirent * sd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#65: FILE: fs/sysfs/dir.c:63:
+		struct sysfs_symlink * sl = sd->s_element;

WARNING:LINE_SPACING: Missing a blank line after declarations
#66: FILE: fs/sysfs/dir.c:64:
+		struct sysfs_symlink * sl = sd->s_element;
+		kfree(sl->link_name);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: fs/sysfs/inode.c:169:
+	struct kobject * kobj = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: fs/sysfs/inode.c:173:
+		struct sysfs_dirent * sd = dentry->d_fsdata;

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: fs/sysfs/inode.c:174:
+		struct sysfs_dirent * sd = dentry->d_fsdata;
+		if (sd->s_type == SYSFS_ATTR_GROUP) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#95: FILE: fs/sysfs/inode.c:176:
+			BUG_ON(sd->s_type != SYSFS_DIR);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#97: FILE: fs/sysfs/inode.c:178:
+		if (sd->s_type & SYSFS_KOBJ_LINK) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: fs/sysfs/inode.c:179:
+			struct sysfs_symlink * sl = sd->s_element;

WARNING:LINE_SPACING: Missing a blank line after declarations
#99: FILE: fs/sysfs/inode.c:180:
+			struct sysfs_symlink * sl = sd->s_element;
+			kobj = kobject_get(sl->target_kobj);

CHECK:BRACES: Unbalanced braces around else statement
#100: FILE: fs/sysfs/inode.c:181:
+		} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: fs/sysfs/sysfs.h:101:
+extern struct kobject *sysfs_get_kobject(struct dentry *dentry);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: fs/sysfs/sysfs.h:102:
+extern void release_sysfs_dirent(struct sysfs_dirent * sd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: fs/sysfs/sysfs.h:102:
+extern void release_sysfs_dirent(struct sysfs_dirent * sd);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 5 warnings, 4 checks, 87 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
