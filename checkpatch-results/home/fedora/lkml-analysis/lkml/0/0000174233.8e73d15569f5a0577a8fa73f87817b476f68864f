WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#48: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#142: FILE: drivers/i2c/chips/max6875.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#143: FILE: drivers/i2c/chips/max6875.c:2:
+/*
+    max6875.c - driver for MAX6874/MAX6875

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'acesses' may be misspelled - perhaps 'accesses'?
#154: FILE: drivers/i2c/chips/max6875.c:13:
+      eeprom_config - acesses configuration eeprom space
                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: drivers/i2c/chips/max6875.c:20:
+         be overwritten, so the driver explicitly prevents that.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: drivers/i2c/chips/max6875.c:22:
+         You can temporarily enable config writes by changing register 0x45.$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#188: FILE: drivers/i2c/chips/max6875.c:47:
+static int allow_write = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#215: FILE: drivers/i2c/chips/max6875.c:74:
+	max6875_register_config=0,
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#237: FILE: drivers/i2c/chips/max6875.c:96:
+	u8 data[USER_EEPROM_SIZE + (CONFIG_EEPROM_SIZE*2)];
 	                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#238: FILE: drivers/i2c/chips/max6875.c:97:
+	unsigned long last_updated[USER_EEPROM_SLICES + (CONFIG_EEPROM_SLICES*2)];
 	                                                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < blk->updated[slice]'
#268: FILE: drivers/i2c/chips/max6875.c:127:
+	if (!(blk->valid & (1 << slice)) ||
+	    (jiffies - blk->updated[slice] > 300 * HZ) ||
+	    (jiffies < blk->updated[slice])) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#270: FILE: drivers/i2c/chips/max6875.c:129:
+	    (jiffies < blk->updated[slice])) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#276: FILE: drivers/i2c/chips/max6875.c:135:
+		if (count > SLICE_SIZE) {
+			count = SLICE_SIZE;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#298: FILE: drivers/i2c/chips/max6875.c:157:
+			if (i2c_smbus_read_i2c_block_data(client, MAX6875_CMD_BLOCK_READ,
+							  rdbuf) != SLICE_SIZE)
+			{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#309: FILE: drivers/i2c/chips/max6875.c:168:
+				if (j < 0)
+				{

CHECK:SPACING: No space is necessary after a cast
#314: FILE: drivers/i2c/chips/max6875.c:173:
+				blk->data[(slice << SLICE_BITS) + i] = (u8) j;

WARNING:INDENTED_LABEL: labels should not be indented
#320: FILE: drivers/i2c/chips/max6875.c:179:
+	exit:

CHECK:LINE_SPACING: Please don't use multiple blank lines
#364: FILE: drivers/i2c/chips/max6875.c:223:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#407: FILE: drivers/i2c/chips/max6875.c:266:
+			if (retval) {
+				goto error_exit;
+			}

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#412: FILE: drivers/i2c/chips/max6875.c:271:
+			msleep(11);

WARNING:INDENTED_LABEL: labels should not be indented
#420: FILE: drivers/i2c/chips/max6875.c:279:
+	error_exit:

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR | S_IWGRP' are not preferred. Consider using octal permissions '0664'.
#444: FILE: drivers/i2c/chips/max6875.c:303:
+		.mode = S_IRUGO | S_IWUSR | S_IWGRP,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#455: FILE: drivers/i2c/chips/max6875.c:314:
+		.mode = S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#466: FILE: drivers/i2c/chips/max6875.c:325:
+		.mode = S_IRUGO | S_IWUSR,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#487: FILE: drivers/i2c/chips/max6875.c:346:
+	/* There are three ways we can read the EEPROM data:
+	   (1) I2C block reads (faster, but unsupported by most adapters)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#491: FILE: drivers/i2c/chips/max6875.c:350:
+	   known adapters support at least the second. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#498: FILE: drivers/i2c/chips/max6875.c:357:
+	/* OK. For now, we presume we have a valid client. We now create the
+	   client structure, even though we cannot fill it completely yet.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#499: FILE: drivers/i2c/chips/max6875.c:358:
+	   But it allows us to access eeprom_{read,write}_value. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#500: FILE: drivers/i2c/chips/max6875.c:359:
+	if (!(data = kmalloc(sizeof(struct max6875_data), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct max6875_data)...)
#500: FILE: drivers/i2c/chips/max6875.c:359:
+	if (!(data = kmalloc(sizeof(struct max6875_data), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#534: FILE: drivers/i2c/chips/max6875.c:393:
+	data->blocks[max6875_register_config].data    = &data->data[USER_EEPROM_SIZE+CONFIG_EEPROM_SIZE];

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#534: FILE: drivers/i2c/chips/max6875.c:393:
+	data->blocks[max6875_register_config].data    = &data->data[USER_EEPROM_SIZE+CONFIG_EEPROM_SIZE];
 	                                                                            ^

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#535: FILE: drivers/i2c/chips/max6875.c:394:
+	data->blocks[max6875_register_config].updated = &data->last_updated[USER_EEPROM_SLICES+CONFIG_EEPROM_SLICES];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#535: FILE: drivers/i2c/chips/max6875.c:394:
+	data->blocks[max6875_register_config].updated = &data->last_updated[USER_EEPROM_SLICES+CONFIG_EEPROM_SLICES];
 	                                                                                      ^

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#541: FILE: drivers/i2c/chips/max6875.c:400:
+	strlcpy(new_client->name, "max6875", I2C_NAME_SIZE);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->blocks[max6875_eeprom_config].data[0x41] != 0'
#550: FILE: drivers/i2c/chips/max6875.c:409:
+	if ((data->blocks[max6875_eeprom_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x40] !=
+	     data->blocks[max6875_register_config].data[0x40]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->blocks[max6875_eeprom_config].data[0x42] != 0'
#550: FILE: drivers/i2c/chips/max6875.c:409:
+	if ((data->blocks[max6875_eeprom_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x40] !=
+	     data->blocks[max6875_register_config].data[0x40]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->blocks[max6875_register_config].data[0x41] != 0'
#550: FILE: drivers/i2c/chips/max6875.c:409:
+	if ((data->blocks[max6875_eeprom_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x40] !=
+	     data->blocks[max6875_register_config].data[0x40]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->blocks[max6875_register_config].data[0x42] != 0'
#550: FILE: drivers/i2c/chips/max6875.c:409:
+	if ((data->blocks[max6875_eeprom_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x40] !=
+	     data->blocks[max6875_register_config].data[0x40]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->blocks[max6875_eeprom_config].data[0x40] !=
 	     data->blocks[max6875_register_config].data[0x40]'
#550: FILE: drivers/i2c/chips/max6875.c:409:
+	if ((data->blocks[max6875_eeprom_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x41] != 0) ||
+	    (data->blocks[max6875_register_config].data[0x42] != 0) ||
+	    (data->blocks[max6875_eeprom_config].data[0x40] !=
+	     data->blocks[max6875_register_config].data[0x40]))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#559: FILE: drivers/i2c/chips/max6875.c:418:
+	if ((err = i2c_attach_client(new_client)))

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#564: FILE: drivers/i2c/chips/max6875.c:423:
+		user_eeprom_attr.attr.mode &= ~S_IWUGO;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#566: FILE: drivers/i2c/chips/max6875.c:425:
+		config_eeprom_attr.attr.mode &= ~S_IWUGO;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#568: FILE: drivers/i2c/chips/max6875.c:427:
+		config_register_attr.attr.mode &= ~S_IWUGO;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#608: FILE: drivers/i2c/chips/max6875.c:467:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174233.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 23 warnings, 14 checks, 550 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174233.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
