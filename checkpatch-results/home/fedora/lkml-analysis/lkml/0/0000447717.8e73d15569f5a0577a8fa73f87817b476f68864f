WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Here is a very rudimentary topology API for NUMA systems.  It uses prctl() for 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: include/asm-i386/core_ibmnumaq.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#54: FILE: include/asm-i386/core_ibmnumaq.h:2:
+ * linux/include/asm-i386/core_ibmnumaq.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: include/asm-i386/core_ibmnumaq.h:8:
+ * All rights reserved.          $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#74: FILE: include/asm-i386/core_ibmnumaq.h:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#75: FILE: include/asm-i386/core_ibmnumaq.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#88: FILE: include/asm-i386/core_ibmnumaq.h:36:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: include/asm-i386/core_ibmnumaq.h:43:
+/* Returns the number of the node containing Node 'nid'.  This architecture is flat, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#96: FILE: include/asm-i386/core_ibmnumaq.h:44:
+/* Returns the number of the node containing Node 'nid'.  This architecture is flat, 
+   so it is a pretty simple function! */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#96: FILE: include/asm-i386/core_ibmnumaq.h:44:
+   so it is a pretty simple function! */

ERROR:SPACING: space required before the open parenthesis '('
#104: FILE: include/asm-i386/core_ibmnumaq.h:52:
+	for(i = 1; i < 16; i <<= 1)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#105: FILE: include/asm-i386/core_ibmnumaq.h:53:
+		if ((cpu = logical_apicid_to_cpu(logical_apicid | i)) >= 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: include/asm-i386/mmzone.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#120: FILE: include/asm-i386/mmzone.h:2:
+ * linux/include/asm-i386/mmzone.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: include/asm-i386/mmzone.h:8:
+ * All rights reserved.          $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#140: FILE: include/asm-i386/mmzone.h:22:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#141: FILE: include/asm-i386/mmzone.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#153: FILE: include/asm-i386/mmzone.h:35:
+/* Other architectures wishing to use this simple topology API should fill
+   in the below functions as appropriate in their own <arch>.h file. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#153: FILE: include/asm-i386/mmzone.h:35:
+   in the below functions as appropriate in their own <arch>.h file. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#172: FILE: include/linux/membind.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#173: FILE: include/linux/membind.h:2:
+ * linux/include/linux/membind.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: include/linux/membind.h:8:
+ * All rights reserved.          $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#193: FILE: include/linux/membind.h:22:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#194: FILE: include/linux/membind.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#201: FILE: include/linux/membind.h:30:
+int cpu_to_node(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#202: FILE: include/linux/membind.h:31:
+int memblk_to_node(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#203: FILE: include/linux/membind.h:32:
+int node_to_node(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#204: FILE: include/linux/membind.h:33:
+int node_to_cpu(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#205: FILE: include/linux/membind.h:34:
+int node_to_memblk(int);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: include/linux/prctl.h:31:
+#define PR_GET_CURR_NODE    ^I14$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: include/linux/prctl.h:35:
+#define PR_MEMBLK_TO_NODE      ^I16$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: include/linux/prctl.h:40:
+#define PR_NODE_TO_MEMBLK      ^I19$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#235: FILE: kernel/membind.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#236: FILE: kernel/membind.c:2:
+ * linux/kernel/membind.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: kernel/membind.c:8:
+ * All rights reserved.          $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#256: FILE: kernel/membind.c:22:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#257: FILE: kernel/membind.c:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: kernel/membind.c:39:
+ * cpu_to_node(cpu): Returns the number of the most specific Node $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu < 0'
#281: FILE: kernel/membind.c:47:
+	if ((cpu < 0) || (cpu >= NR_CPUS) ||
+	    (!(cpu_online_map & (1 << cpu))))   /* invalid cpu # */

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu >= NR_CPUS'
#281: FILE: kernel/membind.c:47:
+	if ((cpu < 0) || (cpu >= NR_CPUS) ||
+	    (!(cpu_online_map & (1 << cpu))))   /* invalid cpu # */

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#281: FILE: kernel/membind.c:47:
+	if ((cpu < 0) || (cpu >= NR_CPUS) ||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: kernel/membind.c:55:
+ * memblk_to_node(memblk): Returns the number of the most specific Node $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'memblk < 0'
#297: FILE: kernel/membind.c:63:
+	if ((memblk < 0) || (memblk >= NR_MEMBLKS) ||
+	    (!(memblk_online_map & (1 << memblk))))   /* invalid memblk # */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'memblk >= NR_MEMBLKS'
#297: FILE: kernel/membind.c:63:
+	if ((memblk < 0) || (memblk >= NR_MEMBLKS) ||
+	    (!(memblk_online_map & (1 << memblk))))   /* invalid memblk # */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nid < 0'
#310: FILE: kernel/membind.c:76:
+	if ((nid < 0) || (nid >= numnodes))   /* invalid node # */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nid >= numnodes'
#310: FILE: kernel/membind.c:76:
+	if ((nid < 0) || (nid >= numnodes))   /* invalid node # */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nid < 0'
#324: FILE: kernel/membind.c:90:
+	if ((nid < 0) || (nid >= numnodes))   /* invalid node # */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nid >= numnodes'
#324: FILE: kernel/membind.c:90:
+	if ((nid < 0) || (nid >= numnodes))   /* invalid node # */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nid < 0'
#338: FILE: kernel/membind.c:104:
+	if ((nid < 0) || (nid >= numnodes))   /* invalid node # */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nid >= numnodes'
#338: FILE: kernel/membind.c:104:
+	if ((nid < 0) || (nid >= numnodes))   /* invalid node # */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: kernel/membind.c:123:
+ * get_curr_node(): Returns the number of the Node containing $

CHECK:SPACING: No space is necessary after a cast
#381: FILE: kernel/sys.c:1296:
+			error = (long) get_curr_cpu();

CHECK:SPACING: No space is necessary after a cast
#384: FILE: kernel/sys.c:1299:
+			error = (long) get_curr_node();

CHECK:SPACING: No space is necessary after a cast
#387: FILE: kernel/sys.c:1302:
+			error = (long) cpu_to_node((int)arg2);

CHECK:SPACING: No space is necessary after a cast
#390: FILE: kernel/sys.c:1305:
+			error = (long) memblk_to_node((int)arg2);

CHECK:SPACING: No space is necessary after a cast
#393: FILE: kernel/sys.c:1308:
+			error = (long) node_to_node((int)arg2);

CHECK:SPACING: No space is necessary after a cast
#396: FILE: kernel/sys.c:1311:
+			error = (long) node_to_cpu((int)arg2);

CHECK:SPACING: No space is necessary after a cast
#399: FILE: kernel/sys.c:1314:
+			error = (long) node_to_memblk((int)arg2);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000447717.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 22 warnings, 18 checks, 330 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000447717.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
