WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
This is the same as previous, but with a number of indentation issues addressed

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:100:
+        tempval = in_be32(&io->iop_pdirc);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:100:
+        tempval = in_be32(&io->iop_pdirc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:101:
+        tempval |= PC3_DIRC1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:101:
+        tempval |= PC3_DIRC1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:102:
+        out_be32(&io->iop_pdirc, tempval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:102:
+        out_be32(&io->iop_pdirc, tempval);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:104:
+        tempval = in_be32(&io->iop_pparc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:104:
+        tempval = in_be32(&io->iop_pparc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:105:
+        tempval |= PC3_DIRC1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:105:
+        tempval |= PC3_DIRC1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:106:
+        out_be32(&io->iop_pparc, tempval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:106:
+        out_be32(&io->iop_pparc, tempval);$

CHECK:SPACING: No space is necessary after a cast
#157: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:183:
+	fpi = (struct fs_platform_info *) ppc_sys_get_pdata(MPC85xx_CPM_FCC2);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#166: FILE: arch/ppc/platforms/85xx/mpc8560_ads.c:192:
+	fpi = (struct fs_platform_info *) ppc_sys_get_pdata(MPC85xx_CPM_FCC3);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#189: FILE: arch/ppc/platforms/85xx/mpc85xx_ads_common.h:50:
+ *    Can only choose from CLK9-12 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: arch/ppc/platforms/85xx/mpc85xx_ads_common.h:56:
+ *    Can only choose from CLK13-16 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#201: FILE: arch/ppc/platforms/85xx/mpc85xx_ads_common.h:62:
+ *    Can only choose from CLK13-16 */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#205: FILE: arch/ppc/platforms/85xx/mpc85xx_ads_common.h:66:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#282: FILE: arch/ppc/platforms/mpc8272ads_setup.c:70:
+^I^I.cp_block ^I= CPM_CR_FCC1_SBLOCK,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#284: FILE: arch/ppc/platforms/mpc8272ads_setup.c:72:
+^I^I.clk_trx ^I= (PC_F1RXCLK | PC_F1TXCLK),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: arch/ppc/platforms/mpc8272ads_setup.c:75:
+^I^I.init_ioports ^I= init_fcc1_ioports,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: arch/ppc/platforms/mpc8272ads_setup.c:89:
+^I^I.cp_block ^I= CPM_CR_FCC2_SBLOCK,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: arch/ppc/platforms/mpc8272ads_setup.c:90:
+^I^I.clk_trx ^I= (PC_F2RXCLK | PC_F2TXCLK),$

ERROR:SPACING: space required before the open parenthesis '('
#336: FILE: arch/ppc/platforms/mpc8272ads_setup.c:199:
+	if(fs_no > ARRAY_SIZE(mpc82xx_enet_pdata)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#336: FILE: arch/ppc/platforms/mpc8272ads_setup.c:199:
+	if(fs_no > ARRAY_SIZE(mpc82xx_enet_pdata)) {
+		return;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#340: FILE: arch/ppc/platforms/mpc8272ads_setup.c:203:
+	mpc82xx_enet_pdata[fs_no].dpram_offset=
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: arch/ppc/platforms/mpc8272ads_setup.c:207:
+	memcpy(&mpc82xx_enet_pdata[fs_no].macaddr,bi->bi_enetaddr,6);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: arch/ppc/platforms/mpc8272ads_setup.c:207:
+	memcpy(&mpc82xx_enet_pdata[fs_no].macaddr,bi->bi_enetaddr,6);
 	                                                         ^

ERROR:SPACING: space required before the open parenthesis '('
#347: FILE: arch/ppc/platforms/mpc8272ads_setup.c:210:
+	if(fs_no == fsid_fcc2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: arch/ppc/platforms/mpc8272ads_setup.c:266:
+static void __init mpc8272ads_fixup_mdio_pdata(struct platform_device *pdev,
+					      int idx)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#367: FILE: arch/ppc/platforms/mpc8272ads_setup.c:274:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#377: FILE: arch/ppc/platforms/mpc8272ads_setup.c:284:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#409: FILE: arch/ppc/platforms/mpc866ads_setup.c:1:
+/*arch/ppc/platforms/mpc866ads-setup.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#561: FILE: arch/ppc/platforms/mpc866ads_setup.c:248:
+static int ma_count = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#567: FILE: arch/ppc/platforms/mpc866ads_setup.c:254:
+	volatile cpm8xx_t *cp;

CHECK:SPACING: No space is necessary after a cast
#568: FILE: arch/ppc/platforms/mpc866ads_setup.c:255:
+	bd_t *bd = (bd_t *) __res;

ERROR:SPACING: space required before the open parenthesis '('
#575: FILE: arch/ppc/platforms/mpc866ads_setup.c:262:
+	if(fs_no > ARRAY_SIZE(mpc8xx_enet_pdata)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#576: FILE: arch/ppc/platforms/mpc866ads_setup.c:263:
+		printk(KERN_ERR"No network-suitable #%d device on bus", fs_no);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#576: FILE: arch/ppc/platforms/mpc866ads_setup.c:263:
+		printk(KERN_ERR"No network-suitable #%d device on bus", fs_no);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#580: FILE: arch/ppc/platforms/mpc866ads_setup.c:267:
+
+

CHECK:SPACING: No space is necessary after a cast
#618: FILE: arch/ppc/platforms/mpc866ads_setup.c:342:
+	bd_t *bd = (bd_t *) __res;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#619: FILE: arch/ppc/platforms/mpc866ads_setup.c:343:
+	struct fs_mii_fec_platform_info* fmpi;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#636: FILE: arch/ppc/platforms/mpc866ads_setup.c:359:
+	fmpi = ppc_sys_platform_devices[MPC8xx_MDIO_FEC].dev.platform_data =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#652: FILE: arch/ppc/platforms/mpc866ads_setup.c:378:
+	fmpi = ppc_sys_platform_devices[MPC8xx_MDIO_FEC].dev.platform_data =

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: arch/ppc/platforms/mpc885ads_setup.c:78:
+          .bus_id = "0:00",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: arch/ppc/platforms/mpc885ads_setup.c:78:
+          .bus_id = "0:00",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: arch/ppc/platforms/mpc885ads_setup.c:79:
+          .has_phy = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: arch/ppc/platforms/mpc885ads_setup.c:79:
+          .has_phy = 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#736: FILE: arch/ppc/platforms/mpc885ads_setup.c:91:
+ ^I     .bus_id = "0:01",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#736: FILE: arch/ppc/platforms/mpc885ads_setup.c:91:
+ ^I     .bus_id = "0:01",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: arch/ppc/platforms/mpc885ads_setup.c:91:
+ ^I     .bus_id = "0:01",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#737: FILE: arch/ppc/platforms/mpc885ads_setup.c:92:
+ ^I     .has_phy = 1,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#737: FILE: arch/ppc/platforms/mpc885ads_setup.c:92:
+ ^I     .has_phy = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: arch/ppc/platforms/mpc885ads_setup.c:92:
+ ^I     .has_phy = 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#770: FILE: arch/ppc/platforms/mpc885ads_setup.c:114:
+ ^Iunsigned int *bcsr_io;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#770: FILE: arch/ppc/platforms/mpc885ads_setup.c:114:
+ ^Iunsigned int *bcsr_io;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: arch/ppc/platforms/mpc885ads_setup.c:114:
+ ^Iunsigned int *bcsr_io;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#779: FILE: arch/ppc/platforms/mpc885ads_setup.c:154:
+	clrbits32(bcsr_io,BCSR5_MII1_EN);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#780: FILE: arch/ppc/platforms/mpc885ads_setup.c:155:
+	clrbits32(bcsr_io,BCSR5_MII1_RST);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#782: FILE: arch/ppc/platforms/mpc885ads_setup.c:157:
+	clrbits32(bcsr_io,BCSR5_MII2_EN);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#783: FILE: arch/ppc/platforms/mpc885ads_setup.c:158:
+	clrbits32(bcsr_io,BCSR5_MII2_RST);
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#803: FILE: arch/ppc/platforms/mpc885ads_setup.c:210:
+	clrbits32(bcsr_io+4, BCSR4_ETH10_RST);
 	                 ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#804: FILE: arch/ppc/platforms/mpc885ads_setup.c:211:
+	udelay(1000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#813: FILE: arch/ppc/platforms/mpc885ads_setup.c:253:
+	setbits32(bcsr_io+4, BCSR1_ETHEN);
 	                 ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#817: FILE: arch/ppc/platforms/mpc885ads_setup.c:257:
+static int mac_count = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: arch/ppc/platforms/mpc885ads_setup.c:261:
+ ^Istruct fs_platform_info *fpi;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#824: FILE: arch/ppc/platforms/mpc885ads_setup.c:261:
+ ^Istruct fs_platform_info *fpi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: arch/ppc/platforms/mpc885ads_setup.c:261:
+ ^Istruct fs_platform_info *fpi;$

ERROR:SPACING: space required before the open parenthesis '('
#831: FILE: arch/ppc/platforms/mpc885ads_setup.c:266:
+	if(fs_no > ARRAY_SIZE(mpc8xx_enet_pdata)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#832: FILE: arch/ppc/platforms/mpc885ads_setup.c:267:
+		printk(KERN_ERR"No network-suitable #%d device on bus", fs_no);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#832: FILE: arch/ppc/platforms/mpc885ads_setup.c:267:
+		printk(KERN_ERR"No network-suitable #%d device on bus", fs_no);

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: arch/ppc/platforms/mpc885ads_setup.c:284:
+    ^I        printk(KERN_WARNING "Device %s is not supported!\n", pdev->name);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#854: FILE: arch/ppc/platforms/mpc885ads_setup.c:284:
+    ^I        printk(KERN_WARNING "Device %s is not supported!\n", pdev->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: arch/ppc/platforms/mpc885ads_setup.c:284:
+    ^I        printk(KERN_WARNING "Device %s is not supported!\n", pdev->name);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#854: FILE: arch/ppc/platforms/mpc885ads_setup.c:284:
+    	        printk(KERN_WARNING "Device %s is not supported!\n", pdev->name);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#930: FILE: arch/ppc/platforms/mpc885ads_setup.c:410:
+	struct fs_mii_fec_platform_info* fmpi;

CHECK:SPACING: No space is necessary after a cast
#931: FILE: arch/ppc/platforms/mpc885ads_setup.c:411:
+	bd_t *bd = (bd_t *) __res;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#941: FILE: arch/ppc/platforms/mpc885ads_setup.c:423:
+	fmpi = ppc_sys_platform_devices[MPC8xx_MDIO_FEC].dev.platform_data =

ERROR:CODE_INDENT: code indent should use tabs where possible
#1222: FILE: arch/ppc/syslib/mpc8xx_devices.c:222:
+        [MPC8xx_MDIO_FEC] = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1222: FILE: arch/ppc/syslib/mpc8xx_devices.c:222:
+        [MPC8xx_MDIO_FEC] = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1223: FILE: arch/ppc/syslib/mpc8xx_devices.c:223:
+                .name = "fsl-cpm-fec-mdio",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: arch/ppc/syslib/mpc8xx_devices.c:223:
+                .name = "fsl-cpm-fec-mdio",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1224: FILE: arch/ppc/syslib/mpc8xx_devices.c:224:
+                .id = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1224: FILE: arch/ppc/syslib/mpc8xx_devices.c:224:
+                .id = 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1225: FILE: arch/ppc/syslib/mpc8xx_devices.c:225:
+                .num_resources = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: arch/ppc/syslib/mpc8xx_devices.c:225:
+                .num_resources = 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1227: FILE: arch/ppc/syslib/mpc8xx_devices.c:227:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: arch/ppc/syslib/mpc8xx_devices.c:227:
+        },$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1318: FILE: include/asm-ppc/cpm2.h:1101:
+#define PC_CLK(x)	((uint)(1<<(x-1)))	/* FCC CLK I/O ports */
                  	         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1318: FILE: include/asm-ppc/cpm2.h:1101:
+#define PC_CLK(x)	((uint)(1<<(x-1)))	/* FCC CLK I/O ports */
                  	             ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1318: FILE: include/asm-ppc/cpm2.h:1101:
+#define PC_CLK(x)	((uint)(1<<(x-1)))	/* FCC CLK I/O ports */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1320: FILE: include/asm-ppc/cpm2.h:1103:
+#define CMXFCR_RF1CS(x)	((uint)((x-5)<<27))	/* FCC1 Receive Clock Source */
                        	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1320: FILE: include/asm-ppc/cpm2.h:1103:
+#define CMXFCR_RF1CS(x)	((uint)((x-5)<<27))	/* FCC1 Receive Clock Source */
                        	             ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1320: FILE: include/asm-ppc/cpm2.h:1103:
+#define CMXFCR_RF1CS(x)	((uint)((x-5)<<27))	/* FCC1 Receive Clock Source */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1321: FILE: include/asm-ppc/cpm2.h:1104:
+#define CMXFCR_TF1CS(x)	((uint)((x-5)<<24))	/* FCC1 Transmit Clock Source */
                        	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1321: FILE: include/asm-ppc/cpm2.h:1104:
+#define CMXFCR_TF1CS(x)	((uint)((x-5)<<24))	/* FCC1 Transmit Clock Source */
                        	             ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1321: FILE: include/asm-ppc/cpm2.h:1104:
+#define CMXFCR_TF1CS(x)	((uint)((x-5)<<24))	/* FCC1 Transmit Clock Source */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1322: FILE: include/asm-ppc/cpm2.h:1105:
+#define CMXFCR_RF2CS(x)	((uint)((x-9)<<19))	/* FCC2 Receive Clock Source */
                        	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1322: FILE: include/asm-ppc/cpm2.h:1105:
+#define CMXFCR_RF2CS(x)	((uint)((x-9)<<19))	/* FCC2 Receive Clock Source */
                        	             ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1322: FILE: include/asm-ppc/cpm2.h:1105:
+#define CMXFCR_RF2CS(x)	((uint)((x-9)<<19))	/* FCC2 Receive Clock Source */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1323: FILE: include/asm-ppc/cpm2.h:1106:
+#define CMXFCR_TF2CS(x) ((uint)((x-9)<<16))	/* FCC2 Transmit Clock Source */
                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1323: FILE: include/asm-ppc/cpm2.h:1106:
+#define CMXFCR_TF2CS(x) ((uint)((x-9)<<16))	/* FCC2 Transmit Clock Source */
                                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1323: FILE: include/asm-ppc/cpm2.h:1106:
+#define CMXFCR_TF2CS(x) ((uint)((x-9)<<16))	/* FCC2 Transmit Clock Source */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1324: FILE: include/asm-ppc/cpm2.h:1107:
+#define CMXFCR_RF3CS(x)	((uint)((x-9)<<11))	/* FCC3 Receive Clock Source */
                        	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1324: FILE: include/asm-ppc/cpm2.h:1107:
+#define CMXFCR_RF3CS(x)	((uint)((x-9)<<11))	/* FCC3 Receive Clock Source */
                        	             ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1324: FILE: include/asm-ppc/cpm2.h:1107:
+#define CMXFCR_RF3CS(x)	((uint)((x-9)<<11))	/* FCC3 Receive Clock Source */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1325: FILE: include/asm-ppc/cpm2.h:1108:
+#define CMXFCR_TF3CS(x) ((uint)((x-9)<<8))	/* FCC3 Transmit Clock Source */
                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1325: FILE: include/asm-ppc/cpm2.h:1108:
+#define CMXFCR_TF3CS(x) ((uint)((x-9)<<8))	/* FCC3 Transmit Clock Source */
                                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1325: FILE: include/asm-ppc/cpm2.h:1108:
+#define CMXFCR_TF3CS(x) ((uint)((x-9)<<8))	/* FCC3 Transmit Clock Source */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1364: FILE: include/asm-ppc/cpm2.h:1147:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1382: FILE: include/asm-ppc/cpm2.h:1165:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1403: FILE: include/asm-ppc/cpm2.h:1186:
+#define FCC_MEM_OFFSET(x) (CPM_FCC_SPECIAL_BASE + (x*128))
                                                     ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1403: FILE: include/asm-ppc/cpm2.h:1186:
+#define FCC_MEM_OFFSET(x) (CPM_FCC_SPECIAL_BASE + (x*128))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1475: FILE: include/linux/fs_enet_pd.h:77:
+};
+struct fs_mii_bb_platform_info {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1476: FILE: include/linux/fs_enet_pd.h:78:
+^Istruct fs_mii_bit ^Imdio_dir;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1477: FILE: include/linux/fs_enet_pd.h:79:
+^Istruct fs_mii_bit ^Imdio_dat;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1484: FILE: include/linux/fs_enet_pd.h:86:
+^Iint irq[32]; ^I/* irqs per phy's */$

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#1492: FILE: include/linux/fs_enet_pd.h:109:
+	const char*	bus_id;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1502: FILE: include/linux/fs_enet_pd.h:123:
+};
+struct fs_mii_fec_platform_info {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000050229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 41 warnings, 45 checks, 1343 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000050229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
