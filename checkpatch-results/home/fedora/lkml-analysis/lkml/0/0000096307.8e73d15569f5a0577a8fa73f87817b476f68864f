ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: include/asm-i386/unistd.h:399:
+#define _syscall1(type,name,type1,arg1) \
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: include/asm-i386/unistd.h:399:
+#define _syscall1(type,name,type1,arg1) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: include/asm-i386/unistd.h:399:
+#define _syscall1(type,name,type1,arg1) \
                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#73: FILE: include/asm-i386/unistd.h:399:
+#define _syscall1(type,name,type1,arg1) \
+type name(type1 arg1) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)) : "memory"); \
+__syscall_return(type,__res); \
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: include/asm-i386/unistd.h:405:
+	: "0" (__NR_##name),"ri" ((long)(arg1)) : "memory"); \
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#80: FILE: include/asm-i386/unistd.h:406:
+__syscall_return(type,__res); \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: include/asm-i386/unistd.h:409:
+#define _syscall2(type,name,type1,arg1,type2,arg2) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: include/asm-i386/unistd.h:409:
+#define _syscall2(type,name,type1,arg1,type2,arg2) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: include/asm-i386/unistd.h:409:
+#define _syscall2(type,name,type1,arg1,type2,arg2) \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: include/asm-i386/unistd.h:409:
+#define _syscall2(type,name,type1,arg1,type2,arg2) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: include/asm-i386/unistd.h:409:
+#define _syscall2(type,name,type1,arg1,type2,arg2) \
                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#83: FILE: include/asm-i386/unistd.h:409:
+#define _syscall2(type,name,type1,arg1,type2,arg2) \
+type name(type1 arg1,type2 arg2) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#83: FILE: include/asm-i386/unistd.h:409:
+#define _syscall2(type,name,type1,arg1,type2,arg2) \
+type name(type1 arg1,type2 arg2) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: include/asm-i386/unistd.h:410:
+type name(type1 arg1,type2 arg2) \
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: include/asm-i386/unistd.h:415:
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)) \
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: include/asm-i386/unistd.h:415:
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)) \
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: include/asm-i386/unistd.h:417:
+__syscall_return(type,__res); \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
                                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
+type name(type1 arg1,type2 arg2,type3 arg3) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+		  "d" ((long)(arg3)) : "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
+type name(type1 arg1,type2 arg2,type3 arg3) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+		  "d" ((long)(arg3)) : "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg3' - possible side-effects?
#94: FILE: include/asm-i386/unistd.h:420:
+#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) \
+type name(type1 arg1,type2 arg2,type3 arg3) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+		  "d" ((long)(arg3)) : "memory"); \
+__syscall_return(type,__res); \
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#95: FILE: include/asm-i386/unistd.h:421:
+type name(type1 arg1,type2 arg2,type3 arg3) \
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#95: FILE: include/asm-i386/unistd.h:421:
+type name(type1 arg1,type2 arg2,type3 arg3) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#100: FILE: include/asm-i386/unistd.h:426:
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#100: FILE: include/asm-i386/unistd.h:426:
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: include/asm-i386/unistd.h:428:
+__syscall_return(type,__res); \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
+type name (type1 arg1, type2 arg2, type3 arg3, type4 arg4) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)) : "memory"); \
+__syscall_return(type,__res); \
+} 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
+type name (type1 arg1, type2 arg2, type3 arg3, type4 arg4) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)) : "memory"); \
+__syscall_return(type,__res); \
+} 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg3' - possible side-effects?
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
+type name (type1 arg1, type2 arg2, type3 arg3, type4 arg4) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)) : "memory"); \
+__syscall_return(type,__res); \
+} 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg4' - possible side-effects?
#105: FILE: include/asm-i386/unistd.h:431:
+#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) \
+type name (type1 arg1, type2 arg2, type3 arg3, type4 arg4) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)) : "memory"); \
+__syscall_return(type,__res); \
+} 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: include/asm-i386/unistd.h:432:
+type name (type1 arg1, type2 arg2, type3 arg3, type4 arg4) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#111: FILE: include/asm-i386/unistd.h:437:
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#111: FILE: include/asm-i386/unistd.h:437:
+	: "0" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#112: FILE: include/asm-i386/unistd.h:438:
+	  "d" ((long)(arg3)),"S" ((long)(arg4)) : "memory"); \
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: include/asm-i386/unistd.h:439:
+__syscall_return(type,__res); \
                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: include/asm-i386/unistd.h:440:
+} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; movl %1,%%eax ; " \
+                  "int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; movl %1,%%eax ; " \
+                  "int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg3' - possible side-effects?
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; movl %1,%%eax ; " \
+                  "int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg4' - possible side-effects?
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; movl %1,%%eax ; " \
+                  "int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg5' - possible side-effects?
#116: FILE: include/asm-i386/unistd.h:442:
+#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \
+{ \
+long __res; \
+__asm__ volatile ("push %%ebx ; movl %2,%%ebx ; movl %1,%%eax ; " \
+                  "int $0x80 ; pop %%ebx" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#117: FILE: include/asm-i386/unistd.h:443:
+	  type5,arg5) \
 	       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: include/asm-i386/unistd.h:444:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: include/asm-i386/unistd.h:444:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: include/asm-i386/unistd.h:444:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: include/asm-i386/unistd.h:444:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: include/asm-i386/unistd.h:444:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) \
                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: include/asm-i386/unistd.h:448:
+                  "int $0x80 ; pop %%ebx" \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: include/asm-i386/unistd.h:448:
+                  "int $0x80 ; pop %%ebx" \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: include/asm-i386/unistd.h:450:
+	: "i" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: include/asm-i386/unistd.h:450:
+	: "i" (__NR_##name),"ri" ((long)(arg1)),"c" ((long)(arg2)), \
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: include/asm-i386/unistd.h:451:
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: include/asm-i386/unistd.h:451:
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: include/asm-i386/unistd.h:453:
+__syscall_return(type,__res); \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg1' - possible side-effects?
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5,type6,arg6) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
+{ \
+long __res; \
+  struct { long __a1; long __a6; } __s = { (long)arg1, (long)arg6 }; \
+__asm__ volatile ("push %%ebp ; push %%ebx ; movl 4(%2),%%ebp ; " \
+                  "movl 0(%2),%%ebx ; movl %1,%%eax ; int $0x80 ; " \
+                  "pop %%ebx ;  pop %%ebp" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"0" ((long)(&__s)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg2' - possible side-effects?
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5,type6,arg6) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
+{ \
+long __res; \
+  struct { long __a1; long __a6; } __s = { (long)arg1, (long)arg6 }; \
+__asm__ volatile ("push %%ebp ; push %%ebx ; movl 4(%2),%%ebp ; " \
+                  "movl 0(%2),%%ebx ; movl %1,%%eax ; int $0x80 ; " \
+                  "pop %%ebx ;  pop %%ebp" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"0" ((long)(&__s)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg3' - possible side-effects?
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5,type6,arg6) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
+{ \
+long __res; \
+  struct { long __a1; long __a6; } __s = { (long)arg1, (long)arg6 }; \
+__asm__ volatile ("push %%ebp ; push %%ebx ; movl 4(%2),%%ebp ; " \
+                  "movl 0(%2),%%ebx ; movl %1,%%eax ; int $0x80 ; " \
+                  "pop %%ebx ;  pop %%ebp" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"0" ((long)(&__s)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg4' - possible side-effects?
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5,type6,arg6) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
+{ \
+long __res; \
+  struct { long __a1; long __a6; } __s = { (long)arg1, (long)arg6 }; \
+__asm__ volatile ("push %%ebp ; push %%ebx ; movl 4(%2),%%ebp ; " \
+                  "movl 0(%2),%%ebx ; movl %1,%%eax ; int $0x80 ; " \
+                  "pop %%ebx ;  pop %%ebp" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"0" ((long)(&__s)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg5' - possible side-effects?
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5,type6,arg6) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
+{ \
+long __res; \
+  struct { long __a1; long __a6; } __s = { (long)arg1, (long)arg6 }; \
+__asm__ volatile ("push %%ebp ; push %%ebx ; movl 4(%2),%%ebp ; " \
+                  "movl 0(%2),%%ebx ; movl %1,%%eax ; int $0x80 ; " \
+                  "pop %%ebx ;  pop %%ebp" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"0" ((long)(&__s)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'arg6' - possible side-effects?
#130: FILE: include/asm-i386/unistd.h:456:
+#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, \
+	  type5,arg5,type6,arg6) \
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
+{ \
+long __res; \
+  struct { long __a1; long __a6; } __s = { (long)arg1, (long)arg6 }; \
+__asm__ volatile ("push %%ebp ; push %%ebx ; movl 4(%2),%%ebp ; " \
+                  "movl 0(%2),%%ebx ; movl %1,%%eax ; int $0x80 ; " \
+                  "pop %%ebx ;  pop %%ebp" \
+	: "=a" (__res) \
+	: "i" (__NR_##name),"0" ((long)(&__s)),"c" ((long)(arg2)), \
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
+	: "memory"); \
+__syscall_return(type,__res); \
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: include/asm-i386/unistd.h:457:
+	  type5,arg5,type6,arg6) \
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: include/asm-i386/unistd.h:457:
+	  type5,arg5,type6,arg6) \
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: include/asm-i386/unistd.h:457:
+	  type5,arg5,type6,arg6) \
 	                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: include/asm-i386/unistd.h:458:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-i386/unistd.h:458:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-i386/unistd.h:458:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-i386/unistd.h:458:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-i386/unistd.h:458:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-i386/unistd.h:458:
+type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) \
                                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: include/asm-i386/unistd.h:461:
+  struct { long __a1; long __a6; } __s = { (long)arg1, (long)arg6 }; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: include/asm-i386/unistd.h:463:
+                  "movl 0(%2),%%ebx ; movl %1,%%eax ; int $0x80 ; " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: include/asm-i386/unistd.h:463:
+                  "movl 0(%2),%%ebx ; movl %1,%%eax ; int $0x80 ; " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: include/asm-i386/unistd.h:464:
+                  "pop %%ebx ;  pop %%ebp" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: include/asm-i386/unistd.h:464:
+                  "pop %%ebx ;  pop %%ebp" \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#140: FILE: include/asm-i386/unistd.h:466:
+	: "i" (__NR_##name),"0" ((long)(&__s)),"c" ((long)(arg2)), \
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#140: FILE: include/asm-i386/unistd.h:466:
+	: "i" (__NR_##name),"0" ((long)(&__s)),"c" ((long)(arg2)), \
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#141: FILE: include/asm-i386/unistd.h:467:
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#141: FILE: include/asm-i386/unistd.h:467:
+	  "d" ((long)(arg3)),"S" ((long)(arg4)),"D" ((long)(arg5)) \
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: include/asm-i386/unistd.h:469:
+__syscall_return(type,__res); \
                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096307.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 84 errors, 7 warnings, 21 checks, 89 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096307.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
