WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
diff -urN linux-2.4.20/Documentation/Configure.help linux-hp-diva/Documentation/Configure.help

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#99: FILE: drivers/char/serial.c:265:
+#define HP_DIVA_CHECKTIME (1*HZ)
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#101: FILE: drivers/char/serial.c:267:
+static int hp_diva_count = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/char/serial.c:808:
+static inline int is_hp_diva_info(struct async_struct *info) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/char/serial.c:810:
+    struct pci_dev *dev = info->state->dev;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: drivers/char/serial.c:811:
+    struct pci_dev *dev = info->state->dev;
+    return (dev && dev->vendor == PCI_VENDOR_ID_HP &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/char/serial.c:811:
+    return (dev && dev->vendor == PCI_VENDOR_ID_HP &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: drivers/char/serial.c:812:
+    return (dev && dev->vendor == PCI_VENDOR_ID_HP &&
+		dev->device == PCI_DEVICE_ID_HP_SAS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/char/serial.c:817:
+    struct async_struct *info = IRQ_ports[irq];$

WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: drivers/char/serial.c:818:
+    struct async_struct *info = IRQ_ports[irq];
+    return (info && is_hp_diva_info(info));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/char/serial.c:818:
+    return (info && is_hp_diva_info(info));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 20)
#138: FILE: drivers/char/serial.c:832:
+	if (is_hp_diva_info(info) &&
[...]
+		    iir &= ~(UART_IIR_ID | UART_IIR_NO_INT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/char/serial.c:833:
+	if (is_hp_diva_info(info) &&
+		(iir & UART_IIR_NO_INT) != 0 &&

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#159: FILE: drivers/char/serial.c:877:
+		    ((iir=hp_diva_iir(irq, info)) & UART_IIR_NO_INT)) {
 		         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#215: FILE: drivers/char/serial.c:1209:
+
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#231: FILE: drivers/char/serial.c:4367:
+	if (hp_diva_count < HP_DIVA_IRQS) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#234: FILE: drivers/char/serial.c:4370:
+		printk(KERN_INFO "Please increase HP_DIVA_IRQS in drivers/char/serial.c\n");

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#234: FILE: drivers/char/serial.c:4370:
+		printk(KERN_INFO "Please increase HP_DIVA_IRQS in drivers/char/serial.c\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#246: FILE: drivers/char/serial.c:4382:
 static int __devinit

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/char/serial.c:4637:
+	else if ((board->num_ports == 1) &&
+			serial_pci_guess_board(dev, &tmp) == 0) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000372797.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 12 warnings, 5 checks, 228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000372797.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
