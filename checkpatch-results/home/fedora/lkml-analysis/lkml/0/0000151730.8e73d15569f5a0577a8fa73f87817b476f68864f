WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
cacheline bouncing of the atomic_t dst_entry.__refcount.  This Patch gets us

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#60: FILE: include/net/dst.h:44:
+struct per_cpu_cnt
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#61: FILE: include/net/dst.h:45:
+^Iint ^I^Irefcnt;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#62: FILE: include/net/dst.h:46:
+^Iint ^I^Iuse;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: include/net/dst.h:57:
+^Iint ^I^I^Is_cpu;$

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#107: FILE: include/net/dst.h:138:
+#define dst_use_inc(__dst) do {					\
+		per_cpu_ptr((__dst)->pcc, get_cpu())->use++ ;	\
+		put_cpu();					\
+	} while(0);

do {} while(0) macros should not have a trailing semicolon.

ERROR:SPACING: space required before the open parenthesis '('
#110: FILE: include/net/dst.h:141:
+	} while(0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#123: FILE: include/net/dst.h:154:
+#define dst_lastuse_set(__dst)  do {					  \
+		per_cpu_ptr((__dst)->pcc, get_cpu())->lastuse = jiffies ; \
+		put_cpu();						  \
+	} while(0);

ERROR:SPACING: space required before the open parenthesis '('
#126: FILE: include/net/dst.h:157:
+	} while(0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: include/net/dst.h:169:
+#define dst_refcnt_one(__dst) do { ^I^I^I^I^I  \$

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#138: FILE: include/net/dst.h:169:
+#define dst_refcnt_one(__dst) do { 					  \
+			per_cpu_ptr((__dst)->pcc, get_cpu())->refcnt = 1; \
+			put_cpu();		  			  \
+		} while(0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#140: FILE: include/net/dst.h:171:
+^I^I^Iput_cpu();^I^I  ^I^I^I  \$

ERROR:SPACING: space required before the open parenthesis '('
#141: FILE: include/net/dst.h:172:
+		} while(0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: include/net/dst.h:174:
+#define dst_refcnt_dec(__dst) do { ^I^I^I^I^I\$

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#143: FILE: include/net/dst.h:174:
+#define dst_refcnt_dec(__dst) do { 					\
+			per_cpu_ptr((__dst)->pcc, get_cpu())->refcnt--;	\
+			put_cpu();					\
+		} while(0);

ERROR:SPACING: space required before the open parenthesis '('
#146: FILE: include/net/dst.h:177:
+		} while(0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: include/net/dst.h:178:
+#define dst_hold(__dst) do { ^I^I^I^I^I^I \$

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#147: FILE: include/net/dst.h:178:
+#define dst_hold(__dst) do { 						 \
+			per_cpu_ptr((__dst)->pcc, get_cpu())->refcnt++ ; \
+			put_cpu();					 \
+		} while(0);

ERROR:SPACING: space required before the open parenthesis '('
#150: FILE: include/net/dst.h:181:
+		} while(0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: include/net/dst.h:197:
+#define dst_update_tu(__dst) do { ^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__dst' - possible side-effects?
#169: FILE: include/net/dst.h:197:
+#define dst_update_tu(__dst) do { 		\
+		dst_lastuse_set(__dst);		\
+		dst_use_inc(__dst); 		\
+	} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#169: FILE: include/net/dst.h:197:
+#define dst_update_tu(__dst) do { 		\
+		dst_lastuse_set(__dst);		\
+		dst_use_inc(__dst); 		\
+	} while (0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: include/net/dst.h:199:
+^I^Idst_use_inc(__dst); ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: include/net/dst.h:202:
+#define dst_update_rtu(__dst) do { ^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__dst' - possible side-effects?
#174: FILE: include/net/dst.h:202:
+#define dst_update_rtu(__dst) do { 		\
+		dst_lastuse_set(__dst);		\
+		dst_hold(__dst);		\
+		dst_use_inc(__dst); 		\
+	} while (0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: include/net/dst.h:205:
+^I^Idst_use_inc(__dst); ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: include/net/dst.h:212:
+#if  (!defined (CONFIG_NUMA) || (RT_CACHE_DEBUG >= 2 ))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#184: FILE: include/net/dst.h:212:
+#if  (!defined (CONFIG_NUMA) || (RT_CACHE_DEBUG >= 2 ))

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: include/net/dst.h:370:
+	int cpu;
+	dst->pcc = alloc_percpu(struct per_cpu_cnt, GFP_ATOMIC);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: include/net/dst.h:371:
+	if(!dst->pcc)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#224: FILE: include/net/dst.h:394:
+#if	defined (CONFIG_HOTPLUG_CPU) && defined (CONFIG_NUMA)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#224: FILE: include/net/dst.h:394:
+#if	defined (CONFIG_HOTPLUG_CPU) && defined (CONFIG_NUMA)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#225: FILE: include/net/dst.h:395:
+inline static void dst_ref_xfr_cpu_down(struct dst_entry *__dst, int cpu)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:LINE_SPACING: Missing a blank line after declarations
#228: FILE: include/net/dst.h:398:
+	int refcnt = per_cpu_ptr((__dst)->pcc, cpu)->refcnt;
+	if (refcnt) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#314: FILE: net/decnet/dn_route.c:167:
+		max = cpu + NR_CPUS;

ERROR:SPACING: space required before the open parenthesis '('
#315: FILE: net/decnet/dn_route.c:168:
+		for(sum = 0; cpu < max; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#316: FILE: net/decnet/dn_route.c:169:
+			int cpu_ = cpu % NR_CPUS;

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: net/decnet/dn_route.c:170:
+			int cpu_ = cpu % NR_CPUS;
+			if (cpu_online(cpu_)) {

WARNING:SPACING: space prohibited before semicolon
#321: FILE: net/decnet/dn_route.c:174:
+					dst->s_cpu = cpu_ ;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#339: FILE: net/decnet/dn_route.c:1793:
+static int __devinit dn_rtcache_cpu_callback(struct notifier_block *nfb,

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: net/decnet/dn_route.c:1794:
+                                   unsigned long action,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: net/decnet/dn_route.c:1794:
+static int __devinit dn_rtcache_cpu_callback(struct notifier_block *nfb,
+                                   unsigned long action,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: net/decnet/dn_route.c:1794:
+                                   unsigned long action,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: net/decnet/dn_route.c:1795:
+                                   void *hcpu)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: net/decnet/dn_route.c:1795:
+                                   void *hcpu)$

CHECK:SPACING: No space is necessary after a cast
#343: FILE: net/decnet/dn_route.c:1797:
+	int cpu = (int) hcpu;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#345: FILE: net/decnet/dn_route.c:1799:
+	switch(action) {
[...]
+		case CPU_DEAD:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#345: FILE: net/decnet/dn_route.c:1799:
+	switch(action) {

ERROR:SPACING: space required before the open parenthesis '('
#351: FILE: net/decnet/dn_route.c:1805:
+		for(i = 0; i < dn_rt_hash_mask; i++) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#354: FILE: net/decnet/dn_route.c:1808:
+			if ((rt = dn_rt_hash_table[i].chain) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#357: FILE: net/decnet/dn_route.c:1811:
+			for(; rt; rt=next) {
 			            ^

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: net/decnet/dn_route.c:1811:
+			for(; rt; rt=next) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#371: FILE: net/decnet/dn_route.c:1825:
+static struct notifier_block dn_rtcache_cpu_notifier =
+			{ &dn_rtcache_cpu_callback, NULL, 0 };

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#414: FILE: net/ipv4/route.c:514:
+/*
+ * For NUMA systems, we do not want to sum up all local cpu refcnts every

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: net/ipv4/route.c:521:
+static inline int rt_check_age(struct rtable *rth,
+			unsigned long tmo1, unsigned long tmo2)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#428: FILE: net/ipv4/route.c:528:
+	max = idx + NR_CPUS;

ERROR:SPACING: space required before the open parenthesis '('
#429: FILE: net/ipv4/route.c:529:
+	for(sum = 0; idx < max; idx++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#430: FILE: net/ipv4/route.c:530:
+		int cpu_ = idx % NR_CPUS;

WARNING:LINE_SPACING: Missing a blank line after declarations
#431: FILE: net/ipv4/route.c:531:
+		int cpu_ = idx % NR_CPUS;
+		if (cpu_online(cpu_)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: net/ipv4/route.c:535:
+			if ((age <= tmo1 && !rt_fast_clean(rth)) ||
+					(age <= tmo2 && rt_valuable(rth))) {

WARNING:SPACING: space prohibited before semicolon
#436: FILE: net/ipv4/route.c:536:
+				dst->s_cpu = cpu_ ;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#445: FILE: net/ipv4/route.c:545:
+/*
+ * In this function order of examining three factors (ref_cnt, expires,

WARNING:SPACING: space prohibited before semicolon
#452: FILE: net/ipv4/route.c:552:
+		return (dst_refcnt(&rth->u.dst) == 0) ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#477: FILE: net/ipv4/route.c:1164:
+	struct per_cpu_cnt *tmp_pnc;
+	tmp_pnc = to->u.dst.pcc;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#481: FILE: net/ipv4/route.c:1168:
+	per_cpu_ptr(to->u.dst.pcc,get_cpu())->use = 1;
 	                         ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#496: FILE: net/ipv4/route.c:3174:
+static int __devinit rtcache_cpu_callback(struct notifier_block *nfb,

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: net/ipv4/route.c:3175:
+                                   unsigned long action,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: net/ipv4/route.c:3175:
+static int __devinit rtcache_cpu_callback(struct notifier_block *nfb,
+                                   unsigned long action,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: net/ipv4/route.c:3175:
+                                   unsigned long action,$

CHECK:SPACING: No space is necessary after a cast
#500: FILE: net/ipv4/route.c:3178:
+	int cpu = (int) hcpu;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#502: FILE: net/ipv4/route.c:3180:
+	switch(action) {
[...]
+		case CPU_DEAD:

ERROR:SPACING: space required before the open parenthesis '('
#502: FILE: net/ipv4/route.c:3180:
+	switch(action) {

WARNING:SPACING: space prohibited before semicolon
#503: FILE: net/ipv4/route.c:3181:
+		int i ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#505: FILE: net/ipv4/route.c:3183:
+		struct rtable *rth;
+		case CPU_DEAD:

ERROR:SPACING: space required before the open parenthesis '('
#506: FILE: net/ipv4/route.c:3184:
+			for(i = rt_hash_mask; i >= 0; i--) {

ERROR:SPACING: space required before the open parenthesis '('
#509: FILE: net/ipv4/route.c:3187:
+				while(rth) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#519: FILE: net/ipv4/route.c:3197:
+}
+static struct notifier_block rtcache_cpu_notifier = { &rtcache_cpu_callback, NULL, 0 };

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#545: FILE: net/ipv6/ip6_fib.c:1214:
+inline static int rt6_ref_xfr_cpu_down(struct rt6_info *rt, void *arg)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#551: FILE: net/ipv6/ip6_fib.c:1220:
+static int __devinit ipv6_rtcache_cpu_callback(struct notifier_block *nfb,

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: net/ipv6/ip6_fib.c:1221:
+                                   unsigned long action,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: net/ipv6/ip6_fib.c:1221:
+static int __devinit ipv6_rtcache_cpu_callback(struct notifier_block *nfb,
+                                   unsigned long action,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: net/ipv6/ip6_fib.c:1221:
+                                   unsigned long action,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: net/ipv6/ip6_fib.c:1222:
+                                   void *hcpu)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: net/ipv6/ip6_fib.c:1222:
+                                   void *hcpu)$

CHECK:SPACING: No space is necessary after a cast
#555: FILE: net/ipv6/ip6_fib.c:1224:
+	int cpu = (int) hcpu;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#557: FILE: net/ipv6/ip6_fib.c:1226:
+	switch(action) {
+		case CPU_DEAD:

ERROR:SPACING: space required before the open parenthesis '('
#557: FILE: net/ipv6/ip6_fib.c:1226:
+	switch(action) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#569: FILE: net/ipv6/ip6_fib.c:1238:
+static struct notifier_block ipv6_rtcache_cpu_notifier =
+				{ &ipv6_rtcache_cpu_callback, NULL, 0 };

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151730.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 45 warnings, 11 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151730.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
