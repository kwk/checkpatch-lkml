WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
--- linux-2.6.5-rc3/include/asm-m68k/io.h	2004-02-08 10:19:55.000000000 +0100

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#37: FILE: include/asm-m68k/io.h:128:
+    case Q40_ISA: return (u8 *)Q40_ISA_IO_B(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: include/asm-m68k/io.h:131:
+    case GG2_ISA: return (u8 *)GG2_ISA_IO_B(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#45: FILE: include/asm-m68k/io.h:134:
+    case AG_ISA: return (u8 *)AG_ISA_IO_B(addr);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#51: FILE: include/asm-m68k/io.h:139:
 }
+static inline u16 *isa_itw(long addr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: include/asm-m68k/io.h:144:
+    case Q40_ISA: return (u16 *)Q40_ISA_IO_W(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: include/asm-m68k/io.h:147:
+    case GG2_ISA: return (u16 *)GG2_ISA_IO_W(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: include/asm-m68k/io.h:150:
+    case AG_ISA: return (u16 *)AG_ISA_IO_W(addr);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#71: FILE: include/asm-m68k/io.h:155:
 }
+static inline u8 *isa_mtb(long addr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: include/asm-m68k/io.h:160:
+    case Q40_ISA: return (u8 *)Q40_ISA_MEM_B(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: include/asm-m68k/io.h:163:
+    case GG2_ISA: return (u8 *)GG2_ISA_MEM_B(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: include/asm-m68k/io.h:166:
+    case AG_ISA: return (u8 *)addr;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#91: FILE: include/asm-m68k/io.h:171:
 }
+static inline u16 *isa_mtw(long addr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: include/asm-m68k/io.h:176:
+    case Q40_ISA: return (u16 *)Q40_ISA_MEM_W(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: include/asm-m68k/io.h:179:
+    case GG2_ISA: return (u16 *)GG2_ISA_MEM_W(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: include/asm-m68k/io.h:182:
+    case AG_ISA: return (u16 *)addr;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#114: FILE: include/asm-m68k/io.h:216:
+#define isa_inb_p(p)      ({u8 v=isa_inb(p);isa_delay();v;})
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#114: FILE: include/asm-m68k/io.h:216:
+#define isa_inb_p(p)      ({u8 v=isa_inb(p);isa_delay();v;})
                                            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#114: FILE: include/asm-m68k/io.h:216:
+#define isa_inb_p(p)      ({u8 v=isa_inb(p);isa_delay();v;})
                                                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#114: FILE: include/asm-m68k/io.h:216:
+#define isa_inb_p(p)      ({u8 v=isa_inb(p);isa_delay();v;})
                                                          ^

CHECK:SPACING: No space is necessary after a cast
#134: FILE: include/asm-m68k/raw_io.h:33:
+    ({ u8 __v = (*(volatile u8 *) (addr)); __v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: include/asm-m68k/raw_io.h:33:
+    ({ u8 __v = (*(volatile u8 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#134: FILE: include/asm-m68k/raw_io.h:33:
+    ({ u8 __v = (*(volatile u8 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#137: FILE: include/asm-m68k/raw_io.h:35:
+    ({ u16 __v = (*(volatile u16 *) (addr)); __v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: include/asm-m68k/raw_io.h:35:
+    ({ u16 __v = (*(volatile u16 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#137: FILE: include/asm-m68k/raw_io.h:35:
+    ({ u16 __v = (*(volatile u16 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#140: FILE: include/asm-m68k/raw_io.h:37:
+    ({ u32 __v = (*(volatile u32 *) (addr)); __v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: include/asm-m68k/raw_io.h:37:
+    ({ u32 __v = (*(volatile u32 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#140: FILE: include/asm-m68k/raw_io.h:37:
+    ({ u32 __v = (*(volatile u32 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#143: FILE: include/asm-m68k/raw_io.h:39:
+    ({ u16 __v = le16_to_cpu(*(volatile u16 *) (addr)); __v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: include/asm-m68k/raw_io.h:39:
+    ({ u16 __v = le16_to_cpu(*(volatile u16 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#143: FILE: include/asm-m68k/raw_io.h:39:
+    ({ u16 __v = le16_to_cpu(*(volatile u16 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#146: FILE: include/asm-m68k/raw_io.h:41:
+    ({ u32 __v = le32_to_cpu(*(volatile u32 *) (addr)); __v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: include/asm-m68k/raw_io.h:41:
+    ({ u32 __v = le32_to_cpu(*(volatile u32 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#146: FILE: include/asm-m68k/raw_io.h:41:
+    ({ u32 __v = le32_to_cpu(*(volatile u32 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#153: FILE: include/asm-m68k/raw_io.h:43:
+#define out_8(addr,b) (void)((*(volatile u8 *) (addr)) = (b))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: include/asm-m68k/raw_io.h:43:
+#define out_8(addr,b) (void)((*(volatile u8 *) (addr)) = (b))
                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#153: FILE: include/asm-m68k/raw_io.h:43:
+#define out_8(addr,b) (void)((*(volatile u8 *) (addr)) = (b))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#153: FILE: include/asm-m68k/raw_io.h:43:
+#define out_8(addr,b) (void)((*(volatile u8 *) (addr)) = (b))

CHECK:SPACING: No space is necessary after a cast
#154: FILE: include/asm-m68k/raw_io.h:44:
+#define out_be16(addr,w) (void)((*(volatile u16 *) (addr)) = (w))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: include/asm-m68k/raw_io.h:44:
+#define out_be16(addr,w) (void)((*(volatile u16 *) (addr)) = (w))
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#154: FILE: include/asm-m68k/raw_io.h:44:
+#define out_be16(addr,w) (void)((*(volatile u16 *) (addr)) = (w))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#154: FILE: include/asm-m68k/raw_io.h:44:
+#define out_be16(addr,w) (void)((*(volatile u16 *) (addr)) = (w))

CHECK:SPACING: No space is necessary after a cast
#155: FILE: include/asm-m68k/raw_io.h:45:
+#define out_be32(addr,l) (void)((*(volatile u32 *) (addr)) = (l))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#155: FILE: include/asm-m68k/raw_io.h:45:
+#define out_be32(addr,l) (void)((*(volatile u32 *) (addr)) = (l))
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#155: FILE: include/asm-m68k/raw_io.h:45:
+#define out_be32(addr,l) (void)((*(volatile u32 *) (addr)) = (l))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#155: FILE: include/asm-m68k/raw_io.h:45:
+#define out_be32(addr,l) (void)((*(volatile u32 *) (addr)) = (l))

CHECK:SPACING: No space is necessary after a cast
#156: FILE: include/asm-m68k/raw_io.h:46:
+#define out_le16(addr,w) (void)((*(volatile u16 *) (addr)) = cpu_to_le16(w))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: include/asm-m68k/raw_io.h:46:
+#define out_le16(addr,w) (void)((*(volatile u16 *) (addr)) = cpu_to_le16(w))
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#156: FILE: include/asm-m68k/raw_io.h:46:
+#define out_le16(addr,w) (void)((*(volatile u16 *) (addr)) = cpu_to_le16(w))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#156: FILE: include/asm-m68k/raw_io.h:46:
+#define out_le16(addr,w) (void)((*(volatile u16 *) (addr)) = cpu_to_le16(w))

CHECK:SPACING: No space is necessary after a cast
#157: FILE: include/asm-m68k/raw_io.h:47:
+#define out_le32(addr,l) (void)((*(volatile u32 *) (addr)) = cpu_to_le32(l))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: include/asm-m68k/raw_io.h:47:
+#define out_le32(addr,l) (void)((*(volatile u32 *) (addr)) = cpu_to_le32(l))
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#157: FILE: include/asm-m68k/raw_io.h:47:
+#define out_le32(addr,l) (void)((*(volatile u32 *) (addr)) = cpu_to_le32(l))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#157: FILE: include/asm-m68k/raw_io.h:47:
+#define out_le32(addr,l) (void)((*(volatile u32 *) (addr)) = cpu_to_le32(l))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#167: FILE: include/asm-m68k/raw_io.h:57:
+static inline void raw_insb(volatile u8 *port, u8 *buf, unsigned int len)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#177: FILE: include/asm-m68k/raw_io.h:65:
+static inline void raw_outsb(volatile u8 *port, const u8 *buf,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#188: FILE: include/asm-m68k/raw_io.h:74:
+static inline void raw_insw(volatile u16 *port, u16 *buf, unsigned int nr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#198: FILE: include/asm-m68k/raw_io.h:113:
+static inline void raw_outsw(volatile u16 *port, const u16 *buf,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#209: FILE: include/asm-m68k/raw_io.h:153:
+static inline void raw_insl(volatile u32 *port, u32 *buf, unsigned int nr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#219: FILE: include/asm-m68k/raw_io.h:192:
+static inline void raw_outsl(volatile u32 *port, const u32 *buf,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#230: FILE: include/asm-m68k/raw_io.h:233:
+static inline void raw_insw_swapw(volatile u16 *port, u16 *buf,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#241: FILE: include/asm-m68k/raw_io.h:286:
+static inline void raw_outsw_swapw(volatile u16 *port, const u16 *buf,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288987.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 36 warnings, 13 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288987.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
