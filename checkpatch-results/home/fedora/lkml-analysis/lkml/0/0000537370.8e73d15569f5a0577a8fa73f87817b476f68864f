WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff --exclude-from=exclude -Nur linux.orig/fs/ext2/fsync.c linux/fs/ext2/fsync.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: fs/ext2/inode.c:1105:
+int ext2_wait_inode(struct inode * inode) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#61: FILE: fs/ext2/inode.c:1105:
+int ext2_wait_inode(struct inode * inode) 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#69: FILE: fs/ext2/inode.c:1113:
+	struct ext2_group_desc * gdp;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#74: FILE: fs/ext2/inode.c:1118:
+		ext2_error (inode->i_sb, "ext2_wait_inode",

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#80: FILE: fs/ext2/inode.c:1124:
+		ext2_error (inode->i_sb, "ext2_wait_inode",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: fs/ext2/inode.c:1132:
+		ext2_error (inode->i_sb, "ext2_wait_inode",

CHECK:SPACING: No space is necessary after a cast
#92: FILE: fs/ext2/inode.c:1136:
+	gdp = (struct ext2_group_desc *) bh->b_data;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#119: FILE: fs/ext2/super.c:152:
+	wait_inode:	ext2_wait_inode,
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#119: FILE: fs/ext2/super.c:152:
+	wait_inode:	ext2_wait_inode,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: fs/inode.c:158:
+void __wait_on_inode(struct inode * inode)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: fs/inode.c:404:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: fs/inode.c:405:
+^I^I * If its a synchronous inode write operation, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: fs/inode.c:461:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: fs/inode.c:465:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: fs/inode.c:467:
+^I * 1) wait for it to become unlocked, guaranteeing that all $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: fs/inode.c:469:
+^I * 2) wait for the buffer_head which represents the inode metadata $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: fs/inode.c:470:
+^I * to get unlocked, guaranteeing that dirty inode metadata has been $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: fs/inode.c:472:
+^I *   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: fs/inode.c:481:
+^I/* $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: include/linux/ext2_fs.h:580:
+extern int ext2_wait_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: include/linux/ext2_fs.h:580:
+extern int ext2_wait_inode (struct inode *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#223: FILE: include/linux/ext2_fs.h:580:
+extern int ext2_wait_inode (struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#234: FILE: include/linux/fs.h:813:
+	int (*wait_inode) (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#234: FILE: include/linux/fs.h:813:
+	int (*wait_inode) (struct inode *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#243: FILE: include/linux/fs.h:836:
+extern void __wait_on_inode(struct inode * inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#243: FILE: include/linux/fs.h:836:
+extern void __wait_on_inode(struct inode * inode);

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: include/linux/fs.h:839:
+        if (inode->i_state & I_LOCK)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: include/linux/fs.h:839:
+        if (inode->i_state & I_LOCK)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: include/linux/fs.h:840:
+                __wait_on_inode(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: include/linux/fs.h:840:
+                __wait_on_inode(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: include/linux/fs.h:845:
+        if (inode->i_sb && inode->i_sb->s_op && inode->i_sb->s_op->wait_inode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: include/linux/fs.h:845:
+        if (inode->i_sb && inode->i_sb->s_op && inode->i_sb->s_op->wait_inode)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: include/linux/fs.h:846:
+                inode->i_sb->s_op->wait_inode(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: include/linux/fs.h:846:
+                inode->i_sb->s_op->wait_inode(inode);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000537370.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 13 warnings, 3 checks, 197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000537370.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
