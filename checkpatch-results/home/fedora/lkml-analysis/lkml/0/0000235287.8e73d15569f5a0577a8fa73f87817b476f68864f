CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#50: FILE: arch/m68k/hp300/config.c:19:
+#include <asm/io.h>                               /* readb() and writeb() */

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: arch/m68k/hp300/config.c:90:
+        default:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#192: FILE: arch/m68k/hp300/config.c:156:
+	while (rtc_busy());

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#194: FILE: arch/m68k/hp300/config.c:158:
+	while (rtc_busy());

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: arch/m68k/hp300/config.c:160:
+	while (rtc_busy());

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: arch/m68k/hp300/config.c:164:
+		while (!rtc_data_available());

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#218: FILE: arch/m68k/hp300/config.c:182:
+	while (rtc_busy());

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#220: FILE: arch/m68k/hp300/config.c:184:
+	while (rtc_busy());

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#222: FILE: arch/m68k/hp300/config.c:186:
+	while (rtc_busy());

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#224: FILE: arch/m68k/hp300/config.c:188:
+	while (rtc_busy());

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#228: FILE: arch/m68k/hp300/config.c:192:
+		while (!rtc_data_available());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#316: FILE: arch/m68k/hp300/config.c:269:
+		printk(KERN_INFO "Detected HP9000 model %s\n", hp300_models[hp300_model-HP_320]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#316: FILE: arch/m68k/hp300/config.c:269:
+		printk(KERN_INFO "Detected HP9000 model %s\n", hp300_models[hp300_model-HP_320]);
 		                                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#317: FILE: arch/m68k/hp300/config.c:270:
+		strcat(hp300_model_name, hp300_models[hp300_model-HP_320]);
 		                                                 ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#319: FILE: arch/m68k/hp300/config.c:272:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#319: FILE: arch/m68k/hp300/config.c:272:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#400: FILE: arch/m68k/hp300/time.c:44:
+	irqreturn_t (*vector)(int, void *, struct pt_regs *) = dev_id;
+	in_8(CLOCKBASE + CLKSR);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#599: FILE: arch/m68k/kernel/head.S:1076:
+	 * 030: Map the 32Meg range physical 0x0 upto logical 0xf000.0000
 	                                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#609: FILE: arch/m68k/kernel/head.S:1084:
+	 * 040: Map the 16Meg range physical 0x0 upto logical 0xf000.0000
 	                                         ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#702: FILE: arch/m68k/kernel/head.S:3197:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#750: FILE: arch/m68k/kernel/setup.c:113:
+extern int hp300_parse_bootinfo(const struct bi_record *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct bi_record *' should also have an identifier name
#750: FILE: arch/m68k/kernel/setup.c:113:
+extern int hp300_parse_bootinfo(const struct bi_record *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#758: FILE: arch/m68k/kernel/setup.c:180:
+		else if (MACH_IS_HP300)
+		    unknown = hp300_parse_bootinfo(record);

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#792: FILE: include/asm-m68k/blinken.h:16:
+#include <asm/io.h>

WARNING:INLINE: plain inline is preferred over __inline__
#799: FILE: include/asm-m68k/blinken.h:22:
+static __inline__ void blinken_leds(int on, int off)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#805: FILE: include/asm-m68k/blinken.h:24:
+	if (MACH_IS_HP300)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#834: FILE: include/asm-m68k/bootinfo.h:264:
+#define HP300_BOOTI_VERSION    MK_BI_VERSION( 2, 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#834: FILE: include/asm-m68k/bootinfo.h:264:
+#define HP300_BOOTI_VERSION    MK_BI_VERSION( 2, 0 )

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#841: FILE: include/asm-m68k/hp300hw.h:1:
+#ifndef _M68K_HP300HW_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 10 warnings, 4 checks, 791 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
