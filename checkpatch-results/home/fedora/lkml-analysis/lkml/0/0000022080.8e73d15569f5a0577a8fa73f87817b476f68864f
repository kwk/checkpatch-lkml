WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#48: FILE: arch/alpha/Kconfig:472:
+config VGA_HOSE
+	bool "VGA on arbitrary hose"
+	depends on ALPHA_GENERIC || ALPHA_TITAN || ALPHA_MARVEL || ALPHA_TSUNAMI
+	default y
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#97: FILE: arch/alpha/kernel/console.c:19:
+struct pci_controller *pci_vga_hose = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#132: FILE: arch/alpha/kernel/console.c:53:
+	if (!hose || (conswitchp == &vga_con && pci_vga_hose == hose)) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#170: FILE: arch/alpha/kernel/core_marvel.c:777:
+	return (void __iomem *) NULL;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: arch/alpha/kernel/core_marvel.c:807:
+	else if (__is_port_vga (addr) && pci_vga_hose)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#201: FILE: arch/alpha/kernel/core_titan.c:40:
+static int titan_pchip1_present = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#204: FILE: arch/alpha/kernel/core_titan.c:43:
+#define H2I(h) ((((h)&2)>>1)|(((h)&1)<<1))
                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#204: FILE: arch/alpha/kernel/core_titan.c:43:
+#define H2I(h) ((((h)&2)>>1)|(((h)&1)<<1))
                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#204: FILE: arch/alpha/kernel/core_titan.c:43:
+#define H2I(h) ((((h)&2)>>1)|(((h)&1)<<1))
                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#204: FILE: arch/alpha/kernel/core_titan.c:43:
+#define H2I(h) ((((h)&2)>>1)|(((h)&1)<<1))
                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#204: FILE: arch/alpha/kernel/core_titan.c:43:
+#define H2I(h) ((((h)&2)>>1)|(((h)&1)<<1))
                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'h' - possible side-effects?
#204: FILE: arch/alpha/kernel/core_titan.c:43:
+#define H2I(h) ((((h)&2)>>1)|(((h)&1)<<1))

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#206: FILE: arch/alpha/kernel/core_titan.c:45:
+#define I2H(i) ((((i)&2)>>1)|(((i)&1)<<1))
                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#206: FILE: arch/alpha/kernel/core_titan.c:45:
+#define I2H(i) ((((i)&2)>>1)|(((i)&1)<<1))
                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: arch/alpha/kernel/core_titan.c:45:
+#define I2H(i) ((((i)&2)>>1)|(((i)&1)<<1))
                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#206: FILE: arch/alpha/kernel/core_titan.c:45:
+#define I2H(i) ((((i)&2)>>1)|(((i)&1)<<1))
                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#206: FILE: arch/alpha/kernel/core_titan.c:45:
+#define I2H(i) ((((i)&2)>>1)|(((i)&1)<<1))
                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#206: FILE: arch/alpha/kernel/core_titan.c:45:
+#define I2H(i) ((((i)&2)>>1)|(((i)&1)<<1))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#208: FILE: arch/alpha/kernel/core_titan.c:47:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: arch/alpha/kernel/core_titan.c:217:
+^Iif (hose->index & 1) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#250: FILE: arch/alpha/kernel/core_titan.c:272:
 	hose->dense_mem_base
+	  = (TITAN_MEM(hoseno) & 0xffffffffffUL) | 0x80000000000UL;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#253: FILE: arch/alpha/kernel/core_titan.c:274:
 	hose->dense_io_base
+	  = (TITAN_IO(hoseno) & 0xffffffffffUL) | 0x80000000000UL;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#276: FILE: arch/alpha/kernel/core_titan.c:290:
+		printk(KERN_ERR "Failed to request IO on hose %d\n", hoseno);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#279: FILE: arch/alpha/kernel/core_titan.c:292:
+		printk(KERN_ERR "Failed to request MEM on hose %d\n", hoseno);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#323: FILE: arch/alpha/kernel/core_titan.c:358:
+	titan_pchip1_present = TITAN_cchip->csc.csr & 1L<<14;
 	                                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#346: FILE: arch/alpha/kernel/core_titan.c:384:
+			if (I2H(hose->index) == h) break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: arch/alpha/kernel/core_titan.c:388:
+			printk("Console graphics on hose %d\n", h);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#354: FILE: arch/alpha/kernel/core_titan.c:391:
+			printk("ERROR: Console graphics hose not found\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#409: FILE: arch/alpha/kernel/core_titan.c:537:
+			printk("ioremap failed... no vm_area...\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#420: FILE: arch/alpha/kernel/core_titan.c:556:
+				printk("FAILED to remap_area_pages...\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#473: FILE: arch/alpha/kernel/core_tsunami.c:367:
+			if (hose->index == h) break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#477: FILE: arch/alpha/kernel/core_tsunami.c:371:
+			printk("Console graphics on hose %d\n", h);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: arch/alpha/kernel/proto.h:111:
+  extern void locate_and_init_vga(void *(*)(void *, void *));$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#506: FILE: arch/alpha/kernel/proto.h:111:
+  extern void locate_and_init_vga(void *(*)(void *, void *));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#523: FILE: arch/alpha/kernel/setup.c:792:
 };
+static int titan_indices[] = {0,1,2,2,3,4};

ERROR:SPACING: space required after that ',' (ctx:VxV)
#523: FILE: arch/alpha/kernel/setup.c:792:
+static int titan_indices[] = {0,1,2,2,3,4};
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#523: FILE: arch/alpha/kernel/setup.c:792:
+static int titan_indices[] = {0,1,2,2,3,4};
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#523: FILE: arch/alpha/kernel/setup.c:792:
+static int titan_indices[] = {0,1,2,2,3,4};
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#523: FILE: arch/alpha/kernel/setup.c:792:
+static int titan_indices[] = {0,1,2,2,3,4};
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#523: FILE: arch/alpha/kernel/setup.c:792:
+static int titan_indices[] = {0,1,2,2,3,4};
                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: drivers/video/console/vgacon.c:402:
+			vga_request_resource(&ioport_resource,
 					 &ega_console_resource);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#606: FILE: drivers/video/console/vgacon.c:412:
+			vga_request_resource(&ioport_resource,
 					 &mda1_console_resource);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/video/console/vgacon.c:414:
+			vga_request_resource(&ioport_resource,
 					 &mda2_console_resource);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: drivers/video/console/vgacon.c:434:
+				vga_request_resource(&ioport_resource,
 						 &ega_console_resource);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#626: FILE: drivers/video/console/vgacon.c:441:
+				vga_request_resource(&ioport_resource,
 						 &vga_console_resource);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#635: FILE: drivers/video/console/vgacon.c:486:
+			vga_request_resource(&ioport_resource,
 					 &cga_console_resource);

WARNING:INCLUDE_LINUX: Use #include <linux/pci.h> instead of <asm/pci.h>
#645: FILE: include/asm-alpha/core_titan.h:6:
+#include <asm/pci.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pci.h> instead of <asm/pci.h>
#665: FILE: include/asm-alpha/core_tsunami.h:6:
+#include <asm/pci.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#694: FILE: include/asm-alpha/io.h:132:
+# define __is_port_vga(a)       \
+	(((a) >= 0x3b0) && ((a) < 0x3e0) && \
+	 ((a) != 0x3b3) && ((a) != 0x3d3))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#698: FILE: include/asm-alpha/io.h:136:
+# define __is_mem_vga(a) \
+	(((a) >= 0xa0000) && ((a) <= 0xc0000))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#701: FILE: include/asm-alpha/io.h:139:
+# define FIXUP_IOADDR_VGA(a) do {                       \
+	if (pci_vga_hose && __is_port_vga(a))     \
+		a += pci_vga_hose->io_space->start;     \
+ } while(0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: include/asm-alpha/io.h:142:
+ } while(0)$

ERROR:SPACING: space required before the open parenthesis '('
#704: FILE: include/asm-alpha/io.h:142:
+ } while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#706: FILE: include/asm-alpha/io.h:144:
+# define FIXUP_MEMADDR_VGA(a) do {                       \
+	if (pci_vga_hose && __is_mem_vga(a))     \
+		a += pci_vga_hose->io_space->start;     \
+ } while(0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: include/asm-alpha/io.h:147:
+ } while(0)$

ERROR:SPACING: space required before the open parenthesis '('
#709: FILE: include/asm-alpha/io.h:147:
+ } while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: include/asm-alpha/vga.h:56:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: include/asm-alpha/vga.h:56:
+ $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#733: FILE: include/asm-alpha/vga.h:59:
+static int __inline__

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline__
#733: FILE: include/asm-alpha/vga.h:59:
+static int __inline__

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000022080.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 16 warnings, 29 checks, 620 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000022080.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
