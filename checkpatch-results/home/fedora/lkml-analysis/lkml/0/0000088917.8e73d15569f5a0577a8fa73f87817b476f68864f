WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
> > > filesystem, fsx runs fine for a few hours. Also testes on 32 bit machine

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#94: FILE: fs/ext3/ioctl.c:198:
+	case EXT3_IOC_SETALLOCBLKGRP: {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '||' (ctx:WxO)
#95: FILE: fs/ext3/ioctl.c:199:
+		if (!test_opt(inode->i_sb, RESERVATION) ||!S_ISREG(inode->i_mode))
 		                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->fsuid != inode->i_uid'
#101: FILE: fs/ext3/ioctl.c:205:
+		if ((current->fsuid != inode->i_uid) && !capable(CAP_FOWNER))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open brace '{'
#115: FILE: fs/ext3/ioctl.c:219:
+		if (ei->i_block_alloc_info){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#115: FILE: fs/ext3/ioctl.c:219:
+		if (ei->i_block_alloc_info){
+			ei->i_block_alloc_info->goal_block_group = blk_group;
+		}

WARNING:LONG_LINE: line length of 144 exceeds 100 columns
#172: FILE: fs/ext3/balloc.c:1269:
+		goal = le32_to_cpu(EXT3_SB(sb)->s_es->s_first_data_block) +                                group_no * EXT3_BLOCKS_PER_GROUP(sb);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088917.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 2 checks, 91 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088917.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
