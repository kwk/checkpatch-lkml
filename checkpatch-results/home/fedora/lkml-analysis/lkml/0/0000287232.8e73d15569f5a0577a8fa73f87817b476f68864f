WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#81: 
i've checked kernel recompiles and while they didnt hurt from fork()
                                              ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#97: FILE: include/linux/sched.h:718:
+extern void FASTCALL(wake_up_forked_process(struct task_struct * tsk));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: include/linux/sched.h:718:
+extern void FASTCALL(wake_up_forked_process(struct task_struct * tsk));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: include/linux/sched.h:721:
+ extern void FASTCALL(wake_up_forked_thread(struct task_struct * tsk));$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: include/linux/sched.h:721:
+ extern void FASTCALL(wake_up_forked_thread(struct task_struct * tsk));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: include/linux/sched.h:721:
+ extern void FASTCALL(wake_up_forked_thread(struct task_struct * tsk));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: include/linux/sched.h:724:
+ static inline void wake_up_forked_thread(struct task_struct * tsk)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: include/linux/sched.h:724:
+ static inline void wake_up_forked_thread(struct task_struct * tsk)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: include/linux/sched.h:725:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: include/linux/sched.h:727:
+ }$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#153: FILE: kernel/sched.c:1175:
+	if (min_load*this_rq->sd->imbalance_pct < 100*this_load)
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#153: FILE: kernel/sched.c:1175:
+	if (min_load*this_rq->sd->imbalance_pct < 100*this_load)
 	                                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#166: FILE: kernel/sched.c:1188:
+void fastcall wake_up_forked_thread(task_t * p)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#183: FILE: kernel/sched.c:1205:
+	BUG_ON(p->state != TASK_RUNNING);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#211: FILE: kernel/sched.c:1233:
+		if (unlikely(!current->array))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#213: FILE: kernel/sched.c:1235:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#243: FILE: kernel/fork.c:1182:
+		if (!(clone_flags & CLONE_STOPPED)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#259: FILE: kernel/fork.c:1198:
+		} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 8 checks, 163 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
