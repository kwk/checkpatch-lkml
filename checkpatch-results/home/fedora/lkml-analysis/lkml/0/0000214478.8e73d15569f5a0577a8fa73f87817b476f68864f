WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> It does.  Still, I don't think it'll solve memory allocation problems on resume,

WARNING:TYPO_SPELLING: 'enought' may be misspelled - perhaps 'enough'?
#38: 
free_some_memory patch enought do it.
                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#88: FILE: kernel/power/swsusp.c:262:
+static void inline mod_printk_progress(int i)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#90: FILE: kernel/power/swsusp.c:264:
+	if (mod_progress == 0) mod_progress = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#91: FILE: kernel/power/swsusp.c:265:
+	if (!(i%100))
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#92: FILE: kernel/power/swsusp.c:266:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited after that open parenthesis '('
#92: FILE: kernel/power/swsusp.c:266:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#92: FILE: kernel/power/swsusp.c:266:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#95: FILE: kernel/power/swsusp.c:269:
+#define PBE_PAGE_NUMS		(PAGE_SIZE/sizeof(struct pbe))
                      		          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#96: FILE: kernel/power/swsusp.c:270:
+#define PBE_IS_PAGE_END(x) \
+	( PAGE_SIZE - sizeof(struct pbe) == ((x) - ((~(PAGE_SIZE - 1)) & (x))) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#97: FILE: kernel/power/swsusp.c:271:
+	( PAGE_SIZE - sizeof(struct pbe) == ((x) - ((~(PAGE_SIZE - 1)) & (x))) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#97: FILE: kernel/power/swsusp.c:271:
+	( PAGE_SIZE - sizeof(struct pbe) == ((x) - ((~(PAGE_SIZE - 1)) & (x))) )

WARNING:TYPO_SPELLING: 'tempory' may be misspelled - perhaps 'temporary'?
#102: FILE: kernel/power/swsusp.c:276:
+ * @n:		another &suspend_pagedir_t to use as tempory storage.
       		                                     ^^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#105: FILE: kernel/power/swsusp.c:279:
+#define pgdir_for_each(pos, n, head) \
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \
+			pos != NULL; \
+			pos = n, n = pos ? (suspend_pagedir_t *)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#105: FILE: kernel/power/swsusp.c:279:
+#define pgdir_for_each(pos, n, head) \
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \
+			pos != NULL; \
+			pos = n, n = pos ? (suspend_pagedir_t *)pos->dummy.val : NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#106: FILE: kernel/power/swsusp.c:280:
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#106: FILE: kernel/power/swsusp.c:280:
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#107: FILE: kernel/power/swsusp.c:281:
+			pos != NULL; \

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'tempory' may be misspelled - perhaps 'temporary'?
#113: FILE: kernel/power/swsusp.c:287:
+ * @n		another &struct pbe to use as tempory storage.
      		                              ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: kernel/power/swsusp.c:288:
+ * @index:^Ishow current index $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#118: FILE: kernel/power/swsusp.c:292:
+#define pbe_for_each(pos, n, index, max, head) \
+	for(pos = head, index = 0,\
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#118: FILE: kernel/power/swsusp.c:292:
+#define pbe_for_each(pos, n, index, max, head) \
+	for(pos = head, index = 0,\
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'index' - possible side-effects?
#118: FILE: kernel/power/swsusp.c:292:
+#define pbe_for_each(pos, n, index, max, head) \
+	for(pos = head, index = 0,\
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max' may be better as '(max)' to avoid precedence issues
#118: FILE: kernel/power/swsusp.c:292:
+#define pbe_for_each(pos, n, index, max, head) \
+	for(pos = head, index = 0,\
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

ERROR:SPACING: space required before the open parenthesis '('
#119: FILE: kernel/power/swsusp.c:293:
+	for(pos = head, index = 0,\

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#121: FILE: kernel/power/swsusp.c:295:
+		(pos != NULL) && (index < max); \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#125: FILE: kernel/power/swsusp.c:299:
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: kernel/power/swsusp.c:314:
+^I^I^Ipbe = (struct pbe *)((unsigned long)pbe + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: kernel/power/swsusp.c:316:
+^I^I^Ipr_debug("find_pbe_by_index: %p, 0x%03x, %p", head, index, pbe); $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'find_pbe_by_index', this function's name, in a string
#142: FILE: kernel/power/swsusp.c:316:
+			pr_debug("find_pbe_by_index: %p, 0x%03x, %p", head, index, pbe); 

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#145: FILE: kernel/power/swsusp.c:319:
+		p ++;
 		  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: kernel/power/swsusp.c:325:
+ * pagedir_free - free the pagedir list storage $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: kernel/power/swsusp.c:331:
+^Ipgdir_for_each(cur, next, head) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: kernel/power/swsusp.c:331:
+	suspend_pagedir_t *next, *cur;
+	pgdir_for_each(cur, next, head) 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#161: FILE: kernel/power/swsusp.c:335:
+static int bio_read_page(pgoff_t page_off, void * page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: kernel/power/swsusp.c:340:
+ *  @cur:^Icurrent index $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#170: FILE: kernel/power/swsusp.c:344:
+static int inline write_one_pbe(struct pbe *p, void *data, int cur)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_one_pbe', this function's name, in a string
#176: FILE: kernel/power/swsusp.c:350:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %d ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: kernel/power/swsusp.c:351:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %d ",
+			p, (void *)p->orig_address, (void *)p->address, cur);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#179: FILE: kernel/power/swsusp.c:353:
+	if (error) return error;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#183: FILE: kernel/power/swsusp.c:357:
+}
+static int inline read_one_pbe(struct pbe *p, void *data, int cur)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#183: FILE: kernel/power/swsusp.c:357:
+static int inline read_one_pbe(struct pbe *p, void *data, int cur)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pbe', this function's name, in a string
#189: FILE: kernel/power/swsusp.c:363:
+	pr_debug("read_one_pbe: %p, o{%p} c{%p} %lu\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: kernel/power/swsusp.c:364:
+^I^I^Ip, (void *)p->orig_address, data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: kernel/power/swsusp.c:364:
+	pr_debug("read_one_pbe: %p, o{%p} c{%p} %lu\n",
+			p, (void *)p->orig_address, data, 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#194: FILE: kernel/power/swsusp.c:368:
+	if (error) return error;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: kernel/power/swsusp.c:373:
+ * Returns true if given address/order collides with any orig_address $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: kernel/power/swsusp.c:375:
+static int inline does_collide_order(unsigned long addr, int order) $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#201: FILE: kernel/power/swsusp.c:375:
+static int inline does_collide_order(unsigned long addr, int order) 

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#205: FILE: kernel/power/swsusp.c:379:
+	for (i=0; i < (1<<order); i++)
 	      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#205: FILE: kernel/power/swsusp.c:379:
+	for (i=0; i < (1<<order); i++)
 	                ^

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: kernel/power/swsusp.c:380:
+		if(!PageNosaveFree(virt_to_page(addr + i * PAGE_SIZE)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: kernel/power/swsusp.c:385:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#212: FILE: kernel/power/swsusp.c:386:
+static void **eaten_memory = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: kernel/power/swsusp.c:390:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: kernel/power/swsusp.c:391:
+ * in resume we must make sure the page not collide with old pages, first call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: kernel/power/swsusp.c:392:
+ * get_free_page, if that's collide, adding it in a easy list, then try next, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: kernel/power/swsusp.c:396:
+ * $

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#231: FILE: kernel/power/swsusp.c:405:
+			eaten_memory = (void**)addr;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#234: FILE: kernel/power/swsusp.c:408:
+			printk(".");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#236: FILE: kernel/power/swsusp.c:410:
+		addr = (void*)__get_free_pages(GFP_ATOMIC | __GFP_COLD, 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: kernel/power/swsusp.c:412:
+			printk("out of memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: kernel/power/swsusp.c:418:
+^I^IClearPageNosaveFree(virt_to_page(addr)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: kernel/power/swsusp.c:424:
+ * alloc_one_pagedir - allocate a new pagedir $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: kernel/power/swsusp.c:427:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: kernel/power/swsusp.c:429:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#255: FILE: kernel/power/swsusp.c:429:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: kernel/power/swsusp.c:430:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 
+		int collide)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: kernel/power/swsusp.c:437:
+^Iif (!pgdir) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: kernel/power/swsusp.c:440:
+^I/*pr_debug("pgdir: %p, %p, %d\n", $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#267: FILE: kernel/power/swsusp.c:441:
+	/*pr_debug("pgdir: %p, %p, %d\n", 
+	  pgdir, prev, sizeof(suspend_pagedir_t)); */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: kernel/power/swsusp.c:441:
+	  pgdir, prev, sizeof(suspend_pagedir_t)); */

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#273: FILE: kernel/power/swsusp.c:447:
+			prev[i].dummy.val= (unsigned long)pgdir;
 			                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: kernel/power/swsusp.c:457:
+	int diff = 0, ret = 0;
+	do {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: kernel/power/swsusp.c:472:
+ * @page_nums:^Iif we knows need how many pages for pagedir set it, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: kernel/power/swsusp.c:473:
+ * ^I^I^I    only using resume stage, 0 is known.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: kernel/power/swsusp.c:475:
+ * @return: ^I< 0 is failed.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: kernel/power/swsusp.c:477:
+static int alloc_pagedir(struct pbe **pbe, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: kernel/power/swsusp.c:478:
+static int alloc_pagedir(struct pbe **pbe, 
+		int pbe_nums, int collide, int page_nums)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_pagedir', this function's name, in a string
#314: FILE: kernel/power/swsusp.c:488:
+	pr_debug("alloc_pagedir: %d, %d\n", pbe_nums, after_alloc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: kernel/power/swsusp.c:513:
+^Ipr_debug("check_one_pbe: %p %lu o{%p} ", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_one_pbe', this function's name, in a string
#339: FILE: kernel/power/swsusp.c:513:
+	pr_debug("check_one_pbe: %p %lu o{%p} ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: kernel/power/swsusp.c:514:
+	pr_debug("check_one_pbe: %p %lu o{%p} ", 
+			p, p->swap_address.val, (void*)p->orig_address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#340: FILE: kernel/power/swsusp.c:514:
+			p, p->swap_address.val, (void*)p->orig_address);

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: kernel/power/swsusp.c:516:
+	if(!addr)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#344: FILE: kernel/power/swsusp.c:518:
+	pr_debug("c{%p} done\n", (void*)addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: kernel/power/swsusp.c:524:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: kernel/power/swsusp.c:525:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, 
+		suspend_pagedir_t *s_pgdir)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s_pgdir"
#355: FILE: kernel/power/swsusp.c:529:
+	while (s_pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#358: FILE: kernel/power/swsusp.c:532:
+		suspend_pagedir_t *d_next = (suspend_pagedir_t *)d_pgdir->dummy.val;
+		for (i = 0; i < PBE_PAGE_NUMS; i++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#362: FILE: kernel/power/swsusp.c:536:
+			s_pgdir ++; d_pgdir ++;
 			        ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#362: FILE: kernel/power/swsusp.c:536:
+			s_pgdir ++; d_pgdir ++;
 			                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#382: FILE: kernel/power/swsusp.c:556:
+	printk("Relocating pagedir ... ");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: kernel/power/swsusp.c:565:
+^I^Ipr_debug("clear <%p>, <%p>, %d\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: kernel/power/swsusp.c:566:
+		pr_debug("clear <%p>, <%p>, %d\n", 
+				pos, (void*)pos->orig_address, index);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#392: FILE: kernel/power/swsusp.c:566:
+				pos, (void*)pos->orig_address, index);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: kernel/power/swsusp.c:569:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#397: FILE: kernel/power/swsusp.c:571:
+	if (error < 0) {
+		return error;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#406: FILE: kernel/power/swsusp.c:580:
+		BUG_ON(error);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#412: FILE: kernel/power/swsusp.c:586:
+		printk(":");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#418: FILE: kernel/power/swsusp.c:592:
+	printk(" done\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: kernel/power/swsusp.c:600:
+ * read_one_pagedir - read one pagedir from swap device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: kernel/power/swsusp.c:602:
+ * @i:^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: kernel/power/swsusp.c:611:
+^Ipr_debug("read_one_pagedir: %p, %d, %lu, %p\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pagedir', this function's name, in a string
#437: FILE: kernel/power/swsusp.c:611:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: kernel/power/swsusp.c:612:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 
+			pgdir, i, offset, (void*)next);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#438: FILE: kernel/power/swsusp.c:612:
+			pgdir, i, offset, (void*)next);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#439: FILE: kernel/power/swsusp.c:613:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#439: FILE: kernel/power/swsusp.c:613:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {
+		return error;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: kernel/power/swsusp.c:622:
+ *  for_each_pbe_copy_back - $

WARNING:TYPO_SPELLING: 'usefuly' may be misspelled - perhaps 'usefully'?
#450: FILE: kernel/power/swsusp.c:624:
+ *  That usefuly for help us writing the code in assemble code
          ^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#460: FILE: kernel/power/swsusp.c:634:
+#if 0 /* if your copy back code is running in real mode, enable it */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: kernel/power/swsusp.c:635:
+#define GET_ADDRESS(x) __pa(x) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#465: FILE: kernel/power/swsusp.c:639:
+asmlinkage void for_each_pbe_copy_back(void)
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#470: FILE: kernel/power/swsusp.c:644:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#472: FILE: kernel/power/swsusp.c:646:
+		register unsigned long i;
+		pgdir = (struct pbe *)GET_ADDRESS(pgdir);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#473: FILE: kernel/power/swsusp.c:647:
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#475: FILE: kernel/power/swsusp.c:649:
+		for (i = 0; i < PBE_PAGE_NUMS; i++, pgdir ++) {
 		                                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#477: FILE: kernel/power/swsusp.c:651:
+			register unsigned long *orig, *copy;
+			orig = (unsigned long *)pgdir->orig_address;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#478: FILE: kernel/power/swsusp.c:652:
+			if (orig == 0) goto end;

WARNING:IF_1: Consider removing the #if 1 and its #endif
#481: FILE: kernel/power/swsusp.c:655:
+#if 1

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#483: FILE: kernel/power/swsusp.c:657:
+			for (i = 0; i < PAGE_SIZE / sizeof(unsigned long); i+=4) {
 			                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#485: FILE: kernel/power/swsusp.c:659:
+				*(orig + i+1) = *(copy + i+1);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#485: FILE: kernel/power/swsusp.c:659:
+				*(orig + i+1) = *(copy + i+1);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#486: FILE: kernel/power/swsusp.c:660:
+				*(orig + i+2) = *(copy + i+2);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#486: FILE: kernel/power/swsusp.c:660:
+				*(orig + i+2) = *(copy + i+2);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#487: FILE: kernel/power/swsusp.c:661:
+				*(orig + i+3) = *(copy + i+3);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#487: FILE: kernel/power/swsusp.c:661:
+				*(orig + i+3) = *(copy + i+3);
 				                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#540: FILE: kernel/power/swsusp.c:713:
+		BUG_ON(pos->orig_address == 0);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#541: FILE: kernel/power/swsusp.c:714:
+		error = write_one_pbe(pos, (void*)pos->address, i);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#542: FILE: kernel/power/swsusp.c:715:
+		if (error) break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: kernel/power/swsusp.c:791:
+^I^Ipr_debug("write_pagedir: <%p>, %lu\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: kernel/power/swsusp.c:792:
+		pr_debug("write_pagedir: <%p>, %lu\n", 
+				pgdir, swp_offset(swsusp_info.pagedir[n]));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#562: FILE: kernel/power/swsusp.c:793:
+		if (error) break;

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#563: FILE: kernel/power/swsusp.c:794:
+		n ++;
 		  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#577: FILE: kernel/power/swsusp.c:982:
+	struct pbe * pbe = NULL;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#588: FILE: kernel/power/swsusp.c:992:
+				pbe = find_pbe_by_index(pagedir_nosave, nr_copy_pages-to_copy);
 				                                                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#589: FILE: kernel/power/swsusp.c:993:
+				BUG_ON(pbe == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pbe"
#589: FILE: kernel/power/swsusp.c:993:
+				BUG_ON(pbe == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#592: FILE: kernel/power/swsusp.c:996:
+				BUG_ON(pbe->orig_address == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#593: FILE: kernel/power/swsusp.c:997:
+				BUG_ON(pbe->address == 0);

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#598: FILE: kernel/power/swsusp.c:1000:
+				to_copy --;
 				        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#675: FILE: kernel/power/swsusp.c:1013:
+	struct pbe * p, * n;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#675: FILE: kernel/power/swsusp.c:1013:
+	struct pbe * p, * n;
 	                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#689: FILE: kernel/power/swsusp.c:1032:
+	struct pbe * p, * n;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#689: FILE: kernel/power/swsusp.c:1032:
+	struct pbe * p, * n;
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#711: FILE: kernel/power/swsusp.c:1107:
+	if ((error = alloc_pagedir(&pagedir_save, nr_copy_pages, 0, 0)) < 0) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#850: FILE: kernel/power/swsusp.c:1397:
+	struct pbe * p, * n;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#850: FILE: kernel/power/swsusp.c:1397:
+	struct pbe * p, * n;
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#857: FILE: kernel/power/swsusp.c:1401:
+	if ((error = check_pagedir())) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#857: FILE: kernel/power/swsusp.c:1401:
+	if ((error = check_pagedir())) {
+		return -ENOMEM;
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#872: FILE: kernel/power/swsusp.c:1409:
+		error = read_one_pbe(p, (void*)p->address, i);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#873: FILE: kernel/power/swsusp.c:1410:
+		if (error) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#905: FILE: kernel/power/swsusp.c:1432:
+		if (error) break;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#906: FILE: kernel/power/swsusp.c:1433:
+		pgdir[PBE_PAGE_NUMS-1].dummy.val = pgdir ? pgdir ->dummy.val : 0;
 		                   ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#906: FILE: kernel/power/swsusp.c:1433:
+		pgdir[PBE_PAGE_NUMS-1].dummy.val = pgdir ? pgdir ->dummy.val : 0;
 		                                                 ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#909: FILE: kernel/power/swsusp.c:1436:
+	BUG_ON(i != n);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#976: FILE: arch/i386/power/swsusp.S:61:
+^I$

WARNING:TYPO_SPELLING: 'speep' may be misspelled - perhaps 'sleep'?
#1060: FILE: arch/x86_64/kernel/suspend_asm.S:77:
+#if 0 /* XXX speep up in qemu */
              ^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1102: FILE: kernel/power/disk.c:90:
+	int i;
+	for (i=0; i<5; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1102: FILE: kernel/power/disk.c:90:
+	for (i=0; i<5; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1102: FILE: kernel/power/disk.c:90:
+	for (i=0; i<5; i++) {
 	           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1107: FILE: kernel/power/disk.c:95:
+		printk("Freeing memory...  ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1110: FILE: kernel/power/disk.c:98:
+			printk("\b%c", p[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1115: FILE: kernel/power/disk.c:103:
+		printk("\bdone (%li pages freed)\n", pages);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214478.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 89 errors, 42 warnings, 34 checks, 1023 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214478.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
