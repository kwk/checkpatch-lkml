WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -r -u dj11-vanilla/drivers/scsi/sg.c linux-2.5.1-dj11/drivers/scsi/sg.c

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#40: FILE: drivers/scsi/sg.c:262:
+    int dev = minor(inode->i_rdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: drivers/scsi/sg.c:348:
+    SCSI_LOG_TIMEOUT(3, printk("sg_release: dev=%d\n", minor(sdp->i_rdev)));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#49: FILE: drivers/scsi/sg.c:348:
+    SCSI_LOG_TIMEOUT(3, printk("sg_release: dev=%d\n", minor(sdp->i_rdev)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: drivers/scsi/sg.c:377:
+                               minor(sdp->i_rdev), (int)count));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: drivers/scsi/sg.c:377:
+                               minor(sdp->i_rdev), (int)count));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: drivers/scsi/sg.c:522:
+                               minor(sdp->i_rdev), (int)count));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/scsi/sg.c:522:
+                               minor(sdp->i_rdev), (int)count));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: drivers/scsi/sg.c:755:
+                               minor(sdp->i_rdev), (int)cmd_in));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/scsi/sg.c:755:
+                               minor(sdp->i_rdev), (int)cmd_in));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: drivers/scsi/sg.c:1035:
+                        minor(sdp->i_rdev), (int)res));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: drivers/scsi/sg.c:1035:
+                        minor(sdp->i_rdev), (int)res));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: drivers/scsi/sg.c:1048:
+                               minor(sdp->i_rdev), mode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/scsi/sg.c:1048:
+                               minor(sdp->i_rdev), mode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/scsi/sg.c:1192:
+    int dev = minor(SRpnt->sr_request.rq_dev);$

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#103: FILE: drivers/scsi/sg.c:1192:
+    int dev = minor(SRpnt->sr_request.rq_dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/scsi/sg.c:1239:
+    SRpnt->sr_request.rq_dev = mk_kdev(0, 0);  /* "sg" _disowns_ request blk */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/scsi/sg.c:1444:
+    sdp->i_rdev = mk_kdev(SCSI_GENERIC_MAJOR, k);$

CHECK:CAMELCASE: Avoid CamelCase: <scsi_CDs>
#146: FILE: drivers/scsi/sr.c:102:
+	if (scsi_CDs[minor(cdi->dev)].device->sector_size > 2048)

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#209: FILE: drivers/scsi/sr.c:266:
+	devm = minor(SCpnt->request.rq_dev);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#220: FILE: drivers/scsi/sr.c:403:
+	if (minor(cdi->dev) >= sr_template.dev_max
+	    || !scsi_CDs[minor(cdi->dev)].device) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#228: FILE: drivers/scsi/sr.c:410:
+	if (!scsi_block_when_processing_errors(scsi_CDs[minor(cdi->dev)].device)) {
 		return -ENXIO;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#256: FILE: drivers/scsi/sr.c:674:
+	Scsi_Device *device = scsi_CDs[minor(cdi->dev)].device;

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#263: FILE: drivers/scsi/sr.c:680:
+	cgc->stat = sr_do_ioctl(minor(cdi->dev), cgc->cmd, cgc->buffer, cgc->buflen, cgc->quiet, cgc->data_direction, cgc->sense);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: drivers/scsi/sr_ioctl.c:210:
+^I            ((scsi_CDs[minor(cdi->dev)].device->lun) << 5) : 0;$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#324: FILE: drivers/scsi/sr_ioctl.c:230:
+	if (0 == test_unit_ready(minor(cdi->dev)))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: drivers/scsi/sr_ioctl.c:283:
+^I            ((scsi_CDs[minor(cdi->dev)].device->lun) << 5) : 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: drivers/scsi/sr_ioctl.c:318:
+^I            ((scsi_CDs[minor(cdi->dev)].device->lun) << 5) : 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#435: FILE: drivers/scsi/st.c:881:
+	STp->rew_at_close = STp->autorew_dev = (minor(inode->i_rdev) & 0x80) == 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#435: FILE: drivers/scsi/st.c:881:
+	STp->rew_at_close = STp->autorew_dev = (minor(inode->i_rdev) & 0x80) == 0;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488046.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 15 warnings, 7 checks, 366 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488046.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
