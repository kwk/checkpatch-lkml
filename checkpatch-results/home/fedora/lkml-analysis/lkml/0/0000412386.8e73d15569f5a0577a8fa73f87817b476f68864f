WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
The attached patch (against 2.5.48) represents the initial migration of MCA to 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	           ChangeSet	1.842   -> 1.843  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	 include/linux/mca.h	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	arch/i386/kernel/mca.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	    drivers/Makefile	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	               (new)	        -> 1.1     drivers/mca/mca-legacy.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	               (new)	        -> 1.1     drivers/mca/mca-proc.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	               (new)	        -> 1.1     drivers/mca/Makefile

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	               (new)	        -> 1.1     drivers/mca/mca-bus.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# 02/11/19	jejb@mulgrave.(none)	1.843

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# MCA sysfs changes

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# These changes make MCA use sysfs.  They export the identical api

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# to the previous MCA functions, but now everything operates in

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# terms of sysfs struct devices.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#77: 
--- a/arch/i386/kernel/mca.c	Tue Nov 19 13:38:51 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#131: FILE: arch/i386/kernel/mca.c:57:
+static unsigned char which_scsi = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#162: FILE: arch/i386/kernel/mca.c:69:
+static void mca_configure_adapter_status(struct mca_device *mca_dev) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#171: FILE: arch/i386/kernel/mca.c:75:
+	if(!mca_dev->pos_id && mca_dev->slot < MCA_MAX_SLOT_NR) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: arch/i386/kernel/mca.c:88:
+	} else if(mca_dev->pos_id != 0xffff) {

ERROR:SPACING: space required before the open parenthesis '('
#198: FILE: arch/i386/kernel/mca.c:100:
+	if((mca_dev->pos_id == 0xffff ||

ERROR:SPACING: space required before the open parenthesis '('
#205: FILE: arch/i386/kernel/mca.c:105:
+			if(mca_dev->pos[j] != 0xff) {

ERROR:SPACING: space required before the open parenthesis '('
#213: FILE: arch/i386/kernel/mca.c:112:
+	if(!(mca_dev->pos[2] & MCA_ENABLED)) {

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#225: FILE: arch/i386/kernel/mca.c:132:
resource))

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#234: FILE: arch/i386/kernel/mca.c:140:
+static int mca_read_and_store_pos(unsigned char *pos) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#238: FILE: arch/i386/kernel/mca.c:144:
+	for(j=0; j<8; j++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#238: FILE: arch/i386/kernel/mca.c:144:
+	for(j=0; j<8; j++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#238: FILE: arch/i386/kernel/mca.c:144:
+	for(j=0; j<8; j++) {

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: arch/i386/kernel/mca.c:145:
+		if((pos[j] = inb_p(MCA_POS_REG(j))) != 0xff) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#239: FILE: arch/i386/kernel/mca.c:145:
+		if((pos[j] = inb_p(MCA_POS_REG(j))) != 0xff) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#247: FILE: arch/i386/kernel/mca.c:153:
+			 * other registers.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#255: FILE: arch/i386/kernel/mca.c:161:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#275: FILE: arch/i386/kernel/mca.c:182:
+	printk(KERN_INFO "Micro Channel bus detected.\n");

ERROR:SPACING: space required before the open parenthesis '('
#280: FILE: arch/i386/kernel/mca.c:184:
+	if(mca_system_init()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#281: FILE: arch/i386/kernel/mca.c:185:
+		printk(KERN_ERR "MCA bus system initialisation failed\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mca_dev)...) over kmalloc(sizeof(struct mca_device)...)
#291: FILE: arch/i386/kernel/mca.c:194:
+	mca_dev = kmalloc(sizeof(struct mca_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open parenthesis '('
#292: FILE: arch/i386/kernel/mca.c:195:
+	if(unlikely(!mca_dev))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mca_dev)...) over kmalloc(sizeof(struct mca_device)...)
#318: FILE: arch/i386/kernel/mca.c:221:
+	mca_dev = kmalloc(sizeof(struct mca_device), GFP_ATOMIC);

ERROR:SPACING: space required before the open parenthesis '('
#319: FILE: arch/i386/kernel/mca.c:222:
+	if(unlikely(!mca_dev))

ERROR:SPACING: space required before the open parenthesis '('
#375: FILE: arch/i386/kernel/mca.c:253:
+	for(i = 0; (which_scsi = mca_builtin_scsi_ports[i]) != 0; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#377: FILE: arch/i386/kernel/mca.c:255:
+		if(mca_read_and_store_pos(pos))

ERROR:SPACING: space required before the open parenthesis '('
#380: FILE: arch/i386/kernel/mca.c:258:
+	if(which_scsi) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mca_dev)...) over kmalloc(sizeof(struct mca_device)...)
#382: FILE: arch/i386/kernel/mca.c:260:
+		mca_dev = kmalloc(sizeof(struct mca_device), GFP_ATOMIC);

ERROR:SPACING: space required before the open parenthesis '('
#383: FILE: arch/i386/kernel/mca.c:261:
+		if(unlikely(!mca_dev))

ERROR:SPACING: space required before the open parenthesis '('
#387: FILE: arch/i386/kernel/mca.c:265:
+		for(j = 0; j < 8; j++)

ERROR:SPACING: space required before the open parenthesis '('
#411: FILE: arch/i386/kernel/mca.c:286:
+		if(!mca_read_and_store_pos(pos))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mca_dev)...) over kmalloc(sizeof(struct mca_device)...)
#414: FILE: arch/i386/kernel/mca.c:289:
+		mca_dev = kmalloc(sizeof(struct mca_device), GFP_ATOMIC);

ERROR:SPACING: space required before the open parenthesis '('
#415: FILE: arch/i386/kernel/mca.c:290:
+		if(unlikely(!mca_dev))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#419: FILE: arch/i386/kernel/mca.c:294:
+		for(j=0; j<8; j++)
 		     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#419: FILE: arch/i386/kernel/mca.c:294:
+		for(j=0; j<8; j++)
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#419: FILE: arch/i386/kernel/mca.c:294:
+		for(j=0; j<8; j++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#420: FILE: arch/i386/kernel/mca.c:295:
+			mca_dev->pos[j]=pos[j];
 			               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#443: FILE: arch/i386/kernel/mca.c:318:
+	printk(KERN_EMERG "Failed memory allocation in MCA setup!\n");

ERROR:SPACING: space required before the open parenthesis '('
#455: FILE: arch/i386/kernel/mca.c:330:
+	if(!mca_dev) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#456: FILE: arch/i386/kernel/mca.c:331:
+		printk(KERN_CRIT "NMI: caused by unknown slot %d\n", slot);

ERROR:SPACING: space required before the open parenthesis '('
#457: FILE: arch/i386/kernel/mca.c:332:
+	} else if(slot < MCA_MAX_SLOT_NR) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1107: FILE: drivers/mca/mca-bus.c:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1114: FILE: drivers/mca/mca-bus.c:8:
+ *
+**----------------------------------------------------------------------------

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1116: FILE: drivers/mca/mca-bus.c:9:
+**  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1128: FILE: drivers/mca/mca-bus.c:21:
+**  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1129: FILE: drivers/mca/mca-bus.c:22:
+**  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1133: FILE: drivers/mca/mca-bus.c:25:
+**----------------------------------------------------------------------------
+ */

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1142: FILE: drivers/mca/mca-bus.c:34:
+#include <asm/io.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1146: FILE: drivers/mca/mca-bus.c:38:
+ * expansion.  None that I know have more than 2 */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1149: FILE: drivers/mca/mca-bus.c:41:
+#define MCA_DEVINFO(i,s) { .pos = i, .name = s }
                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1156: FILE: drivers/mca/mca-bus.c:48:
+static int mca_bus_match (struct device *dev, struct device_driver *drv)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1158: FILE: drivers/mca/mca-bus.c:50:
+	struct mca_device *mca_dev = to_mca_device (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1159: FILE: drivers/mca/mca-bus.c:51:
+	struct mca_driver *mca_drv = to_mca_driver (drv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1179: FILE: drivers/mca/mca-bus.c:71:
+EXPORT_SYMBOL (mca_bus_type);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1181: FILE: drivers/mca/mca-bus.c:73:
+int mca_driver_register (struct mca_driver *mca_drv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1184: FILE: drivers/mca/mca-bus.c:76:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1186: FILE: drivers/mca/mca-bus.c:78:
+	if ((r = driver_register (&mca_drv->driver)) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&mca_drv->driver'
#1186: FILE: drivers/mca/mca-bus.c:78:
+	if ((r = driver_register (&mca_drv->driver)) < 0)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1186: FILE: drivers/mca/mca-bus.c:78:
+	if ((r = driver_register (&mca_drv->driver)) < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1192: FILE: drivers/mca/mca-bus.c:84:
+void mca_driver_unregister (struct mca_driver *mca_drv)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1194: FILE: drivers/mca/mca-bus.c:86:
+	bus_remove_driver (&mca_drv->driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1195: FILE: drivers/mca/mca-bus.c:87:
+	driver_unregister (&mca_drv->driver);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1198: FILE: drivers/mca/mca-bus.c:90:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#1207: FILE: drivers/mca/mca-bus.c:99:
+	if(mca_dev->pos_id < MCA_DUMMY_POS_START)

ERROR:SPACING: space required before the open parenthesis '('
#1213: FILE: drivers/mca/mca-bus.c:105:
+	if(len > off) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1221: FILE: drivers/mca/mca-bus.c:113:
+}
+static ssize_t mca_show_pos(struct device *dev, char *buf, size_t count,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1226: FILE: drivers/mca/mca-bus.c:118:
+	int j, len=0;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1229: FILE: drivers/mca/mca-bus.c:121:
+	for(j=0; j<8; j++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1229: FILE: drivers/mca/mca-bus.c:121:
+	for(j=0; j<8; j++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1229: FILE: drivers/mca/mca-bus.c:121:
+	for(j=0; j<8; j++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1230: FILE: drivers/mca/mca-bus.c:122:
+		len += sprintf(mybuf+len, "%02x ", mca_dev->pos[j]);
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1232: FILE: drivers/mca/mca-bus.c:124:
+	mybuf[len-1] = '\n';
 	         ^

ERROR:SPACING: space required before the open parenthesis '('
#1234: FILE: drivers/mca/mca-bus.c:126:
+	if(len > off) {

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'mca_show_pos_id' to 'id_show'
#1241: FILE: drivers/mca/mca-bus.c:133:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1243: FILE: drivers/mca/mca-bus.c:135:
+static DEVICE_ATTR(id, S_IRUGO, mca_show_pos_id, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'mca_show_pos' to 'pos_show'
#1244: FILE: drivers/mca/mca-bus.c:136:
+static DEVICE_ATTR(pos, S_IRUGO, mca_show_pos, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1244: FILE: drivers/mca/mca-bus.c:136:
+static DEVICE_ATTR(pos, S_IRUGO, mca_show_pos, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1246: FILE: drivers/mca/mca-bus.c:138:
+int __init mca_register_device (int bus, struct mca_device *mca_dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1252: FILE: drivers/mca/mca-bus.c:144:
+	sprintf (mca_dev->dev.bus_id, "%02d:%02X", bus, mca_dev->slot);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1255: FILE: drivers/mca/mca-bus.c:147:
+	 * dma_mask goes */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1268: FILE: drivers/mca/mca-bus.c:160:
+struct mca_bus * __devinit mca_attach_bus(int bus)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mca_root_busses[bus]"
#1272: FILE: drivers/mca/mca-bus.c:164:
+	if (unlikely(mca_root_busses[bus] != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1274: FILE: drivers/mca/mca-bus.c:166:
+		printk(KERN_EMERG "MCA tried to add already existing bus %d\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mca_bus)...) over kmalloc(sizeof(struct mca_bus)...)
#1280: FILE: drivers/mca/mca-bus.c:172:
+	mca_bus = kmalloc(sizeof(struct mca_bus), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1284: FILE: drivers/mca/mca-bus.c:176:
+	sprintf(mca_bus->dev.bus_id,"mca%d",bus);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1284: FILE: drivers/mca/mca-bus.c:176:
+	sprintf(mca_bus->dev.bus_id,"mca%d",bus);
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1285: FILE: drivers/mca/mca-bus.c:177:
+^Isprintf(mca_bus->dev.name,"Host %s MCA Bridge", bus ? "Secondary" : $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1285: FILE: drivers/mca/mca-bus.c:177:
+	sprintf(mca_bus->dev.name,"Host %s MCA Bridge", bus ? "Secondary" : 
 	                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1294: FILE: drivers/mca/mca-bus.c:185:
+int __init mca_system_init (void)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1299: FILE: drivers/mca/mca-bus.c:190:
+EXPORT_SYMBOL (mca_driver_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1299: FILE: drivers/mca/mca-bus.c:190:
+EXPORT_SYMBOL (mca_driver_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1300: FILE: drivers/mca/mca-bus.c:191:
+EXPORT_SYMBOL (mca_driver_unregister);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1300: FILE: drivers/mca/mca-bus.c:191:
+EXPORT_SYMBOL (mca_driver_unregister);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1305: FILE: drivers/mca/mca-legacy.c:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1314: FILE: drivers/mca/mca-legacy.c:10:
+ *
+**----------------------------------------------------------------------------

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1316: FILE: drivers/mca/mca-legacy.c:11:
+**  $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1328: FILE: drivers/mca/mca-legacy.c:23:
+**  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1329: FILE: drivers/mca/mca-legacy.c:24:
+**  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1333: FILE: drivers/mca/mca-legacy.c:27:
+**----------------------------------------------------------------------------
+ */

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1338: FILE: drivers/mca/mca-legacy.c:32:
+#include <asm/io.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1349: FILE: drivers/mca/mca-legacy.c:43:
+ * or equal to the required slot with a matching id */

ERROR:SPACING: space required before the open parenthesis '('
#1355: FILE: drivers/mca/mca-legacy.c:49:
+	if(mca_dev->pos_id != info->id)

ERROR:SPACING: space required before the open parenthesis '('
#1358: FILE: drivers/mca/mca-legacy.c:52:
+	if(mca_dev->slot < info->slot)

ERROR:SPACING: space required before the open parenthesis '('
#1361: FILE: drivers/mca/mca-legacy.c:55:
+	if(!info->mca_dev || info->mca_dev->slot >= mca_dev->slot)

ERROR:SPACING: space required before the open parenthesis '('
#1384: FILE: drivers/mca/mca-legacy.c:78:
+	if(id == 0xffff)

ERROR:SPACING: space required before the open parenthesis '('
#1391: FILE: drivers/mca/mca-legacy.c:85:
+	for(;;) {

ERROR:SPACING: space required before the open parenthesis '('
#1394: FILE: drivers/mca/mca-legacy.c:88:
+		if(info.mca_dev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info.mca_dev"
#1394: FILE: drivers/mca/mca-legacy.c:88:
+		if(info.mca_dev == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#1397: FILE: drivers/mca/mca-legacy.c:91:
+		if(info.mca_dev->status != MCA_ADAPTER_DISABLED)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1401: FILE: drivers/mca/mca-legacy.c:95:
+		 * again, excluding the slot we just found */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1406: FILE: drivers/mca/mca-legacy.c:100:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1432: FILE: drivers/mca/mca-legacy.c:126:
+	if(id == 0xffff)

ERROR:SPACING: space required before the open parenthesis '('
#1439: FILE: drivers/mca/mca-legacy.c:133:
+	for(;;) {

ERROR:SPACING: space required before the open parenthesis '('
#1442: FILE: drivers/mca/mca-legacy.c:136:
+		if(info.mca_dev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info.mca_dev"
#1442: FILE: drivers/mca/mca-legacy.c:136:
+		if(info.mca_dev == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#1445: FILE: drivers/mca/mca-legacy.c:139:
+		if(info.mca_dev->status != MCA_ADAPTER_DISABLED

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1446: FILE: drivers/mca/mca-legacy.c:140:
+		if(info.mca_dev->status != MCA_ADAPTER_DISABLED
+		   && !info.mca_dev->driver_loaded)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1451: FILE: drivers/mca/mca-legacy.c:145:
+		 * found */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1456: FILE: drivers/mca/mca-legacy.c:150:
+^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1464: FILE: drivers/mca/mca-legacy.c:158:
+^Istruct mca_device ^I*mca_dev;$

ERROR:SPACING: space required before the open parenthesis '('
#1472: FILE: drivers/mca/mca-legacy.c:166:
+	if(mca_dev->slot == info->slot)

ERROR:SPACING: space required before the open parenthesis '('
#1504: FILE: drivers/mca/mca-legacy.c:198:
+	if(!mca_dev)

ERROR:SPACING: space required before the open parenthesis '('
#1507: FILE: drivers/mca/mca-legacy.c:201:
+	if(reg < 0 || reg >= 8)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1514: FILE: drivers/mca/mca-legacy.c:208:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#1532: FILE: drivers/mca/mca-legacy.c:226:
+	if(!mca_dev)

ERROR:SPACING: space required before the open parenthesis '('
#1535: FILE: drivers/mca/mca-legacy.c:229:
+	if(reg < 0 || reg >= 8)

ERROR:SPACING: space required before the open parenthesis '('
#1539: FILE: drivers/mca/mca-legacy.c:233:
+	if(mca_dev->pos_register) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1548: FILE: drivers/mca/mca-legacy.c:242:
+	} else {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1555: FILE: drivers/mca/mca-legacy.c:249:
+		outb_p(0x8|(mca_dev->slot & 0xf), MCA_ADAPTER_SETUP_REG);
 		          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1566: FILE: drivers/mca/mca-legacy.c:260:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1566: FILE: drivers/mca/mca-legacy.c:260:
+
+		

ERROR:SPACING: space required before the open parenthesis '('
#1596: FILE: drivers/mca/mca-legacy.c:290:
+	if(!mca_dev)

ERROR:SPACING: space required before the open parenthesis '('
#1599: FILE: drivers/mca/mca-legacy.c:293:
+	if(reg < 0 || reg >= 8)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1610: FILE: drivers/mca/mca-legacy.c:304:
+	outb_p(0x8|(slot&0xf), MCA_ADAPTER_SETUP_REG);
 	          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1610: FILE: drivers/mca/mca-legacy.c:304:
+	outb_p(0x8|(slot&0xf), MCA_ADAPTER_SETUP_REG);
 	                ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1632: FILE: drivers/mca/mca-legacy.c:326:
+void mca_set_adapter_name(int slot, char* name)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#1636: FILE: drivers/mca/mca-legacy.c:330:
+	if(!mca_dev)

ERROR:SPACING: space required before the open parenthesis '('
#1656: FILE: drivers/mca/mca-legacy.c:350:
+	if(!mca_dev)

ERROR:SPACING: space required before the open parenthesis '('
#1674: FILE: drivers/mca/mca-legacy.c:368:
+	if(!mca_dev)

ERROR:SPACING: space required before the open parenthesis '('
#1696: FILE: drivers/mca/mca-legacy.c:390:
+	if(!mca_dev)

ERROR:SPACING: space required before the open parenthesis '('
#1700: FILE: drivers/mca/mca-legacy.c:394:
+	if(mca_dev->driver_loaded)

ERROR:SPACING: space required before the open parenthesis '('
#1720: FILE: drivers/mca/mca-legacy.c:414:
+	if(!mca_dev)

ERROR:SPACING: space required before the open parenthesis '('
#1739: FILE: drivers/mca/mca-legacy.c:433:
+	if(!mca_dev)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1743: FILE: drivers/mca/mca-legacy.c:437:
+	return mca_dev->status == MCA_ADAPTER_NORMAL
+		|| mca_dev->status == MCA_ADAPTER_DISABLED;

ERROR:SPACING: space required before the open parenthesis '('
#1759: FILE: drivers/mca/mca-legacy.c:453:
+	if(!mca_dev)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1768: FILE: drivers/mca/mca-proc.c:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1779: FILE: drivers/mca/mca-proc.c:12:
+ *
+**----------------------------------------------------------------------------

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1781: FILE: drivers/mca/mca-proc.c:13:
+**  $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1793: FILE: drivers/mca/mca-proc.c:25:
+**  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1794: FILE: drivers/mca/mca-proc.c:26:
+**  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1798: FILE: drivers/mca/mca-proc.c:29:
+**----------------------------------------------------------------------------
+ */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1804: FILE: drivers/mca/mca-proc.c:35:
+static int get_mca_info_helper(struct mca_device *mca_dev, char *page, int $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1809: FILE: drivers/mca/mca-proc.c:39:
+	for(j=0; j<8; j++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1809: FILE: drivers/mca/mca-proc.c:39:
+	for(j=0; j<8; j++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1809: FILE: drivers/mca/mca-proc.c:39:
+	for(j=0; j<8; j++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1810: FILE: drivers/mca/mca-proc.c:40:
+		len += sprintf(page+len, "%02x ",
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1812: FILE: drivers/mca/mca-proc.c:42:
+	len += sprintf(page+len, " %s\n", mca_dev ? mca_dev->dev.name : "");
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1821: FILE: drivers/mca/mca-proc.c:51:
+	if(MCA_bus) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1825: FILE: drivers/mca/mca-proc.c:55:
+		for(i=0; i<MCA_MAX_SLOT_NR; i++) {
 		     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1825: FILE: drivers/mca/mca-proc.c:55:
+		for(i=0; i<MCA_MAX_SLOT_NR; i++) {
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#1825: FILE: drivers/mca/mca-proc.c:55:
+		for(i=0; i<MCA_MAX_SLOT_NR; i++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1828: FILE: drivers/mca/mca-proc.c:58:
+			len += sprintf(page+len, "Slot %d: ", i+1);
 			                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1828: FILE: drivers/mca/mca-proc.c:58:
+			len += sprintf(page+len, "Slot %d: ", i+1);
 			                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1835: FILE: drivers/mca/mca-proc.c:65:
+		len += sprintf(page+len, "Video : ");
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1841: FILE: drivers/mca/mca-proc.c:71:
+		len += sprintf(page+len, "SCSI  : ");
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1847: FILE: drivers/mca/mca-proc.c:77:
+		len += sprintf(page+len, "Planar: ");
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1855: FILE: drivers/mca/mca-proc.c:85:
+	if (len <= off+count) *eof = 1;
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1855: FILE: drivers/mca/mca-proc.c:85:
+	if (len <= off+count) *eof = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1858: FILE: drivers/mca/mca-proc.c:88:
+	if (len>count) len = count;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1858: FILE: drivers/mca/mca-proc.c:88:
+	if (len>count) len = count;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1859: FILE: drivers/mca/mca-proc.c:89:
+	if (len<0) len = 0;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1859: FILE: drivers/mca/mca-proc.c:89:
+	if (len<0) len = 0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1865: FILE: drivers/mca/mca-proc.c:95:
+static int mca_default_procfn(char* buf, struct mca_device *mca_dev)

ERROR:SPACING: space required before the open parenthesis '('
#1872: FILE: drivers/mca/mca-proc.c:102:
+	if(slot < MCA_MAX_SLOT_NR) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1872: FILE: drivers/mca/mca-proc.c:102:
+	if(slot < MCA_MAX_SLOT_NR) {
[...]
+	} else if(slot == MCA_INTEGSCSI) {
[...]
+	} else if(slot == MCA_INTEGVIDEO) {
[...]
+	} else if(slot == MCA_MOTHERBOARD) {
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1873: FILE: drivers/mca/mca-proc.c:103:
+		len += sprintf(buf+len, "Slot: %d\n", slot+1);
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1873: FILE: drivers/mca/mca-proc.c:103:
+		len += sprintf(buf+len, "Slot: %d\n", slot+1);
 		                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#1874: FILE: drivers/mca/mca-proc.c:104:
+	} else if(slot == MCA_INTEGSCSI) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1875: FILE: drivers/mca/mca-proc.c:105:
+		len += sprintf(buf+len, "Integrated SCSI Adapter\n");
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1876: FILE: drivers/mca/mca-proc.c:106:
+	} else if(slot == MCA_INTEGVIDEO) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1877: FILE: drivers/mca/mca-proc.c:107:
+		len += sprintf(buf+len, "Integrated Video Adapter\n");
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1878: FILE: drivers/mca/mca-proc.c:108:
+	} else if(slot == MCA_MOTHERBOARD) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1879: FILE: drivers/mca/mca-proc.c:109:
+		len += sprintf(buf+len, "Motherboard\n");
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1881: FILE: drivers/mca/mca-proc.c:111:
+	if(mca_dev->dev.name[0]) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1882: FILE: drivers/mca/mca-proc.c:112:
+	if(mca_dev->dev.name[0]) {
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1885: FILE: drivers/mca/mca-proc.c:115:
+		len += sprintf(buf+len, "Adapter Name: %s\n",
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1888: FILE: drivers/mca/mca-proc.c:118:
+		len += sprintf(buf+len, "Adapter Name: Unknown\n");
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1890: FILE: drivers/mca/mca-proc.c:120:
+	len += sprintf(buf+len, "Id: %02x%02x\n",
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1892: FILE: drivers/mca/mca-proc.c:122:
+	len += sprintf(buf+len, "Enabled: %s\nPOS: ",
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1894: FILE: drivers/mca/mca-proc.c:124:
+	for(i=0; i<8; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1894: FILE: drivers/mca/mca-proc.c:124:
+	for(i=0; i<8; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1894: FILE: drivers/mca/mca-proc.c:124:
+	for(i=0; i<8; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1894: FILE: drivers/mca/mca-proc.c:124:
+	for(i=0; i<8; i++) {
+		len += sprintf(buf+len, "%02x ", mca_dev->pos[i]);
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1895: FILE: drivers/mca/mca-proc.c:125:
+		len += sprintf(buf+len, "%02x ", mca_dev->pos[i]);
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1897: FILE: drivers/mca/mca-proc.c:127:
+	len += sprintf(buf+len, "\nDriver Installed: %s",
 	                  ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1905: FILE: drivers/mca/mca-proc.c:135:
+static int get_mca_machine_info(char* page, char **start, off_t off,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1906: FILE: drivers/mca/mca-proc.c:136:
+static int get_mca_machine_info(char* page, char **start, off_t off,
+				 int count, int *eof, void *data)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1910: FILE: drivers/mca/mca-proc.c:140:
+	len += sprintf(page+len, "Model Id: 0x%x\n", machine_id);
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1911: FILE: drivers/mca/mca-proc.c:141:
+	len += sprintf(page+len, "Submodel Id: 0x%x\n", machine_submodel_id);
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1912: FILE: drivers/mca/mca-proc.c:142:
+	len += sprintf(page+len, "BIOS Revision: 0x%x\n", BIOS_revision);
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1914: FILE: drivers/mca/mca-proc.c:144:
+	if (len <= off+count) *eof = 1;
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1914: FILE: drivers/mca/mca-proc.c:144:
+	if (len <= off+count) *eof = 1;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1917: FILE: drivers/mca/mca-proc.c:147:
+	if (len>count) len = count;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1917: FILE: drivers/mca/mca-proc.c:147:
+	if (len>count) len = count;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1918: FILE: drivers/mca/mca-proc.c:148:
+	if (len<0) len = 0;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1918: FILE: drivers/mca/mca-proc.c:148:
+	if (len<0) len = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1923: FILE: drivers/mca/mca-proc.c:153:
+static int mca_read_proc(char *page, char **start, off_t off,
+				 int count, int *eof, void *data)

ERROR:SPACING: space required before the open parenthesis '('
#1934: FILE: drivers/mca/mca-proc.c:164:
+	if(mca_dev->procfn) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1935: FILE: drivers/mca/mca-proc.c:165:
+		len += mca_dev->procfn(page+len, mca_dev->slot,
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1938: FILE: drivers/mca/mca-proc.c:168:
+	if (len <= off+count) *eof = 1;
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1938: FILE: drivers/mca/mca-proc.c:168:
+	if (len <= off+count) *eof = 1;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1941: FILE: drivers/mca/mca-proc.c:171:
+	if (len>count) len = count;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1941: FILE: drivers/mca/mca-proc.c:171:
+	if (len>count) len = count;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1942: FILE: drivers/mca/mca-proc.c:172:
+	if (len<0) len = 0;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1942: FILE: drivers/mca/mca-proc.c:172:
+	if (len<0) len = 0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1952: FILE: drivers/mca/mca-proc.c:182:
+	struct proc_dir_entry* node = NULL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1956: FILE: drivers/mca/mca-proc.c:186:
+	create_proc_read_entry("pos",0,proc_mca,get_mca_info,NULL);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1956: FILE: drivers/mca/mca-proc.c:186:
+	create_proc_read_entry("pos",0,proc_mca,get_mca_info,NULL);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1956: FILE: drivers/mca/mca-proc.c:186:
+	create_proc_read_entry("pos",0,proc_mca,get_mca_info,NULL);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1956: FILE: drivers/mca/mca-proc.c:186:
+	create_proc_read_entry("pos",0,proc_mca,get_mca_info,NULL);
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1957: FILE: drivers/mca/mca-proc.c:187:
+	create_proc_read_entry("machine",0,proc_mca,get_mca_machine_info,NULL);
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1957: FILE: drivers/mca/mca-proc.c:187:
+	create_proc_read_entry("machine",0,proc_mca,get_mca_machine_info,NULL);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1957: FILE: drivers/mca/mca-proc.c:187:
+	create_proc_read_entry("machine",0,proc_mca,get_mca_machine_info,NULL);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1957: FILE: drivers/mca/mca-proc.c:187:
+	create_proc_read_entry("machine",0,proc_mca,get_mca_machine_info,NULL);
 	                                                                ^

ERROR:SPACING: space required before the open parenthesis '('
#1961: FILE: drivers/mca/mca-proc.c:191:
+	for(i = 0; i < MCA_NUMADAPTERS; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#1963: FILE: drivers/mca/mca-proc.c:193:
+		if(!mca_dev)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1968: FILE: drivers/mca/mca-proc.c:198:
+		if(i < MCA_MAX_SLOT_NR) sprintf(mca_dev->procname,"slot%d", i+1);
 		                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1968: FILE: drivers/mca/mca-proc.c:198:
+		if(i < MCA_MAX_SLOT_NR) sprintf(mca_dev->procname,"slot%d", i+1);
 		                                                             ^

ERROR:SPACING: space required before the open parenthesis '('
#1968: FILE: drivers/mca/mca-proc.c:198:
+		if(i < MCA_MAX_SLOT_NR) sprintf(mca_dev->procname,"slot%d", i+1);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1968: FILE: drivers/mca/mca-proc.c:198:
+		if(i < MCA_MAX_SLOT_NR) sprintf(mca_dev->procname,"slot%d", i+1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1969: FILE: drivers/mca/mca-proc.c:199:
+		else if(i == MCA_INTEGVIDEO) sprintf(mca_dev->procname,"video");
 		                                                      ^

ERROR:SPACING: space required before the open parenthesis '('
#1969: FILE: drivers/mca/mca-proc.c:199:
+		else if(i == MCA_INTEGVIDEO) sprintf(mca_dev->procname,"video");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1969: FILE: drivers/mca/mca-proc.c:199:
+		else if(i == MCA_INTEGVIDEO) sprintf(mca_dev->procname,"video");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1970: FILE: drivers/mca/mca-proc.c:200:
+		else if(i == MCA_INTEGSCSI) sprintf(mca_dev->procname,"scsi");
 		                                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#1970: FILE: drivers/mca/mca-proc.c:200:
+		else if(i == MCA_INTEGSCSI) sprintf(mca_dev->procname,"scsi");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1970: FILE: drivers/mca/mca-proc.c:200:
+		else if(i == MCA_INTEGSCSI) sprintf(mca_dev->procname,"scsi");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1971: FILE: drivers/mca/mca-proc.c:201:
+		else if(i == MCA_MOTHERBOARD) sprintf(mca_dev->procname,"planar");
 		                                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#1971: FILE: drivers/mca/mca-proc.c:201:
+		else if(i == MCA_MOTHERBOARD) sprintf(mca_dev->procname,"planar");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1971: FILE: drivers/mca/mca-proc.c:201:
+		else if(i == MCA_MOTHERBOARD) sprintf(mca_dev->procname,"planar");

ERROR:SPACING: space required before the open parenthesis '('
#1973: FILE: drivers/mca/mca-proc.c:203:
+		if(!mca_isadapter(i)) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1973: FILE: drivers/mca/mca-proc.c:203:
+		if(!mca_isadapter(i)) continue;

ERROR:SPACING: space required before the open parenthesis '('
#1978: FILE: drivers/mca/mca-proc.c:208:
+		if(node == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node"
#1978: FILE: drivers/mca/mca-proc.c:208:
+		if(node == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1979: FILE: drivers/mca/mca-proc.c:209:
+			printk("Failed to allocate memory for MCA proc-entries!");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2004: FILE: drivers/mca/mca-proc.c:234:
+void mca_set_adapter_procfn(int slot, MCA_ProcFn procfn, void* proc_dev)

ERROR:SPACING: space required before the open parenthesis '('
#2008: FILE: drivers/mca/mca-proc.c:238:
+	if(!mca_dev)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2024: FILE: include/linux/mca.h:11:
+ * are sorted out */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2035: FILE: include/linux/mca.h:28:
+ * I know have at most two */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2049: FILE: include/linux/mca.h:51:
+#define MCA_INTEGSCSI_POS	(MCA_DUMMY_POS_START+1)
                          	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2050: FILE: include/linux/mca.h:52:
+#define MCA_INTEGVIDEO_POS	(MCA_DUMMY_POS_START+2)
                           	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2051: FILE: include/linux/mca.h:53:
+#define MCA_MOTHERBOARD_POS	(MCA_DUMMY_POS_START+3)
                            	                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2053: FILE: include/linux/mca.h:55:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2058: FILE: include/linux/mca.h:60:
+#define MCA_POS_REG(n)			(0x100+(n))
                       			      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2090: FILE: include/linux/mca.h:142:
+};
+#define to_mca_bus(mdev) container_of(mdev, struct mca_bus, dev)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2102: FILE: include/linux/mca.h:154:
+	 * register value to use for setup cycles */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2104: FILE: include/linux/mca.h:156:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2116: FILE: include/linux/mca.h:168:
+};
+#define to_mca_device(mdev) container_of(mdev, struct mca_device, dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2122: FILE: include/linux/mca.h:174:
+#define to_mca_driver(mdriver) container_of(mdriver, struct mca_driver, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2122: FILE: include/linux/mca.h:174:
+};
+#define to_mca_driver(mdriver) container_of(mdriver, struct mca_driver, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2125: FILE: include/linux/mca.h:176:
+extern int mca_driver_register(struct mca_driver *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mca_driver *' should also have an identifier name
#2125: FILE: include/linux/mca.h:176:
+extern int mca_driver_register(struct mca_driver *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2126: FILE: include/linux/mca.h:177:
+extern int mca_register_device(int bus, struct mca_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mca_device *' should also have an identifier name
#2126: FILE: include/linux/mca.h:177:
+extern int mca_register_device(int bus, struct mca_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2127: FILE: include/linux/mca.h:178:
+extern struct mca_device *mca_find_device_by_slot(int slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2128: FILE: include/linux/mca.h:179:
+extern int mca_system_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2129: FILE: include/linux/mca.h:180:
+extern struct mca_bus *mca_attach_bus(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2129: FILE: include/linux/mca.h:180:
+extern struct mca_bus *mca_attach_bus(int);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2131: FILE: include/linux/mca.h:182:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2137: FILE: include/linux/mca.h:188:
+extern void mca_do_proc_init(void);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2138: FILE: include/linux/mca.h:189:
+extern void mca_set_adapter_procfn(int slot, MCA_ProcFn, void* dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2138: FILE: include/linux/mca.h:189:
+extern void mca_set_adapter_procfn(int slot, MCA_ProcFn, void* dev);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'MCA_ProcFn' should also have an identifier name
#2138: FILE: include/linux/mca.h:189:
+extern void mca_set_adapter_procfn(int slot, MCA_ProcFn, void* dev);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2144: FILE: include/linux/mca.h:195:
+static inline void mca_set_adapter_procfn(int slot, MCA_ProcFn *fn, void* dev)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412386.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 151 errors, 78 warnings, 68 checks, 1431 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412386.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
