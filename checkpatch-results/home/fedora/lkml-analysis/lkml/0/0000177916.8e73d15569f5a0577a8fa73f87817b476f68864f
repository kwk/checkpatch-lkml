WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#31: 
compression, this is especially usefull for embedded systems or when
                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'orginal' may be misspelled - perhaps 'original'?
#37: 
orginal misc.c  :-)
^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#72: FILE: arch/i386/Kconfig:1239:
+choice
+       prompt "Kernel compression format"
+       depends on EXPERIMENTAL
+       default KERNEL_GZIP
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#82: FILE: arch/i386/Kconfig:1249:
+         Choosing Gzip here, makes the kernel image beeing compressed
                                                     ^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#89: FILE: arch/i386/Kconfig:1256:
+config KERNEL_LZMA
+       bool "Compress kernel image using lzma (EXPERIMENTAL)"
+       depends on EXPERIMENTAL
+       help
+         The linux kernel is a self-extracting executable.
+
+         Choosing lzma here, makes the kernel beeing compressed using
+         lzma.
+

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#95: FILE: arch/i386/Kconfig:1262:
+         Choosing lzma here, makes the kernel beeing compressed using
                                               ^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#106: FILE: arch/i386/boot/compressed/misc_lzma.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: arch/i386/boot/compressed/misc_lzma.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#122: FILE: arch/i386/boot/compressed/misc_lzma.c:17:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#131: FILE: arch/i386/boot/compressed/misc_lzma.c:26:
+static void* memcpy(void *, __const void *, size_t);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: arch/i386/boot/compressed/misc_lzma.c:28:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/i386/boot/compressed/misc_lzma.c:28:
+  $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#143: FILE: arch/i386/boot/compressed/misc_lzma.c:38:
+#define RM_SCREEN_INFO (*(struct screen_info *)(real_mode+0))
                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#145: FILE: arch/i386/boot/compressed/misc_lzma.c:40:
+extern char input_data[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#146: FILE: arch/i386/boot/compressed/misc_lzma.c:41:
+extern int input_len;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#148: FILE: arch/i386/boot/compressed/misc_lzma.c:43:
+static long bytes_out = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#155: FILE: arch/i386/boot/compressed/misc_lzma.c:50:
+extern int end;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#162: FILE: arch/i386/boot/compressed/misc_lzma.c:57:
+static int high_loaded =0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#162: FILE: arch/i386/boot/compressed/misc_lzma.c:57:
+static int high_loaded =0;
                        ^

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#170: FILE: arch/i386/boot/compressed/misc_lzma.c:65:
+static void * xquad_portio = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: arch/i386/boot/compressed/misc_lzma.c:65:
+static void * xquad_portio = NULL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: arch/i386/boot/compressed/misc_lzma.c:72:
+	memcpy ( vidmem, vidmem + cols * 2, ( lines - 1 ) * cols * 2 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#177: FILE: arch/i386/boot/compressed/misc_lzma.c:72:
+	memcpy ( vidmem, vidmem + cols * 2, ( lines - 1 ) * cols * 2 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#177: FILE: arch/i386/boot/compressed/misc_lzma.c:72:
+	memcpy ( vidmem, vidmem + cols * 2, ( lines - 1 ) * cols * 2 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#178: FILE: arch/i386/boot/compressed/misc_lzma.c:73:
+	for ( i = ( lines - 1 ) * cols * 2; i < lines * cols * 2; i += 2 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#178: FILE: arch/i386/boot/compressed/misc_lzma.c:73:
+	for ( i = ( lines - 1 ) * cols * 2; i < lines * cols * 2; i += 2 )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: arch/i386/boot/compressed/misc_lzma.c:79:
+	int x,y,pos;
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: arch/i386/boot/compressed/misc_lzma.c:79:
+	int x,y,pos;
 	       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#190: FILE: arch/i386/boot/compressed/misc_lzma.c:85:
+	while ( ( c = *s++ ) != '\0' ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#190: FILE: arch/i386/boot/compressed/misc_lzma.c:85:
+	while ( ( c = *s++ ) != '\0' ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#191: FILE: arch/i386/boot/compressed/misc_lzma.c:86:
+		if ( c == '\n' ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#191: FILE: arch/i386/boot/compressed/misc_lzma.c:86:
+		if ( c == '\n' ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#193: FILE: arch/i386/boot/compressed/misc_lzma.c:88:
+			if ( ++y >= lines ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#193: FILE: arch/i386/boot/compressed/misc_lzma.c:88:
+			if ( ++y >= lines ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: arch/i386/boot/compressed/misc_lzma.c:93:
+^I^I^Ividmem [ ( x + cols * y ) * 2 ] = c; $

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#198: FILE: arch/i386/boot/compressed/misc_lzma.c:93:
+			vidmem [ ( x + cols * y ) * 2 ] = c; 

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: space prohibited after that open square bracket '['
#198: FILE: arch/i386/boot/compressed/misc_lzma.c:93:
+			vidmem [ ( x + cols * y ) * 2 ] = c; 

ERROR:SPACING: space prohibited before that close square bracket ']'
#198: FILE: arch/i386/boot/compressed/misc_lzma.c:93:
+			vidmem [ ( x + cols * y ) * 2 ] = c; 

ERROR:SPACING: space prohibited after that open parenthesis '('
#198: FILE: arch/i386/boot/compressed/misc_lzma.c:93:
+			vidmem [ ( x + cols * y ) * 2 ] = c; 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#198: FILE: arch/i386/boot/compressed/misc_lzma.c:93:
+			vidmem [ ( x + cols * y ) * 2 ] = c; 

ERROR:SPACING: space prohibited after that open parenthesis '('
#199: FILE: arch/i386/boot/compressed/misc_lzma.c:94:
+			if ( ++x >= cols ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#199: FILE: arch/i386/boot/compressed/misc_lzma.c:94:
+			if ( ++x >= cols ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#201: FILE: arch/i386/boot/compressed/misc_lzma.c:96:
+				if ( ++y >= lines ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#201: FILE: arch/i386/boot/compressed/misc_lzma.c:96:
+				if ( ++y >= lines ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#214: FILE: arch/i386/boot/compressed/misc_lzma.c:109:
+	outb_p(0xff & (pos >> 9), vidport+1);
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#216: FILE: arch/i386/boot/compressed/misc_lzma.c:111:
+	outb_p(0xff & (pos >> 1), vidport+1);
 	                                 ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#219: FILE: arch/i386/boot/compressed/misc_lzma.c:114:
+static void* memcpy(void* __dest, __const void* __src,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#219: FILE: arch/i386/boot/compressed/misc_lzma.c:114:
+static void* memcpy(void* __dest, __const void* __src,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#219: FILE: arch/i386/boot/compressed/misc_lzma.c:114:
+static void* memcpy(void* __dest, __const void* __src,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: arch/i386/boot/compressed/misc_lzma.c:115:
+static void* memcpy(void* __dest, __const void* __src,
+			    size_t __n)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#225: FILE: arch/i386/boot/compressed/misc_lzma.c:120:
+	for (i=0;i<__n;i++) d[i] = s[i];
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#225: FILE: arch/i386/boot/compressed/misc_lzma.c:120:
+	for (i=0;i<__n;i++) d[i] = s[i];
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#225: FILE: arch/i386/boot/compressed/misc_lzma.c:120:
+	for (i=0;i<__n;i++) d[i] = s[i];
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#225: FILE: arch/i386/boot/compressed/misc_lzma.c:120:
+	for (i=0;i<__n;i++) d[i] = s[i];
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#225: FILE: arch/i386/boot/compressed/misc_lzma.c:120:
+	for (i=0;i<__n;i++) d[i] = s[i];

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: arch/i386/boot/compressed/misc_lzma.c:130:
+	while(1);	/* Halt */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#235: FILE: arch/i386/boot/compressed/misc_lzma.c:130:
+	while(1);	/* Halt */

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#240: FILE: arch/i386/boot/compressed/misc_lzma.c:135:
+long user_stack [STACK_SIZE];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#243: FILE: arch/i386/boot/compressed/misc_lzma.c:138:
+	long * a;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#245: FILE: arch/i386/boot/compressed/misc_lzma.c:140:
+	} stack_start = { & user_stack [STACK_SIZE] , __BOOT_DS };

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#245: FILE: arch/i386/boot/compressed/misc_lzma.c:140:
+	} stack_start = { & user_stack [STACK_SIZE] , __BOOT_DS };
 	                  ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#245: FILE: arch/i386/boot/compressed/misc_lzma.c:140:
+	} stack_start = { & user_stack [STACK_SIZE] , __BOOT_DS };
 	                                            ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#250: FILE: arch/i386/boot/compressed/misc_lzma.c:145:
+	if (RM_EXT_MEM_K < 1024) error("Less than 2MB of memory");

WARNING:LONG_LINE_STRING: line length of 113 exceeds 100 columns
#252: FILE: arch/i386/boot/compressed/misc_lzma.c:147:
+	if ((RM_ALT_MEM_K > RM_EXT_MEM_K ? RM_ALT_MEM_K : RM_EXT_MEM_K) < 1024) error("Less than 2MB of memory");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#252: FILE: arch/i386/boot/compressed/misc_lzma.c:147:
+	if ((RM_ALT_MEM_K > RM_EXT_MEM_K ? RM_ALT_MEM_K : RM_EXT_MEM_K) < 1024) error("Less than 2MB of memory");

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#252: FILE: arch/i386/boot/compressed/misc_lzma.c:147:
+	if ((RM_ALT_MEM_K > RM_EXT_MEM_K ? RM_ALT_MEM_K : RM_EXT_MEM_K) < 1024) error("Less than 2MB of memory");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#266: FILE: arch/i386/boot/compressed/misc_lzma.c:161:
+	if (RM_EXT_MEM_K < (3*1024)) error("Less than 4MB of memory");
 	                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#266: FILE: arch/i386/boot/compressed/misc_lzma.c:161:
+	if (RM_EXT_MEM_K < (3*1024)) error("Less than 4MB of memory");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#268: FILE: arch/i386/boot/compressed/misc_lzma.c:163:
+	if ((RM_ALT_MEM_K > RM_EXT_MEM_K ? RM_ALT_MEM_K : RM_EXT_MEM_K) <

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#269: FILE: arch/i386/boot/compressed/misc_lzma.c:164:
+			(3*1024))
 			  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: arch/i386/boot/compressed/misc_lzma.c:166:
+#endif^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#277: FILE: arch/i386/boot/compressed/misc_lzma.c:172:
+	if ( (0x100000 + low_buffer_size) > ((unsigned long)high_buffer_start)) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#313: FILE: arch/i386/boot/compressed/misc_lzma.c:208:
+	unsigned char* workspace;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: arch/i386/boot/compressed/misc_lzma.c:211:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#317: FILE: arch/i386/boot/compressed/misc_lzma.c:212:
+	for (i=0;i<=5;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#317: FILE: arch/i386/boot/compressed/misc_lzma.c:212:
+	for (i=0;i<=5;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#317: FILE: arch/i386/boot/compressed/misc_lzma.c:212:
+	for (i=0;i<=5;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#317: FILE: arch/i386/boot/compressed/misc_lzma.c:212:
+	for (i=0;i<=5;i++) {
 	             ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#317: FILE: arch/i386/boot/compressed/misc_lzma.c:212:
+	for (i=0;i<=5;i++) {
+		properties[i] = (unsigned char)input_data[i];
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: arch/i386/boot/compressed/misc_lzma.c:215:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#322: FILE: arch/i386/boot/compressed/misc_lzma.c:217:
+	for (i = 0; i < 4; i++) {
+		uncompressed_size += (unsigned char)input_data[5+i] << (i * 8);
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#323: FILE: arch/i386/boot/compressed/misc_lzma.c:218:
+		uncompressed_size += (unsigned char)input_data[5+i] << (i * 8);
 		                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: arch/i386/boot/compressed/misc_lzma.c:220:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#327: FILE: arch/i386/boot/compressed/misc_lzma.c:222:
+	if (prop0 >= (9*5*5)) {
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#327: FILE: arch/i386/boot/compressed/misc_lzma.c:222:
+	if (prop0 >= (9*5*5)) {
 	                 ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#327: FILE: arch/i386/boot/compressed/misc_lzma.c:222:
+	if (prop0 >= (9*5*5)) {
+		error("Properties error");
+	}

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#330: FILE: arch/i386/boot/compressed/misc_lzma.c:225:
+	for (pb = 0; prop0 >= (9 * 5); pb++, prop0 -= (9 * 5));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#331: FILE: arch/i386/boot/compressed/misc_lzma.c:226:
+	for (lp = 0; prop0 >= 9; lp++, prop0 -= 9);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#334: FILE: arch/i386/boot/compressed/misc_lzma.c:229:
+	workspace_size = (LZMA_BASE_SIZE + (LZMA_LIT_SIZE << (lc + lp)))* sizeof(CProb);
 	                                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <CProb>
#334: FILE: arch/i386/boot/compressed/misc_lzma.c:229:
+	workspace_size = (LZMA_BASE_SIZE + (LZMA_LIT_SIZE << (lc + lp)))* sizeof(CProb);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#337: FILE: arch/i386/boot/compressed/misc_lzma.c:232:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: arch/i386/boot/compressed/misc_lzma.c:237:
+	if(RM_ALT_MEM_K > RM_EXT_MEM_K)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#343: FILE: arch/i386/boot/compressed/misc_lzma.c:238:
+		memsize=RM_ALT_MEM_K * 1024;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#345: FILE: arch/i386/boot/compressed/misc_lzma.c:240:
+		memsize=RM_EXT_MEM_K * 1024;
 		       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#347: FILE: arch/i386/boot/compressed/misc_lzma.c:242:
+	if( (unsigned int)(workspace + workspace_size) > memsize)

ERROR:SPACING: space required before the open parenthesis '('
#347: FILE: arch/i386/boot/compressed/misc_lzma.c:242:
+	if( (unsigned int)(workspace + workspace_size) > memsize)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: arch/i386/boot/compressed/misc_lzma.c:244:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: arch/i386/boot/compressed/misc_lzma.c:245:
+^Iif (LzmaDecode(workspace, workspace_size, lc, lp, pb, $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#350: FILE: arch/i386/boot/compressed/misc_lzma.c:245:
+	if (LzmaDecode(workspace, workspace_size, lc, lp, pb, 
+	   (unsigned char *)input_data + 13, input_len - 13,
+	   (unsigned char *)working_area, uncompressed_size,
+	   &i) == LZMA_RESULT_OK)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <LzmaDecode>
#350: FILE: arch/i386/boot/compressed/misc_lzma.c:245:
+	if (LzmaDecode(workspace, workspace_size, lc, lp, pb, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: arch/i386/boot/compressed/misc_lzma.c:246:
+	if (LzmaDecode(workspace, workspace_size, lc, lp, pb, 
+	   (unsigned char *)input_data + 13, input_len - 13,

ERROR:SPACING: space prohibited after that open parenthesis '('
#355: FILE: arch/i386/boot/compressed/misc_lzma.c:250:
+		if ( i != uncompressed_size )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#355: FILE: arch/i386/boot/compressed/misc_lzma.c:250:
+		if ( i != uncompressed_size )

ERROR:SPACING: space prohibited after that open parenthesis '('
#356: FILE: arch/i386/boot/compressed/misc_lzma.c:251:
+			error( "kernel corrupted!\n");

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: arch/i386/boot/compressed/misc_lzma.c:252:
+		if(high_loaded) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#359: FILE: arch/i386/boot/compressed/misc_lzma.c:254:
+			 * before we can boot */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space prohibited after that open parenthesis '('
#360: FILE: arch/i386/boot/compressed/misc_lzma.c:255:
+			if ( uncompressed_size > low_buffer_size ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#360: FILE: arch/i386/boot/compressed/misc_lzma.c:255:
+			if ( uncompressed_size > low_buffer_size ) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#361: FILE: arch/i386/boot/compressed/misc_lzma.c:256:
+				memcpy((char*)LOW_BUFFER_START, high_buffer_start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: arch/i386/boot/compressed/misc_lzma.c:257:
+				memcpy((char*)LOW_BUFFER_START, high_buffer_start,
+					low_buffer_size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#363: FILE: arch/i386/boot/compressed/misc_lzma.c:258:
+				memcpy(high_buffer_start, high_buffer_start+low_buffer_size,
 				                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: arch/i386/boot/compressed/misc_lzma.c:259:
+				memcpy(high_buffer_start, high_buffer_start+low_buffer_size,
+					uncompressed_size-low_buffer_size);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#364: FILE: arch/i386/boot/compressed/misc_lzma.c:259:
+					uncompressed_size-low_buffer_size);
 					                 ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#366: FILE: arch/i386/boot/compressed/misc_lzma.c:261:
+				memcpy((char*)LOW_BUFFER_START, high_buffer_start, uncompressed_size );

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#366: FILE: arch/i386/boot/compressed/misc_lzma.c:261:
+				memcpy((char*)LOW_BUFFER_START, high_buffer_start, uncompressed_size );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#366: FILE: arch/i386/boot/compressed/misc_lzma.c:261:
+				memcpy((char*)LOW_BUFFER_START, high_buffer_start, uncompressed_size );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#375: FILE: arch/i386/boot/compressed/misc_lzma.c:270:
+
+

CHECK:SPACING: No space is necessary after a cast
#381: FILE: arch/i386/boot/compressed/misc_lzma.c:276:
+		vidmem = (char *) 0xb0000;

CHECK:SPACING: No space is necessary after a cast
#384: FILE: arch/i386/boot/compressed/misc_lzma.c:279:
+		vidmem = (char *) 0xb8000;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#391: FILE: arch/i386/boot/compressed/misc_lzma.c:286:
+	if (free_mem_ptr < 0x100000) setup_normal_output_buffer();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#392: FILE: arch/i386/boot/compressed/misc_lzma.c:287:
+	else setup_output_buffer_if_we_run_high(mv);

ERROR:SPACING: space prohibited after that open parenthesis '('
#395: FILE: arch/i386/boot/compressed/misc_lzma.c:290:
+	if( lzma_unzip() != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#395: FILE: arch/i386/boot/compressed/misc_lzma.c:290:
+	if( lzma_unzip() != 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#395: FILE: arch/i386/boot/compressed/misc_lzma.c:290:
+	if( lzma_unzip() != 0 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#395: FILE: arch/i386/boot/compressed/misc_lzma.c:290:
+	if( lzma_unzip() != 0 ) {
+		error("inflate error\n");
+	}

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#399: FILE: arch/i386/boot/compressed/misc_lzma.c:294:
+	if (high_loaded) close_output_buffer_if_we_run_high(mv);

WARNING:REPEATED_WORD: Possible repeated word: 'vmlinux'
#412: FILE: arch/i386/boot/compressed/Makefile:7:
+targets		:= vmlinux vmlinux.bin head.o piggy.o

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000177916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 83 errors, 22 warnings, 22 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000177916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
