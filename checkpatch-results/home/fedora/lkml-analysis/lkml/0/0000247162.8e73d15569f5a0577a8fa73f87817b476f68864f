WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
(or e.g. just use seqlock, which adds two words but is optimal for readers).

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#138: FILE: arch/ia64/kernel/perfmon.c:2289:
+	if (size > task->signal->rlim[RLIMIT_MEMLOCK].rlim_cur) return -EAGAIN;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#172: FILE: arch/ia64/mm/fault.c:36:
+	    || (((vma->vm_mm->total_vm + grow) << PAGE_SHIFT) > current->signal->rlim[RLIMIT_AS].rlim_cur))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#172: FILE: arch/ia64/mm/fault.c:36:
+	if (address - vma->vm_start > current->signal->rlim[RLIMIT_STACK].rlim_cur
+	    || (((vma->vm_mm->total_vm + grow) << PAGE_SHIFT) > current->signal->rlim[RLIMIT_AS].rlim_cur))

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: fs/buffer.c:2235:
+        limit = current->signal->rlim[RLIMIT_FSIZE].rlim_cur;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: fs/buffer.c:2235:
+        limit = current->signal->rlim[RLIMIT_FSIZE].rlim_cur;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#676: FILE: fs/proc/array.c:394:
+^I        rsslim,$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#845: FILE: kernel/fork.c:252:
+	init_task.signal->rlim[RLIMIT_NPROC].rlim_cur = max_threads/2;
 	                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#846: FILE: kernel/fork.c:253:
+	init_task.signal->rlim[RLIMIT_NPROC].rlim_max = max_threads/2;
 	                                                           ^

WARNING:SIZEOF_PARENTHESIS: sizeof sig->rlim should be sizeof(sig->rlim)
#855: FILE: kernel/fork.c:876:
+	memcpy(sig->rlim, current->signal->rlim, sizeof sig->rlim);

CHECK:BRACES: Unbalanced braces around else statement
#918: FILE: kernel/sys.c:1499:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#920: FILE: kernel/sys.c:1501:
+		struct rlimit value;
+		task_lock(current->group_leader);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_rlim.rlim_max > old_rlim->rlim_max'
#947: FILE: kernel/sys.c:1544:
+	if ((new_rlim.rlim_max > old_rlim->rlim_max) &&
 	    !capable(CAP_SYS_RESOURCE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#952: FILE: kernel/sys.c:1547:
+	if (resource == RLIMIT_NOFILE && new_rlim.rlim_max > NR_OPEN)
 			return -EPERM;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#978: FILE: kernel/timer.c:807:
+	if (!unlikely(p->state & (TASK_DEAD|TASK_ZOMBIE)) &&
 	                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1095: FILE: mm/mmap.c:1352:
+	if (address - vma->vm_start > current->signal->rlim[RLIMIT_STACK].rlim_cur ||
 			((vma->vm_mm->total_vm + grow) << PAGE_SHIFT) >

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1107: FILE: mm/mmap.c:1414:
+	if (vma->vm_end - address > current->signal->rlim[RLIMIT_STACK].rlim_cur ||
 			((vma->vm_mm->total_vm + grow) << PAGE_SHIFT) >

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1186: FILE: security/selinux/hooks.c:1913:
+				initrlim = init_task.signal->rlim+i;
 				                                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247162.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 6 warnings, 9 checks, 733 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247162.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
