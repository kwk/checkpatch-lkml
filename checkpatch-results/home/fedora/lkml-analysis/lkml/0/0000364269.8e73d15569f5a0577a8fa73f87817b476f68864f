WARNING:TYPO_SPELLING: 'swicth' may be misspelled - perhaps 'switch'?
#37: 
- swicth pdc4030.c to use *only* taskfile IO (untested)
  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
 drivers/ide/ide-taskfile.c   |  521 ++++++++++++++++---------------------------

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "task->prehandler"
#544: FILE: drivers/ide/ide-taskfile.c:168:
+		if (task->prehandler != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#563: FILE: drivers/ide/ide-taskfile.c:361:
+	 * (ks) Last sector was transfered, wait until drive is ready.
 	                        ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'willl' may be misspelled - perhaps 'will'?
#564: FILE: drivers/ide/ide-taskfile.c:362:
+	 * This can take up to 10 usec. We willl wait max 50 us.
 	                                   ^^^^^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#567: FILE: drivers/ide/ide-taskfile.c:365:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#616: FILE: drivers/ide/ide-taskfile.c:382:
+			return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:TYPO_SPELLING: 'verifyied' may be misspelled - perhaps 'verified'?
#626: FILE: drivers/ide/ide-taskfile.c:390:
+	 * Status was already verifyied.
 	                      ^^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#728: FILE: drivers/ide/ide-taskfile.c:433:
+			return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:TYPO_SPELLING: 'verifyied' may be misspelled - perhaps 'verified'?
#736: FILE: drivers/ide/ide-taskfile.c:441:
+	 * Status was already verifyied.
 	                      ^^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#847: FILE: drivers/ide/ide-taskfile.c:492:
+			return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#861: FILE: drivers/ide/ide-taskfile.c:503:
+		return DRIVER(drive)->error(drive, __FUNCTION__, stat);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: drivers/ide/ide-taskfile.c:505:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'verifyied' may be misspelled - perhaps 'verified'?
#865: FILE: drivers/ide/ide-taskfile.c:507:
+	 * Status was already verifyied.
 	                      ^^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#903: FILE: drivers/ide/ide-taskfile.c:529:
+ide_startstop_t pre_task_out_intr (ide_drive_t *drive, struct request *rq)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#929: FILE: drivers/ide/ide-taskfile.c:535:
+		printk(KERN_ERR "%s: no DRQ after issuing WRITE%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: drivers/ide/ide-taskfile.c:536:
+		printk(KERN_ERR "%s: no DRQ after issuing WRITE%s\n",
+				drive->name, drive->addressing ? "_EXT" : "");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1022: FILE: drivers/ide/ide-taskfile.c:558:
+			return DRIVER(drive)->error(drive, __FUNCTION__, stat);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1038: FILE: drivers/ide/ide-taskfile.c:569:
+		return DRIVER(drive)->error(drive, __FUNCTION__, stat);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: drivers/ide/ide-taskfile.c:571:
+^I/* $

WARNING:TYPO_SPELLING: 'verifyied' may be misspelled - perhaps 'verified'?
#1042: FILE: drivers/ide/ide-taskfile.c:573:
+	 * Status was already verifyied.
 	                      ^^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1124: FILE: drivers/ide/ide-taskfile.c:605:
+ide_startstop_t pre_task_mulout_intr (ide_drive_t *drive, struct request *rq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1130: FILE: drivers/ide/ide-taskfile.c:611:
+		printk(KERN_ERR "%s: no DRQ after issuing MULTWRITE%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1131: FILE: drivers/ide/ide-taskfile.c:612:
+		printk(KERN_ERR "%s: no DRQ after issuing MULTWRITE%s\n",
+				drive->name, drive->addressing ? "_EXT" : "");

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#1148: FILE: drivers/ide/ide-taskfile.c:963:
+			rq.nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <hobRegister>
#1148: FILE: drivers/ide/ide-taskfile.c:963:
+			rq.nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#1148: FILE: drivers/ide/ide-taskfile.c:963:
+			rq.nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1155: FILE: drivers/ide/ide-taskfile.c:968:
+		rq.hard_cur_sectors = rq.current_nr_sectors = rq.nr_sectors;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1167: FILE: drivers/ide/legacy/pdc4030.c:97:
+static ide_startstop_t promise_rw_disk (ide_drive_t *drive, struct request *rq, sector_t block);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1189: FILE: drivers/ide/legacy/pdc4030.c:417:
+		return DRIVER(drive)->error(drive, __FUNCTION__, status.all);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1224: FILE: drivers/ide/legacy/pdc4030.c:435:
+	printk(KERN_DEBUG "%s: %s: sectors(%lu-%lu), rem=%lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1225: FILE: drivers/ide/legacy/pdc4030.c:436:
+	printk(KERN_DEBUG "%s: %s: sectors(%lu-%lu), rem=%lu\n",
+			  drive->name, __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1225: FILE: drivers/ide/legacy/pdc4030.c:436:
+			  drive->name, __FUNCTION__,

CHECK:SPACING: No space is necessary after a cast
#1281: FILE: drivers/ide/legacy/pdc4030.c:524:
+		(void) DRIVER(drive)->end_request(drive, 1, bio_sectors(rq->bio));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1297: FILE: drivers/ide/legacy/pdc4030.c:532:
+static void promise_multwrite (ide_drive_t *drive, unsigned int msect)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1301: FILE: drivers/ide/legacy/pdc4030.c:534:
+	struct request* rq = HWGROUP(drive)->rq;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1389: FILE: drivers/ide/legacy/pdc4030.c:578:
+		(void) DRIVER(drive)->end_request(drive, 1, bio_sectors(rq->bio));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1405: FILE: drivers/ide/legacy/pdc4030.c:608:
+	printk(KERN_DEBUG "%s: %s: sectors(%lu-%lu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1406: FILE: drivers/ide/legacy/pdc4030.c:609:
+	printk(KERN_DEBUG "%s: %s: sectors(%lu-%lu)\n",
+			  drive->name, __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1406: FILE: drivers/ide/legacy/pdc4030.c:609:
+			  drive->name, __FUNCTION__,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1441: FILE: drivers/ide/legacy/pdc4030.c:653:
+static ide_startstop_t do_pdc4030_io (ide_drive_t *drive, ide_task_t *task)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1493: FILE: drivers/ide/legacy/pdc4030.c:722:
+static ide_startstop_t promise_rw_disk (ide_drive_t *drive, struct request *rq, sector_t block)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'promise_rw_disk', this function's name, in a string
#1511: FILE: drivers/ide/legacy/pdc4030.c:736:
+		blk_dump_rq_flags(rq, "promise_rw_disk - bad command");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1521: FILE: drivers/ide/legacy/pdc4030.c:742:
+	printk(KERN_DEBUG "%s: %sing: LBAsect=%lu, sectors=%lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1522: FILE: drivers/ide/legacy/pdc4030.c:743:
+	printk(KERN_DEBUG "%s: %sing: LBAsect=%lu, sectors=%lu\n",
+			  drive->name, rq_data_dir(rq) ? "writ" : "read",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1554: FILE: include/linux/blkdev.h:460:
+extern void blk_rq_prep_restart(struct request *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#1554: FILE: include/linux/blkdev.h:460:
+extern void blk_rq_prep_restart(struct request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1610: FILE: include/linux/ide.h:1417:
+				unsigned nsect, int rw)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364269.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 32 warnings, 13 checks, 1539 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364269.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
