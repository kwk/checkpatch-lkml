WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -urN linux-2.4.28.orig/drivers/ide/pci/piix.c linux-2.4.28/drivers/ide/pci/piix.c

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#42: FILE: drivers/ide/pci/piix.c:144:
 		switch(dev->device) {
[...]
+			case PCI_DEVICE_ID_INTEL_ESB_3:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#50: FILE: drivers/ide/pci/piix.c:283:
 	switch(dev->device) {
[...]
+		case PCI_DEVICE_ID_INTEL_ESB_3:

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: drivers/ide/pci/piix.h:333:
+		.enablebits	= {{0x41,0x80,0x80}, {0x43,0x80,0x80}},
 		           	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: drivers/ide/pci/piix.h:333:
+		.enablebits	= {{0x41,0x80,0x80}, {0x43,0x80,0x80}},
 		           	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: drivers/ide/pci/piix.h:333:
+		.enablebits	= {{0x41,0x80,0x80}, {0x43,0x80,0x80}},
 		           	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: drivers/ide/pci/piix.h:333:
+		.enablebits	= {{0x41,0x80,0x80}, {0x43,0x80,0x80}},
 		           	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#87: FILE: drivers/ide/pci/piix.h:336:
+	},{	/* 21 */
 	 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#199: FILE: drivers/scsi/ata_piix.c:625:
+		printk(KERN_WARNING DRV_NAME ": combined mode detected\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#213: FILE: drivers/scsi/libata-core.c:3460:
+		if (!request_region(0x1f0, 8, "libata")) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: drivers/scsi/libata-core.c:3462:
+			struct resource *conflict, res;
+			res.start = 0x1f0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#221: FILE: drivers/scsi/libata-core.c:3468:
+				printk(KERN_WARNING "ata: 0x1f0 IDE port busy\n");

CHECK:BRACES: Unbalanced braces around else statement
#222: FILE: drivers/scsi/libata-core.c:3469:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#228: FILE: drivers/scsi/libata-core.c:3472:
+		if (!request_region(0x170, 8, "libata")) {
[...]
+		} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: drivers/scsi/libata-core.c:3474:
+			struct resource *conflict, res;
+			res.start = 0x170;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#236: FILE: drivers/scsi/libata-core.c:3480:
+				printk(KERN_WARNING "ata: 0x170 IDE port busy\n");

CHECK:BRACES: Unbalanced braces around else statement
#237: FILE: drivers/scsi/libata-core.c:3481:
+		} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: include/linux/ioport.h:88:
+extern struct resource * ____request_resource(struct resource *root, struct resource *new);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: include/linux/ioport.h:88:
+extern struct resource * ____request_resource(struct resource *root, struct resource *new);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 6 warnings, 5 checks, 211 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
