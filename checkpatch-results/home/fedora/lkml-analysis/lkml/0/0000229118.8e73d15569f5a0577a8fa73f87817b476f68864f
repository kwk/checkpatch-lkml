CHECK:BIT_MACRO: Prefer using the BIT macro
#36: FILE: fs/fuse/fuse_i.h:38:
+#define FUSE_DIRECT_IO           (1 << 3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#107: FILE: fs/fuse/file.c:359:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: fs/fuse/file.c:360:
+	unsigned i;
+	if (nbytes > inarg->size) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: fs/fuse/file.c:361:
+		printk("fuse: long read\n");

CHECK:SPACING: No space is necessary after a cast
#116: FILE: fs/fuse/file.c:368:
+		unsigned count = min((unsigned) PAGE_CACHE_SIZE, nbytes);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#116: FILE: fs/fuse/file.c:368:
+		unsigned count = min((unsigned) PAGE_CACHE_SIZE, nbytes);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#116: FILE: fs/fuse/file.c:368:
+		unsigned count = min((unsigned) PAGE_CACHE_SIZE, nbytes);

WARNING:MINMAX: min() should probably be min_t(unsigned, PAGE_CACHE_SIZE, nbytes)
#116: FILE: fs/fuse/file.c:368:
+		unsigned count = min((unsigned) PAGE_CACHE_SIZE, nbytes);

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: fs/fuse/file.c:369:
+		unsigned count = min((unsigned) PAGE_CACHE_SIZE, nbytes);
+		if (copy_from_user(page_address(page), buf + offset, count))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: fs/fuse/file.c:377:
+static int fuse_send_read_multi(struct file *file, struct fuse_req *req,
+				    size_t size, off_t pos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: fs/fuse/file.c:384:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#155: FILE: fs/fuse/file.c:407:
+	unsigned npages;

CHECK:SPACING: No space is necessary after a cast
#159: FILE: fs/fuse/file.c:411:
+	npages = min(npages, (unsigned) FUSE_MAX_PAGES_PER_REQ);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#159: FILE: fs/fuse/file.c:411:
+	npages = min(npages, (unsigned) FUSE_MAX_PAGES_PER_REQ);

WARNING:MINMAX: min() should probably be min_t(unsigned, npages, FUSE_MAX_PAGES_PER_REQ)
#159: FILE: fs/fuse/file.c:411:
+	npages = min(npages, (unsigned) FUSE_MAX_PAGES_PER_REQ);

CHECK:SPACING: No space is necessary after a cast
#175: FILE: fs/fuse/file.c:427:
+		size_t nbytes_req = min(req->num_pages * (unsigned) PAGE_SIZE,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#175: FILE: fs/fuse/file.c:427:
+		size_t nbytes_req = min(req->num_pages * (unsigned) PAGE_SIZE,

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: fs/fuse/file.c:430:
+		int err = fuse_send_read_multi(file, req, nbytes_req, pos);
+		if (err) {

CHECK:SPACING: No space is necessary after a cast
#186: FILE: fs/fuse/file.c:438:
+			unsigned n = min((unsigned) PAGE_SIZE, nbytes);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#186: FILE: fs/fuse/file.c:438:
+			unsigned n = min((unsigned) PAGE_SIZE, nbytes);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#186: FILE: fs/fuse/file.c:438:
+			unsigned n = min((unsigned) PAGE_SIZE, nbytes);

WARNING:MINMAX: min() should probably be min_t(unsigned, PAGE_SIZE, nbytes)
#186: FILE: fs/fuse/file.c:438:
+			unsigned n = min((unsigned) PAGE_SIZE, nbytes);

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: fs/fuse/file.c:439:
+			unsigned n = min((unsigned) PAGE_SIZE, nbytes);
+			if (copy_to_user(buf, page_address(page), n)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#219: FILE: fs/fuse/file.c:471:
+	if (fc->flags & FUSE_DIRECT_IO) {
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#222: FILE: fs/fuse/file.c:474:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#222: FILE: fs/fuse/file.c:474:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: fs/fuse/file.c:479:
+}  $

CHECK:SPACING: No space is necessary after a cast
#246: FILE: fs/fuse/file.c:587:
+	size_t max_write = min(fc->max_write, (unsigned) PAGE_SIZE);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#246: FILE: fs/fuse/file.c:587:
+	size_t max_write = min(fc->max_write, (unsigned) PAGE_SIZE);

WARNING:MINMAX: min() should probably be min_t(unsigned, fc->max_write, PAGE_SIZE)
#246: FILE: fs/fuse/file.c:587:
+	size_t max_write = min(fc->max_write, (unsigned) PAGE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#252: FILE: fs/fuse/file.c:593:
+	tmpbuf = (char *) __get_free_page(GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#261: FILE: fs/fuse/file.c:602:
+		ssize_t res1;
+		if (copy_from_user(tmpbuf, buf, nbytes)) {

CHECK:SPACING: No space is necessary after a cast
#280: FILE: fs/fuse/file.c:621:
+	free_page((unsigned long) tmpbuf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: fs/fuse/file.c:638:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#298: FILE: fs/fuse/file.c:639:
+	if (fc->flags & FUSE_DIRECT_IO) {
[...]
+	else 
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#300: FILE: fs/fuse/file.c:641:
+		ssize_t res;
+		down(&inode->i_sem);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: fs/fuse/file.c:646:
+^Ielse $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#305: FILE: fs/fuse/file.c:646:
+	}
+	else 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: fs/fuse/file.c:649:
+^I^I^I       $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 21 warnings, 11 checks, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
