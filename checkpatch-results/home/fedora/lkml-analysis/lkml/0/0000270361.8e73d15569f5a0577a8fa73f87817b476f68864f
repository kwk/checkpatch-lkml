WARNING:TYPO_SPELLING: 'Specificly' may be misspelled - perhaps 'Specifically'?
#32: 
> Specificly, if you have a thread doing bulk reads on a USB device in a
  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
Hi Zephaniah, I've written a patch to do this, but I haven't finished testing

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/usb/core/devio.c:516:
+^I        complete((struct completion *)urb->context);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#120: FILE: drivers/usb/core/devio.c:521:
+	struct urb *urb = (struct urb *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: drivers/usb/core/devio.c:522:
+        usb_unlink_urb(urb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/usb/core/devio.c:522:
+        usb_unlink_urb(urb);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#124: FILE: drivers/usb/core/devio.c:525:
+static int start_wait_urb(struct usb_device *dev, struct urb *urb, int timeout, int* actual_length)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#181: FILE: drivers/usb/core/devio.c:575:
+	length = ctrl.wLength;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#208: FILE: drivers/usb/core/devio.c:580:
+	dir_in = ctrl.bRequestType & USB_DIR_IN;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/usb/core/devio.c:594:
+^Isnoop(&dev->dev, "control %s: bRequest=%02x bRrequestType=%02x wValue=%04x wIndex=%04x wLength=%04x\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#228: FILE: drivers/usb/core/devio.c:594:
+	snoop(&dev->dev, "control %s: bRequest=%02x bRrequestType=%02x wValue=%04x wIndex=%04x wLength=%04x\n", 

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#229: FILE: drivers/usb/core/devio.c:595:
+		dir_in ? "read" : "write", ctrl.bRequest, ctrl.bRequestType, ctrl.wValue, ctrl.wIndex, ctrl.wLength);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/usb/core/devio.c:595:
+	snoop(&dev->dev, "control %s: bRequest=%02x bRrequestType=%02x wValue=%04x wIndex=%04x wLength=%04x\n", 
+		dir_in ? "read" : "write", ctrl.bRequest, ctrl.bRequestType, ctrl.wValue, ctrl.wIndex, ctrl.wLength);

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#229: FILE: drivers/usb/core/devio.c:595:
+		dir_in ? "read" : "write", ctrl.bRequest, ctrl.bRequestType, ctrl.wValue, ctrl.wIndex, ctrl.wLength);

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#229: FILE: drivers/usb/core/devio.c:595:
+		dir_in ? "read" : "write", ctrl.bRequest, ctrl.bRequestType, ctrl.wValue, ctrl.wIndex, ctrl.wLength);

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#229: FILE: drivers/usb/core/devio.c:595:
+		dir_in ? "read" : "write", ctrl.bRequest, ctrl.bRequestType, ctrl.wValue, ctrl.wIndex, ctrl.wLength);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#233: FILE: drivers/usb/core/devio.c:599:
+			printk ("%02x ", (unsigned char)((char *)ctrl.data)[j]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: drivers/usb/core/devio.c:599:
+			printk ("%02x ", (unsigned char)((char *)ctrl.data)[j]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#234: FILE: drivers/usb/core/devio.c:600:
+		printk("\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#236: FILE: drivers/usb/core/devio.c:602:
+	if (!(urb = usb_alloc_urb(0, GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#240: FILE: drivers/usb/core/devio.c:606:
+	if (!(dr = kmalloc(sizeof(struct usb_ctrlrequest), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dr)...) over kmalloc(sizeof(struct usb_ctrlrequest)...)
#240: FILE: drivers/usb/core/devio.c:606:
+	if (!(dr = kmalloc(sizeof(struct usb_ctrlrequest), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#249: FILE: drivers/usb/core/devio.c:615:
+	if ((ret = check_ctrlrecip(ps, ctrl.bRequestType, ctrl.wIndex)))

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#256: FILE: drivers/usb/core/devio.c:622:
+	dr->bRequestType= ctrl.bRequestType;
 	                ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#261: FILE: drivers/usb/core/devio.c:627:
+	usb_fill_control_urb(urb, dev, pipe, (unsigned char*)dr, tbuf, length, NULL, 0);

WARNING:SPLIT_STRING: quoted string split across lines
#266: FILE: drivers/usb/core/devio.c:632:
+		dev_warn(&dev->dev, "usbfs: USBDEVFS_CONTROL failed "
+			   "cmd %s rqt %u rq %u len %u ret %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#278: FILE: drivers/usb/core/devio.c:641:
+				printk ("%02x ", tbuf[j]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#278: FILE: drivers/usb/core/devio.c:641:
+				printk ("%02x ", tbuf[j]);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#338: FILE: drivers/usb/core/devio.c:676:
+	if (!(tbuf = kmalloc(length, GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#373: FILE: drivers/usb/core/devio.c:692:
+	if (!(urb = usb_alloc_urb(0, GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#382: FILE: drivers/usb/core/devio.c:701:
+	if ((ret = findintfep(ps->dev, bulk.ep)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#384: FILE: drivers/usb/core/devio.c:703:
+	if ((ret = checkintf(ps, ret)))

WARNING:SPLIT_STRING: quoted string split across lines
#402: FILE: drivers/usb/core/devio.c:719:
 		dev_warn(&dev->dev, "usbfs: USBDEVFS_BULK failed "
+			 "ep 0x%x len %u ret %d\n", bulk.ep, bulk.len, ret);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#465: FILE: drivers/usb/core/devio.c:776:
+	if ((ret = findintfep(dev, ep)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: drivers/usb/core/devio.c:781:
+                pipe = usb_rcvbulkpipe(dev, ep & 0x7f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/usb/core/devio.c:781:
+                pipe = usb_rcvbulkpipe(dev, ep & 0x7f);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: drivers/usb/core/devio.c:783:
+                pipe = usb_sndbulkpipe(dev, ep & 0x7f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/usb/core/devio.c:783:
+                pipe = usb_sndbulkpipe(dev, ep & 0x7f);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: drivers/usb/core/devio.c:885:
+ ^Iactconfig = dev->actconfig;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#597: FILE: drivers/usb/core/devio.c:885:
+ ^Iactconfig = dev->actconfig;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/usb/core/devio.c:885:
+ ^Iactconfig = dev->actconfig;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#606: FILE: drivers/usb/core/devio.c:896:
+				dev_warn (&dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: drivers/usb/core/devio.c:897:
+				dev_warn (&dev->dev,
 					"usbfs: interface %d claimed "

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: drivers/usb/core/devio.c:904:
+ ^I^I^I^Iret = -EBUSY;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#616: FILE: drivers/usb/core/devio.c:904:
+ ^I^I^I^Iret = -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/usb/core/devio.c:904:
+ ^I^I^I^Iret = -EBUSY;$

CHECK:CAMELCASE: Avoid CamelCase: <bConfigurationValue>
#631: FILE: drivers/usb/core/devio.c:914:
+	if (actconfig && actconfig->desc.bConfigurationValue == u)

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#774: FILE: drivers/usb/core/devio.c:1016:
+	        unsigned int assize = sizeof(struct async) + uurb.number_of_packets * sizeof(struct usb_iso_packet_descriptor);

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: drivers/usb/core/devio.c:1016:
+^I        unsigned int assize = sizeof(struct async) + uurb.number_of_packets * sizeof(struct usb_iso_packet_descriptor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#776: FILE: drivers/usb/core/devio.c:1018:
+        ^Iif (!(as = kmalloc(assize, GFP_KERNEL))) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#776: FILE: drivers/usb/core/devio.c:1018:
+        ^Iif (!(as = kmalloc(assize, GFP_KERNEL))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: drivers/usb/core/devio.c:1018:
+        ^Iif (!(as = kmalloc(assize, GFP_KERNEL))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#776: FILE: drivers/usb/core/devio.c:1018:
+        	if (!(as = kmalloc(assize, GFP_KERNEL))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#780: FILE: drivers/usb/core/devio.c:1022:
+        ^Imemset(as, 0, assize);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#780: FILE: drivers/usb/core/devio.c:1022:
+        ^Imemset(as, 0, assize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: drivers/usb/core/devio.c:1022:
+        ^Imemset(as, 0, assize);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#783: FILE: drivers/usb/core/devio.c:1025:
+	if (!(as->urb = usb_alloc_urb(uurb.number_of_packets, GFP_KERNEL))) {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#812: FILE: drivers/usb/core/devio.c:1048:
+	if (!(uurb.type == USBDEVFS_URB_TYPE_CONTROL && (uurb.endpoint & ~USB_ENDPOINT_DIR_MASK) == 0)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#813: FILE: drivers/usb/core/devio.c:1049:
+		if ((ifnum = findintfep(ps->dev, uurb.endpoint)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#817: FILE: drivers/usb/core/devio.c:1053:
+		if ((ret = checkintf(ps, ifnum)))

ERROR:SPACING: space required before the open parenthesis '('
#821: FILE: drivers/usb/core/devio.c:1057:
+	switch(uurb.type) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#824: FILE: drivers/usb/core/devio.c:1060:
+			if (!(ep_desc = usb_epnum_to_ep_desc(ps->dev, uurb.endpoint))) {

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#828: FILE: drivers/usb/core/devio.c:1064:
+			if ((ep_desc->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) != USB_ENDPOINT_XFER_CONTROL) {

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#828: FILE: drivers/usb/core/devio.c:1064:
+			if ((ep_desc->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) != USB_ENDPOINT_XFER_CONTROL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#833: FILE: drivers/usb/core/devio.c:1069:
+		if ((ret = check_ctrlrecip(ps, dr->bRequestType, le16_to_cpup(&dr->wIndex))))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#838: FILE: drivers/usb/core/devio.c:1074:
+		if (!(ep_desc = usb_epnum_to_ep_desc(ps->dev, uurb.endpoint))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#842: FILE: drivers/usb/core/devio.c:1078:
+		interval = 1 << min (15, ep_desc->bInterval - 1);

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#842: FILE: drivers/usb/core/devio.c:1078:
+		interval = 1 << min (15, ep_desc->bInterval - 1);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#846: FILE: drivers/usb/core/devio.c:1082:
+		if (!(ep_desc = usb_epnum_to_ep_desc(ps->dev, uurb.endpoint))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#851: FILE: drivers/usb/core/devio.c:1087:
+			interval = 1 << min (15, ep_desc->bInterval - 1);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#925: FILE: drivers/usb/core/devio.c:1156:
+	if ((as = async_getpending(ps, arg)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#991: FILE: drivers/usb/core/devio.c:1249:
+	if (!(as = async_getcompleted(ps))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1058: FILE: drivers/usb/core/devio.c:1314:
+	if ((ret = releaseintf(ps, ifnum)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#1102: FILE: drivers/usb/core/devio.c:1359:
+	if (!(intf = usb_ifnum_to_if (dev, ctrl.ifno))) {
+               ret = -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1102: FILE: drivers/usb/core/devio.c:1359:
+	if (!(intf = usb_ifnum_to_if (dev, ctrl.ifno))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1102: FILE: drivers/usb/core/devio.c:1359:
+	if (!(intf = usb_ifnum_to_if (dev, ctrl.ifno))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1103: FILE: drivers/usb/core/devio.c:1360:
+               ret = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: drivers/usb/core/devio.c:1360:
+               ret = -EINVAL;$

WARNING:TABSTOP: Statements should start on a tabstop
#1104: FILE: drivers/usb/core/devio.c:1361:
+	       goto out;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1135: FILE: drivers/usb/core/devio.c:1391:
+			ret = driver->ioctl (intf, ctrl.ioctl_code, buf);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1154: FILE: drivers/usb/core/devio.c:1402:
+	if ((_IOC_DIR (ctrl.ioctl_code) & _IOC_READ) != 0 && size > 0)
+	    ret = copy_to_user (ctrl.data, buf, size) ? -EFAULT : 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1154: FILE: drivers/usb/core/devio.c:1402:
+	if ((_IOC_DIR (ctrl.ioctl_code) & _IOC_READ) != 0 && size > 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ctrl.ioctl_code'
#1154: FILE: drivers/usb/core/devio.c:1402:
+	if ((_IOC_DIR (ctrl.ioctl_code) & _IOC_READ) != 0 && size > 0)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1155: FILE: drivers/usb/core/devio.c:1403:
+	    ret = copy_to_user (ctrl.data, buf, size) ? -EFAULT : 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1157: FILE: drivers/usb/core/devio.c:1405:
+	kfree (buf);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270361.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 37 warnings, 13 checks, 1101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270361.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
