WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal working-2.5.33-cset-1.621/Documentation/sched-coding.txt working-2.5.33-cset-1.621-task_t/Documentation/sched-coding.txt

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: include/linux/sched.h:146:
+ extern void sched_init(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/linux/sched.h:146:
+ extern void sched_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/linux/sched.h:147:
+extern void init_idle(struct task_struct *idle, int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/sched.h:424:
+extern void set_cpus_allowed(struct task_struct *p, unsigned long new_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: include/linux/sched.h:429:
+extern void set_user_nice(struct task_struct *p, long nice);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#128: FILE: include/linux/sched.h:430:
+extern int task_prio(struct task_struct *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/linux/sched.h:431:
+extern int task_nice(struct task_struct *p);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: include/linux/sched.h:513:
+extern void FASTCALL(sched_exit(struct task_struct * p));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: include/linux/sched.h:513:
+extern void FASTCALL(sched_exit(struct task_struct * p));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: include/linux/sched.h:667:
+extern void wait_task_inactive(struct task_struct * p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/sched.h:667:
+extern void wait_task_inactive(struct task_struct * p);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#158: FILE: include/linux/sched.h:668:
+extern void kick_if_running(struct task_struct * p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: include/linux/sched.h:668:
+extern void kick_if_running(struct task_struct * p);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/capability.c:36:
+     struct task_struct *target;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/capability.c:86:
+     struct task_struct *target;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/capability.c:103:
+     struct task_struct *target;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: kernel/capability.c:128:
+     struct task_struct *target;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: kernel/sched.c:343:
+void wait_task_inactive(struct task_struct * p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#335: FILE: kernel/sched.c:382:
+void kick_if_running(struct task_struct * p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#344: FILE: kernel/sched.c:401:
+static int try_to_wake_up(struct task_struct * p, int sync)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#353: FILE: kernel/sched.c:438:
+int wake_up_process(struct task_struct * p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#362: FILE: kernel/sched.c:449:
+void wake_up_forked_process(struct task_struct * p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#371: FILE: kernel/sched.c:479:
+void sched_exit(struct task_struct * p)

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#399: FILE: kernel/sched.c:716:
+static inline void pull_task(runqueue_t *src_rq, prio_array_t *src_array, struct task_struct *p, runqueue_t *this_rq, int this_cpu)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#552: FILE: kernel/sched.c:1763:
+static void show_task(struct task_struct * p)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#565: FILE: kernel/sched.c:1812:
+		extern void show_trace_task(struct task_struct *tsk);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434185.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 8 warnings, 9 checks, 501 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434185.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
