WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
echo "(lameter,com,www.lameter.com)/home/clameter/lameter:(vdm.org)/home/clameter/vdm:/var/www" >/proc/sys/net/khttpd/documentroot

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#42: FILE: net/khttpd/rfc.c:27:
+/*
+  Virtual Host parser by Christoph Lameter <christoph@lameter.com>, January 10, 2001

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#43: FILE: net/khttpd/rfc.c:28:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#47: FILE: net/khttpd/rfc.c:32:
+  $

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#48: FILE: net/khttpd/rfc.c:33:
+  echo "(home.lameter.com,localhost)/a/christoph/new:(virtual3.cc.com)/home/richard:/var/www" >documentroot

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: net/khttpd/rfc.c:34:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: net/khttpd/rfc.c:40:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: net/khttpd/rfc.c:42:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: net/khttpd/rfc.c:44:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: net/khttpd/rfc.c:49:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: net/khttpd/rfc.c:52:
+  $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#76: FILE: net/khttpd/rfc.c:311:
+	char *filename=NULL;
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#100: FILE: net/khttpd/rfc.c:356:
+			filename=Buffer;
 			        ^

CHECK:CAMELCASE: Avoid CamelCase: <Buffer>
#100: FILE: net/khttpd/rfc.c:356:
+			filename=Buffer;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#101: FILE: net/khttpd/rfc.c:357:
+			filenamelen=tmp-Buffer;
 			           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#101: FILE: net/khttpd/rfc.c:357:
+			filenamelen=tmp-Buffer;
 			               ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#110: FILE: net/khttpd/rfc.c:399:
+	if (filename) {
[...]
+	    char PrefixLen;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#111: FILE: net/khttpd/rfc.c:400:
+	if (filename) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#112: FILE: net/khttpd/rfc.c:401:
+	    char PrefixLen;

CHECK:CAMELCASE: Avoid CamelCase: <PrefixLen>
#112: FILE: net/khttpd/rfc.c:401:
+	    char PrefixLen;

WARNING:TABSTOP: Statements should start on a tabstop
#114: FILE: net/khttpd/rfc.c:403:
+	    if (sysctl_khttpd_docroot[0]=='(') {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#114: FILE: net/khttpd/rfc.c:403:
+	    if (sysctl_khttpd_docroot[0]=='(') {
 	                                ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#115: FILE: net/khttpd/rfc.c:404:
+	    if (sysctl_khttpd_docroot[0]=='(') {
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#116: FILE: net/khttpd/rfc.c:405:
+		char *p=sysctl_khttpd_docroot;
 		       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#119: FILE: net/khttpd/rfc.c:408:
+		while (*p=='(') {
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#122: FILE: net/khttpd/rfc.c:411:
+				q=p;	/* Mark position of virtual hostname */
 				 ^

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#124: FILE: net/khttpd/rfc.c:413:
+				while (*p && *p!=')' && *p!=',') p++;		/* Find the end of the hostname */

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#124: FILE: net/khttpd/rfc.c:413:
+				while (*p && *p!=')' && *p!=',') p++;		/* Find the end of the hostname */
 				               ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#124: FILE: net/khttpd/rfc.c:413:
+				while (*p && *p!=')' && *p!=',') p++;		/* Find the end of the hostname */
 				                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#124: FILE: net/khttpd/rfc.c:413:
+				while (*p && *p!=')' && *p!=',') p++;		/* Find the end of the hostname */

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#126: FILE: net/khttpd/rfc.c:415:
+				if (*p==0) { printk(KERN_ERR ") missing in virtual host string.\n");return; }

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#126: FILE: net/khttpd/rfc.c:415:
+				if (*p==0) { printk(KERN_ERR ") missing in virtual host string.\n");return; }

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#126: FILE: net/khttpd/rfc.c:415:
+				if (*p==0) { printk(KERN_ERR ") missing in virtual host string.\n");return; }
 				      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#126: FILE: net/khttpd/rfc.c:415:
+				if (*p==0) { printk(KERN_ERR ") missing in virtual host string.\n");return; }
 				                                                                   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#126: FILE: net/khttpd/rfc.c:415:
+				if (*p==0) { printk(KERN_ERR ") missing in virtual host string.\n");return; }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#128: FILE: net/khttpd/rfc.c:417:
+				if (strnicmp(Head->Host,q,p-q)==0) {
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#128: FILE: net/khttpd/rfc.c:417:
+				if (strnicmp(Head->Host,q,p-q)==0) {
 				                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#128: FILE: net/khttpd/rfc.c:417:
+				if (strnicmp(Head->Host,q,p-q)==0) {
 				                           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#128: FILE: net/khttpd/rfc.c:417:
+				if (strnicmp(Head->Host,q,p-q)==0) {
 				                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Head>
#128: FILE: net/khttpd/rfc.c:417:
+				if (strnicmp(Head->Host,q,p-q)==0) {

CHECK:CAMELCASE: Avoid CamelCase: <Host>
#128: FILE: net/khttpd/rfc.c:417:
+				if (strnicmp(Head->Host,q,p-q)==0) {

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#130: FILE: net/khttpd/rfc.c:419:
+					while (*p && *p!=')') p++;	/* Skip to the end of the vhostname list */

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#130: FILE: net/khttpd/rfc.c:419:
+					while (*p && *p!=')') p++;	/* Skip to the end of the vhostname list */
 					               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#130: FILE: net/khttpd/rfc.c:419:
+					while (*p && *p!=')') p++;	/* Skip to the end of the vhostname list */

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#131: FILE: net/khttpd/rfc.c:420:
+					if (*p == 0) printk(KERN_ERR "path missing for virtual host");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#131: FILE: net/khttpd/rfc.c:420:
+					if (*p == 0) printk(KERN_ERR "path missing for virtual host");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#131: FILE: net/khttpd/rfc.c:420:
+					if (*p == 0) printk(KERN_ERR "path missing for virtual host");

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#136: FILE: net/khttpd/rfc.c:425:
+			} while (*p==',');
 			           ^

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#138: FILE: net/khttpd/rfc.c:427:
+			if (*p==')') { /* at end of virtual host names need to skip the webroot since nothing matched */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#138: FILE: net/khttpd/rfc.c:427:
+			if (*p==')') { /* at end of virtual host names need to skip the webroot since nothing matched */
 			      ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#140: FILE: net/khttpd/rfc.c:429:
+				while (*p && *p!=':') p++;
 				               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#140: FILE: net/khttpd/rfc.c:429:
+				while (*p && *p!=':') p++;

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#141: FILE: net/khttpd/rfc.c:430:
+				if (*p==0) { printk(KERN_ERR "closing : of virtual host specification missing.\n");return; }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#141: FILE: net/khttpd/rfc.c:430:
+				if (*p==0) { printk(KERN_ERR "closing : of virtual host specification missing.\n");return; }

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#141: FILE: net/khttpd/rfc.c:430:
+				if (*p==0) { printk(KERN_ERR "closing : of virtual host specification missing.\n");return; }
 				      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#141: FILE: net/khttpd/rfc.c:430:
+				if (*p==0) { printk(KERN_ERR "closing : of virtual host specification missing.\n");return; }
 				                                                                                  ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#141: FILE: net/khttpd/rfc.c:430:
+				if (*p==0) { printk(KERN_ERR "closing : of virtual host specification missing.\n");return; }

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#145: FILE: net/khttpd/rfc.c:434:
+
+		}

WARNING:INDENTED_LABEL: labels should not be indented
#146: FILE: net/khttpd/rfc.c:435:
+	rootfound:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#147: FILE: net/khttpd/rfc.c:436:
+		if (*p==0) { printk(KERN_ERR "Error in virtual host specification.\n");return; }

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#147: FILE: net/khttpd/rfc.c:436:
+		if (*p==0) { printk(KERN_ERR "Error in virtual host specification.\n");return; }
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#147: FILE: net/khttpd/rfc.c:436:
+		if (*p==0) { printk(KERN_ERR "Error in virtual host specification.\n");return; }
 		                                                                      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#147: FILE: net/khttpd/rfc.c:436:
+		if (*p==0) { printk(KERN_ERR "Error in virtual host specification.\n");return; }

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#150: FILE: net/khttpd/rfc.c:439:
+		q=p;while (*p && *p!=':') p++;		/* Find the end of the pathname */
 		 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#150: FILE: net/khttpd/rfc.c:439:
+		q=p;while (*p && *p!=':') p++;		/* Find the end of the pathname */
 		   ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#150: FILE: net/khttpd/rfc.c:439:
+		q=p;while (*p && *p!=':') p++;		/* Find the end of the pathname */
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#151: FILE: net/khttpd/rfc.c:440:
+		PrefixLen=p-q;
 		         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#151: FILE: net/khttpd/rfc.c:440:
+		PrefixLen=p-q;
 		           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: net/khttpd/rfc.c:441:
+		strncpy(Head->FileName,q,PrefixLen);
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: net/khttpd/rfc.c:441:
+		strncpy(Head->FileName,q,PrefixLen);
 		                        ^

CHECK:CAMELCASE: Avoid CamelCase: <FileName>
#152: FILE: net/khttpd/rfc.c:441:
+		strncpy(Head->FileName,q,PrefixLen);

WARNING:TABSTOP: Statements should start on a tabstop
#154: FILE: net/khttpd/rfc.c:443:
+	    } else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 15)
#154: FILE: net/khttpd/rfc.c:443:
+	    } else {
[...]
+	       strncpy(Head->FileName,sysctl_khttpd_docroot,sizeof(Head->FileName));

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#155: FILE: net/khttpd/rfc.c:444:
+	    } else {
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: net/khttpd/rfc.c:445:
+	       strncpy(Head->FileName,sysctl_khttpd_docroot,sizeof(Head->FileName));
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: net/khttpd/rfc.c:445:
+	       strncpy(Head->FileName,sysctl_khttpd_docroot,sizeof(Head->FileName));
 	                                                   ^

WARNING:TABSTOP: Statements should start on a tabstop
#159: FILE: net/khttpd/rfc.c:448:
+	    }

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#159: FILE: net/khttpd/rfc.c:448:
+
+	    }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: net/khttpd/rfc.c:450:
+^I    Head->FileNameLength = min(255,filenamelen+PrefixLen);^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#161: FILE: net/khttpd/rfc.c:450:
+	    Head->FileNameLength = min(255,filenamelen+PrefixLen);		
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: net/khttpd/rfc.c:450:
+	    Head->FileNameLength = min(255,filenamelen+PrefixLen);		
 	                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <FileNameLength>
#161: FILE: net/khttpd/rfc.c:450:
+	    Head->FileNameLength = min(255,filenamelen+PrefixLen);		

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: net/khttpd/rfc.c:451:
+	    strncat(Head->FileName,filename,min(255-PrefixLen,filenamelen));
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: net/khttpd/rfc.c:451:
+	    strncat(Head->FileName,filename,min(255-PrefixLen,filenamelen));
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#162: FILE: net/khttpd/rfc.c:451:
+	    strncat(Head->FileName,filename,min(255-PrefixLen,filenamelen));
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: net/khttpd/rfc.c:451:
+	    strncat(Head->FileName,filename,min(255-PrefixLen,filenamelen));
 	                                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: net/khttpd/rfc.c:452:
+^I    $

WARNING:TABSTOP: Statements should start on a tabstop
#164: FILE: net/khttpd/rfc.c:453:
+	    if (Head->FileName[Head->FileNameLength-1]=='/' && Head->FileNameLength<255-10) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#164: FILE: net/khttpd/rfc.c:453:
+	    if (Head->FileName[Head->FileNameLength-1]=='/' && Head->FileNameLength<255-10) {
 	                                           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#164: FILE: net/khttpd/rfc.c:453:
+	    if (Head->FileName[Head->FileNameLength-1]=='/' && Head->FileNameLength<255-10) {
 	                                              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#164: FILE: net/khttpd/rfc.c:453:
+	    if (Head->FileName[Head->FileNameLength-1]=='/' && Head->FileNameLength<255-10) {
 	                                                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#164: FILE: net/khttpd/rfc.c:453:
+	    if (Head->FileName[Head->FileNameLength-1]=='/' && Head->FileNameLength<255-10) {
 	                                                                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: net/khttpd/rfc.c:454:
+^I    $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#165: FILE: net/khttpd/rfc.c:454:
+	    if (Head->FileName[Head->FileNameLength-1]=='/' && Head->FileNameLength<255-10) {
+	    

WARNING:LONG_LINE_COMMENT: line length of 125 exceeds 100 columns
#166: FILE: net/khttpd/rfc.c:455:
+	    	/* A directory! khttpd will not be able to successfully open it. But it might be able to access index.html */

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: net/khttpd/rfc.c:455:
+^I    ^I/* A directory! khttpd will not be able to successfully open it. But it might be able to access index.html */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: net/khttpd/rfc.c:455:
+^I    ^I/* A directory! khttpd will not be able to successfully open it. But it might be able to access index.html */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: net/khttpd/rfc.c:456:
+^I    ^Imemcpy(Head->FileName+Head->FileNameLength,"index.html",10);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: net/khttpd/rfc.c:456:
+^I    ^Imemcpy(Head->FileName+Head->FileNameLength,"index.html",10);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#167: FILE: net/khttpd/rfc.c:456:
+	    	memcpy(Head->FileName+Head->FileNameLength,"index.html",10);
 	    	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: net/khttpd/rfc.c:456:
+	    	memcpy(Head->FileName+Head->FileNameLength,"index.html",10);
 	    	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: net/khttpd/rfc.c:456:
+	    	memcpy(Head->FileName+Head->FileNameLength,"index.html",10);
 	    	                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: net/khttpd/rfc.c:457:
+^I    ^IHead->FileNameLength+=10;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: net/khttpd/rfc.c:457:
+^I    ^IHead->FileNameLength+=10;$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#168: FILE: net/khttpd/rfc.c:457:
+	    	Head->FileNameLength+=10;
 	    	                    ^

WARNING:TABSTOP: Statements should start on a tabstop
#169: FILE: net/khttpd/rfc.c:458:
+	    }

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000556710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 60 errors, 26 warnings, 20 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000556710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
