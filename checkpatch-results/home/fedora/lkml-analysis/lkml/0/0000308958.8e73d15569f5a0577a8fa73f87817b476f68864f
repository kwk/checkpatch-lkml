WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
diff -urN linux-2.6.orig/drivers/net/Kconfig linux-2.6.new/drivers/net/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#38: FILE: drivers/net/Kconfig:88:
+config IMQ
+	tristate "IMQ (intermediate queueing device) support"
+	depends on NETDEVICES && NETFILTER
+	---help---
+	  The imq device(s) is used as placeholder for QoS queueing disciplines.
+	  Every packet entering/leaving the ip stack can be directed through
+	  the imq device where it's enqueued/dequeued to the attached qdisc.
+	  This allows you to treat network devices as classes and distribute
+	  bandwidth among them. Iptables is used to specify through which imq
+	  device, if any, packets travel.
+
+	  To compile this driver as a module, choose M here: the module
+	  will be called imq.  If unsure, say N.
+
 config TUN
 	tristate "Universal TUN/TAP device driver support"
 	depends on NETDEVICES

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: drivers/net/imq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: drivers/net/imq.c:11:
+ * ^I       The first version was written by Martin Devera, <devik@cdi.cz>$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: drivers/net/imq.c:31:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: drivers/net/imq.c:55:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#148: FILE: drivers/net/imq.c:79:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#170: FILE: drivers/net/imq.c:101:
+	struct net_device_stats *stats = (struct net_device_stats*) dev->priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#170: FILE: drivers/net/imq.c:101:
+	struct net_device_stats *stats = (struct net_device_stats*) dev->priv;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Qdisc>
#189: FILE: drivers/net/imq.c:120:
+	struct Qdisc *q;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#190: FILE: drivers/net/imq.c:121:
+	unsigned int index = skb->imq_flags&IMQ_F_IFMASK;
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: drivers/net/imq.c:124:
+^Iif (index > numdevs) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#213: FILE: drivers/net/imq.c:144:
+	stats->rx_bytes+= skb->len;
 	               ^

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#226: FILE: drivers/net/imq.c:157:
+	if (spin_is_locked(&dev->xmit_lock))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/net/imq.c:170:
+static unsigned int imq_nf_hook(unsigned int hook, struct sk_buff **pskb,
+		   const struct net_device *indev,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#249: FILE: drivers/net/imq.c:180:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#254: FILE: drivers/net/imq.c:185:
+	if ((err = nf_register_queue_handler(PF_INET, imq_nf_queue, NULL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#256: FILE: drivers/net/imq.c:187:
+	if ((err = nf_register_hook(&imq_ingress_ipv4)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#258: FILE: drivers/net/imq.c:189:
+	if ((err = nf_register_hook(&imq_egress_ipv4)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: drivers/net/imq.c:191:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#261: FILE: drivers/net/imq.c:192:
+	if ((err = nf_register_queue_handler(PF_INET6, imq_nf_queue, NULL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#263: FILE: drivers/net/imq.c:194:
+	if ((err = nf_register_hook(&imq_ingress_ipv6)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#265: FILE: drivers/net/imq.c:196:
+	if ((err = nf_register_hook(&imq_egress_ipv6)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#271: FILE: drivers/net/imq.c:202:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: drivers/net/imq.c:223:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev->priv)...) over kmalloc(sizeof(struct net_device_stats)...)
#306: FILE: drivers/net/imq.c:237:
+	dev->priv = kmalloc(sizeof(struct net_device_stats), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->priv"
#307: FILE: drivers/net/imq.c:238:
+	if (dev->priv == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'betweed' may be misspelled - perhaps 'between'?
#326: FILE: drivers/net/imq.c:257:
+		printk(KERN_ERR "numdevs has to be betweed 1 and %u\n",
 		                                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#326: FILE: drivers/net/imq.c:257:
+		printk(KERN_ERR "numdevs has to be betweed 1 and %u\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*imq_devs)...) over kmalloc(sizeof(struct net_device)...)
#331: FILE: drivers/net/imq.c:262:
+	imq_devs = kmalloc(sizeof(struct net_device) * numdevs, GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#372: FILE: drivers/net/imq.c:303:
+	if ((err = imq_init_devs()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#374: FILE: drivers/net/imq.c:305:
+	if ((err = imq_init_hooks())) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#379: FILE: drivers/net/imq.c:310:
+	printk(KERN_INFO "imq driver loaded.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#397: FILE: include/linux/imq.h:1:
+#ifndef _IMQ_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#410: FILE: include/linux/netfilter_ipv4/ipt_IMQ.h:1:
+#ifndef _IPT_IMQ_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#422: FILE: include/linux/netfilter_ipv6/ip6t_IMQ.h:1:
+#ifndef _IP6T_IMQ_H

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#437: FILE: include/linux/skbuff.h:101:
+#if defined(CONFIG_IMQ) || defined(CONFIG_IMQ_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#448: FILE: include/linux/skbuff.h:253:
+#if defined(CONFIG_IMQ) || defined(CONFIG_IMQ_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#462: FILE: net/core/skbuff.c:316:
+#if defined(CONFIG_IMQ) || defined(CONFIG_IMQ_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#473: FILE: net/core/skbuff.c:364:
+#if defined(CONFIG_IMQ) || defined(CONFIG_IMQ_MODULE)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#514: FILE: net/ipv4/netfilter/ipt_IMQ.c:1:
+/*

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#530: FILE: net/ipv4/netfilter/ipt_IMQ.c:17:
+	struct ipt_imq_info *mr = (struct ipt_imq_info*)targinfo;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#547: FILE: net/ipv4/netfilter/ipt_IMQ.c:34:
+		printk(KERN_WARNING "IMQ: invalid targinfosize\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#550: FILE: net/ipv4/netfilter/ipt_IMQ.c:37:
+	mr = (struct ipt_imq_info*)targinfo;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#553: FILE: net/ipv4/netfilter/ipt_IMQ.c:40:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#560: FILE: net/ipv4/netfilter/ipt_IMQ.c:47:
+		printk(KERN_WARNING

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#626: FILE: net/ipv6/netfilter/ip6t_IMQ.c:1:
+/*

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#642: FILE: net/ipv6/netfilter/ip6t_IMQ.c:17:
+	struct ip6t_imq_info *mr = (struct ip6t_imq_info*)targinfo;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#659: FILE: net/ipv6/netfilter/ip6t_IMQ.c:34:
+		printk(KERN_WARNING "IMQ: invalid targinfosize\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#662: FILE: net/ipv6/netfilter/ip6t_IMQ.c:37:
+	mr = (struct ip6t_imq_info*)targinfo;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#665: FILE: net/ipv6/netfilter/ip6t_IMQ.c:40:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#672: FILE: net/ipv6/netfilter/ip6t_IMQ.c:47:
+		printk(KERN_WARNING

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#711: FILE: net/sched/sch_generic.c:33:
+#if defined(CONFIG_IMQ) || defined(CONFIG_IMQ_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#723: FILE: net/sched/sch_generic.c:97:
+#if defined(CONFIG_IMQ) || defined(CONFIG_IMQ_MODULE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#724: FILE: net/sched/sch_generic.c:98:
+#if defined(CONFIG_IMQ) || defined(CONFIG_IMQ_MODULE)
+				   && !(skb->imq_flags & IMQ_F_ENQUEUE)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000308958.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 30 warnings, 10 checks, 636 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000308958.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
