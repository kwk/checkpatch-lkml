WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#90: FILE: arch/arm/kernel/bios32.c:304:
 static void __devinit

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/ia64/pci/pci.c:571:
+^I^I        resource_size_t size, resource_size_t align)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: arch/m68knommu/kernel/comempci.c:361:
+void pcibios_align_resource(void *data, struct resource *res,
+				resource_size_t size, resource_size_t align)

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/mips/pmc-sierra/yosemite/ht.c:386:
+                            resource_size_t size, resource_size_t align)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/mips/pmc-sierra/yosemite/ht.c:386:
+                            resource_size_t size, resource_size_t align)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/mips/pmc-sierra/yosemite/ht.c:391:
+                resource_size_t start = res->start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/mips/pmc-sierra/yosemite/ht.c:391:
+                resource_size_t start = res->start;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: arch/powerpc/kernel/pci_32.c:177:
+void pcibios_align_resource(void *data, struct resource *res,
+				resource_size_t size, resource_size_t align)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'res' - possible side-effects?
#277: FILE: arch/powerpc/kernel/pci_32.c:1123:
+#define push_end(res, mask) do {				\
+	BUG_ON(((mask+1) & mask) != 0);			\
+	res->end = -(-res->end & ~(unsigned long)mask);		\
+	res->end += mask;					\
     } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'res' may be better as '(res)' to avoid precedence issues
#277: FILE: arch/powerpc/kernel/pci_32.c:1123:
+#define push_end(res, mask) do {				\
+	BUG_ON(((mask+1) & mask) != 0);			\
+	res->end = -(-res->end & ~(unsigned long)mask);		\
+	res->end += mask;					\
     } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mask' - possible side-effects?
#277: FILE: arch/powerpc/kernel/pci_32.c:1123:
+#define push_end(res, mask) do {				\
+	BUG_ON(((mask+1) & mask) != 0);			\
+	res->end = -(-res->end & ~(unsigned long)mask);		\
+	res->end += mask;					\
     } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mask' may be better as '(mask)' to avoid precedence issues
#277: FILE: arch/powerpc/kernel/pci_32.c:1123:
+#define push_end(res, mask) do {				\
+	BUG_ON(((mask+1) & mask) != 0);			\
+	res->end = -(-res->end & ~(unsigned long)mask);		\
+	res->end += mask;					\
     } while (0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#278: FILE: arch/powerpc/kernel/pci_32.c:1124:
+	BUG_ON(((mask+1) & mask) != 0);			\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#278: FILE: arch/powerpc/kernel/pci_32.c:1124:
+	BUG_ON(((mask+1) & mask) != 0);			\
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: arch/ppc/kernel/pci.c:175:
+void pcibios_align_resource(void *data, struct resource *res,
+				resource_size_t size, resource_size_t align)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#338: FILE: arch/ppc/kernel/pci.c:963:
+	printk("PCI map for %s:%llx, prot: %lx\n", pci_name(dev),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: arch/ppc/kernel/pci.c:964:
+	printk("PCI map for %s:%llx, prot: %lx\n", pci_name(dev),
+		(unsigned long long)rp->start, prot);

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: arch/xtensa/kernel/pci.c:75:
+    ^I^I       resource_size_t align)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#474: FILE: arch/xtensa/kernel/pci.c:75:
+    ^I^I       resource_size_t align)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: arch/xtensa/kernel/pci.c:75:
+pcibios_align_resource(void *data, struct resource *res, resource_size_t size,
+    		       resource_size_t align)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: arch/xtensa/kernel/pci.c:75:
+    ^I^I       resource_size_t align)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: drivers/pci/bus.c:40:
+		void (*alignf)(void *, struct resource *, resource_size_t,
+				resource_size_t),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#586: FILE: drivers/pci/rom.c:173:
+	memcpy_fromio((void*)(unsigned long)res->start, rom, *size);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#600: FILE: drivers/pci/rom.c:230:
+		kfree((void*)(unsigned long)res->start);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#684: FILE: include/linux/pci.h:405:
+void pcibios_align_resource(void *, struct resource *, resource_size_t,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#684: FILE: include/linux/pci.h:405:
+void pcibios_align_resource(void *, struct resource *, resource_size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#684: FILE: include/linux/pci.h:405:
+void pcibios_align_resource(void *, struct resource *, resource_size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#684: FILE: include/linux/pci.h:405:
+void pcibios_align_resource(void *, struct resource *, resource_size_t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#685: FILE: include/linux/pci.h:406:
+void pcibios_align_resource(void *, struct resource *, resource_size_t,
+				resource_size_t);

ERROR:CODE_INDENT: code indent should use tabs where possible
#708: FILE: include/linux/pci.h:728:
+                const struct resource *rsrc, resource_size_t *start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: include/linux/pci.h:728:
+                const struct resource *rsrc, resource_size_t *start,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000069538.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 12 warnings, 12 checks, 479 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000069538.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
