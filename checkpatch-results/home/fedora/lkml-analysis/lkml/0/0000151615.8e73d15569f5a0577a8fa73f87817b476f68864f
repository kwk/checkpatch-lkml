WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#49: 
Signed-off-by:  Stephen Smalley <sds@tycho.nsa.gov>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: fs/xattr.c:157:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof XATTR_SECURITY_PREFIX should be sizeof(XATTR_SECURITY_PREFIX)
#80: FILE: fs/xattr.c:159:
+		     sizeof XATTR_SECURITY_PREFIX - 1)) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#110: FILE: include/linux/security.h:1097:
+  	int (*inode_getsecurity)(struct inode *inode, const char *name, void *buffer, size_t size, int err);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: include/linux/security.h:1097:
+  ^Iint (*inode_getsecurity)(struct inode *inode, const char *name, void *buffer, size_t size, int err);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#110: FILE: include/linux/security.h:1097:
+  ^Iint (*inode_getsecurity)(struct inode *inode, const char *name, void *buffer, size_t size, int err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: include/linux/security.h:1097:
+  ^Iint (*inode_getsecurity)(struct inode *inode, const char *name, void *buffer, size_t size, int err);$

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#119: FILE: include/linux/security.h:1586:
+static inline int security_inode_getsecurity(struct inode *inode, const char *name, void *buffer, size_t size, int err)

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#133: FILE: include/linux/security.h:2228:
+static inline int security_inode_getsecurity(struct inode *inode, const char *name, void *buffer, size_t size, int err)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#145: FILE: security/dummy.c:380:
+static int dummy_inode_getsecurity(struct inode *inode, const char *name, void *buffer, size_t size, int err)

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#174: FILE: security/selinux/hooks.c:2238:
+static int selinux_inode_getsecurity(struct inode *inode, const char *name, void *buffer, size_t size, int err)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: security/selinux/hooks.c:2264:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len == err'
#211: FILE: security/selinux/hooks.c:2266:
+		if ((len == err) && !(memcmp(context, buffer, len))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: security/selinux/hooks.c:2275:
+out_free:^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151615.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 9 warnings, 1 checks, 147 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151615.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
