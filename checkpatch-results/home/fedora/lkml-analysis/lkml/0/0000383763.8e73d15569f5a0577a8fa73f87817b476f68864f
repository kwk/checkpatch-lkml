WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	           ChangeSet	1.1187  -> 1.1188 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	include/linux/kernel.h	1.34    -> 1.35   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	arch/i386/kernel/cpu/common.c	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	     mm/page_alloc.c	1.148   -> 1.149  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	   arch/i386/Kconfig	1.49    -> 1.50   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	arch/i386/kernel/cpu/intel.c	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	arch/i386/kernel/io_apic.c	1.58    -> 1.59   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	arch/i386/kernel/smpboot.c	1.54    -> 1.55   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	arch/i386/kernel/cpu/mcheck/p6.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	     kernel/printk.c	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	include/asm-i386/mach-default/mach_apic.h	1.22    -> 1.23   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# 03/03/21	mort@plato.i.bork.org	1.1188

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# Adds a new option called PRINTK_VERBOSE.  This option allows certain printk's

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# to be marked as purely extra debug info by using printk_verbose().

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# This is useful for quieting certain boot messages that are not

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# terribly important, except while debugging.  This is especially true

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# on large SMP systems, where each processor or node prints out large

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# quantities of debug info.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#86: 
--- a/arch/i386/Kconfig	Fri Mar 21 17:23:15 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#122: FILE: arch/i386/kernel/cpu/common.c:86:
+		printk_verbose(KERN_INFO "CPU: L1 I Cache: %dK (%d bytes/line), D cache %dK (%d bytes/line)\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: arch/i386/kernel/cpu/common.c:87:
+		printk_verbose(KERN_INFO "CPU: L1 I Cache: %dK (%d bytes/line), D cache %dK (%d bytes/line)\n",
 			edx>>24, edx&0xFF, ecx>>24, ecx&0xFF);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: arch/i386/kernel/cpu/common.c:111:
+	printk_verbose(KERN_INFO "CPU: L2 Cache: %dK (%d bytes/line)\n",
 	       l2size, ecx & 0xFF);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: arch/i386/kernel/cpu/common.c:341:
+	printk_verbose(KERN_DEBUG "CPU:     After generic, caps: %08lx %08lx %08lx %08lx\n",
 	       c->x86_capability[0],

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#177: FILE: arch/i386/kernel/cpu/intel.c:138:
+			printk_verbose(KERN_INFO "CPU: Disabling hardware prefetching (Errata 037)\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: arch/i386/kernel/cpu/mcheck/p6.c:112:
+	printk_verbose(KERN_INFO "Intel machine check reporting enabled on CPU#%d.\n",
 		smp_processor_id());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: arch/i386/kernel/io_apic.c:1334:
+		printk_verbose(KERN_DEBUG " %02x %03X %02X  ",
 			i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: arch/i386/kernel/io_apic.c:1340:
+		printk_verbose("%1d    %1d    %1d   %1d   %1d    %1d    %1d    %02X\n",
 			entry.mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: include/asm-i386/mach-default/mach_apic.h:86:
+	printk_verbose("Processor #%d %ld:%ld APIC version %d\n",
 			m->mpc_apicid,

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: include/linux/kernel.h:97:
+        if (printk_verbose_flag) \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: include/linux/kernel.h:97:
+        if (printk_verbose_flag) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: include/linux/kernel.h:98:
+                printk(args); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: include/linux/kernel.h:98:
+                printk(args); \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#334: FILE: include/linux/kernel.h:98:
+                printk(args); \

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#353: FILE: kernel/printk.c:57:
+int printk_verbose_flag = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: kernel/printk.c:156:
+        if (!strncmp(str, "yes", 3))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: kernel/printk.c:156:
+        if (!strncmp(str, "yes", 3))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: kernel/printk.c:157:
+                printk_verbose_flag = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: kernel/printk.c:157:
+                printk_verbose_flag = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: kernel/printk.c:158:
+        if (!strncmp(str, "no", 2))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: kernel/printk.c:158:
+        if (!strncmp(str, "no", 2))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: kernel/printk.c:159:
+                printk_verbose_flag = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: kernel/printk.c:159:
+                printk_verbose_flag = 0;$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#376: FILE: kernel/printk.c:162:
+__setup("printk_verbose=", printk_verbose_setup);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: mm/page_alloc.c:1218:
+		printk_verbose("  %s zone: %lu pages, LIFO batch:%lu\n",
 				zone_names[j], realsize, batch);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383763.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 37 warnings, 9 checks, 266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383763.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
