WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
[PATCH] PCI Hotplug: rpaphp.patch -- multi-function devices not handled correctly

WARNING:TYPO_SPELLING: 'partiton' may be misspelled - perhaps 'partition'?
#39: 
physically removed, but can be logically removed  from one partiton and
                                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: drivers/pci/hotplug/rpadlpar_core.c:349:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/pci/hotplug/rpaphp.h:99:
+^I^Istruct list_head pci_funcs; /* pci_devs in PCI slot */ $

CHECK:SPACING: No space is necessary after a cast
#176: FILE: drivers/pci/hotplug/rpaphp.h:115:
+	return (int) (ptr != NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ptr"
#176: FILE: drivers/pci/hotplug/rpaphp.h:115:
+	return (int) (ptr != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: drivers/pci/hotplug/rpaphp.h:127:
+extern struct hotplug_slot *rpaphp_find_hotplug_slot(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: drivers/pci/hotplug/rpaphp.h:132:
+extern char *rpaphp_get_drc_name(struct device_node *dn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: drivers/pci/hotplug/rpaphp.h:144:
+extern int deregister_slot(struct slot *slot);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#212: FILE: drivers/pci/hotplug/rpaphp_core.c:57:
+void eeh_register_disable_func(int (*)(struct pci_dev *));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: drivers/pci/hotplug/rpaphp_core.c:217:
+static int get_dn_properties(struct device_node *dn, int **indexes, int **names, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/pci/hotplug/rpaphp_core.c:218:
+static int get_dn_properties(struct device_node *dn, int **indexes, int **names, 
+	int **types, int **power_domains)

CHECK:SPACING: No space is necessary after a cast
#285: FILE: drivers/pci/hotplug/rpaphp_core.c:229:
+	*power_domains = (int *) get_property(dn, "ibm,drc-power-domains", NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/pci/hotplug/rpaphp_core.c:230:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: drivers/pci/hotplug/rpaphp_core.c:231:
+^Iif (*indexes && *names && *types && *power_domains) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/pci/hotplug/rpaphp_core.c:233:
+^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#290: FILE: drivers/pci/hotplug/rpaphp_core.c:234:
+	return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: drivers/pci/hotplug/rpaphp_core.c:238:
+static int is_php_dn(struct device_node *dn, int **indexes, int **names, int **types,
+	  int **power_domains)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#300: FILE: drivers/pci/hotplug/rpaphp_core.c:244:
+	return (1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/pci/hotplug/rpaphp_core.c:248:
+static int is_dr_dn(struct device_node *dn, int **indexes, int **names, int **types,
+	  int **power_domains, int **my_drc_index)

CHECK:SPACING: No space is necessary after a cast
#309: FILE: drivers/pci/hotplug/rpaphp_core.c:253:
+	*my_drc_index = (int *) get_property(dn, "ibm,my-drc-index", NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: drivers/pci/hotplug/rpaphp_core.c:254:
+^Iif(!*my_drc_index) ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#310: FILE: drivers/pci/hotplug/rpaphp_core.c:254:
+^Iif(!*my_drc_index) ^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#310: FILE: drivers/pci/hotplug/rpaphp_core.c:254:
+	if(!*my_drc_index) 		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: drivers/pci/hotplug/rpaphp_core.c:272:
+^Istruct device_node *parent = dn->parent;^I$

CHECK:SPACING: No space is necessary after a cast
#338: FILE: drivers/pci/hotplug/rpaphp_core.c:278:
+	my_drc_index = (u32 *) get_property(dn, "ibm,my-drc-index", NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: drivers/pci/hotplug/rpaphp_core.c:280:
+^I^Ireturn NULL;^I$

CHECK:SPACING: No space is necessary after a cast
#342: FILE: drivers/pci/hotplug/rpaphp_core.c:282:
+	drc_names = (int *) get_property(parent, "ibm,drc-names", NULL);

CHECK:SPACING: No space is necessary after a cast
#343: FILE: drivers/pci/hotplug/rpaphp_core.c:283:
+	drc_indexes = (int *) get_property(parent, "ibm,drc-indexes", NULL);

CHECK:SPACING: No space is necessary after a cast
#347: FILE: drivers/pci/hotplug/rpaphp_core.c:287:
+	name = (char *) &drc_names[1];

CHECK:SPACING: No space is necessary after a cast
#350: FILE: drivers/pci/hotplug/rpaphp_core.c:290:
+			ptr = (char *) name;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: drivers/pci/hotplug/rpaphp_core.c:299:
+ *^Irpaphp not only registers PCI hotplug slots(HOTPLUG), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: drivers/pci/hotplug/rpaphp_core.c:301:
+ *^IHOTPLUG slot: An adapter can be physically added/removed. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/pci/hotplug/rpaphp_core.c:323:
+^I^Iif (is_php_dn(dn, &indexes, &names, &types, &power_domains))  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: drivers/pci/hotplug/rpaphp_core.c:325:
+^I^Ielse if (is_dr_dn(dn, &indexes, &names, &types, &power_domains, &my_drc_index)) $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#385: FILE: drivers/pci/hotplug/rpaphp_core.c:327:
+		else goto exit;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/pci/hotplug/rpaphp_core.c:332:
+^I     ^I^Iname += (strlen(name) + 1), type += (strlen(type) + 1)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#403: FILE: drivers/pci/hotplug/rpaphp_core.c:332:
+^I     ^I^Iname += (strlen(name) + 1), type += (strlen(type) + 1)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: drivers/pci/hotplug/rpaphp_core.c:332:
+		for (i = 0; i < indexes[0]; i++,
+	     		name += (strlen(name) + 1), type += (strlen(type) + 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: drivers/pci/hotplug/rpaphp_core.c:334:
+^I^I^Iif ( slot_type == HOTPLUG || $

ERROR:SPACING: space prohibited after that open parenthesis '('
#407: FILE: drivers/pci/hotplug/rpaphp_core.c:334:
+			if ( slot_type == HOTPLUG || 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/pci/hotplug/rpaphp_core.c:335:
+			if ( slot_type == HOTPLUG || 
+				(slot_type == EMBEDDED && indexes[i + 1] == my_drc_index[0])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: drivers/pci/hotplug/rpaphp_core.c:336:
+^I^I^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#409: FILE: drivers/pci/hotplug/rpaphp_core.c:336:
+				(slot_type == EMBEDDED && indexes[i + 1] == my_drc_index[0])) {
+				

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#410: FILE: drivers/pci/hotplug/rpaphp_core.c:337:
+				if (!(slot = alloc_slot_struct(dn, indexes[i + 1], name,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: drivers/pci/hotplug/rpaphp_core.c:338:
+				if (!(slot = alloc_slot_struct(dn, indexes[i + 1], name,
+					       power_domains[i + 1]))) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#418: FILE: drivers/pci/hotplug/rpaphp_core.c:345:
+					slot->type = simple_strtoul(type, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: drivers/pci/hotplug/rpaphp_core.c:346:
+^I^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/pci/hotplug/rpaphp_core.c:348:
+				dbg("    Found drc-index:0x%x drc-name:%s drc-type:%s\n",
+					indexes[i + 1], name, type);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#450: FILE: drivers/pci/hotplug/rpaphp_core.c:376:
+{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: drivers/pci/hotplug/rpaphp_pci.c:136:
+^I^I^I^Ierr("%s: can't find pdev of adapter in slot[%s]\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/pci/hotplug/rpaphp_pci.c:137:
+				err("%s: can't find pdev of adapter in slot[%s]\n", 
+					__FUNCTION__, slot->dn->full_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#569: FILE: drivers/pci/hotplug/rpaphp_pci.c:137:
+					__FUNCTION__, slot->dn->full_name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: drivers/pci/hotplug/rpaphp_pci.c:151:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/pci/hotplug/rpaphp_pci.c:163:
+^I^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#590: FILE: drivers/pci/hotplug/rpaphp_pci.c:164:
+			if(fix_bus)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: drivers/pci/hotplug/rpaphp_pci.c:181:
+ rpaphp_pci_config_slot() will  configure all devices under the $

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#618: FILE: drivers/pci/hotplug/rpaphp_pci.c:182:
+ given slot->dn and return the the first pci_dev.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: drivers/pci/hotplug/rpaphp_pci.c:190:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#629: FILE: drivers/pci/hotplug/rpaphp_pci.c:191:
+	dbg("Enter %s: dn=%s bus=%s\n", __FUNCTION__, dn->full_name, bus->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: drivers/pci/hotplug/rpaphp_pci.c:197:
+^I^I^Irpaphp_fixup_new_pci_devices(bus, 1); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: drivers/pci/hotplug/rpaphp_pci.c:205:
+^I^Iif (dev->hdr_type == PCI_HEADER_TYPE_BRIDGE) $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#677: FILE: drivers/pci/hotplug/rpaphp_pci.c:217:
+	dbg("Enter %s:  BRIDGE dev=%s\n", __FUNCTION__, pci_name(dev));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: drivers/pci/hotplug/rpaphp_pci.c:221:
+^I^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#687: FILE: drivers/pci/hotplug/rpaphp_pci.c:225:
+		err("%s: could not add second bus\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: drivers/pci/hotplug/rpaphp_pci.c:248:
+^Ifor (sib = dn->child; sib; sib = sib->sibling) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: drivers/pci/hotplug/rpaphp_pci.c:252:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#716: FILE: drivers/pci/hotplug/rpaphp_pci.c:253:
+	
+}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#724: FILE: drivers/pci/hotplug/rpaphp_pci.c:261:
+		printk("pci_funcs of slot[%s]\n", slot->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#726: FILE: drivers/pci/hotplug/rpaphp_pci.c:263:
+			printk("	pci_funcs is EMPTY\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#728: FILE: drivers/pci/hotplug/rpaphp_pci.c:265:
+		list_for_each (l, &slot->dev.pci_funcs) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#731: FILE: drivers/pci/hotplug/rpaphp_pci.c:268:
+			printk("	FOUND dev=%s\n", pci_name(func->pci_dev));

WARNING:RETURN_VOID: void function return statements are not generally useful
#735: FILE: drivers/pci/hotplug/rpaphp_pci.c:272:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#740: FILE: drivers/pci/hotplug/rpaphp_pci.c:277:
+	return;
+}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "child"
#747: FILE: drivers/pci/hotplug/rpaphp_pci.c:284:
+	for (child = slot->dn->child; child != NULL; child = child->sibling) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#752: FILE: drivers/pci/hotplug/rpaphp_pci.c:289:
+			struct rpaphp_pci_func *func;
+			func = kmalloc(sizeof(struct rpaphp_pci_func), GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*func)...) over kmalloc(sizeof(struct rpaphp_pci_func)...)
#752: FILE: drivers/pci/hotplug/rpaphp_pci.c:289:
+			func = kmalloc(sizeof(struct rpaphp_pci_func), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: drivers/pci/hotplug/rpaphp_pci.c:290:
+^I^I^Iif (!func) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: drivers/pci/hotplug/rpaphp_pci.c:298:
+^I^I^Ierr("%s: dn=%s has no pci_dev\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: drivers/pci/hotplug/rpaphp_pci.c:299:
+			err("%s: dn=%s has no pci_dev\n", 
+				__FUNCTION__, child->full_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#762: FILE: drivers/pci/hotplug/rpaphp_pci.c:299:
+				__FUNCTION__, child->full_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#790: FILE: drivers/pci/hotplug/rpaphp_pci.c:324:
+			err("%s: can't find any devices.\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: drivers/pci/hotplug/rpaphp_pci.c:327:
+^I^I/* associate corresponding pci_dev */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: drivers/pci/hotplug/rpaphp_pci.c:332:
+^I^Iif (!list_empty(&slot->dev.pci_funcs)) $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#809: FILE: drivers/pci/hotplug/rpaphp_pci.c:339:
+	dbg("Exit %s:  rc=%d\n", __FUNCTION__, rc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#813: FILE: drivers/pci/hotplug/rpaphp_pci.c:343:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#820: FILE: drivers/pci/hotplug/rpaphp_pci.c:350:
+		struct list_head *ln;
+		if (!bus)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: drivers/pci/hotplug/rpaphp_pci.c:351:
+^I^I^Ireturn; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#824: FILE: drivers/pci/hotplug/rpaphp_pci.c:354:
+			struct pci_dev *pdev = pci_dev_b(ln);
+			if (pdev)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#828: FILE: drivers/pci/hotplug/rpaphp_pci.c:358:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: drivers/pci/hotplug/rpaphp_pci.c:369:
+^I^Ierr("%s: slot[%s] doesn't have any devices.\n", __FUNCTION__, $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#841: FILE: drivers/pci/hotplug/rpaphp_pci.c:369:
+		err("%s: slot[%s] doesn't have any devices.\n", __FUNCTION__, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#842: FILE: drivers/pci/hotplug/rpaphp_pci.c:370:
+		err("%s: slot[%s] doesn't have any devices.\n", __FUNCTION__, 
+			slot->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#852: FILE: drivers/pci/hotplug/rpaphp_pci.c:376:
+	list_for_each (ln, &slot->dev.pci_funcs) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#854: FILE: drivers/pci/hotplug/rpaphp_pci.c:378:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: drivers/pci/hotplug/rpaphp_pci.c:382:
+^I^I^Ipci_remove_bus_device(func->pci_dev); $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#865: FILE: drivers/pci/hotplug/rpaphp_pci.c:388:
+	info("%s: devices in slot[%s] unconfigured.\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#885: FILE: drivers/pci/hotplug/rpaphp_pci.c:415:
+		err("%s: no pci_dev for bridge dn %s\n", __FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#889: FILE: drivers/pci/hotplug/rpaphp_pci.c:418:
+	dbg("%s set slot->name to %s\n",  __FUNCTION__, pci_name(slot->bridge));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#903: FILE: drivers/pci/hotplug/rpaphp_pci.c:428:
+^I^I^Ierr("%s: slot[%s]'s device_node doesn't have child for adapter\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: drivers/pci/hotplug/rpaphp_pci.c:429:
+			err("%s: slot[%s]'s device_node doesn't have child for adapter\n", 
+				__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#904: FILE: drivers/pci/hotplug/rpaphp_pci.c:429:
+				__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#908: FILE: drivers/pci/hotplug/rpaphp_pci.c:433:
+			err("%s: init_slot_pci_funcs failed\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#917: FILE: drivers/pci/hotplug/rpaphp_pci.c:439:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: drivers/pci/hotplug/rpaphp_pci.c:442:
+^I^I ^I * boot time */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#921: FILE: drivers/pci/hotplug/rpaphp_pci.c:442:
+^I^I ^I * boot time */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#921: FILE: drivers/pci/hotplug/rpaphp_pci.c:442:
+		 	 * boot time */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#959: FILE: drivers/pci/hotplug/rpaphp_pci.c:481:
+		dbg("%s : slot[%s] is occupied.\n", __FUNCTION__, slot->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: drivers/pci/hotplug/rpaphp_pci.c:485:
+^I^I^Idbg("%s: PCI devices in slot[%s] has been configured\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#966: FILE: drivers/pci/hotplug/rpaphp_pci.c:486:
+			dbg("%s: PCI devices in slot[%s] has been configured\n", 
+				__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#966: FILE: drivers/pci/hotplug/rpaphp_pci.c:486:
+				__FUNCTION__, slot->name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#995: FILE: drivers/pci/hotplug/rpaphp_pci.c:519:
+		for (ln = bus->devices.next; ln != &bus->devices; ln = ln->next) {
+                                struct pci_dev *pdev = pci_dev_b(ln);

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: drivers/pci/hotplug/rpaphp_pci.c:520:
+                                struct pci_dev *pdev = pci_dev_b(ln);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: drivers/pci/hotplug/rpaphp_pci.c:520:
+                                struct pci_dev *pdev = pci_dev_b(ln);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1005: FILE: drivers/pci/hotplug/rpaphp_pci.c:529:
+EXPORT_SYMBOL_GPL(rpaphp_find_hotplug_slot);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1013: FILE: drivers/pci/hotplug/rpaphp_slot.c:32:
+static ssize_t removable_read_file (struct hotplug_slot *php_slot, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1023: FILE: drivers/pci/hotplug/rpaphp_slot.c:42:
+	retval = sprintf (buf, "%d\n", value);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1028: FILE: drivers/pci/hotplug/rpaphp_slot.c:47:
+	.attr = {.name = "phy_removable", .mode = S_IFREG | S_IRUGO},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1032: FILE: drivers/pci/hotplug/rpaphp_slot.c:51:
+static void rpaphp_sysfs_add_attr_removable (struct hotplug_slot *slot)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1037: FILE: drivers/pci/hotplug/rpaphp_slot.c:56:
+static void rpaphp_sysfs_remove_attr_removable (struct hotplug_slot *slot)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1050: FILE: drivers/pci/hotplug/rpaphp_slot.c:85:
+static void rpaphp_sysfs_remove_attr_location (struct hotplug_slot *slot)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1061: FILE: drivers/pci/hotplug/rpaphp_slot.c:103:
+		list_for_each_safe (ln, n, &slot->dev.pci_funcs) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: drivers/pci/hotplug/rpaphp_slot.c:129:
+^I^Igoto error_slot;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1086: FILE: drivers/pci/hotplug/rpaphp_slot.c:138:
+^I^Igoto error_info;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1097: FILE: drivers/pci/hotplug/rpaphp_slot.c:150:
+^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1098: FILE: drivers/pci/hotplug/rpaphp_slot.c:151:
+	return (slot);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1113: FILE: drivers/pci/hotplug/rpaphp_slot.c:172:
+^I}^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1123: FILE: drivers/pci/hotplug/rpaphp_slot.c:182:
+	 dbg("%s - Entry: deregistering slot=%s\n",
+		__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1123: FILE: drivers/pci/hotplug/rpaphp_slot.c:182:
+		__FUNCTION__, slot->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1126: FILE: drivers/pci/hotplug/rpaphp_slot.c:185:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1139: FILE: drivers/pci/hotplug/rpaphp_slot.c:198:
+	dbg("%s - Exit: rc[%d]\n", __FUNCTION__, retval);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1150: FILE: drivers/pci/hotplug/rpaphp_slot.c:206:
+^Idbg("%s registering slot:path[%s] index[%x], name[%s] pdomain[%x] type[%d]\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1151: FILE: drivers/pci/hotplug/rpaphp_slot.c:207:
+^I^I__FUNCTION__, slot->dn->full_name, slot->index, slot->name, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1151: FILE: drivers/pci/hotplug/rpaphp_slot.c:207:
+	dbg("%s registering slot:path[%s] index[%x], name[%s] pdomain[%x] type[%d]\n", 
+		__FUNCTION__, slot->dn->full_name, slot->index, slot->name, 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1151: FILE: drivers/pci/hotplug/rpaphp_slot.c:207:
+		__FUNCTION__, slot->dn->full_name, slot->index, slot->name, 

WARNING:TYPO_SPELLING: 'should't' may be misspelled - perhaps 'shouldn't'?
#1155: FILE: drivers/pci/hotplug/rpaphp_slot.c:210:
+	if (is_registered(slot)) { /* should't be here */
 	                              ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1159: FILE: drivers/pci/hotplug/rpaphp_slot.c:214:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1168: FILE: drivers/pci/hotplug/rpaphp_slot.c:226:
+^Irpaphp_sysfs_add_attr_removable(slot->hotplug_slot);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1200: FILE: drivers/pci/hotplug/rpaphp_slot.c:247:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1203: FILE: drivers/pci/hotplug/rpaphp_slot.c:250:
+		dbg("%s set to POWER_ON for EMBEDDED slot %s\n",
+			__FUNCTION__, slot->location);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1203: FILE: drivers/pci/hotplug/rpaphp_slot.c:250:
+			__FUNCTION__, slot->location);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1206: FILE: drivers/pci/hotplug/rpaphp_slot.c:253:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1206: FILE: drivers/pci/hotplug/rpaphp_slot.c:253:
+	else {

CHECK:SPACING: No space is necessary after a cast
#1207: FILE: drivers/pci/hotplug/rpaphp_slot.c:254:
+		rc = rtas_get_power_level(slot->power_domain, (int *) value);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1210: FILE: drivers/pci/hotplug/rpaphp_slot.c:257:
+^I^I    ^I^Islot->location, rc);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1210: FILE: drivers/pci/hotplug/rpaphp_slot.c:257:
+^I^I    ^I^Islot->location, rc);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1210: FILE: drivers/pci/hotplug/rpaphp_slot.c:257:
+			err("failed to get power-level for slot(%s), rc=0x%x\n",
+		    		slot->location, rc);

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#1221: FILE: drivers/pci/hotplug/rpaphp_slot.c:270:
+		err("slot(name=%s location=%s index=0x%x) set attention-status(%d) failed! rc=0x%x\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272267.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 60 errors, 51 warnings, 37 checks, 1125 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272267.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
