WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#108: 
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#171: FILE: Documentation/kernel-parameters.txt:351:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#188: FILE: arch/i386/kernel/io_apic.c:208:
 }
+#if defined(CONFIG_SMP)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#189: FILE: arch/i386/kernel/io_apic.c:209:
+# include <asm/processor.h>	/* kernel_thread() */

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#193: FILE: arch/i386/kernel/io_apic.c:213:
+=20
 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#195: FILE: arch/i386/kernel/io_apic.c:215:
+#  define TDprintk(x...) do { printk("<%ld:%s:%d>: ", jiffies, =

CHECK:CAMELCASE: Avoid CamelCase: <TDprintk>
#195: FILE: arch/i386/kernel/io_apic.c:215:
+#  define TDprintk(x...) do { printk("<%ld:%s:%d>: ", jiffies, =

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#197: FILE: arch/i386/kernel/io_apic.c:216:
+#  define Dprintk(x...) do { TDprintk(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#197: FILE: arch/i386/kernel/io_apic.c:216:
+#  define Dprintk(x...) do { TDprintk(x); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#199: FILE: arch/i386/kernel/io_apic.c:218:
+#  define TDprintk(x...)=20
                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#199: FILE: arch/i386/kernel/io_apic.c:218:
+#  define TDprintk(x...)=20

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#200: FILE: arch/i386/kernel/io_apic.c:219:
+#  define Dprintk(x...)=20
                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#200: FILE: arch/i386/kernel/io_apic.c:219:
+#  define Dprintk(x...)=20

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: arch/i386/kernel/io_apic.c:221:
+# define MIN(a,b) (((a) < (b)) ? (a) : (b))
               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#210: FILE: arch/i386/kernel/io_apic.c:221:
+# define MIN(a,b) (((a) < (b)) ? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#210: FILE: arch/i386/kernel/io_apic.c:221:
+# define MIN(a,b) (((a) < (b)) ? (a) : (b))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: arch/i386/kernel/io_apic.c:222:
+# define MAX(a,b) (((a) > (b)) ? (a) : (b))
               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#211: FILE: arch/i386/kernel/io_apic.c:222:
+# define MAX(a,b) (((a) > (b)) ? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#211: FILE: arch/i386/kernel/io_apic.c:222:
+# define MAX(a,b) (((a) > (b)) ? (a) : (b))

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#216: FILE: arch/i386/kernel/io_apic.c:224:
+unsigned long __cacheline_aligned irq_balance_mask [NR_IRQS];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#217: FILE: arch/i386/kernel/io_apic.c:225:
+static int irqbalance_disabled __initdata =3D 0;
                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#218: FILE: arch/i386/kernel/io_apic.c:226:
+static int physical_balance =3D 0;
                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: arch/i386/kernel/io_apic.c:229:
+	unsigned long * last_irq;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#222: FILE: arch/i386/kernel/io_apic.c:230:
+	unsigned long * irq_delta;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#224: FILE: arch/i386/kernel/io_apic.c:232:
+} irq_cpu_data[NR_CPUS];

ERROR:SPACING: space required after that ',' (ctx:VxV)
#227: FILE: arch/i386/kernel/io_apic.c:235:
+#define LAST_CPU_IRQ(cpu,irq)   (irq_cpu_data[cpu].last_irq[irq])
                         ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: arch/i386/kernel/io_apic.c:236:
+#define IRQ_DELTA(cpu,irq) ^I(irq_cpu_data[cpu].irq_delta[irq])$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: arch/i386/kernel/io_apic.c:236:
+#define IRQ_DELTA(cpu,irq) 	(irq_cpu_data[cpu].irq_delta[irq])
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#237: FILE: arch/i386/kernel/io_apic.c:246:
+#define CPU_TO_PACKAGEINDEX(i) \
+		((physical_balance && i > cpu_sibling_map[i]) ? cpu_sibling_map[i] : =

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#237: FILE: arch/i386/kernel/io_apic.c:246:
+#define CPU_TO_PACKAGEINDEX(i) \
+		((physical_balance && i > cpu_sibling_map[i]) ? cpu_sibling_map[i] : =

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#237: FILE: arch/i386/kernel/io_apic.c:246:
+#define CPU_TO_PACKAGEINDEX(i) \
+		((physical_balance && i > cpu_sibling_map[i]) ? cpu_sibling_map[i] : =

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#241: FILE: arch/i386/kernel/io_apic.c:249:
+#define MAX_BALANCED_IRQ_INTERVAL	(5*HZ)
                                  	  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#242: FILE: arch/i386/kernel/io_apic.c:250:
+#define MIN_BALANCED_IRQ_INTERVAL	(HZ/2)
                                  	   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#243: FILE: arch/i386/kernel/io_apic.c:251:
+#define BALANCED_IRQ_MORE_DELTA		(HZ/10)
                                		   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#246: FILE: arch/i386/kernel/io_apic.c:254:
+unsigned long balanced_irq_interval =3D MAX_BALANCED_IRQ_INTERVAL;
                                     ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#247: FILE: arch/i386/kernel/io_apic.c:255:
+unsigned long balanced_irq_interval =3D MAX_BALANCED_IRQ_INTERVAL;
+					=20

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#247: FILE: arch/i386/kernel/io_apic.c:255:
+					=20
 					^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#252: FILE: arch/i386/kernel/io_apic.c:259:
+static inline void rotate_irqs_among_cpus(unsigned long =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#254: FILE: arch/i386/kernel/io_apic.c:261:
+	int i, j;
+	Dprintk("Rotating IRQs among CPUs.\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#255: FILE: arch/i386/kernel/io_apic.c:262:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#255: FILE: arch/i386/kernel/io_apic.c:262:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#256: FILE: arch/i386/kernel/io_apic.c:263:
+		for (j =3D 0; cpu_online(i) && (j < NR_IRQS); j++) {
 		       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: arch/i386/kernel/io_apic.c:267:
+			if (IRQ_DELTA(CPU_TO_PACKAGEINDEX(i),j) < useful_load_threshold)
 			                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#265: FILE: arch/i386/kernel/io_apic.c:272:
+	balanced_irq_interval =3D MAX(MIN_BALANCED_IRQ_INTERVAL,
 	                      ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#266: FILE: arch/i386/kernel/io_apic.c:273:
+		balanced_irq_interval - BALANCED_IRQ_LESS_DELTA);=09
 		                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#266: FILE: arch/i386/kernel/io_apic.c:273:
+		balanced_irq_interval - BALANCED_IRQ_LESS_DELTA);=09
 		                                                 ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#268: FILE: arch/i386/kernel/io_apic.c:275:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: arch/i386/kernel/io_apic.c:280:
+	unsigned long max_cpu_irq =3D 0, min_cpu_irq =3D (~0);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#273: FILE: arch/i386/kernel/io_apic.c:280:
+	unsigned long max_cpu_irq =3D 0, min_cpu_irq =3D (~0);
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#273: FILE: arch/i386/kernel/io_apic.c:280:
+	unsigned long max_cpu_irq =3D 0, min_cpu_irq =3D (~0);
 	                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#274: FILE: arch/i386/kernel/io_apic.c:281:
+	unsigned long move_this_load =3D 0;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#275: FILE: arch/i386/kernel/io_apic.c:282:
+	int max_loaded =3D 0, min_loaded =3D 0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#275: FILE: arch/i386/kernel/io_apic.c:282:
+	int max_loaded =3D 0, min_loaded =3D 0;
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#276: FILE: arch/i386/kernel/io_apic.c:283:
+	unsigned long useful_load_threshold =3D balanced_irq_interval + 10;
 	                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#278: FILE: arch/i386/kernel/io_apic.c:285:
+	int tmp_loaded, first_attempt =3D 1;
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#280: FILE: arch/i386/kernel/io_apic.c:287:
+	unsigned long imbalance =3D 0;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#284: FILE: arch/i386/kernel/io_apic.c:291:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#284: FILE: arch/i386/kernel/io_apic.c:291:
+	for (i =3D 0; i < NR_CPUS; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: arch/i386/kernel/io_apic.c:293:
+		int package_index;
+		CPU_IRQ(i) =3D 0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#286: FILE: arch/i386/kernel/io_apic.c:293:
+		CPU_IRQ(i) =3D 0;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#289: FILE: arch/i386/kernel/io_apic.c:296:
+		package_index =3D CPU_TO_PACKAGEINDEX(i);
 		              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#290: FILE: arch/i386/kernel/io_apic.c:297:
+		for (j =3D 0; j < NR_IRQS; j++) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#295: FILE: arch/i386/kernel/io_apic.c:302:
+			if (package_index =3D=3D i)
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#295: FILE: arch/i386/kernel/io_apic.c:302:
+			if (package_index =3D=3D i)
 			                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#295: FILE: arch/i386/kernel/io_apic.c:302:
+			if (package_index =3D=3D i)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#296: FILE: arch/i386/kernel/io_apic.c:303:
+				IRQ_DELTA(package_index,j) =3D 0;
 				                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#296: FILE: arch/i386/kernel/io_apic.c:303:
+				IRQ_DELTA(package_index,j) =3D 0;
 				                           ^

CHECK:SPACING: No space is necessary after a cast
#298: FILE: arch/i386/kernel/io_apic.c:305:
+			value_now =3D (unsigned long) kstat_cpu(i).irqs[j];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: arch/i386/kernel/io_apic.c:305:
+			value_now =3D (unsigned long) kstat_cpu(i).irqs[j];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#298: FILE: arch/i386/kernel/io_apic.c:305:
+			value_now =3D (unsigned long) kstat_cpu(i).irqs[j];
 			          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#301: FILE: arch/i386/kernel/io_apic.c:308:
+			delta =3D value_now - LAST_CPU_IRQ(i,j);
 			      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: arch/i386/kernel/io_apic.c:308:
+			delta =3D value_now - LAST_CPU_IRQ(i,j);
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: arch/i386/kernel/io_apic.c:311:
+			LAST_CPU_IRQ(i,j) =3D value_now;
 			              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#304: FILE: arch/i386/kernel/io_apic.c:311:
+			LAST_CPU_IRQ(i,j) =3D value_now;
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#310: FILE: arch/i386/kernel/io_apic.c:317:
+			IRQ_DELTA(package_index,j) +=3D delta;
 			                       ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#310: FILE: arch/i386/kernel/io_apic.c:317:
+			IRQ_DELTA(package_index,j) +=3D delta;
 			                           ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#313: FILE: arch/i386/kernel/io_apic.c:320:
+			if (i !=3D package_index)
 			      ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#314: FILE: arch/i386/kernel/io_apic.c:321:
+				CPU_IRQ(i) +=3D delta;
 				           ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#321: FILE: arch/i386/kernel/io_apic.c:328:
+			CPU_IRQ(package_index) +=3D delta;
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#325: FILE: arch/i386/kernel/io_apic.c:332:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#325: FILE: arch/i386/kernel/io_apic.c:332:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#331: FILE: arch/i386/kernel/io_apic.c:338:
+			min_cpu_irq =3D CPU_IRQ(i);
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#332: FILE: arch/i386/kernel/io_apic.c:339:
+			min_loaded =3D i;
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#335: FILE: arch/i386/kernel/io_apic.c:342:
+	max_cpu_irq =3D ULONG_MAX;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#342: FILE: arch/i386/kernel/io_apic.c:349:
+	tmp_cpu_irq =3D 0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#343: FILE: arch/i386/kernel/io_apic.c:350:
+	tmp_loaded =3D -1;
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#343: FILE: arch/i386/kernel/io_apic.c:350:
+	tmp_loaded =3D -1;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#344: FILE: arch/i386/kernel/io_apic.c:351:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#344: FILE: arch/i386/kernel/io_apic.c:351:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#349: FILE: arch/i386/kernel/io_apic.c:356:
+		if (max_cpu_irq <=3D CPU_IRQ(i))=20
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#349: FILE: arch/i386/kernel/io_apic.c:356:
+		if (max_cpu_irq <=3D CPU_IRQ(i))=20
 		                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#349: FILE: arch/i386/kernel/io_apic.c:356:
+		if (max_cpu_irq <=3D CPU_IRQ(i))=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#352: FILE: arch/i386/kernel/io_apic.c:359:
+			tmp_cpu_irq =3D CPU_IRQ(i);
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#353: FILE: arch/i386/kernel/io_apic.c:360:
+			tmp_loaded =3D i;
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#357: FILE: arch/i386/kernel/io_apic.c:364:
+	if (tmp_loaded =3D=3D -1) {
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#357: FILE: arch/i386/kernel/io_apic.c:364:
+	if (tmp_loaded =3D=3D -1) {
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#357: FILE: arch/i386/kernel/io_apic.c:364:
+	if (tmp_loaded =3D=3D -1) {
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#357: FILE: arch/i386/kernel/io_apic.c:364:
+	if (tmp_loaded =3D=3D -1) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: arch/i386/kernel/io_apic.c:365:
+ ^I /* In the case of small number of heavy interrupt sources,=20$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#358: FILE: arch/i386/kernel/io_apic.c:365:
+ ^I /* In the case of small number of heavy interrupt sources,=20$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: arch/i386/kernel/io_apic.c:365:
+ ^I /* In the case of small number of heavy interrupt sources,=20$

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#362: FILE: arch/i386/kernel/io_apic.c:369:
+		if (!first_attempt && imbalance >=3D useful_load_threshold) {
 		                                ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#368: FILE: arch/i386/kernel/io_apic.c:375:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#369: FILE: arch/i386/kernel/io_apic.c:376:
+	first_attempt =3D 0;		/* heaviest search */
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#370: FILE: arch/i386/kernel/io_apic.c:377:
+	max_cpu_irq =3D tmp_cpu_irq;	/* load */
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#371: FILE: arch/i386/kernel/io_apic.c:378:
+	max_loaded =3D tmp_loaded;	/* processor */
 	           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#372: FILE: arch/i386/kernel/io_apic.c:379:
+	imbalance =3D (max_cpu_irq - min_cpu_irq) / 2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#372: FILE: arch/i386/kernel/io_apic.c:379:
+	imbalance =3D (max_cpu_irq - min_cpu_irq) / 2;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#373: FILE: arch/i386/kernel/io_apic.c:380:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#392: FILE: arch/i386/kernel/io_apic.c:399:
+	move_this_load =3D 0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#393: FILE: arch/i386/kernel/io_apic.c:400:
+	selected_irq =3D -1;
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#393: FILE: arch/i386/kernel/io_apic.c:400:
+	selected_irq =3D -1;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#394: FILE: arch/i386/kernel/io_apic.c:401:
+	for (j =3D 0; j < NR_IRQS; j++) {
 	       ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#398: FILE: arch/i386/kernel/io_apic.c:405:
+		if (imbalance <=3D IRQ_DELTA(max_loaded,j))
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#398: FILE: arch/i386/kernel/io_apic.c:405:
+		if (imbalance <=3D IRQ_DELTA(max_loaded,j))
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: arch/i386/kernel/io_apic.c:410:
+		if (move_this_load < IRQ_DELTA(max_loaded,j)) {
 		                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#404: FILE: arch/i386/kernel/io_apic.c:411:
+			move_this_load =3D IRQ_DELTA(max_loaded,j);
 			               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: arch/i386/kernel/io_apic.c:411:
+			move_this_load =3D IRQ_DELTA(max_loaded,j);
 			                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#405: FILE: arch/i386/kernel/io_apic.c:412:
+			selected_irq =3D j;
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#408: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#408: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#408: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {
 	                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#408: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#408: FILE: arch/i386/kernel/io_apic.c:415:
+	if (selected_irq =3D=3D -1) {
+		goto tryanothercpu;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#413: FILE: arch/i386/kernel/io_apic.c:418:
+	imbalance =3D move_this_load;
 	          ^

WARNING:TYPO_SPELLING: 'accumlated' may be misspelled - perhaps 'accumulated'?
#415: FILE: arch/i386/kernel/io_apic.c:420:
+	/* For physical_balance case, we accumlated both load
 	                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#428: FILE: arch/i386/kernel/io_apic.c:433:
+	if (physical_balance && (CPU_IRQ(min_loaded) >> 1) > =

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#430: FILE: arch/i386/kernel/io_apic.c:434:
+		min_loaded =3D cpu_sibling_map[min_loaded];
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#432: FILE: arch/i386/kernel/io_apic.c:436:
+	allowed_mask =3D cpu_online_map & irq_affinity[selected_irq];
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#433: FILE: arch/i386/kernel/io_apic.c:437:
+	target_cpu_mask =3D 1 << min_loaded;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: arch/i386/kernel/io_apic.c:440:
+		irq_desc_t *desc =3D irq_desc + selected_irq;
 		                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#437: FILE: arch/i386/kernel/io_apic.c:441:
+		irq_desc_t *desc =3D irq_desc + selected_irq;
+		Dprintk("irq =3D %d moved to cpu =3D %d\n", selected_irq, =

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#441: FILE: arch/i386/kernel/io_apic.c:444:
+		irq_balance_mask[selected_irq] =3D target_cpu_mask;
 		                               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#446: FILE: arch/i386/kernel/io_apic.c:449:
+		balanced_irq_interval =3D MAX(MIN_BALANCED_IRQ_INTERVAL,
 		                      ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#447: FILE: arch/i386/kernel/io_apic.c:450:
+			balanced_irq_interval - BALANCED_IRQ_LESS_DELTA);=09
 			                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#447: FILE: arch/i386/kernel/io_apic.c:450:
+			balanced_irq_interval - BALANCED_IRQ_LESS_DELTA);=09
 			                                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#455: FILE: arch/i386/kernel/io_apic.c:457:
+	/* if we did not find an IRQ to move, then adjust the time interval =
+	balanced_irq_interval =3D MIN(MAX_BALANCED_IRQ_INTERVAL,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#470: FILE: arch/i386/kernel/io_apic.c:490:
 }
+static inline void balance_irq (int cpu, int irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: arch/i386/kernel/io_apic.c:490:
+static inline void balance_irq (int cpu, int irq)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#477: FILE: arch/i386/kernel/io_apic.c:495:
+	unsigned int new_cpu;
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#477: FILE: arch/i386/kernel/io_apic.c:495:
+	=09
 	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#496: FILE: arch/i386/kernel/io_apic.c:498:
+	allowed_mask =3D cpu_online_map & irq_affinity[irq];
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#497: FILE: arch/i386/kernel/io_apic.c:499:
+	new_cpu =3D move(cpu, allowed_mask, now, 1);
 	        ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#498: FILE: arch/i386/kernel/io_apic.c:500:
+	if (cpu !=3D new_cpu) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#499: FILE: arch/i386/kernel/io_apic.c:501:
+		irq_desc_t *desc =3D irq_desc + irq;
 		                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#500: FILE: arch/i386/kernel/io_apic.c:502:
+		irq_desc_t *desc =3D irq_desc + irq;
+		spin_lock(&desc->lock);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#501: FILE: arch/i386/kernel/io_apic.c:503:
+		irq_balance_mask[irq] =3D 1 << new_cpu;
 		                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#509: FILE: arch/i386/kernel/io_apic.c:511:
+	unsigned long prev_balance_time =3D jiffies;
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#510: FILE: arch/i386/kernel/io_apic.c:512:
+	long time_remaining =3D balanced_irq_interval;
 	                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#511: FILE: arch/i386/kernel/io_apic.c:513:
+	long time_remaining =3D balanced_irq_interval;
+	daemonize();

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#514: FILE: arch/i386/kernel/io_apic.c:516:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#516: FILE: arch/i386/kernel/io_apic.c:518:
+	for (i =3D 0 ; i < NR_IRQS ; i++)
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#517: FILE: arch/i386/kernel/io_apic.c:519:
+		irq_balance_mask[i] =3D 1 << 0;
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#520: FILE: arch/i386/kernel/io_apic.c:522:
+		time_remaining =3D schedule_timeout(time_remaining);
 		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#521: FILE: arch/i386/kernel/io_apic.c:523:
+		if (time_after(jiffies, prev_balance_time+balanced_irq_interval)) {
 		                                         ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'balanced_irq', this function's name, in a string
#522: FILE: arch/i386/kernel/io_apic.c:524:
+			Dprintk("balanced_irq: calling do_irq_balance() %lu\n", jiffies);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#524: FILE: arch/i386/kernel/io_apic.c:526:
+			prev_balance_time =3D jiffies;
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#525: FILE: arch/i386/kernel/io_apic.c:527:
+			time_remaining =3D balanced_irq_interval;
 			               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: arch/i386/kernel/io_apic.c:529:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/i386/kernel/io_apic.c:529:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: arch/i386/kernel/io_apic.c:536:
+        c =3D &boot_cpu_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: arch/i386/kernel/io_apic.c:536:
+        c =3D &boot_cpu_data;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#534: FILE: arch/i386/kernel/io_apic.c:536:
+        c =3D &boot_cpu_data;
           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#534: FILE: arch/i386/kernel/io_apic.c:536:
+        c =3D &boot_cpu_data;
               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#538: FILE: arch/i386/kernel/io_apic.c:540:
+	 * one physical processor package is present */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#540: FILE: arch/i386/kernel/io_apic.c:542:
+		physical_balance =3D 1;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#542: FILE: arch/i386/kernel/io_apic.c:544:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#542: FILE: arch/i386/kernel/io_apic.c:544:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#545: FILE: arch/i386/kernel/io_apic.c:547:
+		irq_cpu_data[i].irq_delta =3D kmalloc(sizeof(unsigned long) * =
 		                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#547: FILE: arch/i386/kernel/io_apic.c:548:
+		irq_cpu_data[i].last_irq =3D kmalloc(sizeof(unsigned long) * NR_IRQS, =
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#549: FILE: arch/i386/kernel/io_apic.c:549:
+		if (irq_cpu_data[i].irq_delta =3D=3D NULL || irq_cpu_data[i].last_irq =
 		                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#549: FILE: arch/i386/kernel/io_apic.c:549:
+		if (irq_cpu_data[i].irq_delta =3D=3D NULL || irq_cpu_data[i].last_irq =
 		                                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#549: FILE: arch/i386/kernel/io_apic.c:549:
+		if (irq_cpu_data[i].irq_delta =3D=3D NULL || irq_cpu_data[i].last_irq =

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#551: FILE: arch/i386/kernel/io_apic.c:550:
+			printk(KERN_ERR "balanced_irq_init: out of memory");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'balanced_irq_init', this function's name, in a string
#551: FILE: arch/i386/kernel/io_apic.c:550:
+			printk(KERN_ERR "balanced_irq_init: out of memory");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#554: FILE: arch/i386/kernel/io_apic.c:553:
+		memset(irq_cpu_data[i].irq_delta,0,sizeof(unsigned long) * NR_IRQS);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#554: FILE: arch/i386/kernel/io_apic.c:553:
+		memset(irq_cpu_data[i].irq_delta,0,sizeof(unsigned long) * NR_IRQS);
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: arch/i386/kernel/io_apic.c:554:
+		memset(irq_cpu_data[i].last_irq,0,sizeof(unsigned long) * NR_IRQS);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: arch/i386/kernel/io_apic.c:554:
+		memset(irq_cpu_data[i].last_irq,0,sizeof(unsigned long) * NR_IRQS);
 		                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#557: FILE: arch/i386/kernel/io_apic.c:556:
+=09
 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#558: FILE: arch/i386/kernel/io_apic.c:557:
+	printk(KERN_INFO "Starting balanced_irq\n");

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#559: FILE: arch/i386/kernel/io_apic.c:558:
+	if (kernel_thread(balanced_irq, NULL, CLONE_KERNEL) >=3D 0)=20
 	                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#559: FILE: arch/i386/kernel/io_apic.c:558:
+	if (kernel_thread(balanced_irq, NULL, CLONE_KERNEL) >=3D 0)=20
 	                                                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#559: FILE: arch/i386/kernel/io_apic.c:558:
+	if (kernel_thread(balanced_irq, NULL, CLONE_KERNEL) >=3D 0)=20

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#561: FILE: arch/i386/kernel/io_apic.c:560:
+	else=20
 	    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#561: FILE: arch/i386/kernel/io_apic.c:560:
+	else=20

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#562: FILE: arch/i386/kernel/io_apic.c:561:
+		printk(KERN_ERR "balanced_irq_init: failed to spawn balanced_irq");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'balanced_irq_init', this function's name, in a string
#562: FILE: arch/i386/kernel/io_apic.c:561:
+		printk(KERN_ERR "balanced_irq_init: failed to spawn balanced_irq");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#564: FILE: arch/i386/kernel/io_apic.c:563:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#564: FILE: arch/i386/kernel/io_apic.c:563:
+	for (i =3D 0; i < NR_CPUS; i++) {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#566: FILE: arch/i386/kernel/io_apic.c:565:
+		if (irq_cpu_data[i].irq_delta)
+			kfree(irq_cpu_data[i].irq_delta);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#568: FILE: arch/i386/kernel/io_apic.c:567:
+		if (irq_cpu_data[i].last_irq)
+			kfree(irq_cpu_data[i].last_irq);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#578: FILE: arch/i386/kernel/io_apic.c:574:
+	irqbalance_disabled =3D 1;
 	                    ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#582: FILE: arch/i386/kernel/io_apic.c:578:
+__setup("noirqbalance", irqbalance_disable);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#584: FILE: arch/i386/kernel/io_apic.c:580:
+static void set_ioapic_affinity (unsigned int irq, unsigned long mask);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#591: FILE: arch/i386/kernel/io_apic.c:587:
+		irq_balance_mask[irq] =3D 0;
 		                      ^

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#595: FILE: arch/i386/kernel/io_apic.c:591:
+__initcall(balanced_irq_init);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000405622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 134 errors, 39 warnings, 24 checks, 444 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000405622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
