WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
--- linux-2.4.22-jam1m/include/asm-i386/system.h.orig	2003-08-29 00:26:41.000000000 +0200

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#43: FILE: include/asm-i386/system.h:184:
 }
+#define ll_low(x)	*(((unsigned int*)(void*)&(x))+0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#43: FILE: include/asm-i386/system.h:184:
+#define ll_low(x)	*(((unsigned int*)(void*)&(x))+0)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#43: FILE: include/asm-i386/system.h:184:
+#define ll_low(x)	*(((unsigned int*)(void*)&(x))+0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#43: FILE: include/asm-i386/system.h:184:
+#define ll_low(x)	*(((unsigned int*)(void*)&(x))+0)
                  	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#43: FILE: include/asm-i386/system.h:184:
+#define ll_low(x)	*(((unsigned int*)(void*)&(x))+0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#44: FILE: include/asm-i386/system.h:185:
+#define ll_high(x)	*(((unsigned int*)(void*)&(x))+1)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#44: FILE: include/asm-i386/system.h:185:
+#define ll_high(x)	*(((unsigned int*)(void*)&(x))+1)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#44: FILE: include/asm-i386/system.h:185:
+#define ll_high(x)	*(((unsigned int*)(void*)&(x))+1)
                   	                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#44: FILE: include/asm-i386/system.h:185:
+#define ll_high(x)	*(((unsigned int*)(void*)&(x))+1)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000341729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 1 warnings, 3 checks, 10 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000341729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
