ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: include/linux/security.h:1055:
+	void (*bprm_final_setup) (struct linux_binprm * bprm);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#74: FILE: include/linux/security.h:1055:
+	void (*bprm_final_setup) (struct linux_binprm * bprm);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#82: FILE: include/linux/security.h:1329:
 }
+static inline void security_bprm_final_setup (struct linux_binprm *bprm)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#82: FILE: include/linux/security.h:1329:
+static inline void security_bprm_final_setup (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#84: FILE: include/linux/security.h:1331:
+	security_ops->bprm_final_setup (bprm);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#93: FILE: include/linux/security.h:2016:
+static inline void security_bprm_final_setup (struct linux_binprm *bprm)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: include/linux/security.h:2017:
+{ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#96: FILE: include/linux/security.h:2019:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: security/dummy.c:204:
+static void dummy_bprm_final_setup (struct linux_binprm *bprm)

WARNING:RETURN_VOID: void function return statements are not generally useful
#112: FILE: security/dummy.c:207:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: security/selinux/hooks.c:1829:
+			rc = avc_has_perm(tsec->sid, sid, SECCLASS_PROCESS,
+					PROCESS__SHARE, NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#263: FILE: security/selinux/hooks.c:1876:
+	/* Check whether the new SID can inherit signal state
+	   from the old SID.  If not, clear itimers to avoid

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: security/selinux/hooks.c:1880:
+	  will be checked against the new SID. */

WARNING:SIZEOF_PARENTHESIS: sizeof itimer should be sizeof(itimer)
#271: FILE: security/selinux/hooks.c:1884:
+		memset(&itimer, 0, sizeof itimer);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#283: FILE: security/selinux/hooks.c:1896:
+	/* Check whether the new SID can inherit resource limits
+	   from the old SID.  If not, reset all soft limits to

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: security/selinux/hooks.c:1898:
+^I   task's soft limit.  Note that the setting of hard limits $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: security/selinux/hooks.c:1899:
+^I   (even to lower them) can be controlled by the setrlimit $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: security/selinux/hooks.c:1903:
+^I   is lower than the hard limit, e.g. RLIMIT_CORE or $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#291: FILE: security/selinux/hooks.c:1904:
+	   RLIMIT_STACK.*/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#297: FILE: security/selinux/hooks.c:1910:
+			initrlim = init_task.signal->rlim+i;
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: security/selinux/hooks.c:1911:
+			rlim->rlim_cur = min(rlim->rlim_max,initrlim->rlim_cur);
 			                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#303: FILE: security/selinux/hooks.c:1916:
+	/* Wake up the parent if it is waiting so that it can
+	   recheck wait permission to the new task SID. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#303: FILE: security/selinux/hooks.c:1916:
+	   recheck wait permission to the new task SID. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 14 warnings, 3 checks, 260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
