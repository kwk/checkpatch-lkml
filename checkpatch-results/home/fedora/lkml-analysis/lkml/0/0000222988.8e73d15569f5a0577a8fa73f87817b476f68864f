WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Quoting r. Andi Kleen (ak@suse.de) "unregister_ioctl32_conversion and modules. ioctl32 revisited.":

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#106: 
#define EVIOCGBIT(ev,len)  _IOC(_IOC_READ, 'E', 0x20 + ev, len)

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:TYPO_SPELLING: 'superceded' may be misspelled - perhaps 'superseded'?
#147: FILE: Documentation/filesystems/Locking:437:
+->ioctl() on regular files is superceded by the ->ioctl_native() and
                               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#167: FILE: fs/compat.c:408:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#168: FILE: fs/compat.c:409:
+	if (!filp) {
 	     ^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#168: FILE: fs/compat.c:409:
+	if (!filp) {
 		goto out2;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#174: FILE: fs/compat.c:413:
+	if (!std_sys_ioctl(fd, cmd, arg, filp, &error)) {
 	                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#178: FILE: fs/compat.c:417:
+						 filp, cmd, arg);
 						 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#192: FILE: fs/compat.c:437:
+						  filp, cmd, arg);
 						  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#202: FILE: fs/compat.c:477:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#230: FILE: fs/ioctl.c:55:
+EXPORT_SYMBOL(std_sys_ioctl);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#232: FILE: fs/ioctl.c:57:
+		  struct file *filp, long *status)
 		               ^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#241: FILE: fs/ioctl.c:60:
+	int on, error, unknown=0;
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#258: FILE: fs/ioctl.c:98:
+				if (filp->f_op && filp->f_op->fasync) {
[...]
 				else error = -ENOTTY;
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#271: FILE: fs/ioctl.c:126:
+			if (S_ISREG(filp->f_dentry->d_inode->i_mode)) {
 				error = file_ioctl(filp, cmd, arg);
 	}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#277: FILE: fs/ioctl.c:130:
+				unknown=1;
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#283: FILE: fs/ioctl.c:136:
+	*status=error;
 	       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: fs/ioctl.c:141:
+{^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#289: FILE: fs/ioctl.c:142:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#293: FILE: fs/ioctl.c:146:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#294: FILE: fs/ioctl.c:147:
+	if (!filp) {
 	     ^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#294: FILE: fs/ioctl.c:147:
+	if (!filp) {
+		goto out2;
+	}

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#298: FILE: fs/ioctl.c:151:
+	if (!std_sys_ioctl(fd, cmd, arg, filp, &error)) {
 	                                 ^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#298: FILE: fs/ioctl.c:151:
+	if (!std_sys_ioctl(fd, cmd, arg, filp, &error)) {
+		goto out;
+	}

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#304: FILE: fs/ioctl.c:157:
+						 filp, cmd, arg);
 						 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#308: FILE: fs/ioctl.c:161:
+					  filp, cmd, arg);
 					  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#314: FILE: fs/ioctl.c:166:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#315: FILE: fs/ioctl.c:167:
+  out2:

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#330: FILE: include/linux/fs.h:922:
+	 * their own locking. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: Unnecessary space before function pointer arguments
#337: FILE: include/linux/fs.h:929:
+	long (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#337: FILE: include/linux/fs.h:929:
+	long (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#337: FILE: include/linux/fs.h:929:
+	long (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#337: FILE: include/linux/fs.h:929:
+	long (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#337: FILE: include/linux/fs.h:929:
+	long (*ioctl_native) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#341: FILE: include/linux/fs.h:933:
+	 * to the user-space application. */

WARNING:SPACING: Unnecessary space before function pointer arguments
#342: FILE: include/linux/fs.h:934:
+	long (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#342: FILE: include/linux/fs.h:934:
+	long (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#342: FILE: include/linux/fs.h:934:
+	long (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#342: FILE: include/linux/fs.h:934:
+	long (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#342: FILE: include/linux/fs.h:934:
+	long (*ioctl_compat) (struct inode *, struct file *, unsigned int, unsigned long);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#354: FILE: include/linux/ioctl.h:7:
+/* Handles standard ioctl commands, and returns the result in status.
+   Does nothing and returns non-zero if cmd is not one of the standard commands.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#359: FILE: include/linux/ioctl.h:12:
+		  struct file *filp, long *status);
 		               ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222988.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 37 warnings, 1 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222988.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
