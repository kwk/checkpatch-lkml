WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#71: FILE: arch/i386/kernel/ldt.c:42:
+		newldt = vmalloc_bc(mincount*LDT_ENTRY_SIZE);
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#74: FILE: arch/i386/kernel/ldt.c:44:
+		newldt = kmalloc(mincount*LDT_ENTRY_SIZE, GFP_KERNEL_BC);
 		                         ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#105: FILE: arch/i386/mm/pgtable.c:189:
+	pte = alloc_pages(GFP_KERNEL|__GFP_HIGHMEM|__GFP_REPEAT|__GFP_ZERO|
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#105: FILE: arch/i386/mm/pgtable.c:189:
+	pte = alloc_pages(GFP_KERNEL|__GFP_HIGHMEM|__GFP_REPEAT|__GFP_ZERO|
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#105: FILE: arch/i386/mm/pgtable.c:189:
+	pte = alloc_pages(GFP_KERNEL|__GFP_HIGHMEM|__GFP_REPEAT|__GFP_ZERO|
 	                                                       ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#105: FILE: arch/i386/mm/pgtable.c:189:
+	pte = alloc_pages(GFP_KERNEL|__GFP_HIGHMEM|__GFP_REPEAT|__GFP_ZERO|
 	                                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#109: FILE: arch/i386/mm/pgtable.c:192:
+	pte = alloc_pages(GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO|
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#109: FILE: arch/i386/mm/pgtable.c:192:
+	pte = alloc_pages(GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO|
 	                                         ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#109: FILE: arch/i386/mm/pgtable.c:192:
+	pte = alloc_pages(GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO|
 	                                                    ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*fdt)...) over kmalloc(sizeof(struct fdtable)...)
#180: FILE: fs/file.c:151:
+	fdt = kmalloc(sizeof(struct fdtable), GFP_KERNEL_BC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: include/asm-ia64/pgalloc.h:51:
+		if (charge && bc_page_charge(virt_to_page(ret),
+					0, __GFP_BC_LIMIT)) {

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#355: FILE: include/asm-x86_64/pgalloc.h:34:
+	return (pmd_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT|
 	                                          ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#355: FILE: include/asm-x86_64/pgalloc.h:34:
+	return (pmd_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT|
 	                                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#362: FILE: include/asm-x86_64/pgalloc.h:40:
+	return (pud_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT|
 	                                          ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#362: FILE: include/asm-x86_64/pgalloc.h:40:
+	return (pud_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT|
 	                                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#372: FILE: include/asm-x86_64/pgalloc.h:79:
+	pgd_t *pgd = (pgd_t *)__get_free_page(GFP_KERNEL|__GFP_REPEAT|
 	                                                ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#372: FILE: include/asm-x86_64/pgalloc.h:79:
+	pgd_t *pgd = (pgd_t *)__get_free_page(GFP_KERNEL|__GFP_REPEAT|
 	                                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#382: FILE: include/asm-x86_64/pgalloc.h:111:
+	void *p = (void *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT|
 	                                            ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#382: FILE: include/asm-x86_64/pgalloc.h:111:
+	void *p = (void *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT|
 	                                                         ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: No space is necessary after a cast
#394: FILE: include/asm-x86_64/thread_info.h:81:
+	ret = ((struct thread_info *) __get_free_pages(GFP_KERNEL_BC,	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#395: FILE: include/asm-x86_64/thread_info.h:82:
+^I^I^I^ITHREAD_ORDER)); ^I^I\$

CHECK:SPACING: No space is necessary after a cast
#403: FILE: include/asm-x86_64/thread_info.h:89:
+	((struct thread_info *) __get_free_pages(GFP_KERNEL_BC,THREAD_ORDER))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: include/asm-x86_64/thread_info.h:89:
+	((struct thread_info *) __get_free_pages(GFP_KERNEL_BC,THREAD_ORDER))
 	                                                      ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#414: FILE: ipc/msgutil.c:39:
+	msg = (struct msg_msg *)kmalloc(sizeof(*msg) + alen, GFP_KERNEL_BC);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#443: FILE: ipc/sem.c:1075:
+	new = (struct sem_undo *) kmalloc(sizeof(struct sem_undo) +

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct sem_undo)...)
#443: FILE: ipc/sem.c:1075:
+	new = (struct sem_undo *) kmalloc(sizeof(struct sem_undo) +

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#444: FILE: ipc/sem.c:1076:
+			sizeof(short)*nsems, GFP_KERNEL_BC);
 			             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#453: FILE: ipc/sem.c:1137:
+		sops = kmalloc(sizeof(*sops)*nsops,GFP_KERNEL_BC);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: ipc/sem.c:1137:
+		sops = kmalloc(sizeof(*sops)*nsops,GFP_KERNEL_BC);
 		                                  ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#453: FILE: ipc/sem.c:1137:
+		sops = kmalloc(sizeof(*sops)*nsops,GFP_KERNEL_BC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#504: FILE: kernel/fork.c:1444:
+			SLAB_HWCACHE_ALIGN | SLAB_PANIC | \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#510: FILE: kernel/fork.c:1449:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#510: FILE: kernel/fork.c:1449:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#514: FILE: kernel/fork.c:1452:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#514: FILE: kernel/fork.c:1452:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#518: FILE: kernel/fork.c:1455:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#518: FILE: kernel/fork.c:1455:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#522: FILE: kernel/fork.c:1458:
+			SLAB_PANIC|SLAB_BC, NULL, NULL);
 			          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#526: FILE: kernel/fork.c:1461:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#526: FILE: kernel/fork.c:1461:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                             ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#537: FILE: kernel/posix-timers.c:245:
+					sizeof (struct k_itimer), 0, SLAB_BC,

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#558: FILE: kernel/user.c:208:
+			0, SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#558: FILE: kernel/user.c:208:
+			0, SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_BC, NULL, NULL);
 			                                ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#614: FILE: mm/page_alloc.c:1347:
+	if ((gfp_mask & __GFP_BC) &&
+			bc_page_charge(page, order, gfp_mask)) {

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000019899.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 28 warnings, 36 checks, 534 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000019899.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
