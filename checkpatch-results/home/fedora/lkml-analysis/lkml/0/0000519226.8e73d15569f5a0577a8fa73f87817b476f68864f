WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
diff -ruN dist+patches-2.4.8/drivers/scsi/sym53c8xx.c cobalt-2.4.8/drivers/scsi/sym53c8xx.c

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#68: FILE: drivers/scsi/sym53c8xx.c:5890:
+	np->timer.expires = ktime_get((HZ+9)/10);
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#68: FILE: drivers/scsi/sym53c8xx.c:5890:
+	np->timer.expires = ktime_get((HZ+9)/10);
 	                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: drivers/scsi/sym53c8xx.c:8621:
+	mod_timer(&np->timer, ktime_get((HZ+9)/10));
 	                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#126: FILE: drivers/scsi/sym53c8xx.c:8621:
+	mod_timer(&np->timer, ktime_get((HZ+9)/10));
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: drivers/scsi/sym53c8xx.c:646:
+#define	NCR_UNLOCK_HOSTS(flags)   spin_unlock_irqrestore(&sym53c8xx_host_lock,flags)
        	                                                                     ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#172: FILE: drivers/scsi/sym53c8xx.c:662:
+#define	NCR_UNLOCK_HOSTS(flags)   do { restore_flags(flags); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/scsi/sym53c8xx.c:1314:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#190: FILE: drivers/scsi/sym53c8xx.c:1315:
+/* 
+** reset the scsi controller on a "reboot." it should be way at the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/scsi/sym53c8xx.c:1320:
+  sym53c8xx_halt, NULL, 0$

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#207: FILE: drivers/scsi/sym53c8xx.c:12303:
+	if (i>=NCR_SNOOP_TIMEOUT) {
 	     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#208: FILE: drivers/scsi/sym53c8xx.c:12304:
+		printk ("CACHE TEST FAILED: timeout.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: drivers/scsi/sym53c8xx.c:12304:
+		printk ("CACHE TEST FAILED: timeout.\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#209: FILE: drivers/scsi/sym53c8xx.c:12305:
+		return (0x20);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#220: FILE: drivers/scsi/sym53c8xx.c:13080:
+	if (attach_count)
+ 	          register_reboot_notifier(&sym53c8xx_notifier);

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: drivers/scsi/sym53c8xx.c:13081:
+ ^I          register_reboot_notifier(&sym53c8xx_notifier);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: drivers/scsi/sym53c8xx.c:13081:
+ ^I          register_reboot_notifier(&sym53c8xx_notifier);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/scsi/sym53c8xx.c:13081:
+ ^I          register_reboot_notifier(&sym53c8xx_notifier);$

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#232: FILE: drivers/scsi/sym53c8xx.c:13816:
+	struct Scsi_Host *host, *next;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#243: FILE: drivers/scsi/sym53c8xx.c:13827:
+	printk(KERN_INFO "resetting sym53c8xx scsi bus(es)\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: drivers/scsi/sym53c8xx.c:13833:
+^I^Inext = host->next;^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/scsi/sym53c8xx.c:13848:
+     if (first_host)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519226.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 11 warnings, 5 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519226.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
