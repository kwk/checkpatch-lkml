WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
it tries to alloc a tun/tap device and gives it a name, but does not require

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#73: FILE: dev.c:549:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#90: FILE: dev.c:561:
+	if (!p)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: dev.c:563:
+		snprintf(buf,sizeof(buf),name);
 		            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: dev.c:563:
+		snprintf(buf,sizeof(buf),name);
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#93: FILE: dev.c:564:
+		if (__dev_get_by_name(buf) =3D=3D NULL) {
 		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#93: FILE: dev.c:564:
+		if (__dev_get_by_name(buf) =3D=3D NULL) {
 		                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#93: FILE: dev.c:564:
+		if (__dev_get_by_name(buf) =3D=3D NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#93: FILE: dev.c:564:
+		if (__dev_get_by_name(buf) =3D=3D NULL) {
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#97: FILE: dev.c:568:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#101: FILE: dev.c:572:
+	if (p[1] !=3D 'd' || strchr(p+2, '%'))
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#101: FILE: dev.c:572:
+	if (p[1] !=3D 'd' || strchr(p+2, '%'))
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#119: FILE: dev.c:586:
+	i =3D j =3D k =3D 0;
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#119: FILE: dev.c:586:
+	i =3D j =3D k =3D 0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#119: FILE: dev.c:586:
+	i =3D j =3D k =3D 0;
 	              ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#120: FILE: dev.c:587:
+	for (;;)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: dev.c:589:
+		snprintf(buf,sizeof(buf),name,j);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: dev.c:589:
+		snprintf(buf,sizeof(buf),name,j);
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: dev.c:589:
+		snprintf(buf,sizeof(buf),name,j);
 		                             ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#126: FILE: dev.c:591:
+			if (j =3D=3D i || j =3D=3D i + 1)
+			{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#126: FILE: dev.c:591:
+			if (j =3D=3D i || j =3D=3D i + 1)
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#126: FILE: dev.c:591:
+			if (j =3D=3D i || j =3D=3D i + 1)
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#126: FILE: dev.c:591:
+			if (j =3D=3D i || j =3D=3D i + 1)
 			                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#126: FILE: dev.c:591:
+			if (j =3D=3D i || j =3D=3D i + 1)
 			                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#126: FILE: dev.c:591:
+			if (j =3D=3D i || j =3D=3D i + 1)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#131: FILE: dev.c:596:
+			}
+			else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#132: FILE: dev.c:597:
+				k =3D j;
 				  ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#134: FILE: dev.c:599:
 		}
+		else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#135: FILE: dev.c:600:
+			i =3D j;
 			  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: dev.c:603:
+			j =3D (i + k) / 2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#138: FILE: dev.c:603:
+			j =3D (i + k) / 2;
 			  ^

ERROR:SPACING: spaces required around that '*=' (ctx:WxV)
#140: FILE: dev.c:605:
+			j *=3D 2;
 			  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#141: FILE: dev.c:606:
+		if (j =3D=3D i)
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#141: FILE: dev.c:606:
+		if (j =3D=3D i)
 		         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#141: FILE: dev.c:606:
+		if (j =3D=3D i)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000505633.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 2 warnings, 2 checks, 86 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000505633.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
