ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#41: 
--- a/kernel/power/pmdisk.c	2004-07-17 14:51:13 -07:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: kernel/power/pmdisk.c:282:
+extern struct block_device * resume_bdev;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#131: FILE: kernel/power/pmdisk.c:282:
+extern struct block_device * resume_bdev;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: kernel/power/pmdisk.c:283:
+extern int bio_read_page(pgoff_t page_off, void * page);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#132: FILE: kernel/power/pmdisk.c:283:
+extern int bio_read_page(pgoff_t page_off, void * page);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: kernel/power/pmdisk.c:284:
+extern int bio_write_page(pgoff_t page_off, void * page);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#133: FILE: kernel/power/pmdisk.c:284:
+extern int bio_write_page(pgoff_t page_off, void * page);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#142: FILE: kernel/power/pmdisk.c:294:
+	if ((error = bio_read_page(0,&pmdisk_header)))
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#142: FILE: kernel/power/pmdisk.c:294:
+	if ((error = bio_read_page(0,&pmdisk_header)))
 	                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#142: FILE: kernel/power/pmdisk.c:294:
+	if ((error = bio_read_page(0,&pmdisk_header)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#151: FILE: kernel/power/pmdisk.c:302:
+		error = bio_write_page(0,&pmdisk_header);
 		                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#151: FILE: kernel/power/pmdisk.c:302:
+		error = bio_write_page(0,&pmdisk_header);
 		                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#160: FILE: kernel/power/pmdisk.c:346:
+	if ((error = bio_read_page(swp_offset(pmdisk_header.pmdisk_info),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: kernel/power/pmdisk.c:347:
+	if ((error = bio_read_page(swp_offset(pmdisk_header.pmdisk_info),
 			       &pmdisk_info)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: kernel/power/pmdisk.c:406:
+		error = bio_read_page(swp_offset(p->swap_address),
 				  (void *)p->address);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: kernel/power/swsusp.c:1132:
+	atomic_set(&io_done,1);
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: kernel/power/swsusp.c:1135:
+static int end_io(struct bio * bio, unsigned int num, int err)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: kernel/power/swsusp.c:1137:
+	atomic_set(&io_done,0);
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#252: FILE: kernel/power/swsusp.c:1143:
+	while(atomic_read(&io_done))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#256: FILE: kernel/power/swsusp.c:1147:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: kernel/power/swsusp.c:1148:
+struct block_device * resume_bdev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#270: FILE: kernel/power/swsusp.c:1161:
+static int submit(int rw, pgoff_t page_off, void * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: kernel/power/swsusp.c:1164:
+	struct bio * bio;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: kernel/power/swsusp.c:1166:
+	bio = bio_alloc(GFP_ATOMIC,1);
 	                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#284: FILE: kernel/power/swsusp.c:1175:
+		printk("pmdisk: ERROR: adding page to bio at %ld\n",page_off);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: kernel/power/swsusp.c:1175:
+		printk("pmdisk: ERROR: adding page to bio at %ld\n",page_off);
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#286: FILE: kernel/power/swsusp.c:1177:
+		goto Done;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: kernel/power/swsusp.c:1190:
+int bio_read_page(pgoff_t page_off, void * page)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: kernel/power/swsusp.c:1192:
+	return submit(READ,page_off,page);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: kernel/power/swsusp.c:1192:
+	return submit(READ,page_off,page);
 	                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#304: FILE: kernel/power/swsusp.c:1195:
+int bio_write_page(pgoff_t page_off, void * page)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: kernel/power/swsusp.c:1197:
+	return submit(WRITE,page_off,page);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: kernel/power/swsusp.c:1197:
+	return submit(WRITE,page_off,page);
 	                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#309: FILE: kernel/power/swsusp.c:1200:
+
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#329: FILE: kernel/power/swsusp.c:1218:
+	if (bio_read_page(0, cur)) return -EIO;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#345: FILE: kernel/power/swsusp.c:1250:
+	if (bio_read_page(next.val, cur)) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#354: FILE: kernel/power/swsusp.c:1270:
+		if (bio_read_page(next.val, cur)) return -EIO;

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#363: FILE: kernel/power/swsusp.c:1285:
+		if (bio_read_page(swp_offset(swap_address) * PAGE_SIZE, (char *)((pagedir_nosave+i)->address)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#363: FILE: kernel/power/swsusp.c:1285:
+		if (bio_read_page(swp_offset(swap_address) * PAGE_SIZE, (char *)((pagedir_nosave+i)->address)))
 		                                                                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#413: FILE: kernel/power/swsusp.c:1298:
+	printk("Resuming from device %s\n", __bdevname(resume_device, b));

CHECK:BRACES: braces {} should be used on all arms of this statement
#415: FILE: kernel/power/swsusp.c:1300:
+	if (!IS_ERR(resume_bdev)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#419: FILE: kernel/power/swsusp.c:1304:
+	} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267309.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 6 warnings, 8 checks, 366 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267309.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
