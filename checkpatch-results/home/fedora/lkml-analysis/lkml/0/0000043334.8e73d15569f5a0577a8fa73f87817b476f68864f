WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
The patch below adds infrastructure to track "maximum allowable latency" for

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: drivers/acpi/processor_idle.c:458:
+		if (sleep_ticks > cx->promotion.threshold.ticks &&
+			cx->promotion.state->latency <= system_latency_constraint()) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: drivers/acpi/processor_idle.c:502:
+	if ((pr->power.state - pr->power.states) > max_cstate ||
+		pr->power.state->latency > system_latency_constraint()) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#128: FILE: drivers/acpi/processor_idle.c:1019:
+		   max_cstate, (unsigned)pr->power.bm_activity, system_latency_constraint());

CHECK:LINE_SPACING: Please don't use multiple blank lines
#136: FILE: drivers/acpi/processor_idle.c:1085:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: drivers/acpi/processor_idle.c:1097:
+static int acpi_processor_latency_notify(struct notifier_block *b,
+		unsigned long l, void *v)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#182: FILE: include/linux/latency.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#201: FILE: include/linux/latency.h:20:
+int register_latency_notifier(struct notifier_block * nb);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#202: FILE: include/linux/latency.h:21:
+int unregister_latency_notifier(struct notifier_block * nb);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#225: FILE: kernel/latency.c:1:
+/*

WARNING:TYPO_SPELLING: 'appart' may be misspelled - perhaps 'apart'?
#245: FILE: kernel/latency.c:21:
+ * to keep these appart, a string based identifier is used.
                  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#263: FILE: kernel/latency.c:39:
+#include <asm/atomic.h>

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct latency_info)...)
#319: FILE: kernel/latency.c:95:
+	info = kzalloc(sizeof(struct latency_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#329: FILE: kernel/latency.c:105:
+		if (strcmp(iter->identifier, identifier)==0) {
 		                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: kernel/latency.c:120:
+	blocking_notifier_call_chain(&latency_notifier,
+		atomic_read(&current_max_latency), NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#382: FILE: kernel/latency.c:158:
+		if (strcmp(iter->identifier, identifier)==0)
 		                                        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#413: FILE: kernel/latency.c:189:
+		if (strcmp(iter->identifier, identifier)==0) {
 		                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: kernel/latency.c:241:
+	blocking_notifier_call_chain(&latency_notifier,
+		atomic_read(&current_max_latency), NULL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#480: FILE: kernel/latency.c:256:
+int register_latency_notifier(struct notifier_block * nb)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#486: FILE: kernel/latency.c:262:
+int unregister_latency_notifier(struct notifier_block * nb)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#499: FILE: kernel/latency.c:275:
+	set_acceptable_latency("kernel", 2*1000000/HZ);
 	                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#499: FILE: kernel/latency.c:275:
+	set_acceptable_latency("kernel", 2*1000000/HZ);
 	                                          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000043334.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 6 warnings, 9 checks, 433 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000043334.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
