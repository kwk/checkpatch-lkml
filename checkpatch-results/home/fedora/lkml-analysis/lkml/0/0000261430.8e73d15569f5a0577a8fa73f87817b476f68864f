WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
###

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
## BEGIN PATCH

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
###

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: fs/ext2/acl.c:311:
+^I^I^Iint error = posix_acl_permission(inode->i_uid, inode->i_gid, acl, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#61: FILE: fs/ext2/acl.c:311:
mask);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: fs/ext3/acl.c:316:
+^I^I^Iint error = posix_acl_permission(inode->i_uid, inode->i_gid, acl, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: fs/jfs/acl.c:172:
+^I^Iint rc = posix_acl_permission(inode->i_uid, inode->i_gid, ji->i_acl, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: fs/posix_acl.c:214:
+posix_acl_permission(uid_t uid, gid_t gid, const struct posix_acl $

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: fs/posix_acl.c:223:
+                                if (uid == current->fsuid)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/posix_acl.c:223:
+                                if (uid == current->fsuid)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 41)
#110: FILE: fs/posix_acl.c:223:
+                                if (uid == current->fsuid)
                                          goto check_perm;

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: fs/posix_acl.c:231:
+                                if (in_group_p(gid)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/posix_acl.c:231:
+                                if (in_group_p(gid)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#131: FILE: fs/reiserfs/xattr.c:1388:
                  if (acl) {
+                    int err = posix_acl_permission (inode->i_uid, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: fs/reiserfs/xattr.c:1389:
+                    int err = posix_acl_permission (inode->i_uid, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: fs/reiserfs/xattr.c:1389:
+                    int err = posix_acl_permission (inode->i_uid, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/reiserfs/xattr.c:1389:
+                    int err = posix_acl_permission (inode->i_uid, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: fs/reiserfs/xattr.c:1389:
+                    int err = posix_acl_permission (inode->i_uid, 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: include/linux/posix_acl.h:77:
+extern int posix_acl_permission(uid_t, gid_t, const struct posix_acl $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: include/linux/posix_acl.h:77:
+extern int posix_acl_permission(uid_t, gid_t, const struct posix_acl 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uid_t' should also have an identifier name
#151: FILE: include/linux/posix_acl.h:77:
+extern int posix_acl_permission(uid_t, gid_t, const struct posix_acl 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t' should also have an identifier name
#151: FILE: include/linux/posix_acl.h:77:
+extern int posix_acl_permission(uid_t, gid_t, const struct posix_acl 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct posix_acl' should also have an identifier name
#151: FILE: include/linux/posix_acl.h:77:
+extern int posix_acl_permission(uid_t, gid_t, const struct posix_acl 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#151: FILE: include/linux/posix_acl.h:77:
+extern int posix_acl_permission(uid_t, gid_t, const struct posix_acl 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 13 warnings, 1 checks, 73 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
