CHECK:CAMELCASE: Avoid CamelCase: <InterruptTheCard>
#48: FILE: drivers/char/isicom.c:138:
+#define InterruptTheCard(base) outw(0, (base) + 0xc)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ClearInterrupt>
#49: FILE: drivers/char/isicom.c:139:
+#define ClearInterrupt(base) inw((base) + 0x0a)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#52: FILE: drivers/char/isicom.c:142:
+#define pr_deb(str, ...) printk((str), ##args);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#52: FILE: drivers/char/isicom.c:142:
+#define pr_deb(str, ...) printk((str), ##args);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#69: FILE: drivers/char/isicom.c:613:
+static inline int __isicom_paranoia_check(struct isi_port const *port,
+	char *name, const char *routine)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#78: FILE: drivers/char/isicom.c:616:
+		printk(KERN_WARNING "ISICOM: Warning: bad isicom magic for "

WARNING:SPLIT_STRING: quoted string split across lines
#79: FILE: drivers/char/isicom.c:617:
+		printk(KERN_WARNING "ISICOM: Warning: bad isicom magic for "
+			"dev %s in %s.\n", name, routine);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#84: FILE: drivers/char/isicom.c:621:
+		printk(KERN_WARNING "ISICOM: Warning: NULL isicom port for "

WARNING:SPLIT_STRING: quoted string split across lines
#85: FILE: drivers/char/isicom.c:622:
+		printk(KERN_WARNING "ISICOM: Warning: NULL isicom port for "
+			"dev %s in %s.\n", name, routine);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: drivers/char/isicom.c:685:
+		pr_deb(KERN_DEBUG "ISICOM: txing %d bytes, port%d.\n",
+			txcount, port->channel + 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/char/isicom.c:687:
+		outw((port->channel << isi_card[card].shift_count) | txcount,
+			base);

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: drivers/char/isicom.c:735:
+ ^I^Ireturn;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: drivers/char/isicom.c:735:
+ ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/char/isicom.c:735:
+ ^I^Ireturn;$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#140: FILE: drivers/char/isicom.c:1796:
+static int __devinit isicom_register_tty_driver(void)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: drivers/char/isicom.c:1806:
+^Iisicom_normal->name ^I^I^I= "ttyM";$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#164: FILE: drivers/char/isicom.c:1807:
+^Iisicom_normal->devfs_name^I ^I= "isicom/";$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#178: FILE: drivers/char/isicom.c:1818:
+	if ((error = tty_register_driver(isicom_normal))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#179: FILE: drivers/char/isicom.c:1819:
+		printk(KERN_DEBUG "ISICOM: Couldn't register the dialin "

WARNING:SPLIT_STRING: quoted string split across lines
#180: FILE: drivers/char/isicom.c:1820:
+		printk(KERN_DEBUG "ISICOM: Couldn't register the dialin "
+			"driver, error=%d\n", error);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#197: FILE: drivers/char/isicom.c:1831:
+	if ((error = tty_unregister_driver(isicom_normal)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#198: FILE: drivers/char/isicom.c:1832:
+		printk(KERN_DEBUG "ISICOM: couldn't unregister normal driver, "

WARNING:SPLIT_STRING: quoted string split across lines
#199: FILE: drivers/char/isicom.c:1833:
+		printk(KERN_DEBUG "ISICOM: couldn't unregister normal driver, "
+			"error=%d.\n", error);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#234: FILE: drivers/char/isicom.c:1949:
 static int __devinit isicom_setup(void)

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#248: FILE: drivers/char/isicom.c:2057:
+		msleep(10);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 17 warnings, 5 checks, 222 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
