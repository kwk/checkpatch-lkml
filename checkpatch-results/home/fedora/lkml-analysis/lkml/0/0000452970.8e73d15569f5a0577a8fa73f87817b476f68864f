WARNING:TYPO_SPELLING: 'threee' may be misspelled - perhaps 'three'?
#19: 
SCx200 processors.  Actually the patch is threee parts:
                                          ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: linux/arch/i386/kernel/scx200.c:1:
+/* linux/arch/i386/kernel/scx200.c $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: linux/arch/i386/kernel/scx200.c:1:
+/* linux/arch/i386/kernel/scx200.c 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#70: FILE: linux/arch/i386/kernel/scx200.c:1:
+/* linux/arch/i386/kernel/scx200.c 

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#71: FILE: linux/arch/i386/kernel/scx200.c:2:
+/* linux/arch/i386/kernel/scx200.c 
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#76: FILE: linux/arch/i386/kernel/scx200.c:7:
+   board specific initializers. */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#86: FILE: linux/arch/i386/kernel/scx200.c:17:
+extern int scx200_nano_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#96: FILE: linux/arch/i386/kernel/scx200.c:27:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: linux/arch/i386/kernel/scx200.c:28:
+        compile-command: "make -k -C ../../.. SUBDIRS=arch/i386/kernel bzImage"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: linux/arch/i386/kernel/scx200.c:29:
+        c-basic-offset: 8$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: linux/arch/i386/kernel/scx200_gpio.c:1:
+/* linux/arch/i386/kernel/scx200_gpio.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#105: FILE: linux/arch/i386/kernel/scx200_gpio.c:1:
+/* linux/arch/i386/kernel/scx200_gpio.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#105: FILE: linux/arch/i386/kernel/scx200_gpio.c:1:
+/* linux/arch/i386/kernel/scx200_gpio.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#106: FILE: linux/arch/i386/kernel/scx200_gpio.c:2:
+/* linux/arch/i386/kernel/scx200_gpio.c 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#109: FILE: linux/arch/i386/kernel/scx200_gpio.c:5:
+   National Semiconductor SCx200 GPIO support. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#127: FILE: linux/arch/i386/kernel/scx200_gpio.c:23:
+unsigned scx200_gpio_base = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#127: FILE: linux/arch/i386/kernel/scx200_gpio.c:23:
+unsigned scx200_gpio_base = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: linux/arch/i386/kernel/scx200_gpio.c:47:
+void scx200_gpio_dump(unsigned index)

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: linux/arch/i386/kernel/scx200_gpio.c:50:
+	u32 config = scx200_gpio_configure(index, ~0, 0);
+	printk(KERN_DEBUG "GPIO%02u: 0x%08lx", index, (unsigned long)config);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#154: FILE: linux/arch/i386/kernel/scx200_gpio.c:50:
+	printk(KERN_DEBUG "GPIO%02u: 0x%08lx", index, (unsigned long)config);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: linux/arch/i386/kernel/scx200_gpio.c:51:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: linux/arch/i386/kernel/scx200_gpio.c:52:
+^Iif (config & 1) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#157: FILE: linux/arch/i386/kernel/scx200_gpio.c:53:
+		printk(" OE"); /* output enabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#159: FILE: linux/arch/i386/kernel/scx200_gpio.c:55:
+		printk(" TS"); /* tristate */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: linux/arch/i386/kernel/scx200_gpio.c:56:
+^Iif (config & 2) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#161: FILE: linux/arch/i386/kernel/scx200_gpio.c:57:
+		printk(" PP"); /* push pull */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#163: FILE: linux/arch/i386/kernel/scx200_gpio.c:59:
+		printk(" OD"); /* open drain */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: linux/arch/i386/kernel/scx200_gpio.c:60:
+^Iif (config & 4) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#165: FILE: linux/arch/i386/kernel/scx200_gpio.c:61:
+		printk(" PUE"); /* pull up enabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#167: FILE: linux/arch/i386/kernel/scx200_gpio.c:63:
+		printk(" PUD"); /* pull up disabled */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: linux/arch/i386/kernel/scx200_gpio.c:64:
+^Iif (config & 8) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#169: FILE: linux/arch/i386/kernel/scx200_gpio.c:65:
+		printk(" LOCKED"); /* locked */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: linux/arch/i386/kernel/scx200_gpio.c:66:
+^Iif (config & 16) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#171: FILE: linux/arch/i386/kernel/scx200_gpio.c:67:
+		printk(" LEVEL"); /* level input */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: linux/arch/i386/kernel/scx200_gpio.c:69:
+		printk(" EDGE"); /* edge input */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: linux/arch/i386/kernel/scx200_gpio.c:70:
+^Iif (config & 32) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: linux/arch/i386/kernel/scx200_gpio.c:71:
+		printk(" HI"); /* trigger on rising edge */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#177: FILE: linux/arch/i386/kernel/scx200_gpio.c:73:
+		printk(" LO"); /* trigger on falling edge */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: linux/arch/i386/kernel/scx200_gpio.c:74:
+^Iif (config & 64) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#179: FILE: linux/arch/i386/kernel/scx200_gpio.c:75:
+		printk(" DEBOUNCE"); /* debounce */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#180: FILE: linux/arch/i386/kernel/scx200_gpio.c:76:
+	printk("\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#187: FILE: linux/arch/i386/kernel/scx200_gpio.c:83:
+	unsigned base;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#189: FILE: linux/arch/i386/kernel/scx200_gpio.c:85:
+	printk(KERN_DEBUG NAME ": NatSemi SCx200 GPIO Driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: linux/arch/i386/kernel/scx200_gpio.c:87:
+^Iif ((bridge = pci_find_device(PCI_VENDOR_ID_NS, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#191: FILE: linux/arch/i386/kernel/scx200_gpio.c:87:
+	if ((bridge = pci_find_device(PCI_VENDOR_ID_NS, 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#197: FILE: linux/arch/i386/kernel/scx200_gpio.c:93:
+	printk(KERN_INFO NAME ": GPIO base 0x%x\n", base);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_GPIO_SIZE>
#199: FILE: linux/arch/i386/kernel/scx200_gpio.c:95:
+	if (request_region(base, SCx200_GPIO_SIZE, "NatSemi SCx200 GPIO") == 0) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#200: FILE: linux/arch/i386/kernel/scx200_gpio.c:96:
+		printk(KERN_ERR NAME ": can't allocate I/O for GPIOs\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#223: FILE: linux/arch/i386/kernel/scx200_gpio.c:119:
+EXPORT_SYMBOL(scx200_gpio_base);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#224: FILE: linux/arch/i386/kernel/scx200_gpio.c:120:
+EXPORT_SYMBOL(scx200_gpio_shadow);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#225: FILE: linux/arch/i386/kernel/scx200_gpio.c:121:
+EXPORT_SYMBOL(scx200_gpio_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#226: FILE: linux/arch/i386/kernel/scx200_gpio.c:122:
+EXPORT_SYMBOL(scx200_gpio_configure);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#227: FILE: linux/arch/i386/kernel/scx200_gpio.c:123:
+EXPORT_SYMBOL(scx200_gpio_dump);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#230: FILE: linux/arch/i386/kernel/scx200_gpio.c:126:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: linux/arch/i386/kernel/scx200_gpio.c:127:
+        compile-command: "make -k -C ../../.. SUBDIRS=arch/i386/kernel modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: linux/arch/i386/kernel/scx200_gpio.c:128:
+        c-basic-offset: 8$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: linux/drivers/i2c/scx200_acb.c:1:
+/*  linux/drivers/i2c/scx200_acb.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#267: FILE: linux/drivers/i2c/scx200_acb.c:1:
+/*  linux/drivers/i2c/scx200_acb.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#267: FILE: linux/drivers/i2c/scx200_acb.c:1:
+/*  linux/drivers/i2c/scx200_acb.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#268: FILE: linux/drivers/i2c/scx200_acb.c:2:
+/*  linux/drivers/i2c/scx200_acb.c 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: linux/drivers/i2c/scx200_acb.c:6:
+    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: linux/drivers/i2c/scx200_acb.c:8:
+        Copyright (c) 2001 Benjamin Herrenschmidt <benh@kernel.crashing.org>$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: linux/drivers/i2c/scx200_acb.c:9:
+        Copyright (c) 2000 Philip Edelbrock <phil@stimpy.netroedge.com>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: linux/drivers/i2c/scx200_acb.c:10:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: linux/drivers/i2c/scx200_acb.c:15:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: linux/drivers/i2c/scx200_acb.c:20:
+   $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#288: FILE: linux/drivers/i2c/scx200_acb.c:22:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#289: FILE: linux/drivers/i2c/scx200_acb.c:23:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#301: FILE: linux/drivers/i2c/scx200_acb.c:35:
+#include <asm/io.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#319: FILE: linux/drivers/i2c/scx200_acb.c:53:
+#define DBG(x...) printk(KERN_DEBUG NAME ": " x)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#325: FILE: linux/drivers/i2c/scx200_acb.c:59:
+/* The hardware supports interrupt driven mode too, but I haven't
+   implemented that. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#325: FILE: linux/drivers/i2c/scx200_acb.c:59:
+   implemented that. */

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#339: FILE: linux/drivers/i2c/scx200_acb.c:73:
+static const char *scx200_acb_state_name[] = {

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#351: FILE: linux/drivers/i2c/scx200_acb.c:85:
+struct scx200_acb_iface
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#354: FILE: linux/drivers/i2c/scx200_acb.c:88:
+	unsigned base;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#364: FILE: linux/drivers/i2c/scx200_acb.c:98:
+	unsigned len;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: linux/drivers/i2c/scx200_acb.c:105:
+#define    ACBST_BER^I^I0x20 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: linux/drivers/i2c/scx200_acb.c:127:
+^IDBG("state %s, status = 0x%02x\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: linux/drivers/i2c/scx200_acb.c:143:
+^I^Iprintk(KERN_WARNING NAME ": %s, interrupt in idle state\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#409: FILE: linux/drivers/i2c/scx200_acb.c:143:
+		printk(KERN_WARNING NAME ": %s, interrupt in idle state\n", 

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#431: FILE: linux/drivers/i2c/scx200_acb.c:165:
+		/* fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: linux/drivers/i2c/scx200_acb.c:166:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: linux/drivers/i2c/scx200_acb.c:169:
+^I^I^Iif (iface->len == 1) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: linux/drivers/i2c/scx200_acb.c:208:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: linux/drivers/i2c/scx200_acb.c:211:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: linux/drivers/i2c/scx200_acb.c:218:
+^IDBG("%s: negative acknowledge in state %s\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: linux/drivers/i2c/scx200_acb.c:229:
+^Iprintk(KERN_ERR NAME ": %s, %s in state %s\n", iface->adapter.name, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#495: FILE: linux/drivers/i2c/scx200_acb.c:229:
+	printk(KERN_ERR NAME ": %s, %s in state %s\n", iface->adapter.name, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: linux/drivers/i2c/scx200_acb.c:237:
+static void scx200_acb_timeout(struct scx200_acb_iface *iface) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: linux/drivers/i2c/scx200_acb.c:239:
+^Iprintk(KERN_ERR NAME ": %s, timeout in state %s\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#505: FILE: linux/drivers/i2c/scx200_acb.c:239:
+	printk(KERN_ERR NAME ": %s, timeout in state %s\n", 

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#522: FILE: linux/drivers/i2c/scx200_acb.c:256:
+		if ((status & (ACBST_SDAST|ACBST_BER|ACBST_NEGACK)) != 0) {
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#522: FILE: linux/drivers/i2c/scx200_acb.c:256:
+		if ((status & (ACBST_SDAST|ACBST_BER|ACBST_NEGACK)) != 0) {
 		                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: linux/drivers/i2c/scx200_acb.c:271:
+           frequency: 16 clock cycles */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#537: FILE: linux/drivers/i2c/scx200_acb.c:271:
+	/* Disable the ACCESS.bus device and Configure the SCL
+           frequency: 16 clock cycles */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#537: FILE: linux/drivers/i2c/scx200_acb.c:271:
+           frequency: 16 clock cycles */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#556: FILE: linux/drivers/i2c/scx200_acb.c:290:
+^I^I^I^Iu16 address, unsigned short flags,^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: linux/drivers/i2c/scx200_acb.c:290:
+static s32 scx200_acb_smbus_xfer(struct i2c_adapter *adapter,
+				u16 address, unsigned short flags,	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: linux/drivers/i2c/scx200_acb.c:291:
+^I^I^I^Ichar rw, u8 command, int size, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: linux/drivers/i2c/scx200_acb.c:302:
+^I    ^Ilen = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#568: FILE: linux/drivers/i2c/scx200_acb.c:302:
+^I    ^Ilen = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: linux/drivers/i2c/scx200_acb.c:303:
+^I    ^Ibuffer = NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#569: FILE: linux/drivers/i2c/scx200_acb.c:303:
+^I    ^Ibuffer = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: linux/drivers/i2c/scx200_acb.c:304:
+^I    ^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#570: FILE: linux/drivers/i2c/scx200_acb.c:304:
+^I    ^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: linux/drivers/i2c/scx200_acb.c:313:
+^I    ^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#579: FILE: linux/drivers/i2c/scx200_acb.c:313:
+^I    ^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: linux/drivers/i2c/scx200_acb.c:315:
+^I    ^Ilen = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#581: FILE: linux/drivers/i2c/scx200_acb.c:315:
+^I    ^Ilen = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: linux/drivers/i2c/scx200_acb.c:316:
+^I    ^Ibuffer = &data->byte;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#582: FILE: linux/drivers/i2c/scx200_acb.c:316:
+^I    ^Ibuffer = &data->byte;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: linux/drivers/i2c/scx200_acb.c:317:
+^I    ^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#583: FILE: linux/drivers/i2c/scx200_acb.c:317:
+^I    ^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: linux/drivers/i2c/scx200_acb.c:320:
+^I    ^Icur_word = cpu_to_le16(data->word);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#586: FILE: linux/drivers/i2c/scx200_acb.c:320:
+^I    ^Icur_word = cpu_to_le16(data->word);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: linux/drivers/i2c/scx200_acb.c:321:
+^I    ^Ibuffer = (u8 *)&cur_word;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#587: FILE: linux/drivers/i2c/scx200_acb.c:321:
+^I    ^Ibuffer = (u8 *)&cur_word;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: linux/drivers/i2c/scx200_acb.c:324:
+^I    ^Ilen = data->block[0];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#590: FILE: linux/drivers/i2c/scx200_acb.c:324:
+^I    ^Ilen = data->block[0];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: linux/drivers/i2c/scx200_acb.c:325:
+^I    ^Ibuffer = &data->block[1];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#591: FILE: linux/drivers/i2c/scx200_acb.c:325:
+^I    ^Ibuffer = &data->block[1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: linux/drivers/i2c/scx200_acb.c:328:
+^I    ^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#594: FILE: linux/drivers/i2c/scx200_acb.c:328:
+^I    ^Ireturn -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: linux/drivers/i2c/scx200_acb.c:335:
+^I^Iprintk(KERN_WARNING NAME ": %s, zero length read\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#601: FILE: linux/drivers/i2c/scx200_acb.c:335:
+		printk(KERN_WARNING NAME ": %s, zero length read\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#607: FILE: linux/drivers/i2c/scx200_acb.c:341:
+		printk(KERN_WARNING NAME ": %s, nonzero length but no buffer\n", adapter->name);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#613: FILE: linux/drivers/i2c/scx200_acb.c:347:
+	iface->address_byte = address<<1;
 	                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: linux/drivers/i2c/scx200_acb.c:368:
+#endif /* POLLED_MODE */^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#644: FILE: linux/drivers/i2c/scx200_acb.c:378:
+^I    ^Idata->word = le16_to_cpu(cur_word);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#644: FILE: linux/drivers/i2c/scx200_acb.c:378:
+^I    ^Idata->word = le16_to_cpu(cur_word);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#647: FILE: linux/drivers/i2c/scx200_acb.c:381:
+	printk(KERN_DEBUG "%s: transfer done, result: %d", name, rc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#650: FILE: linux/drivers/i2c/scx200_acb.c:384:
+		int i;
+		printk(" data:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#650: FILE: linux/drivers/i2c/scx200_acb.c:384:
+		printk(" data:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#652: FILE: linux/drivers/i2c/scx200_acb.c:386:
+			printk(" %02x", buffer[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#653: FILE: linux/drivers/i2c/scx200_acb.c:387:
+		printk("\n");

WARNING:INDENTED_LABEL: labels should not be indented
#690: FILE: linux/drivers/i2c/scx200_acb.c:424:
+	name:		"NatSemi SCx200 ACCESS.bus",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#691: FILE: linux/drivers/i2c/scx200_acb.c:425:
+	id:		I2C_ALGO_SMBUS,
 	  ^

WARNING:INDENTED_LABEL: labels should not be indented
#691: FILE: linux/drivers/i2c/scx200_acb.c:425:
+	id:		I2C_ALGO_SMBUS,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#692: FILE: linux/drivers/i2c/scx200_acb.c:426:
+	smbus_xfer:	scx200_acb_smbus_xfer,
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#692: FILE: linux/drivers/i2c/scx200_acb.c:426:
+	smbus_xfer:	scx200_acb_smbus_xfer,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#693: FILE: linux/drivers/i2c/scx200_acb.c:427:
+	functionality:	scx200_acb_func,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#693: FILE: linux/drivers/i2c/scx200_acb.c:427:
+	functionality:	scx200_acb_func,

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: linux/drivers/i2c/scx200_acb.c:437:
+           frequency: 16 clock cycles */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#703: FILE: linux/drivers/i2c/scx200_acb.c:437:
+	/* Disable the ACCESS.bus device and Configure the SCL
+           frequency: 16 clock cycles */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#703: FILE: linux/drivers/i2c/scx200_acb.c:437:
+           frequency: 16 clock cycles */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: linux/drivers/i2c/scx200_acb.c:459:
+^I^IDBG("%s: enabled, but NMINTE won't be set, ACBCTL1=0x%02x\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#742: FILE: linux/drivers/i2c/scx200_acb.c:476:
+		printk(KERN_ERR NAME ": can't allocate memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#742: FILE: linux/drivers/i2c/scx200_acb.c:476:
+	if (!iface) {
+		printk(KERN_ERR NAME ": can't allocate memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#762: FILE: linux/drivers/i2c/scx200_acb.c:496:
+^I^Iprintk(KERN_ERR NAME ": %s, can't allocate io 0x%x-0x%x\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#762: FILE: linux/drivers/i2c/scx200_acb.c:496:
+		printk(KERN_ERR NAME ": %s, can't allocate io 0x%x-0x%x\n", 

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#763: FILE: linux/drivers/i2c/scx200_acb.c:497:
+		       adapter->name, base, base + 8-1);
 		                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#771: FILE: linux/drivers/i2c/scx200_acb.c:505:
+		printk(KERN_WARNING NAME ": %s, probe failed\n", adapter->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#778: FILE: linux/drivers/i2c/scx200_acb.c:512:
+		printk(KERN_ERR NAME ": %s, failed to register\n", adapter->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#804: FILE: linux/drivers/i2c/scx200_acb.c:538:
+	printk(KERN_DEBUG NAME ": NatSemi SCx200 ACCESS.bus Driver\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#825: FILE: linux/drivers/i2c/scx200_acb.c:559:
+	struct scx200_acb_iface *iface;
+	lock_kernel();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#842: FILE: linux/drivers/i2c/scx200_acb.c:576:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: linux/drivers/i2c/scx200_acb.c:577:
+        compile-command: "make -k -C ../.. SUBDIRS=drivers/i2c modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: linux/drivers/i2c/scx200_acb.c:578:
+        c-basic-offset: 8$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#852: FILE: linux/drivers/i2c/scx200_i2c.c:1:
+/* linux/drivers/i2c/scx200_i2c.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#852: FILE: linux/drivers/i2c/scx200_i2c.c:1:
+/* linux/drivers/i2c/scx200_i2c.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#852: FILE: linux/drivers/i2c/scx200_i2c.c:1:
+/* linux/drivers/i2c/scx200_i2c.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#853: FILE: linux/drivers/i2c/scx200_i2c.c:2:
+/* linux/drivers/i2c/scx200_i2c.c 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: linux/drivers/i2c/scx200_i2c.c:13:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#869: FILE: linux/drivers/i2c/scx200_i2c.c:18:
+   $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#871: FILE: linux/drivers/i2c/scx200_i2c.c:20:
+   along with this program; if not, write to the Free Software$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#872: FILE: linux/drivers/i2c/scx200_i2c.c:21:
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.^I^I     $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#872: FILE: linux/drivers/i2c/scx200_i2c.c:21:
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.^I^I     $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#882: FILE: linux/drivers/i2c/scx200_i2c.c:31:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: linux/drivers/i2c/scx200_i2c.c:57:
+} $

WARNING:INDENTED_LABEL: labels should not be indented
#955: FILE: linux/drivers/i2c/scx200_i2c.c:104:
+	name:		"NatSemi SCx200 I2C",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#956: FILE: linux/drivers/i2c/scx200_i2c.c:105:
+	id:		I2C_HW_B_VELLE,
 	  ^

WARNING:INDENTED_LABEL: labels should not be indented
#956: FILE: linux/drivers/i2c/scx200_i2c.c:105:
+	id:		I2C_HW_B_VELLE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#957: FILE: linux/drivers/i2c/scx200_i2c.c:106:
+	algo_data:	&scx200_i2c_data,
 	         ^

WARNING:INDENTED_LABEL: labels should not be indented
#957: FILE: linux/drivers/i2c/scx200_i2c.c:106:
+	algo_data:	&scx200_i2c_data,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#958: FILE: linux/drivers/i2c/scx200_i2c.c:107:
+	inc_use:	scx200_i2c_inc_use,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#958: FILE: linux/drivers/i2c/scx200_i2c.c:107:
+	inc_use:	scx200_i2c_inc_use,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#959: FILE: linux/drivers/i2c/scx200_i2c.c:108:
+	dec_use:	scx200_i2c_dec_use,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#959: FILE: linux/drivers/i2c/scx200_i2c.c:108:
+	dec_use:	scx200_i2c_dec_use,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#960: FILE: linux/drivers/i2c/scx200_i2c.c:109:
+	client_register: scx200_i2c_reg,
 	               ^

WARNING:INDENTED_LABEL: labels should not be indented
#960: FILE: linux/drivers/i2c/scx200_i2c.c:109:
+	client_register: scx200_i2c_reg,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#961: FILE: linux/drivers/i2c/scx200_i2c.c:110:
+	client_unregister: scx200_i2c_unreg,
 	                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#961: FILE: linux/drivers/i2c/scx200_i2c.c:110:
+	client_unregister: scx200_i2c_unreg,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#966: FILE: linux/drivers/i2c/scx200_i2c.c:115:
+	printk(KERN_DEBUG NAME ": NatSemi SCx200 I2C Driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#969: FILE: linux/drivers/i2c/scx200_i2c.c:118:
+		printk(KERN_ERR NAME ": no SCx200 gpio pins available\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#973: FILE: linux/drivers/i2c/scx200_i2c.c:122:
+^Iprintk(KERN_DEBUG NAME ": SCL=GPIO%02u, SDA=GPIO%02u\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#973: FILE: linux/drivers/i2c/scx200_i2c.c:122:
+	printk(KERN_DEBUG NAME ": SCL=GPIO%02u, SDA=GPIO%02u\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#977: FILE: linux/drivers/i2c/scx200_i2c.c:126:
+		printk(KERN_ERR NAME ": scl and sda must be specified\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#986: FILE: linux/drivers/i2c/scx200_i2c.c:135:
+^I^Iprintk(KERN_ERR NAME ": adapter %s registration failed\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#986: FILE: linux/drivers/i2c/scx200_i2c.c:135:
+		printk(KERN_ERR NAME ": adapter %s registration failed\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#990: FILE: linux/drivers/i2c/scx200_i2c.c:139:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1003: FILE: linux/drivers/i2c/scx200_i2c.c:152:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: linux/drivers/i2c/scx200_i2c.c:153:
+        compile-command: "make -k -C ../.. SUBDIRS=drivers/i2c modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1005: FILE: linux/drivers/i2c/scx200_i2c.c:154:
+        c-basic-offset: 8$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1012: FILE: linux/include/linux/scx200_gpio.h:1:
+#include <linux/spinlock.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1015: FILE: linux/include/linux/scx200_gpio.h:4:
+void scx200_gpio_dump(unsigned index);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1017: FILE: linux/include/linux/scx200_gpio.h:6:
+extern unsigned scx200_gpio_base;

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1022: FILE: linux/include/linux/scx200_gpio.h:11:
+#define scx200_gpio_present() (scx200_gpio_base!=0)
                                                ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1025: FILE: linux/include/linux/scx200_gpio.h:14:
+#define __SCx200_GPIO_BANK unsigned bank = index>>5

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1025: FILE: linux/include/linux/scx200_gpio.h:14:
+#define __SCx200_GPIO_BANK unsigned bank = index>>5
                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_BANK>
#1025: FILE: linux/include/linux/scx200_gpio.h:14:
+#define __SCx200_GPIO_BANK unsigned bank = index>>5

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1026: FILE: linux/include/linux/scx200_gpio.h:15:
+#define __SCx200_GPIO_IOADDR unsigned short ioaddr = scx200_gpio_base+0x10*bank
                                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1026: FILE: linux/include/linux/scx200_gpio.h:15:
+#define __SCx200_GPIO_IOADDR unsigned short ioaddr = scx200_gpio_base+0x10*bank
                                                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_IOADDR>
#1026: FILE: linux/include/linux/scx200_gpio.h:15:
+#define __SCx200_GPIO_IOADDR unsigned short ioaddr = scx200_gpio_base+0x10*bank

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1027: FILE: linux/include/linux/scx200_gpio.h:16:
+#define __SCx200_GPIO_SHADOW u32 *shadow = scx200_gpio_shadow+bank
                                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_SHADOW>
#1027: FILE: linux/include/linux/scx200_gpio.h:16:
+#define __SCx200_GPIO_SHADOW u32 *shadow = scx200_gpio_shadow+bank

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_INDEX>
#1028: FILE: linux/include/linux/scx200_gpio.h:17:
+#define __SCx200_GPIO_INDEX index &= 31

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1028: FILE: linux/include/linux/scx200_gpio.h:17:
+#define __SCx200_GPIO_INDEX index &= 31

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1030: FILE: linux/include/linux/scx200_gpio.h:19:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))
                                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1030: FILE: linux/include/linux/scx200_gpio.h:19:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))
                                                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_OUT>
#1030: FILE: linux/include/linux/scx200_gpio.h:19:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1030: FILE: linux/include/linux/scx200_gpio.h:19:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1034: FILE: linux/include/linux/scx200_gpio.h:23:
+static inline int scx200_gpio_get(int index) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1038: FILE: linux/include/linux/scx200_gpio.h:27:
+^I^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1039: FILE: linux/include/linux/scx200_gpio.h:28:
+	return (inl(ioaddr) & (1<<index)) ? 1 : 0;
 	                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1043: FILE: linux/include/linux/scx200_gpio.h:32:
+/* return the value driven on the GPIO signal (the value that will be
+   driven if the GPIO is configured as an output, it might not be the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1044: FILE: linux/include/linux/scx200_gpio.h:33:
+   state of the GPIO right now if the GPIO is configured as an input) */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1046: FILE: linux/include/linux/scx200_gpio.h:35:
+static inline int scx200_gpio_current(int index) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1047: FILE: linux/include/linux/scx200_gpio.h:36:
+        __SCx200_GPIO_BANK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: linux/include/linux/scx200_gpio.h:36:
+        __SCx200_GPIO_BANK;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1049: FILE: linux/include/linux/scx200_gpio.h:38:
+^I^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1050: FILE: linux/include/linux/scx200_gpio.h:39:
+	return (scx200_gpio_shadow[bank] & (1<<index)) ? 1 : 0;
 	                                     ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1055: FILE: linux/include/linux/scx200_gpio.h:44:
+static inline void scx200_gpio_set_high(int index) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1066: FILE: linux/include/linux/scx200_gpio.h:55:
+static inline void scx200_gpio_set_low(int index) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1077: FILE: linux/include/linux/scx200_gpio.h:66:
+static inline void scx200_gpio_set(int index, int state) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1090: FILE: linux/include/linux/scx200_gpio.h:79:
+static inline void scx200_gpio_change(int index) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1106: FILE: linux/include/linux/scx200_gpio.h:95:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: linux/include/linux/scx200_gpio.h:96:
+        compile-command: "make -C ../.. bzImage modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1108: FILE: linux/include/linux/scx200_gpio.h:97:
+        c-basic-offset: 8$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1118: FILE: linux/init/main.c:97:
+extern int scx200_init(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452970.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 96 errors, 124 warnings, 19 checks, 1052 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452970.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
