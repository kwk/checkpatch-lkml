WARNING:LINE_SPACING: Missing a blank line after declarations
#58: FILE: fs/fuse/dev.c:94:
+	struct fuse_req *req = fuse_request_alloc();
+	if (!req)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#192: FILE: fs/fuse/dir.c:248:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: fs/fuse/dir.c:377:
+	struct fuse_req *req = fuse_get_req(fc);
+	if (IS_ERR(req))

WARNING:LINE_SPACING: Missing a blank line after declarations
#235: FILE: fs/fuse/dir.c:409:
+	struct fuse_req *req = fuse_get_req(fc);
+	if (IS_ERR(req))

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: fs/fuse/dir.c:429:
+	struct fuse_req *req = fuse_get_req(fc);
+	if (IS_ERR(req))

WARNING:LINE_SPACING: Missing a blank line after declarations
#261: FILE: fs/fuse/dir.c:446:
+	struct fuse_req *req = fuse_get_req(fc);
+	if (IS_ERR(req))

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: fs/fuse/dir.c:478:
+	struct fuse_req *req = fuse_get_req(fc);
+	if (IS_ERR(req))

WARNING:LINE_SPACING: Missing a blank line after declarations
#287: FILE: fs/fuse/dir.c:506:
+	struct fuse_req *req = fuse_get_req(fc);
+	if (IS_ERR(req))

WARNING:LINE_SPACING: Missing a blank line after declarations
#300: FILE: fs/fuse/dir.c:555:
+	struct fuse_req *req = fuse_get_req(fc);
+	if (IS_ERR(req))

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: fs/fuse/dir.c:585:
+	struct fuse_req *req = fuse_get_req(fc);
+	if (IS_ERR(req))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#486: FILE: fs/fuse/file.c:371:
+		data->req = req = fuse_get_req(fc);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#554: FILE: fs/fuse/fuse_i.h:132:
+	/** This can be on either pending processing or io lists in
+	    fuse_conn */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#554: FILE: fs/fuse/fuse_i.h:132:
+	    fuse_conn */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088561.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 1 checks, 640 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088561.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
