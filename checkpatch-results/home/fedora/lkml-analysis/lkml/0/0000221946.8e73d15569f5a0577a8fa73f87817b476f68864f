WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: drivers/infiniband/core/sa_query.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#86: FILE: drivers/infiniband/core/sa_query.c:32:
+ * $Id$

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#118: FILE: drivers/infiniband/core/sa_query.c:64:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#125: FILE: drivers/infiniband/core/sa_query.c:71:
+} __attribute__ ((packed));

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#137: FILE: drivers/infiniband/core/sa_query.c:83:
+	spinlock_t           ah_lock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ib_sa_query *' should also have an identifier name
#148: FILE: drivers/infiniband/core/sa_query.c:94:
+	void (*callback)(struct ib_sa_query *, int, struct ib_sa_mad *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#148: FILE: drivers/infiniband/core/sa_query.c:94:
+	void (*callback)(struct ib_sa_query *, int, struct ib_sa_mad *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ib_sa_mad *' should also have an identifier name
#148: FILE: drivers/infiniband/core/sa_query.c:94:
+	void (*callback)(struct ib_sa_query *, int, struct ib_sa_mad *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ib_sa_query *' should also have an identifier name
#149: FILE: drivers/infiniband/core/sa_query.c:95:
+	void (*release)(struct ib_sa_query *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#158: FILE: drivers/infiniband/core/sa_query.c:104:
+	void (*callback)(int, struct ib_sa_path_rec *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ib_sa_path_rec *' should also have an identifier name
#158: FILE: drivers/infiniband/core/sa_query.c:104:
+	void (*callback)(int, struct ib_sa_path_rec *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#158: FILE: drivers/infiniband/core/sa_query.c:104:
+	void (*callback)(int, struct ib_sa_path_rec *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#164: FILE: drivers/infiniband/core/sa_query.c:110:
+	void (*callback)(int, struct ib_sa_mcmember_rec *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ib_sa_mcmember_rec *' should also have an identifier name
#164: FILE: drivers/infiniband/core/sa_query.c:110:
+	void (*callback)(int, struct ib_sa_mcmember_rec *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#164: FILE: drivers/infiniband/core/sa_query.c:110:
+	void (*callback)(int, struct ib_sa_mcmember_rec *, void *);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#210: FILE: drivers/infiniband/core/sa_query.c:156:
+#define PATH_REC_FIELD(field) \
+	.struct_offset_bytes = offsetof(struct ib_sa_path_rec, field),		\
+	.struct_size_bytes   = sizeof ((struct ib_sa_path_rec *) 0)->field,	\
+	.field_name          = "sa_path_rec:" #field

CHECK:SPACING: No space is necessary after a cast
#212: FILE: drivers/infiniband/core/sa_query.c:158:
+	.struct_size_bytes   = sizeof ((struct ib_sa_path_rec *) 0)->field,	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#212: FILE: drivers/infiniband/core/sa_query.c:158:
+	.struct_size_bytes   = sizeof ((struct ib_sa_path_rec *) 0)->field,	\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#314: FILE: drivers/infiniband/core/sa_query.c:260:
+#define MCMEMBER_REC_FIELD(field) \
+	.struct_offset_bytes = offsetof(struct ib_sa_mcmember_rec, field),	\
+	.struct_size_bytes   = sizeof ((struct ib_sa_mcmember_rec *) 0)->field,	\
+	.field_name          = "sa_mcmember_rec:" #field

CHECK:SPACING: No space is necessary after a cast
#316: FILE: drivers/infiniband/core/sa_query.c:262:
+	.struct_size_bytes   = sizeof ((struct ib_sa_mcmember_rec *) 0)->field,	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#316: FILE: drivers/infiniband/core/sa_query.c:262:
+	.struct_size_bytes   = sizeof ((struct ib_sa_mcmember_rec *) 0)->field,	\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#414: FILE: drivers/infiniband/core/sa_query.c:360:
+		printk(KERN_WARNING "Couldn't query port\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *new_ah should be sizeof(*new_ah)
#418: FILE: drivers/infiniband/core/sa_query.c:364:
+	new_ah = kmalloc(sizeof *new_ah, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#420: FILE: drivers/infiniband/core/sa_query.c:366:
+		printk(KERN_WARNING "Couldn't allocate new SM AH\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#420: FILE: drivers/infiniband/core/sa_query.c:366:
+	if (!new_ah) {
+		printk(KERN_WARNING "Couldn't allocate new SM AH\n");

WARNING:SIZEOF_PARENTHESIS: sizeof ah_attr should be sizeof(ah_attr)
#426: FILE: drivers/infiniband/core/sa_query.c:372:
+	memset(&ah_attr, 0, sizeof ah_attr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#433: FILE: drivers/infiniband/core/sa_query.c:379:
+		printk(KERN_WARNING "Couldn't create new SM AH\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *mad should be sizeof(*mad)
#492: FILE: drivers/infiniband/core/sa_query.c:438:
+	memset(mad, 0, sizeof *mad);

CHECK:SPACING: No space is necessary after a cast
#500: FILE: drivers/infiniband/core/sa_query.c:446:
+		cpu_to_be64(((u64) agent->hi_tid) << 32 | tid++);

WARNING:TABSTOP: Statements should start on a tabstop
#521: FILE: drivers/infiniband/core/sa_query.c:467:
+			 }

WARNING:TABSTOP: Statements should start on a tabstop
#522: FILE: drivers/infiniband/core/sa_query.c:468:
+		 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#546: FILE: drivers/infiniband/core/sa_query.c:492:
+					    sizeof (struct ib_sa_mad),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#548: FILE: drivers/infiniband/core/sa_query.c:494:
+	gather_list.length = sizeof (struct ib_sa_mad);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#556: FILE: drivers/infiniband/core/sa_query.c:502:
+				 sizeof (struct ib_sa_mad),

CHECK:BRACES: braces {} should be used on all arms of this statement
#574: FILE: drivers/infiniband/core/sa_query.c:520:
+	if (mad) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#580: FILE: drivers/infiniband/core/sa_query.c:526:
+	} else

WARNING:SIZEOF_PARENTHESIS: sizeof *query should be sizeof(*query)
#630: FILE: drivers/infiniband/core/sa_query.c:576:
+	query = kmalloc(sizeof *query, gfp_mask);

WARNING:SIZEOF_PARENTHESIS: sizeof *query->sa_query.mad should be sizeof(*query->sa_query.mad)
#633: FILE: drivers/infiniband/core/sa_query.c:579:
+	query->sa_query.mad = kmalloc(sizeof *query->sa_query.mad, gfp_mask);

CHECK:BRACES: braces {} should be used on all arms of this statement
#673: FILE: drivers/infiniband/core/sa_query.c:619:
+	if (mad) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#679: FILE: drivers/infiniband/core/sa_query.c:625:
+	} else

WARNING:SIZEOF_PARENTHESIS: sizeof *query should be sizeof(*query)
#706: FILE: drivers/infiniband/core/sa_query.c:652:
+	query = kmalloc(sizeof *query, gfp_mask);

WARNING:SIZEOF_PARENTHESIS: sizeof *query->sa_query.mad should be sizeof(*query->sa_query.mad)
#709: FILE: drivers/infiniband/core/sa_query.c:655:
+	query->sa_query.mad = kmalloc(sizeof *query->sa_query.mad, gfp_mask);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#772: FILE: drivers/infiniband/core/sa_query.c:718:
+			 sizeof (struct ib_sa_mad),

CHECK:SPACING: No space is necessary after a cast
#798: FILE: drivers/infiniband/core/sa_query.c:744:
+					(struct ib_sa_mad *) mad_recv_wc->recv_buf.mad);

CHECK:BRACES: braces {} should be used on all arms of this statement
#811: FILE: drivers/infiniband/core/sa_query.c:757:
+	if (device->node_type == IB_NODE_SWITCH)
[...]
+	else {
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#812: FILE: drivers/infiniband/core/sa_query.c:758:
+		s = e = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#813: FILE: drivers/infiniband/core/sa_query.c:759:
+	else {

WARNING:SIZEOF_PARENTHESIS: sizeof *sa_dev should be sizeof(*sa_dev)
#818: FILE: drivers/infiniband/core/sa_query.c:764:
+	sa_dev = kmalloc(sizeof *sa_dev +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#819: FILE: drivers/infiniband/core/sa_query.c:765:
+			 (e - s + 1) * sizeof (struct ib_sa_port),

WARNING:RETURN_VOID: void function return statements are not generally useful
#878: FILE: drivers/infiniband/core/sa_query.c:824:
+	return;
+}

WARNING:SIZEOF_PARENTHESIS: sizeof tid should be sizeof(tid)
#905: FILE: drivers/infiniband/core/sa_query.c:851:
+	get_random_bytes(&tid, sizeof tid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#909: FILE: drivers/infiniband/core/sa_query.c:855:
+		printk(KERN_ERR "Couldn't register ib_sa client\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#924: FILE: drivers/infiniband/include/ib_sa.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#955: FILE: drivers/infiniband/include/ib_sa.h:32:
+ * $Id$

CHECK:SPACING: No space is necessary after a cast
#987: FILE: drivers/infiniband/include/ib_sa.h:64:
+#define IB_SA_COMP_MASK(n)	((__force ib_sa_comp_mask) cpu_to_be64(1ull << n))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#987: FILE: drivers/infiniband/include/ib_sa.h:64:
+#define IB_SA_COMP_MASK(n)	((__force ib_sa_comp_mask) cpu_to_be64(1ull << n))

ERROR:SPACING: space prohibited after that open parenthesis '('
#1005: FILE: drivers/infiniband/include/ib_sa.h:82:
+#define IB_SA_PATH_REC_DGID				IB_SA_COMP_MASK( 2)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1006: FILE: drivers/infiniband/include/ib_sa.h:83:
+#define IB_SA_PATH_REC_SGID				IB_SA_COMP_MASK( 3)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1007: FILE: drivers/infiniband/include/ib_sa.h:84:
+#define IB_SA_PATH_REC_DLID				IB_SA_COMP_MASK( 4)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1008: FILE: drivers/infiniband/include/ib_sa.h:85:
+#define IB_SA_PATH_REC_SLID				IB_SA_COMP_MASK( 5)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1009: FILE: drivers/infiniband/include/ib_sa.h:86:
+#define IB_SA_PATH_REC_RAW_TRAFFIC			IB_SA_COMP_MASK( 6)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1011: FILE: drivers/infiniband/include/ib_sa.h:88:
+#define IB_SA_PATH_REC_FLOW_LABEL       ^I^IIB_SA_COMP_MASK( 8)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1011: FILE: drivers/infiniband/include/ib_sa.h:88:
+#define IB_SA_PATH_REC_FLOW_LABEL       		IB_SA_COMP_MASK( 8)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1012: FILE: drivers/infiniband/include/ib_sa.h:89:
+#define IB_SA_PATH_REC_HOP_LIMIT			IB_SA_COMP_MASK( 9)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1053: FILE: drivers/infiniband/include/ib_sa.h:130:
+#define IB_SA_MCMEMBER_REC_MGID				IB_SA_COMP_MASK( 0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1054: FILE: drivers/infiniband/include/ib_sa.h:131:
+#define IB_SA_MCMEMBER_REC_PORT_GID			IB_SA_COMP_MASK( 1)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1055: FILE: drivers/infiniband/include/ib_sa.h:132:
+#define IB_SA_MCMEMBER_REC_QKEY				IB_SA_COMP_MASK( 2)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1056: FILE: drivers/infiniband/include/ib_sa.h:133:
+#define IB_SA_MCMEMBER_REC_MLID				IB_SA_COMP_MASK( 3)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1057: FILE: drivers/infiniband/include/ib_sa.h:134:
+#define IB_SA_MCMEMBER_REC_MTU_SELECTOR			IB_SA_COMP_MASK( 4)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1058: FILE: drivers/infiniband/include/ib_sa.h:135:
+#define IB_SA_MCMEMBER_REC_MTU				IB_SA_COMP_MASK( 5)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1059: FILE: drivers/infiniband/include/ib_sa.h:136:
+#define IB_SA_MCMEMBER_REC_TRAFFIC_CLASS		IB_SA_COMP_MASK( 6)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1060: FILE: drivers/infiniband/include/ib_sa.h:137:
+#define IB_SA_MCMEMBER_REC_PKEY				IB_SA_COMP_MASK( 7)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1061: FILE: drivers/infiniband/include/ib_sa.h:138:
+#define IB_SA_MCMEMBER_REC_RATE_SELECTOR		IB_SA_COMP_MASK( 8)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1062: FILE: drivers/infiniband/include/ib_sa.h:139:
+#define IB_SA_MCMEMBER_REC_RATE				IB_SA_COMP_MASK( 9)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1081: FILE: drivers/infiniband/include/ib_sa.h:158:
+^Iu8 ^I     rate_selector;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1082: FILE: drivers/infiniband/include/ib_sa.h:159:
+^Iu8 ^I     rate;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1083: FILE: drivers/infiniband/include/ib_sa.h:160:
+^Iu8 ^I     packet_life_time_selector;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1084: FILE: drivers/infiniband/include/ib_sa.h:161:
+^Iu8 ^I     packet_life_time;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1202: FILE: drivers/infiniband/include/ib_sa.h:279:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221946.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 45 warnings, 17 checks, 1157 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221946.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
