WARNING:TYPO_SPELLING: 'contians' may be misspelled - perhaps 'contains'?
#106: FILE: Documentation/Configure.help:14672:
+  and the processes it contians.  The jid can also be used to send
                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'arugment' may be misspelled - perhaps 'argument'?
#311: FILE: Documentation/job.txt:183:
+       The  final  arugment,  data, is a void pointer that refer-
                    ^^^^^^^^

WARNING:TYPO_SPELLING: 'ture' may be misspelled - perhaps 'true'?
#430: FILE: Documentation/job.txt:302:
+	      ture of type job_jidcnt_t defined as follows:
 	      ^^^^

WARNING:TYPO_SPELLING: 'fied' may be misspelled - perhaps 'field'?
#491: FILE: Documentation/job.txt:363:
+	      fied  job.   The	data  argument	should point to a
 	      ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#787: FILE: drivers/misc/job.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#801: FILE: drivers/misc/job.c:15:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#802: FILE: drivers/misc/job.c:16:
+ * 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#813: FILE: drivers/misc/job.c:27:
+ * Description:	This file, drivers/misc/job.c, implements a type

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#814: FILE: drivers/misc/job.c:28:
+ * ^I^Iof process grouping called jos.  For further information$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#815: FILE: drivers/misc/job.c:29:
+ * ^I^Iabout jobs, consult the file Documentation/job.txt. Jobs$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: drivers/misc/job.c:30:
+ * ^I^Iare implemented as a type of PAGG (process aggregate).  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#816: FILE: drivers/misc/job.c:30:
+ * ^I^Iare implemented as a type of PAGG (process aggregate).  $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#817: FILE: drivers/misc/job.c:31:
+ * ^I^IFor further information about PAGGs, consult the file$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#818: FILE: drivers/misc/job.c:32:
+ * ^I^IDocumentation/pagg.txt.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#823: FILE: drivers/misc/job.c:37:
+ * ^I^IChange job module so that it can be compiled into$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#824: FILE: drivers/misc/job.c:38:
+ * 		The kernel & move file to drivers/misc/job.c

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#824: FILE: drivers/misc/job.c:38:
+ * ^I^IThe kernel & move file to drivers/misc/job.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: drivers/misc/job.c:41:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#829: FILE: drivers/misc/job.c:43:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#834: FILE: drivers/misc/job.c:48:
+ * have two classes of locks: $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#893: FILE: drivers/misc/job.c:107:
+#include <asm/uaccess.h>	/* for get_user & put_user */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#912: FILE: drivers/misc/job.c:126:
+/* The states for a job */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#915: FILE: drivers/misc/job.c:129:
+#define STOPPED 3  ^I/* Stopped job */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#918: FILE: drivers/misc/job.c:132:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#919: FILE: drivers/misc/job.c:133:
+#ifdef ^I__BIG_ENDIAN$

ERROR:SPACING: exactly one space required after that #ifdef
#919: FILE: drivers/misc/job.c:133:
+#ifdef 	__BIG_ENDIAN

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#920: FILE: drivers/misc/job.c:134:
+#define^I^Iiptr_hid(ll) ^I((uint32_t *)&(ll))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#921: FILE: drivers/misc/job.c:135:
+#define^I^Iiptr_sid(ll) ^I(((uint32_t *)(&(ll) + 1)) - 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#923: FILE: drivers/misc/job.c:137:
+#define^I^Iiptr_hid(ll) ^I(((uint32_t *)(&(ll) + 1)) - 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#924: FILE: drivers/misc/job.c:138:
+#define^I^Iiptr_sid(ll) ^I((uint32_t *)&(ll))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#927: FILE: drivers/misc/job.c:141:
+#define^I^Ijid_hash(ll) ^I(*(iptr_sid(ll)) % HASH_SIZE)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#933: FILE: drivers/misc/job.c:147:
+typedef struct job_attach_s ^Ijob_attach_t;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#933: FILE: drivers/misc/job.c:147:
+typedef struct job_attach_s 	job_attach_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#934: FILE: drivers/misc/job.c:148:
+typedef struct job_waitinfo_s   job_waitinfo_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#935: FILE: drivers/misc/job.c:149:
+typedef struct job_csainfo_s	job_csainfo_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#936: FILE: drivers/misc/job.c:150:
+typedef struct job_entry_s	job_entry_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#937: FILE: drivers/misc/job.c:151:
+typedef struct job_task_s	job_task_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: drivers/misc/job.c:157:
+^Istruct list_head   entry; $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#947: FILE: drivers/misc/job.c:161:
+^Iint^I       ^Istatus;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#951: FILE: drivers/misc/job.c:165:
+	uint64_t    corehimem;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#952: FILE: drivers/misc/job.c:166:
+	uint64_t    virthimem;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#954: FILE: drivers/misc/job.c:168:
+}; $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#958: FILE: drivers/misc/job.c:172:
+	uint64_t	    jid;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#959: FILE: drivers/misc/job.c:173:
+^Iint^I    ^I    refcnt;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#968: FILE: drivers/misc/job.c:182:
+^Ijob_waitinfo_t^I    waitinfo;^I    $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#979: FILE: drivers/misc/job.c:193:
+static int^I    ^I job_table_refcnt = 0;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#979: FILE: drivers/misc/job.c:193:
+static int	    	 job_table_refcnt = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#980: FILE: drivers/misc/job.c:194:
+static rwlock_t    ^I job_table_lock = RW_LOCK_UNLOCKED;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#982: FILE: drivers/misc/job.c:196:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#984: FILE: drivers/misc/job.c:198:
+static job_acctmod_t ^I*acct_list[JOB_ACCT_COUNT];$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#987: FILE: drivers/misc/job.c:201:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#989: FILE: drivers/misc/job.c:203:
+static uint32_t   jid_hid = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#989: FILE: drivers/misc/job.c:203:
+static uint32_t   jid_hid = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#991: FILE: drivers/misc/job.c:205:
+static char ^I   *hid = NULL;^I    $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#991: FILE: drivers/misc/job.c:205:
+static char ^I   *hid = NULL;^I    $

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#991: FILE: drivers/misc/job.c:205:
+static char 	   *hid = NULL;	    

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#996: FILE: drivers/misc/job.c:210:
+int job_sys_create(job_create_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_create_t *' should also have an identifier name
#996: FILE: drivers/misc/job.c:210:
+int job_sys_create(job_create_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#997: FILE: drivers/misc/job.c:211:
+int job_sys_getjid(job_getjid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_getjid_t *' should also have an identifier name
#997: FILE: drivers/misc/job.c:211:
+int job_sys_getjid(job_getjid_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#998: FILE: drivers/misc/job.c:212:
+int job_sys_waitjid(job_waitjid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_waitjid_t *' should also have an identifier name
#998: FILE: drivers/misc/job.c:212:
+int job_sys_waitjid(job_waitjid_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#999: FILE: drivers/misc/job.c:213:
+int job_sys_killjid(job_killjid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_killjid_t *' should also have an identifier name
#999: FILE: drivers/misc/job.c:213:
+int job_sys_killjid(job_killjid_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1000: FILE: drivers/misc/job.c:214:
+int job_sys_getjidcnt(job_jidcnt_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_jidcnt_t *' should also have an identifier name
#1000: FILE: drivers/misc/job.c:214:
+int job_sys_getjidcnt(job_jidcnt_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1001: FILE: drivers/misc/job.c:215:
+int job_sys_getjidlst(job_jidlst_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_jidlst_t *' should also have an identifier name
#1001: FILE: drivers/misc/job.c:215:
+int job_sys_getjidlst(job_jidlst_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1002: FILE: drivers/misc/job.c:216:
+int job_sys_getpidcnt(job_pidcnt_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_pidcnt_t *' should also have an identifier name
#1002: FILE: drivers/misc/job.c:216:
+int job_sys_getpidcnt(job_pidcnt_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1003: FILE: drivers/misc/job.c:217:
+int job_sys_getpidlst(job_pidlst_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_pidlst_t *' should also have an identifier name
#1003: FILE: drivers/misc/job.c:217:
+int job_sys_getpidlst(job_pidlst_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1004: FILE: drivers/misc/job.c:218:
+int job_sys_getuser(job_user_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_user_t *' should also have an identifier name
#1004: FILE: drivers/misc/job.c:218:
+int job_sys_getuser(job_user_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1005: FILE: drivers/misc/job.c:219:
+int job_sys_getprimepid(job_primepid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_primepid_t *' should also have an identifier name
#1005: FILE: drivers/misc/job.c:219:
+int job_sys_getprimepid(job_primepid_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1006: FILE: drivers/misc/job.c:220:
+int job_sys_sethid(job_sethid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_sethid_t *' should also have an identifier name
#1006: FILE: drivers/misc/job.c:220:
+int job_sys_sethid(job_sethid_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1007: FILE: drivers/misc/job.c:221:
+int job_sys_detachjid(job_detachjid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_detachjid_t *' should also have an identifier name
#1007: FILE: drivers/misc/job.c:221:
+int job_sys_detachjid(job_detachjid_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1008: FILE: drivers/misc/job.c:222:
+int job_sys_detachpid(job_detachpid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_detachpid_t *' should also have an identifier name
#1008: FILE: drivers/misc/job.c:222:
+int job_sys_detachpid(job_detachpid_t *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1009: FILE: drivers/misc/job.c:223:
+int job_attach(struct task_struct *, void *,struct pagg_task_s *);
                                            ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1009: FILE: drivers/misc/job.c:223:
+int job_attach(struct task_struct *, void *,struct pagg_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#1009: FILE: drivers/misc/job.c:223:
+int job_attach(struct task_struct *, void *,struct pagg_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1009: FILE: drivers/misc/job.c:223:
+int job_attach(struct task_struct *, void *,struct pagg_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pagg_task_s *' should also have an identifier name
#1009: FILE: drivers/misc/job.c:223:
+int job_attach(struct task_struct *, void *,struct pagg_task_s *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1010: FILE: drivers/misc/job.c:224:
+int job_detach(struct task_struct *, struct pagg_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#1010: FILE: drivers/misc/job.c:224:
+int job_detach(struct task_struct *, struct pagg_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pagg_task_s *' should also have an identifier name
#1010: FILE: drivers/misc/job.c:224:
+int job_detach(struct task_struct *, struct pagg_task_s *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1011: FILE: drivers/misc/job.c:225:
+int job_paggctl(int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1011: FILE: drivers/misc/job.c:225:
+int job_paggctl(int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1011: FILE: drivers/misc/job.c:225:
+int job_paggctl(int, void *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1013: FILE: drivers/misc/job.c:227:
+uint64_t job_getjid(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#1013: FILE: drivers/misc/job.c:227:
+uint64_t job_getjid(struct task_struct *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1015: FILE: drivers/misc/job.c:229:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1031: FILE: drivers/misc/job.c:245:
+^Ichar *dbg_fname = s^I^I$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1033: FILE: drivers/misc/job.c:247:
+#define DBG_PRINTENTRY()					\
+do {								\
+	printk(KERN_DEBUG "job: %s: entry\n", dbg_fname);	\
+} while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1035: FILE: drivers/misc/job.c:249:
+	printk(KERN_DEBUG "job: %s: entry\n", dbg_fname);	\

ERROR:SPACING: space required before the open parenthesis '('
#1036: FILE: drivers/misc/job.c:250:
+} while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1038: FILE: drivers/misc/job.c:252:
+#define DBG_PRINTEXIT(c)^I^I^I^I ^I^I\$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1038: FILE: drivers/misc/job.c:252:
+#define DBG_PRINTEXIT(c)				 		\
+do {							 		\
+	printk(KERN_DEBUG "job: %s: exit, code = %d\n", dbg_fname, c);	\
+} while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1039: FILE: drivers/misc/job.c:253:
+do {^I^I^I^I^I^I^I ^I^I\$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1040: FILE: drivers/misc/job.c:254:
+	printk(KERN_DEBUG "job: %s: exit, code = %d\n", dbg_fname, c);	\

ERROR:SPACING: space required before the open parenthesis '('
#1041: FILE: drivers/misc/job.c:255:
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#1043: FILE: drivers/misc/job.c:257:
+#define JOB_WLOCK(l)					\
+do {							\
+	printk(KERN_DEBUG "job: wlock = %p\n", l);	\
+	write_lock(l);					\
+} while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1043: FILE: drivers/misc/job.c:257:
+#define JOB_WLOCK(l)					\
+do {							\
+	printk(KERN_DEBUG "job: wlock = %p\n", l);	\
+	write_lock(l);					\
+} while(0);

do {} while(0) macros should not have a trailing semicolon.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1045: FILE: drivers/misc/job.c:259:
+	printk(KERN_DEBUG "job: wlock = %p\n", l);	\

ERROR:SPACING: space required before the open parenthesis '('
#1047: FILE: drivers/misc/job.c:261:
+} while(0);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#1049: FILE: drivers/misc/job.c:263:
+#define JOB_WUNLOCK(l)					\
+do {							\
+	printk(KERN_DEBUG "job: wunlock = %p\n", l);	\
+	write_unlock(l);				\
+} while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1049: FILE: drivers/misc/job.c:263:
+#define JOB_WUNLOCK(l)					\
+do {							\
+	printk(KERN_DEBUG "job: wunlock = %p\n", l);	\
+	write_unlock(l);				\
+} while(0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1051: FILE: drivers/misc/job.c:265:
+	printk(KERN_DEBUG "job: wunlock = %p\n", l);	\

ERROR:SPACING: space required before the open parenthesis '('
#1053: FILE: drivers/misc/job.c:267:
+} while(0);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#1055: FILE: drivers/misc/job.c:269:
+#define JOB_RLOCK(l)					\
+do {							\
+	printk(KERN_DEBUG "job: rlock = %p\n", l);	\
+	read_lock(l);					\
+} while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1055: FILE: drivers/misc/job.c:269:
+#define JOB_RLOCK(l)					\
+do {							\
+	printk(KERN_DEBUG "job: rlock = %p\n", l);	\
+	read_lock(l);					\
+} while(0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1057: FILE: drivers/misc/job.c:271:
+	printk(KERN_DEBUG "job: rlock = %p\n", l);	\

ERROR:SPACING: space required before the open parenthesis '('
#1059: FILE: drivers/misc/job.c:273:
+} while(0);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#1061: FILE: drivers/misc/job.c:275:
+#define JOB_RUNLOCK(l)					\
+do {							\
+	printk(KERN_DEBUG "job: runlock = %p\n", l);	\
+	read_unlock(l);					\
+} while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1061: FILE: drivers/misc/job.c:275:
+#define JOB_RUNLOCK(l)					\
+do {							\
+	printk(KERN_DEBUG "job: runlock = %p\n", l);	\
+	read_unlock(l);					\
+} while(0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1063: FILE: drivers/misc/job.c:277:
+	printk(KERN_DEBUG "job: runlock = %p\n", l);	\

ERROR:SPACING: space required before the open parenthesis '('
#1065: FILE: drivers/misc/job.c:279:
+} while(0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1069: FILE: drivers/misc/job.c:283:
+#define DBG_PRINTINIT(s)^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1071: FILE: drivers/misc/job.c:285:
+#define DBG_PRINTENTRY() ^I\$

ERROR:SPACING: space required before the open parenthesis '('
#1073: FILE: drivers/misc/job.c:287:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1077: FILE: drivers/misc/job.c:291:
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1079: FILE: drivers/misc/job.c:293:
+#define JOB_WLOCK(l)	\
+do {			\
+	write_lock(l);	\
+} while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1079: FILE: drivers/misc/job.c:293:
+#define JOB_WLOCK(l)	\
+do {			\
+	write_lock(l);	\
+} while(0);

ERROR:SPACING: space required before the open parenthesis '('
#1082: FILE: drivers/misc/job.c:296:
+} while(0);

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1084: FILE: drivers/misc/job.c:298:
+#define JOB_WUNLOCK(l)	\
+do {			\
+	write_unlock(l);\
+} while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1084: FILE: drivers/misc/job.c:298:
+#define JOB_WUNLOCK(l)	\
+do {			\
+	write_unlock(l);\
+} while(0);

ERROR:SPACING: space required before the open parenthesis '('
#1087: FILE: drivers/misc/job.c:301:
+} while(0);

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1089: FILE: drivers/misc/job.c:303:
+#define JOB_RLOCK(l)	\
+do {			\
+	read_lock(l);	\
+} while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1089: FILE: drivers/misc/job.c:303:
+#define JOB_RLOCK(l)	\
+do {			\
+	read_lock(l);	\
+} while(0);

ERROR:SPACING: space required before the open parenthesis '('
#1092: FILE: drivers/misc/job.c:306:
+} while(0);

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1094: FILE: drivers/misc/job.c:308:
+#define JOB_RUNLOCK(l)	\
+do {			\
+	read_unlock(l);\
+} while(0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1094: FILE: drivers/misc/job.c:308:
+#define JOB_RUNLOCK(l)	\
+do {			\
+	read_unlock(l);\
+} while(0);

ERROR:SPACING: space required before the open parenthesis '('
#1097: FILE: drivers/misc/job.c:311:
+} while(0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1101: FILE: drivers/misc/job.c:315:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1103: FILE: drivers/misc/job.c:317:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1109: FILE: drivers/misc/job.c:323:
+ * You should normally JOB_RLOCK the job_table_lock before calling this $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1118: FILE: drivers/misc/job.c:332:
+^Ijob_entry_t ^I *job = NULL;$

ERROR:SPACING: space prohibited after that open square bracket '['
#1120: FILE: drivers/misc/job.c:334:
+	job_list  = &job_table[ jid_hash(jid) ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#1120: FILE: drivers/misc/job.c:334:
+	job_list  = &job_table[ jid_hash(jid) ];

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1123: FILE: drivers/misc/job.c:337:
+		if (job->jid == jid) {
+			break;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1128: FILE: drivers/misc/job.c:342:
+	if (job_entry == job_list) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1135: FILE: drivers/misc/job.c:349:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1135: FILE: drivers/misc/job.c:349:
+
+	

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1145: FILE: drivers/misc/job.c:359:
+job_attach(struct task_struct *c_task, void *parent_data,
+		struct pagg_task_s *c_pagg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1147: FILE: drivers/misc/job.c:361:
+^Ijob_attach_t *p_attached = ((job_task_t *)parent_data)->attached; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1152: FILE: drivers/misc/job.c:366:
+	int          errcode     = 0;
+	DBG_PRINTINIT("job_attach");

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1157: FILE: drivers/misc/job.c:371:
+	c_jtask = (job_task_t *)kmalloc(sizeof(job_task_t *), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1158: FILE: drivers/misc/job.c:372:
+^Iif (!c_jtask) { $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1160: FILE: drivers/misc/job.c:374:
+		printk(KERN_ERR "Attach task(pid=%d) to job"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1161: FILE: drivers/misc/job.c:375:
+^I^I^I^I" failed on memory error in kernel\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#1161: FILE: drivers/misc/job.c:375:
+		printk(KERN_ERR "Attach task(pid=%d) to job"
+				" failed on memory error in kernel\n", 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1167: FILE: drivers/misc/job.c:381:
+^Ic_attached = (job_attach_t *)kmalloc(sizeof(job_attach_t *), $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1167: FILE: drivers/misc/job.c:381:
+	c_attached = (job_attach_t *)kmalloc(sizeof(job_attach_t *), 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1171: FILE: drivers/misc/job.c:385:
+		printk(KERN_ERR "Attach task(pid=%d) to job"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1172: FILE: drivers/misc/job.c:386:
+^I^I^I^I" failed on memory error in kernel\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#1172: FILE: drivers/misc/job.c:386:
+		printk(KERN_ERR "Attach task(pid=%d) to job"
+				" failed on memory error in kernel\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1183: FILE: drivers/misc/job.c:397:
+		printk(KERN_WARNING "Attach task(pid=%d) to job"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1184: FILE: drivers/misc/job.c:398:
+^I^I^I^I" failed - job is ZOMBIE\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#1184: FILE: drivers/misc/job.c:398:
+		printk(KERN_WARNING "Attach task(pid=%d) to job"
+				" failed - job is ZOMBIE\n", 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1190: FILE: drivers/misc/job.c:404:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1196: FILE: drivers/misc/job.c:410:
+^Ijob->refcnt++;  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1198: FILE: drivers/misc/job.c:412:
+^IJOB_WUNLOCK(&job->lock);  $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1206: FILE: drivers/misc/job.c:420:
+	if (c_jtask) kfree(c_jtask);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1207: FILE: drivers/misc/job.c:421:
+	if (c_attached) kfree(c_attached);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1211: FILE: drivers/misc/job.c:425:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1213: FILE: drivers/misc/job.c:427:
+ * job_detach $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1225: FILE: drivers/misc/job.c:439:
+	job_entry_t  *job        = attached->job;
+	DBG_PRINTINIT("job_detach");

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1230: FILE: drivers/misc/job.c:444:
+	 * Obtain the lock on the the job_table_lock and the job->lock for this

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1235: FILE: drivers/misc/job.c:449:
+^IJOB_WLOCK(&job->lock);  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1248: FILE: drivers/misc/job.c:462:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1260: FILE: drivers/misc/job.c:474:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1271: FILE: drivers/misc/job.c:485:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1273: FILE: drivers/misc/job.c:487:
+^I^I/* $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1293: FILE: drivers/misc/job.c:507:
+				res = acct_list[JOB_ACCT_CSA]->do_jobend(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1297: FILE: drivers/misc/job.c:511:
+					printk(KERN_WARNING "job_detach: CSA -"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'job_detach', this function's name, in a string
#1297: FILE: drivers/misc/job.c:511:
+					printk(KERN_WARNING "job_detach: CSA -"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#1298: FILE: drivers/misc/job.c:512:
+					printk(KERN_WARNING "job_detach: CSA -"
+							" do_jobend failed.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1304: FILE: drivers/misc/job.c:518:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1305: FILE: drivers/misc/job.c:519:
+^I^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1307: FILE: drivers/misc/job.c:521:
+^I         * detached and finished waiting, so now we can free the$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1311: FILE: drivers/misc/job.c:525:
+^I^IMOD_DEC_USE_COUNT; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1316: FILE: drivers/misc/job.c:530:
+^I^I * Therefore, only the job->lock is being held - the $

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1343: FILE: drivers/misc/job.c:557:
+	switch (request) {
+		case JOB_CREATE:
[...]
+		case JOB_ATTACH:
+		case JOB_DETACH:
[...]
+		case JOB_GETJID:
[...]
+		case JOB_WAITJID:
[...]
+		case JOB_KILLJID:
[...]
+		case JOB_GETJIDCNT:
[...]
+		case JOB_GETJIDLST:
[...]
+		case JOB_GETPIDCNT:
[...]
+		case JOB_GETPIDLST:
[...]
+		case JOB_GETUSER:
[...]
+		case JOB_GETPRIMEPID:
[...]
+		case JOB_SETHID:
[...]
+		case JOB_DETACHJID:
[...]
+		case JOB_DETACHPID:
[...]
+		case JOB_SETJLIMIT:
+		case JOB_GETJLIMIT:
+		case JOB_GETJUSAGE:
+		case JOB_FREE:
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1346: FILE: drivers/misc/job.c:560:
+			return job_sys_create((job_create_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1351: FILE: drivers/misc/job.c:565:
+			return -EBADR;
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1354: FILE: drivers/misc/job.c:568:
+			return job_sys_getjid((job_getjid_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1357: FILE: drivers/misc/job.c:571:
+			return job_sys_waitjid((job_waitjid_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1360: FILE: drivers/misc/job.c:574:
+			return job_sys_killjid((job_killjid_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1363: FILE: drivers/misc/job.c:577:
+			return job_sys_getjidcnt((job_jidcnt_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1366: FILE: drivers/misc/job.c:580:
+			return job_sys_getjidlst((job_jidlst_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1369: FILE: drivers/misc/job.c:583:
+			return job_sys_getpidcnt((job_pidcnt_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1372: FILE: drivers/misc/job.c:586:
+			return job_sys_getpidlst((job_pidlst_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1375: FILE: drivers/misc/job.c:589:
+			return job_sys_getuser((job_user_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1378: FILE: drivers/misc/job.c:592:
+			return job_sys_getprimepid((job_primepid_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1381: FILE: drivers/misc/job.c:595:
+			return job_sys_sethid((job_sethid_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1384: FILE: drivers/misc/job.c:598:
+			return job_sys_detachjid((job_detachjid_t *)data);
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1387: FILE: drivers/misc/job.c:601:
+			return job_sys_detachpid((job_detachpid_t *)data);
+			break;

WARNING:TYPO_SPELLING: 'enhancment' may be misspelled - perhaps 'enhancement'?
#1393: FILE: drivers/misc/job.c:607:
+			/* For future enhancment */
 			              ^^^^^^^^^^

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1396: FILE: drivers/misc/job.c:610:
+			return -EBADR;
+			break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1403: FILE: drivers/misc/job.c:617:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1404: FILE: drivers/misc/job.c:618:
+/* $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1416: FILE: drivers/misc/job.c:630:
+^Ijob_entry_t^I^I*job ^I  = NULL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1422: FILE: drivers/misc/job.c:636:
+	int			errcode   = 0;
+	DBG_PRINTINIT("job_sys_create");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1426: FILE: drivers/misc/job.c:640:
+#if 0	/* XXX - Use if capable is not present */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1429: FILE: drivers/misc/job.c:643:
+#else^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1444: FILE: drivers/misc/job.c:658:
+^I^I$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1447: FILE: drivers/misc/job.c:661:
+	attached = (job_attach_t *)kmalloc(sizeof(job_attach_t), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1454: FILE: drivers/misc/job.c:668:
+	job = (job_entry_t *)kmalloc(sizeof(job_entry_t), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1461: FILE: drivers/misc/job.c:675:
+	jtask = (job_task_t *)kmalloc(sizeof(job_task_t), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1468: FILE: drivers/misc/job.c:682:
+^Ipaggnew = (struct pagg_task_s *)kmalloc(sizeof(struct pagg_task_s), $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1468: FILE: drivers/misc/job.c:682:
+	paggnew = (struct pagg_task_s *)kmalloc(sizeof(struct pagg_task_s), 

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*paggnew)...) over kmalloc(sizeof(struct pagg_task_s)...)
#1468: FILE: drivers/misc/job.c:682:
+	paggnew = (struct pagg_task_s *)kmalloc(sizeof(struct pagg_task_s), 

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1475: FILE: drivers/misc/job.c:689:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1477: FILE: drivers/misc/job.c:691:
+^I * we need to detach from that job before attaching to another $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1482: FILE: drivers/misc/job.c:696:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1490: FILE: drivers/misc/job.c:704:
+^I^I * No existing job pagg was found, so we have to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1501: FILE: drivers/misc/job.c:715:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1506: FILE: drivers/misc/job.c:720:
+^IJOB_WLOCK(&tasklist_lock);  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1507: FILE: drivers/misc/job.c:721:
+^IJOB_WLOCK(&job_table_lock);  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: drivers/misc/job.c:730:
+^I^Iif (job_findjid(create.jid)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1526: FILE: drivers/misc/job.c:740:
+^I} else {^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1527: FILE: drivers/misc/job.c:741:
+	} else {	
+

ERROR:SPACING: space prohibited after that open square bracket '['
#1557: FILE: drivers/misc/job.c:771:
+	list_add_tail(&job->entry, &job_table[ jid_hash(job->jid) ]);;

ERROR:SPACING: space prohibited before that close square bracket ']'
#1557: FILE: drivers/misc/job.c:771:
+	list_add_tail(&job->entry, &job_table[ jid_hash(job->jid) ]);;

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#1557: FILE: drivers/misc/job.c:771:
+	list_add_tail(&job->entry, &job_table[ jid_hash(job->jid) ]);;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1561: FILE: drivers/misc/job.c:775:
+^IJOB_WUNLOCK(&job_table_lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1562: FILE: drivers/misc/job.c:776:
+^IJOB_WUNLOCK(&tasklist_lock);  $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1580: FILE: drivers/misc/job.c:794:
+			res = acct_list[JOB_ACCT_CSA]->do_jobstart(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1584: FILE: drivers/misc/job.c:798:
+				printk(KERN_WARNING "job_sys_create: CSA -"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'job_sys_create', this function's name, in a string
#1584: FILE: drivers/misc/job.c:798:
+				printk(KERN_WARNING "job_sys_create: CSA -"

WARNING:SPLIT_STRING: quoted string split across lines
#1585: FILE: drivers/misc/job.c:799:
+				printk(KERN_WARNING "job_sys_create: CSA -"
+						" do_jobstart failed.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1591: FILE: drivers/misc/job.c:805:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1596: FILE: drivers/misc/job.c:810:
+^IMOD_INC_USE_COUNT; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1606: FILE: drivers/misc/job.c:820:
+	if (attached) kfree(attached);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1607: FILE: drivers/misc/job.c:821:
+	if (job) kfree(job);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1608: FILE: drivers/misc/job.c:822:
+	if (jtask) kfree(jtask);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1609: FILE: drivers/misc/job.c:823:
+	if (paggnew) kfree(paggnew);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1617: FILE: drivers/misc/job.c:831:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1626: FILE: drivers/misc/job.c:840:
+job_sys_getjid(job_getjid_t *getjid_args) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1631: FILE: drivers/misc/job.c:845:
+	struct task_struct *task;
+	DBG_PRINTINIT("job_sys_getjid");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1640: FILE: drivers/misc/job.c:854:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1644: FILE: drivers/misc/job.c:858:
+^IJOB_RLOCK(&job_table_lock); $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1646: FILE: drivers/misc/job.c:860:
+	if (getjid.pid == current->pid) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1653: FILE: drivers/misc/job.c:867:
+		if (getjid.r_jid == 0) {
+			errcode = -ENODATA;
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1668: FILE: drivers/misc/job.c:882:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1669: FILE: drivers/misc/job.c:883:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1672: FILE: drivers/misc/job.c:886:
+ * This job allows a process to wait until a job exits & it returns the $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1680: FILE: drivers/misc/job.c:894:
+^Ijob_waitjid_t ^Iwaitjid;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1683: FILE: drivers/misc/job.c:897:
+	int		retcode = 0;
+	DBG_PRINTINIT("job_sys_waitjid");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1689: FILE: drivers/misc/job.c:903:
+	waitjid.r_jid = waitjid.stat = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1701: FILE: drivers/misc/job.c:915:
+	if ((job = job_findjid(waitjid.jid)) == NULL ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1701: FILE: drivers/misc/job.c:915:
+	if ((job = job_findjid(waitjid.jid)) == NULL ) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1705: FILE: drivers/misc/job.c:919:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1707: FILE: drivers/misc/job.c:921:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1713: FILE: drivers/misc/job.c:927:
+^I++job->waitcnt; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1718: FILE: drivers/misc/job.c:932:
+^Iretcode = wait_event_interruptible(job->wait, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1719: FILE: drivers/misc/job.c:933:
+	retcode = wait_event_interruptible(job->wait, 
+			job->refcnt == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1722: FILE: drivers/misc/job.c:936:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1723: FILE: drivers/misc/job.c:937:
+^I^I * This data is static at this point, we will $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1732: FILE: drivers/misc/job.c:946:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1749: FILE: drivers/misc/job.c:963:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1765: FILE: drivers/misc/job.c:979:
+	int retcode = 0;
+	DBG_PRINTINIT("job_sys_killjid");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1776: FILE: drivers/misc/job.c:990:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1789: FILE: drivers/misc/job.c:1003:
+^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1790: FILE: drivers/misc/job.c:1004:
+         * Check capability to signal job.  The signaling user must be$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1793: FILE: drivers/misc/job.c:1007:
+#if 0		/* Use this if not capability is available */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1794: FILE: drivers/misc/job.c:1008:
+^Iif (current->uid != 0) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1815: FILE: drivers/misc/job.c:1029:
+^I^Ierr = send_sig_info(killjid.sig, &info, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1816: FILE: drivers/misc/job.c:1030:
+		err = send_sig_info(killjid.sig, &info, 
+				attached->task);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1818: FILE: drivers/misc/job.c:1032:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1823: FILE: drivers/misc/job.c:1037:
+^I^I^I * should exit when all the child processes exit. It $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1829: FILE: drivers/misc/job.c:1043:
+			if (attached->entry.prev != &job->attached) {
+				retcode = err;
+			}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1834: FILE: drivers/misc/job.c:1048:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1843: FILE: drivers/misc/job.c:1057:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1849: FILE: drivers/misc/job.c:1063:
+
+

WARNING:TYPO_SPELLING: 'Retun' may be misspelled - perhaps 'Return'?
#1853: FILE: drivers/misc/job.c:1067:
+ * Retun the number of jobs currently on the system.
    ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1856: FILE: drivers/misc/job.c:1070:
+ */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1860: FILE: drivers/misc/job.c:1074:
+^Ijob_jidcnt_t ^Ijidcnt;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1861: FILE: drivers/misc/job.c:1075:
+	job_jidcnt_t 	jidcnt;
+	DBG_PRINTINIT("job_sys_getjidcnt");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1876: FILE: drivers/misc/job.c:1090:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1877: FILE: drivers/misc/job.c:1091:
+		
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1881: FILE: drivers/misc/job.c:1095:
+ * Get the list of all jids currently on the system (limited by the number of $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1888: FILE: drivers/misc/job.c:1102:
+	uint64_t	 *jid;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1892: FILE: drivers/misc/job.c:1106:
+^Iint ^I^I count;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1893: FILE: drivers/misc/job.c:1107:
+	int 		 count;
+	DBG_PRINTINIT("job_sys_getjidlst");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1904: FILE: drivers/misc/job.c:1118:
+	jid = (uint64_t *)kmalloc(sizeof(uint64_t *)*jidlst.r_val, GFP_KERNEL);
 	                                            ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1904: FILE: drivers/misc/job.c:1118:
+	jid = (uint64_t *)kmalloc(sizeof(uint64_t *)*jidlst.r_val, GFP_KERNEL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1912: FILE: drivers/misc/job.c:1126:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1919: FILE: drivers/misc/job.c:1133:
+			if (count == jidlst.r_val) {
+				break;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1929: FILE: drivers/misc/job.c:1143:
+^Ifor (i = 0; i < count; i++) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1930: FILE: drivers/misc/job.c:1144:
+		copy_to_user(jidlst.jid+i, &jid[i], sizeof(uint64_t));
 		                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1938: FILE: drivers/misc/job.c:1152:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1952: FILE: drivers/misc/job.c:1166:
+	int	     retcode = 0;
+	DBG_PRINTINIT("job_sys_getpidcnt");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1997: FILE: drivers/misc/job.c:1211:
+	int		 i;
+	DBG_PRINTINIT("job_sys_getpidlst");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2010: FILE: drivers/misc/job.c:1224:
+	pid = (pid_t *)kmalloc(sizeof(pid_t)*max, GFP_KERNEL);
 	                                    ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2010: FILE: drivers/misc/job.c:1224:
+	pid = (pid_t *)kmalloc(sizeof(pid_t)*max, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#2010: FILE: drivers/misc/job.c:1224:
+	pid = (pid_t *)kmalloc(sizeof(pid_t)*max, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2021: FILE: drivers/misc/job.c:1235:
+	if (!job) {
+

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2027: FILE: drivers/misc/job.c:1241:
+		return -EINVAL;
+	} else {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2028: FILE: drivers/misc/job.c:1242:
+	} else {
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2034: FILE: drivers/misc/job.c:1248:
+			if (i == max) {
+				break;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2037: FILE: drivers/misc/job.c:1251:
+^I^I^Iattached = list_entry(attached_entry, job_attach_t, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2038: FILE: drivers/misc/job.c:1252:
+			attached = list_entry(attached_entry, job_attach_t, 
+					entry);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2046: FILE: drivers/misc/job.c:1260:
+	for (i = 0; i < pidlst.r_val; i++) {
+		copy_to_user(pidlst.pid+i, &pid[i], sizeof(pid_t));
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2047: FILE: drivers/misc/job.c:1261:
+		copy_to_user(pidlst.pid+i, &pid[i], sizeof(pid_t));
 		                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2056: FILE: drivers/misc/job.c:1270:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#2070: FILE: drivers/misc/job.c:1284:
+	int        retcode = 0;
+	DBG_PRINTINIT("job_sys_getuser");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2080: FILE: drivers/misc/job.c:1294:
+	if (!job) {
[...]
+	} else {
[...]

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2093: FILE: drivers/misc/job.c:1307:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2094: FILE: drivers/misc/job.c:1308:
+/* $

WARNING:LINE_SPACING: Missing a blank line after declarations
#2109: FILE: drivers/misc/job.c:1323:
+	int              retcode = 0;
+	DBG_PRINTINIT("getprimepid");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2124: FILE: drivers/misc/job.c:1338:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2125: FILE: drivers/misc/job.c:1339:
+^I^I * Job found, now look at first pid entry in the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2131: FILE: drivers/misc/job.c:1345:
+^I^I^Iattached = list_entry(attached_entry, job_attach_t, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2132: FILE: drivers/misc/job.c:1346:
+			attached = list_entry(attached_entry, job_attach_t, 
+					entry);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2136: FILE: drivers/misc/job.c:1350:
+		if (!attached) {
[...]
+		} else if (!attached->task) {
[...]
+		} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2150: FILE: drivers/misc/job.c:1364:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2151: FILE: drivers/misc/job.c:1365:
+	
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2153: FILE: drivers/misc/job.c:1367:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2154: FILE: drivers/misc/job.c:1368:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2158: FILE: drivers/misc/job.c:1372:
+ * If this does not get set, then the jids upper 32 bits will be set to $

WARNING:LINE_SPACING: Missing a blank line after declarations
#2168: FILE: drivers/misc/job.c:1382:
+	int		   errcode = 0;
+	DBG_PRINTINIT("job_sys_sethid");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2183: FILE: drivers/misc/job.c:1397:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2187: FILE: drivers/misc/job.c:1401:
+^IJOB_WLOCK(&job_table_lock); $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2189: FILE: drivers/misc/job.c:1403:
+	sethid.r_hid = jid_hid = sethid.hid;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2199: FILE: drivers/misc/job.c:1413:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2200: FILE: drivers/misc/job.c:1414:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2203: FILE: drivers/misc/job.c:1417:
+ * This function is detach all the processes from a job, but allows the $

WARNING:LINE_SPACING: Missing a blank line after declarations
#2218: FILE: drivers/misc/job.c:1432:
+	int		   errcode = 0;
+	DBG_PRINTINIT("job_sys_detachjid");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2234: FILE: drivers/misc/job.c:1448:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2238: FILE: drivers/misc/job.c:1452:
+^IJOB_WLOCK(&job_table_lock); $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2243: FILE: drivers/misc/job.c:1457:
+	if (job) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2246: FILE: drivers/misc/job.c:1460:
+^I^I/* Mark job as ZOMBIE so no new processes can attach to it */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2258: FILE: drivers/misc/job.c:1472:
+^I^I^Ijob_attach_t *attached = list_entry(entry, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2278: FILE: drivers/misc/job.c:1492:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2279: FILE: drivers/misc/job.c:1493:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2282: FILE: drivers/misc/job.c:1496:
+ * This function is detach a process from the job it is attached too, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2283: FILE: drivers/misc/job.c:1497:
+ * but allows the processes to continue running.  You need $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2284: FILE: drivers/misc/job.c:1498:
+ * CAP_SYS_RESOURCE capability for this to succeed. $

WARNING:LINE_SPACING: Missing a blank line after declarations
#2295: FILE: drivers/misc/job.c:1509:
+	int		   errcode = 0;
+	DBG_PRINTINIT("job_sys_detachpid");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2320: FILE: drivers/misc/job.c:1534:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2335: FILE: drivers/misc/job.c:1549:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2339: FILE: drivers/misc/job.c:1553:
+ * This function is used by modules that are registering to provide job $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2344: FILE: drivers/misc/job.c:1558:
+int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2358: FILE: drivers/misc/job.c:1572:
+^I} $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2359: FILE: drivers/misc/job.c:1573:
+	if (am->type < 0 || am->type > (JOB_ACCT_COUNT-1)) {
 	                                              ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "acct_list[am->type]"
#2365: FILE: drivers/misc/job.c:1579:
+	if (acct_list[am->type] != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2377: FILE: drivers/misc/job.c:1591:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2386: FILE: drivers/misc/job.c:1600:
+int $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2401: FILE: drivers/misc/job.c:1615:
+	if (am->type < 0 || am->type > (JOB_ACCT_COUNT-1))  {
 	                                              ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2429: FILE: drivers/misc/job.c:1643:
+	uint64_t	   jid;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2430: FILE: drivers/misc/job.c:1644:
+	uint64_t	   jid;
+	DBG_PRINTINIT("job_getjid");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2437: FILE: drivers/misc/job.c:1651:
+	if (pagg) {
+		jtask = (job_task_t *)pagg->data;
+	}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2441: FILE: drivers/misc/job.c:1655:
+	if (jtask) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2455: FILE: drivers/misc/job.c:1669:
+ * This function is used by accounting subscribers to get accounting $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2464: FILE: drivers/misc/job.c:1678:
+int job_getacct(uint64_t jid, int type, void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2467: FILE: drivers/misc/job.c:1681:
+	job_entry_t	*job;
+	DBG_PRINTINIT("job_getacct");

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2492: FILE: drivers/misc/job.c:1706:
+	switch (type) {
+		case JOB_ACCT_CSA: 
[...]
+		default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2493: FILE: drivers/misc/job.c:1707:
+^I^Icase JOB_ACCT_CSA: $

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#2509: FILE: drivers/misc/job.c:1723:
+			return -EINVAL;
+			break;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2530: FILE: drivers/misc/job.c:1744:
+int job_setacct(uint64_t jid, int type, int subfield, void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2533: FILE: drivers/misc/job.c:1747:
+	job_entry_t	*job;
+	DBG_PRINTINIT("job_setacct");

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2558: FILE: drivers/misc/job.c:1772:
+	switch (type) {
+		case JOB_ACCT_CSA:
[...]
+		default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2562: FILE: drivers/misc/job.c:1776:
+^I^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2563: FILE: drivers/misc/job.c:1777:
+			if (subfield & JOB_CSA_ACCTFILE) {
+				job->csa.acctfile = csa->job_acctfile;
+			}

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#2572: FILE: drivers/misc/job.c:1786:
+			return -EINVAL;
+			break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2579: FILE: drivers/misc/job.c:1793:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2581: FILE: drivers/misc/job.c:1795:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2591: FILE: drivers/misc/job.c:1805:
+init_job(void) $

CHECK:SPACING: No space is necessary after a cast
#2591: FILE: drivers/misc/job.c:1805:
+init_job(void) 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2595: FILE: drivers/misc/job.c:1809:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2597: FILE: drivers/misc/job.c:1811:
+	for (i = 0; i < HASH_SIZE; i++) {
+		INIT_LIST_HEAD(&job_table[i]);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2602: FILE: drivers/misc/job.c:1816:
+	for (i = 0; i < JOB_ACCT_COUNT; i++) {
+		acct_list[i] = NULL;
+	}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2607: FILE: drivers/misc/job.c:1821:
+	if (hid) {
[...]
+	} else {
[...]

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2608: FILE: drivers/misc/job.c:1822:
+		jid_hid = (int)simple_strtoul(hid, &hid, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:RETURN_VOID: void function return statements are not generally useful
#2629: FILE: drivers/misc/job.c:1843:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2634: FILE: drivers/misc/job.c:1848:
+EXPORT_SYMBOL(job_register_acct);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2635: FILE: drivers/misc/job.c:1849:
+EXPORT_SYMBOL(job_unregister_acct);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2636: FILE: drivers/misc/job.c:1850:
+EXPORT_SYMBOL(job_getjid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2637: FILE: drivers/misc/job.c:1851:
+EXPORT_SYMBOL(job_getacct);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2638: FILE: drivers/misc/job.c:1852:
+EXPORT_SYMBOL(job_setacct);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2645: FILE: include/linux/job.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2662: FILE: include/linux/job.h:18:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2663: FILE: include/linux/job.h:19:
+ * 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2671: FILE: include/linux/job.h:27:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2674: FILE: include/linux/job.h:30:
+ * Description:  This file, include/linux/job.h, contains the data $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2674: FILE: include/linux/job.h:30:
+ * Description:  This file, include/linux/job.h, contains the data 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2675: FILE: include/linux/job.h:31:
+ * ^I^I structure definitions and functions prototypes used$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2676: FILE: include/linux/job.h:32:
+ * ^I^I by other kernel bits that communicate with the job$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2677: FILE: include/linux/job.h:33:
+ * ^I^I module.  One such example is Comprehensive System $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2677: FILE: include/linux/job.h:33:
+ * ^I^I module.  One such example is Comprehensive System $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2678: FILE: include/linux/job.h:34:
+ * ^I^I Accounting  (CSA).$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2682: FILE: include/linux/job.h:38:
+ * ^I2000.07.15^ISam Watters <watters@sgi.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2686: FILE: include/linux/job.h:42:
+ * ^I2001.01.30^ISam Watters <watters@sgi.com>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2687: FILE: include/linux/job.h:43:
+ * ^IMoved file to include/linux/job.h $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2687: FILE: include/linux/job.h:43:
+ * 	Moved file to include/linux/job.h 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2687: FILE: include/linux/job.h:43:
+ * ^IMoved file to include/linux/job.h $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2691: FILE: include/linux/job.h:47:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2697: FILE: include/linux/job.h:53:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2698: FILE: include/linux/job.h:54:
+ * The job start/stop events: These will identify the $

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#2699: FILE: include/linux/job.h:55:
+ * The job start/stop events: These will identify the 
+ * the reason the do_jobstart and do_jobend callbacks are being 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2699: FILE: include/linux/job.h:55:
+ * the reason the do_jobstart and do_jobend callbacks are being $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2707: FILE: include/linux/job.h:63:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2709: FILE: include/linux/job.h:65:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2711: FILE: include/linux/job.h:67:
+ * INTERFACE INFO FOR ACCOUNTING SUBSCRIBERS $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2716: FILE: include/linux/job.h:72:
+typedef struct job_acctmod_s {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2717: FILE: include/linux/job.h:73:
+^Iint     ^Itype;   /* CSA or something else */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2718: FILE: include/linux/job.h:74:
+^Iint     ^I(*do_jobstart)(int event, void *data);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2719: FILE: include/linux/job.h:75:
+^Iint     ^I(*do_jobend)(int event, void *data);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2723: FILE: include/linux/job.h:79:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2724: FILE: include/linux/job.h:80:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2726: FILE: include/linux/job.h:82:
+ * "subscriber" has to have a type.  This type will identify the $

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#2727: FILE: include/linux/job.h:83:
+ * "subscriber" has to have a type.  This type will identify the 
+ * the appropriate structs and macros to use when exchanging data.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2730: FILE: include/linux/job.h:86:
+#define JOB_ACCT_COUNT^I1 /* Number of entries available */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2734: FILE: include/linux/job.h:90:
+ * CSA ACCOUNTING $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2738: FILE: include/linux/job.h:94:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2739: FILE: include/linux/job.h:95:
+/* $

WARNING:TYPO_SPELLING: 'betwee' may be misspelled - perhaps 'between'?
#2740: FILE: include/linux/job.h:96:
+ * For data exchange betwee job and csa.  The embedded defines
                      ^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2743: FILE: include/linux/job.h:99:
+typedef struct job_csa_s {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2745: FILE: include/linux/job.h:101:
+	uint64_t        job_id;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2751: FILE: include/linux/job.h:107:
+	uint64_t        job_corehimem;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2753: FILE: include/linux/job.h:109:
+	uint64_t        job_virthimem;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2758: FILE: include/linux/job.h:114:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2760: FILE: include/linux/job.h:116:
+/* $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_acctmod_t *' should also have an identifier name
#2765: FILE: include/linux/job.h:121:
+int job_register_acct(job_acctmod_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'job_acctmod_t *' should also have an identifier name
#2766: FILE: include/linux/job.h:122:
+int job_unregister_acct(job_acctmod_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#2767: FILE: include/linux/job.h:123:
+uint64_t job_getjid(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uint64_t' should also have an identifier name
#2768: FILE: include/linux/job.h:124:
+int job_getacct(uint64_t, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2768: FILE: include/linux/job.h:124:
+int job_getacct(uint64_t, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2768: FILE: include/linux/job.h:124:
+int job_getacct(uint64_t, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uint64_t' should also have an identifier name
#2769: FILE: include/linux/job.h:125:
+int job_setacct(uint64_t, int, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2769: FILE: include/linux/job.h:125:
+int job_setacct(uint64_t, int, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2769: FILE: include/linux/job.h:125:
+int job_setacct(uint64_t, int, int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2769: FILE: include/linux/job.h:125:
+int job_setacct(uint64_t, int, int, void *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2784: FILE: include/linux/paggctl.h:51:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2785: FILE: include/linux/paggctl.h:52:
+ * Module identifier string $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2790: FILE: include/linux/paggctl.h:57:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2791: FILE: include/linux/paggctl.h:58:
+ * Define paggctl options available in the job module $

WARNING:TYPO_SPELLING: 'specificed' may be misspelled - perhaps 'specified'?
#2800: FILE: include/linux/paggctl.h:67:
+#define JOB_GETJID	4	/* Get Job ID for specificed pid */
                   	 	                  ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2801: FILE: include/linux/paggctl.h:68:
+#define JOB_WAITJID^I5^I/* Wait for job to complete */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2817: FILE: include/linux/paggctl.h:84:
+#define PAGG_JOB_NOPTIONS^IJOB_GETFIRSTPID+1^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2817: FILE: include/linux/paggctl.h:84:
+#define PAGG_JOB_NOPTIONS	JOB_GETFIRSTPID+1		
                          	               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2817: FILE: include/linux/paggctl.h:84:
+#define PAGG_JOB_NOPTIONS	JOB_GETFIRSTPID+1		

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2819: FILE: include/linux/paggctl.h:86:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2821: FILE: include/linux/paggctl.h:88:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2822: FILE: include/linux/paggctl.h:89:
+ * Define paggctl request structures for job module $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2826: FILE: include/linux/paggctl.h:93:
+typedef struct job_create_s {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2827: FILE: include/linux/paggctl.h:94:
+^Iuint64_t ^Ir_jid;^I/* Return value of JID */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2827: FILE: include/linux/paggctl.h:94:
+	uint64_t 	r_jid;	/* Return value of JID */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2828: FILE: include/linux/paggctl.h:95:
+^Iuint64_t ^Ijid;^I/* Jid value requested */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2828: FILE: include/linux/paggctl.h:95:
+	uint64_t 	jid;	/* Jid value requested */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2829: FILE: include/linux/paggctl.h:96:
+^Iuid_t^I ^Iuser;^I/* UID of user associated with job */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2830: FILE: include/linux/paggctl.h:97:
+^Iint^I ^Ioptions;/* creation options - unused */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2833: FILE: include/linux/paggctl.h:100:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2834: FILE: include/linux/paggctl.h:101:
+typedef struct job_getjid_s {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2835: FILE: include/linux/paggctl.h:102:
+^Iuint64_t ^Ir_jid;^I/* Returned value of JID */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2835: FILE: include/linux/paggctl.h:102:
+	uint64_t 	r_jid;	/* Returned value of JID */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2836: FILE: include/linux/paggctl.h:103:
+^Ipid_t^I ^Ipid;^I/* Info requested for PID */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2839: FILE: include/linux/paggctl.h:106:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2840: FILE: include/linux/paggctl.h:107:
+typedef struct job_waitjid_s {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2841: FILE: include/linux/paggctl.h:108:
+^Iuint64_t ^Ir_jid;^I/* Returned value of JID */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2841: FILE: include/linux/paggctl.h:108:
+	uint64_t 	r_jid;	/* Returned value of JID */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2842: FILE: include/linux/paggctl.h:109:
+^Iuint64_t ^Ijid;^I/* Waiting on specified JID */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2842: FILE: include/linux/paggctl.h:109:
+	uint64_t 	jid;	/* Waiting on specified JID */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2843: FILE: include/linux/paggctl.h:110:
+^Iint^I ^Istat;^I/* Status information on JID */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2844: FILE: include/linux/paggctl.h:111:
+^Iint^I ^Ioptions;/* Waiting options */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2844: FILE: include/linux/paggctl.h:111:
+^Iint^I ^Ioptions;/* Waiting options */ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2847: FILE: include/linux/paggctl.h:114:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2848: FILE: include/linux/paggctl.h:115:
+typedef struct job_killjid_s {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2850: FILE: include/linux/paggctl.h:117:
+	uint64_t	jid;	/* Sending signal to all PIDs in JID */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2854: FILE: include/linux/paggctl.h:121:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2855: FILE: include/linux/paggctl.h:122:
+typedef struct job_jidcnt_s {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2859: FILE: include/linux/paggctl.h:126:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2860: FILE: include/linux/paggctl.h:127:
+typedef struct job_jidlst_s {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2862: FILE: include/linux/paggctl.h:129:
+	uint64_t	*jid;	/* List of JIDs */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2865: FILE: include/linux/paggctl.h:132:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2866: FILE: include/linux/paggctl.h:133:
+typedef struct job_pidcnt_s {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2868: FILE: include/linux/paggctl.h:135:
+	uint64_t	jid;	/* Getting count of JID */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2871: FILE: include/linux/paggctl.h:138:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2872: FILE: include/linux/paggctl.h:139:
+typedef struct job_pidlst_s {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2875: FILE: include/linux/paggctl.h:142:
+	uint64_t	jid;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2878: FILE: include/linux/paggctl.h:145:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2879: FILE: include/linux/paggctl.h:146:
+typedef struct job_user_s {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#2880: FILE: include/linux/paggctl.h:147:
+	uint16_t	r_user; /* The UID of the owning user */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2881: FILE: include/linux/paggctl.h:148:
+	uint64_t	jid;    /* Get the UID for this job */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2884: FILE: include/linux/paggctl.h:151:
+typedef struct job_primepid_s {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2886: FILE: include/linux/paggctl.h:153:
+	uint64_t	jid;   /* Get the prime pid for this job */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2889: FILE: include/linux/paggctl.h:156:
+typedef struct job_sethid_s {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2894: FILE: include/linux/paggctl.h:161:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2895: FILE: include/linux/paggctl.h:162:
+typedef struct job_detachjid_s {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2897: FILE: include/linux/paggctl.h:164:
+	uint64_t	jid;   /* Job to detach processes from */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2900: FILE: include/linux/paggctl.h:167:
+typedef struct job_detachpid_s {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2901: FILE: include/linux/paggctl.h:168:
+	uint64_t	r_jid; /* Jod ID task was attached to */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000546001.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 164 errors, 238 warnings, 95 checks, 2783 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000546001.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
