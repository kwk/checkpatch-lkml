WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
>    tio_provider and hub_provider have exactly the same methods, no need to

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# This is a BitKeeper generated diff -Nru style patch.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# ChangeSet

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#   2004/08/11 16:48:48-05:00 pfg@sgi.com 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#   Files needed to provide services for our I/O Hub devices

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# arch/ia64/sn/ioif/xtalk/xtalk_providers.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#   2004/08/11 16:47:53-05:00 pfg@sgi.com +59 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# arch/ia64/sn/ioif/xtalk/xtalk_providers.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#   2004/08/11 16:47:53-05:00 pfg@sgi.com +0 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#   BitKeeper file /work.attica2/pfg/Linux/2.5-BK/to-base-2.6/arch/ia64/sn/ioif/xtalk/xtalk_providers.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# arch/ia64/sn/ioif/xtalk/Makefile

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#   2004/08/11 16:47:51-05:00 pfg@sgi.com +10 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# arch/ia64/sn/ioif/xtalk/Makefile

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#   2004/08/11 16:47:51-05:00 pfg@sgi.com +0 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#   BitKeeper file /work.attica2/pfg/Linux/2.5-BK/to-base-2.6/arch/ia64/sn/ioif/xtalk/Makefile

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#54: 
#   BitKeeper file /work.attica2/pfg/Linux/2.5-BK/to-base-2.6/arch/ia64/sn/ioif/xtalk/Makefile

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:20:
+	struct ia64_sal_retval ret_stuff;
+	ret_stuff.status = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#96: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:23:
+	SAL_CALL_NOLOCK(ret_stuff, (u64) SN_SAL_XTALK,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#97: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:24:
+			(u64) XTALK_CALL_INTR_ALLOC, (u64) widget_info,

CHECK:SPACING: No space is necessary after a cast
#98: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:25:
+			(u64) req_irq, (u64) req_nasid, (u64) req_slice, 0, 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#100: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:27:
+	printk("sal_xtalk_intr_alloc: v0=0x%lx\n", ret_stuff.v0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sal_xtalk_intr_alloc', this function's name, in a string
#100: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:27:
+	printk("sal_xtalk_intr_alloc: v0=0x%lx\n", ret_stuff.v0);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#101: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:28:
+	if (ret_stuff.status == SALRET_OK) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:39:
+	struct ia64_sal_retval ret_stuff;
+	ret_stuff.status = 0;

CHECK:SPACING: No space is necessary after a cast
#115: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:42:
+	SAL_CALL_NOLOCK(ret_stuff, (u64) SN_SAL_XTALK,

CHECK:SPACING: No space is necessary after a cast
#116: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:43:
+			(u64) XTALK_CALL_INTR_FREE, (u64) widget_info,

CHECK:SPACING: No space is necessary after a cast
#117: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:44:
+			(u64) sn_irq_info, 0, 0, 0, 0);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#121: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:48:
+xtalk_provider_t hub_provider = {
+

CHECK:SPACING: No space is necessary after a cast
#123: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:50:
+	(xtalk_intr_free_f *) sal_xtalk_intr_free,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#128: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:55:
+xtalk_provider_t tio_provider = {
+

CHECK:SPACING: No space is necessary after a cast
#129: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:56:
+	(xtalk_intr_alloc_f *) sal_xtalk_intr_alloc,

CHECK:SPACING: No space is necessary after a cast
#130: FILE: arch/ia64/sn/ioif/xtalk/xtalk_providers.c:57:
+	(xtalk_intr_free_f *) sal_xtalk_intr_free,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261096.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 28 warnings, 11 checks, 69 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261096.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
