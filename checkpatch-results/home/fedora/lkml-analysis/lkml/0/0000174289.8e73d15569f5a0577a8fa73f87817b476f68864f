ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: drivers/w1/w1_int.c:124:
+        /* validate minimum functionality */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: drivers/w1/w1_int.c:125:
+        if (!(master->touch_bit && master->reset_bus) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: drivers/w1/w1_int.c:125:
+        if (!(master->touch_bit && master->reset_bus) &&$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#55: FILE: drivers/w1/w1_int.c:125:
+        if (!(master->touch_bit && master->reset_bus) &&
+            !(master->write_bit && master->read_bit))
+        {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#55: FILE: drivers/w1/w1_int.c:125:
+        if (!(master->touch_bit && master->reset_bus) &&
[...]
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: drivers/w1/w1_int.c:126:
+            !(master->write_bit && master->read_bit))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: drivers/w1/w1_int.c:126:
+            !(master->write_bit && master->read_bit))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: drivers/w1/w1_int.c:127:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: drivers/w1/w1_int.c:127:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: drivers/w1/w1_int.c:128:
+           printk(KERN_ERR "w1_add_master_device: invalid function set\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: drivers/w1/w1_int.c:128:
+           printk(KERN_ERR "w1_add_master_device: invalid function set\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#58: FILE: drivers/w1/w1_int.c:128:
+           printk(KERN_ERR "w1_add_master_device: invalid function set\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'w1_add_master_device', this function's name, in a string
#58: FILE: drivers/w1/w1_int.c:128:
+           printk(KERN_ERR "w1_add_master_device: invalid function set\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: drivers/w1/w1_int.c:129:
+           return(-EINVAL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: drivers/w1/w1_int.c:129:
+           return(-EINVAL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: drivers/w1/w1_int.c:130:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: drivers/w1/w1_int.c:130:
+        }$

CHECK:BRACES: Unbalanced braces around else statement
#85: FILE: drivers/w1/w1_io.c:70:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#87: FILE: drivers/w1/w1_io.c:72:
+		return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#122: FILE: drivers/w1/w1_io.c:112:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: drivers/w1/w1_io.c:147:
+			res |= (w1_touch_bit(dev,1) << i);
 			                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#204: FILE: drivers/w1/w1_io.c:239:
+EXPORT_SYMBOL(w1_touch_bit);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct w1_master *' should also have an identifier name
#224: FILE: drivers/w1/w1_io.h:33:
+void w1_write_block(struct w1_master *, const u8 *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const u8 *' should also have an identifier name
#224: FILE: drivers/w1/w1_io.h:33:
+void w1_write_block(struct w1_master *, const u8 *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#224: FILE: drivers/w1/w1_io.h:33:
+void w1_write_block(struct w1_master *, const u8 *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174289.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 13 warnings, 2 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174289.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
