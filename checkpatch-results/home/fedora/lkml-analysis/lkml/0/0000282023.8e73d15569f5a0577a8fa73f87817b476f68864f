WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -ruN -X /home/picco/losl/dontdiff linux-2.6.6-orig/arch/i386/Kconfig linux-2.6.6-hpet/arch/i386/Kconfig

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#70: FILE: arch/i386/kernel/time_hpet.c:143:
+^I^Iunsigned int ^I^Intimer;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: arch/i386/kernel/time_hpet.c:144:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: arch/i386/kernel/time_hpet.c:145:
+		memset(&hd, 0, sizeof (hd));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: arch/i386/kernel/time_hpet.c:152:
+^I^I * Register with driver.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: arch/i386/kernel/time_hpet.c:165:
+^I^Iif (ntimer > 2) {^I$

CHECK:SPACING: No space is necessary after a cast
#97: FILE: arch/i386/kernel/time_hpet.c:170:
+			hpet = (struct hpet *) hpet_virt_address;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: arch/i386/kernel/time_hpet.c:173:
+^I^I^I^Itimer++, i++) $

CHECK:CAMELCASE: Avoid CamelCase: <Tn_INT_ROUTE_CNF_MASK>
#102: FILE: arch/i386/kernel/time_hpet.c:175:
+					Tn_INT_ROUTE_CNF_MASK) >>

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Tn_INT_ROUTE_CNF_SHIFT>
#103: FILE: arch/i386/kernel/time_hpet.c:176:
+					Tn_INT_ROUTE_CNF_SHIFT;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: arch/i386/kernel/time_hpet.c:177:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#105: FILE: arch/i386/kernel/time_hpet.c:178:
+			
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: Documentation/hpet.txt:9:
+driver module_init routine is called.  This enables platform code which uses timer 0 or 1 as the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: Documentation/hpet.txt:10:
+main timer to intercept HPET initialization.  An example of this initialization can be found in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: Documentation/hpet.txt:50:
+^I^I"open-close",^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: Documentation/hpet.txt:51:
+^I^Ihpet_open_close^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: Documentation/hpet.txt:54:
+^I^I"info",^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: Documentation/hpet.txt:66:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: Documentation/hpet.txt:67:
+int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: Documentation/hpet.txt:96:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: Documentation/hpet.txt:115:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: Documentation/hpet.txt:120:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: Documentation/hpet.txt:183:
+^I^I^Ifprintf(stderr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: Documentation/hpet.txt:201:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: Documentation/hpet.txt:240:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: Documentation/hpet.txt:242:
+^I^I((value = fcntl(fd, F_GETFL)) == 1) || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: Documentation/hpet.txt:246:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: Documentation/hpet.txt:287:
+The kernel API has three interfaces exported from the driver: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: Documentation/hpet.txt:296:
+is used to terminate usage of the HPET timer reserved by hpet_register. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: Documentation/hpet.txt:297:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#420: FILE: drivers/char/hpet.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#424: FILE: drivers/char/hpet.c:5:
+ * ^IBob Picco$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#446: FILE: drivers/char/hpet.c:27:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#448: FILE: drivers/char/hpet.c:29:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#450: FILE: drivers/char/hpet.c:31:
+#include <asm/bitops.h>

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#466: FILE: drivers/char/hpet.c:47:
+static char hpetname[] = "hpet/XX";

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#475: FILE: drivers/char/hpet.c:56:
+	volatile struct hpet	*hd_hpet;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#476: FILE: drivers/char/hpet.c:57:
+	volatile struct hpet_timer

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#491: FILE: drivers/char/hpet.c:72:
+	volatile struct hpet	*hp_hpet;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#506: FILE: drivers/char/hpet.c:87:
+hpet_interrupt (int irq, void *data, struct pt_regs *regs)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: drivers/char/hpet.c:122:
+hpet_minor_to_dev (int minor)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#554: FILE: drivers/char/hpet.c:135:
+hpet_open (struct inode *inode, struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#578: FILE: drivers/char/hpet.c:159:
+hpet_read (struct file *file, char *buf, size_t count, loff_t *ppos)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#580: FILE: drivers/char/hpet.c:161:
+	DECLARE_WAITQUEUE(wait,current);
 	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#589: FILE: drivers/char/hpet.c:170:
+	if (count < sizeof (unsigned long))

CHECK:BRACES: braces {} should be used on all arms of this statement
#602: FILE: drivers/char/hpet.c:183:
+		if (data)
[...]
+		else if (file->f_flags & O_NONBLOCK) {
[...]
+		} else if (signal_pending(current)) {
[...]

ERROR:SPACING: space required before the open parenthesis '('
#614: FILE: drivers/char/hpet.c:195:
+	} while(1);

CHECK:SPACING: No space is necessary after a cast
#616: FILE: drivers/char/hpet.c:197:
+	retval = put_user(data, (unsigned long *) buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#618: FILE: drivers/char/hpet.c:199:
+		retval = sizeof (unsigned long);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#627: FILE: drivers/char/hpet.c:208:
+hpet_poll (struct file *file, poll_table *wait)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#650: FILE: drivers/char/hpet.c:231:
+hpet_mmap (struct file *file, struct vm_area_struct *vma)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#653: FILE: drivers/char/hpet.c:234:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:SPACING: No space is necessary after a cast
#665: FILE: drivers/char/hpet.c:246:
+	addr = (unsigned long) devp->hd_hpet;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#668: FILE: drivers/char/hpet.c:249:
+		return -ENOSYS;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#675: FILE: drivers/char/hpet.c:256:
+		printk(KERN_ERR "remap_page_range failed in hpet.c\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: drivers/char/hpet.c:265:
+hpet_fasync (int fd, struct file *file, int on)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#697: FILE: drivers/char/hpet.c:278:
+hpet_release (struct inode *inode, struct file *file)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#700: FILE: drivers/char/hpet.c:281:
+	volatile struct hpet_timer *timer;

CHECK:CAMELCASE: Avoid CamelCase: <Tn_INT_ENB_CNF_MASK>
#707: FILE: drivers/char/hpet.c:288:
+	timer->hpet_config &= ~Tn_INT_ENB_CNF_MASK;

CHECK:CAMELCASE: Avoid CamelCase: <Tn_TYPE_CNF_MASK>
#716: FILE: drivers/char/hpet.c:297:
+	if (devp->hd_flags & HPET_PERIODIC && timer->hpet_config & Tn_TYPE_CNF_MASK) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#737: FILE: drivers/char/hpet.c:318:
+hpet_ioctl (struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#746: FILE: drivers/char/hpet.c:327:
+hpet_ioctl_ieon (struct hpet_dev *devp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#748: FILE: drivers/char/hpet.c:329:
+	volatile struct hpet_timer *timer;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#749: FILE: drivers/char/hpet.c:330:
+	volatile struct hpet *hpet;

CHECK:SPACING: No space is necessary after a cast
#776: FILE: drivers/char/hpet.c:357:
+		sprintf(name, "hpet%d", (int) (devp - hpetp->hp_dev));

CHECK:SPACING: No space is necessary after a cast
#778: FILE: drivers/char/hpet.c:359:
+		if (request_irq(irq, hpet_interrupt, SA_INTERRUPT, name, (void *) devp)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#779: FILE: drivers/char/hpet.c:360:
+			printk(KERN_ERR "hpet: IRQ %d is not free\n", irq);

CHECK:CAMELCASE: Avoid CamelCase: <Tn_VAL_SET_CNF_MASK>
#801: FILE: drivers/char/hpet.c:382:
+		v |= Tn_VAL_SET_CNF_MASK;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#821: FILE: drivers/char/hpet.c:402:
+hpet_time_div (unsigned long dis)

CHECK:SPACING: No space is necessary after a cast
#827: FILE: drivers/char/hpet.c:408:
+	return (unsigned long) m;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#831: FILE: drivers/char/hpet.c:412:
+hpet_ioctl_common (struct hpet_dev *devp, int cmd, unsigned long arg, int kernel)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#833: FILE: drivers/char/hpet.c:414:
+	volatile struct hpet_timer *timer;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#834: FILE: drivers/char/hpet.c:415:
+	volatile struct hpet *hpet;

CHECK:CAMELCASE: Avoid CamelCase: <Tn_PER_INT_CAP_MASK>
#876: FILE: drivers/char/hpet.c:457:
+		info.hi_flags = timer->hpet_config & Tn_PER_INT_CAP_MASK;

CHECK:SPACING: No space is necessary after a cast
#877: FILE: drivers/char/hpet.c:458:
+		if (copy_to_user((void *) arg, &info , sizeof (info)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#877: FILE: drivers/char/hpet.c:458:
+		if (copy_to_user((void *) arg, &info , sizeof (info)))

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#877: FILE: drivers/char/hpet.c:458:
+		if (copy_to_user((void *) arg, &info , sizeof (info)))
 		                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#896: FILE: drivers/char/hpet.c:477:
+		if (devp->hd_flags & HPET_PERIODIC &&
+			timer->hpet_config & Tn_TYPE_CNF_MASK) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'arg > hpet_max_freq'
#904: FILE: drivers/char/hpet.c:485:
+		if (!kernel && (arg > hpet_max_freq) &&
+			!capable(CAP_SYS_RESOURCE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: drivers/char/hpet.c:486:
+		if (!kernel && (arg > hpet_max_freq) &&
+			!capable(CAP_SYS_RESOURCE)) {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#921: FILE: drivers/char/hpet.c:502:
+static struct file_operations hpet_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#933: FILE: drivers/char/hpet.c:514:
+EXPORT_SYMBOL(hpet_alloc);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#934: FILE: drivers/char/hpet.c:515:
+EXPORT_SYMBOL(hpet_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#935: FILE: drivers/char/hpet.c:516:
+EXPORT_SYMBOL(hpet_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#936: FILE: drivers/char/hpet.c:517:
+EXPORT_SYMBOL(hpet_control);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#939: FILE: drivers/char/hpet.c:520:
+hpet_register (struct hpet_task *tp, int periodic)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#943: FILE: drivers/char/hpet.c:524:
+	volatile struct hpet_timer *timer;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#961: FILE: drivers/char/hpet.c:542:
+	for (devp = 0, hpetp = hpets; hpetp && !devp; hpetp = hpetp->hp_next)
+	for (timer = hpetp->hp_hpet->hpet_timers, i = 0; i < hpetp->hp_ntimer; i++, timer++) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#988: FILE: drivers/char/hpet.c:569:
+hpet_tpcheck (struct hpet_task *tp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1000: FILE: drivers/char/hpet.c:581:
+		if (devp >= hpetp->hp_dev && devp < (hpetp->hp_dev + hpetp->hp_ntimer) &&
+			devp->hd_hpet == hpetp->hp_hpet)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1006: FILE: drivers/char/hpet.c:587:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1008: FILE: drivers/char/hpet.c:589:
+hpet_unregister (struct hpet_task *tp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1011: FILE: drivers/char/hpet.c:592:
+	volatile struct hpet_timer *timer;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1014: FILE: drivers/char/hpet.c:595:
+	if ((err = hpet_tpcheck(tp)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1029: FILE: drivers/char/hpet.c:610:
+	devp->hd_flags &= ~( HPET_IE | HPET_PERIODIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1038: FILE: drivers/char/hpet.c:619:
+hpet_control (struct hpet_task *tp, unsigned int cmd, unsigned long arg)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1043: FILE: drivers/char/hpet.c:624:
+	if ((err = hpet_tpcheck(tp)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1056: FILE: drivers/char/hpet.c:637:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1064: FILE: drivers/char/hpet.c:645:
+hpet_getoffset (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1070: FILE: drivers/char/hpet.c:651:
+hpet_update (long delta)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1074: FILE: drivers/char/hpet.c:655:
+	volatile struct hpet *hpet;

CHECK:SPACING: No space is necessary after a cast
#1080: FILE: drivers/char/hpet.c:661:
+	if (delta < 0 || (unsigned long) delta < offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1088: FILE: drivers/char/hpet.c:669:
+hpet_reset (void)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1090: FILE: drivers/char/hpet.c:671:
+	volatile struct hpet *hpet;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1142: FILE: drivers/char/hpet.c:723:
+hpet_start (struct seq_file *s, loff_t *pos)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1155: FILE: drivers/char/hpet.c:736:
+hpet_next (struct seq_file *s, void *v, loff_t *pos)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1165: FILE: drivers/char/hpet.c:746:
+hpet_stop (struct seq_file *s, void *v)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1168: FILE: drivers/char/hpet.c:749:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1171: FILE: drivers/char/hpet.c:752:
+hpet_show (struct seq_file *s, void *v)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1174: FILE: drivers/char/hpet.c:755:
+	volatile struct hpet *hpet;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1186: FILE: drivers/char/hpet.c:767:
+	seq_printf(s, "HPET%d period = %d 10**-15  vendor = 0x%x number timer = %d\n",
+		hpetp->hp_which, (u32) period, (u32) vendor, hpetp->hp_ntimer);

CHECK:SPACING: No space is necessary after a cast
#1186: FILE: drivers/char/hpet.c:767:
+		hpetp->hp_which, (u32) period, (u32) vendor, hpetp->hp_ntimer);

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#1191: FILE: drivers/char/hpet.c:772:
+static struct seq_operations hpet_seq_ops = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1199: FILE: drivers/char/hpet.c:780:
+hpet_proc_open (struct inode *inode, struct file *file)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1204: FILE: drivers/char/hpet.c:785:
+static struct file_operations hpet_proc_fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1211: FILE: drivers/char/hpet.c:792:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1220: FILE: drivers/char/hpet.c:801:
+hpet_calibrate (struct hpets *hpetp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1222: FILE: drivers/char/hpet.c:803:
+	volatile struct hpet_timer *timer;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1226: FILE: drivers/char/hpet.c:807:
+	volatile struct hpet *hpet;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1258: FILE: drivers/char/hpet.c:839:
+hpet_init_chrdev (void)

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#1263: FILE: drivers/char/hpet.c:844:
+		panic("unable to to major %d for hpet device", HPET_MAJOR);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1266: FILE: drivers/char/hpet.c:847:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1269: FILE: drivers/char/hpet.c:850:
+hpet_post_platform (void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1279: FILE: drivers/char/hpet.c:860:
+		for (i = 0, devp = hpetp->hp_dev;  i < hpetp->hp_ntimer; i++, devp++) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1285: FILE: drivers/char/hpet.c:866:
+			devfs_mk_cdev(MKDEV(HPET_MAJOR, ntimer),
+				S_IFCHR|S_IRUSR|S_IWUSR, hpetname);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1285: FILE: drivers/char/hpet.c:866:
+				S_IFCHR|S_IRUSR|S_IWUSR, hpetname);
 				       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1285: FILE: drivers/char/hpet.c:866:
+				S_IFCHR|S_IRUSR|S_IWUSR, hpetname);
 				               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#1285: FILE: drivers/char/hpet.c:866:
+				S_IFCHR|S_IRUSR|S_IWUSR, hpetname);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:RETURN_VOID: void function return statements are not generally useful
#1290: FILE: drivers/char/hpet.c:871:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1293: FILE: drivers/char/hpet.c:874:
+hpet_alloc (struct hpet_data *hdp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1300: FILE: drivers/char/hpet.c:881:
+	volatile struct hpet *hpet;

CHECK:SPACING: No space is necessary after a cast
#1301: FILE: drivers/char/hpet.c:882:
+	static struct hpets *last __initdata = (struct hpets *) 0;

CHECK:SPACING: No space is necessary after a cast
#1304: FILE: drivers/char/hpet.c:885:
+		if (hpetp->hp_hpet == (struct hpet *) (hdp->hd_address))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdp->hd_address'
#1304: FILE: drivers/char/hpet.c:885:
+		if (hpetp->hp_hpet == (struct hpet *) (hdp->hd_address))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1307: FILE: drivers/char/hpet.c:888:
+	siz = sizeof (struct hpets) + ((hdp->hd_nirqs - 1) *

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1308: FILE: drivers/char/hpet.c:889:
+		sizeof (struct hpet_dev));

CHECK:SPACING: No space is necessary after a cast
#1318: FILE: drivers/char/hpet.c:899:
+	hpetp->hp_hpet = (struct hpet *) hdp->hd_address;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1339: FILE: drivers/char/hpet.c:920:
+		printk(KERN_WARNING "hpet: no timers in config data\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1342: FILE: drivers/char/hpet.c:923:
+	}
+	else if (hpetp->hp_ntimer != ntimer) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1343: FILE: drivers/char/hpet.c:924:
+		printk(KERN_WARNING "hpet: number irqs doesn't agree"

WARNING:SPLIT_STRING: quoted string split across lines
#1344: FILE: drivers/char/hpet.c:925:
+		printk(KERN_WARNING "hpet: number irqs doesn't agree"
+			" with number of timers\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1368: FILE: drivers/char/hpet.c:949:
+		volatile struct hpet_timer *timer;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1389: FILE: drivers/char/hpet.c:970:
+		devfs_mk_cdev(MKDEV(HPET_MAJOR, hpet_ntimer),
+			S_IFCHR|S_IRUSR|S_IWUSR, hpetname);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1389: FILE: drivers/char/hpet.c:970:
+			S_IFCHR|S_IRUSR|S_IWUSR, hpetname);
 			       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1389: FILE: drivers/char/hpet.c:970:
+			S_IFCHR|S_IRUSR|S_IWUSR, hpetname);
 			               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#1389: FILE: drivers/char/hpet.c:970:
+			S_IFCHR|S_IRUSR|S_IWUSR, hpetname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1399: FILE: drivers/char/hpet.c:980:
+hpet_resources (struct acpi_resource *res, void *data)

CHECK:SPACING: No space is necessary after a cast
#1414: FILE: drivers/char/hpet.c:995:
+		hdp->hd_address = (unsigned long) ioremap(addr.min_address_range, size);

CHECK:SPACING: No space is necessary after a cast
#1417: FILE: drivers/char/hpet.c:998:
+			if (hpetp->hp_hpet == (struct hpet *) (hdp->hd_address))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdp->hd_address'
#1417: FILE: drivers/char/hpet.c:998:
+			if (hpetp->hp_hpet == (struct hpet *) (hdp->hd_address))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1420: FILE: drivers/char/hpet.c:1001:
+	}
+	else if (res->id == ACPI_RSTYPE_EXT_IRQ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1432: FILE: drivers/char/hpet.c:1013:
+				hdp->hd_irq[i] = acpi_register_irq(irqp->interrupts[i],
+							irqp->active_high_low, irqp->edge_level);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1443: FILE: drivers/char/hpet.c:1024:
+hpet_acpi_add (struct acpi_device *device)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1456: FILE: drivers/char/hpet.c:1037:
+		printk("%s: no address or irqs in _CRS\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1456: FILE: drivers/char/hpet.c:1037:
+		printk("%s: no address or irqs in _CRS\n", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1464: FILE: drivers/char/hpet.c:1045:
+hpet_acpi_remove (struct acpi_device *device, int type)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1479: FILE: drivers/char/hpet.c:1060:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1482: FILE: drivers/char/hpet.c:1063:
+hpet_init (void)

CHECK:SPACING: No space is necessary after a cast
#1489: FILE: drivers/char/hpet.c:1070:
+	(void) acpi_bus_register_driver(&hpet_acpi_driver);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1491: FILE: drivers/char/hpet.c:1072:
+	if (hpets) {
[...]
+	else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1501: FILE: drivers/char/hpet.c:1082:
+			volatile struct hpet	*hpet;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1514: FILE: drivers/char/hpet.c:1095:
+	}
+	else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1519: FILE: drivers/char/hpet.c:1100:
+hpet_exit (void)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1529: FILE: drivers/char/hpet.c:1110:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1531: FILE: drivers/char/hpet.c:1112:
+
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1543: FILE: drivers/char/Kconfig:962:
+config HPET
+	bool "HPET - High Precision Event Timer"
+	default n
+	help
+	  If you say Y here, you will have a device named "/dev/hpet/XX" for
+	  each timer supported by the HPET.  The timers are 
+	  non-periodioc and/or periodic. 
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1548: FILE: drivers/char/Kconfig:967:
+^I  each timer supported by the HPET.  The timers are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1549: FILE: drivers/char/Kconfig:968:
+^I  non-periodioc and/or periodic. $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1551: FILE: drivers/char/Kconfig:970:
+config HPET_RTC_IRQ
+	bool "HPET Control RTC IRQ"
+	default n
+	depends on HPET
+	help
+	  If you say Y here, you will disable RTC_IRQ in drivers/char/rtc.c. It
+	  is assumed the platform called hpet_alloc with the RTC IRQ values for
+	  the HPET timers.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1560: FILE: drivers/char/Kconfig:979:
+config HPET_NOMMAP
+	bool "HPET - Control mmap capability."
+	default n
+	depends on HPET
+	help
+	  If you say Y here, then the mmap interface for the HPET driver returns ENOSYS.
+	  Some hardware implementations might not want all the memory in the page the
+	  HPET control registers reside to be exposed.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1618: FILE: include/linux/hpet.h:1:
+#ifndef	__HPET__

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1635: FILE: include/linux/hpet.h:18:
+^I^Iunsigned long ^I_hpet_mc;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1643: FILE: include/linux/hpet.h:26:
+^I^I^Iunsigned long^I_hpet_compare;^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1667: FILE: include/linux/hpet.h:50:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1672: FILE: include/linux/hpet.h:55:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1680: FILE: include/linux/hpet.h:63:
+#define	HPET_ISR_CLEAR(HPET, TIMER)				\
+		(HPET)->hpet_isr |= (1UL << TIMER)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'TIMER' may be better as '(TIMER)' to avoid precedence issues
#1680: FILE: include/linux/hpet.h:63:
+#define	HPET_ISR_CLEAR(HPET, TIMER)				\
+		(HPET)->hpet_isr |= (1UL << TIMER)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1683: FILE: include/linux/hpet.h:66:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1685: FILE: include/linux/hpet.h:68:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Tn_INT_ROUTE_CAP_MASK>
#1690: FILE: include/linux/hpet.h:73:
+#define	Tn_INT_ROUTE_CAP_MASK		(0xffffffff00000000ULL)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_INI_ROUTE_CAP_SHIFT>
#1691: FILE: include/linux/hpet.h:74:
+#define	Tn_INI_ROUTE_CAP_SHIFT		(32UL)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_FSB_INT_DELCAP_MASK>
#1692: FILE: include/linux/hpet.h:75:
+#define	Tn_FSB_INT_DELCAP_MASK		(0x8000UL)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_FSB_INT_DELCAP_SHIFT>
#1693: FILE: include/linux/hpet.h:76:
+#define	Tn_FSB_INT_DELCAP_SHIFT		(15)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_FSB_EN_CNF_MASK>
#1694: FILE: include/linux/hpet.h:77:
+#define	Tn_FSB_EN_CNF_MASK		(0x4000UL)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_FSB_EN_CNF_SHIFT>
#1695: FILE: include/linux/hpet.h:78:
+#define	Tn_FSB_EN_CNF_SHIFT		(14)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_32MODE_CNF_MASK>
#1698: FILE: include/linux/hpet.h:81:
+#define	Tn_32MODE_CNF_MASK		(0x0100UL)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_SIZE_CAP_MASK>
#1700: FILE: include/linux/hpet.h:83:
+#define	Tn_SIZE_CAP_MASK		(0x0020UL)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_INT_TYPE_CNF_MASK>
#1704: FILE: include/linux/hpet.h:87:
+#define	Tn_INT_TYPE_CNF_MASK		(0x0002UL)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_FSB_INT_ADDR_MASK>
#1710: FILE: include/linux/hpet.h:93:
+#define	Tn_FSB_INT_ADDR_MASK		(0xffffffff00000000ULL)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_FSB_INT_ADDR_SHIFT>
#1711: FILE: include/linux/hpet.h:94:
+#define	Tn_FSB_INT_ADDR_SHIFT		(32UL)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_FSB_INT_VAL_MASK>
#1712: FILE: include/linux/hpet.h:95:
+#define	Tn_FSB_INT_VAL_MASK		(0x00000000ffffffffULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1713: FILE: include/linux/hpet.h:96:
+^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1715: FILE: include/linux/hpet.h:98:
+^I^Iunsigned long ^Ihi_ireqfreq;^I/* Hz */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1721: FILE: include/linux/hpet.h:104:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1729: FILE: include/linux/hpet.h:112:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1736: FILE: include/linux/hpet.h:119:
+	void	(*ht_func)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hpet_data *' should also have an identifier name
#1751: FILE: include/linux/hpet.h:134:
+int hpet_alloc(struct hpet_data *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hpet_task *' should also have an identifier name
#1752: FILE: include/linux/hpet.h:135:
+int hpet_register(struct hpet_task *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1752: FILE: include/linux/hpet.h:135:
+int hpet_register(struct hpet_task *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hpet_task *' should also have an identifier name
#1753: FILE: include/linux/hpet.h:136:
+int hpet_unregister(struct hpet_task *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hpet_task *' should also have an identifier name
#1754: FILE: include/linux/hpet.h:137:
+int hpet_control(struct hpet_task *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1754: FILE: include/linux/hpet.h:137:
+int hpet_control(struct hpet_task *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1754: FILE: include/linux/hpet.h:137:
+int hpet_control(struct hpet_task *, unsigned int, unsigned long);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1756: FILE: include/linux/hpet.h:139:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282023.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 103 warnings, 64 checks, 1687 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282023.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
