WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#38: FILE: drivers/char/Kconfig:932:
+config GPIO_VR41XX
+	tristate "NEC VR4100 series General-purpose I/O Unit support"
+	depends CPU_VR41XX
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: drivers/char/vr41xx_giu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: drivers/char/vr41xx_giu.c:19:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#79: FILE: drivers/char/vr41xx_giu.c:20:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#93: FILE: drivers/char/vr41xx_giu.c:34:
+#include <asm/io.h>

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#164: FILE: drivers/char/vr41xx_giu.c:105:
+static inline uint16_t giu_set(uint16_t offset, uint16_t set)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#166: FILE: drivers/char/vr41xx_giu.c:107:
+	uint16_t data;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#175: FILE: drivers/char/vr41xx_giu.c:116:
+static inline uint16_t giu_clear(uint16_t offset, uint16_t clear)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#177: FILE: drivers/char/vr41xx_giu.c:118:
+	uint16_t data;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#284: FILE: drivers/char/vr41xx_giu.c:225:
+	uint16_t pendl, pendh, maskl, maskh;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#307: FILE: drivers/char/vr41xx_giu.c:248:
+	printk(KERN_ERR "spurious GIU interrupt: %04x(%04x),%04x(%04x)\n",

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#317: FILE: drivers/char/vr41xx_giu.c:258:
+	uint16_t mask;

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: drivers/char/vr41xx_giu.c:263:
+        ^I^Igiu_set(GIUINTTYPL, mask);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#322: FILE: drivers/char/vr41xx_giu.c:263:
+        ^I^Igiu_set(GIUINTTYPL, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/char/vr41xx_giu.c:263:
+        ^I^Igiu_set(GIUINTTYPL, mask);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#380: FILE: drivers/char/vr41xx_giu.c:321:
+EXPORT_SYMBOL_GPL(vr41xx_set_irq_trigger);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#384: FILE: drivers/char/vr41xx_giu.c:325:
+	uint16_t mask;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#403: FILE: drivers/char/vr41xx_giu.c:344:
+EXPORT_SYMBOL_GPL(vr41xx_set_irq_level);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#407: FILE: drivers/char/vr41xx_giu.c:348:
+	uint16_t reg, mask;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#432: FILE: drivers/char/vr41xx_giu.c:373:
+EXPORT_SYMBOL_GPL(vr41xx_gpio_get_pin);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#436: FILE: drivers/char/vr41xx_giu.c:377:
+	uint16_t offset, mask, reg;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#470: FILE: drivers/char/vr41xx_giu.c:411:
+EXPORT_SYMBOL_GPL(vr41xx_gpio_set_pin);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#474: FILE: drivers/char/vr41xx_giu.c:415:
+	uint16_t offset, mask, reg;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#520: FILE: drivers/char/vr41xx_giu.c:461:
+EXPORT_SYMBOL_GPL(vr41xx_gpio_set_direction);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#524: FILE: drivers/char/vr41xx_giu.c:465:
+	uint16_t reg, mask;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#559: FILE: drivers/char/vr41xx_giu.c:500:
+EXPORT_SYMBOL_GPL(vr41xx_gpio_pullupdown);

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: drivers/char/vr41xx_giu.c:503:
+                         loff_t *ppos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/char/vr41xx_giu.c:503:
+                         loff_t *ppos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: drivers/char/vr41xx_giu.c:525:
+                          size_t len, loff_t *ppos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/char/vr41xx_giu.c:525:
+                          size_t len, loff_t *ppos)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#607: FILE: drivers/char/vr41xx_giu.c:548:
+			printk(KERN_INFO "GPIO%d: pull down\n", pin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#611: FILE: drivers/char/vr41xx_giu.c:552:
+			printk(KERN_INFO "GPIO%d: pull up/down disable\n", pin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#615: FILE: drivers/char/vr41xx_giu.c:556:
+			printk(KERN_INFO "GPIO%d: input\n", pin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#619: FILE: drivers/char/vr41xx_giu.c:560:
+			printk(KERN_INFO "GPIO%d: output\n", pin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#623: FILE: drivers/char/vr41xx_giu.c:564:
+			printk(KERN_INFO "GPIO%d: output disable\n", pin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#627: FILE: drivers/char/vr41xx_giu.c:568:
+			printk(KERN_INFO "GPIO%d: pull up\n", pin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#631: FILE: drivers/char/vr41xx_giu.c:572:
+			printk(KERN_INFO "GPIO%d: pull up/down disable\n", pin);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#667: FILE: drivers/char/vr41xx_giu.c:608:
+static struct file_operations gpio_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res1"
#708: FILE: drivers/char/vr41xx_giu.c:649:
+	if (res1 == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#712: FILE: drivers/char/vr41xx_giu.c:653:
+	if (base == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res2"
#719: FILE: drivers/char/vr41xx_giu.c:660:
+		if (res2 == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#736: FILE: drivers/char/vr41xx_giu.c:677:
+		printk(KERN_INFO "GIU: major number %d\n", major);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#779: FILE: drivers/char/vr41xx_giu.c:720:
+static int __devinit vr41xx_giu_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#794: FILE: drivers/char/vr41xx_giu.c:735:
+static void __devexit vr41xx_giu_exit(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#807: FILE: include/asm-mips/vr41xx/giu.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#823: FILE: include/asm-mips/vr41xx/giu.h:17:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#824: FILE: include/asm-mips/vr41xx/giu.h:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#829: FILE: include/asm-mips/vr41xx/giu.h:23:
+typedef enum {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#836: FILE: include/asm-mips/vr41xx/giu.h:30:
+typedef enum {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#841: FILE: include/asm-mips/vr41xx/giu.h:35:
+extern void vr41xx_set_irq_trigger(unsigned int pin, irq_trigger_t trigger, irq_signal_t signal);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#843: FILE: include/asm-mips/vr41xx/giu.h:37:
+typedef enum {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#848: FILE: include/asm-mips/vr41xx/giu.h:42:
+extern void vr41xx_set_irq_level(unsigned int pin, irq_level_t level);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#850: FILE: include/asm-mips/vr41xx/giu.h:44:
+typedef enum {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#856: FILE: include/asm-mips/vr41xx/giu.h:50:
+extern gpio_data_t vr41xx_gpio_get_pin(unsigned int pin);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#857: FILE: include/asm-mips/vr41xx/giu.h:51:
+extern int vr41xx_gpio_set_pin(unsigned int pin, gpio_data_t data);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#859: FILE: include/asm-mips/vr41xx/giu.h:53:
+typedef enum {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#865: FILE: include/asm-mips/vr41xx/giu.h:59:
+extern int vr41xx_gpio_set_direction(unsigned int pin, gpio_direction_t dir);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#867: FILE: include/asm-mips/vr41xx/giu.h:61:
+typedef enum {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#873: FILE: include/asm-mips/vr41xx/giu.h:67:
+extern int vr41xx_gpio_pullupdown(unsigned int pin, gpio_pull_t pull);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176911.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 32 warnings, 20 checks, 875 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176911.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
