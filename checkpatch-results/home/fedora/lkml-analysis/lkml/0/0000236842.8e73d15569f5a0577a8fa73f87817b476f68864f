ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: arch/parisc/kernel/binfmt_elf32.c:96:
+#define cputime_to_timeval cputime_to_compat_timeval $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#235: FILE: fs/proc/proc_misc.c:370:
+	user = nice = system = idle = iowait =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#236: FILE: fs/proc/proc_misc.c:371:
+		irq = softirq = steal = cputime64_zero;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: fs/proc/proc_misc.c:392:
+	seq_printf(p, "cpu  %llu %llu %llu %llu %llu %llu %llu %llu\n",
+		(unsigned long long)cputime64_to_clock_t(user),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: fs/proc/proc_misc.c:412:
+		seq_printf(p, "cpu%d %llu %llu %llu %llu %llu %llu %llu %llu\n",
 			i,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#313: FILE: include/asm-alpha/cputime.h:1:
+#ifndef __ALPHA_CPUTIME_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#323: FILE: include/asm-arm/cputime.h:1:
+#ifndef __ARM_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#333: FILE: include/asm-arm26/cputime.h:1:
+#ifndef __ARM26_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#343: FILE: include/asm-cris/cputime.h:1:
+#ifndef __CRIS_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#353: FILE: include/asm-generic/cputime.h:1:
+#ifndef _ASM_GENERIC_CPUTIME_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#359: FILE: include/asm-generic/cputime.h:7:
+typedef unsigned long cputime_t;

CHECK:SPACING: No space is necessary after a cast
#378: FILE: include/asm-generic/cputime.h:26:
+#define cputime_to_cputime64(__ct)	((u64) __ct)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: include/asm-generic/cputime.h:28:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__secs' may be better as '(__secs)' to avoid precedence issues
#391: FILE: include/asm-generic/cputime.h:39:
+#define secs_to_cputime(__secs)		(msecs_to_jiffies(__secs * HZ))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: include/asm-generic/cputime.h:45:
+#define cputime_to_timespec(__ct,__val)	jiffies_to_timespec(__ct,__val)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: include/asm-generic/cputime.h:45:
+#define cputime_to_timespec(__ct,__val)	jiffies_to_timespec(__ct,__val)
                                        	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: include/asm-generic/cputime.h:51:
+#define cputime_to_timeval(__ct,__val)	jiffies_to_timeval(__ct,__val)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: include/asm-generic/cputime.h:51:
+#define cputime_to_timeval(__ct,__val)	jiffies_to_timeval(__ct,__val)
                                       	                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#421: FILE: include/asm-h8300/cputime.h:1:
+#ifndef __H8300_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#431: FILE: include/asm-i386/cputime.h:1:
+#ifndef __I386_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#441: FILE: include/asm-ia64/cputime.h:1:
+#ifndef __IA64_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#451: FILE: include/asm-m32r/cputime.h:1:
+#ifndef __M32R_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#461: FILE: include/asm-m68k/cputime.h:1:
+#ifndef __M68K_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#471: FILE: include/asm-m68knommu/cputime.h:1:
+#ifndef __M68KNOMMU_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#481: FILE: include/asm-mips/cputime.h:1:
+#ifndef __MIPS_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#491: FILE: include/asm-parisc/cputime.h:1:
+#ifndef __PARISC_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#501: FILE: include/asm-ppc/cputime.h:1:
+#ifndef __PPC_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#511: FILE: include/asm-ppc64/cputime.h:1:
+#ifndef __PPC_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#521: FILE: include/asm-s390/cputime.h:1:
+#ifndef __S390_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#531: FILE: include/asm-sh/cputime.h:1:
+#ifndef __SH_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#541: FILE: include/asm-sh64/cputime.h:1:
+#ifndef __SH64_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#551: FILE: include/asm-sparc/cputime.h:1:
+#ifndef __SPARC_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#561: FILE: include/asm-sparc64/cputime.h:1:
+#ifndef __SPARC64_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#571: FILE: include/asm-um/cputime.h:1:
+#ifndef __UM_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#581: FILE: include/asm-v850/cputime.h:1:
+#ifndef __V850_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#591: FILE: include/asm-x86_64/cputime.h:1:
+#ifndef __X86_64_CPUTIME_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#634: FILE: include/linux/kernel_stat.h:55:
+extern void account_user_time(struct task_struct *, cputime_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#635: FILE: include/linux/kernel_stat.h:56:
+extern void account_system_time(struct task_struct *, int, cputime_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#635: FILE: include/linux/kernel_stat.h:56:
+extern void account_system_time(struct task_struct *, int, cputime_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#635: FILE: include/linux/kernel_stat.h:56:
+extern void account_system_time(struct task_struct *, int, cputime_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cputime_t' should also have an identifier name
#635: FILE: include/linux/kernel_stat.h:56:
+extern void account_system_time(struct task_struct *, int, cputime_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#636: FILE: include/linux/kernel_stat.h:57:
+extern void account_steal_time(struct task_struct *, cputime_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#636: FILE: include/linux/kernel_stat.h:57:
+extern void account_steal_time(struct task_struct *, cputime_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cputime_t' should also have an identifier name
#636: FILE: include/linux/kernel_stat.h:57:
+extern void account_steal_time(struct task_struct *, cputime_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#655: FILE: include/linux/sched.h:174:
+extern void scheduler_tick(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#758: FILE: kernel/exit.c:1057:
+			cputime_add(p->parent->signal->cutime,
+			cputime_add(p->utime,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#759: FILE: kernel/exit.c:1058:
+			cputime_add(p->utime,
+			cputime_add(p->signal->utime,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: kernel/exit.c:1062:
+			cputime_add(p->parent->signal->cstime,
+			cputime_add(p->stime,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: kernel/exit.c:1063:
+			cputime_add(p->stime,
+			cputime_add(p->signal->stime,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#777: FILE: kernel/fork.c:751:
+	sig->utime = sig->stime = sig->cutime = sig->cstime = cputime_zero;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#787: FILE: kernel/fork.c:872:
+	p->it_real_value = p->it_real_incr = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#788: FILE: kernel/fork.c:873:
+	p->it_virt_value = p->it_virt_incr = cputime_zero;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#789: FILE: kernel/fork.c:874:
+	p->it_prof_value = p->it_prof_incr = cputime_zero;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#794: FILE: kernel/fork.c:878:
+	p->utime = p->stime = cputime_zero;

CHECK:SPACING: No space is necessary after a cast
#870: FILE: kernel/itimer.c:98:
+			if (expire > (unsigned long) LONG_MAX)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#921: FILE: kernel/sched.c:2254:
+static inline void account_it_virt(struct task_struct * p, cputime_t cputime)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: kernel/sched.c:2298:
+^I^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1199: FILE: kernel/sys.c:1658:
+			utime = stime = cputime_zero;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 29 warnings, 22 checks, 1037 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
