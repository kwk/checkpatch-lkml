WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
NOTE: This is only temporarily since this exhibits some performance problems.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'task' may be better as '(task)' to avoid precedence issues
#50: FILE: fs/proc/inode.c:197:
+#define procpid_check_marker(task, data) (task->container == data)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'data' may be better as '(data)' to avoid precedence issues
#50: FILE: fs/proc/inode.c:197:
+#define procpid_check_marker(task, data) (task->container == data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#52: FILE: fs/proc/inode.c:199:
+static int proc_root_compare(struct dentry *dentry, struct qstr *a,
+			      struct qstr *b)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#57: FILE: fs/proc/inode.c:204:
+	struct dentry* d = (struct dentry *)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#58: FILE: fs/proc/inode.c:205:
+		((unsigned long) a -

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#59: FILE: fs/proc/inode.c:206:
+		((unsigned long) &dentry->d_name - (unsigned long) dentry));

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#68: FILE: fs/proc/inode.c:215:
+static struct dentry_operations root_dentry_operations =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#69: FILE: fs/proc/inode.c:216:
+static struct dentry_operations root_dentry_operations =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INDENTED_LABEL: labels should not be indented
#70: FILE: fs/proc/inode.c:217:
+	d_compare:      proc_root_compare,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114643.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 5 checks, 54 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114643.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
