WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#29: 
will work ok (testing showed it to be fine, though mozilla did wierd
                                                               ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: drivers/char/ipmi/ipmi_msghandler.c:222:
+    void (*null_user_handler)(ipmi_smi_t intf, struct ipmi_recv_msg *msg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: drivers/char/ipmi/ipmi_msghandler.c:462:
+    if (! msg->user) {$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#68: FILE: drivers/char/ipmi/ipmi_msghandler.c:462:
+    if (! msg->user) {
         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: drivers/char/ipmi/ipmi_msghandler.c:463:
+        ipmi_smi_t    intf = msg->user_msg_data;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: drivers/char/ipmi/ipmi_msghandler.c:463:
+        ipmi_smi_t    intf = msg->user_msg_data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: drivers/char/ipmi/ipmi_msghandler.c:464:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/char/ipmi/ipmi_msghandler.c:464:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: drivers/char/ipmi/ipmi_msghandler.c:466:
+        /* Special handling for NULL users. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: drivers/char/ipmi/ipmi_msghandler.c:467:
+        if (intf->null_user_handler) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: drivers/char/ipmi/ipmi_msghandler.c:467:
+        if (intf->null_user_handler) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#73: FILE: drivers/char/ipmi/ipmi_msghandler.c:467:
+        if (intf->null_user_handler) {
+            intf->null_user_handler(intf, msg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/char/ipmi/ipmi_msghandler.c:468:
+            intf->null_user_handler(intf, msg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/char/ipmi/ipmi_msghandler.c:468:
+            intf->null_user_handler(intf, msg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: drivers/char/ipmi/ipmi_msghandler.c:469:
+            spin_lock_irqsave(&intf->counter_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/char/ipmi/ipmi_msghandler.c:469:
+            spin_lock_irqsave(&intf->counter_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: drivers/char/ipmi/ipmi_msghandler.c:470:
+            intf->handled_local_responses++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/char/ipmi/ipmi_msghandler.c:470:
+            intf->handled_local_responses++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/char/ipmi/ipmi_msghandler.c:471:
+            spin_unlock_irqrestore(&intf->counter_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/char/ipmi/ipmi_msghandler.c:471:
+            spin_unlock_irqrestore(&intf->counter_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: drivers/char/ipmi/ipmi_msghandler.c:472:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/char/ipmi/ipmi_msghandler.c:472:
+        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#78: FILE: drivers/char/ipmi/ipmi_msghandler.c:472:
+        } else {
[...]
+            spin_lock_irqsave(&intf->counter_lock, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: drivers/char/ipmi/ipmi_msghandler.c:473:
+            /* No handler, so give up. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: drivers/char/ipmi/ipmi_msghandler.c:474:
+            spin_lock_irqsave(&intf->counter_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: drivers/char/ipmi/ipmi_msghandler.c:474:
+            spin_lock_irqsave(&intf->counter_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/char/ipmi/ipmi_msghandler.c:475:
+            intf->unhandled_local_responses++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/char/ipmi/ipmi_msghandler.c:475:
+            intf->unhandled_local_responses++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/char/ipmi/ipmi_msghandler.c:476:
+            spin_unlock_irqrestore(&intf->counter_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/char/ipmi/ipmi_msghandler.c:476:
+            spin_unlock_irqrestore(&intf->counter_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: drivers/char/ipmi/ipmi_msghandler.c:477:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/char/ipmi/ipmi_msghandler.c:477:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: drivers/char/ipmi/ipmi_msghandler.c:478:
+        ipmi_free_recv_msg(msg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/char/ipmi/ipmi_msghandler.c:478:
+        ipmi_free_recv_msg(msg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: drivers/char/ipmi/ipmi_msghandler.c:479:
+    } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: drivers/char/ipmi/ipmi_msghandler.c:480:
+        msg->user->handler->ipmi_recv_hndl(msg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/char/ipmi/ipmi_msghandler.c:480:
+        msg->user->handler->ipmi_recv_hndl(msg,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/char/ipmi/ipmi_msghandler.c:481:
+                           msg->user->handler_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/char/ipmi/ipmi_msghandler.c:481:
+                           msg->user->handler_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: drivers/char/ipmi/ipmi_msghandler.c:482:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/char/ipmi/ipmi_msghandler.c:1412:
+    if (! user)$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#96: FILE: drivers/char/ipmi/ipmi_msghandler.c:1412:
+    if (! user)
         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/char/ipmi/ipmi_msghandler.c:1413:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/char/ipmi/ipmi_msghandler.c:1413:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/char/ipmi/ipmi_msghandler.c:1443:
+    if (! user)$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#105: FILE: drivers/char/ipmi/ipmi_msghandler.c:1443:
+    if (! user)
         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: drivers/char/ipmi/ipmi_msghandler.c:1444:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/char/ipmi/ipmi_msghandler.c:1444:
+        return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/char/ipmi/ipmi_msghandler.c:1665:
+                  intf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/char/ipmi/ipmi_msghandler.c:1665:
+                  intf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/char/ipmi/ipmi_msghandler.c:1680:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE'
#131: FILE: drivers/char/ipmi/ipmi_msghandler.c:1680:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_CHANNEL_INFO_CMD))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->msg.netfn == IPMI_NETFN_APP_RESPONSE'
#131: FILE: drivers/char/ipmi/ipmi_msghandler.c:1680:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_CHANNEL_INFO_CMD))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->msg.cmd == IPMI_GET_CHANNEL_INFO_CMD'
#131: FILE: drivers/char/ipmi/ipmi_msghandler.c:1680:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_CHANNEL_INFO_CMD))

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: drivers/char/ipmi/ipmi_msghandler.c:1681:
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#132: FILE: drivers/char/ipmi/ipmi_msghandler.c:1681:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/char/ipmi/ipmi_msghandler.c:1681:
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: drivers/char/ipmi/ipmi_msghandler.c:1682:
+        && (msg->msg.cmd == IPMI_GET_CHANNEL_INFO_CMD))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#133: FILE: drivers/char/ipmi/ipmi_msghandler.c:1682:
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_CHANNEL_INFO_CMD))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/char/ipmi/ipmi_msghandler.c:1682:
+        && (msg->msg.cmd == IPMI_GET_CHANNEL_INFO_CMD))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: drivers/char/ipmi/ipmi_msghandler.c:1685:
+        if (msg->msg.data[0] != 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/char/ipmi/ipmi_msghandler.c:1685:
+        if (msg->msg.data[0] != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#137: FILE: drivers/char/ipmi/ipmi_msghandler.c:1685:
+        if (msg->msg.data[0] != 0) {
[...]
+            if (msg->msg.data[0] == IPMI_INVALID_COMMAND_ERR) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: drivers/char/ipmi/ipmi_msghandler.c:1688:
+            if (msg->msg.data[0] == IPMI_INVALID_COMMAND_ERR) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/char/ipmi/ipmi_msghandler.c:1688:
+            if (msg->msg.data[0] == IPMI_INVALID_COMMAND_ERR) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: drivers/char/ipmi/ipmi_msghandler.c:1705:
+        if (msg->msg.data_len < 4) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/char/ipmi/ipmi_msghandler.c:1705:
+        if (msg->msg.data_len < 4) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#150: FILE: drivers/char/ipmi/ipmi_msghandler.c:1705:
+        if (msg->msg.data_len < 4) {
[...]
             goto next_channel;

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: drivers/char/ipmi/ipmi_msghandler.c:1710:
+        intf->channels[chan].medium = msg->msg.data[2] & 0x7f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/char/ipmi/ipmi_msghandler.c:1710:
+        intf->channels[chan].medium = msg->msg.data[2] & 0x7f;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: drivers/char/ipmi/ipmi_msghandler.c:1711:
+        intf->channels[chan].protocol = msg->msg.data[3] & 0x1f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/char/ipmi/ipmi_msghandler.c:1711:
+        intf->channels[chan].protocol = msg->msg.data[3] & 0x1f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/char/ipmi/ipmi_msghandler.c:2410:
+    if (recv_msg == NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#166: FILE: drivers/char/ipmi/ipmi_msghandler.c:2410:
+    if (recv_msg == NULL)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!recv_msg"
#166: FILE: drivers/char/ipmi/ipmi_msghandler.c:2410:
+    if (recv_msg == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/char/ipmi/ipmi_msghandler.c:2411:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: drivers/char/ipmi/ipmi_msghandler.c:2412:
+        printk(KERN_WARNING"IPMI message received with no owner. This\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/char/ipmi/ipmi_msghandler.c:2412:
+        printk(KERN_WARNING"IPMI message received with no owner. This\n"$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#168: FILE: drivers/char/ipmi/ipmi_msghandler.c:2412:
+        printk(KERN_WARNING"IPMI message received with no owner. This\n"

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#168: FILE: drivers/char/ipmi/ipmi_msghandler.c:2412:
+        printk(KERN_WARNING"IPMI message received with no owner. This\n"

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: drivers/char/ipmi/ipmi_msghandler.c:2413:
+            "could be because of a malformed message, or\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/char/ipmi/ipmi_msghandler.c:2413:
+            "could be because of a malformed message, or\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: drivers/char/ipmi/ipmi_msghandler.c:2414:
+            "because of a hardware error.  Contact your\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/char/ipmi/ipmi_msghandler.c:2414:
+            "because of a hardware error.  Contact your\n"$

WARNING:TYPO_SPELLING: 'vender' may be misspelled - perhaps 'vendor'?
#171: FILE: drivers/char/ipmi/ipmi_msghandler.c:2415:
+            "hardware vender for assistance\n");
                       ^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: drivers/char/ipmi/ipmi_msghandler.c:2415:
+            "hardware vender for assistance\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/char/ipmi/ipmi_msghandler.c:2415:
+            "hardware vender for assistance\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: drivers/char/ipmi/ipmi_msghandler.c:2416:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/char/ipmi/ipmi_msghandler.c:2416:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/char/ipmi/ipmi_msghandler.c:2417:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/char/ipmi/ipmi_msghandler.c:2428:
+    if ((! found) && recv_msg->user) {$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#194: FILE: drivers/char/ipmi/ipmi_msghandler.c:2428:
+    if ((! found) && recv_msg->user) {
          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '! found'
#194: FILE: drivers/char/ipmi/ipmi_msghandler.c:2428:
+    if ((! found) && recv_msg->user) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/char/ipmi/ipmi_msghandler.c:2429:
+        /* The user for the message went away, so give up. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: drivers/char/ipmi/ipmi_msghandler.c:2430:
+        spin_lock_irqsave(&intf->counter_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/char/ipmi/ipmi_msghandler.c:2430:
+        spin_lock_irqsave(&intf->counter_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/char/ipmi/ipmi_msghandler.c:2431:
+        intf->unhandled_local_responses++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/char/ipmi/ipmi_msghandler.c:2431:
+        intf->unhandled_local_responses++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: drivers/char/ipmi/ipmi_msghandler.c:2432:
+        spin_unlock_irqrestore(&intf->counter_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/char/ipmi/ipmi_msghandler.c:2432:
+        spin_unlock_irqrestore(&intf->counter_lock, flags);$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#207: FILE: drivers/char/ipmi/ipmi_msghandler.c:2917:
*msg)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: drivers/char/ipmi/ipmi_msghandler.c:2918:
+static void event_receiver_fetcher(ipmi_smi_t intf, struct $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/char/ipmi/ipmi_msghandler.c:2920:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE'
#214: FILE: drivers/char/ipmi/ipmi_msghandler.c:2920:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_SENSOR_EVENT_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_EVENT_RECEIVER_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->msg.netfn == IPMI_NETFN_SENSOR_EVENT_RESPONSE'
#214: FILE: drivers/char/ipmi/ipmi_msghandler.c:2920:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_SENSOR_EVENT_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_EVENT_RECEIVER_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->msg.cmd == IPMI_GET_EVENT_RECEIVER_CMD'
#214: FILE: drivers/char/ipmi/ipmi_msghandler.c:2920:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_SENSOR_EVENT_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_EVENT_RECEIVER_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->msg.data[0] == IPMI_CC_NO_ERROR'
#214: FILE: drivers/char/ipmi/ipmi_msghandler.c:2920:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_SENSOR_EVENT_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_EVENT_RECEIVER_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: drivers/char/ipmi/ipmi_msghandler.c:2921:
+        && (msg->msg.netfn == IPMI_NETFN_SENSOR_EVENT_RESPONSE)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#215: FILE: drivers/char/ipmi/ipmi_msghandler.c:2921:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_SENSOR_EVENT_RESPONSE)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/char/ipmi/ipmi_msghandler.c:2921:
+        && (msg->msg.netfn == IPMI_NETFN_SENSOR_EVENT_RESPONSE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/char/ipmi/ipmi_msghandler.c:2922:
+        && (msg->msg.cmd == IPMI_GET_EVENT_RECEIVER_CMD)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#216: FILE: drivers/char/ipmi/ipmi_msghandler.c:2922:
+        && (msg->msg.netfn == IPMI_NETFN_SENSOR_EVENT_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_EVENT_RECEIVER_CMD)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/char/ipmi/ipmi_msghandler.c:2922:
+        && (msg->msg.cmd == IPMI_GET_EVENT_RECEIVER_CMD)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/char/ipmi/ipmi_msghandler.c:2923:
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#217: FILE: drivers/char/ipmi/ipmi_msghandler.c:2923:
+        && (msg->msg.cmd == IPMI_GET_EVENT_RECEIVER_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/char/ipmi/ipmi_msghandler.c:2923:
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: drivers/char/ipmi/ipmi_msghandler.c:2926:
+        intf->event_receiver = msg->msg.data[1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/char/ipmi/ipmi_msghandler.c:2926:
+        intf->event_receiver = msg->msg.data[1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: drivers/char/ipmi/ipmi_msghandler.c:2927:
+        intf->event_receiver_lun = msg->msg.data[2] & 0x3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/char/ipmi/ipmi_msghandler.c:2927:
+        intf->event_receiver_lun = msg->msg.data[2] & 0x3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/char/ipmi/ipmi_msghandler.c:2933:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE'
#233: FILE: drivers/char/ipmi/ipmi_msghandler.c:2933:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_DEVICE_ID_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->msg.netfn == IPMI_NETFN_APP_RESPONSE'
#233: FILE: drivers/char/ipmi/ipmi_msghandler.c:2933:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_DEVICE_ID_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->msg.cmd == IPMI_GET_DEVICE_ID_CMD'
#233: FILE: drivers/char/ipmi/ipmi_msghandler.c:2933:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_DEVICE_ID_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->msg.data[0] == IPMI_CC_NO_ERROR'
#233: FILE: drivers/char/ipmi/ipmi_msghandler.c:2933:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_DEVICE_ID_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/char/ipmi/ipmi_msghandler.c:2934:
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#234: FILE: drivers/char/ipmi/ipmi_msghandler.c:2934:
+    if ((msg->addr.addr_type == IPMI_SYSTEM_INTERFACE_ADDR_TYPE)
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/char/ipmi/ipmi_msghandler.c:2934:
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/char/ipmi/ipmi_msghandler.c:2935:
+        && (msg->msg.cmd == IPMI_GET_DEVICE_ID_CMD)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#235: FILE: drivers/char/ipmi/ipmi_msghandler.c:2935:
+        && (msg->msg.netfn == IPMI_NETFN_APP_RESPONSE)
+        && (msg->msg.cmd == IPMI_GET_DEVICE_ID_CMD)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/char/ipmi/ipmi_msghandler.c:2935:
+        && (msg->msg.cmd == IPMI_GET_DEVICE_ID_CMD)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/char/ipmi/ipmi_msghandler.c:2936:
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#236: FILE: drivers/char/ipmi/ipmi_msghandler.c:2936:
+        && (msg->msg.cmd == IPMI_GET_DEVICE_ID_CMD)
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/char/ipmi/ipmi_msghandler.c:2936:
+        && (msg->msg.data[0] == IPMI_CC_NO_ERROR))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: drivers/char/ipmi/ipmi_msghandler.c:2940:
+        intf->local_sel_device = (msg->msg.data[6] >> 2) & 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/char/ipmi/ipmi_msghandler.c:2940:
+        intf->local_sel_device = (msg->msg.data[6] >> 2) & 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/char/ipmi/ipmi_msghandler.c:2941:
+        intf->local_event_generator = (msg->msg.data[6] >> 5) & 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/char/ipmi/ipmi_msghandler.c:2941:
+        intf->local_event_generator = (msg->msg.data[6] >> 5) & 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/char/ipmi/ipmi_msghandler.c:2997:
+                   intf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/char/ipmi/ipmi_msghandler.c:2997:
+                   intf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: drivers/char/ipmi/ipmi_msghandler.c:3043:
+                   intf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/char/ipmi/ipmi_msghandler.c:3043:
+                   intf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: drivers/char/ipmi/ipmi_msghandler.c:3063:
+                       intf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/char/ipmi/ipmi_msghandler.c:3063:
+                       intf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: drivers/char/ipmi/ipmi_msghandler.c:3125:
+                       intf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: drivers/char/ipmi/ipmi_msghandler.c:3125:
+                       intf,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#293: FILE: include/linux/ipmi.h:246:
+       intf. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160563.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 57 errors, 68 warnings, 22 checks, 224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160563.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
