WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# This is a BitKeeper generated diff -Nru style patch.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# ChangeSet

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#   2005/01/12 14:06:25-06:00 jejb@titanic.il.steeleye.com 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#   update

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# include/linux/attribute_container.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#   2005/01/12 13:55:02-06:00 jejb@titanic.il.steeleye.com +61 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# include/linux/attribute_container.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#   2005/01/12 13:55:02-06:00 jejb@titanic.il.steeleye.com +0 -0

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
#   BitKeeper file /home/jejb/BK/BUILD-2.6/include/linux/attribute_container.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#   BitKeeper file /home/jejb/BK/BUILD-2.6/include/linux/attribute_container.h

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#46: 
#   BitKeeper file /home/jejb/BK/BUILD-2.6/include/linux/attribute_container.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# drivers/base/attribute_container.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#   2005/01/12 13:55:00-06:00 jejb@titanic.il.steeleye.com +274 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# drivers/base/init.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#   2005/01/12 13:55:00-06:00 jejb@titanic.il.steeleye.com +2 -1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#   update

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# drivers/base/attribute_container.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#   2005/01/12 13:55:00-06:00 jejb@titanic.il.steeleye.com +0 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#   BitKeeper file /home/jejb/BK/BUILD-2.6/drivers/base/attribute_container.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#57: 
#   BitKeeper file /home/jejb/BK/BUILD-2.6/drivers/base/attribute_container.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# drivers/base/Makefile

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#   2005/01/12 13:55:00-06:00 jejb@titanic.il.steeleye.com +2 -1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#   update

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#64: 
--- a/drivers/base/Makefile	2005-01-12 14:06:54 -06:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/base/attribute_container.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'aritrary' may be misspelled - perhaps 'arbitrary'?
#88: FILE: drivers/base/attribute_container.c:9:
+ * aritrary numer of classes without having to allocate storage for them.
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#102: FILE: drivers/base/attribute_container.c:23:
+ * container .. it should never be visible outside this file */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: drivers/base/attribute_container.c:61:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#158: FILE: drivers/base/attribute_container.c:79:
+	int retval = -EBUSY;
+	down(&attribute_container_mutex);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: drivers/base/attribute_container.c:87:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#167: FILE: drivers/base/attribute_container.c:88:
+		
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: drivers/base/attribute_container.c:94:
+^Istruct internal_container *ic $

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#174: FILE: drivers/base/attribute_container.c:95:
+	struct internal_container *ic 
+		= container_of(classdev, struct internal_container, classdev);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ic)...) over kmalloc(sizeof(struct internal_container)...)
#216: FILE: drivers/base/attribute_container.c:137:
+		ic = kmalloc(sizeof(struct internal_container), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#218: FILE: drivers/base/attribute_container.c:139:
+			dev_printk(KERN_ERR, dev, "failed to allocate class container\n");

WARNING:TYPO_SPELLING: 'funcion' may be misspelled - perhaps 'function'?
#291: FILE: drivers/base/attribute_container.c:212:
+ * This funcion is for executing a trigger when you need to know both
         ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: drivers/base/attribute_container.c:217:
+attribute_container_device_trigger(struct device *dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/base/attribute_container.c:267:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/base/attribute_container.c:267:
+     $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: drivers/base/attribute_container.c:268:
+     
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#362: FILE: drivers/base/init.c:20:
+extern int attribute_container_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#376: FILE: include/linux/attribute_container.h:1:
+/*

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct attribute_container *' should also have an identifier name
#395: FILE: include/linux/attribute_container.h:20:
+	int (*match)(struct attribute_container *, struct device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#395: FILE: include/linux/attribute_container.h:20:
+	int (*match)(struct attribute_container *, struct device *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: include/linux/attribute_container.h:51:
+void attribute_container_device_trigger(struct device *dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: include/linux/attribute_container.h:55:
+void attribute_container_trigger(struct device *dev, $

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#434: FILE: include/linux/attribute_container.h:59:
+struct class_device_attribute **attribute_container_classdev_to_attrs(const struct class_device *classdev);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216255.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 43 warnings, 4 checks, 357 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216255.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
