WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
120801    7.4379  37017    63.4603  vmlinux                  __copy_from_user_ll

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/i386/lib/usercopy.c:520:
+        /* Note! gcc doesn't seem to align stack variables properly, so we$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: arch/i386/lib/usercopy.c:521:
+         * need to make use of unaligned loads and stores.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: arch/i386/lib/usercopy.c:522:
+         */$

ERROR:SPACING: space required before the open brace '{'
#141: FILE: arch/i386/lib/usercopy.c:526:
+	if (unlikely(in_interrupt())){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/i386/lib/usercopy.c:527:
+^I        __copy_user_zeroing(to, from, len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/i386/lib/usercopy.c:534:
+        kernel_fpu_begin();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/i386/lib/usercopy.c:534:
+        kernel_fpu_begin();$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#151: FILE: arch/i386/lib/usercopy.c:536:
+	__asm__ __volatile__ (

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#157: FILE: arch/i386/lib/usercopy.c:542:
+		"2:  \n"

ERROR:SPACING: space prohibited before that close parenthesis ')'
#166: FILE: arch/i386/lib/usercopy.c:551:
+		: : "r" (from) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: arch/i386/lib/usercopy.c:552:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#168: FILE: arch/i386/lib/usercopy.c:553:
+	for(; i>5; i--)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#168: FILE: arch/i386/lib/usercopy.c:553:
+	for(; i>5; i--)
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#168: FILE: arch/i386/lib/usercopy.c:553:
+	for(; i>5; i--)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#170: FILE: arch/i386/lib/usercopy.c:555:
+		__asm__ __volatile__ (

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#197: FILE: arch/i386/lib/usercopy.c:582:
+		from+=64;
 		    ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#198: FILE: arch/i386/lib/usercopy.c:583:
+		to+=64;
 		  ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: arch/i386/lib/usercopy.c:586:
+	for(; i>0; i--)
+	{

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#201: FILE: arch/i386/lib/usercopy.c:586:
+	for(; i>0; i--)
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: arch/i386/lib/usercopy.c:586:
+	for(; i>0; i--)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#203: FILE: arch/i386/lib/usercopy.c:588:
+		__asm__ __volatile__ (

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#221: FILE: arch/i386/lib/usercopy.c:606:
+		from+=64;
 		    ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#222: FILE: arch/i386/lib/usercopy.c:607:
+		to+=64;
 		  ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#228: FILE: arch/i386/lib/usercopy.c:613:
+	if(i=(len&63))
+	  __copy_user_zeroing(to, from, i);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#228: FILE: arch/i386/lib/usercopy.c:613:
+	if(i=(len&63))
 	    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#228: FILE: arch/i386/lib/usercopy.c:613:
+	if(i=(len&63))
 	         ^

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: arch/i386/lib/usercopy.c:613:
+	if(i=(len&63))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#228: FILE: arch/i386/lib/usercopy.c:613:
+	if(i=(len&63))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#234: FILE: arch/i386/lib/usercopy.c:618:
unsigned long n)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#241: FILE: arch/i386/lib/usercopy.c:681:
+	if (n < 512) {
+	  if (movsl_is_ok(to, from, n))

CHECK:BRACES: braces {} should be used on all arms of this statement
#241: FILE: arch/i386/lib/usercopy.c:681:
+	if (n < 512) {
[...]
+	}
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#242: FILE: arch/i386/lib/usercopy.c:682:
+	  if (movsl_is_ok(to, from, n))

WARNING:TABSTOP: Statements should start on a tabstop
#245: FILE: arch/i386/lib/usercopy.c:684:
+	  else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#248: FILE: arch/i386/lib/usercopy.c:687:
+	else
+	  n = _mmx_memcpy_nt(to, from, n);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#248: FILE: arch/i386/lib/usercopy.c:687:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 8 warnings, 5 checks, 132 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
