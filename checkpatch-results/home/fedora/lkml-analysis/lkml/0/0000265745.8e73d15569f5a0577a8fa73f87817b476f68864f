WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
 - iucv: remove unnecessary -ENODEV check after call to iucv_declare_buffer.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#65: FILE: drivers/s390/net/ctcdbug.c:3:
+ * linux/drivers/s390/net/ctcdbug.c ($Revision: 1.2 $)

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#65: FILE: drivers/s390/net/ctcdbug.c:3:
+ * linux/drivers/s390/net/ctcdbug.c ($Revision: 1.2 $)

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#76: FILE: drivers/s390/net/ctcdbug.c:12:
+ *    $Revision: 1.2 $	 $Date: 2004/07/15 16:03:08 $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#87: FILE: drivers/s390/net/ctcdbug.h:3:
+ * linux/drivers/s390/net/ctcdbug.h ($Revision: 1.2 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#87: FILE: drivers/s390/net/ctcdbug.h:3:
+ * linux/drivers/s390/net/ctcdbug.h ($Revision: 1.2 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#98: FILE: drivers/s390/net/ctcdbug.h:12:
+ *    $Revision: 1.2 $	 $Date: 2004/07/15 16:03:08 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#108: FILE: drivers/s390/net/ctcmain.c:2:
+ * $Id: ctcmain.c,v 1.62 2004/07/15 16:03:08 ptiedem Exp $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#113: FILE: drivers/s390/net/ctcmain.c:36:
  * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#114: FILE: drivers/s390/net/ctcmain.c:37:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#117: FILE: drivers/s390/net/ctcmain.c:39:
+ * RELEASE-TAG: CTC/ESCON network driver $Revision: 1.62 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#126: FILE: drivers/s390/net/ctcmain.c:323:
+	char vbuf[] = "$Revision: 1.62 $";

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#135: FILE: drivers/s390/net/ctcmain.c:622:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#153: FILE: drivers/s390/net/ctcmain.c:764:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#162: FILE: drivers/s390/net/ctcmain.c:799:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#171: FILE: drivers/s390/net/ctcmain.c:845:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#180: FILE: drivers/s390/net/ctcmain.c:856:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#189: FILE: drivers/s390/net/ctcmain.c:926:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#198: FILE: drivers/s390/net/ctcmain.c:1009:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#207: FILE: drivers/s390/net/ctcmain.c:1036:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#216: FILE: drivers/s390/net/ctcmain.c:1107:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#225: FILE: drivers/s390/net/ctcmain.c:1183:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#234: FILE: drivers/s390/net/ctcmain.c:1223:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#243: FILE: drivers/s390/net/ctcmain.c:1255:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#252: FILE: drivers/s390/net/ctcmain.c:1335:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#261: FILE: drivers/s390/net/ctcmain.c:1368:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#270: FILE: drivers/s390/net/ctcmain.c:1420:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#279: FILE: drivers/s390/net/ctcmain.c:1451:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#288: FILE: drivers/s390/net/ctcmain.c:1504:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#297: FILE: drivers/s390/net/ctcmain.c:1539:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#306: FILE: drivers/s390/net/ctcmain.c:1568:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#315: FILE: drivers/s390/net/ctcmain.c:1589:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#324: FILE: drivers/s390/net/ctcmain.c:1650:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#333: FILE: drivers/s390/net/ctcmain.c:1708:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#342: FILE: drivers/s390/net/ctcmain.c:1730:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#351: FILE: drivers/s390/net/ctcmain.c:2024:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#360: FILE: drivers/s390/net/ctcmain.c:2120:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#369: FILE: drivers/s390/net/ctcmain.c:2214:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#378: FILE: drivers/s390/net/ctcmain.c:2237:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#387: FILE: drivers/s390/net/ctcmain.c:2250:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#396: FILE: drivers/s390/net/ctcmain.c:2272:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#405: FILE: drivers/s390/net/ctcmain.c:2325:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#414: FILE: drivers/s390/net/ctcmain.c:2427:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#422: FILE: drivers/s390/net/ctcmain.c:2564:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#430: FILE: drivers/s390/net/ctcmain.c:2580:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#439: FILE: drivers/s390/net/ctcmain.c:2602:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#448: FILE: drivers/s390/net/ctcmain.c:2660:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#457: FILE: drivers/s390/net/ctcmain.c:2705:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#466: FILE: drivers/s390/net/ctcmain.c:2750:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#475: FILE: drivers/s390/net/ctcmain.c:2768:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#484: FILE: drivers/s390/net/ctcmain.c:2898:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#493: FILE: drivers/s390/net/ctcmain.c:2950:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#502: FILE: drivers/s390/net/ctcmain.c:3022:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#511: FILE: drivers/s390/net/ctcmain.c:3069:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#520: FILE: drivers/s390/net/ctcmain.c:3163:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#529: FILE: drivers/s390/net/ctcmain.c:3214:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#539: FILE: drivers/s390/net/ctctty.c:2:
+ * $Id: ctctty.c,v 1.24 2004/07/15 16:03:08 ptiedem Exp $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#548: FILE: drivers/s390/net/ctctty.c:107:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#557: FILE: drivers/s390/net/ctctty.c:137:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#566: FILE: drivers/s390/net/ctctty.c:171:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#575: FILE: drivers/s390/net/ctctty.c:192:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#584: FILE: drivers/s390/net/ctctty.c:257:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#593: FILE: drivers/s390/net/ctctty.c:350:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#602: FILE: drivers/s390/net/ctctty.c:371:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#611: FILE: drivers/s390/net/ctctty.c:385:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#620: FILE: drivers/s390/net/ctctty.c:424:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#629: FILE: drivers/s390/net/ctctty.c:467:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#638: FILE: drivers/s390/net/ctctty.c:500:
+	DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#647: FILE: drivers/s390/net/ctctty.c:578:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#655: FILE: drivers/s390/net/ctctty.c:604:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#663: FILE: drivers/s390/net/ctctty.c:627:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#671: FILE: drivers/s390/net/ctctty.c:641:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#679: FILE: drivers/s390/net/ctctty.c:673:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#687: FILE: drivers/s390/net/ctctty.c:691:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#695: FILE: drivers/s390/net/ctctty.c:716:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#703: FILE: drivers/s390/net/ctctty.c:745:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#712: FILE: drivers/s390/net/ctctty.c:814:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#720: FILE: drivers/s390/net/ctctty.c:852:
+	DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#728: FILE: drivers/s390/net/ctctty.c:957:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#737: FILE: drivers/s390/net/ctctty.c:1004:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#745: FILE: drivers/s390/net/ctctty.c:1094:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#753: FILE: drivers/s390/net/ctctty.c:1118:
+	DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#761: FILE: drivers/s390/net/ctctty.c:1156:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#769: FILE: drivers/s390/net/ctctty.c:1216:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#777: FILE: drivers/s390/net/ctctty.c:1264:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#785: FILE: drivers/s390/net/ctctty.c:1283:
+	DBF_TEXT(trace, 2, __FUNCTION__);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#795: FILE: drivers/s390/net/iucv.c:2:
+ * $Id: iucv.c,v 1.39 2004/07/12 06:54:14 braunu Exp $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#800: FILE: drivers/s390/net/iucv.c:29:
  * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#801: FILE: drivers/s390/net/iucv.c:30:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#804: FILE: drivers/s390/net/iucv.c:32:
+ * RELEASE-TAG: IUCV lowlevel driver $Revision: 1.39 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#813: FILE: drivers/s390/net/iucv.c:357:
+	char vbuf[] = "$Revision: 1.39 $";

ERROR:SPACING: space required after that ',' (ctx:VxV)
#857: FILE: drivers/s390/net/iucv.h:56:
+#define IUCV_DBF_TEXT(name,level,text) \
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#857: FILE: drivers/s390/net/iucv.h:56:
+#define IUCV_DBF_TEXT(name,level,text) \
                                 ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#857: FILE: drivers/s390/net/iucv.h:56:
+#define IUCV_DBF_TEXT(name,level,text) \
+	do { \
+		debug_text_event(iucv_dbf_##name,level,text); \
+	} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#859: FILE: drivers/s390/net/iucv.h:58:
+		debug_text_event(iucv_dbf_##name,level,text); \
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#859: FILE: drivers/s390/net/iucv.h:58:
+		debug_text_event(iucv_dbf_##name,level,text); \
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#862: FILE: drivers/s390/net/iucv.h:61:
+#define IUCV_DBF_HEX(name,level,addr,len) \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#862: FILE: drivers/s390/net/iucv.h:61:
+#define IUCV_DBF_HEX(name,level,addr,len) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#862: FILE: drivers/s390/net/iucv.h:61:
+#define IUCV_DBF_HEX(name,level,addr,len) \
                                     ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#862: FILE: drivers/s390/net/iucv.h:61:
+#define IUCV_DBF_HEX(name,level,addr,len) \
+	do { \
+		debug_event(iucv_dbf_##name,level,(void*)(addr),len); \
+	} while (0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#864: FILE: drivers/s390/net/iucv.h:63:
+		debug_event(iucv_dbf_##name,level,(void*)(addr),len); \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#864: FILE: drivers/s390/net/iucv.h:63:
+		debug_event(iucv_dbf_##name,level,(void*)(addr),len); \
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#864: FILE: drivers/s390/net/iucv.h:63:
+		debug_event(iucv_dbf_##name,level,(void*)(addr),len); \
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#864: FILE: drivers/s390/net/iucv.h:63:
+		debug_event(iucv_dbf_##name,level,(void*)(addr),len); \
 		                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#869: FILE: drivers/s390/net/iucv.h:68:
+#define IUCV_DBF_TEXT_(name,level,text...)				\
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#869: FILE: drivers/s390/net/iucv.h:68:
+#define IUCV_DBF_TEXT_(name,level,text...)				\
                                  ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#871: FILE: drivers/s390/net/iucv.h:70:
+		char* iucv_dbf_txt_buf = get_cpu_var(iucv_dbf_txt_buf);	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#872: FILE: drivers/s390/net/iucv.h:71:
+^I^Isprintf(iucv_dbf_txt_buf, text);^I^I  ^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#873: FILE: drivers/s390/net/iucv.h:72:
+		debug_text_event(iucv_dbf_##name,level,iucv_dbf_txt_buf); \
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#873: FILE: drivers/s390/net/iucv.h:72:
+		debug_text_event(iucv_dbf_##name,level,iucv_dbf_txt_buf); \
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#877: FILE: drivers/s390/net/iucv.h:76:
+#define IUCV_DBF_SPRINTF(name,level,text...) \
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#877: FILE: drivers/s390/net/iucv.h:76:
+#define IUCV_DBF_SPRINTF(name,level,text...) \
                                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#877: FILE: drivers/s390/net/iucv.h:76:
+#define IUCV_DBF_SPRINTF(name,level,text...) \
+	do { \
+		debug_sprintf_event(iucv_dbf_trace, level, ##text ); \
+		debug_sprintf_event(iucv_dbf_trace, level, text ); \
+	} while (0)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#879: FILE: drivers/s390/net/iucv.h:78:
+		debug_sprintf_event(iucv_dbf_trace, level, ##text ); \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#880: FILE: drivers/s390/net/iucv.h:79:
+		debug_sprintf_event(iucv_dbf_trace, level, text ); \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#886: FILE: drivers/s390/net/iucv.h:85:
+#define IUCV_HEXDUMP16(importance,header,ptr) \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#886: FILE: drivers/s390/net/iucv.h:85:
+#define IUCV_HEXDUMP16(importance,header,ptr) \
                                         ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#886: FILE: drivers/s390/net/iucv.h:85:
+#define IUCV_HEXDUMP16(importance,header,ptr) \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'header' - possible side-effects?
#886: FILE: drivers/s390/net/iucv.h:85:
+#define IUCV_HEXDUMP16(importance,header,ptr) \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#886: FILE: drivers/s390/net/iucv.h:85:
+#define IUCV_HEXDUMP16(importance,header,ptr) \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#886: FILE: drivers/s390/net/iucv.h:85:
+#define IUCV_HEXDUMP16(importance,header,ptr) \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
+PRINT_##importance(header "%02x %02x %02x %02x  %02x %02x %02x %02x  " \
+		   "%02x %02x %02x %02x  %02x %02x %02x %02x\n", \
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#889: FILE: drivers/s390/net/iucv.h:88:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#889: FILE: drivers/s390/net/iucv.h:88:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#889: FILE: drivers/s390/net/iucv.h:88:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \

ERROR:SPACING: space required after that ',' (ctx:VxO)
#889: FILE: drivers/s390/net/iucv.h:88:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                  ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#889: FILE: drivers/s390/net/iucv.h:88:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#889: FILE: drivers/s390/net/iucv.h:88:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#889: FILE: drivers/s390/net/iucv.h:88:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#889: FILE: drivers/s390/net/iucv.h:88:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#889: FILE: drivers/s390/net/iucv.h:88:
+		   *(((char*)ptr)),*(((char*)ptr)+1),*(((char*)ptr)+2), \
 		                                                   ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                                      ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#890: FILE: drivers/s390/net/iucv.h:89:
+		   *(((char*)ptr)+3),*(((char*)ptr)+4),*(((char*)ptr)+5), \
 		                                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                                      ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#891: FILE: drivers/s390/net/iucv.h:90:
+		   *(((char*)ptr)+6),*(((char*)ptr)+7),*(((char*)ptr)+8), \
 		                                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                                       ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#892: FILE: drivers/s390/net/iucv.h:91:
+		   *(((char*)ptr)+9),*(((char*)ptr)+10),*(((char*)ptr)+11), \
 		                                                      ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#893: FILE: drivers/s390/net/iucv.h:92:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#893: FILE: drivers/s390/net/iucv.h:92:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#893: FILE: drivers/s390/net/iucv.h:92:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#893: FILE: drivers/s390/net/iucv.h:92:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#893: FILE: drivers/s390/net/iucv.h:92:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#893: FILE: drivers/s390/net/iucv.h:92:
+		   *(((char*)ptr)+12),*(((char*)ptr)+13), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#894: FILE: drivers/s390/net/iucv.h:93:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#894: FILE: drivers/s390/net/iucv.h:93:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#894: FILE: drivers/s390/net/iucv.h:93:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#894: FILE: drivers/s390/net/iucv.h:93:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#894: FILE: drivers/s390/net/iucv.h:93:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#894: FILE: drivers/s390/net/iucv.h:93:
+		   *(((char*)ptr)+14),*(((char*)ptr)+15)); \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#897: FILE: drivers/s390/net/iucv.h:96:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#897: FILE: drivers/s390/net/iucv.h:96:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#897: FILE: drivers/s390/net/iucv.h:96:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#897: FILE: drivers/s390/net/iucv.h:96:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#897: FILE: drivers/s390/net/iucv.h:96:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#897: FILE: drivers/s390/net/iucv.h:96:
+		   *(((char*)ptr)+16),*(((char*)ptr)+17), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#898: FILE: drivers/s390/net/iucv.h:97:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#898: FILE: drivers/s390/net/iucv.h:97:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#898: FILE: drivers/s390/net/iucv.h:97:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#898: FILE: drivers/s390/net/iucv.h:97:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#898: FILE: drivers/s390/net/iucv.h:97:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#898: FILE: drivers/s390/net/iucv.h:97:
+		   *(((char*)ptr)+18),*(((char*)ptr)+19), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#899: FILE: drivers/s390/net/iucv.h:98:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#899: FILE: drivers/s390/net/iucv.h:98:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#899: FILE: drivers/s390/net/iucv.h:98:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#899: FILE: drivers/s390/net/iucv.h:98:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#899: FILE: drivers/s390/net/iucv.h:98:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#899: FILE: drivers/s390/net/iucv.h:98:
+		   *(((char*)ptr)+20),*(((char*)ptr)+21), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#900: FILE: drivers/s390/net/iucv.h:99:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#900: FILE: drivers/s390/net/iucv.h:99:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#900: FILE: drivers/s390/net/iucv.h:99:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#900: FILE: drivers/s390/net/iucv.h:99:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#900: FILE: drivers/s390/net/iucv.h:99:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#900: FILE: drivers/s390/net/iucv.h:99:
+		   *(((char*)ptr)+22),*(((char*)ptr)+23), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#901: FILE: drivers/s390/net/iucv.h:100:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#901: FILE: drivers/s390/net/iucv.h:100:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#901: FILE: drivers/s390/net/iucv.h:100:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#901: FILE: drivers/s390/net/iucv.h:100:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#901: FILE: drivers/s390/net/iucv.h:100:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#901: FILE: drivers/s390/net/iucv.h:100:
+		   *(((char*)ptr)+24),*(((char*)ptr)+25), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#902: FILE: drivers/s390/net/iucv.h:101:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#902: FILE: drivers/s390/net/iucv.h:101:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#902: FILE: drivers/s390/net/iucv.h:101:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#902: FILE: drivers/s390/net/iucv.h:101:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#902: FILE: drivers/s390/net/iucv.h:101:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#902: FILE: drivers/s390/net/iucv.h:101:
+		   *(((char*)ptr)+26),*(((char*)ptr)+27), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#903: FILE: drivers/s390/net/iucv.h:102:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#903: FILE: drivers/s390/net/iucv.h:102:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#903: FILE: drivers/s390/net/iucv.h:102:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#903: FILE: drivers/s390/net/iucv.h:102:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#903: FILE: drivers/s390/net/iucv.h:102:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#903: FILE: drivers/s390/net/iucv.h:102:
+		   *(((char*)ptr)+28),*(((char*)ptr)+29), \
 		                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#904: FILE: drivers/s390/net/iucv.h:103:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#904: FILE: drivers/s390/net/iucv.h:103:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#904: FILE: drivers/s390/net/iucv.h:103:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#904: FILE: drivers/s390/net/iucv.h:103:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));
 		                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#904: FILE: drivers/s390/net/iucv.h:103:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#904: FILE: drivers/s390/net/iucv.h:103:
+		   *(((char*)ptr)+30),*(((char*)ptr)+31));
 		                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#913: FILE: drivers/s390/net/iucv.h:112:
+			printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#914: FILE: drivers/s390/net/iucv.h:113:
+		printk("%02x ", *(buf + i));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#916: FILE: drivers/s390/net/iucv.h:115:
+	printk("\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#918: FILE: drivers/s390/net/iucv.h:117:
+}
+/**

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#933: FILE: drivers/s390/net/lcs.c:14:
+ *    $Revision: 1.84 $	 $Date: 2004/07/14 07:23:15 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#942: FILE: drivers/s390/net/lcs.c:61:
+#define VERSION_LCS_C  "$Revision: 1.84 $"

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#961: FILE: drivers/s390/net/netiucv.c:2:
+ * $Id: netiucv.c,v 1.63 2004/07/27 13:36:05 mschwide Exp $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#966: FILE: drivers/s390/net/netiucv.c:30:
  * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#967: FILE: drivers/s390/net/netiucv.c:31:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#970: FILE: drivers/s390/net/netiucv.c:33:
+ * RELEASE-TAG: IUCV network driver $Revision: 1.63 $

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1012: FILE: drivers/s390/net/netiucv.c:374:
+static debug_info_t *iucv_dbf_setup = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1013: FILE: drivers/s390/net/netiucv.c:375:
+static debug_info_t *iucv_dbf_data = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1014: FILE: drivers/s390/net/netiucv.c:376:
+static debug_info_t *iucv_dbf_trace = NULL;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1028: FILE: drivers/s390/net/netiucv.c:390:
+}
+static int

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iucv_dbf_setup == NULL'
#1044: FILE: drivers/s390/net/netiucv.c:406:
+	if ((iucv_dbf_setup == NULL) || (iucv_dbf_data == NULL) ||
+	    (iucv_dbf_trace == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iucv_dbf_data == NULL'
#1044: FILE: drivers/s390/net/netiucv.c:406:
+	if ((iucv_dbf_setup == NULL) || (iucv_dbf_data == NULL) ||
+	    (iucv_dbf_trace == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iucv_dbf_trace == NULL'
#1044: FILE: drivers/s390/net/netiucv.c:406:
+	if ((iucv_dbf_setup == NULL) || (iucv_dbf_data == NULL) ||
+	    (iucv_dbf_trace == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iucv_dbf_setup"
#1044: FILE: drivers/s390/net/netiucv.c:406:
+	if ((iucv_dbf_setup == NULL) || (iucv_dbf_data == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iucv_dbf_data"
#1044: FILE: drivers/s390/net/netiucv.c:406:
+	if ((iucv_dbf_setup == NULL) || (iucv_dbf_data == NULL) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iucv_dbf_trace"
#1045: FILE: drivers/s390/net/netiucv.c:407:
+	    (iucv_dbf_trace == NULL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1084: FILE: drivers/s390/net/netiucv.c:564:
+			IUCV_DBF_TEXT_(data, 2, "Illegal next field: %d > %d\n",
+				header->next, skb_tailroom(pskb));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1094: FILE: drivers/s390/net/netiucv.c:572:
+			PRINT_WARN("%s Out of memory in netiucv_unpack_skb\n",
 			       dev->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1096: FILE: drivers/s390/net/netiucv.c:574:
+			IUCV_DBF_TEXT(data, 2,
+				"Out of memory in netiucv_unpack_skb\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1105: FILE: drivers/s390/net/netiucv.c:602:
+	struct netiucv_priv *privptr =(struct netiucv_priv *)conn->netdev->priv;
 	                             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1111: FILE: drivers/s390/net/netiucv.c:607:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1119: FILE: drivers/s390/net/netiucv.c:613:
+		IUCV_DBF_TEXT(data, 2,
+			"Received data for unlinked connection\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1126: FILE: drivers/s390/net/netiucv.c:620:
+		PRINT_WARN("msglen %d > max_buffsize %d\n",
+			msglen, conn->max_buffsize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1128: FILE: drivers/s390/net/netiucv.c:622:
+		IUCV_DBF_TEXT_(data, 2, "msglen %d > max_buffsize %d\n",
+			msglen, conn->max_buffsize);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1149: FILE: drivers/s390/net/netiucv.c:654:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1175: FILE: drivers/s390/net/netiucv.c:735:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1184: FILE: drivers/s390/net/netiucv.c:741:
+		PRINT_WARN("%s: IUCV accept failed with error %d\n",
 		       netdev->name, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1194: FILE: drivers/s390/net/netiucv.c:760:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1204: FILE: drivers/s390/net/netiucv.c:768:
+		IUCV_DBF_TEXT_(data, 2,
+			"connreject: IR pathid %d, conn. pathid %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1214: FILE: drivers/s390/net/netiucv.c:783:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1225: FILE: drivers/s390/net/netiucv.c:792:
+		IUCV_DBF_TEXT_(data, 2,
+			"connack: IR pathid %d, conn. pathid %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1235: FILE: drivers/s390/net/netiucv.c:806:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1244: FILE: drivers/s390/net/netiucv.c:822:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: drivers/s390/net/netiucv.c:828:
+	IUCV_DBF_TEXT(data, 2,
+		"conn_action_connsever: Remote dropped connection\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1261: FILE: drivers/s390/net/netiucv.c:841:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:CAMELCASE: Avoid CamelCase: <iucvMagic>
#1268: FILE: drivers/s390/net/netiucv.c:846:
+			iucv_register_program(iucvMagic, conn->userid,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1278: FILE: drivers/s390/net/netiucv.c:854:
+			IUCV_DBF_TEXT(setup, 2,
+				"NULL from iucv_register_program\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1284: FILE: drivers/s390/net/netiucv.c:859:
+		PRINT_DEBUG("%s('%s'): registered successfully\n",
 			 conn->netdev->name, conn->userid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1289: FILE: drivers/s390/net/netiucv.c:863:
+	PRINT_DEBUG("%s('%s'): connecting ...\n",
 		 conn->netdev->name, conn->userid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1310: FILE: drivers/s390/net/netiucv.c:881:
+			PRINT_INFO("%s: User %s is currently not available.\n",
 			       conn->netdev->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1318: FILE: drivers/s390/net/netiucv.c:887:
+			PRINT_INFO("%s: User %s is currently not ready.\n",
 			       conn->netdev->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1326: FILE: drivers/s390/net/netiucv.c:893:
+			PRINT_WARN("%s: Too many IUCV connections.\n",
 			       conn->netdev->name);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1331: FILE: drivers/s390/net/netiucv.c:897:
+			PRINT_WARN(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1339: FILE: drivers/s390/net/netiucv.c:904:
+			PRINT_WARN(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1348: FILE: drivers/s390/net/netiucv.c:911:
+			PRINT_WARN("%s: iucv_connect returned error %d\n",
 			       conn->netdev->name, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1365: FILE: drivers/s390/net/netiucv.c:940:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1385: FILE: drivers/s390/net/netiucv.c:961:
+	PRINT_WARN("%s: Cannot connect without username\n",
 	       netdev->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1395: FILE: drivers/s390/net/netiucv.c:1018:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1404: FILE: drivers/s390/net/netiucv.c:1039:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1413: FILE: drivers/s390/net/netiucv.c:1061:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1421: FILE: drivers/s390/net/netiucv.c:1067:
+			PRINT_INFO("%s: connected with remote side %s\n",
 			       dev->name, privptr->conn->userid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1423: FILE: drivers/s390/net/netiucv.c:1069:
+			IUCV_DBF_TEXT(setup, 3,
+				"connection is up and running\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1428: FILE: drivers/s390/net/netiucv.c:1072:
+			PRINT_INFO(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1432: FILE: drivers/s390/net/netiucv.c:1076:
+			IUCV_DBF_TEXT(data, 2,
+				"dev_action_connup: in DEV_STATE_STOPWAIT\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1441: FILE: drivers/s390/net/netiucv.c:1092:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1462: FILE: drivers/s390/net/netiucv.c:1146:
+			IUCV_DBF_TEXT(data, 2,
+				"EBUSY from netiucv_transmit_skb\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1474: FILE: drivers/s390/net/netiucv.c:1167:
+				PRINT_WARN("%s: Could not allocate tx_skb\n",
 				       conn->netdev->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1504: FILE: drivers/s390/net/netiucv.c:1241:
+	fsm_event(((struct netiucv_priv *)dev->priv)->fsm, DEV_EVENT_START,dev);
 	                                                                  ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1512: FILE: drivers/s390/net/netiucv.c:1275:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1528: FILE: drivers/s390/net/netiucv.c:1287:
+		PRINT_WARN("%s: Got sk_buff with head room < %ld bytes\n",
 		       dev->name, NETIUCV_HDRLEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1530: FILE: drivers/s390/net/netiucv.c:1289:
+		IUCV_DBF_TEXT(data, 2,
+			"netiucv_tx: skb_headroom < NETIUCV_HDRLEN\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1554: FILE: drivers/s390/net/netiucv.c:1329:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1563: FILE: drivers/s390/net/netiucv.c:1345:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu < 576'
#1564: FILE: drivers/s390/net/netiucv.c:1346:
+	if ((new_mtu < 576) || (new_mtu > NETIUCV_MTU_MAX)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu > NETIUCV_MTU_MAX'
#1564: FILE: drivers/s390/net/netiucv.c:1346:
+	if ((new_mtu < 576) || (new_mtu > NETIUCV_MTU_MAX)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1575: FILE: drivers/s390/net/netiucv.c:1363:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1583: FILE: drivers/s390/net/netiucv.c:1377:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1589: FILE: drivers/s390/net/netiucv.c:1381:
+		IUCV_DBF_TEXT_(setup, 2,
+			"%d is length of username\n", (int)count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1600: FILE: drivers/s390/net/netiucv.c:1394:
+			PRINT_WARN("netiucv: Invalid char %c in username!\n",
+				*p);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1602: FILE: drivers/s390/net/netiucv.c:1396:
+			IUCV_DBF_TEXT_(setup, 2,
+				"username: invalid character %c\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1616: FILE: drivers/s390/net/netiucv.c:1408:
+			PRINT_WARN(

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1630: FILE: drivers/s390/net/netiucv.c:1429:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1638: FILE: drivers/s390/net/netiucv.c:1441:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1655: FILE: drivers/s390/net/netiucv.c:1454:
+		PRINT_WARN("netiucv: Given buffer size %d too large.\n",
+			bs1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1657: FILE: drivers/s390/net/netiucv.c:1456:
+		IUCV_DBF_TEXT_(setup, 2,
+			"buffer_write: buffer size %d too large\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1666: FILE: drivers/s390/net/netiucv.c:1463:
+		PRINT_WARN("netiucv: Given buffer size %d too small.\n",
+			bs1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1668: FILE: drivers/s390/net/netiucv.c:1465:
+		IUCV_DBF_TEXT_(setup, 2,
+			"buffer_write: buffer size %d too small\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1675: FILE: drivers/s390/net/netiucv.c:1471:
+		PRINT_WARN("netiucv: Given buffer size %d too small.\n",
+			bs1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1677: FILE: drivers/s390/net/netiucv.c:1473:
+		IUCV_DBF_TEXT_(setup, 2,
+			"buffer_write: buffer size %d too small\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1690: FILE: drivers/s390/net/netiucv.c:1493:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1700: FILE: drivers/s390/net/netiucv.c:1504:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1710: FILE: drivers/s390/net/netiucv.c:1515:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1720: FILE: drivers/s390/net/netiucv.c:1524:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1730: FILE: drivers/s390/net/netiucv.c:1536:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1738: FILE: drivers/s390/net/netiucv.c:1545:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1748: FILE: drivers/s390/net/netiucv.c:1557:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1756: FILE: drivers/s390/net/netiucv.c:1566:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1766: FILE: drivers/s390/net/netiucv.c:1578:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1774: FILE: drivers/s390/net/netiucv.c:1587:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1784: FILE: drivers/s390/net/netiucv.c:1599:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1792: FILE: drivers/s390/net/netiucv.c:1608:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1802: FILE: drivers/s390/net/netiucv.c:1620:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1810: FILE: drivers/s390/net/netiucv.c:1629:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1818: FILE: drivers/s390/net/netiucv.c:1641:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1826: FILE: drivers/s390/net/netiucv.c:1650:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1834: FILE: drivers/s390/net/netiucv.c:1662:
+	IUCV_DBF_TEXT(trace, 5, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1842: FILE: drivers/s390/net/netiucv.c:1671:
+	IUCV_DBF_TEXT(trace, 4, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1852: FILE: drivers/s390/net/netiucv.c:1712:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1861: FILE: drivers/s390/net/netiucv.c:1725:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1870: FILE: drivers/s390/net/netiucv.c:1738:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1897: FILE: drivers/s390/net/netiucv.c:1776:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1930: FILE: drivers/s390/net/netiucv.c:1846:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1949: FILE: drivers/s390/net/netiucv.c:1874:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1993: FILE: drivers/s390/net/netiucv.c:1960:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2010: FILE: drivers/s390/net/netiucv.c:1976:
+			IUCV_DBF_TEXT_(setup, 2,
+				"conn_write: invalid character %c\n", *p);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2019: FILE: drivers/s390/net/netiucv.c:1985:
+		PRINT_WARN(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2033: FILE: drivers/s390/net/netiucv.c:1994:
+		IUCV_DBF_TEXT_(setup, 2,
+			"ret %d from netiucv_register_device\n", ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2041: FILE: drivers/s390/net/netiucv.c:2000:
+	SET_NETDEV_DEV(dev,
+			(struct device*)((struct netiucv_priv*)dev->priv)->dev);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2041: FILE: drivers/s390/net/netiucv.c:2000:
+			(struct device*)((struct netiucv_priv*)dev->priv)->dev);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2041: FILE: drivers/s390/net/netiucv.c:2000:
+			(struct device*)((struct netiucv_priv*)dev->priv)->dev);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2043: FILE: drivers/s390/net/netiucv.c:2002:
+	if ((ret = register_netdev(dev))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2044: FILE: drivers/s390/net/netiucv.c:2003:
+		netiucv_unregister_device((struct device*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2045: FILE: drivers/s390/net/netiucv.c:2004:
+			((struct netiucv_priv*)dev->priv)->dev);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2075: FILE: drivers/s390/net/netiucv.c:2032:
+        IUCV_DBF_TEXT(trace, 3, __FUNCTION__);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2075: FILE: drivers/s390/net/netiucv.c:2032:
+        IUCV_DBF_TEXT(trace, 3, __FUNCTION__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2075: FILE: drivers/s390/net/netiucv.c:2032:
+        IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2084: FILE: drivers/s390/net/netiucv.c:2057:
+                        PRINT_WARN($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2084: FILE: drivers/s390/net/netiucv.c:2057:
+                        PRINT_WARN($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2084: FILE: drivers/s390/net/netiucv.c:2057:
+                        PRINT_WARN(

ERROR:CODE_INDENT: code indent should use tabs where possible
#2089: FILE: drivers/s390/net/netiucv.c:2060:
+                        PRINT_WARN("netiucv: %s cannot be removed\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2089: FILE: drivers/s390/net/netiucv.c:2060:
+                        PRINT_WARN("netiucv: %s cannot be removed\n",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2090: FILE: drivers/s390/net/netiucv.c:2061:
+                        PRINT_WARN("netiucv: %s cannot be removed\n",
                                 ndev->name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2100: FILE: drivers/s390/net/netiucv.c:2069:
+        PRINT_WARN("netiucv: net device %s unknown\n", name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2100: FILE: drivers/s390/net/netiucv.c:2069:
+        PRINT_WARN("netiucv: net device %s unknown\n", name);$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2116: FILE: drivers/s390/net/netiucv.c:2079:
+	char vbuf[] = "$Revision: 1.63 $";

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2133: FILE: drivers/s390/net/netiucv.c:2094:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:SPLIT_STRING: quoted string split across lines
#2157: FILE: drivers/s390/net/netiucv.c:2121:
+		PRINT_WARN("netiucv_init failed, "
+			"iucv_register_dbf_views rc = %d\n", ret);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2160: FILE: drivers/s390/net/netiucv.c:2124:
+	IUCV_DBF_TEXT(trace, 3, __FUNCTION__);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2194: FILE: drivers/s390/net/qeth_fs.h:15:
+#define VERSION_QETH_FS_H "$Revision: 1.9 $"

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2214: FILE: drivers/s390/net/qeth_main.c:3:
+ * linux/drivers/s390/net/qeth_main.c ($Revision: 1.127 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2214: FILE: drivers/s390/net/qeth_main.c:3:
+ * linux/drivers/s390/net/qeth_main.c ($Revision: 1.127 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2223: FILE: drivers/s390/net/qeth_main.c:15:
+ *    $Revision: 1.127 $	 $Date: 2004/07/14 21:46:40 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2232: FILE: drivers/s390/net/qeth_main.c:81:
+#define VERSION_QETH_C "$Revision: 1.127 $"

ERROR:SPACING: spaces required around that '&&' (ctx:VxE)
#2241: FILE: drivers/s390/net/qeth_main.c:3856:
+		if ((card->info.link_type != QETH_LINK_TYPE_GBIT_ETH)&&
 		                                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->info.link_type != QETH_LINK_TYPE_GBIT_ETH'
#2241: FILE: drivers/s390/net/qeth_main.c:3856:
+		if ((card->info.link_type != QETH_LINK_TYPE_GBIT_ETH)&&
+		    (card->info.link_type != QETH_LINK_TYPE_10GBIT_ETH))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->info.link_type != QETH_LINK_TYPE_10GBIT_ETH'
#2241: FILE: drivers/s390/net/qeth_main.c:3856:
+		if ((card->info.link_type != QETH_LINK_TYPE_GBIT_ETH)&&
+		    (card->info.link_type != QETH_LINK_TYPE_10GBIT_ETH))

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2253: FILE: drivers/s390/net/qeth_sys.c:3:
+ * linux/drivers/s390/net/qeth_sys.c ($Revision: 1.33 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2253: FILE: drivers/s390/net/qeth_sys.c:3:
+ * linux/drivers/s390/net/qeth_sys.c ($Revision: 1.33 $)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2262: FILE: drivers/s390/net/qeth_sys.c:23:
+const char *VERSION_QETH_SYS_C = "$Revision: 1.33 $";

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2271: FILE: drivers/s390/net/qeth_sys.c:479:
+	i = simple_strtoul(buf, &tmp, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265745.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 112 errors, 161 warnings, 91 checks, 2015 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265745.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
