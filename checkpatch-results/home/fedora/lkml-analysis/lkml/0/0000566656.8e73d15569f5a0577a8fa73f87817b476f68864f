WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: racache.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#51: FILE: racache.h:2:
+ * include/linux/nfsd/racache.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: racache.h:25:
+    struct raparms      *p_hash_next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: racache.h:26:
+    struct raparms      *p_hash_prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: racache.h:27:
+    struct list_head         p_lru;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: racache.h:28:
+    ino_t               p_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: racache.h:29:
+    dev_t               p_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: racache.h:30:
+    unsigned long       p_reada,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: racache.h:31:
+                   p_ramax,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: racache.h:31:
+                   p_ramax,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: racache.h:32:
+                   p_raend,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: racache.h:32:
+                   p_raend,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: racache.h:33:
+                   p_ralen,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: racache.h:33:
+                   p_ralen,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: racache.h:34:
+                   p_rawin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: racache.h:34:
+                   p_rawin;$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#88: FILE: racache.h:39:
+struct raparms *nfsd_get_raparms(dev_t , ino_t );
                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#88: FILE: racache.h:39:
+struct raparms *nfsd_get_raparms(dev_t , ino_t );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_t' should also have an identifier name
#88: FILE: racache.h:39:
+struct raparms *nfsd_get_raparms(dev_t , ino_t );

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ino_t' should also have an identifier name
#88: FILE: racache.h:39:
+struct raparms *nfsd_get_raparms(dev_t , ino_t );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: stats.h:28:
+    unsigned int   ra_hits;  /* ra cache hits */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: stats.h:29:
+    unsigned int   ra_misses;     /* ra cache misses */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: nfssvc.c:75:
+    error =   nfsd_racache_init();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: nfssvc.c:188:
+         update_thread_usage(atomic_read(&nfsd_busy));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: nfssvc.c:188:
+         update_thread_usage(atomic_read(&nfsd_busy));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: nfssvc.c:189:
+         atomic_inc(&nfsd_busy);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: nfssvc.c:189:
+         atomic_inc(&nfsd_busy);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: nfssvc.c:208:
+         update_thread_usage(atomic_read(&nfsd_busy));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: nfssvc.c:208:
+         update_thread_usage(atomic_read(&nfsd_busy));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: nfssvc.c:209:
+         atomic_dec(&nfsd_busy);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: nfssvc.c:209:
+         atomic_dec(&nfsd_busy);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: stats.c:19:
+              racache size, hits, and misses$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: stats.c:67:
+    len += sprintf(buffer+len, "\nra %u %u %u\n", nfsdstats.ra_size,$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#185: FILE: stats.c:67:
+    len += sprintf(buffer+len, "\nra %u %u %u\n", nfsdstats.ra_size,
                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: stats.c:68:
+              nfsdstats.ra_hits, nfsdstats.ra_misses);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: stats.c:68:
+              nfsdstats.ra_hits, nfsdstats.ra_misses);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#328: FILE: nfsracache.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#329: FILE: nfsracache.c:2:
+ * linux/fs/nfsd/nfsracache.c

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#345: FILE: nfsracache.c:18:
+#define REQHASH(ino, dev)    ((((ino) >> 24) ^ (ino) ^ (dev)) & (HASHSIZE-1))
                                                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ino' - possible side-effects?
#345: FILE: nfsracache.c:18:
+#define REQHASH(ino, dev)    ((((ino) >> 24) ^ (ino) ^ (dev)) & (HASHSIZE-1))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: nfsracache.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#355: FILE: nfsracache.c:28:
+static struct raparms *      raparm_cache = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo *      bar" should be "foo *bar"
#355: FILE: nfsracache.c:28:
+static struct raparms *      raparm_cache = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *    bar" should be "foo *bar"
#356: FILE: nfsracache.c:29:
+static struct list_head *    hash_list;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: nfsracache.c:36:
+    struct raparms *rp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: nfsracache.c:37:
+    struct list_head    *rahead;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: nfsracache.c:38:
+    size_t              i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: nfsracache.c:39:
+    unsigned long       order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: nfsracache.c:41:
+    i = CACHESIZE * sizeof (struct raparms);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#368: FILE: nfsracache.c:41:
+    i = CACHESIZE * sizeof (struct raparms);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: nfsracache.c:42:
+    for (order = 0; (PAGE_SIZE << order) < i; order++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#369: FILE: nfsracache.c:42:
+    for (order = 0; (PAGE_SIZE << order) < i; order++)
+         ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: nfsracache.c:43:
+         ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: nfsracache.c:43:
+         ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: nfsracache.c:44:
+    raparm_cache = (struct raparms *)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: nfsracache.c:45:
+         __get_free_pages(GFP_KERNEL, order);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: nfsracache.c:45:
+         __get_free_pages(GFP_KERNEL, order);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: nfsracache.c:46:
+    if (!raparm_cache) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#373: FILE: nfsracache.c:46:
+    if (!raparm_cache) {
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for racache\n", i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: nfsracache.c:47:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for racache\n", i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: nfsracache.c:47:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for racache\n", i);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#374: FILE: nfsracache.c:47:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for racache\n", i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#374: FILE: nfsracache.c:47:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for racache\n", i);

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#374: FILE: nfsracache.c:47:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for racache\n", i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: nfsracache.c:48:
+         return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: nfsracache.c:48:
+         return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: nfsracache.c:49:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: nfsracache.c:50:
+    memset(raparm_cache, 0, i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: nfsracache.c:52:
+    i = HASHSIZE * sizeof (struct list_head);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#379: FILE: nfsracache.c:52:
+    i = HASHSIZE * sizeof (struct list_head);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: nfsracache.c:53:
+    hash_list = kmalloc (i, GFP_KERNEL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#380: FILE: nfsracache.c:53:
+    hash_list = kmalloc (i, GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: nfsracache.c:54:
+    if (!hash_list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#381: FILE: nfsracache.c:54:
+    if (!hash_list) {
+         free_pages ((unsigned long)raparm_cache, order);

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: nfsracache.c:55:
+         free_pages ((unsigned long)raparm_cache, order);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: nfsracache.c:55:
+         free_pages ((unsigned long)raparm_cache, order);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#382: FILE: nfsracache.c:55:
+         free_pages ((unsigned long)raparm_cache, order);

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: nfsracache.c:56:
+         raparm_cache = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: nfsracache.c:56:
+         raparm_cache = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: nfsracache.c:57:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for hash list in racache\n", i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: nfsracache.c:57:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for hash list in racache\n", i);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#384: FILE: nfsracache.c:57:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for hash list in racache\n", i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#384: FILE: nfsracache.c:57:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for hash list in racache\n", i);

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#384: FILE: nfsracache.c:57:
+         printk (KERN_ERR "nfsd: cannot allocate %Zd bytes for hash list in racache\n", i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: nfsracache.c:58:
+         return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: nfsracache.c:58:
+         return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: nfsracache.c:59:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: nfsracache.c:61:
+    spin_lock(&racache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: nfsracache.c:62:
+    for (i = 0, rahead = hash_list; i < HASHSIZE; i++, rahead++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#389: FILE: nfsracache.c:62:
+    for (i = 0, rahead = hash_list; i < HASHSIZE; i++, rahead++)
+         INIT_LIST_HEAD(rahead);

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: nfsracache.c:63:
+         INIT_LIST_HEAD(rahead);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: nfsracache.c:63:
+         INIT_LIST_HEAD(rahead);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: nfsracache.c:65:
+    INIT_LIST_HEAD(&free_head);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: nfsracache.c:66:
+    for (i = 0, rp = raparm_cache; i < CACHESIZE; i++, rp++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#393: FILE: nfsracache.c:66:
+    for (i = 0, rp = raparm_cache; i < CACHESIZE; i++, rp++) {
+         rp->p_hash_next = rp->p_hash_prev = rp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: nfsracache.c:67:
+         rp->p_hash_next = rp->p_hash_prev = rp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: nfsracache.c:67:
+         rp->p_hash_next = rp->p_hash_prev = rp;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#394: FILE: nfsracache.c:67:
+         rp->p_hash_next = rp->p_hash_prev = rp;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: nfsracache.c:68:
+         list_add(&rp->p_lru, &free_head);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: nfsracache.c:68:
+         list_add(&rp->p_lru, &free_head);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: nfsracache.c:69:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: nfsracache.c:70:
+    INIT_LIST_HEAD(&lru_head);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: nfsracache.c:71:
+    spin_unlock(&racache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: nfsracache.c:73:
+    nfsdstats.ra_size = CACHESIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: nfsracache.c:74:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: nfsracache.c:80:
+    size_t              i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: nfsracache.c:81:
+    unsigned long       order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: nfsracache.c:83:
+    i = CACHESIZE * sizeof (struct raparms);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: nfsracache.c:83:
+    i = CACHESIZE * sizeof (struct raparms);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: nfsracache.c:84:
+    for (order = 0; (PAGE_SIZE << order) < i; order++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#411: FILE: nfsracache.c:84:
+    for (order = 0; (PAGE_SIZE << order) < i; order++)
+         ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: nfsracache.c:85:
+         ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: nfsracache.c:85:
+         ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: nfsracache.c:86:
+    spin_lock(&racache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: nfsracache.c:87:
+    free_pages ((unsigned long)raparm_cache, order);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: nfsracache.c:87:
+    free_pages ((unsigned long)raparm_cache, order);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: nfsracache.c:88:
+    raparm_cache = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: nfsracache.c:89:
+    kfree (hash_list);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#416: FILE: nfsracache.c:89:
+    kfree (hash_list);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: nfsracache.c:90:
+    hash_list = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: nfsracache.c:91:
+    spin_unlock(&racache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: nfsracache.c:98:
+    struct raparms *ra = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: nfsracache.c:99:
+    struct list_head *rap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: nfsracache.c:101:
+    if (list_empty(&free_head)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#428: FILE: nfsracache.c:101:
+    if (list_empty(&free_head)) {
[...]
+         struct raparms *prev, *next;

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: nfsracache.c:102:
+         /* Replace with LRU. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: nfsracache.c:103:
+         struct raparms *prev, *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: nfsracache.c:103:
+         struct raparms *prev, *next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: nfsracache.c:104:
+         ra = list_entry(lru_head.prev, struct raparms, p_lru);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#431: FILE: nfsracache.c:104:
+         struct raparms *prev, *next;
+         ra = list_entry(lru_head.prev, struct raparms, p_lru);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: nfsracache.c:104:
+         ra = list_entry(lru_head.prev, struct raparms, p_lru);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: nfsracache.c:105:
+         prev = ra->p_hash_prev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: nfsracache.c:105:
+         prev = ra->p_hash_prev,$

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#432: FILE: nfsracache.c:105:
+         prev = ra->p_hash_prev,
+         next = ra->p_hash_next;

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: nfsracache.c:106:
+         next = ra->p_hash_next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: nfsracache.c:106:
+         next = ra->p_hash_next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: nfsracache.c:107:
+         prev->p_hash_next = next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: nfsracache.c:107:
+         prev->p_hash_next = next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: nfsracache.c:108:
+         next->p_hash_prev = prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: nfsracache.c:108:
+         next->p_hash_prev = prev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: nfsracache.c:109:
+         ra->p_hash_next = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: nfsracache.c:109:
+         ra->p_hash_next = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: nfsracache.c:110:
+         ra->p_hash_prev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: nfsracache.c:110:
+         ra->p_hash_prev = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: nfsracache.c:111:
+         list_del(lru_head.prev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: nfsracache.c:111:
+         list_del(lru_head.prev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: nfsracache.c:112:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#439: FILE: nfsracache.c:112:
+    } else {
+         ra = list_entry(free_head.next, struct raparms, p_lru);

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: nfsracache.c:113:
+         ra = list_entry(free_head.next, struct raparms, p_lru);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: nfsracache.c:113:
+         ra = list_entry(free_head.next, struct raparms, p_lru);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: nfsracache.c:114:
+         list_del(free_head.next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: nfsracache.c:114:
+         list_del(free_head.next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: nfsracache.c:115:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: nfsracache.c:117:
+    memset(ra, 0, sizeof(*ra));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: nfsracache.c:118:
+    ra->p_dev = dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: nfsracache.c:119:
+    ra->p_ino = ino;$

CHECK:SPACING: No space is necessary after a cast
#447: FILE: nfsracache.c:120:
+    rap = (struct list_head *) &hash_list[REQHASH(ino, dev)];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: nfsracache.c:120:
+    rap = (struct list_head *) &hash_list[REQHASH(ino, dev)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: nfsracache.c:121:
+    ra->p_hash_next = (struct raparms *)(rap->next);$

CHECK:SPACING: No space is necessary after a cast
#449: FILE: nfsracache.c:122:
+    ra->p_hash_prev = (struct raparms *) rap;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: nfsracache.c:122:
+    ra->p_hash_prev = (struct raparms *) rap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: nfsracache.c:123:
+    ((struct raparms *)(rap->next))->p_hash_prev = ra;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: nfsracache.c:124:
+    rap->next = (struct list_head *)ra;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: nfsracache.c:126:
+    list_add(&ra->p_lru, &lru_head);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: nfsracache.c:127:
+    return ra;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: nfsracache.c:138:
+    struct raparms *rahead;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: nfsracache.c:139:
+    struct raparms *ra = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: nfsracache.c:141:
+    spin_lock(&racache_lock);$

CHECK:SPACING: No space is necessary after a cast
#470: FILE: nfsracache.c:143:
+    ra = rahead = (struct raparms *) &hash_list[REQHASH(ino, dev)];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: nfsracache.c:143:
+    ra = rahead = (struct raparms *) &hash_list[REQHASH(ino, dev)];$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#470: FILE: nfsracache.c:143:
+    ra = rahead = (struct raparms *) &hash_list[REQHASH(ino, dev)];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: nfsracache.c:144:
+    while ((ra = ra->p_hash_next) != rahead) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 14)
#471: FILE: nfsracache.c:144:
+    while ((ra = ra->p_hash_next) != rahead) {
+              if ((ra->p_ino == ino) && (ra->p_dev == dev)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: nfsracache.c:145:
+              if ((ra->p_ino == ino) && (ra->p_dev == dev)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: nfsracache.c:145:
+              if ((ra->p_ino == ino) && (ra->p_dev == dev)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 14)
#472: FILE: nfsracache.c:145:
+              if ((ra->p_ino == ino) && (ra->p_dev == dev)) {
[...]
+              list_del(&ra->p_lru);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ra->p_ino == ino'
#472: FILE: nfsracache.c:145:
+              if ((ra->p_ino == ino) && (ra->p_dev == dev)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ra->p_dev == dev'
#472: FILE: nfsracache.c:145:
+              if ((ra->p_ino == ino) && (ra->p_dev == dev)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: nfsracache.c:146:
+              /* Do LRU reordering */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: nfsracache.c:147:
+              list_del(&ra->p_lru);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: nfsracache.c:147:
+              list_del(&ra->p_lru);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: nfsracache.c:148:
+              list_add(&ra->p_lru, &lru_head);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: nfsracache.c:148:
+              list_add(&ra->p_lru, &lru_head);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: nfsracache.c:149:
+              nfsdstats.ra_hits++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: nfsracache.c:149:
+              nfsdstats.ra_hits++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: nfsracache.c:150:
+              goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: nfsracache.c:150:
+              goto found;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: nfsracache.c:151:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: nfsracache.c:151:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: nfsracache.c:152:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: nfsracache.c:155:
+    ra = nfsd_racache_insert(ino, dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: nfsracache.c:156:
+    nfsdstats.ra_misses++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: nfsracache.c:158:
+    spin_unlock(&racache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: nfsracache.c:159:
+    return ra;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566656.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 46 errors, 137 warnings, 11 checks, 414 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566656.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
