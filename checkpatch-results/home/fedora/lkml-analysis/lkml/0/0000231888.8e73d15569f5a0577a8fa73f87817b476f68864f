CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#245: FILE: arch/m32r/boot/compressed/m32r_sio.c:21:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#264: FILE: arch/m32r/boot/compressed/m32r_sio.c:50:
+#define SIO0STS	(volatile unsigned short *)(0xa0efd000 + 14)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#264: FILE: arch/m32r/boot/compressed/m32r_sio.c:50:
+#define SIO0STS	(volatile unsigned short *)(0xa0efd000 + 14)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#265: FILE: arch/m32r/boot/compressed/m32r_sio.c:51:
+#define SIO0TXB	(volatile unsigned short *)(0xa0efd000 + 30)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#265: FILE: arch/m32r/boot/compressed/m32r_sio.c:51:
+#define SIO0TXB	(volatile unsigned short *)(0xa0efd000 + 30)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#270: FILE: arch/m32r/boot/compressed/m32r_sio.c:55:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited before semicolon
#271: FILE: arch/m32r/boot/compressed/m32r_sio.c:56:
+	while ((*SIO0STS & 0x1) == 0) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#271: FILE: arch/m32r/boot/compressed/m32r_sio.c:56:
+	while ((*SIO0STS & 0x1) == 0) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited before semicolon
#274: FILE: arch/m32r/boot/compressed/m32r_sio.c:59:
+		while ((*SIO0STS & 0x1) == 0) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#274: FILE: arch/m32r/boot/compressed/m32r_sio.c:59:
+		while ((*SIO0STS & 0x1) == 0) ;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#298: FILE: arch/m32r/boot/compressed/misc.c:39:
+static unsigned insize = 0;  /* valid bytes in inbuf */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#298: FILE: arch/m32r/boot/compressed/misc.c:39:
+static unsigned insize = 0;  /* valid bytes in inbuf */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#299: FILE: arch/m32r/boot/compressed/misc.c:40:
+static unsigned inptr = 0;   /* index of next byte to be processed in inbuf */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#299: FILE: arch/m32r/boot/compressed/misc.c:40:
+static unsigned inptr = 0;   /* index of next byte to be processed in inbuf */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#300: FILE: arch/m32r/boot/compressed/misc.c:41:
+static unsigned outcnt = 0;  /* bytes in output buffer */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#300: FILE: arch/m32r/boot/compressed/misc.c:41:
+static unsigned outcnt = 0;  /* bytes in output buffer */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#314: FILE: arch/m32r/boot/compressed/misc.c:80:
+static long bytes_out = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#317: FILE: arch/m32r/boot/compressed/misc.c:82:
+static unsigned long output_ptr = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: arch/m32r/boot/compressed/misc.c:88:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: arch/m32r/boot/compressed/misc.c:88:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: arch/m32r/boot/compressed/misc.c:91:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/m32r/boot/compressed/misc.c:91:
+ $

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#345: FILE: arch/m32r/boot/compressed/misc.c:100:
+	if (size <0) error("Malloc error");
 	         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#345: FILE: arch/m32r/boot/compressed/misc.c:100:
+	if (size <0) error("Malloc error");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#346: FILE: arch/m32r/boot/compressed/misc.c:101:
+	if (free_mem_ptr == 0) error("Memory error");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: arch/m32r/boot/compressed/misc.c:172:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: arch/m32r/boot/compressed/misc.c:172:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: arch/m32r/boot/compressed/misc.c:174:
+    out = &output_data[output_ptr]; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: arch/m32r/boot/compressed/misc.c:174:
+    out = &output_data[output_ptr]; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000231888.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 11 warnings, 2 checks, 388 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000231888.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
