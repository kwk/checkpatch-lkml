WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -u linux-2.6.5-numa/include/linux/mmzone.h-o linux-2.6.5-numa/include/linux/mmzone.h

WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#47: FILE: include/linux/mmzone.h:59:
+	unsigned long interleave_hit; 	/* interleaver prefered this zone */
 	                              	               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#47: FILE: include/linux/mmzone.h:59:
+^Iunsigned long interleave_hit; ^I/* interleaver prefered this zone */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: mm/page_alloc.c:450:
+static void zone_statistics(struct zonelist *zonelist, struct zone *z) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: mm/page_alloc.c:451:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: mm/page_alloc.c:454:
+^Iint cpu; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: mm/page_alloc.c:458:
+^Ilocal_irq_save(flags); $

WARNING:LINE_SPACING: Missing a blank line after declarations
#69: FILE: mm/page_alloc.c:458:
+	struct per_cpu_pageset *p;
+	local_irq_save(flags); 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: mm/page_alloc.c:463:
+^I} else { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: mm/page_alloc.c:470:
+^I^Ip->other_node++;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: mm/page_alloc.c:473:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: mm/page_alloc.c:610:
+^I^I^Iif (page) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#94: FILE: mm/page_alloc.c:610:
+			if (page) { 
+					zone_statistics(zonelist, z); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: mm/page_alloc.c:611:
+^I^I^I^I^Izone_statistics(zonelist, z); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: mm/page_alloc.c:638:
+^I^I^I^Izone_statistics(zonelist, z); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: mm/page_alloc.c:655:
+^I^I^I^Izone_statistics(zonelist, z); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: mm/page_alloc.c:685:
+^I^I^I^Izone_statistics(zonelist, z); $

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#145: FILE: drivers/base/node.c:34:
+int __attribute__((weak)) hugetlb_report_node_meminfo(int node, char *buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: drivers/base/node.c:68:
+static ssize_t node_read_numastat(struct sys_device * dev, char * buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: drivers/base/node.c:68:
+static ssize_t node_read_numastat(struct sys_device * dev, char * buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: drivers/base/node.c:69:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: drivers/base/node.c:74:
+^Inuma_hit = 0; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#179: FILE: drivers/base/node.c:74:
+	pg_data_t *pg = NODE_DATA(dev->id);
+	numa_hit = 0; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/base/node.c:75:
+^Inuma_miss = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: drivers/base/node.c:76:
+^Iinterleave_hit = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: drivers/base/node.c:77:
+^Inuma_foreign = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: drivers/base/node.c:80:
+^Ifor (i = 0; i < MAX_NR_ZONES; i++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: drivers/base/node.c:81:
+^I^Istruct zone *z = &pg->node_zones[i]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: drivers/base/node.c:82:
+^I^Ifor (cpu = 0; cpu < NR_CPUS; cpu++) { $

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: drivers/base/node.c:82:
+		struct zone *z = &pg->node_zones[i]; 
+		for (cpu = 0; cpu < NR_CPUS; cpu++) { 

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#187: FILE: drivers/base/node.c:82:
+		for (cpu = 0; cpu < NR_CPUS; cpu++) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/base/node.c:83:
+^I^I^Istruct per_cpu_pageset *ps = &z->pageset[cpu]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/base/node.c:84:
+^I^I^Inuma_hit += ps->numa_hit; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: drivers/base/node.c:84:
+			struct per_cpu_pageset *ps = &z->pageset[cpu]; 
+			numa_hit += ps->numa_hit; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: drivers/base/node.c:90:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/base/node.c:91:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/base/node.c:92:
+^Ireturn sprintf(buf, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/base/node.c:98:
+^I^I       "other_node %lu\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: drivers/base/node.c:103:
+^I^I       local_node, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/base/node.c:104:
+^I^I       other_node); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/base/node.c:105:
+} $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/base/node.c:106:
+static SYSDEV_ATTR(numastat,S_IRUGO,node_read_numastat,NULL);
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/base/node.c:106:
+static SYSDEV_ATTR(numastat,S_IRUGO,node_read_numastat,NULL);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/base/node.c:106:
+static SYSDEV_ATTR(numastat,S_IRUGO,node_read_numastat,NULL);
                                                       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#211: FILE: drivers/base/node.c:106:
+static SYSDEV_ATTR(numastat,S_IRUGO,node_read_numastat,NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: drivers/base/node.c:126:
+^I^Isysdev_create_file(&node->sysdev, &attr_numastat); $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290269.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 11 warnings, 0 checks, 169 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290269.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
