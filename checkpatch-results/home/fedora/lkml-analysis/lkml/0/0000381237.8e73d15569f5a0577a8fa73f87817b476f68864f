ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#63: FILE: fs/ext2/balloc.c:100:
+	struct buffer_head * bh = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: fs/ext2/balloc.c:321:
+int ext2_new_block_async (struct inode * inode, unsigned long goal,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#77: FILE: fs/ext2/balloc.c:321:
+int ext2_new_block_async (struct inode * inode, unsigned long goal,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: fs/ext2/balloc.c:322:
+int ext2_new_block_async (struct inode * inode, unsigned long goal,
     u32 * prealloc_count, u32 * prealloc_block, int * err)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#99: FILE: fs/ext2/balloc.c:497:
+int ext2_new_block (struct inode * inode, unsigned long goal,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#99: FILE: fs/ext2/balloc.c:497:
+int ext2_new_block (struct inode * inode, unsigned long goal,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: fs/ext2/balloc.c:498:
+int ext2_new_block (struct inode * inode, unsigned long goal,
+    u32 * prealloc_count, u32 * prealloc_block, int * err)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/ext2/balloc.c:498:
+    u32 * prealloc_count, u32 * prealloc_block, int * err)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: fs/ext2/balloc.c:498:
+    u32 * prealloc_count, u32 * prealloc_block, int * err)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: fs/ext2/balloc.c:498:
+    u32 * prealloc_count, u32 * prealloc_block, int * err)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: fs/ext2/balloc.c:498:
+    u32 * prealloc_count, u32 * prealloc_block, int * err)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: fs/ext2/balloc.c:503:
+	do_sync_op(block = ext2_new_block_async(inode, goal, prealloc_count,
+		prealloc_block, err));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: fs/ext2/ext2.h:77:
+extern int ext2_new_block_async (struct inode *, unsigned long,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: fs/ext2/ext2.h:77:
+extern int ext2_new_block_async (struct inode *, unsigned long,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#119: FILE: fs/ext2/ext2.h:77:
+extern int ext2_new_block_async (struct inode *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#119: FILE: fs/ext2/ext2.h:77:
+extern int ext2_new_block_async (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32 *' should also have an identifier name
#119: FILE: fs/ext2/ext2.h:77:
+extern int ext2_new_block_async (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32 *' should also have an identifier name
#119: FILE: fs/ext2/ext2.h:77:
+extern int ext2_new_block_async (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#119: FILE: fs/ext2/ext2.h:77:
+extern int ext2_new_block_async (struct inode *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: fs/ext2/ext2.h:78:
+extern int ext2_new_block_async (struct inode *, unsigned long,
+			   __u32 *, __u32 *, int *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: fs/ext2/inode.c:101:
+static int ext2_alloc_block_async (struct inode * inode, unsigned long goal, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: fs/ext2/inode.c:101:
+static int ext2_alloc_block_async (struct inode * inode, unsigned long goal, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: fs/ext2/inode.c:101:
+static int ext2_alloc_block_async (struct inode * inode, unsigned long goal, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: fs/ext2/inode.c:102:
+static int ext2_alloc_block_async (struct inode * inode, unsigned long goal, 
+	int *err)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: fs/ext2/inode.c:127:
+^I^I^Iresult = ext2_new_block_async (inode, goal, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: fs/ext2/inode.c:127:
+			result = ext2_new_block_async (inode, goal, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: fs/ext2/inode.c:128:
+			result = ext2_new_block_async (inode, goal, 
 				 &ei->i_prealloc_count,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: fs/ext2/inode.c:134:
+	result = ext2_new_block_async (inode, goal, 0, 0, err);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: fs/ext2/inode.c:139:
+static int ext2_alloc_block (struct inode * inode, unsigned long goal, int *err)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: fs/ext2/inode.c:139:
+static int ext2_alloc_block (struct inode * inode, unsigned long goal, int *err)

CHECK:CAMELCASE: Avoid CamelCase: <Indirect>
#171: FILE: fs/ext2/inode.c:264:
+static Indirect *ext2_get_branch_async(struct inode *inode,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: fs/ext2/inode.c:265:
+static Indirect *ext2_get_branch_async(struct inode *inode,
 				 int depth,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: fs/ext2/inode.c:312:
+^Ido_sync_op(p = ext2_get_branch_async(inode, depth, offsets, chain, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: fs/ext2/inode.c:313:
+	do_sync_op(p = ext2_get_branch_async(inode, depth, offsets, chain, 
+		err));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: fs/ext2/inode.c:432:
+static int ext2_alloc_branch_async(struct inode *inode,
 			     int num,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: fs/ext2/inode.c:491:
+^Ido_sync_op(err = ext2_alloc_branch_async(inode, num, goal, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: fs/ext2/inode.c:492:
+	do_sync_op(err = ext2_alloc_branch_async(inode, num, goal, 
+		offsets, branch));

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#255: FILE: fs/ext2/inode.c:569:
+static int ext2_get_block_async(struct inode *inode, sector_t iblock, struct buffer_head *bh_result, int create)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: fs/ext2/inode.c:621:
+	err = ext2_alloc_branch_async(inode, left, goal,
 					offsets+(partial-chain), partial);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#290: FILE: fs/ext2/inode.c:639:
+static int ext2_get_block(struct inode *inode, sector_t iblock, struct buffer_head *bh_result, int create)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: fs/ext2/inode.c:643:
+^Ido_sync_op(err = ext2_get_block_async(inode, iblock, bh_result, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: fs/ext2/inode.c:644:
+	do_sync_op(err = ext2_get_block_async(inode, iblock, bh_result, 
+		create));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: fs/ext2/inode.c:669:
+	return block_prepare_write(page,from,to,ext2_get_block_async);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: fs/ext2/inode.c:669:
+	return block_prepare_write(page,from,to,ext2_get_block_async);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: fs/ext2/inode.c:669:
+	return block_prepare_write(page,from,to,ext2_get_block_async);
 	                                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 15 warnings, 14 checks, 246 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
