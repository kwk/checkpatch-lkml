WARNING:TYPO_SPELLING: 'adapater' may be misspelled - perhaps 'adapter'?
#15: 
Subject: [PATCH] s390: zfcp host adapater.
                                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'adapater' may be misspelled - perhaps 'adapter'?
#24: 
[PATCH] s390: zfcp host adapater.
                        ^^^^^^^^

WARNING:TYPO_SPELLING: 'adapater' may be misspelled - perhaps 'adapter'?
#28: 
zfcp host adapater changes:
          ^^^^^^^^

WARNING:TYPO_SPELLING: 'unsused' may be misspelled - perhaps 'unused'?
#36: 
 - Remove unsused code, types and definitions.
          ^^^^^^^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#63: FILE: drivers/s390/scsi/zfcp_aux.c:32:
+#define ZFCP_AUX_REVISION "$Revision: 1.129 $"

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPLIT_STRING: quoted string split across lines
#81: FILE: drivers/s390/scsi/zfcp_aux.c:98:
 		 "log levels, 8 nibbles: "
+		 "FC ERP QDIO CIO Config FSF SCSI Other, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adapter"
#109: FILE: drivers/s390/scsi/zfcp_aux.c:271:
+	if (adapter == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adapter"
#146: FILE: drivers/s390/scsi/zfcp_aux.c:475:
+	if (adapter == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#181: FILE: drivers/s390/scsi/zfcp_aux.c:579:
+	BUG_ON(sg_list == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg_list"
#181: FILE: drivers/s390/scsi/zfcp_aux.c:579:
+	BUG_ON(sg_list == NULL);

CHECK:SPACING: No space is necessary after a cast
#190: FILE: drivers/s390/scsi/zfcp_aux.c:595:
+		address = (void *) get_zeroed_page(GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#244: FILE: drivers/s390/scsi/zfcp_aux.c:648:
+		BUG_ON(p == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#244: FILE: drivers/s390/scsi/zfcp_aux.c:648:
+		BUG_ON(p == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#272: FILE: drivers/s390/scsi/zfcp_aux.c:673:
+	BUG_ON(sg_list == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg_list"
#272: FILE: drivers/s390/scsi/zfcp_aux.c:673:
+	BUG_ON(sg_list == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#309: FILE: drivers/s390/scsi/zfcp_aux.c:711:
+	BUG_ON(sg_list == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg_list"
#309: FILE: drivers/s390/scsi/zfcp_aux.c:711:
+	BUG_ON(sg_list == NULL);

CHECK:SPACING: No space is necessary after a cast
#318: FILE: drivers/s390/scsi/zfcp_aux.c:717:
+		length = min((unsigned int) size, sg->length);

WARNING:MINMAX: min() should probably be min_t(unsigned int, size, sg->length)
#318: FILE: drivers/s390/scsi/zfcp_aux.c:717:
+		length = min((unsigned int) size, sg->length);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->d_id == d_id'
#385: FILE: drivers/s390/scsi/zfcp_aux.c:802:
+		if ((port->d_id == d_id) &&
 		    !atomic_test_mask(ZFCP_STATUS_COMMON_REMOVE, &port->status))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'adpater' may be misspelled - perhaps 'adapter'?
#397: FILE: drivers/s390/scsi/zfcp_aux.c:813:
+ * zfcp_get_adapter_by_busid - find adpater in adapter list by bus_id
                                     ^^^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#443: FILE: drivers/s390/scsi/zfcp_aux.c:1108:
+	return;
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ct->status != 0'
#610: FILE: drivers/s390/scsi/zfcp_aux.c:1779:
+	if ((ct->status != 0) || zfcp_check_ct_response(&ct_iu_resp->header)) {

WARNING:SPLIT_STRING: quoted string split across lines
#640: FILE: drivers/s390/scsi/zfcp_aux.c:1809:
+	ZFCP_LOG_NORMAL("warning: failed gid_pn nameserver request for wwpn "
+			"0x%016Lx for adapter %s\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#640: FILE: drivers/s390/scsi/zfcp_aux.c:1809:
+			"0x%016Lx for adapter %s\n",

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#653: FILE: drivers/s390/scsi/zfcp_def.h:36:
+#define ZFCP_DEF_REVISION "$Revision: 1.91 $"

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#693: FILE: drivers/s390/scsi/zfcp_def.h:161:
+#define ZFCP_FSF_REQUEST_TIMEOUT (60*HZ);
                                     ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#693: FILE: drivers/s390/scsi/zfcp_def.h:161:
+#define ZFCP_FSF_REQUEST_TIMEOUT (60*HZ);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#797: FILE: drivers/s390/scsi/zfcp_def.h:506:
+		printk(KERN_ERR ZFCP_NAME": " fmt, ##args); \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#797: FILE: drivers/s390/scsi/zfcp_def.h:506:
+		printk(KERN_ERR ZFCP_NAME": " fmt, ##args); \

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#808: FILE: drivers/s390/scsi/zfcp_def.h:516:
+		printk(KERN_ERR ZFCP_NAME": " fmt, ##args); \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#808: FILE: drivers/s390/scsi/zfcp_def.h:516:
+		printk(KERN_ERR ZFCP_NAME": " fmt, ##args); \

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#984: FILE: drivers/s390/scsi/zfcp_erp.c:34:
+#define ZFCP_ERP_REVISION "$Revision: 1.65 $"

CHECK:SPACING: No space is necessary after a cast
#1007: FILE: drivers/s390/scsi/zfcp_erp.c:144:
+	adapter = (struct zfcp_adapter *) data;

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1118: FILE: drivers/s390/scsi/zfcp_ext.h:34:
+#define ZFCP_EXT_REVISION "$Revision: 1.57 $"

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1130: FILE: drivers/s390/scsi/zfcp_ext.h:53:
+extern struct zfcp_unit *zfcp_get_unit_by_lun(struct zfcp_port *, fcp_lun_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_port *' should also have an identifier name
#1130: FILE: drivers/s390/scsi/zfcp_ext.h:53:
+extern struct zfcp_unit *zfcp_get_unit_by_lun(struct zfcp_port *, fcp_lun_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'fcp_lun_t' should also have an identifier name
#1130: FILE: drivers/s390/scsi/zfcp_ext.h:53:
+extern struct zfcp_unit *zfcp_get_unit_by_lun(struct zfcp_port *, fcp_lun_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1131: FILE: drivers/s390/scsi/zfcp_ext.h:54:
+extern struct zfcp_port *zfcp_get_port_by_wwpn(struct zfcp_adapter *, wwn_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_adapter *' should also have an identifier name
#1131: FILE: drivers/s390/scsi/zfcp_ext.h:54:
+extern struct zfcp_port *zfcp_get_port_by_wwpn(struct zfcp_adapter *, wwn_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wwn_t' should also have an identifier name
#1131: FILE: drivers/s390/scsi/zfcp_ext.h:54:
+extern struct zfcp_port *zfcp_get_port_by_wwpn(struct zfcp_adapter *, wwn_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1132: FILE: drivers/s390/scsi/zfcp_ext.h:55:
+extern struct zfcp_port *zfcp_get_port_by_did(struct zfcp_adapter *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_adapter *' should also have an identifier name
#1132: FILE: drivers/s390/scsi/zfcp_ext.h:55:
+extern struct zfcp_port *zfcp_get_port_by_did(struct zfcp_adapter *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1132: FILE: drivers/s390/scsi/zfcp_ext.h:55:
+extern struct zfcp_port *zfcp_get_port_by_did(struct zfcp_adapter *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1133: FILE: drivers/s390/scsi/zfcp_ext.h:56:
+struct zfcp_adapter *zfcp_get_adapter_by_busid(char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1139: FILE: drivers/s390/scsi/zfcp_ext.h:61:
+extern struct zfcp_port *zfcp_port_enqueue(struct zfcp_adapter *, wwn_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_adapter *' should also have an identifier name
#1139: FILE: drivers/s390/scsi/zfcp_ext.h:61:
+extern struct zfcp_port *zfcp_port_enqueue(struct zfcp_adapter *, wwn_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wwn_t' should also have an identifier name
#1139: FILE: drivers/s390/scsi/zfcp_ext.h:61:
+extern struct zfcp_port *zfcp_port_enqueue(struct zfcp_adapter *, wwn_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1139: FILE: drivers/s390/scsi/zfcp_ext.h:61:
+extern struct zfcp_port *zfcp_port_enqueue(struct zfcp_adapter *, wwn_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1139: FILE: drivers/s390/scsi/zfcp_ext.h:61:
+extern struct zfcp_port *zfcp_port_enqueue(struct zfcp_adapter *, wwn_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1148: FILE: drivers/s390/scsi/zfcp_ext.h:98:
+extern int  zfcp_fsf_exchange_port_data(struct zfcp_adapter *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_adapter *' should also have an identifier name
#1148: FILE: drivers/s390/scsi/zfcp_ext.h:98:
+extern int  zfcp_fsf_exchange_port_data(struct zfcp_adapter *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fsf_qtcb_bottom_port *' should also have an identifier name
#1148: FILE: drivers/s390/scsi/zfcp_ext.h:98:
+extern int  zfcp_fsf_exchange_port_data(struct zfcp_adapter *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1152: FILE: drivers/s390/scsi/zfcp_ext.h:102:
+extern void zfcp_fsf_request_timeout_handler(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1152: FILE: drivers/s390/scsi/zfcp_ext.h:102:
+extern void zfcp_fsf_request_timeout_handler(unsigned long);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1173: FILE: drivers/s390/scsi/zfcp_ext.h:141:
+extern int zfcp_scsi_command_async(struct zfcp_adapter *,struct zfcp_unit *,
                                                         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1173: FILE: drivers/s390/scsi/zfcp_ext.h:141:
+extern int zfcp_scsi_command_async(struct zfcp_adapter *,struct zfcp_unit *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_adapter *' should also have an identifier name
#1173: FILE: drivers/s390/scsi/zfcp_ext.h:141:
+extern int zfcp_scsi_command_async(struct zfcp_adapter *,struct zfcp_unit *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_unit *' should also have an identifier name
#1173: FILE: drivers/s390/scsi/zfcp_ext.h:141:
+extern int zfcp_scsi_command_async(struct zfcp_adapter *,struct zfcp_unit *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#1173: FILE: drivers/s390/scsi/zfcp_ext.h:141:
+extern int zfcp_scsi_command_async(struct zfcp_adapter *,struct zfcp_unit *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timer_list *' should also have an identifier name
#1173: FILE: drivers/s390/scsi/zfcp_ext.h:141:
+extern int zfcp_scsi_command_async(struct zfcp_adapter *,struct zfcp_unit *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1175: FILE: drivers/s390/scsi/zfcp_ext.h:143:
+extern int zfcp_scsi_command_sync(struct zfcp_unit *, struct scsi_cmnd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_unit *' should also have an identifier name
#1175: FILE: drivers/s390/scsi/zfcp_ext.h:143:
+extern int zfcp_scsi_command_sync(struct zfcp_unit *, struct scsi_cmnd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#1175: FILE: drivers/s390/scsi/zfcp_ext.h:143:
+extern int zfcp_scsi_command_sync(struct zfcp_unit *, struct scsi_cmnd *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timer_list *' should also have an identifier name
#1175: FILE: drivers/s390/scsi/zfcp_ext.h:143:
+extern int zfcp_scsi_command_sync(struct zfcp_unit *, struct scsi_cmnd *,

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1188: FILE: drivers/s390/scsi/zfcp_fsf.c:32:
+#define ZFCP_FSF_C_REVISION "$Revision: 1.65 $"

WARNING:SPLIT_STRING: quoted string split across lines
#1205: FILE: drivers/s390/scsi/zfcp_fsf.c:688:
+		ZFCP_LOG_NORMAL("error: not enough SBALs for data transfer "
+				"(adapter %s)\n",

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1217: FILE: drivers/s390/scsi/zfcp_fsf.c:786:
+	case FSF_QTCB_EXCHANGE_PORT_DATA :
 	                                 ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "send_ct->handler"
#1259: FILE: drivers/s390/scsi/zfcp_fsf.c:1653:
+	if (send_ct->handler != NULL)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1303: FILE: drivers/s390/scsi/zfcp_fsf.c:2208:
+	volatile struct qdio_buffer_element *sbale;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1306: FILE: drivers/s390/scsi/zfcp_fsf.c:2211:
+        struct zfcp_fsf_req *fsf_req;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1306: FILE: drivers/s390/scsi/zfcp_fsf.c:2211:
+        struct zfcp_fsf_req *fsf_req;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1309: FILE: drivers/s390/scsi/zfcp_fsf.c:2214:
+        if(!(adapter->supported_features & FSF_FEATURE_HBAAPI_MANAGEMENT)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1309: FILE: drivers/s390/scsi/zfcp_fsf.c:2214:
+        if(!(adapter->supported_features & FSF_FEATURE_HBAAPI_MANAGEMENT)){$

ERROR:SPACING: space required before the open brace '{'
#1309: FILE: drivers/s390/scsi/zfcp_fsf.c:2214:
+        if(!(adapter->supported_features & FSF_FEATURE_HBAAPI_MANAGEMENT)){

ERROR:SPACING: space required before the open parenthesis '('
#1309: FILE: drivers/s390/scsi/zfcp_fsf.c:2214:
+        if(!(adapter->supported_features & FSF_FEATURE_HBAAPI_MANAGEMENT)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1311: FILE: drivers/s390/scsi/zfcp_fsf.c:2216:
+                              "command not supported by adapter %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: drivers/s390/scsi/zfcp_fsf.c:2216:
+                              "command not supported by adapter %s\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#1311: FILE: drivers/s390/scsi/zfcp_fsf.c:2216:
+		ZFCP_LOG_INFO("error: exchange port data "
+                              "command not supported by adapter %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1313: FILE: drivers/s390/scsi/zfcp_fsf.c:2218:
+                return -EOPNOTSUPP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: drivers/s390/scsi/zfcp_fsf.c:2218:
+                return -EOPNOTSUPP;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1314: FILE: drivers/s390/scsi/zfcp_fsf.c:2219:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: drivers/s390/scsi/zfcp_fsf.c:2219:
+        }$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*timer)...) over kmalloc(sizeof(struct timer_list)...)
#1316: FILE: drivers/s390/scsi/zfcp_fsf.c:2221:
+	timer = kmalloc(sizeof(struct timer_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#1322: FILE: drivers/s390/scsi/zfcp_fsf.c:2227:
+                                     0, 0, &lock_flags, &fsf_req);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1322: FILE: drivers/s390/scsi/zfcp_fsf.c:2227:
+	retval = zfcp_fsf_req_create(adapter, FSF_QTCB_EXCHANGE_PORT_DATA,
+                                     0, 0, &lock_flags, &fsf_req);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: drivers/s390/scsi/zfcp_fsf.c:2227:
+                                     0, 0, &lock_flags, &fsf_req);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1325: FILE: drivers/s390/scsi/zfcp_fsf.c:2230:
+                              "exchange port data request for"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: drivers/s390/scsi/zfcp_fsf.c:2230:
+                              "exchange port data request for"$

WARNING:SPLIT_STRING: quoted string split across lines
#1325: FILE: drivers/s390/scsi/zfcp_fsf.c:2230:
+		ZFCP_LOG_INFO("error: Out of resources. Could not create an "
+                              "exchange port data request for"

ERROR:CODE_INDENT: code indent should use tabs where possible
#1326: FILE: drivers/s390/scsi/zfcp_fsf.c:2231:
+                              "the adapter %s.\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1326: FILE: drivers/s390/scsi/zfcp_fsf.c:2231:
+                              "the adapter %s.\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#1326: FILE: drivers/s390/scsi/zfcp_fsf.c:2231:
+                              "exchange port data request for"
+                              "the adapter %s.\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#1326: FILE: drivers/s390/scsi/zfcp_fsf.c:2231:
+                              "exchange port data request for"
+                              "the adapter %s.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1334: FILE: drivers/s390/scsi/zfcp_fsf.c:2239:
+        sbale[0].flags |= SBAL_FLAGS0_TYPE_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1334: FILE: drivers/s390/scsi/zfcp_fsf.c:2239:
+        sbale[0].flags |= SBAL_FLAGS0_TYPE_READ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1335: FILE: drivers/s390/scsi/zfcp_fsf.c:2240:
+        sbale[1].flags |= SBAL_FLAGS_LAST_ENTRY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1335: FILE: drivers/s390/scsi/zfcp_fsf.c:2240:
+        sbale[1].flags |= SBAL_FLAGS_LAST_ENTRY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1337: FILE: drivers/s390/scsi/zfcp_fsf.c:2242:
+        fsf_req->data.port_data = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: drivers/s390/scsi/zfcp_fsf.c:2242:
+        fsf_req->data.port_data = data;$

CHECK:SPACING: No space is necessary after a cast
#1341: FILE: drivers/s390/scsi/zfcp_fsf.c:2246:
+	timer->data = (unsigned long) adapter;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1347: FILE: drivers/s390/scsi/zfcp_fsf.c:2252:
+                              "command on the adapter %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: drivers/s390/scsi/zfcp_fsf.c:2252:
+                              "command on the adapter %s\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#1347: FILE: drivers/s390/scsi/zfcp_fsf.c:2252:
+		ZFCP_LOG_INFO("error: Could not send an exchange port data "
+                              "command on the adapter %s\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1370: FILE: drivers/s390/scsi/zfcp_fsf.c:2275:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1385: FILE: drivers/s390/scsi/zfcp_fsf.c:2290:
+        case FSF_GOOD :$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: drivers/s390/scsi/zfcp_fsf.c:2290:
+        case FSF_GOOD :$

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1385: FILE: drivers/s390/scsi/zfcp_fsf.c:2290:
+        case FSF_GOOD :
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1386: FILE: drivers/s390/scsi/zfcp_fsf.c:2291:
+                ZFCP_LOG_FLAGS(2,"FSF_GOOD\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: drivers/s390/scsi/zfcp_fsf.c:2291:
+                ZFCP_LOG_FLAGS(2,"FSF_GOOD\n");$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1386: FILE: drivers/s390/scsi/zfcp_fsf.c:2291:
+                ZFCP_LOG_FLAGS(2,"FSF_GOOD\n");
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1387: FILE: drivers/s390/scsi/zfcp_fsf.c:2292:
+                bottom = &fsf_req->qtcb->bottom.port;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: drivers/s390/scsi/zfcp_fsf.c:2292:
+                bottom = &fsf_req->qtcb->bottom.port;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1388: FILE: drivers/s390/scsi/zfcp_fsf.c:2293:
+                memcpy(data, bottom, sizeof(*data));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1388: FILE: drivers/s390/scsi/zfcp_fsf.c:2293:
+                memcpy(data, bottom, sizeof(*data));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: drivers/s390/scsi/zfcp_fsf.c:2294:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: drivers/s390/scsi/zfcp_fsf.c:2294:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1391: FILE: drivers/s390/scsi/zfcp_fsf.c:2296:
+        default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1393: FILE: drivers/s390/scsi/zfcp_fsf.c:2298:
+                debug_event(fsf_req->adapter->erp_dbf, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1393: FILE: drivers/s390/scsi/zfcp_fsf.c:2298:
+                debug_event(fsf_req->adapter->erp_dbf, 0,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1398: FILE: drivers/s390/scsi/zfcp_fsf.c:2303:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1426: FILE: drivers/s390/scsi/zfcp_fsf.c:3415:
+			       struct scsi_cmnd * scsi_cmnd,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1542: FILE: drivers/s390/scsi/zfcp_scsi.c:34:
+#define ZFCP_SCSI_REVISION "$Revision: 1.68 $"

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1599: FILE: drivers/s390/scsi/zfcp_scsi.c:334:
+	if ((ret == 0) && (scpnt->result == 0))
 	wait_for_completion(&wait);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret == 0'
#1599: FILE: drivers/s390/scsi/zfcp_scsi.c:334:
+	if ((ret == 0) && (scpnt->result == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scpnt->result == 0'
#1599: FILE: drivers/s390/scsi/zfcp_scsi.c:334:
+	if ((ret == 0) && (scpnt->result == 0))

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#1602: FILE: drivers/s390/scsi/zfcp_scsi.c:337:
+	scpnt->SCp.ptr = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1620: FILE: drivers/s390/scsi/zfcp_sysfs_adapter.c:26:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1624: FILE: drivers/s390/scsi/zfcp_sysfs_adapter.c:29:
+#define ZFCP_SYSFS_ADAPTER_C_REVISION "$Revision: 1.37 $"

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1641: FILE: drivers/s390/scsi/zfcp_sysfs_port.c:26:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1645: FILE: drivers/s390/scsi/zfcp_sysfs_port.c:29:
+#define ZFCP_SYSFS_PORT_C_REVISION "$Revision: 1.44 $"

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255110.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 72 warnings, 31 checks, 1500 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255110.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
