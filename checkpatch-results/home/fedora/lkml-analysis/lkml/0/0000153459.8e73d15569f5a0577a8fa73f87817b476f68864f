CHECK:SPACING: No space is necessary after a cast
#53: FILE: arch/i386/kernel/setup.c:1122:
+	high_memory = (void *) __va(highstart_pfn * PAGE_SIZE - 1) + 1;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#55: FILE: arch/i386/kernel/setup.c:1124:
+	high_memory = (void *) __va(max_low_pfn * PAGE_SIZE - 1) + 1;

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#110: FILE: arch/i386/mm/pgtable.c:150:
address)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required before the open parenthesis '('
#161: FILE: arch/x86_64/mm/ioremap.c:269:
+	if(p)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: include/linux/vmalloc.h:46:
+extern void free_vm_area(struct vm_struct *area);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#197: FILE: mm/page_alloc.c:992:
+		/* This exists solely for page table allocation; pages
+		   allocated this way must never be freed! */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#197: FILE: mm/page_alloc.c:992:
+		   allocated this way must never be freed! */

CHECK:SPACING: No space is necessary after a cast
#201: FILE: mm/page_alloc.c:996:
+		return (unsigned long) address;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#242: FILE: mm/vmalloc.c:192:
+	BUG_ON(flags & VM_BOOTMEM);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#243: FILE: mm/vmalloc.c:193:
+	if (likely(malloc_sizes->cs_cachep))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#245: FILE: mm/vmalloc.c:195:
+	else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153459.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 6 checks, 181 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153459.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
