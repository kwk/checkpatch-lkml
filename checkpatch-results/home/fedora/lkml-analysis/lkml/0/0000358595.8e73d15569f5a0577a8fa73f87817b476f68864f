WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -u --recursive --new-file linux-2.5.73-05-createintent/drivers/block/floppy.c linux-2.5.73-06-permission/drivers/block/floppy.c

ERROR:SPACING: space required after that ',' (ctx:VxV)
#45: FILE: drivers/block/floppy.c:3770:
+	    (inode->i_sb && (permission(inode,2, NULL) == 0)))
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#57: FILE: fs/cifs/cifsfs.c:181:
+static int cifs_permission(struct inode * inode, int mask, struct nameidata *nd)
                                                                              ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#57: FILE: fs/cifs/cifsfs.c:181:
+static int cifs_permission(struct inode * inode, int mask, struct nameidata *nd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#69: FILE: fs/coda/dir.c:150:
+int coda_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#82: FILE: fs/coda/pioctl.c:28:
+				 struct nameidata *nd);
 				                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#92: FILE: fs/coda/pioctl.c:46:
+				 struct nameidata *nd)
 				                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#104: FILE: fs/exec.c:129:
+	error = permission(nd.dentry->d_inode, MAY_READ | MAY_EXEC, &nd);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#104: FILE: fs/exec.c:129:
+	error = permission(nd.dentry->d_inode, MAY_READ | MAY_EXEC, &nd);
 	                                                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#113: FILE: fs/exec.c:465:
+			int err = permission(inode, MAY_EXEC, &nd);
 			                                       ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: fs/exec.c:795:
+	    permission(bprm->file->f_dentry->d_inode,MAY_READ, NULL))
 	                                            ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#134: FILE: fs/ext2/acl.c:312:
+ext2_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                  ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: fs/ext2/acl.h:62:
+extern int ext2_permission (struct inode *, int, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: fs/ext2/acl.h:62:
+extern int ext2_permission (struct inode *, int, struct nameidata *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#146: FILE: fs/ext2/acl.h:62:
+extern int ext2_permission (struct inode *, int, struct nameidata *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#146: FILE: fs/ext2/acl.h:62:
+extern int ext2_permission (struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#146: FILE: fs/ext2/acl.h:62:
+extern int ext2_permission (struct inode *, int, struct nameidata *);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#179: FILE: fs/ext3/acl.c:315:
+ext3_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                  ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: fs/ext3/acl.h:62:
+extern int ext3_permission (struct inode *, int, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: fs/ext3/acl.h:62:
+extern int ext3_permission (struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#191: FILE: fs/ext3/acl.h:62:
+extern int ext3_permission (struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#191: FILE: fs/ext3/acl.h:62:
+extern int ext3_permission (struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#191: FILE: fs/ext3/acl.h:62:
+extern int ext3_permission (struct inode *, int, struct nameidata *);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#236: FILE: fs/intermezzo/dir.c:84:
+extern int presto_permission(struct inode *inode, int mask, struct nameidata *nd);
                                                                               ^^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#236: FILE: fs/intermezzo/dir.c:84:
+extern int presto_permission(struct inode *inode, int mask, struct nameidata *nd);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#245: FILE: fs/intermezzo/dir.c:833:
+int presto_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#254: FILE: fs/intermezzo/dir.c:855:
+                        return fiops->permission(inode, mask, nd);
                                                               ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: fs/intermezzo/dir.c:855:
+                        return fiops->permission(inode, mask, nd);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: fs/intermezzo/dir.c:855:
+                        return fiops->permission(inode, mask, nd);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#259: FILE: fs/intermezzo/dir.c:859:
+                        return diops->permission(inode, mask, nd);
                                                               ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: fs/intermezzo/dir.c:859:
+                        return diops->permission(inode, mask, nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: fs/intermezzo/dir.c:859:
+                        return diops->permission(inode, mask, nd);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#268: FILE: fs/intermezzo/dir.c:870:
+        rc = permission(inode, mask, nd);
                                      ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: fs/intermezzo/dir.c:870:
+        rc = permission(inode, mask, nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: fs/intermezzo/dir.c:870:
+        rc = permission(inode, mask, nd);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#280: FILE: fs/intermezzo/file.c:56:
+extern int presto_permission(struct inode *inode, int mask, struct nameidata *nd);
                                                                               ^^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#280: FILE: fs/intermezzo/file.c:56:
+extern int presto_permission(struct inode *inode, int mask, struct nameidata *nd);

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: fs/intermezzo/vfs.c:137:
+        error = permission(dir,MAY_WRITE | MAY_EXEC, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: fs/intermezzo/vfs.c:137:
+        error = permission(dir,MAY_WRITE | MAY_EXEC, NULL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#292: FILE: fs/intermezzo/vfs.c:137:
+        error = permission(dir,MAY_WRITE | MAY_EXEC, NULL);
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: fs/intermezzo/vfs.c:161:
+        return permission(dir,MAY_WRITE | MAY_EXEC, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: fs/intermezzo/vfs.c:161:
+        return permission(dir,MAY_WRITE | MAY_EXEC, NULL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: fs/intermezzo/vfs.c:161:
+        return permission(dir,MAY_WRITE | MAY_EXEC, NULL);
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: fs/intermezzo/vfs.c:1843:
+                error = permission(old_dentry->d_inode, MAY_WRITE, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: fs/intermezzo/vfs.c:1843:
+                error = permission(old_dentry->d_inode, MAY_WRITE, NULL);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#322: FILE: fs/jfs/acl.c:211:
+int jfs_permission(struct inode * inode, int mask, struct nameidata *nd)
                                                                      ^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#322: FILE: fs/jfs/acl.c:211:
 }
+int jfs_permission(struct inode * inode, int mask, struct nameidata *nd)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#322: FILE: fs/jfs/acl.c:211:
+int jfs_permission(struct inode * inode, int mask, struct nameidata *nd)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#334: FILE: fs/jfs/jfs_acl.h:28:
+int jfs_permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#334: FILE: fs/jfs/jfs_acl.h:28:
+int jfs_permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#334: FILE: fs/jfs/jfs_acl.h:28:
+int jfs_permission(struct inode *, int, struct nameidata *);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#367: FILE: fs/namei.c:206:
+int permission(struct inode * inode,int mask, struct nameidata *nd)
                                                                 ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: fs/namei.c:206:
+int permission(struct inode * inode,int mask, struct nameidata *nd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: fs/namei.c:206:
+int permission(struct inode * inode,int mask, struct nameidata *nd)
                                    ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#376: FILE: fs/namei.c:215:
+		retval = inode->i_op->permission(inode, submask, nd);
 		                                                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#385: FILE: fs/namei.c:591:
+			err = permission(inode, MAY_EXEC, nd);
 			                                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#394: FILE: fs/namei.c:879:
+	err = permission(inode, MAY_EXEC, nd);
 	                                  ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: fs/namei.c:999:
+static inline int may_delete(struct inode *dir,struct dentry *victim,int isdir)
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: fs/namei.c:999:
+static inline int may_delete(struct inode *dir,struct dentry *victim,int isdir)
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: fs/namei.c:1004:
+	error = permission(dir,MAY_WRITE | MAY_EXEC, NULL);
 	                      ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#419: FILE: fs/namei.c:1035:
+			     struct nameidata *nd)
 			                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#426: FILE: fs/namei.c:1041:
+	return permission(dir,MAY_WRITE | MAY_EXEC, nd);
 	                                            ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#426: FILE: fs/namei.c:1041:
+	return permission(dir,MAY_WRITE | MAY_EXEC, nd);
 	                     ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#435: FILE: fs/namei.c:1113:
+	int error = may_create(dir, dentry, nd);
 	                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#444: FILE: fs/namei.c:1149:
+	error = permission(inode, acc_mode, nd);
 	                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#510: FILE: fs/namespace.c:406:
+	if (permission(nd->dentry->d_inode, MAY_WRITE, nd))
 	                                               ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#522: FILE: fs/ncpfs/ioctl.c:43:
+		if ((permission(inode, MAY_WRITE, NULL) != 0)
 		    && (current->uid != server->m.mounted_uid)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#531: FILE: fs/ncpfs/ioctl.c:102:
+			if ((permission(inode, MAY_WRITE, NULL) != 0)
 			    && (current->uid != server->m.mounted_uid)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#540: FILE: fs/ncpfs/ioctl.c:130:
+			if ((permission(inode, MAY_WRITE, NULL) != 0)
 			    && (current->uid != server->m.mounted_uid)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#549: FILE: fs/ncpfs/ioctl.c:158:
+			if (   (permission(inode, MAY_READ, NULL) != 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#549: FILE: fs/ncpfs/ioctl.c:158:
+			if (   (permission(inode, MAY_READ, NULL) != 0)
 			    && (current->uid != server->m.mounted_uid))

ERROR:SPACING: space prohibited after that open parenthesis '('
#558: FILE: fs/ncpfs/ioctl.c:172:
+			if (   (permission(inode, MAY_READ, NULL) != 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#558: FILE: fs/ncpfs/ioctl.c:172:
+			if (   (permission(inode, MAY_READ, NULL) != 0)
 			    && (current->uid != server->m.mounted_uid))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#567: FILE: fs/ncpfs/ioctl.c:252:
+		if ((permission(inode, MAY_WRITE, NULL) != 0)
 		    && (current->uid != server->m.mounted_uid))

ERROR:SPACING: space prohibited after that open parenthesis '('
#576: FILE: fs/ncpfs/ioctl.c:275:
+		if (   (permission(inode, MAY_READ, NULL) != 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#576: FILE: fs/ncpfs/ioctl.c:275:
+		if (   (permission(inode, MAY_READ, NULL) != 0)
 		    && (current->uid != server->m.mounted_uid))

ERROR:SPACING: space prohibited after that open parenthesis '('
#585: FILE: fs/ncpfs/ioctl.c:288:
+			if (   (permission(inode, MAY_WRITE, NULL) != 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#585: FILE: fs/ncpfs/ioctl.c:288:
+			if (   (permission(inode, MAY_WRITE, NULL) != 0)
 			    && (current->uid != server->m.mounted_uid))

ERROR:SPACING: space prohibited after that open parenthesis '('
#594: FILE: fs/ncpfs/ioctl.c:309:
+		if (   (permission(inode, MAY_WRITE, NULL) != 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#594: FILE: fs/ncpfs/ioctl.c:309:
+		if (   (permission(inode, MAY_WRITE, NULL) != 0)
 		    && (current->uid != server->m.mounted_uid))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#603: FILE: fs/ncpfs/ioctl.c:611:
+		if ((permission(inode, MAY_WRITE, NULL) != 0) &&
 				 (current->uid != server->m.mounted_uid))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#604: FILE: fs/ncpfs/ioctl.c:612:
+		if ((permission(inode, MAY_WRITE, NULL) != 0) &&
 				 (current->uid != server->m.mounted_uid))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != server->m.mounted_uid'
#612: FILE: fs/ncpfs/ioctl.c:640:
+		if ((permission(inode, MAY_READ, NULL) != 0)
 		    && (current->uid != server->m.mounted_uid)) {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#624: FILE: fs/nfs/dir.c:1243:
+nfs_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                 ^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXOTH' are not preferred. Consider using octal permissions '0001'.
#636: FILE: fs/nfsd/nfsfh.c:59:
+		err = permission(parent->d_inode, S_IXOTH, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#648: FILE: fs/nfsd/vfs.c:1587:
+	err = permission(inode, acc & (MAY_READ|MAY_WRITE|MAY_EXEC), NULL);
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#648: FILE: fs/nfsd/vfs.c:1587:
+	err = permission(inode, acc & (MAY_READ|MAY_WRITE|MAY_EXEC), NULL);
 	                                                 ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#666: FILE: fs/open.c:222:
+	error = permission(inode,MAY_WRITE,&nd);
 	                                    ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: fs/open.c:222:
+	error = permission(inode,MAY_WRITE,&nd);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#666: FILE: fs/open.c:222:
+	error = permission(inode,MAY_WRITE,&nd);
 	                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#666: FILE: fs/open.c:222:
+	error = permission(inode,MAY_WRITE,&nd);
 	                                   ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#675: FILE: fs/open.c:368:
+		    (error = permission(inode,MAY_WRITE,&nd)) != 0)
 		                                         ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#675: FILE: fs/open.c:368:
+		    (error = permission(inode,MAY_WRITE,&nd)) != 0)
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#675: FILE: fs/open.c:368:
+		    (error = permission(inode,MAY_WRITE,&nd)) != 0)
 		                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#675: FILE: fs/open.c:368:
+		    (error = permission(inode,MAY_WRITE,&nd)) != 0)
 		                                        ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#684: FILE: fs/open.c:413:
+		    (error = permission(inode,MAY_WRITE,&nd)) != 0)
 		                                         ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#684: FILE: fs/open.c:413:
+		    (error = permission(inode,MAY_WRITE,&nd)) != 0)
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#684: FILE: fs/open.c:413:
+		    (error = permission(inode,MAY_WRITE,&nd)) != 0)
 		                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#684: FILE: fs/open.c:413:
+		    (error = permission(inode,MAY_WRITE,&nd)) != 0)
 		                                        ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#693: FILE: fs/open.c:470:
+	res = __user_walk(filename, LOOKUP_FOLLOW|LOOKUP_ACCESS, &nd);
 	                                                          ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#693: FILE: fs/open.c:470:
+	res = __user_walk(filename, LOOKUP_FOLLOW|LOOKUP_ACCESS, &nd);
 	                                         ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#696: FILE: fs/open.c:472:
+		res = permission(nd.dentry->d_inode, mode, &nd);
 		                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#696: FILE: fs/open.c:472:
+		res = permission(nd.dentry->d_inode, mode, &nd);
 		                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#705: FILE: fs/open.c:496:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#705: FILE: fs/open.c:496:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                                                ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#705: FILE: fs/open.c:496:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#705: FILE: fs/open.c:496:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#705: FILE: fs/open.c:496:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                                               ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#723: FILE: fs/open.c:547:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#723: FILE: fs/open.c:547:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                                                ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#723: FILE: fs/open.c:547:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#723: FILE: fs/open.c:547:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#723: FILE: fs/open.c:547:
+	error = permission(nd.dentry->d_inode,MAY_EXEC,&nd);
 	                                               ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#735: FILE: fs/proc/base.c:337:
+static int proc_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#747: FILE: fs/smbfs/file.c:370:
+smb_file_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                      ^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#759: FILE: fs/udf/file.c:191:
+	if ( permission(inode, MAY_READ, NULL) != 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#759: FILE: fs/udf/file.c:191:
+	if ( permission(inode, MAY_READ, NULL) != 0 )

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#772: FILE: fs/xfs/linux/xfs_iops.c:435:
+	struct nameidata *nd)
 	                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#784: FILE: include/linux/coda_linux.h:41:
+int coda_permission(struct inode *inode, int mask, struct nameidata *nd);
                                                                      ^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#796: FILE: include/linux/fs.h:746:
+	int (*permission) (struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#796: FILE: include/linux/fs.h:746:
+	int (*permission) (struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#796: FILE: include/linux/fs.h:746:
+	int (*permission) (struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#796: FILE: include/linux/fs.h:746:
+	int (*permission) (struct inode *, int, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#805: FILE: include/linux/fs.h:1124:
+extern int permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#805: FILE: include/linux/fs.h:1124:
+extern int permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#805: FILE: include/linux/fs.h:1124:
+extern int permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#805: FILE: include/linux/fs.h:1124:
+extern int permission(struct inode *, int, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#828: FILE: include/linux/nfs_fs.h:243:
+extern int nfs_permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#828: FILE: include/linux/nfs_fs.h:243:
+extern int nfs_permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#828: FILE: include/linux/nfs_fs.h:243:
+extern int nfs_permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#828: FILE: include/linux/nfs_fs.h:243:
+extern int nfs_permission(struct inode *, int, struct nameidata *);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#849: FILE: kernel/sysctl.c:1180:
+static int proc_sys_permission(struct inode *inode, int op, struct nameidata *nd)
                                                                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#861: FILE: net/unix/af_unix.c:597:
+		err = permission(nd.dentry->d_inode,MAY_WRITE, &nd);
 		                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#861: FILE: net/unix/af_unix.c:597:
+		err = permission(nd.dentry->d_inode,MAY_WRITE, &nd);
 		                                                ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#861: FILE: net/unix/af_unix.c:597:
+		err = permission(nd.dentry->d_inode,MAY_WRITE, &nd);
 		                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358595.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 74 warnings, 20 checks, 646 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358595.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
