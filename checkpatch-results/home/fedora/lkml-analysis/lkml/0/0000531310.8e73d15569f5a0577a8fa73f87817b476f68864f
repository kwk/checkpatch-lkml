WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
> anything -- the 33/66 MHz values from the PCI specs are only upper limits),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: drivers/pci/pci.c:1117:
+^Iif (l == 0xffffffff || l == 0x00000000 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#99: FILE: drivers/pci/pci.c:1118:
+	if (l == 0xffffffff || l == 0x00000000 
+	 || l == 0x0000ffff || l == 0xffff0000) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: drivers/pci/pci.c:1126:
+		unsigned short st;
+		pci_read_config_word(temp, PCI_STATUS, &st);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#131: FILE: drivers/pci/pci.c:1763:
+	if (!bus) {
+		return -1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#137: FILE: drivers/pci/pci.c:1769:
+		return pci_speed_overrides[bus->number];
+	} else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/pci/pci.c:1778:
+        while (str) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/pci/pci.c:1778:
+        while (str) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: drivers/pci/pci.c:1779:
+                char *k = strchr(str, ',');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/pci/pci.c:1779:
+                char *k = strchr(str, ',');$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: drivers/pci/pci.c:1780:
+                if (k) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#148: FILE: drivers/pci/pci.c:1780:
+                char *k = strchr(str, ',');
+                if (k) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/pci/pci.c:1780:
+                if (k) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#148: FILE: drivers/pci/pci.c:1780:
+                if (k) {
+                        *k++ = '\0';
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/pci/pci.c:1781:
+                        *k++ = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/pci/pci.c:1781:
+                        *k++ = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: drivers/pci/pci.c:1784:
+                if (*str) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/pci/pci.c:1784:
+                if (*str) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: drivers/pci/pci.c:1785:
+                        int bus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/pci/pci.c:1785:
+                        int bus;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/pci/pci.c:1786:
+                        int speed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/pci/pci.c:1786:
+                        int speed;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: drivers/pci/pci.c:1787:
+                        char *endp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/pci/pci.c:1787:
+                        char *endp;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#158: FILE: drivers/pci/pci.c:1790:
+				printk("PCI: bad bus number for "

WARNING:SPLIT_STRING: quoted string split across lines
#159: FILE: drivers/pci/pci.c:1791:
+				printk("PCI: bad bus number for "
+					"pcispeed parameter\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: drivers/pci/pci.c:1795:
+                        bus = simple_strtoul(str, &endp, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/pci/pci.c:1795:
+                        bus = simple_strtoul(str, &endp, 0);$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#163: FILE: drivers/pci/pci.c:1795:
+                        bus = simple_strtoul(str, &endp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: drivers/pci/pci.c:1797:
+                        if (!*endp || !isdigit(*(++endp))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/pci/pci.c:1797:
+                        if (!*endp || !isdigit(*(++endp))) {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#166: FILE: drivers/pci/pci.c:1798:
+				printk("PCI: bad speed for "

WARNING:SPLIT_STRING: quoted string split across lines
#167: FILE: drivers/pci/pci.c:1799:
+				printk("PCI: bad speed for "
+					"pcispeed parameter\n");

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#171: FILE: drivers/pci/pci.c:1803:
+			speed = simple_strtoul(endp, NULL, 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: drivers/pci/pci.c:1805:
+			printk("PCI: setting bus %d speed to %d MHz\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/pci/pci.c:1806:
+			printk("PCI: setting bus %d speed to %d MHz\n",
+				bus, speed);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#185: FILE: drivers/pci/pci.c:1817:
+__setup("pcispeed=", pci_speed_setup);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#195: FILE: include/linux/pci.h:2:
+ *	$Id: pci.h,v 1.1.1.3 2001/04/04 20:08:09 thockin Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531310.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 24 warnings, 3 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531310.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
