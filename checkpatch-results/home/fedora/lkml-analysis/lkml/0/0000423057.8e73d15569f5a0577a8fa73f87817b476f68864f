WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -X dontdiff -Naur linux-linus/arch/i386/Makefile linux-linus2/arch/i386/Makefile

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: arch/i386/oprofile/Makefile:4:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: arch/i386/oprofile/Makefile:9:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: arch/i386/oprofile/Makefile:15:
+ $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#105: FILE: arch/i386/oprofile/init.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: arch/i386/oprofile/init.c:13:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/i386/oprofile/init.c:13:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: arch/i386/oprofile/init.c:19:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/i386/oprofile/init.c:19:
+ $

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#124: FILE: arch/i386/oprofile/init.c:20:
+extern int nmi_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#124: FILE: arch/i386/oprofile/init.c:20:
+extern int nmi_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu);

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#125: FILE: arch/i386/oprofile/init.c:21:
+extern void timer_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: arch/i386/oprofile/init.c:21:
+extern void timer_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#125: FILE: arch/i386/oprofile/init.c:21:
+extern void timer_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#127: FILE: arch/i386/oprofile/init.c:23:
+int __init oprofile_arch_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: arch/i386/oprofile/init.c:23:
+int __init oprofile_arch_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#139: FILE: arch/i386/oprofile/nmi_int.c:1:
+/**

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/thread_info.h> instead of <asm/thread_info.h>
#154: FILE: arch/i386/oprofile/nmi_int.c:16:
+#include <asm/thread_info.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#155: FILE: arch/i386/oprofile/nmi_int.c:17:
+#include <asm/nmi.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/bitops.h> instead of <asm/bitops.h>
#159: FILE: arch/i386/oprofile/nmi_int.c:21:
+#include <asm/bitops.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#160: FILE: arch/i386/oprofile/nmi_int.c:22:
+#include <asm/processor.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: arch/i386/oprofile/nmi_int.c:23:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/i386/oprofile/nmi_int.c:23:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: arch/i386/oprofile/nmi_int.c:26:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/i386/oprofile/nmi_int.c:26:
+ $

WARNING:STATIC_CONST: Move const after static - use 'static const struct op_x86_model_spec'
#165: FILE: arch/i386/oprofile/nmi_int.c:27:
+static struct op_x86_model_spec const * model;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: arch/i386/oprofile/nmi_int.c:27:
+static struct op_x86_model_spec const * model;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/i386/oprofile/nmi_int.c:31:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/i386/oprofile/nmi_int.c:31:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: arch/i386/oprofile/nmi_int.c:35:
+static struct pm_dev * oprofile_pmdev;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: arch/i386/oprofile/nmi_int.c:36:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/i386/oprofile/nmi_int.c:36:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: arch/i386/oprofile/nmi_int.c:41:
+static int oprofile_pm_callback(struct pm_dev * dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: arch/i386/oprofile/nmi_int.c:42:
+static int oprofile_pm_callback(struct pm_dev * dev,
+		pm_request_t rqst, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: arch/i386/oprofile/nmi_int.c:42:
+		pm_request_t rqst, void * data)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#182: FILE: arch/i386/oprofile/nmi_int.c:44:
+	switch (rqst) {
+		case PM_SUSPEND:
[...]
+		case PM_RESUME:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: arch/i386/oprofile/nmi_int.c:54:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/i386/oprofile/nmi_int.c:54:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: arch/i386/oprofile/nmi_int.c:55:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#193: FILE: arch/i386/oprofile/nmi_int.c:55:
+ 
+ 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/i386/oprofile/nmi_int.c:55:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: arch/i386/oprofile/nmi_int.c:57:
+static int nmi_callback(struct pt_regs * regs, int cpu)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#197: FILE: arch/i386/oprofile/nmi_int.c:59:
+	return (model->check_ctrs(cpu, &cpu_msrs[cpu], regs));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: arch/i386/oprofile/nmi_int.c:61:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/i386/oprofile/nmi_int.c:61:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/i386/oprofile/nmi_int.c:62:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#200: FILE: arch/i386/oprofile/nmi_int.c:62:
+ 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/i386/oprofile/nmi_int.c:62:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#201: FILE: arch/i386/oprofile/nmi_int.c:63:
+static void nmi_save_registers(struct op_msrs * msrs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: arch/i386/oprofile/nmi_int.c:66:
+^Iunsigned int const nr_ctrls = model->num_controls; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: arch/i386/oprofile/nmi_int.c:67:
+	struct op_msr_group * counters = &msrs->counters;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: arch/i386/oprofile/nmi_int.c:68:
+	struct op_msr_group * controls = &msrs->controls;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: arch/i386/oprofile/nmi_int.c:73:
+		rdmsr(counters->addrs[i],
+			counters->saved[i].low,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: arch/i386/oprofile/nmi_int.c:76:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/i386/oprofile/nmi_int.c:76:
+ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: arch/i386/oprofile/nmi_int.c:79:
+		rdmsr(controls->addrs[i],
+			controls->saved[i].low,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: arch/i386/oprofile/nmi_int.c:84:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#222: FILE: arch/i386/oprofile/nmi_int.c:84:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/i386/oprofile/nmi_int.c:84:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#223: FILE: arch/i386/oprofile/nmi_int.c:85:
+static void nmi_cpu_setup(void * dummy)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: arch/i386/oprofile/nmi_int.c:88:
+	struct op_msrs * msrs = &cpu_msrs[cpu];

WARNING:LINE_SPACING: Missing a blank line after declarations
#227: FILE: arch/i386/oprofile/nmi_int.c:89:
+	struct op_msrs * msrs = &cpu_msrs[cpu];
+	model->fill_in_addresses(msrs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: arch/i386/oprofile/nmi_int.c:97:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/i386/oprofile/nmi_int.c:97:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#236: FILE: arch/i386/oprofile/nmi_int.c:98:
+ 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#251: FILE: arch/i386/oprofile/nmi_int.c:113:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#252: FILE: arch/i386/oprofile/nmi_int.c:114:
+static void nmi_restore_registers(struct op_msrs * msrs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: arch/i386/oprofile/nmi_int.c:117:
+^Iunsigned int const nr_ctrls = model->num_controls; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: arch/i386/oprofile/nmi_int.c:118:
+	struct op_msr_group * counters = &msrs->counters;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: arch/i386/oprofile/nmi_int.c:119:
+	struct op_msr_group * controls = &msrs->controls;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: arch/i386/oprofile/nmi_int.c:124:
+		wrmsr(controls->addrs[i],
+			controls->saved[i].low,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: arch/i386/oprofile/nmi_int.c:127:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/i386/oprofile/nmi_int.c:127:
+ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/i386/oprofile/nmi_int.c:130:
+		wrmsr(counters->addrs[i],
+			counters->saved[i].low,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: arch/i386/oprofile/nmi_int.c:134:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: arch/i386/oprofile/nmi_int.c:134:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: arch/i386/oprofile/nmi_int.c:135:
+ 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: arch/i386/oprofile/nmi_int.c:136:
+static void nmi_cpu_shutdown(void * dummy)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#277: FILE: arch/i386/oprofile/nmi_int.c:139:
+	struct op_msrs * msrs = &cpu_msrs[cpu];

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: arch/i386/oprofile/nmi_int.c:140:
+	struct op_msrs * msrs = &cpu_msrs[cpu];
+	apic_write(APIC_LVTPC, saved_lvtpc[cpu]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: arch/i386/oprofile/nmi_int.c:144:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: arch/i386/oprofile/nmi_int.c:144:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: arch/i386/oprofile/nmi_int.c:144:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: arch/i386/oprofile/nmi_int.c:153:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#291: FILE: arch/i386/oprofile/nmi_int.c:153:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: arch/i386/oprofile/nmi_int.c:153:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#292: FILE: arch/i386/oprofile/nmi_int.c:154:
+static void nmi_cpu_start(void * dummy)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#294: FILE: arch/i386/oprofile/nmi_int.c:156:
+	struct op_msrs const * msrs = &cpu_msrs[smp_processor_id()];

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: arch/i386/oprofile/nmi_int.c:157:
+	struct op_msrs const * msrs = &cpu_msrs[smp_processor_id()];
+	model->start(msrs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: arch/i386/oprofile/nmi_int.c:159:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: arch/i386/oprofile/nmi_int.c:159:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#298: FILE: arch/i386/oprofile/nmi_int.c:160:
+ 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: arch/i386/oprofile/nmi_int.c:167:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/i386/oprofile/nmi_int.c:167:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: arch/i386/oprofile/nmi_int.c:168:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#306: FILE: arch/i386/oprofile/nmi_int.c:168:
+ 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/i386/oprofile/nmi_int.c:168:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#307: FILE: arch/i386/oprofile/nmi_int.c:169:
+static void nmi_cpu_stop(void * dummy)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: arch/i386/oprofile/nmi_int.c:171:
+	struct op_msrs const * msrs = &cpu_msrs[smp_processor_id()];

WARNING:LINE_SPACING: Missing a blank line after declarations
#310: FILE: arch/i386/oprofile/nmi_int.c:172:
+	struct op_msrs const * msrs = &cpu_msrs[smp_processor_id()];
+	model->stop(msrs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: arch/i386/oprofile/nmi_int.c:174:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: arch/i386/oprofile/nmi_int.c:174:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: arch/i386/oprofile/nmi_int.c:175:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#313: FILE: arch/i386/oprofile/nmi_int.c:175:
+ 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: arch/i386/oprofile/nmi_int.c:175:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: arch/i386/oprofile/nmi_int.c:182:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: arch/i386/oprofile/nmi_int.c:185:
+static int nmi_create_files(struct super_block * sb, struct dentry * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: arch/i386/oprofile/nmi_int.c:185:
+static int nmi_create_files(struct super_block * sb, struct dentry * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: arch/i386/oprofile/nmi_int.c:190:
+		struct dentry * dir;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: arch/i386/oprofile/nmi_int.c:192:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: arch/i386/oprofile/nmi_int.c:192:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: arch/i386/oprofile/nmi_int.c:195:
+^I^Ioprofilefs_create_ulong(sb, dir, "enabled", &counter_config[i].enabled); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: arch/i386/oprofile/nmi_int.c:196:
+^I^Ioprofilefs_create_ulong(sb, dir, "event", &counter_config[i].event); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: arch/i386/oprofile/nmi_int.c:197:
+^I^Ioprofilefs_create_ulong(sb, dir, "count", &counter_config[i].count); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: arch/i386/oprofile/nmi_int.c:198:
+^I^Ioprofilefs_create_ulong(sb, dir, "unit_mask", &counter_config[i].unit_mask); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: arch/i386/oprofile/nmi_int.c:199:
+^I^Ioprofilefs_create_ulong(sb, dir, "kernel", &counter_config[i].kernel); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: arch/i386/oprofile/nmi_int.c:200:
+^I^Ioprofilefs_create_ulong(sb, dir, "user", &counter_config[i].user); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: arch/i386/oprofile/nmi_int.c:206:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/i386/oprofile/nmi_int.c:206:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: arch/i386/oprofile/nmi_int.c:207:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: arch/i386/oprofile/nmi_int.c:207:
+ 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/i386/oprofile/nmi_int.c:207:
+ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: arch/i386/oprofile/nmi_int.c:209:
+^I.create_files ^I= nmi_create_files,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: arch/i386/oprofile/nmi_int.c:210:
+^I.setup ^I^I= nmi_setup,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: arch/i386/oprofile/nmi_int.c:215:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/i386/oprofile/nmi_int.c:215:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: arch/i386/oprofile/nmi_int.c:216:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#354: FILE: arch/i386/oprofile/nmi_int.c:216:
+ 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: arch/i386/oprofile/nmi_int.c:216:
+ $

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#355: FILE: arch/i386/oprofile/nmi_int.c:217:
+int __init nmi_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#355: FILE: arch/i386/oprofile/nmi_int.c:217:
+int __init nmi_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: arch/i386/oprofile/nmi_int.c:222:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: arch/i386/oprofile/nmi_int.c:222:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: arch/i386/oprofile/nmi_int.c:225:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/i386/oprofile/nmi_int.c:225:
+ $

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#364: FILE: arch/i386/oprofile/nmi_int.c:226:
+	switch (vendor) {
+		case X86_VENDOR_AMD:
[...]
+		case X86_VENDOR_INTEL:
[...]
+		default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: arch/i386/oprofile/nmi_int.c:234:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: arch/i386/oprofile/nmi_int.c:234:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: arch/i386/oprofile/nmi_int.c:239:
+^I $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#378: FILE: arch/i386/oprofile/nmi_int.c:240:
+			if (cpu_model > 5) {
[...]
+			} else if (cpu_model > 2) {
[...]
+			} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: arch/i386/oprofile/nmi_int.c:247:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/i386/oprofile/nmi_int.c:247:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#394: FILE: arch/i386/oprofile/nmi_int.c:256:
+	printk(KERN_INFO "oprofile: using NMI interrupt.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#401: FILE: arch/i386/oprofile/op_counter.h:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: arch/i386/oprofile/op_counter.h:9:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/i386/oprofile/op_counter.h:9:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: arch/i386/oprofile/op_counter.h:12:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/i386/oprofile/op_counter.h:12:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: arch/i386/oprofile/op_counter.h:14:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: arch/i386/oprofile/op_counter.h:14:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: arch/i386/oprofile/op_counter.h:19:
+        unsigned long count;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: arch/i386/oprofile/op_counter.h:19:
+        unsigned long count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: arch/i386/oprofile/op_counter.h:20:
+        unsigned long enabled;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: arch/i386/oprofile/op_counter.h:20:
+        unsigned long enabled;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: arch/i386/oprofile/op_counter.h:21:
+        unsigned long event;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: arch/i386/oprofile/op_counter.h:21:
+        unsigned long event;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: arch/i386/oprofile/op_counter.h:22:
+        unsigned long kernel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: arch/i386/oprofile/op_counter.h:22:
+        unsigned long kernel;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: arch/i386/oprofile/op_counter.h:23:
+        unsigned long user;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: arch/i386/oprofile/op_counter.h:23:
+        unsigned long user;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: arch/i386/oprofile/op_counter.h:24:
+        unsigned long unit_mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: arch/i386/oprofile/op_counter.h:24:
+        unsigned long unit_mask;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#434: FILE: arch/i386/oprofile/op_model_athlon.c:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: arch/i386/oprofile/op_model_athlon.c:16:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: arch/i386/oprofile/op_model_athlon.c:16:
+ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#456: FILE: arch/i386/oprofile/op_model_athlon.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#456: FILE: arch/i386/oprofile/op_model_athlon.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#456: FILE: arch/i386/oprofile/op_model_athlon.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)
                          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#456: FILE: arch/i386/oprofile/op_model_athlon.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)
                                                                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#456: FILE: arch/i386/oprofile/op_model_athlon.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#456: FILE: arch/i386/oprofile/op_model_athlon.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: arch/i386/oprofile/op_model_athlon.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(unsigned int)(l), -1);} while (0)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: arch/i386/oprofile/op_model_athlon.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(unsigned int)(l), -1);} while (0)
                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#457: FILE: arch/i386/oprofile/op_model_athlon.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(unsigned int)(l), -1);} while (0)
                                                                                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#457: FILE: arch/i386/oprofile/op_model_athlon.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(unsigned int)(l), -1);} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#457: FILE: arch/i386/oprofile/op_model_athlon.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(unsigned int)(l), -1);} while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#458: FILE: arch/i386/oprofile/op_model_athlon.c:25:
+#define CTR_OVERFLOWED(n) (!((n) & (1U<<31)))
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#460: FILE: arch/i386/oprofile/op_model_athlon.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#460: FILE: arch/i386/oprofile/op_model_athlon.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#460: FILE: arch/i386/oprofile/op_model_athlon.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)
                           ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#460: FILE: arch/i386/oprofile/op_model_athlon.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)
                                                                             ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#460: FILE: arch/i386/oprofile/op_model_athlon.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#460: FILE: arch/i386/oprofile/op_model_athlon.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: arch/i386/oprofile/op_model_athlon.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: arch/i386/oprofile/op_model_athlon.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: arch/i386/oprofile/op_model_athlon.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)
                            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#461: FILE: arch/i386/oprofile/op_model_athlon.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)
                                                                              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#461: FILE: arch/i386/oprofile/op_model_athlon.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#461: FILE: arch/i386/oprofile/op_model_athlon.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr(msrs->controls.addrs[(c)], (l), (h));} while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#462: FILE: arch/i386/oprofile/op_model_athlon.c:29:
+#define CTRL_SET_ACTIVE(n) (n |= (1<<22))
                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#462: FILE: arch/i386/oprofile/op_model_athlon.c:29:
+#define CTRL_SET_ACTIVE(n) (n |= (1<<22))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#463: FILE: arch/i386/oprofile/op_model_athlon.c:30:
+#define CTRL_SET_INACTIVE(n) (n &= ~(1<<22))
                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#463: FILE: arch/i386/oprofile/op_model_athlon.c:30:
+#define CTRL_SET_INACTIVE(n) (n &= ~(1<<22))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#464: FILE: arch/i386/oprofile/op_model_athlon.c:31:
+#define CTRL_CLEAR(x) (x &= (1<<21))
                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#464: FILE: arch/i386/oprofile/op_model_athlon.c:31:
+#define CTRL_CLEAR(x) (x &= (1<<21))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#465: FILE: arch/i386/oprofile/op_model_athlon.c:32:
+#define CTRL_SET_ENABLE(val) (val |= 1<<20)
                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#465: FILE: arch/i386/oprofile/op_model_athlon.c:32:
+#define CTRL_SET_ENABLE(val) (val |= 1<<20)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#466: FILE: arch/i386/oprofile/op_model_athlon.c:33:
+#define CTRL_SET_USR(val,u) (val |= ((u & 1) << 16))
                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#466: FILE: arch/i386/oprofile/op_model_athlon.c:33:
+#define CTRL_SET_USR(val,u) (val |= ((u & 1) << 16))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'u' may be better as '(u)' to avoid precedence issues
#466: FILE: arch/i386/oprofile/op_model_athlon.c:33:
+#define CTRL_SET_USR(val,u) (val |= ((u & 1) << 16))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#467: FILE: arch/i386/oprofile/op_model_athlon.c:34:
+#define CTRL_SET_KERN(val,k) (val |= ((k & 1) << 17))
                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#467: FILE: arch/i386/oprofile/op_model_athlon.c:34:
+#define CTRL_SET_KERN(val,k) (val |= ((k & 1) << 17))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'k' may be better as '(k)' to avoid precedence issues
#467: FILE: arch/i386/oprofile/op_model_athlon.c:34:
+#define CTRL_SET_KERN(val,k) (val |= ((k & 1) << 17))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#468: FILE: arch/i386/oprofile/op_model_athlon.c:35:
+#define CTRL_SET_UM(val, m) (val |= (m << 8))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#468: FILE: arch/i386/oprofile/op_model_athlon.c:35:
+#define CTRL_SET_UM(val, m) (val |= (m << 8))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#469: FILE: arch/i386/oprofile/op_model_athlon.c:36:
+#define CTRL_SET_EVENT(val, e) (val |= e)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: arch/i386/oprofile/op_model_athlon.c:39:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: arch/i386/oprofile/op_model_athlon.c:39:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: arch/i386/oprofile/op_model_athlon.c:53:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#486: FILE: arch/i386/oprofile/op_model_athlon.c:53:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: arch/i386/oprofile/op_model_athlon.c:53:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: arch/i386/oprofile/op_model_athlon.c:58:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: arch/i386/oprofile/op_model_athlon.c:58:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: arch/i386/oprofile/op_model_athlon.c:65:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#500: FILE: arch/i386/oprofile/op_model_athlon.c:67:
+	for (i = 0; i < NUM_COUNTERS; ++i) {
+		CTR_WRITE(1, msrs, i);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: arch/i386/oprofile/op_model_athlon.c:92:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#525: FILE: arch/i386/oprofile/op_model_athlon.c:92:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: arch/i386/oprofile/op_model_athlon.c:92:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: arch/i386/oprofile/op_model_athlon.c:93:
+static int athlon_check_ctrs(unsigned int const cpu, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: arch/i386/oprofile/op_model_athlon.c:94:
+^I^I^I      struct op_msrs const * const msrs, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: arch/i386/oprofile/op_model_athlon.c:94:
+static int athlon_check_ctrs(unsigned int const cpu, 
+			      struct op_msrs const * const msrs, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#533: FILE: arch/i386/oprofile/op_model_athlon.c:100:
+	int i;
+	for (i = 0 ; i < NUM_COUNTERS; ++i) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: arch/i386/oprofile/op_model_athlon.c:111:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#544: FILE: arch/i386/oprofile/op_model_athlon.c:111:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: arch/i386/oprofile/op_model_athlon.c:111:
+ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#549: FILE: arch/i386/oprofile/op_model_athlon.c:116:
+	int i;
+	for (i = 0 ; i < NUM_COUNTERS ; ++i) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#558: FILE: arch/i386/oprofile/op_model_athlon.c:125:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#561: FILE: arch/i386/oprofile/op_model_athlon.c:128:
+	unsigned int low,high;
 	                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#565: FILE: arch/i386/oprofile/op_model_athlon.c:132:
+	 * setting our pm callback */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#573: FILE: arch/i386/oprofile/op_model_athlon.c:140:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#587: FILE: arch/i386/oprofile/op_model_ppro.c:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: arch/i386/oprofile/op_model_ppro.c:16:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: arch/i386/oprofile/op_model_ppro.c:16:
+ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: arch/i386/oprofile/op_model_ppro.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: arch/i386/oprofile/op_model_ppro.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: arch/i386/oprofile/op_model_ppro.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)
                          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#609: FILE: arch/i386/oprofile/op_model_ppro.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)
                                                                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#609: FILE: arch/i386/oprofile/op_model_ppro.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#609: FILE: arch/i386/oprofile/op_model_ppro.c:23:
+#define CTR_READ(l,h,msrs,c) do {rdmsr(msrs->counters.addrs[(c)], (l), (h));} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#610: FILE: arch/i386/oprofile/op_model_ppro.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(u32)(l), -1);} while (0)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#610: FILE: arch/i386/oprofile/op_model_ppro.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(u32)(l), -1);} while (0)
                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#610: FILE: arch/i386/oprofile/op_model_ppro.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(u32)(l), -1);} while (0)
                                                                                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#610: FILE: arch/i386/oprofile/op_model_ppro.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(u32)(l), -1);} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#610: FILE: arch/i386/oprofile/op_model_ppro.c:24:
+#define CTR_WRITE(l,msrs,c) do {wrmsr(msrs->counters.addrs[(c)], -(u32)(l), -1);} while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#611: FILE: arch/i386/oprofile/op_model_ppro.c:25:
+#define CTR_OVERFLOWED(n) (!((n) & (1U<<31)))
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#613: FILE: arch/i386/oprofile/op_model_ppro.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#613: FILE: arch/i386/oprofile/op_model_ppro.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#613: FILE: arch/i386/oprofile/op_model_ppro.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)
                           ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#613: FILE: arch/i386/oprofile/op_model_ppro.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)
                                                                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#613: FILE: arch/i386/oprofile/op_model_ppro.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#613: FILE: arch/i386/oprofile/op_model_ppro.c:27:
+#define CTRL_READ(l,h,msrs,c) do {rdmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#614: FILE: arch/i386/oprofile/op_model_ppro.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#614: FILE: arch/i386/oprofile/op_model_ppro.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#614: FILE: arch/i386/oprofile/op_model_ppro.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)
                            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#614: FILE: arch/i386/oprofile/op_model_ppro.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)
                                                                                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#614: FILE: arch/i386/oprofile/op_model_ppro.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#614: FILE: arch/i386/oprofile/op_model_ppro.c:28:
+#define CTRL_WRITE(l,h,msrs,c) do {wrmsr((msrs->controls.addrs[(c)]), (l), (h));} while (0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#615: FILE: arch/i386/oprofile/op_model_ppro.c:29:
+#define CTRL_SET_ACTIVE(n) (n |= (1<<22))
                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#615: FILE: arch/i386/oprofile/op_model_ppro.c:29:
+#define CTRL_SET_ACTIVE(n) (n |= (1<<22))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#616: FILE: arch/i386/oprofile/op_model_ppro.c:30:
+#define CTRL_SET_INACTIVE(n) (n &= ~(1<<22))
                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#616: FILE: arch/i386/oprofile/op_model_ppro.c:30:
+#define CTRL_SET_INACTIVE(n) (n &= ~(1<<22))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#617: FILE: arch/i386/oprofile/op_model_ppro.c:31:
+#define CTRL_CLEAR(x) (x &= (1<<21))
                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#617: FILE: arch/i386/oprofile/op_model_ppro.c:31:
+#define CTRL_CLEAR(x) (x &= (1<<21))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#618: FILE: arch/i386/oprofile/op_model_ppro.c:32:
+#define CTRL_SET_ENABLE(val) (val |= 1<<20)
                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#618: FILE: arch/i386/oprofile/op_model_ppro.c:32:
+#define CTRL_SET_ENABLE(val) (val |= 1<<20)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#619: FILE: arch/i386/oprofile/op_model_ppro.c:33:
+#define CTRL_SET_USR(val,u) (val |= ((u & 1) << 16))
                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#619: FILE: arch/i386/oprofile/op_model_ppro.c:33:
+#define CTRL_SET_USR(val,u) (val |= ((u & 1) << 16))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'u' may be better as '(u)' to avoid precedence issues
#619: FILE: arch/i386/oprofile/op_model_ppro.c:33:
+#define CTRL_SET_USR(val,u) (val |= ((u & 1) << 16))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#620: FILE: arch/i386/oprofile/op_model_ppro.c:34:
+#define CTRL_SET_KERN(val,k) (val |= ((k & 1) << 17))
                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#620: FILE: arch/i386/oprofile/op_model_ppro.c:34:
+#define CTRL_SET_KERN(val,k) (val |= ((k & 1) << 17))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'k' may be better as '(k)' to avoid precedence issues
#620: FILE: arch/i386/oprofile/op_model_ppro.c:34:
+#define CTRL_SET_KERN(val,k) (val |= ((k & 1) << 17))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#621: FILE: arch/i386/oprofile/op_model_ppro.c:35:
+#define CTRL_SET_UM(val, m) (val |= (m << 8))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#621: FILE: arch/i386/oprofile/op_model_ppro.c:35:
+#define CTRL_SET_UM(val, m) (val |= (m << 8))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#622: FILE: arch/i386/oprofile/op_model_ppro.c:36:
+#define CTRL_SET_EVENT(val, e) (val |= e)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: arch/i386/oprofile/op_model_ppro.c:39:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: arch/i386/oprofile/op_model_ppro.c:39:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: arch/i386/oprofile/op_model_ppro.c:44:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#635: FILE: arch/i386/oprofile/op_model_ppro.c:49:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: arch/i386/oprofile/op_model_ppro.c:61:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#649: FILE: arch/i386/oprofile/op_model_ppro.c:63:
+	for (i = 0; i < NUM_COUNTERS; ++i) {
+		CTR_WRITE(1, msrs, i);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: arch/i386/oprofile/op_model_ppro.c:86:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#672: FILE: arch/i386/oprofile/op_model_ppro.c:86:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: arch/i386/oprofile/op_model_ppro.c:86:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: arch/i386/oprofile/op_model_ppro.c:87:
+static int ppro_check_ctrs(unsigned int const cpu, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: arch/i386/oprofile/op_model_ppro.c:88:
+static int ppro_check_ctrs(unsigned int const cpu, 
+			    struct op_msrs const * const msrs,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: arch/i386/oprofile/op_model_ppro.c:94:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: arch/i386/oprofile/op_model_ppro.c:94:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: arch/i386/oprofile/op_model_ppro.c:106:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#692: FILE: arch/i386/oprofile/op_model_ppro.c:106:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: arch/i386/oprofile/op_model_ppro.c:106:
+ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#695: FILE: arch/i386/oprofile/op_model_ppro.c:109:
+	unsigned int low,high;
 	                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#696: FILE: arch/i386/oprofile/op_model_ppro.c:110:
+	unsigned int low,high;
+	CTRL_READ(low, high, msrs, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#701: FILE: arch/i386/oprofile/op_model_ppro.c:115:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#704: FILE: arch/i386/oprofile/op_model_ppro.c:118:
+	unsigned int low,high;
 	                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#705: FILE: arch/i386/oprofile/op_model_ppro.c:119:
+	unsigned int low,high;
+	CTRL_READ(low, high, msrs, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#710: FILE: arch/i386/oprofile/op_model_ppro.c:124:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#724: FILE: arch/i386/oprofile/op_x86_model.h:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: arch/i386/oprofile/op_x86_model.h:16:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: arch/i386/oprofile/op_x86_model.h:16:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#765: FILE: arch/i386/oprofile/op_x86_model.h:42:
+^Iint (*check_ctrs)(unsigned int const cpu, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: arch/i386/oprofile/op_x86_model.h:43:
+	int (*check_ctrs)(unsigned int const cpu, 
+		struct op_msrs const * const msrs,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#780: FILE: arch/i386/oprofile/timer_int.c:1:
+/**

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: arch/i386/oprofile/timer_int.c:16:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: arch/i386/oprofile/timer_int.c:16:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: arch/i386/oprofile/timer_int.c:18:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: arch/i386/oprofile/timer_int.c:18:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#798: FILE: arch/i386/oprofile/timer_int.c:19:
+static int timer_notify(struct notifier_block * self, unsigned long val, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#798: FILE: arch/i386/oprofile/timer_int.c:19:
+static int timer_notify(struct notifier_block * self, unsigned long val, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#800: FILE: arch/i386/oprofile/timer_int.c:21:
+	struct pt_regs * regs = (struct pt_regs *)data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: arch/i386/oprofile/timer_int.c:23:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: arch/i386/oprofile/timer_int.c:23:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#806: FILE: arch/i386/oprofile/timer_int.c:27:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: arch/i386/oprofile/timer_int.c:27:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#807: FILE: arch/i386/oprofile/timer_int.c:28:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#807: FILE: arch/i386/oprofile/timer_int.c:28:
+ 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: arch/i386/oprofile/timer_int.c:28:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#811: FILE: arch/i386/oprofile/timer_int.c:32:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: arch/i386/oprofile/timer_int.c:32:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#812: FILE: arch/i386/oprofile/timer_int.c:33:
+ 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#818: FILE: arch/i386/oprofile/timer_int.c:39:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#824: FILE: arch/i386/oprofile/timer_int.c:45:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: arch/i386/oprofile/timer_int.c:51:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#830: FILE: arch/i386/oprofile/timer_int.c:51:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: arch/i386/oprofile/timer_int.c:51:
+ $

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#831: FILE: arch/i386/oprofile/timer_int.c:52:
+void __init timer_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#831: FILE: arch/i386/oprofile/timer_int.c:52:
+void __init timer_init(struct oprofile_operations ** ops, enum oprofile_cpu * cpu)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#835: FILE: arch/i386/oprofile/timer_int.c:56:
+	printk(KERN_INFO "oprofile: using timer interrupt.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 153 errors, 93 warnings, 81 checks, 760 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
