WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irlap_cb *' should also have an identifier name
#64: FILE: include/net/irda/irlap.h:217:
+void irlap_status_indication(struct irlap_cb *, int quality_of_link);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct lap_cb *' should also have an identifier name
#76: FILE: include/net/irda/irlmp.h:236:
+void irlmp_status_indication(struct lap_cb *, LINK_STATUS link, LOCK_STATUS lock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: net/irda/irlap.c:620:
+void irlap_status_indication(struct irlap_cb *self, int quality_of_link) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#157: FILE: net/irda/irlap.c:1090:
+		 * so we set it to -10 ;-) Jean II */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#192: FILE: net/irda/irlmp.c:1115:
+/*
+ * Propagate status indication from LAP to LSAPs (via LMP)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: net/irda/irlmp.c:1122:
+^I^I^I     LINK_STATUS link, LOCK_STATUS lock) $

CHECK:SPACING: No space is necessary after a cast
#206: FILE: net/irda/irlmp.c:1128:
+	next = (struct lsap_cb *) hashbin_get_first( self->lsaps);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#206: FILE: net/irda/irlmp.c:1128:
+	next = (struct lsap_cb *) hashbin_get_first( self->lsaps);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#207: FILE: net/irda/irlmp.c:1129:
+	while (next != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "next"
#207: FILE: net/irda/irlmp.c:1129:
+	while (next != NULL ) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#209: FILE: net/irda/irlmp.c:1131:
+		next = (struct lsap_cb *) hashbin_get_next(self->lsaps);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#213: FILE: net/irda/irlmp.c:1135:
+		/*
+		 *  Inform service user if he has requested it

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "curr->notify.status_indication"
#215: FILE: net/irda/irlmp.c:1137:
+		if (curr->notify.status_indication != NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: net/irda/irlmp.c:1138:
+^I^I^Icurr->notify.status_indication(curr->notify.instance, $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#219: FILE: net/irda/irlmp.c:1141:
+			IRDA_DEBUG(2, __FUNCTION__ "(), no handler\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: net/irda/irsysctl.c:36:
+       SLOT_TIMEOUT, MAX_BAUD_RATE, MAX_INACTIVE_TIME };$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#251: FILE: net/irda/irsysctl.c:45:
+extern int  sysctl_max_baud_rate;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#252: FILE: net/irda/irsysctl.c:46:
+extern int  sysctl_max_inactive_time;

ERROR:SPACING: space required before the open parenthesis '('
#274: FILE: net/irda/irttp.c:159:
+	if(notify->status_indication != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "notify->status_indication"
#274: FILE: net/irda/irttp.c:159:
+	if(notify->status_indication != NULL)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#286: FILE: net/irda/irttp.c:613:
+/*
+ * Function irttp_status_indication (self, reason)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#296: FILE: net/irda/irttp.c:623:
+	IRDA_DEBUG(4, __FUNCTION__ "()\n");

CHECK:SPACING: No space is necessary after a cast
#298: FILE: net/irda/irttp.c:625:
+	self = (struct tsap_cb *) instance;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: net/irda/irttp.c:626:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#300: FILE: net/irda/irttp.c:627:
+	ASSERT(self != NULL, return;);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: net/irda/irttp.c:629:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#304: FILE: net/irda/irttp.c:631:
+	/*
+	 *  Inform service user if he has requested it

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self->notify.status_indication"
#306: FILE: net/irda/irttp.c:633:
+	if (self->notify.status_indication != NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: net/irda/irttp.c:634:
+^I^Iself->notify.status_indication(self->notify.instance, $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#310: FILE: net/irda/irttp.c:637:
+		IRDA_DEBUG(2, __FUNCTION__ "(), no handler\n");

WARNING:TYPO_SPELLING: 'negociate' may be misspelled - perhaps 'negotiate'?
#322: FILE: net/irda/qos.c:47:
+ * Maximum values of the baud rate we negociate with the other end.
                                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#322: FILE: net/irda/qos.c:47:
+/*
+ * Maximum values of the baud rate we negociate with the other end.

WARNING:TYPO_SPELLING: 'negociate' may be misspelled - perhaps 'negotiate'?
#329: FILE: net/irda/qos.c:54:
+ * Maximum value of the lap disconnect timer we negociate with the other end.
                                                 ^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#329: FILE: net/irda/qos.c:54:
+/*
+ * Maximum value of the lap disconnect timer we negociate with the other end.

WARNING:TYPO_SPELLING: 'longuer' may be misspelled - perhaps 'longer'?
#331: FILE: net/irda/qos.c:56:
+ * may want to keep the LAP alive longuer or shorter in case of link failure.
                                   ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: net/irda/qos.c:608:
+static __u32 byte_value(__u8 byte, __u32 *array) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#428: FILE: net/irda/qos.c:649:
+	for (i=0; i < size; i++)
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: net/irda/qos.c:661:
+static __u32 index_value(int index, __u32 *array) $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#443: FILE: net/irda/qos.c:667:
+/*
+ * Function value_lower_bits (value, array)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#454: FILE: net/irda/qos.c:678:
+	for (i=0; i < size; i++) {
 	      ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#463: FILE: net/irda/qos.c:687:
+	if(i >= size)
+	  i = size - 1;	/* Last item */

ERROR:SPACING: space required before the open parenthesis '('
#463: FILE: net/irda/qos.c:687:
+	if(i >= size)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566799.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 20 warnings, 8 checks, 368 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566799.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
