WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
generic locations, and allows EDD to work.  I've tested this against BK-cur=

WARNING:TYPO_SPELLING: 'IST' may be misspelled - perhaps 'IS'?
#127: FILE: Documentation/x86_64/zero-page.txt:25:
+ 0x60	16 bytes	Intel SpeedStep (IST) BIOS support information
      	        	                 ^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#193: FILE: arch/i386/Kconfig:638:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#213: FILE: arch/i386/boot/edd.S:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'retreival' may be misspelled - perhaps 'retrieval'?
#220: FILE: arch/i386/boot/edd.S:8:
+ * legacy CHS retreival by Patrick J. LoPresti <patl@users.sourceforge.net>
               ^^^^^^^^^

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1412: FILE: arch/x86_64/kernel/setup.c:348:
+#if defined(CONFIG_EDD) || defined(CONFIG_EDD_MODULE)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1418: FILE: arch/x86_64/kernel/setup.c:354:
+EXPORT_SYMBOL(edd);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1419: FILE: arch/x86_64/kernel/setup.c:355:
+EXPORT_SYMBOL(edd_disk80_sig);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: arch/x86_64/kernel/setup.c:364:
+     eddnr =3D EDD_NR;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1428: FILE: arch/x86_64/kernel/setup.c:364:
+     eddnr =3D EDD_NR;
            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1429: FILE: arch/x86_64/kernel/setup.c:365:
+     memcpy(edd, EDD_BUF, sizeof(edd));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1430: FILE: arch/x86_64/kernel/setup.c:366:
+     edd_disk80_sig =3D DISK80_SIGNATURE;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1430: FILE: arch/x86_64/kernel/setup.c:366:
+     edd_disk80_sig =3D DISK80_SIGNATURE;
                     ^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1466: FILE: drivers/firmware/Kconfig:8:
+config EDD
+	tristate "BIOS Enhanced Disk Drive calls determine boot disk (EXPERIMENTA=

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1491: FILE: drivers/firmware/edd.c:1:
+/*

WARNING:TYPO_SPELLING: 'Parametes' may be misspelled - perhaps 'Parameters'?
#1504: FILE: drivers/firmware/edd.c:14:
+ * fn48 - Get Device Parametes with EDD extensions
                      ^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1568: FILE: drivers/firmware/edd.c:77:
+	ssize_t(*show) (struct edd_device * edev, char *buf);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: missing space after return type
#1568: FILE: drivers/firmware/edd.c:77:
+	ssize_t(*show) (struct edd_device * edev, char *buf);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1568: FILE: drivers/firmware/edd.c:77:
+	ssize_t(*show) (struct edd_device * edev, char *buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1569: FILE: drivers/firmware/edd.c:78:
+	int (*test) (struct edd_device * edev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1569: FILE: drivers/firmware/edd.c:78:
+	int (*test) (struct edd_device * edev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1578: FILE: drivers/firmware/edd.c:87:
+#define EDD_DEVICE_ATTR(_name,_mode,_show,_test) \
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1578: FILE: drivers/firmware/edd.c:87:
+#define EDD_DEVICE_ATTR(_name,_mode,_show,_test) \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1578: FILE: drivers/firmware/edd.c:87:
+#define EDD_DEVICE_ATTR(_name,_mode,_show,_test) \
                                          ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1578: FILE: drivers/firmware/edd.c:87:
+#define EDD_DEVICE_ATTR(_name,_mode,_show,_test) \
+struct edd_attribute edd_attr_##_name =3D { 	\
+	.attr =3D {.name =3D __stringify(_name), .mode =3D _mode },	\
+	.show	=3D _show,				\
+	.test	=3D _test,				\
+};

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1579: FILE: drivers/firmware/edd.c:88:
+struct edd_attribute edd_attr_##_name =3D { ^I\$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1579: FILE: drivers/firmware/edd.c:88:
+struct edd_attribute edd_attr_##_name =3D { 	\
                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1580: FILE: drivers/firmware/edd.c:89:
+	.attr =3D {.name =3D __stringify(_name), .mode =3D _mode },	\
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1580: FILE: drivers/firmware/edd.c:89:
+	.attr =3D {.name =3D __stringify(_name), .mode =3D _mode },	\
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1580: FILE: drivers/firmware/edd.c:89:
+	.attr =3D {.name =3D __stringify(_name), .mode =3D _mode },	\
 	                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1581: FILE: drivers/firmware/edd.c:90:
+	.show	=3D _show,				\
 	     	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1582: FILE: drivers/firmware/edd.c:91:
+	.test	=3D _test,				\
 	     	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1594: FILE: drivers/firmware/edd.c:103:
+	edev->info =3D info;
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1597: FILE: drivers/firmware/edd.c:106:
+#define to_edd_attr(_attr) container_of(_attr,struct edd_attribute,attr)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1597: FILE: drivers/firmware/edd.c:106:
+#define to_edd_attr(_attr) container_of(_attr,struct edd_attribute,attr)
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1598: FILE: drivers/firmware/edd.c:107:
+#define to_edd_device(obj) container_of(obj,struct edd_device,kobj)
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1598: FILE: drivers/firmware/edd.c:107:
+#define to_edd_device(obj) container_of(obj,struct edd_device,kobj)
                                                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1601: FILE: drivers/firmware/edd.c:110:
+edd_attr_show(struct kobject * kobj, struct attribute *attr, char *buf)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1603: FILE: drivers/firmware/edd.c:112:
+	struct edd_device *dev =3D to_edd_device(kobj);
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1604: FILE: drivers/firmware/edd.c:113:
+	struct edd_attribute *edd_attr =3D to_edd_attr(attr);
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1605: FILE: drivers/firmware/edd.c:114:
+	ssize_t ret =3D 0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1608: FILE: drivers/firmware/edd.c:117:
+		ret =3D edd_attr->show(dev, buf);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1612: FILE: drivers/firmware/edd.c:121:
+static struct sysfs_ops edd_attr_ops =3D {
                                      ^

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1612: FILE: drivers/firmware/edd.c:121:
+static struct sysfs_ops edd_attr_ops =3D {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1613: FILE: drivers/firmware/edd.c:122:
+	.show =3D edd_attr_show,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1619: FILE: drivers/firmware/edd.c:128:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1620: FILE: drivers/firmware/edd.c:129:
+	char *p =3D buf;
 	        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1623: FILE: drivers/firmware/edd.c:132:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1627: FILE: drivers/firmware/edd.c:136:
+	for (i =3D 0; i < 4; i++) {
 	       ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1628: FILE: drivers/firmware/edd.c:137:
+		if (isprint(info->params.host_bus_type[i])) {
[...]
+		} else {
[...]

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1629: FILE: drivers/firmware/edd.c:138:
+			p +=3D scnprintf(p, left, "%c", info->params.host_bus_type[i]);
 			  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1631: FILE: drivers/firmware/edd.c:140:
+			p +=3D scnprintf(p, left, " ");
 			  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1636: FILE: drivers/firmware/edd.c:145:
+		p +=3D scnprintf(p, left, "\tbase_address: %x\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1640: FILE: drivers/firmware/edd.c:149:
+		p +=3D scnprintf(p, left,
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1649: FILE: drivers/firmware/edd.c:158:
+		p +=3D scnprintf(p, left,
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1654: FILE: drivers/firmware/edd.c:163:
+		p +=3D scnprintf(p, left, "\tunknown: %llx\n",
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1663: FILE: drivers/firmware/edd.c:172:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1664: FILE: drivers/firmware/edd.c:173:
+	char *p =3D buf;
 	        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1667: FILE: drivers/firmware/edd.c:176:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1671: FILE: drivers/firmware/edd.c:180:
+	for (i =3D 0; i < 8; i++) {
 	       ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1672: FILE: drivers/firmware/edd.c:181:
+		if (isprint(info->params.interface_type[i])) {
[...]
+		} else {
[...]

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1673: FILE: drivers/firmware/edd.c:182:
+			p +=3D scnprintf(p, left, "%c", info->params.interface_type[i]);
 			  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1675: FILE: drivers/firmware/edd.c:184:
+			p +=3D scnprintf(p, left, " ");
 			  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1679: FILE: drivers/firmware/edd.c:188:
+		p +=3D scnprintf(p, left, "\tdevice: %u  lun: %u\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1683: FILE: drivers/firmware/edd.c:192:
+		p +=3D scnprintf(p, left, "\tdevice: %u\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1686: FILE: drivers/firmware/edd.c:195:
+		p +=3D scnprintf(p, left, "\tid: %u  lun: %llu\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1690: FILE: drivers/firmware/edd.c:199:
+		p +=3D scnprintf(p, left, "\tserial_number: %llx\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1693: FILE: drivers/firmware/edd.c:202:
+		p +=3D scnprintf(p, left, "\teui: %llx\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1696: FILE: drivers/firmware/edd.c:205:
+		p +=3D scnprintf(p, left, "\twwid: %llx lun: %llx\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1700: FILE: drivers/firmware/edd.c:209:
+		p +=3D scnprintf(p, left, "\tidentity_tag: %llx\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1703: FILE: drivers/firmware/edd.c:212:
+		p +=3D scnprintf(p, left, "\tidentity_tag: %x\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1706: FILE: drivers/firmware/edd.c:215:
+		p +=3D scnprintf(p, left, "\tdevice: %u\n",
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1709: FILE: drivers/firmware/edd.c:218:
+		p +=3D scnprintf(p, left, "\tunknown: %llx %llx\n",
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1725: FILE: drivers/firmware/edd.c:234:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1726: FILE: drivers/firmware/edd.c:235:
+	ssize_t len =3D sizeof (info->params);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1726: FILE: drivers/firmware/edd.c:235:
+	ssize_t len =3D sizeof (info->params);
 	            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1727: FILE: drivers/firmware/edd.c:236:
+	ssize_t len =3D sizeof (info->params);
+	if (!edev || !info || !buf) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1727: FILE: drivers/firmware/edd.c:236:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1731: FILE: drivers/firmware/edd.c:240:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE))
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1731: FILE: drivers/firmware/edd.c:240:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE))
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1731: FILE: drivers/firmware/edd.c:240:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE))
 	                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1731: FILE: drivers/firmware/edd.c:240:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE))
 	                                                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1731: FILE: drivers/firmware/edd.c:240:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1732: FILE: drivers/firmware/edd.c:241:
+		len =3D info->params.length;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1736: FILE: drivers/firmware/edd.c:245:
+		len =3D sizeof(info->params);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1745: FILE: drivers/firmware/edd.c:254:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1746: FILE: drivers/firmware/edd.c:255:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1747: FILE: drivers/firmware/edd.c:256:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1747: FILE: drivers/firmware/edd.c:256:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1751: FILE: drivers/firmware/edd.c:260:
+	p +=3D scnprintf(p, left, "0x%02x\n", info->version);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1758: FILE: drivers/firmware/edd.c:267:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1759: FILE: drivers/firmware/edd.c:268:
+	char *p =3D buf;
+	p +=3D scnprintf(p, left, "0x%08x\n", edd_disk80_sig);

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1759: FILE: drivers/firmware/edd.c:268:
+	p +=3D scnprintf(p, left, "0x%08x\n", edd_disk80_sig);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1766: FILE: drivers/firmware/edd.c:275:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1767: FILE: drivers/firmware/edd.c:276:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1768: FILE: drivers/firmware/edd.c:277:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1768: FILE: drivers/firmware/edd.c:277:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1772: FILE: drivers/firmware/edd.c:281:
+	if (info->interface_support & EDD_EXT_FIXED_DISK_ACCESS) {
+		p +=3D scnprintf(p, left, "Fixed disk access\n");
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1773: FILE: drivers/firmware/edd.c:282:
+		p +=3D scnprintf(p, left, "Fixed disk access\n");
 		  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1775: FILE: drivers/firmware/edd.c:284:
+	if (info->interface_support & EDD_EXT_DEVICE_LOCKING_AND_EJECTING) {
+		p +=3D scnprintf(p, left, "Device locking and ejecting\n");
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1776: FILE: drivers/firmware/edd.c:285:
+		p +=3D scnprintf(p, left, "Device locking and ejecting\n");
 		  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1778: FILE: drivers/firmware/edd.c:287:
+	if (info->interface_support & EDD_EXT_ENHANCED_DISK_DRIVE_SUPPORT) {
+		p +=3D scnprintf(p, left, "Enhanced Disk Drive support\n");
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1779: FILE: drivers/firmware/edd.c:288:
+		p +=3D scnprintf(p, left, "Enhanced Disk Drive support\n");
 		  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1781: FILE: drivers/firmware/edd.c:290:
+	if (info->interface_support & EDD_EXT_64BIT_EXTENSIONS) {
+		p +=3D scnprintf(p, left, "64-bit extensions\n");
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1782: FILE: drivers/firmware/edd.c:291:
+		p +=3D scnprintf(p, left, "64-bit extensions\n");
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1790: FILE: drivers/firmware/edd.c:299:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1791: FILE: drivers/firmware/edd.c:300:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1792: FILE: drivers/firmware/edd.c:301:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1792: FILE: drivers/firmware/edd.c:301:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1797: FILE: drivers/firmware/edd.c:306:
+		p +=3D scnprintf(p, left, "DMA boundary error transparent\n");
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1799: FILE: drivers/firmware/edd.c:308:
+		p +=3D scnprintf(p, left, "geometry valid\n");
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1801: FILE: drivers/firmware/edd.c:310:
+		p +=3D scnprintf(p, left, "removable\n");
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1803: FILE: drivers/firmware/edd.c:312:
+		p +=3D scnprintf(p, left, "write verify\n");
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1805: FILE: drivers/firmware/edd.c:314:
+		p +=3D scnprintf(p, left, "media change notification\n");
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1807: FILE: drivers/firmware/edd.c:316:
+		p +=3D scnprintf(p, left, "lockable\n");
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1809: FILE: drivers/firmware/edd.c:318:
+		p +=3D scnprintf(p, left, "no media present\n");
 		  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1811: FILE: drivers/firmware/edd.c:320:
+		p +=3D scnprintf(p, left, "use int13 fn50\n");
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1818: FILE: drivers/firmware/edd.c:327:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1819: FILE: drivers/firmware/edd.c:328:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1820: FILE: drivers/firmware/edd.c:329:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1820: FILE: drivers/firmware/edd.c:329:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1824: FILE: drivers/firmware/edd.c:333:
+	p +=3D snprintf(p, left, "0x%x\n", info->legacy_cylinders);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1831: FILE: drivers/firmware/edd.c:340:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1832: FILE: drivers/firmware/edd.c:341:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1833: FILE: drivers/firmware/edd.c:342:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1833: FILE: drivers/firmware/edd.c:342:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1837: FILE: drivers/firmware/edd.c:346:
+	p +=3D snprintf(p, left, "0x%x\n", info->legacy_heads);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1844: FILE: drivers/firmware/edd.c:353:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1845: FILE: drivers/firmware/edd.c:354:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1846: FILE: drivers/firmware/edd.c:355:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1846: FILE: drivers/firmware/edd.c:355:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1850: FILE: drivers/firmware/edd.c:359:
+	p +=3D snprintf(p, left, "0x%x\n", info->legacy_sectors);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1857: FILE: drivers/firmware/edd.c:366:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1858: FILE: drivers/firmware/edd.c:367:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1859: FILE: drivers/firmware/edd.c:368:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1859: FILE: drivers/firmware/edd.c:368:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1863: FILE: drivers/firmware/edd.c:372:
+	p +=3D scnprintf(p, left, "0x%x\n", info->params.num_default_cylinders);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1870: FILE: drivers/firmware/edd.c:379:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1871: FILE: drivers/firmware/edd.c:380:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1872: FILE: drivers/firmware/edd.c:381:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1872: FILE: drivers/firmware/edd.c:381:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1876: FILE: drivers/firmware/edd.c:385:
+	p +=3D scnprintf(p, left, "0x%x\n", info->params.num_default_heads);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1883: FILE: drivers/firmware/edd.c:392:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1884: FILE: drivers/firmware/edd.c:393:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1885: FILE: drivers/firmware/edd.c:394:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1885: FILE: drivers/firmware/edd.c:394:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1889: FILE: drivers/firmware/edd.c:398:
+	p +=3D scnprintf(p, left, "0x%x\n", info->params.sectors_per_track);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1896: FILE: drivers/firmware/edd.c:405:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1897: FILE: drivers/firmware/edd.c:406:
+	char *p =3D buf;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1898: FILE: drivers/firmware/edd.c:407:
+	char *p =3D buf;
+	if (!edev || !info || !buf) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1898: FILE: drivers/firmware/edd.c:407:
+	if (!edev || !info || !buf) {
+		return -EINVAL;
+	}

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1902: FILE: drivers/firmware/edd.c:411:
+	p +=3D scnprintf(p, left, "0x%llx\n", info->params.number_of_sectors);
 	  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1906: FILE: drivers/firmware/edd.c:415:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1920: FILE: drivers/firmware/edd.c:429:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1921: FILE: drivers/firmware/edd.c:430:
+	struct edd_info *info =3D edd_dev_get_info(edev);
+	if (!edev || !info)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1929: FILE: drivers/firmware/edd.c:438:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1930: FILE: drivers/firmware/edd.c:439:
+	struct edd_info *info =3D edd_dev_get_info(edev);
+	if (!edev || !info)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1938: FILE: drivers/firmware/edd.c:447:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1939: FILE: drivers/firmware/edd.c:448:
+	struct edd_info *info =3D edd_dev_get_info(edev);
+	if (!edev || !info)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1947: FILE: drivers/firmware/edd.c:456:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1948: FILE: drivers/firmware/edd.c:457:
+	struct edd_info *info =3D edd_dev_get_info(edev);
+	if (!edev || !info)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1956: FILE: drivers/firmware/edd.c:465:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1957: FILE: drivers/firmware/edd.c:466:
+	struct edd_info *info =3D edd_dev_get_info(edev);
+	if (!edev || !info)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1965: FILE: drivers/firmware/edd.c:474:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1966: FILE: drivers/firmware/edd.c:475:
+	struct edd_info *info =3D edd_dev_get_info(edev);
+	if (!edev || !info)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1974: FILE: drivers/firmware/edd.c:483:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1975: FILE: drivers/firmware/edd.c:484:
+	int i, nonzero_path =3D 0;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1981: FILE: drivers/firmware/edd.c:490:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE)) {
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1981: FILE: drivers/firmware/edd.c:490:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE)) {
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1981: FILE: drivers/firmware/edd.c:490:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE)) {
 	                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1981: FILE: drivers/firmware/edd.c:490:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE)) {
 	                                                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1981: FILE: drivers/firmware/edd.c:490:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1981: FILE: drivers/firmware/edd.c:490:
+	if (!(info->params.key =3D=3D 0xBEDD || info->params.key =3D=3D 0xDDBE)) {
+		return 0;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1985: FILE: drivers/firmware/edd.c:494:
+	for (i =3D 30; i <=3D 73; i++) {
 	       ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#1985: FILE: drivers/firmware/edd.c:494:
+	for (i =3D 30; i <=3D 73; i++) {
 	                 ^

CHECK:SPACING: No space is necessary after a cast
#1986: FILE: drivers/firmware/edd.c:495:
+		c =3D *(((uint8_t *) info) + i + 4);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1986: FILE: drivers/firmware/edd.c:495:
+		c =3D *(((uint8_t *) info) + i + 4);
 		  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1986: FILE: drivers/firmware/edd.c:495:
+		c =3D *(((uint8_t *) info) + i + 4);
 		      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1992: FILE: drivers/firmware/edd.c:501:
+	if (!nonzero_path) {
+		return 0;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2002: FILE: drivers/firmware/edd.c:511:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2003: FILE: drivers/firmware/edd.c:512:
+	struct edd_info *info =3D edd_dev_get_info(edev);
+	if (!edev || !info)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2005: FILE: drivers/firmware/edd.c:514:
+	return info->device =3D=3D 0x80;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2005: FILE: drivers/firmware/edd.c:514:
+	return info->device =3D=3D 0x80;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2028: FILE: drivers/firmware/edd.c:537:
+static EDD_DEVICE_ATTR(mbr_signature, 0444, edd_show_disk80_sig, edd_has_d=
                                                                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2031: FILE: drivers/firmware/edd.c:539:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2035: FILE: drivers/firmware/edd.c:543:
+static struct attribute * def_attrs[] =3D {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2035: FILE: drivers/firmware/edd.c:543:
+static struct attribute * def_attrs[] =3D {
                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2045: FILE: drivers/firmware/edd.c:553:
+static struct edd_attribute * edd_attrs[] =3D {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2045: FILE: drivers/firmware/edd.c:553:
+static struct edd_attribute * edd_attrs[] =3D {
                                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2067: FILE: drivers/firmware/edd.c:575:
+static void edd_release(struct kobject * kobj)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2069: FILE: drivers/firmware/edd.c:577:
+	struct edd_device * dev =3D to_edd_device(kobj);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2069: FILE: drivers/firmware/edd.c:577:
+	struct edd_device * dev =3D to_edd_device(kobj);
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2070: FILE: drivers/firmware/edd.c:578:
+	struct edd_device * dev =3D to_edd_device(kobj);
+	kfree(dev);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2073: FILE: drivers/firmware/edd.c:581:
+static struct kobj_type ktype_edd =3D {
                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2074: FILE: drivers/firmware/edd.c:582:
+	.release	=3D edd_release,
 	        	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2075: FILE: drivers/firmware/edd.c:583:
+	.sysfs_ops	=3D &edd_attr_ops,
 	          	^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#2075: FILE: drivers/firmware/edd.c:583:
+	.sysfs_ops	=3D &edd_attr_ops,
 	          	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2076: FILE: drivers/firmware/edd.c:584:
+	.default_attrs	=3D def_attrs,
 	              	^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2079: FILE: drivers/firmware/edd.c:587:
+static decl_subsys(edd,&ktype_edd,NULL);
                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2079: FILE: drivers/firmware/edd.c:587:
+static decl_subsys(edd,&ktype_edd,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2079: FILE: drivers/firmware/edd.c:587:
+static decl_subsys(edd,&ktype_edd,NULL);
                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2081: FILE: drivers/firmware/edd.c:589:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2092: FILE: drivers/firmware/edd.c:600:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2111: FILE: drivers/firmware/edd.c:619:
+	struct edd_info *info =3D edd_dev_get_info(edev);
 	                      ^

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'info->params.interface_path.pci.function'
#2117: FILE: drivers/firmware/edd.c:625:
+					       info->params.interface_path.pci.
+					       function));

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2125: FILE: drivers/firmware/edd.c:633:
+{
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2126: FILE: drivers/firmware/edd.c:634:
+	struct pci_dev *pci_dev =3D edd_get_pci_dev(edev);
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2127: FILE: drivers/firmware/edd.c:635:
+	struct pci_dev *pci_dev =3D edd_get_pci_dev(edev);
+	if (!pci_dev)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2129: FILE: drivers/firmware/edd.c:637:
+	return sysfs_create_link(&edev->kobj,&pci_dev->dev.kobj,"pci_dev");
 	                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2129: FILE: drivers/firmware/edd.c:637:
+	return sysfs_create_link(&edev->kobj,&pci_dev->dev.kobj,"pci_dev");
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2129: FILE: drivers/firmware/edd.c:637:
+	return sysfs_create_link(&edev->kobj,&pci_dev->dev.kobj,"pci_dev");
 	                                                       ^

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#2142: FILE: drivers/firmware/edd.c:650:
+#if defined(CONFIG_SCSI) || defined(CONFIG_SCSI_MODULE)

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#2145: FILE: drivers/firmware/edd.c:653:
+	struct edd_device	* edev;

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#2146: FILE: drivers/firmware/edd.c:654:
+	struct scsi_device	* sd;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2156: FILE: drivers/firmware/edd.c:664:
+static int edd_match_scsidev(struct device * dev, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2156: FILE: drivers/firmware/edd.c:664:
+static int edd_match_scsidev(struct device * dev, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2158: FILE: drivers/firmware/edd.c:666:
+	struct edd_match_data * data =3D (struct edd_match_data *)d;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2158: FILE: drivers/firmware/edd.c:666:
+	struct edd_match_data * data =3D (struct edd_match_data *)d;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2158: FILE: drivers/firmware/edd.c:666:
+	struct edd_match_data * data =3D (struct edd_match_data *)d;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2159: FILE: drivers/firmware/edd.c:667:
+	struct edd_info *info =3D edd_dev_get_info(data->edev);
 	                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2160: FILE: drivers/firmware/edd.c:668:
+	struct scsi_device * sd =3D to_scsi_device(dev);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2160: FILE: drivers/firmware/edd.c:668:
+	struct scsi_device * sd =3D to_scsi_device(dev);
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2163: FILE: drivers/firmware/edd.c:671:
+		if ((sd->channel =3D=3D info->params.interface_path.pci.channel) &&
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2163: FILE: drivers/firmware/edd.c:671:
+		if ((sd->channel =3D=3D info->params.interface_path.pci.channel) &&
 		                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2163: FILE: drivers/firmware/edd.c:671:
+		if ((sd->channel =3D=3D info->params.interface_path.pci.channel) &&

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2164: FILE: drivers/firmware/edd.c:672:
+		    (sd->id =3D=3D info->params.device_path.scsi.id) &&
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2164: FILE: drivers/firmware/edd.c:672:
+		    (sd->id =3D=3D info->params.device_path.scsi.id) &&
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2165: FILE: drivers/firmware/edd.c:673:
+		    (sd->lun =3D=3D info->params.device_path.scsi.lun)) {
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2165: FILE: drivers/firmware/edd.c:673:
+		    (sd->lun =3D=3D info->params.device_path.scsi.lun)) {
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2166: FILE: drivers/firmware/edd.c:674:
+			data->sd =3D sd;
 			         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2186: FILE: drivers/firmware/edd.c:694:
+	struct bus_type * scsi_bus =3D find_bus("scsi");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2186: FILE: drivers/firmware/edd.c:694:
+	struct bus_type * scsi_bus =3D find_bus("scsi");
 	                           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2188: FILE: drivers/firmware/edd.c:696:
+	if (!scsi_bus) {
+		return NULL;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2192: FILE: drivers/firmware/edd.c:700:
+	data.edev =3D edev;
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2195: FILE: drivers/firmware/edd.c:703:
+		if (bus_for_each_dev(scsi_bus,NULL,&data,edd_match_scsidev))
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2195: FILE: drivers/firmware/edd.c:703:
+		if (bus_for_each_dev(scsi_bus,NULL,&data,edd_match_scsidev))
 		                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2195: FILE: drivers/firmware/edd.c:703:
+		if (bus_for_each_dev(scsi_bus,NULL,&data,edd_match_scsidev))
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2195: FILE: drivers/firmware/edd.c:703:
+		if (bus_for_each_dev(scsi_bus,NULL,&data,edd_match_scsidev))
 		                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2205: FILE: drivers/firmware/edd.c:713:
+	int rc =3D -EINVAL;
 	       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#2205: FILE: drivers/firmware/edd.c:713:
+	int rc =3D -EINVAL;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2207: FILE: drivers/firmware/edd.c:715:
+	pci_dev =3D edd_get_pci_dev(edev);
 	        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2209: FILE: drivers/firmware/edd.c:717:
+		struct scsi_device * sdev =3D edd_find_matching_scsi_device(edev);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2209: FILE: drivers/firmware/edd.c:717:
+		struct scsi_device * sdev =3D edd_find_matching_scsi_device(edev);
 		                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2210: FILE: drivers/firmware/edd.c:718:
+		struct scsi_device * sdev =3D edd_find_matching_scsi_device(edev);
+		if (sdev && get_device(&sdev->sdev_driverfs_dev)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2211: FILE: drivers/firmware/edd.c:719:
+			rc =3D sysfs_create_link(&edev->kobj,
 			   ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2224: FILE: drivers/firmware/edd.c:732:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2228: FILE: drivers/firmware/edd.c:736:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2235: FILE: drivers/firmware/edd.c:743:
+static void edd_populate_dir(struct edd_device * edev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2237: FILE: drivers/firmware/edd.c:745:
+	struct edd_attribute * attr;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2238: FILE: drivers/firmware/edd.c:746:
+	int error =3D 0;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2241: FILE: drivers/firmware/edd.c:749:
+	for (i =3D 0; (attr =3D edd_attrs[i]) && !error; i++) {
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2241: FILE: drivers/firmware/edd.c:749:
+	for (i =3D 0; (attr =3D edd_attrs[i]) && !error; i++) {
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2244: FILE: drivers/firmware/edd.c:752:
+			error =3D sysfs_create_file(&edev->kobj,&attr->attr);
 			      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2244: FILE: drivers/firmware/edd.c:752:
+			error =3D sysfs_create_file(&edev->kobj,&attr->attr);
 			                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2244: FILE: drivers/firmware/edd.c:752:
+			error =3D sysfs_create_file(&edev->kobj,&attr->attr);
 			                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2260: FILE: drivers/firmware/edd.c:768:
+	memset(edev, 0, sizeof (*edev));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2264: FILE: drivers/firmware/edd.c:772:
+	kobj_set_kset_s(edev,edd_subsys);
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2265: FILE: drivers/firmware/edd.c:773:
+	error =3D kobject_register(&edev->kobj);
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2281: FILE: drivers/firmware/edd.c:789:
+	int rc=3D0;
 	      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2284: FILE: drivers/firmware/edd.c:792:
+	printk(KERN_INFO "BIOS EDD facility v%s, %d devices found\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2286: FILE: drivers/firmware/edd.c:794:
+	printk(KERN_INFO "Please report your BIOS at %s\n", REPORT_URL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2289: FILE: drivers/firmware/edd.c:797:
+		printk(KERN_INFO "EDD information not available.\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2293: FILE: drivers/firmware/edd.c:801:
+	rc =3D firmware_register(&edd_subsys);
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2297: FILE: drivers/firmware/edd.c:805:
+	for (i =3D 0; i < eddnr && i < EDDMAXNR && !rc; i++) {
 	       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2298: FILE: drivers/firmware/edd.c:806:
+		edev =3D kmalloc(sizeof (*edev), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2298: FILE: drivers/firmware/edd.c:806:
+		edev =3D kmalloc(sizeof (*edev), GFP_KERNEL);
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2302: FILE: drivers/firmware/edd.c:810:
+		rc =3D edd_device_register(edev, i);
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2307: FILE: drivers/firmware/edd.c:815:
+		edd_devices[i] =3D edev;
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2321: FILE: drivers/firmware/edd.c:829:
+	for (i =3D 0; i < eddnr && i < EDDMAXNR; i++) {
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2322: FILE: drivers/firmware/edd.c:830:
+		if ((edev =3D edd_devices[i]))
 		          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2322: FILE: drivers/firmware/edd.c:830:
+		if ((edev =3D edd_devices[i]))

CHECK:SPACING: No space is necessary after a cast
#2523: FILE: include/asm-x86_64/bootsetup.h:29:
+#define DISK80_SIGNATURE (*(unsigned int*) (PARAM+DISK80_SIG_BUFFER))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2523: FILE: include/asm-x86_64/bootsetup.h:29:
+#define DISK80_SIGNATURE (*(unsigned int*) (PARAM+DISK80_SIG_BUFFER))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2523: FILE: include/asm-x86_64/bootsetup.h:29:
+#define DISK80_SIGNATURE (*(unsigned int*) (PARAM+DISK80_SIG_BUFFER))
                                                  ^

CHECK:SPACING: No space is necessary after a cast
#2524: FILE: include/asm-x86_64/bootsetup.h:30:
+#define EDD_NR     (*(unsigned char *) (PARAM+EDDNR))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2524: FILE: include/asm-x86_64/bootsetup.h:30:
+#define EDD_NR     (*(unsigned char *) (PARAM+EDDNR))
                                              ^

CHECK:SPACING: No space is necessary after a cast
#2525: FILE: include/asm-x86_64/bootsetup.h:31:
+#define EDD_BUF     ((struct edd_info *) (PARAM+EDDBUF))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2525: FILE: include/asm-x86_64/bootsetup.h:31:
+#define EDD_BUF     ((struct edd_info *) (PARAM+EDDBUF))
                                                ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2533: FILE: include/linux/edd.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2534: FILE: include/linux/edd.h:2:
+ * linux/include/linux/edd.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2568: FILE: include/linux/edd.h:34:
+#define EDDNR 0x1e9		/* addr of number of edd_info structs at EDDBUF
+				   in empty_zero_block - treat this as 1 byte  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2568: FILE: include/linux/edd.h:34:
+				   in empty_zero_block - treat this as 1 byte  */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2584: FILE: include/linux/edd.h:50:
+#define EDD_EXT_FIXED_DISK_ACCESS           (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#2585: FILE: include/linux/edd.h:51:
+#define EDD_EXT_DEVICE_LOCKING_AND_EJECTING (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2586: FILE: include/linux/edd.h:52:
+#define EDD_EXT_ENHANCED_DISK_DRIVE_SUPPORT (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2587: FILE: include/linux/edd.h:53:
+#define EDD_EXT_64BIT_EXTENSIONS            (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2589: FILE: include/linux/edd.h:55:
+#define EDD_INFO_DMA_BOUNDARY_ERROR_TRANSPARENT (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2590: FILE: include/linux/edd.h:56:
+#define EDD_INFO_GEOMETRY_VALID                (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2591: FILE: include/linux/edd.h:57:
+#define EDD_INFO_REMOVABLE                     (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2592: FILE: include/linux/edd.h:58:
+#define EDD_INFO_WRITE_VERIFY                  (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2593: FILE: include/linux/edd.h:59:
+#define EDD_INFO_MEDIA_CHANGE_NOTIFICATION     (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2594: FILE: include/linux/edd.h:60:
+#define EDD_INFO_LOCKABLE                      (1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2595: FILE: include/linux/edd.h:61:
+#define EDD_INFO_NO_MEDIA_PRESENT              (1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2596: FILE: include/linux/edd.h:62:
+#define EDD_INFO_USE_INT13_FN50                (1 << 7)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2618: FILE: include/linux/edd.h:84:
+		} __attribute__ ((packed)) isa;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2625: FILE: include/linux/edd.h:91:
+		} __attribute__ ((packed)) pci;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2629: FILE: include/linux/edd.h:95:
+		} __attribute__ ((packed)) ibnd;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2632: FILE: include/linux/edd.h:98:
+		} __attribute__ ((packed)) xprs;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2635: FILE: include/linux/edd.h:101:
+		} __attribute__ ((packed)) htpt;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2638: FILE: include/linux/edd.h:104:
+		} __attribute__ ((packed)) unknown;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2647: FILE: include/linux/edd.h:113:
+		} __attribute__ ((packed)) ata;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2655: FILE: include/linux/edd.h:121:
+		} __attribute__ ((packed)) atapi;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2661: FILE: include/linux/edd.h:127:
+		} __attribute__ ((packed)) scsi;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2665: FILE: include/linux/edd.h:131:
+		} __attribute__ ((packed)) usb;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2669: FILE: include/linux/edd.h:135:
+		} __attribute__ ((packed)) i1394;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2673: FILE: include/linux/edd.h:139:
+		} __attribute__ ((packed)) fibre;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2677: FILE: include/linux/edd.h:143:
+		} __attribute__ ((packed)) i2o;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2682: FILE: include/linux/edd.h:148:
+		} __attribute__ ((packed)) raid;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2689: FILE: include/linux/edd.h:155:
+		} __attribute__ ((packed)) sata;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2693: FILE: include/linux/edd.h:159:
+		} __attribute__ ((packed)) unknown;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2697: FILE: include/linux/edd.h:163:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2707: FILE: include/linux/edd.h:173:
+} __attribute__ ((packed));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000295627.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 190 errors, 95 warnings, 27 checks, 1533 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000295627.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
