WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
 drivers/char/ftape/lowlevel/ftape-calibr.c |   97 +++++++++++++----------------

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#57: 
--- a/arch/i386/kernel/apm.c	Sun May 26 14:18:40 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#63: FILE: arch/i386/kernel/apm.c:1173:
+	extern spinlock_t i8253_lock;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#90: FILE: arch/i386/kernel/i8259.c:363:
+	extern spinlock_t i8253_lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:37:
+#elif defined(__i386__) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#155: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:55:
+#if defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

WARNING:LINE_SPACING: Missing a blank line after declarations
#172: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:81:
+	unsigned long r;
+	rdtscl(r);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:95:
+^Ispin_lock_irqsave(&i8253_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:100:
+^Ispin_unlock_irqrestore(&i8253_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:113:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:114:
+^Ispin_lock_irqsave(&i8253_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:118:
+^Ispin_unlock_irqrestore(&i8253_lock, flags); $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#298: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:190:
+	ps_per_cycle = (1000*1000*1000*1000UL) / hwrpb->cycle_freq;
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#298: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:190:
+	ps_per_cycle = (1000*1000*1000*1000UL) / hwrpb->cycle_freq;
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#298: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:190:
+	ps_per_cycle = (1000*1000*1000*1000UL) / hwrpb->cycle_freq;
 	                              ^

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#307: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:209:
+#if defined(__i386__)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#322: FILE: drivers/char/ftape/lowlevel/ftape-calibr.c:257:
+		if (time >= 100*1000)
 		               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: drivers/char/vt.c:110:
+        extern spinlock_t i8253_lock;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/char/vt.c:110:
+        extern spinlock_t i8253_lock;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#337: FILE: drivers/char/vt.c:110:
+        extern spinlock_t i8253_lock;

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: drivers/char/vt.c:124:
+        ^Ispin_lock(&i8253_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#345: FILE: drivers/char/vt.c:124:
+        ^Ispin_lock(&i8253_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/char/vt.c:124:
+        ^Ispin_lock(&i8253_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: drivers/char/vt.c:129:
+        ^Ispin_unlock(&i8253_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#350: FILE: drivers/char/vt.c:129:
+        ^Ispin_unlock(&i8253_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/char/vt.c:129:
+        ^Ispin_unlock(&i8253_lock);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#361: FILE: drivers/ide/hd.c:113:
+#define TIMEOUT_VALUE	(6*HZ)
                      	  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: drivers/ide/hd.c:136:
+        extern spinlock_t i8253_lock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/ide/hd.c:136:
+        extern spinlock_t i8253_lock;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#370: FILE: drivers/ide/hd.c:136:
+        extern spinlock_t i8253_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#402: FILE: drivers/input/gameport/gameport.c:57:
 
+

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#403: FILE: drivers/input/gameport/gameport.c:58:
+#ifdef __i386__

ERROR:SPACING: space required after that ',' (ctx:VxV)
#405: FILE: drivers/input/gameport/gameport.c:60:
+#define DELTA(x,y)      ((y)-(x)+((y)<(x)?1193180/HZ:0))
                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#405: FILE: drivers/input/gameport/gameport.c:60:
+#define DELTA(x,y)      ((y)-(x)+((y)<(x)?1193180/HZ:0))
                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#405: FILE: drivers/input/gameport/gameport.c:60:
+#define DELTA(x,y)      ((y)-(x)+((y)<(x)?1193180/HZ:0))
                                 ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#405: FILE: drivers/input/gameport/gameport.c:60:
+#define DELTA(x,y)      ((y)-(x)+((y)<(x)?1193180/HZ:0))
                                      ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#405: FILE: drivers/input/gameport/gameport.c:60:
+#define DELTA(x,y)      ((y)-(x)+((y)<(x)?1193180/HZ:0))
                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#405: FILE: drivers/input/gameport/gameport.c:60:
+#define DELTA(x,y)      ((y)-(x)+((y)<(x)?1193180/HZ:0))
                                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#405: FILE: drivers/input/gameport/gameport.c:60:
+#define DELTA(x,y)      ((y)-(x)+((y)<(x)?1193180/HZ:0))
                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#405: FILE: drivers/input/gameport/gameport.c:60:
+#define DELTA(x,y)      ((y)-(x)+((y)<(x)?1193180/HZ:0))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#405: FILE: drivers/input/gameport/gameport.c:60:
+#define DELTA(x,y)      ((y)-(x)+((y)<(x)?1193180/HZ:0))

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#406: FILE: drivers/input/gameport/gameport.c:61:
+#define GET_TIME(x)     do { x = get_time_pit(); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#410: FILE: drivers/input/gameport/gameport.c:65:
+	extern spinlock_t i8253_lock;

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#435: FILE: drivers/input/gameport/gameport.c:86:
+#ifdef __i386__

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000456153.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 14 warnings, 17 checks, 344 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000456153.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
