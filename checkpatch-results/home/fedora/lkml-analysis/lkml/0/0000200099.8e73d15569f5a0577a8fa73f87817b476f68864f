WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
The zeroing of a page of a arbitrary order in page_alloc.c and in hugetlb.c may benefit from a

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: include/asm-ia64/page.h:59:
+extern void clear_pages (void *page, int order);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: include/asm-ia64/page.h:59:
+extern void clear_pages (void *page, int order);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: include/asm-i386/page.h:21:
+#define clear_pages(page, order)	mmx_clear_page((void *)(page),order)
                                 	                             ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: include/asm-i386/mmx.h:11:
+extern void mmx_clear_page(void *page, int order);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#233: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#233: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#233: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#233: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#233: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)
 	                              ^

ERROR:SPACING: space required before the open parenthesis '('
#233: FILE: arch/i386/lib/mmx.c:141:
+	for(i=0;i<((4096/64) << order);i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#251: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#251: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#251: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#251: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#251: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)
 	                               ^

ERROR:SPACING: space required before the open parenthesis '('
#251: FILE: arch/i386/lib/mmx.c:270:
+	for(i=0;i<((4096/128) << order);i++)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#260: FILE: arch/i386/lib/mmx.c:362:
+static void slow_clear_page(void * page, int order)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#268: FILE: arch/i386/lib/mmx.c:369:
+		:"a" (0),"1" (page),"0" (1024 << order)
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#268: FILE: arch/i386/lib/mmx.c:369:
+		:"a" (0),"1" (page),"0" (1024 << order)
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#268: FILE: arch/i386/lib/mmx.c:369:
+		:"a" (0),"1" (page),"0" (1024 << order)
 		                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: arch/i386/lib/mmx.c:373:
+void mmx_clear_page(void * page, int order)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#424: FILE: include/asm-sparc64/page.h:17:
+extern void _clear_page(void *page, int order);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#439: FILE: include/linux/gfp.h:134:
+void prep_zero_page(struct page *, unsigned int order, unsigned int gfp_flags);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200099.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 3 warnings, 5 checks, 359 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200099.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
