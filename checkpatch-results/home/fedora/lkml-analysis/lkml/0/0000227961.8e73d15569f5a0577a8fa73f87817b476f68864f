WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -ruN 853-gzip-old/kernel/power/suspend_gzip.c 853-gzip-new/kernel/power/suspend_gzip.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#34: FILE: kernel/power/suspend_gzip.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#59: FILE: kernel/power/suspend_gzip.c:26:
+static struct suspend_plugin_ops * next_driver;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#62: FILE: kernel/power/suspend_gzip.c:29:
+extern int zlib_compress(unsigned char *data_in, unsigned char *cpage_out,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: kernel/power/suspend_gzip.c:30:
+extern int zlib_compress(unsigned char *data_in, unsigned char *cpage_out,
+		u32 *sourcelen, u32 *dstlen);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#64: FILE: kernel/power/suspend_gzip.c:31:
+extern void zlib_decompress(unsigned char *data_in, unsigned char *cpage_out,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: kernel/power/suspend_gzip.c:32:
+extern void zlib_decompress(unsigned char *data_in, unsigned char *cpage_out,
+	       u32 srclen, u32 destlen);

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#68: FILE: kernel/power/suspend_gzip.c:35:
+static void *compression_workspace = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#69: FILE: kernel/power/suspend_gzip.c:36:
+static char *local_buffer = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#75: FILE: kernel/power/suspend_gzip.c:42:
+static __nosavedata unsigned long bytes_in = 0, bytes_out = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#78: FILE: kernel/power/suspend_gzip.c:45:
+static int expected_gzip_compression = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#90: FILE: kernel/power/suspend_gzip.c:57:
+	BUG_ON(compression_workspace);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#94: FILE: kernel/power/suspend_gzip.c:61:
+		printk(KERN_WARNING

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: kernel/power/suspend_gzip.c:66:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#111: FILE: kernel/power/suspend_gzip.c:78:
+	BUG_ON(compression_workspace);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#115: FILE: kernel/power/suspend_gzip.c:82:
+		printk(KERN_WARNING

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: kernel/power/suspend_gzip.c:87:
+^I$

CHECK:SPACING: No space is necessary after a cast
#149: FILE: kernel/power/suspend_gzip.c:116:
+	local_buffer = (char *) get_zeroed_page(GFP_ATOMIC);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: kernel/power/suspend_gzip.c:117:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#152: FILE: kernel/power/suspend_gzip.c:119:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#154: FILE: kernel/power/suspend_gzip.c:121:
+			"Failed to allocate a page for compression "
+			"driver's buffer.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#168: FILE: kernel/power/suspend_gzip.c:135:
+		free_pages((unsigned long) local_buffer, 0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: kernel/power/suspend_gzip.c:144:
+ * ^I^Iof data.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: kernel/power/suspend_gzip.c:146:
+ * Returns: ^IInt. Zero if successful, otherwise an appropriate error number.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: kernel/power/suspend_gzip.c:152:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#189: FILE: kernel/power/suspend_gzip.c:156:
+		printk("GZip Compression Driver: Argh! No one wants my output!");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: kernel/power/suspend_gzip.c:160:
+	if ((result = allocate_zlib_compression_space()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: kernel/power/suspend_gzip.c:162:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#196: FILE: kernel/power/suspend_gzip.c:163:
+	if ((result = allocate_local_buffer()))

CHECK:SPACING: No space is necessary after a cast
#202: FILE: kernel/power/suspend_gzip.c:169:
+	strm.next_out = (char *) local_buffer;

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateInit>
#204: FILE: kernel/power/suspend_gzip.c:171:
+	result = zlib_deflateInit(&strm, Z_BEST_SPEED);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: kernel/power/suspend_gzip.c:172:
+^I^I$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#206: FILE: kernel/power/suspend_gzip.c:173:
+	if (Z_OK != result) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#207: FILE: kernel/power/suspend_gzip.c:174:
+		printk(KERN_ERR name_suspend "Failed to initialise zlib.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: kernel/power/suspend_gzip.c:178:
+^I/* $

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#212: FILE: kernel/power/suspend_gzip.c:179:
+	 * Reset the statistics iif we are about to write the first part of
 	                        ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#216: FILE: kernel/power/suspend_gzip.c:183:
+		bytes_in = bytes_out = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#224: FILE: kernel/power/suspend_gzip.c:191:
+ * ^I^Ifilled pages to the next plugin in the pipeline.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: kernel/power/suspend_gzip.c:192:
+ * Arguments:^IBuffer_start:^IPointer to a buffer of size PAGE_SIZE, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: kernel/power/suspend_gzip.c:193:
+ * ^I^I^I^Icontaining data to be compressed.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: kernel/power/suspend_gzip.c:195:
+ * ^I^Iplugins, -ECHILD if we have a broken pipeline or -EPERM if$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#229: FILE: kernel/power/suspend_gzip.c:196:
+ * ^I^Izlib errs.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: kernel/power/suspend_gzip.c:199:
+static int gzip_write_chunk(struct page * buffer_page)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: kernel/power/suspend_gzip.c:201:
+^Iint ret; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#235: FILE: kernel/power/suspend_gzip.c:202:
+	char * buffer_start = kmap(buffer_page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: kernel/power/suspend_gzip.c:203:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#243: FILE: kernel/power/suspend_gzip.c:210:
+			printk("Zlib failed to compress our data. "

WARNING:SPLIT_STRING: quoted string split across lines
#244: FILE: kernel/power/suspend_gzip.c:211:
+			printk("Zlib failed to compress our data. "
+				"Result code was %d.\n", ret);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#250: FILE: kernel/power/suspend_gzip.c:217:
+		if (!strm.avail_out) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#251: FILE: kernel/power/suspend_gzip.c:218:
+			if ((ret = next_driver->ops.filter.write_chunk(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#251: FILE: kernel/power/suspend_gzip.c:218:
+			if ((ret = next_driver->ops.filter.write_chunk(

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#268: FILE: kernel/power/suspend_gzip.c:235:
+ * ^I^Ispace.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: kernel/power/suspend_gzip.c:242:
+^I$

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateEnd>
#281: FILE: kernel/power/suspend_gzip.c:248:
+				ret = zlib_deflateEnd(&strm);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != Z_OK'
#285: FILE: kernel/power/suspend_gzip.c:252:
+			if ((ret != Z_OK) && (ret != Z_STREAM_END)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != Z_STREAM_END'
#285: FILE: kernel/power/suspend_gzip.c:252:
+			if ((ret != Z_OK) && (ret != Z_STREAM_END)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#287: FILE: kernel/power/suspend_gzip.c:254:
+				printk("Failed to finish compressing data. "

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: kernel/power/suspend_gzip.c:255:
+				printk("Failed to finish compressing data. "
+					"Result %d received.\n", ret);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!strm.avail_out'
#293: FILE: kernel/power/suspend_gzip.c:260:
+		if ((!strm.avail_out) || (finished)) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#294: FILE: kernel/power/suspend_gzip.c:261:
+			if ((ret = next_driver->ops.filter.write_chunk(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#294: FILE: kernel/power/suspend_gzip.c:261:
+			if ((ret = next_driver->ops.filter.write_chunk(

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#302: FILE: kernel/power/suspend_gzip.c:269:
+	bytes_in+= strm.total_in;
 	        ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#303: FILE: kernel/power/suspend_gzip.c:270:
+	bytes_out+= strm.total_out;
 	         ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#315: FILE: kernel/power/suspend_gzip.c:282:
+ * Returns: ^IInt. Zero if successful, otherwise an appropriate error number.$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#325: FILE: kernel/power/suspend_gzip.c:292:
+		printk("GZip Compression Driver: Argh! "

WARNING:SPLIT_STRING: quoted string split across lines
#326: FILE: kernel/power/suspend_gzip.c:293:
+		printk("GZip Compression Driver: Argh! "
+			"No one wants to feed me data!");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: kernel/power/suspend_gzip.c:296:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#330: FILE: kernel/power/suspend_gzip.c:297:
+	if ((result = allocate_zlib_decompression_space()))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: kernel/power/suspend_gzip.c:299:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#333: FILE: kernel/power/suspend_gzip.c:300:
+	if ((result = allocate_local_buffer()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#340: FILE: kernel/power/suspend_gzip.c:307:
+	if ((result = zlib_inflateInit(&strm)) != Z_OK) {

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateInit>
#340: FILE: kernel/power/suspend_gzip.c:307:
+	if ((result = zlib_inflateInit(&strm)) != Z_OK) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#341: FILE: kernel/power/suspend_gzip.c:308:
+		printk(KERN_ERR name_suspend "Failed to initialise zlib.\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#351: FILE: kernel/power/suspend_gzip.c:318:
+ * ^I^Iinput buffer is filled.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#352: FILE: kernel/power/suspend_gzip.c:319:
+ * Arguments:^IBuffer_start: ^IPointer to a buffer of size PAGE_SIZE.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#353: FILE: kernel/power/suspend_gzip.c:320:
+ * ^I^ISync:^I^IWhether the previous plugin (or core) wants its$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: kernel/power/suspend_gzip.c:321:
+ * ^I^I^I^Idata synchronously.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#356: FILE: kernel/power/suspend_gzip.c:323:
+ * ^I^Ion failure.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: kernel/power/suspend_gzip.c:326:
+static int gzip_read_chunk(struct page * buffer_page, int sync)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: kernel/power/suspend_gzip.c:328:
+^Iint ret; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#362: FILE: kernel/power/suspend_gzip.c:329:
+	char * buffer_start = kmap(buffer_page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: kernel/power/suspend_gzip.c:331:
+^I/* $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#374: FILE: kernel/power/suspend_gzip.c:341:
+			if ((ret = next_driver->ops.filter.read_chunk(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#374: FILE: kernel/power/suspend_gzip.c:341:
+			if ((ret = next_driver->ops.filter.read_chunk(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: kernel/power/suspend_gzip.c:342:
+^I^I^I^I^Ivirt_to_page(local_buffer), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: kernel/power/suspend_gzip.c:350:
+^I^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret == Z_BUF_ERROR'
#386: FILE: kernel/power/suspend_gzip.c:353:
+		if ((ret == Z_BUF_ERROR) && (!strm.avail_in)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!strm.avail_in'
#386: FILE: kernel/power/suspend_gzip.c:353:
+		if ((ret == Z_BUF_ERROR) && (!strm.avail_in)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#386: FILE: kernel/power/suspend_gzip.c:353:
+		if ((ret == Z_BUF_ERROR) && (!strm.avail_in)) {
+			continue;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: kernel/power/suspend_gzip.c:356:
+^I^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != Z_OK'
#390: FILE: kernel/power/suspend_gzip.c:357:
+		if ((ret != Z_OK) && (ret != Z_STREAM_END)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != Z_STREAM_END'
#390: FILE: kernel/power/suspend_gzip.c:357:
+		if ((ret != Z_OK) && (ret != Z_STREAM_END)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#391: FILE: kernel/power/suspend_gzip.c:358:
+			printk("Zlib failed to decompress our data. "

WARNING:SPLIT_STRING: quoted string split across lines
#392: FILE: kernel/power/suspend_gzip.c:359:
+			printk("Zlib failed to decompress our data. "
+					"Result code was %d.\n", ret);

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateEnd>
#410: FILE: kernel/power/suspend_gzip.c:377:
+	zlib_inflateEnd(&strm);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: kernel/power/suspend_gzip.c:378:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#420: FILE: kernel/power/suspend_gzip.c:387:
+ * ^I^Ibuffer.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#422: FILE: kernel/power/suspend_gzip.c:389:
+ * ^I^I^Iprinted.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#423: FILE: kernel/power/suspend_gzip.c:390:
+ * ^I^Isize:^ISize of the buffer.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#427: FILE: kernel/power/suspend_gzip.c:394:
+static int gzip_print_debug_stats(char * buffer, int size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: kernel/power/suspend_gzip.c:399:
+^I$

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#436: FILE: kernel/power/suspend_gzip.c:403:
+		len+= suspend_snprintf(buffer+len, size - len,
 		   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#436: FILE: kernel/power/suspend_gzip.c:403:
+		len+= suspend_snprintf(buffer+len, size - len,
 		                             ^

WARNING:SPLIT_STRING: quoted string split across lines
#438: FILE: kernel/power/suspend_gzip.c:405:
+		  "  Compressed %ld bytes into %ld.\n  "
+		  "Image compressed by %d percent.\n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#446: FILE: kernel/power/suspend_gzip.c:413:
+ * ^I^Isuspend/resume.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#448: FILE: kernel/power/suspend_gzip.c:415:
+ * ^I^Ioperation.$

ERROR:SPACING: space prohibited after that open parenthesis '('
#453: FILE: kernel/power/suspend_gzip.c:420:
+	return PAGE_SIZE + max( zlib_deflate_workspacesize(),

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#469: FILE: kernel/power/suspend_gzip.c:436:
+static int gzip_save_config_info(char * buffer)

CHECK:SPACING: No space is necessary after a cast
#471: FILE: kernel/power/suspend_gzip.c:438:
+	*((unsigned long *) buffer) = bytes_in;

CHECK:SPACING: No space is necessary after a cast
#472: FILE: kernel/power/suspend_gzip.c:439:
+	*((unsigned long *) (buffer + sizeof(unsigned long))) = bytes_out;

CHECK:SPACING: No space is necessary after a cast
#473: FILE: kernel/power/suspend_gzip.c:440:
+	*((int *) (buffer + 2 * sizeof(unsigned long))) = expected_gzip_compression;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: kernel/power/suspend_gzip.c:446:
+ * Description:^IReload information needed for decompressing the image at $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#480: FILE: kernel/power/suspend_gzip.c:447:
+ * ^I^Iresume time.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#485: FILE: kernel/power/suspend_gzip.c:452:
+static void gzip_load_config_info(char * buffer, int size)

ERROR:SPACING: space required before the open parenthesis '('
#487: FILE: kernel/power/suspend_gzip.c:454:
+	if(size == 2 * sizeof(unsigned long) + sizeof(int)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#487: FILE: kernel/power/suspend_gzip.c:454:
+	if(size == 2 * sizeof(unsigned long) + sizeof(int)) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#488: FILE: kernel/power/suspend_gzip.c:455:
+		bytes_in = *((unsigned long *) buffer);

CHECK:SPACING: No space is necessary after a cast
#489: FILE: kernel/power/suspend_gzip.c:456:
+		bytes_out = *((unsigned long *) (buffer + sizeof(unsigned long)));

CHECK:SPACING: No space is necessary after a cast
#490: FILE: kernel/power/suspend_gzip.c:457:
+		expected_gzip_compression = *((int *) (buffer + 2 * sizeof(unsigned long)));

CHECK:BRACES: Unbalanced braces around else statement
#491: FILE: kernel/power/suspend_gzip.c:458:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#492: FILE: kernel/power/suspend_gzip.c:459:
+		printk("Suspend GZIP config info size mismatch: settings ignored.\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#494: FILE: kernel/power/suspend_gzip.c:461:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: kernel/power/suspend_gzip.c:464:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#499: FILE: kernel/power/suspend_gzip.c:466:
+ * ^I^Iand the amount of data output when writing.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#545: FILE: kernel/power/suspend_gzip.c:512:
+^I.memory_needed ^I^I= gzip_memory_needed,$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#569: FILE: kernel/power/suspend_gzip.c:536:
+	if (!(result = suspend_register_plugin(&gzip_compression_ops))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#570: FILE: kernel/power/suspend_gzip.c:537:
+		printk("Software Suspend Gzip Compression Driver registered.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#580: FILE: kernel/power/suspend_gzip.c:547:
+	printk("Software Suspend Gzip Compression Driver unloading.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227961.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 48 errors, 50 warnings, 30 checks, 560 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227961.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
