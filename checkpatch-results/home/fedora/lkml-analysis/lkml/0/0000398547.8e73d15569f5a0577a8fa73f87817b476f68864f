WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#17: 
Subject: [BK] [2.4] ReiserFS iput deadlock fix
                             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#36: 
 name="[2.4] iput deadlock fix"
             ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#39: 
 filename="[2.4] iput deadlock fix"
                 ^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
Received: by angband.namesys.com (Postfix on SuSE Linux 7.3 (i386), from userid 521)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#51: 
Subject: [2.4] iput deadlock fix
               ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#60: 
   This changeset fixes possible iput deadlock in reiserfs, when iput
                                 ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#60: 
   This changeset fixes possible iput deadlock in reiserfs, when iput
                                                                 ^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	           ChangeSet	1.903   -> 1.904  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	 fs/reiserfs/inode.c	1.40    -> 1.41   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#	 fs/reiserfs/namei.c	1.24    -> 1.25   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
#	include/linux/reiserfs_fs.h	1.25    -> 1.26   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# 03/01/20	green@angband.namesys.com	1.904

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# reiserfs: iput deadlock fix - do not call iput() from inside of transaction

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#87: 
# reiserfs: iput deadlock fix - do not call iput() from inside of transaction
            ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#87: 
# reiserfs: iput deadlock fix - do not call iput() from inside of transaction
                                            ^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#91: 
--- a/fs/reiserfs/inode.c	Mon Jan 20 13:29:01 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#112: FILE: fs/reiserfs/inode.c:1474:
+int reiserfs_new_inode (struct reiserfs_transaction_handle *th,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: fs/reiserfs/inode.c:1475:
+int reiserfs_new_inode (struct reiserfs_transaction_handle *th,
+				struct inode * dir, int mode,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: fs/reiserfs/inode.c:1475:
+				struct inode * dir, int mode,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: fs/reiserfs/inode.c:1476:
+				const char * symname,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#116: FILE: fs/reiserfs/inode.c:1478:
+				/* 0 for regular, EMTRY_DIR_SIZE for dirs,
+				   strlen (symname) for symlinks) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#116: FILE: fs/reiserfs/inode.c:1478:
+				   strlen (symname) for symlinks) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/reiserfs/inode.c:1489:
+    int err ;$

WARNING:SPACING: space prohibited before semicolon
#127: FILE: fs/reiserfs/inode.c:1489:
+    int err ;

WARNING:SPACING: space prohibited before semicolon
#133: FILE: fs/reiserfs/inode.c:1492:
+	err = -EPERM ;

WARNING:SPACING: space prohibited before semicolon
#134: FILE: fs/reiserfs/inode.c:1493:
+	goto out_bad_inode ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: fs/reiserfs/inode.c:1502:
+    if( S_ISLNK( inode -> i_mode ) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#143: FILE: fs/reiserfs/inode.c:1502:
+    if( S_ISLNK( inode -> i_mode ) )
+	    inode -> i_flags &= ~ ( S_IMMUTABLE | S_APPEND );

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#143: FILE: fs/reiserfs/inode.c:1502:
+    if( S_ISLNK( inode -> i_mode ) )
                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#143: FILE: fs/reiserfs/inode.c:1502:
+    if( S_ISLNK( inode -> i_mode ) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#143: FILE: fs/reiserfs/inode.c:1502:
+    if( S_ISLNK( inode -> i_mode ) )

ERROR:SPACING: space required before the open parenthesis '('
#143: FILE: fs/reiserfs/inode.c:1502:
+    if( S_ISLNK( inode -> i_mode ) )

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#144: FILE: fs/reiserfs/inode.c:1503:
+	    inode -> i_flags &= ~ ( S_IMMUTABLE | S_APPEND );
 	          ^

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#144: FILE: fs/reiserfs/inode.c:1503:
+	    inode -> i_flags &= ~ ( S_IMMUTABLE | S_APPEND );
 	                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#144: FILE: fs/reiserfs/inode.c:1503:
+	    inode -> i_flags &= ~ ( S_IMMUTABLE | S_APPEND );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#144: FILE: fs/reiserfs/inode.c:1503:
+	    inode -> i_flags &= ~ ( S_IMMUTABLE | S_APPEND );

WARNING:SPACING: space prohibited before semicolon
#153: FILE: fs/reiserfs/inode.c:1509:
+	err = -ENOMEM ;

WARNING:SPACING: space prohibited before semicolon
#154: FILE: fs/reiserfs/inode.c:1510:
+	goto out_bad_inode ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: fs/reiserfs/inode.c:1527:
+    inode->i_nlink = (S_ISDIR (mode) ? 2 : 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: fs/reiserfs/inode.c:1527:
+    inode->i_nlink = (S_ISDIR (mode) ? 2 : 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/reiserfs/inode.c:1531:
+    inode->i_mtime = inode->i_atime = inode->i_ctime = CURRENT_TIME;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#167: FILE: fs/reiserfs/inode.c:1531:
+    inode->i_mtime = inode->i_atime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/reiserfs/inode.c:1532:
+    inode->i_size = i_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/reiserfs/inode.c:1533:
+    inode->i_blocks = (inode->i_size + 511) >> 9;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: fs/reiserfs/inode.c:1534:
+    inode->u.reiserfs_i.i_first_direct_byte = S_ISLNK(mode) ? 1 : $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: fs/reiserfs/inode.c:1534:
+    inode->u.reiserfs_i.i_first_direct_byte = S_ISLNK(mode) ? 1 : $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/reiserfs/inode.c:1535:
+      U32_MAX/*NO_BYTES_IN_DIRECT_ITEM*/;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: fs/reiserfs/inode.c:1537:
+    INIT_LIST_HEAD(&inode->u.reiserfs_i.i_prealloc_list) ;$

WARNING:SPACING: space prohibited before semicolon
#173: FILE: fs/reiserfs/inode.c:1537:
+    INIT_LIST_HEAD(&inode->u.reiserfs_i.i_prealloc_list) ;

WARNING:TABSTOP: Statements should start on a tabstop
#234: FILE: fs/reiserfs/inode.c:1565:
+	    goto out_bad_inode;

WARNING:SPACING: space prohibited before semicolon
#261: FILE: fs/reiserfs/inode.c:1619:
+	journal_end(th, th->t_super, th->t_blocks_allocated) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: fs/reiserfs/inode.c:1624:
+    reiserfs_update_sd(th, inode) ;$

WARNING:SPACING: space prohibited before semicolon
#268: FILE: fs/reiserfs/inode.c:1624:
+    reiserfs_update_sd(th, inode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: fs/reiserfs/inode.c:1627:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: fs/reiserfs/inode.c:1630:
+    INODE_PKEY(inode)->k_objectid = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: fs/reiserfs/inode.c:1633:
+    journal_end(th, th->t_super, th->t_blocks_allocated) ;$

WARNING:SPACING: space prohibited before semicolon
#278: FILE: fs/reiserfs/inode.c:1633:
+    journal_end(th, th->t_super, th->t_blocks_allocated) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: fs/reiserfs/inode.c:1634:
+    make_bad_inode(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/reiserfs/inode.c:1637:
+    inode->i_nlink = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: fs/reiserfs/inode.c:1638:
+    th->t_trans_id = 0 ; /* so the caller can't use this handle later */$

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#284: FILE: fs/reiserfs/inode.c:1639:
+    iput(inode) ;
     ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: fs/reiserfs/inode.c:1639:
+    iput(inode) ;$

WARNING:SPACING: space prohibited before semicolon
#284: FILE: fs/reiserfs/inode.c:1639:
+    iput(inode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: fs/reiserfs/inode.c:1640:
+    return err;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#297: FILE: fs/reiserfs/namei.c:492:
+/* quota utility function, call if you've had to abort after calling
+** new_inode_init, and have not called reiserfs_new_inode yet.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#301: FILE: fs/reiserfs/namei.c:496:
+static int drop_new_inode(struct inode *inode) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: fs/reiserfs/namei.c:497:
+    make_bad_inode(inode) ;$

WARNING:SPACING: space prohibited before semicolon
#302: FILE: fs/reiserfs/namei.c:497:
+    make_bad_inode(inode) ;

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#303: FILE: fs/reiserfs/namei.c:498:
+    iput(inode) ;
     ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: fs/reiserfs/namei.c:498:
+    iput(inode) ;$

WARNING:SPACING: space prohibited before semicolon
#303: FILE: fs/reiserfs/namei.c:498:
+    iput(inode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: fs/reiserfs/namei.c:499:
+    return 0 ;$

WARNING:SPACING: space prohibited before semicolon
#304: FILE: fs/reiserfs/namei.c:499:
+    return 0 ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: fs/reiserfs/namei.c:502:
+/* utility function that does setup for reiserfs_new_inode.  $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#308: FILE: fs/reiserfs/namei.c:503:
+/* utility function that does setup for reiserfs_new_inode.  
+** DQUOT_ALLOC_INODE cannot be called inside a transaction, so we had

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#311: FILE: fs/reiserfs/namei.c:506:
+static int new_inode_init(struct inode *inode, struct inode *dir, int mode) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#312: FILE: fs/reiserfs/namei.c:507:
+static int new_inode_init(struct inode *inode, struct inode *dir, int mode) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#314: FILE: fs/reiserfs/namei.c:509:
+    /* the quota init calls have to know who to charge the quota to, so
+    ** we have to set uid and gid here

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: fs/reiserfs/namei.c:511:
+    inode->i_uid = current->fsuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: fs/reiserfs/namei.c:512:
+    inode->i_mode = mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: fs/reiserfs/namei.c:514:
+    if (dir->i_mode & S_ISGID) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#319: FILE: fs/reiserfs/namei.c:514:
+    if (dir->i_mode & S_ISGID) {
[...]
+    } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: fs/reiserfs/namei.c:515:
+        inode->i_gid = dir->i_gid;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: fs/reiserfs/namei.c:515:
+        inode->i_gid = dir->i_gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: fs/reiserfs/namei.c:516:
+        if (S_ISDIR(mode))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: fs/reiserfs/namei.c:516:
+        if (S_ISDIR(mode))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#321: FILE: fs/reiserfs/namei.c:516:
+        if (S_ISDIR(mode))
+            inode->i_mode |= S_ISGID;

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: fs/reiserfs/namei.c:517:
+            inode->i_mode |= S_ISGID;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: fs/reiserfs/namei.c:517:
+            inode->i_mode |= S_ISGID;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/reiserfs/namei.c:518:
+    } else$

CHECK:BRACES: Unbalanced braces around else statement
#323: FILE: fs/reiserfs/namei.c:518:
+    } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: fs/reiserfs/namei.c:519:
+        inode->i_gid = current->fsgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/reiserfs/namei.c:519:
+        inode->i_gid = current->fsgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: fs/reiserfs/namei.c:521:
+    return 0 ;$

WARNING:SPACING: space prohibited before semicolon
#326: FILE: fs/reiserfs/namei.c:521:
+    return 0 ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: fs/reiserfs/namei.c:523:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: fs/reiserfs/namei.c:523:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: fs/reiserfs/namei.c:534:
+    retval = new_inode_init(inode, dir, mode) ;$

WARNING:SPACING: space prohibited before semicolon
#341: FILE: fs/reiserfs/namei.c:534:
+    retval = new_inode_init(inode, dir, mode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: fs/reiserfs/namei.c:535:
+    if (retval)$

WARNING:SPACING: space prohibited before semicolon
#343: FILE: fs/reiserfs/namei.c:536:
+	return retval ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: fs/reiserfs/namei.c:540:
+    retval = reiserfs_new_inode (&th, dir, mode, 0, 0/*i_size*/, dentry, inode);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: fs/reiserfs/namei.c:540:
+    retval = reiserfs_new_inode (&th, dir, mode, 0, 0/*i_size*/, dentry, inode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: fs/reiserfs/namei.c:541:
+    if (retval) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#354: FILE: fs/reiserfs/namei.c:541:
+    if (retval) {
+	goto out_failed ;
     }

WARNING:SPACING: space prohibited before semicolon
#355: FILE: fs/reiserfs/namei.c:542:
+	goto out_failed ;

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#369: FILE: fs/reiserfs/namei.c:555:
+	iput(inode) ;
 	^^^^

WARNING:SPACING: space prohibited before semicolon
#369: FILE: fs/reiserfs/namei.c:555:
+	iput(inode) ;

WARNING:SPACING: space prohibited before semicolon
#370: FILE: fs/reiserfs/namei.c:556:
+	goto out_failed ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: fs/reiserfs/namei.c:566:
+    return retval ;$

WARNING:SPACING: space prohibited before semicolon
#381: FILE: fs/reiserfs/namei.c:566:
+    return retval ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: fs/reiserfs/namei.c:580:
+    retval = new_inode_init(inode, dir, mode) ;$

WARNING:SPACING: space prohibited before semicolon
#396: FILE: fs/reiserfs/namei.c:580:
+    retval = new_inode_init(inode, dir, mode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: fs/reiserfs/namei.c:581:
+    if (retval)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: fs/reiserfs/namei.c:582:
+        return retval ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: fs/reiserfs/namei.c:582:
+        return retval ;$

WARNING:SPACING: space prohibited before semicolon
#398: FILE: fs/reiserfs/namei.c:582:
+        return retval ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: fs/reiserfs/namei.c:586:
+    retval = reiserfs_new_inode(&th, dir, mode, 0, 0/*i_size*/, dentry, inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: fs/reiserfs/namei.c:587:
+    if (retval) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#409: FILE: fs/reiserfs/namei.c:587:
+    if (retval) {
+	goto out_failed; 
     }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: fs/reiserfs/namei.c:588:
+^Igoto out_failed; $

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#422: FILE: fs/reiserfs/namei.c:605:
+	iput(inode) ;
 	^^^^

WARNING:SPACING: space prohibited before semicolon
#422: FILE: fs/reiserfs/namei.c:605:
+	iput(inode) ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: fs/reiserfs/namei.c:606:
+        goto out_failed; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: fs/reiserfs/namei.c:606:
+        goto out_failed; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: fs/reiserfs/namei.c:606:
+        goto out_failed; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: fs/reiserfs/namei.c:614:
+    return retval ;$

WARNING:SPACING: space prohibited before semicolon
#432: FILE: fs/reiserfs/namei.c:614:
+    return retval ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: fs/reiserfs/namei.c:625:
+    mode = S_IFDIR | mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: fs/reiserfs/namei.c:629:
+    retval = new_inode_init(inode, dir, mode) ;$

WARNING:SPACING: space prohibited before semicolon
#448: FILE: fs/reiserfs/namei.c:629:
+    retval = new_inode_init(inode, dir, mode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: fs/reiserfs/namei.c:630:
+    if (retval)$

WARNING:SPACING: space prohibited before semicolon
#450: FILE: fs/reiserfs/namei.c:631:
+	return retval ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: fs/reiserfs/namei.c:644:
+    retval = reiserfs_new_inode(&th, dir, mode, 0/*symlink*/,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#468: FILE: fs/reiserfs/namei.c:645:
+				old_format_only (dir->i_sb) ?

WARNING:SPACING: space prohibited before semicolon
#470: FILE: fs/reiserfs/namei.c:647:
+				dentry, inode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: fs/reiserfs/namei.c:648:
+    if (retval) {$

WARNING:SPACING: space prohibited before semicolon
#475: FILE: fs/reiserfs/namei.c:650:
+	goto out_failed ;

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#487: FILE: fs/reiserfs/namei.c:666:
+	iput(inode) ;
 	^^^^

WARNING:SPACING: space prohibited before semicolon
#487: FILE: fs/reiserfs/namei.c:666:
+	iput(inode) ;

WARNING:SPACING: space prohibited before semicolon
#488: FILE: fs/reiserfs/namei.c:667:
+	goto out_failed ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: fs/reiserfs/namei.c:678:
+    return retval ;$

WARNING:SPACING: space prohibited before semicolon
#500: FILE: fs/reiserfs/namei.c:678:
+    return retval ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: fs/reiserfs/namei.c:856:
+    int mode = S_IFLNK | S_IRWXUGO ;$

WARNING:SPACING: space prohibited before semicolon
#509: FILE: fs/reiserfs/namei.c:856:
+    int mode = S_IFLNK | S_IRWXUGO ;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#509: FILE: fs/reiserfs/namei.c:856:
+    int mode = S_IFLNK | S_IRWXUGO ;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: fs/reiserfs/namei.c:864:
+    retval = new_inode_init(inode, parent_dir, mode) ;$

WARNING:SPACING: space prohibited before semicolon
#517: FILE: fs/reiserfs/namei.c:864:
+    retval = new_inode_init(inode, parent_dir, mode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: fs/reiserfs/namei.c:865:
+    if (retval) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#518: FILE: fs/reiserfs/namei.c:865:
+    if (retval) {
+	return retval ;
+    }

WARNING:SPACING: space prohibited before semicolon
#519: FILE: fs/reiserfs/namei.c:866:
+	return retval ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: fs/reiserfs/namei.c:867:
+    }$

WARNING:SPACING: space prohibited before semicolon
#527: FILE: fs/reiserfs/namei.c:872:
+	drop_new_inode(inode) ;

WARNING:SPACING: space prohibited before semicolon
#528: FILE: fs/reiserfs/namei.c:873:
+	goto out_failed ;

WARNING:SPACING: space prohibited before semicolon
#536: FILE: fs/reiserfs/namei.c:879:
+	drop_new_inode(inode) ;

WARNING:SPACING: space prohibited before semicolon
#537: FILE: fs/reiserfs/namei.c:880:
+	goto out_failed ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: fs/reiserfs/namei.c:887:
+    retval = reiserfs_new_inode(&th, parent_dir, mode, name,$

WARNING:SPACING: space prohibited before semicolon
#548: FILE: fs/reiserfs/namei.c:888:
+				strlen(symname), dentry, inode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: fs/reiserfs/namei.c:890:
+    if (retval) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#554: FILE: fs/reiserfs/namei.c:890:
+    if (retval) {
+	goto out_failed ;
     }

WARNING:SPACING: space prohibited before semicolon
#555: FILE: fs/reiserfs/namei.c:891:
+	goto out_failed ;

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#567: FILE: fs/reiserfs/namei.c:910:
+	iput(inode) ;
 	^^^^

WARNING:SPACING: space prohibited before semicolon
#567: FILE: fs/reiserfs/namei.c:910:
+	iput(inode) ;

WARNING:SPACING: space prohibited before semicolon
#568: FILE: fs/reiserfs/namei.c:911:
+	goto out_failed ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: fs/reiserfs/namei.c:919:
+    return retval ;$

WARNING:SPACING: space prohibited before semicolon
#577: FILE: fs/reiserfs/namei.c:919:
+    return retval ;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: include/linux/reiserfs_fs.h:1751:
+int reiserfs_new_inode (struct reiserfs_transaction_handle *th,

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: include/linux/reiserfs_fs.h:1752:
+                               struct inode * dir, int mode,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: include/linux/reiserfs_fs.h:1752:
+int reiserfs_new_inode (struct reiserfs_transaction_handle *th,
+                               struct inode * dir, int mode,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: include/linux/reiserfs_fs.h:1752:
+                               struct inode * dir, int mode,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#594: FILE: include/linux/reiserfs_fs.h:1752:
+                               struct inode * dir, int mode,

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: include/linux/reiserfs_fs.h:1753:
+                               const char * symname,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: include/linux/reiserfs_fs.h:1753:
+                               const char * symname,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#595: FILE: include/linux/reiserfs_fs.h:1753:
+                               const char * symname,

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: include/linux/reiserfs_fs.h:1754:
+                               int i_size,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: include/linux/reiserfs_fs.h:1754:
+                               int i_size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: include/linux/reiserfs_fs.h:1755:
+                               struct dentry *dentry,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: include/linux/reiserfs_fs.h:1755:
+                               struct dentry *dentry,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: include/linux/reiserfs_fs.h:1756:
+                               struct inode *inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: include/linux/reiserfs_fs.h:1756:
+                               struct inode *inode);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398547.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 152 warnings, 6 checks, 485 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398547.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
