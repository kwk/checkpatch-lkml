CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#254: FILE: arch/i386/kernel/setup.c:888:
+	highstart_pfn = highend_pfn = bootpfns->max_pfn;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#257: FILE: arch/i386/kernel/setup.c:891:
+		printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: arch/i386/kernel/setup.c:892:
+		printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",
+			pages_to_mb(highend_pfn - highstart_pfn));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: arch/i386/kernel/setup.c:902:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#349: FILE: arch/i386/kernel/setup.c:995:
 
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: arch/i386/kernel/setup.c:1005:
+ ^IROOT_DEV = to_kdev_t(ORIG_ROOT_DEV);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: arch/i386/kernel/setup.c:1005:
+ ^IROOT_DEV = to_kdev_t(ORIG_ROOT_DEV);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: arch/i386/kernel/setup.c:1005:
+ ^IROOT_DEV = to_kdev_t(ORIG_ROOT_DEV);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: arch/i386/kernel/setup.c:1006:
+ ^Idrive_info = DRIVE_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#360: FILE: arch/i386/kernel/setup.c:1006:
+ ^Idrive_info = DRIVE_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: arch/i386/kernel/setup.c:1006:
+ ^Idrive_info = DRIVE_INFO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: arch/i386/kernel/setup.c:1007:
+ ^Iscreen_info = SCREEN_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#361: FILE: arch/i386/kernel/setup.c:1007:
+ ^Iscreen_info = SCREEN_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: arch/i386/kernel/setup.c:1007:
+ ^Iscreen_info = SCREEN_INFO;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#363: FILE: arch/i386/kernel/setup.c:1009:
+	if( SYS_DESC_TABLE.length != 0 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#363: FILE: arch/i386/kernel/setup.c:1009:
+	if( SYS_DESC_TABLE.length != 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#363: FILE: arch/i386/kernel/setup.c:1009:
+	if( SYS_DESC_TABLE.length != 0 ) {

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#364: FILE: arch/i386/kernel/setup.c:1010:
+		MCA_bus = SYS_DESC_TABLE.table[3] &0x2;
 		                                  ^

CHECK:SPACING: No space is necessary after a cast
#380: FILE: arch/i386/kernel/setup.c:1026:
+	init_mm.start_code = (unsigned long) &_text;

CHECK:SPACING: No space is necessary after a cast
#381: FILE: arch/i386/kernel/setup.c:1027:
+	init_mm.end_code = (unsigned long) &_etext;

CHECK:SPACING: No space is necessary after a cast
#382: FILE: arch/i386/kernel/setup.c:1028:
+	init_mm.end_data = (unsigned long) &_edata;

CHECK:SPACING: No space is necessary after a cast
#383: FILE: arch/i386/kernel/setup.c:1029:
+	init_mm.brk = (unsigned long) &_end;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#386: FILE: arch/i386/kernel/setup.c:1032:
+	code_resource.end = virt_to_bus(&_etext)-1;
 	                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#388: FILE: arch/i386/kernel/setup.c:1034:
+	data_resource.end = virt_to_bus(&_edata)-1;
 	                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: arch/i386/kernel/setup.c:1039:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#444: FILE: include/asm-i386/setup.h:10:
+#define PFN_UP(x)	(((x) + PAGE_SIZE-1) >> PAGE_SHIFT)
                  	                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#452: FILE: include/asm-i386/setup.h:18:
+#define MAX_NONPAE_PFN	(1 << 20)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: arch/i386/mm/init.c:456:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#468: FILE: arch/i386/mm/init.c:457:
+	if (bad_ppro && page_kills_ppro(pfn))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#493: FILE: arch/i386/mm/init.c:482:
+		if (page_is_ram(tmp) && PageReserved(mem_map+tmp))
 		                                            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#496: FILE: arch/i386/mm/init.c:485:
+	for (tmp = highstart_pfn; tmp < highend_pfn; tmp++) {
+		init_one_highpage((struct page *) (mem_map + tmp), tmp, bad_ppro);
+	}

CHECK:SPACING: No space is necessary after a cast
#497: FILE: arch/i386/mm/init.c:486:
+		init_one_highpage((struct page *) (mem_map + tmp), tmp, bad_ppro);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000471347.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 8 warnings, 14 checks, 473 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000471347.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
