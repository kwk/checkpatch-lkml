WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#59: 
If the exiting task belongs to a thread group (with more members than itself)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: include/linux/taskstats.h:1:
+/* taskstats.h - exporting per-task statistics

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: include/linux/taskstats.h:37:
+       __s64   pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: include/linux/taskstats.h:38:
+       __s64   tgid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: include/linux/taskstats.h:41:
+        * XXX_total is corresponding cumulative delay in nanoseconds$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: include/linux/taskstats.h:42:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: include/linux/taskstats.h:45:
+       __u64   cpu_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: include/linux/taskstats.h:46:
+       __u64   cpu_delay_total;        /* wait, while runnable, for cpu */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: include/linux/taskstats.h:47:
+       __u64   blkio_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: include/linux/taskstats.h:48:
+       __u64   blkio_delay_total;      /* sync,block io completion wait*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: include/linux/taskstats.h:49:
+       __u64   swapin_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: include/linux/taskstats.h:50:
+       __u64   swapin_delay_total;     /* swapin page fault wait*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: include/linux/taskstats.h:52:
+       __u64   cpu_run_total;          /* cpu running time$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: include/linux/taskstats.h:53:
+                                        * no count available/provided */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#139: FILE: include/linux/taskstats.h:53:
+                                        * no count available/provided */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: include/linux/taskstats.h:56:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: include/linux/taskstats.h:65:
+       TASKSTATS_CMD_UNSPEC,           /* Reserved */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: include/linux/taskstats.h:66:
+       TASKSTATS_CMD_NONE,             /* Not a valid cmd to send$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: include/linux/taskstats.h:67:
+                                        * Marks data sent on task/tgid exit */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#153: FILE: include/linux/taskstats.h:67:
+                                        * Marks data sent on task/tgid exit */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: include/linux/taskstats.h:68:
+       TASKSTATS_CMD_LISTEN,           /* Start listening */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: include/linux/taskstats.h:69:
+       TASKSTATS_CMD_IGNORE,           /* Stop listening */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/linux/taskstats.h:70:
+       TASKSTATS_CMD_PID,              /* Send stats for a pid */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: include/linux/taskstats.h:71:
+       TASKSTATS_CMD_TGID,             /* Send stats for a tgid */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: include/linux/taskstats.h:80:
+       union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: include/linux/taskstats.h:81:
+               __s64   pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: include/linux/taskstats.h:81:
+               __s64   pid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: include/linux/taskstats.h:82:
+               __s64   tgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/linux/taskstats.h:82:
+               __s64   tgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: include/linux/taskstats.h:83:
+       } id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: include/linux/taskstats.h:87:
+       TASKSTATS_REPLY_NONE = 1,       /* Control cmd response */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: include/linux/taskstats.h:88:
+       TASKSTATS_REPLY_PID,            /* per-pid data cmd response*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: include/linux/taskstats.h:89:
+       TASKSTATS_REPLY_TGID,           /* per-tgid data cmd response*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: include/linux/taskstats.h:90:
+       TASKSTATS_REPLY_EXIT_PID,       /* Exiting task's stats */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: include/linux/taskstats.h:91:
+       TASKSTATS_REPLY_EXIT_TGID,      /* Exiting tgid's stats$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: include/linux/taskstats.h:92:
+                                        * (sent on each tid's exit) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#178: FILE: include/linux/taskstats.h:92:
+                                        * (sent on each tid's exit) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: include/linux/taskstats.h:102:
+       __u16 outtype;                  /* Must be one of enum outtype */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: include/linux/taskstats.h:103:
+       __u16 version;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: include/linux/taskstats.h:104:
+       __u32 err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: include/linux/taskstats.h:105:
+       struct taskstats stats;         /* Invalid if err != 0 */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: include/linux/taskstats.h:121:
+extern void taskstats_exit_pid(struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#220: FILE: kernel/taskstats.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#242: FILE: kernel/taskstats.c:23:
+#include <asm/atomic.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#246: FILE: kernel/taskstats.c:27:
+static int family_registered = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#248: FILE: kernel/taskstats.c:29:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: kernel/taskstats.c:31:
+       .id             = GENL_ID_GENERATE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: kernel/taskstats.c:32:
+       .name           = TASKSTATS_GENL_NAME,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: kernel/taskstats.c:33:
+       .version        = TASKSTATS_GENL_VERSION,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: kernel/taskstats.c:34:
+       .hdrsize        = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: kernel/taskstats.c:35:
+       .maxattr        = 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: kernel/taskstats.c:40:
+                        struct sk_buff **skbp, struct taskstats_reply **replyp)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: kernel/taskstats.c:40:
+static int prepare_reply(struct genl_info *info, u8 cmd,
+                        struct sk_buff **skbp, struct taskstats_reply **replyp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: kernel/taskstats.c:40:
+                        struct sk_buff **skbp, struct taskstats_reply **replyp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: kernel/taskstats.c:42:
+       struct sk_buff *skb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: kernel/taskstats.c:43:
+       struct taskstats_reply *reply;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: kernel/taskstats.c:45:
+       skb = nlmsg_new(TASKSTATS_HDRLEN + TASKSTATS_BODYLEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: kernel/taskstats.c:46:
+       if (!skb)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#265: FILE: kernel/taskstats.c:46:
+       if (!skb)
+               return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: kernel/taskstats.c:47:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: kernel/taskstats.c:47:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: kernel/taskstats.c:49:
+       if (!info) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#268: FILE: kernel/taskstats.c:49:
+       if (!info) {
+               int seq = get_cpu_var(taskstats_seqnum)++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: kernel/taskstats.c:50:
+               int seq = get_cpu_var(taskstats_seqnum)++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: kernel/taskstats.c:50:
+               int seq = get_cpu_var(taskstats_seqnum)++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: kernel/taskstats.c:51:
+               put_cpu_var(taskstats_seqnum);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#270: FILE: kernel/taskstats.c:51:
+               int seq = get_cpu_var(taskstats_seqnum)++;
+               put_cpu_var(taskstats_seqnum);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: kernel/taskstats.c:51:
+               put_cpu_var(taskstats_seqnum);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: kernel/taskstats.c:53:
+               reply = genlmsg_put(skb, 0, seq,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: kernel/taskstats.c:53:
+               reply = genlmsg_put(skb, 0, seq,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: kernel/taskstats.c:54:
+                                   family.id, 0, NLM_F_REQUEST,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: kernel/taskstats.c:54:
+                                   family.id, 0, NLM_F_REQUEST,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: kernel/taskstats.c:55:
+                                   cmd, family.version);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: kernel/taskstats.c:55:
+                                   cmd, family.version);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: kernel/taskstats.c:56:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#275: FILE: kernel/taskstats.c:56:
+       } else
+               reply = genlmsg_put(skb, info->snd_pid, info->snd_seq,

CHECK:BRACES: Unbalanced braces around else statement
#275: FILE: kernel/taskstats.c:56:
+       } else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: kernel/taskstats.c:57:
+               reply = genlmsg_put(skb, info->snd_pid, info->snd_seq,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: kernel/taskstats.c:57:
+               reply = genlmsg_put(skb, info->snd_pid, info->snd_seq,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: kernel/taskstats.c:58:
+                                   family.id, 0, info->nlhdr->nlmsg_flags,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: kernel/taskstats.c:58:
+                                   family.id, 0, info->nlhdr->nlmsg_flags,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: kernel/taskstats.c:59:
+                                   info->genlhdr->cmd, family.version);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: kernel/taskstats.c:59:
+                                   info->genlhdr->cmd, family.version);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: kernel/taskstats.c:60:
+       if (reply == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#279: FILE: kernel/taskstats.c:60:
+       if (reply == NULL) {
+               nlmsg_free(skb);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reply"
#279: FILE: kernel/taskstats.c:60:
+       if (reply == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: kernel/taskstats.c:61:
+               nlmsg_free(skb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: kernel/taskstats.c:61:
+               nlmsg_free(skb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: kernel/taskstats.c:62:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: kernel/taskstats.c:62:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: kernel/taskstats.c:63:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: kernel/taskstats.c:64:
+       skb_put(skb, TASKSTATS_BODYLEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: kernel/taskstats.c:66:
+       memset(reply, 0, sizeof(*reply));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: kernel/taskstats.c:67:
+       reply->version = taskstats_version;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: kernel/taskstats.c:68:
+       reply->err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: kernel/taskstats.c:70:
+       *skbp = skb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: kernel/taskstats.c:71:
+       *replyp = reply;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: kernel/taskstats.c:72:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: kernel/taskstats.c:77:
+       struct genlmsghdr *genlhdr = nlmsg_data((struct nlmsghdr *)skb->data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: kernel/taskstats.c:78:
+       struct taskstats_reply *reply;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: kernel/taskstats.c:79:
+       int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: kernel/taskstats.c:81:
+       reply = (struct taskstats_reply *)genlmsg_data(genlhdr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: kernel/taskstats.c:82:
+       reply->outtype = replytype;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: kernel/taskstats.c:84:
+       rc = genlmsg_end(skb, reply);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: kernel/taskstats.c:85:
+       if (rc < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#304: FILE: kernel/taskstats.c:85:
+       if (rc < 0) {
+               nlmsg_free(skb);

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: kernel/taskstats.c:86:
+               nlmsg_free(skb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: kernel/taskstats.c:86:
+               nlmsg_free(skb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: kernel/taskstats.c:87:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: kernel/taskstats.c:87:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: kernel/taskstats.c:88:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: kernel/taskstats.c:90:
+       if (event)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#309: FILE: kernel/taskstats.c:90:
+       if (event)
+               return genlmsg_multicast(skb, pid, TASKSTATS_LISTEN_GROUP);

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: kernel/taskstats.c:91:
+               return genlmsg_multicast(skb, pid, TASKSTATS_LISTEN_GROUP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: kernel/taskstats.c:91:
+               return genlmsg_multicast(skb, pid, TASKSTATS_LISTEN_GROUP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: kernel/taskstats.c:92:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#311: FILE: kernel/taskstats.c:92:
+       else
+               return genlmsg_unicast(skb, pid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: kernel/taskstats.c:93:
+               return genlmsg_unicast(skb, pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: kernel/taskstats.c:93:
+               return genlmsg_unicast(skb, pid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: kernel/taskstats.c:97:
+                           struct task_struct *pidtsk)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: kernel/taskstats.c:97:
+static inline void fill_pid(struct taskstats_reply *reply, pid_t pid,
+                           struct task_struct *pidtsk)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: kernel/taskstats.c:97:
+                           struct task_struct *pidtsk)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: kernel/taskstats.c:99:
+       int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: kernel/taskstats.c:100:
+       struct task_struct *tsk = pidtsk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: kernel/taskstats.c:102:
+       if (!pidtsk) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#321: FILE: kernel/taskstats.c:102:
+       if (!pidtsk) {
+               read_lock(&tasklist_lock);

CHECK:BRACES: braces {} should be used on all arms of this statement
#321: FILE: kernel/taskstats.c:102:
+       if (!pidtsk) {
[...]
+       } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: kernel/taskstats.c:103:
+               read_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: kernel/taskstats.c:103:
+               read_lock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: kernel/taskstats.c:104:
+               tsk = find_task_by_pid(pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: kernel/taskstats.c:104:
+               tsk = find_task_by_pid(pid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: kernel/taskstats.c:105:
+               if (!tsk) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: kernel/taskstats.c:105:
+               if (!tsk) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#324: FILE: kernel/taskstats.c:105:
+               if (!tsk) {
+                       read_unlock(&tasklist_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: kernel/taskstats.c:106:
+                       read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: kernel/taskstats.c:106:
+                       read_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: kernel/taskstats.c:107:
+                       reply->err = EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: kernel/taskstats.c:107:
+                       reply->err = EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: kernel/taskstats.c:108:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: kernel/taskstats.c:108:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: kernel/taskstats.c:109:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: kernel/taskstats.c:109:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: kernel/taskstats.c:110:
+               get_task_struct(tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: kernel/taskstats.c:110:
+               get_task_struct(tsk);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: kernel/taskstats.c:111:
+               read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: kernel/taskstats.c:111:
+               read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: kernel/taskstats.c:112:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#331: FILE: kernel/taskstats.c:112:
+       } else
+               get_task_struct(tsk);

CHECK:BRACES: Unbalanced braces around else statement
#331: FILE: kernel/taskstats.c:112:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: kernel/taskstats.c:113:
+               get_task_struct(tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: kernel/taskstats.c:113:
+               get_task_struct(tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: kernel/taskstats.c:115:
+       rc = delayacct_add_tsk(reply, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: kernel/taskstats.c:116:
+       if (!rc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#335: FILE: kernel/taskstats.c:116:
+       if (!rc) {
+               reply->stats.pid = (s64)tsk->pid;

CHECK:BRACES: braces {} should be used on all arms of this statement
#335: FILE: kernel/taskstats.c:116:
+       if (!rc) {
[...]
+       } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: kernel/taskstats.c:117:
+               reply->stats.pid = (s64)tsk->pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: kernel/taskstats.c:117:
+               reply->stats.pid = (s64)tsk->pid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: kernel/taskstats.c:118:
+               reply->stats.tgid = (s64)tsk->tgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: kernel/taskstats.c:118:
+               reply->stats.tgid = (s64)tsk->tgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: kernel/taskstats.c:119:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#338: FILE: kernel/taskstats.c:119:
+       } else
+               reply->err = (rc < 0) ? -rc : rc ;

CHECK:BRACES: Unbalanced braces around else statement
#338: FILE: kernel/taskstats.c:119:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: kernel/taskstats.c:120:
+               reply->err = (rc < 0) ? -rc : rc ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: kernel/taskstats.c:120:
+               reply->err = (rc < 0) ? -rc : rc ;$

WARNING:SPACING: space prohibited before semicolon
#339: FILE: kernel/taskstats.c:120:
+               reply->err = (rc < 0) ? -rc : rc ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: kernel/taskstats.c:122:
+       put_task_struct(tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: kernel/taskstats.c:127:
+       int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: kernel/taskstats.c:128:
+       struct sk_buff *rep_skb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: kernel/taskstats.c:129:
+       struct taskstats_reply *reply;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: kernel/taskstats.c:130:
+       struct taskstats_cmd_param *param= info->userhdr;$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#349: FILE: kernel/taskstats.c:130:
+       struct taskstats_cmd_param *param= info->userhdr;
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: kernel/taskstats.c:132:
+       rc = prepare_reply(info, info->genlhdr->cmd, &rep_skb, &reply);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: kernel/taskstats.c:133:
+       if (rc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#352: FILE: kernel/taskstats.c:133:
+       if (rc)
+               return rc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: kernel/taskstats.c:134:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: kernel/taskstats.c:134:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: kernel/taskstats.c:135:
+       fill_pid(reply, param->id.pid, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: kernel/taskstats.c:136:
+       return send_reply(rep_skb, TASKSTATS_REPLY_PID, info->snd_pid, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: kernel/taskstats.c:140:
+                            struct task_struct *tgidtsk)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: kernel/taskstats.c:140:
+static inline void fill_tgid(struct taskstats_reply *reply, pid_t tgid,
+                            struct task_struct *tgidtsk)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: kernel/taskstats.c:140:
+                            struct task_struct *tgidtsk)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: kernel/taskstats.c:142:
+       int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: kernel/taskstats.c:143:
+       struct task_struct *tsk, *first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: kernel/taskstats.c:145:
+       first = tgidtsk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: kernel/taskstats.c:146:
+       read_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: kernel/taskstats.c:147:
+       if (!first) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#366: FILE: kernel/taskstats.c:147:
+       if (!first) {
+               first = find_task_by_pid(tgid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: kernel/taskstats.c:148:
+               first = find_task_by_pid(tgid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: kernel/taskstats.c:148:
+               first = find_task_by_pid(tgid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: kernel/taskstats.c:149:
+               if (!first) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: kernel/taskstats.c:149:
+               if (!first) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#368: FILE: kernel/taskstats.c:149:
+               if (!first) {
+                       read_unlock(&tasklist_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: kernel/taskstats.c:150:
+                       read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: kernel/taskstats.c:150:
+                       read_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: kernel/taskstats.c:151:
+                       reply->err = EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: kernel/taskstats.c:151:
+                       reply->err = EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: kernel/taskstats.c:152:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: kernel/taskstats.c:152:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: kernel/taskstats.c:153:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: kernel/taskstats.c:153:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: kernel/taskstats.c:154:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: kernel/taskstats.c:155:
+       tsk = first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: kernel/taskstats.c:156:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#375: FILE: kernel/taskstats.c:156:
+       do {
+               rc = delayacct_add_tsk(reply, tsk);

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: kernel/taskstats.c:157:
+               rc = delayacct_add_tsk(reply, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: kernel/taskstats.c:157:
+               rc = delayacct_add_tsk(reply, tsk);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: kernel/taskstats.c:158:
+               if (rc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: kernel/taskstats.c:158:
+               if (rc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#377: FILE: kernel/taskstats.c:158:
+               if (rc)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: kernel/taskstats.c:159:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: kernel/taskstats.c:159:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: kernel/taskstats.c:160:
+       } while_each_thread(first, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: kernel/taskstats.c:161:
+       read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: kernel/taskstats.c:163:
+       if (!rc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#382: FILE: kernel/taskstats.c:163:
+       if (!rc) {
+               reply->stats.pid = (s64)TASKSTATS_NOPID;

CHECK:BRACES: braces {} should be used on all arms of this statement
#382: FILE: kernel/taskstats.c:163:
+       if (!rc) {
[...]
+       } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: kernel/taskstats.c:164:
+               reply->stats.pid = (s64)TASKSTATS_NOPID;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: kernel/taskstats.c:164:
+               reply->stats.pid = (s64)TASKSTATS_NOPID;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: kernel/taskstats.c:165:
+               reply->stats.tgid = (s64)tgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: kernel/taskstats.c:165:
+               reply->stats.tgid = (s64)tgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: kernel/taskstats.c:166:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#385: FILE: kernel/taskstats.c:166:
+       } else
+               reply->err = (rc < 0) ? -rc : rc ;

CHECK:BRACES: Unbalanced braces around else statement
#385: FILE: kernel/taskstats.c:166:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: kernel/taskstats.c:167:
+               reply->err = (rc < 0) ? -rc : rc ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: kernel/taskstats.c:167:
+               reply->err = (rc < 0) ? -rc : rc ;$

WARNING:SPACING: space prohibited before semicolon
#386: FILE: kernel/taskstats.c:167:
+               reply->err = (rc < 0) ? -rc : rc ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: kernel/taskstats.c:172:
+       int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: kernel/taskstats.c:173:
+       struct sk_buff *rep_skb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: kernel/taskstats.c:174:
+       struct taskstats_reply *reply;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: kernel/taskstats.c:175:
+       struct taskstats_cmd_param *param= info->userhdr;$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#394: FILE: kernel/taskstats.c:175:
+       struct taskstats_cmd_param *param= info->userhdr;
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: kernel/taskstats.c:177:
+       rc = prepare_reply(info, info->genlhdr->cmd, &rep_skb, &reply);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: kernel/taskstats.c:178:
+       if (rc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#397: FILE: kernel/taskstats.c:178:
+       if (rc)
+               return rc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: kernel/taskstats.c:179:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: kernel/taskstats.c:179:
+               return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: kernel/taskstats.c:180:
+       fill_tgid(reply, param->id.tgid, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: kernel/taskstats.c:181:
+       return send_reply(rep_skb, TASKSTATS_REPLY_TGID, info->snd_pid, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: kernel/taskstats.c:187:
+       int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: kernel/taskstats.c:188:
+       struct sk_buff *rep_skb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: kernel/taskstats.c:189:
+       struct taskstats_reply *reply;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: kernel/taskstats.c:192:
+        * tasks can start to exit very early. Ensure that the family$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: kernel/taskstats.c:193:
+        * is registered before notifications are sent out$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: kernel/taskstats.c:194:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: kernel/taskstats.c:195:
+       if (!family_registered)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#414: FILE: kernel/taskstats.c:195:
+       if (!family_registered)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: kernel/taskstats.c:196:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: kernel/taskstats.c:196:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: kernel/taskstats.c:198:
+       rc = prepare_reply(NULL, TASKSTATS_CMD_NONE, &rep_skb, &reply);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: kernel/taskstats.c:199:
+       if (rc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#418: FILE: kernel/taskstats.c:199:
+       if (rc)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: kernel/taskstats.c:200:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: kernel/taskstats.c:200:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: kernel/taskstats.c:201:
+       fill_pid(reply, tsk->pid, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: kernel/taskstats.c:202:
+       rc = send_reply(rep_skb, TASKSTATS_REPLY_EXIT_PID, 0, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: kernel/taskstats.c:204:
+       if (rc || thread_group_empty(tsk))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#423: FILE: kernel/taskstats.c:204:
+       if (rc || thread_group_empty(tsk))
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: kernel/taskstats.c:205:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: kernel/taskstats.c:205:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: kernel/taskstats.c:208:
+       rc = prepare_reply(NULL, TASKSTATS_CMD_NONE, &rep_skb, &reply);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: kernel/taskstats.c:209:
+       if (rc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#428: FILE: kernel/taskstats.c:209:
+       if (rc)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: kernel/taskstats.c:210:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: kernel/taskstats.c:210:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: kernel/taskstats.c:211:
+       fill_tgid(reply, tsk->tgid, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: kernel/taskstats.c:212:
+       send_reply(rep_skb, TASKSTATS_REPLY_EXIT_TGID, 0, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: kernel/taskstats.c:216:
+       .cmd            = TASKSTATS_CMD_PID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: kernel/taskstats.c:217:
+       .doit           = taskstats_send_pid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: kernel/taskstats.c:221:
+       .cmd            = TASKSTATS_CMD_TGID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: kernel/taskstats.c:222:
+       .doit           = taskstats_send_tgid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: kernel/taskstats.c:227:
+       if (genl_register_family(&family))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#446: FILE: kernel/taskstats.c:227:
+       if (genl_register_family(&family))
+               return -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: kernel/taskstats.c:228:
+               return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: kernel/taskstats.c:228:
+               return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: kernel/taskstats.c:229:
+       family_registered = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: kernel/taskstats.c:231:
+       if (genl_register_ops(&family, &pid_ops))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#450: FILE: kernel/taskstats.c:231:
+       if (genl_register_ops(&family, &pid_ops))
+               goto err;

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: kernel/taskstats.c:232:
+               goto err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: kernel/taskstats.c:232:
+               goto err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: kernel/taskstats.c:233:
+       if (genl_register_ops(&family, &tgid_ops))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#452: FILE: kernel/taskstats.c:233:
+       if (genl_register_ops(&family, &tgid_ops))
+               goto err;

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: kernel/taskstats.c:234:
+               goto err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: kernel/taskstats.c:234:
+               goto err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: kernel/taskstats.c:236:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: kernel/taskstats.c:238:
+       genl_unregister_family(&family);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: kernel/taskstats.c:239:
+       family_registered = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: kernel/taskstats.c:240:
+       return -EFAULT;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 65 errors, 208 warnings, 14 checks, 396 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
