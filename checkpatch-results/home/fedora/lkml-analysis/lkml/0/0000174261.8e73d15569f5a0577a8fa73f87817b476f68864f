WARNING:TYPO_SPELLING: 'plattforms' may be misspelled - perhaps 'platforms'?
#30: 
plattforms to change CPU and other voltages.  Depends on the previous
^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/i2c/chips/atxp1.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#88: FILE: drivers/i2c/chips/atxp1.c:2:
+/*
+    atxp1.c - kernel module for setting CPU VID and general purpose

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/i2c/chips/atxp1.c:3:
+                     I/Os using the Attansic ATXP1 chip.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#102: FILE: drivers/i2c/chips/atxp1.c:16:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#103: FILE: drivers/i2c/chips/atxp1.c:17:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: drivers/i2c/chips/atxp1.c:46:
+static int atxp1_attach_adapter(struct i2c_adapter * adapter);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: drivers/i2c/chips/atxp1.c:47:
+static int atxp1_detach_client(struct i2c_client * client);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: drivers/i2c/chips/atxp1.c:48:
+static struct atxp1_data * atxp1_update_device(struct device *dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#159: FILE: drivers/i2c/chips/atxp1.c:73:
+static struct atxp1_data * atxp1_update_device(struct device *dev)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < data->last_updated'
#169: FILE: drivers/i2c/chips/atxp1.c:83:
+	if ((jiffies - data->last_updated > HZ) ||
+	    (jiffies < data->last_updated) ||
+	    !data->valid) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#170: FILE: drivers/i2c/chips/atxp1.c:84:
+	    (jiffies < data->last_updated) ||

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#172: FILE: drivers/i2c/chips/atxp1.c:86:
+	    !data->valid) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#184: FILE: drivers/i2c/chips/atxp1.c:98:
+	return(data);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#200: FILE: drivers/i2c/chips/atxp1.c:114:
+ssize_t atxp1_storevcore(struct device *dev, const char* buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#211: FILE: drivers/i2c/chips/atxp1.c:125:
+	vcore = simple_strtoul(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:BRACES: braces {} are not necessary for single statement blocks
#237: FILE: drivers/i2c/chips/atxp1.c:151:
+		for (; cvid >= vid; cvid--) {
+        		i2c_smbus_write_byte_data(client, ATXP1_VID, cvid | ATXP1_VIDENA);
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/i2c/chips/atxp1.c:152:
+        ^I^Ii2c_smbus_write_byte_data(client, ATXP1_VID, cvid | ATXP1_VIDENA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#238: FILE: drivers/i2c/chips/atxp1.c:152:
+        ^I^Ii2c_smbus_write_byte_data(client, ATXP1_VID, cvid | ATXP1_VIDENA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/i2c/chips/atxp1.c:152:
+        ^I^Ii2c_smbus_write_byte_data(client, ATXP1_VID, cvid | ATXP1_VIDENA);$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#241: FILE: drivers/i2c/chips/atxp1.c:155:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#241: FILE: drivers/i2c/chips/atxp1.c:155:
+	else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#242: FILE: drivers/i2c/chips/atxp1.c:156:
+		for (; cvid <= vid; cvid++) {
+        		i2c_smbus_write_byte_data(client, ATXP1_VID, cvid | ATXP1_VIDENA);
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/i2c/chips/atxp1.c:157:
+        ^I^Ii2c_smbus_write_byte_data(client, ATXP1_VID, cvid | ATXP1_VIDENA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: drivers/i2c/chips/atxp1.c:157:
+        ^I^Ii2c_smbus_write_byte_data(client, ATXP1_VID, cvid | ATXP1_VIDENA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/i2c/chips/atxp1.c:157:
+        ^I^Ii2c_smbus_write_byte_data(client, ATXP1_VID, cvid | ATXP1_VIDENA);$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'atxp1_showvcore' to 'cpu0_vid_show' 'atxp1_storevcore' to 'cpu0_vid_store'
#250: FILE: drivers/i2c/chips/atxp1.c:164:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#253: FILE: drivers/i2c/chips/atxp1.c:167:
+/* CPU core reference voltage
+    unit: millivolt

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#255: FILE: drivers/i2c/chips/atxp1.c:169:
+static DEVICE_ATTR(cpu0_vid, S_IRUGO | S_IWUSR, atxp1_showvcore, atxp1_storevcore);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#270: FILE: drivers/i2c/chips/atxp1.c:184:
+ssize_t atxp1_storegpio1(struct device *dev, const char* buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#279: FILE: drivers/i2c/chips/atxp1.c:193:
+	value = simple_strtoul(buf, NULL, 16);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'atxp1_showgpio1' to 'gpio1_show' 'atxp1_storegpio1' to 'gpio1_store'
#292: FILE: drivers/i2c/chips/atxp1.c:206:
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#295: FILE: drivers/i2c/chips/atxp1.c:209:
+/* GPIO1 data register
+    unit: Four bit as hex (e.g. 0x0f)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#297: FILE: drivers/i2c/chips/atxp1.c:211:
+static DEVICE_ATTR(gpio1, S_IRUGO | S_IWUSR, atxp1_showgpio1, atxp1_storegpio1);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#312: FILE: drivers/i2c/chips/atxp1.c:226:
+ssize_t atxp1_storegpio2(struct device *dev, const char* buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#321: FILE: drivers/i2c/chips/atxp1.c:235:
+	value = simple_strtoul(buf, NULL, 16) & 0xff;

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'atxp1_showgpio2' to 'gpio2_show' 'atxp1_storegpio2' to 'gpio2_store'
#332: FILE: drivers/i2c/chips/atxp1.c:246:
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#335: FILE: drivers/i2c/chips/atxp1.c:249:
+/* GPIO2 data register
+    unit: Eight bit as hex (e.g. 0xff)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#337: FILE: drivers/i2c/chips/atxp1.c:251:
+static DEVICE_ATTR(gpio2, S_IRUGO | S_IWUSR, atxp1_showgpio2, atxp1_storegpio2);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#339: FILE: drivers/i2c/chips/atxp1.c:253:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#347: FILE: drivers/i2c/chips/atxp1.c:261:
+	struct i2c_client * new_client;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: drivers/i2c/chips/atxp1.c:262:
+	struct atxp1_data * data;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#355: FILE: drivers/i2c/chips/atxp1.c:269:
+	if (!(data = kmalloc(sizeof(struct atxp1_data), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct atxp1_data)...)
#355: FILE: drivers/i2c/chips/atxp1.c:269:
+	if (!(data = kmalloc(sizeof(struct atxp1_data), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/i2c/chips/atxp1.c:285:
+	if (!((i2c_smbus_read_byte_data(new_client, 0x3e) == 0) &&
+	     (i2c_smbus_read_byte_data(new_client, 0x3f) == 0) &&

ERROR:SPACING: space prohibited before that close parenthesis ')'
#373: FILE: drivers/i2c/chips/atxp1.c:287:
+	     (i2c_smbus_read_byte_data(new_client, 0xff) == 0) )) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#374: FILE: drivers/i2c/chips/atxp1.c:288:
+	     (i2c_smbus_read_byte_data(new_client, 0xff) == 0) )) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#376: FILE: drivers/i2c/chips/atxp1.c:290:
+		 * showing the same as register 0x00 */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: drivers/i2c/chips/atxp1.c:294:
+		if (!((i2c_smbus_read_byte_data(new_client, 0x10) == temp) &&
+			 (i2c_smbus_read_byte_data(new_client, 0x11) == temp) ))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#380: FILE: drivers/i2c/chips/atxp1.c:294:
+			 (i2c_smbus_read_byte_data(new_client, 0x11) == temp) ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->vrm != 90'
#387: FILE: drivers/i2c/chips/atxp1.c:301:
+	if ((data->vrm != 90) && (data->vrm != 91)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->vrm != 91'
#387: FILE: drivers/i2c/chips/atxp1.c:301:
+	if ((data->vrm != 90) && (data->vrm != 91)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: drivers/i2c/chips/atxp1.c:303:
+		dev_err(&new_client->dev, "Not supporting VRM %d.%d\n",
+				data->vrm / 10, data->vrm % 10);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#401: FILE: drivers/i2c/chips/atxp1.c:315:
+	if (err)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: drivers/i2c/chips/atxp1.c:326:
+	dev_info(&new_client->dev, "Using VRM: %d.%d\n",
+			 data->vrm / 10, data->vrm % 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#422: FILE: drivers/i2c/chips/atxp1.c:336:
+static int atxp1_detach_client(struct i2c_client * client)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174261.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 24 warnings, 12 checks, 387 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174261.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
