WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
This patch has been tested on my SMP system and is stable. I would like very 

WARNING:TYPO_SPELLING: 'milage' may be misspelled - perhaps 'mileage'?
#30: 
much to see this feature added to the 2.5.x kernels and more milage given to 
                                                             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited after that open parenthesis '('
#51: FILE: arch/i386/kernel/i387.c:532:
+int dump_task_fpu( struct task_struct *tsk, struct user_i387_struct *fpu )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#51: FILE: arch/i386/kernel/i387.c:532:
+int dump_task_fpu( struct task_struct *tsk, struct user_i387_struct *fpu )

ERROR:SPACING: space prohibited after that open parenthesis '('
#56: FILE: arch/i386/kernel/i387.c:537:
+	if ( fpvalid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#56: FILE: arch/i386/kernel/i387.c:537:
+	if ( fpvalid ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#57: FILE: arch/i386/kernel/i387.c:538:
+		if (tsk == current) unlazy_fpu( tsk );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#57: FILE: arch/i386/kernel/i387.c:538:
+		if (tsk == current) unlazy_fpu( tsk );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#57: FILE: arch/i386/kernel/i387.c:538:
+		if (tsk == current) unlazy_fpu( tsk );

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited after that open parenthesis '('
#58: FILE: arch/i386/kernel/i387.c:539:
+		if ( cpu_has_fxsr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#58: FILE: arch/i386/kernel/i387.c:539:
+		if ( cpu_has_fxsr ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#58: FILE: arch/i386/kernel/i387.c:539:
+		if ( cpu_has_fxsr ) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#59: FILE: arch/i386/kernel/i387.c:540:
+			copy_fpu_fxsave( tsk, fpu );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#59: FILE: arch/i386/kernel/i387.c:540:
+			copy_fpu_fxsave( tsk, fpu );

ERROR:SPACING: space prohibited after that open parenthesis '('
#61: FILE: arch/i386/kernel/i387.c:542:
+			copy_fpu_fsave( tsk, fpu );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#61: FILE: arch/i386/kernel/i387.c:542:
+			copy_fpu_fsave( tsk, fpu );

ERROR:SPACING: space prohibited after that open parenthesis '('
#68: FILE: arch/i386/kernel/i387.c:549:
+int dump_task_extended_fpu( struct task_struct *tsk, struct user_fxsr_struct *fpu )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#68: FILE: arch/i386/kernel/i387.c:549:
+int dump_task_extended_fpu( struct task_struct *tsk, struct user_fxsr_struct *fpu )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: arch/i386/kernel/i387.c:552:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#73: FILE: arch/i386/kernel/i387.c:554:
+	if ( fpvalid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#73: FILE: arch/i386/kernel/i387.c:554:
+	if ( fpvalid ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#74: FILE: arch/i386/kernel/i387.c:555:
+		if (tsk == current) unlazy_fpu( tsk );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#74: FILE: arch/i386/kernel/i387.c:555:
+		if (tsk == current) unlazy_fpu( tsk );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#74: FILE: arch/i386/kernel/i387.c:555:
+		if (tsk == current) unlazy_fpu( tsk );

ERROR:SPACING: space prohibited after that open parenthesis '('
#75: FILE: arch/i386/kernel/i387.c:556:
+		memcpy( fpu, &tsk->thread.i387.fxsave,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: arch/i386/kernel/i387.c:557:
+		memcpy( fpu, &tsk->thread.i387.fxsave,
+		sizeof(struct user_fxsr_struct) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#76: FILE: arch/i386/kernel/i387.c:557:
+		sizeof(struct user_fxsr_struct) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: arch/i386/kernel/i387.c:559:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#82: FILE: arch/i386/kernel/i387.c:563:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: arch/i386/kernel/process.c:629:
+/* $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#90: FILE: arch/i386/kernel/process.c:629:
 }
+/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: arch/i386/kernel/process.c:636:
+^I$

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#98: FILE: arch/i386/kernel/process.c:637:
+	ptregs = *(struct pt_regs *)((unsigned long)tsk->thread_info + THREAD_SIZE - sizeof(struct pt_regs));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: arch/ia64/kernel/process.c:379:
+do_dump_fpu (struct unw_frame_info *info, void *arg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: arch/ia64/kernel/process.c:385:
+ia64_elf_core_copy_regs (struct pt_regs *pt, elf_gregset_t dst)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: arch/ia64/kernel/process.c:391:
+dump_fpu (struct pt_regs *pt, elf_fpregset_t dst)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: arch/ia64/kernel/process.c:398:
+do_copy_task_regs (struct task_struct *task, struct unw_frame_info *info, void *arg)

CHECK:SPACING: No space is necessary after a cast
#158: FILE: arch/ia64/kernel/process.c:419:
+	ia64_peek(task, info->sw, urbs_end, (long) ia64_rse_rnat_addr((long *) urbs_end),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: arch/ia64/kernel/process.c:468:
+do_dump_task_fpu (struct task_struct *task, struct unw_frame_info *info, void *arg)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#180: FILE: arch/ia64/kernel/process.c:485:
+		memcpy(dst + 32, task->thread.fph, 96*16);
 		                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#190: FILE: arch/ia64/kernel/process.c:492:
+	if(current == task) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#193: FILE: arch/ia64/kernel/process.c:495:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#193: FILE: arch/ia64/kernel/process.c:495:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: arch/ia64/kernel/process.c:496:
+^I^Imemset(&tcore_info, 0, sizeof(tcore_info));^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: arch/ia64/kernel/process.c:504:
+int dump_task_fpu (struct task_struct *task, elf_fpregset_t *dst)

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: arch/ia64/kernel/process.c:508:
+	if(current == task) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#213: FILE: arch/ia64/kernel/process.c:511:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#213: FILE: arch/ia64/kernel/process.c:511:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: arch/ia64/kernel/process.c:512:
+^I^Imemset(&tcore_info, 0, sizeof(tcore_info));^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: arch/ia64/kernel/process.c:517:
+^Ireturn 1; $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: fs/binfmt_elf.c:1023:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#262: FILE: fs/binfmt_elf.c:1023:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                                        ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#278: FILE: fs/binfmt_elf.c:1039:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#291: FILE: fs/binfmt_elf.c:1052:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: fs/binfmt_elf.c:1054:
+static inline void fill_note(struct memelfnote *note, const char *name, int type, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: fs/binfmt_elf.c:1055:
+static inline void fill_note(struct memelfnote *note, const char *name, int type, 
+		unsigned int sz, void *data)

WARNING:RETURN_VOID: void function return statements are not generally useful
#301: FILE: fs/binfmt_elf.c:1062:
+	return;
+}

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#305: FILE: fs/binfmt_elf.c:1066:
+ * which need to be filled up seperately.
                               ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: fs/binfmt_elf.c:1068:
+static inline void fill_prstatus(struct elf_prstatus *prstatus, struct task_struct *p, long signr) $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#309: FILE: fs/binfmt_elf.c:1070:
+	prstatus->pr_info.si_signo = prstatus->pr_cursig = signr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:RETURN_VOID: void function return statements are not generally useful
#325: FILE: fs/binfmt_elf.c:1086:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: fs/binfmt_elf.c:1091:
+^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#346: FILE: fs/binfmt_elf.c:1107:
+	return;
+}

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#350: FILE: fs/binfmt_elf.c:1111:
+struct elf_thread_status
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#366: FILE: fs/binfmt_elf.c:1127:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#366: FILE: fs/binfmt_elf.c:1127:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#366: FILE: fs/binfmt_elf.c:1127:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#368: FILE: fs/binfmt_elf.c:1129:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#374: FILE: fs/binfmt_elf.c:1135:
+		printk(KERN_WARNING "Cannot allocate memory for thread status.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#374: FILE: fs/binfmt_elf.c:1135:
+	if (!t) {
+		printk(KERN_WARNING "Cannot allocate memory for thread status.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: fs/binfmt_elf.c:1143:
+^Ielf_core_copy_task_regs(p, &t->prstatus.pr_reg);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: fs/binfmt_elf.c:1144:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->prstatus
#384: FILE: fs/binfmt_elf.c:1145:
+	fill_note(&t->notes[0], "CORE", NT_PRSTATUS, sizeof(t->prstatus), &(t->prstatus));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#388: FILE: fs/binfmt_elf.c:1149:
+	if ((t->prstatus.pr_fpvalid = elf_core_copy_task_fpregs(p, &t->fpu))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->fpu
#389: FILE: fs/binfmt_elf.c:1150:
+		fill_note(&t->notes[1], "CORE", NT_PRFPREG, sizeof(t->fpu), &(t->fpu));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->xfpu
#396: FILE: fs/binfmt_elf.c:1157:
+		fill_note(&t->notes[2], "LINUX", NT_PRXFPREG, sizeof(t->xfpu), &(t->xfpu));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: fs/binfmt_elf.c:1161:
+#endif^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#405: FILE: fs/binfmt_elf.c:1166:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: fs/binfmt_elf.c:1190:
+ ^Istruct task_struct *p;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#421: FILE: fs/binfmt_elf.c:1190:
+ ^Istruct task_struct *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: fs/binfmt_elf.c:1190:
+ ^Istruct task_struct *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: fs/binfmt_elf.c:1191:
+ ^ILIST_HEAD(thread_list);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#422: FILE: fs/binfmt_elf.c:1191:
+ ^ILIST_HEAD(thread_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: fs/binfmt_elf.c:1191:
+ ^ILIST_HEAD(thread_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: fs/binfmt_elf.c:1192:
+ ^Istruct list_head *t;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#423: FILE: fs/binfmt_elf.c:1192:
+ ^Istruct list_head *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: fs/binfmt_elf.c:1192:
+ ^Istruct list_head *t;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: fs/binfmt_elf.c:1198:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: fs/binfmt_elf.c:1202:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#459: FILE: fs/binfmt_elf.c:1226:
+				int sz = elf_dump_thread_status(signr, p, &thread_list);
+				if (!sz) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#459: FILE: fs/binfmt_elf.c:1226:
+				if (!sz) {
[...]
+				else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#463: FILE: fs/binfmt_elf.c:1230:
+				}
+				else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: fs/binfmt_elf.c:1235:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: fs/binfmt_elf.c:1239:
+^I$

WARNING:TYPO_SPELLING: 'proceses' may be misspelled - perhaps 'processes'?
#480: FILE: fs/binfmt_elf.c:1242:
+	/* This because those proceses that could possibly 
 	                      ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: fs/binfmt_elf.c:1242:
+^I/* This because those proceses that could possibly $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: fs/binfmt_elf.c:1250:
+^I * Although no locks ups have been induced, if one of the suspended threads was $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#519: FILE: fs/binfmt_elf.c:1262:
+	fill_elf_header(&elf, segs+1); /* including notes section*/
 	                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: fs/binfmt_elf.c:1280:
+ ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#547: FILE: fs/binfmt_elf.c:1280:
+ ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: fs/binfmt_elf.c:1280:
+ ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: fs/binfmt_elf.c:1283:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: fs/binfmt_elf.c:1285:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: fs/binfmt_elf.c:1285:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: fs/binfmt_elf.c:1286:
+  ^I/* Try to dump the FPU. */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#553: FILE: fs/binfmt_elf.c:1286:
+  ^I/* Try to dump the FPU. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: fs/binfmt_elf.c:1286:
+  ^I/* Try to dump the FPU. */$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#554: FILE: fs/binfmt_elf.c:1287:
+	if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#554: FILE: fs/binfmt_elf.c:1287:
+	if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {
[...]
+	} else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: fs/binfmt_elf.c:1291:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#558: FILE: fs/binfmt_elf.c:1291:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: fs/binfmt_elf.c:1291:
+ ^I}$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#560: FILE: fs/binfmt_elf.c:1293:
+	if (elf_core_copy_task_xfpregs(current, &xfpu)) {
[...]
+	} else {
[...]

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#566: FILE: fs/binfmt_elf.c:1299:
+	numnote --;
 	        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: fs/binfmt_elf.c:1300:
+#endif^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: fs/binfmt_elf.c:1314:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: fs/binfmt_elf.c:1347:
+ ^I/* write out the notes section */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#636: FILE: fs/binfmt_elf.c:1347:
+ ^I/* write out the notes section */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: fs/binfmt_elf.c:1347:
+ ^I/* write out the notes section */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#644: FILE: fs/binfmt_elf.c:1355:
+		struct elf_thread_status *tmp = list_entry(t, struct elf_thread_status, list);
+		for (i = 0; i < tmp->num_notes; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: fs/binfmt_elf.c:1359:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: fs/binfmt_elf.c:1359:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#662: FILE: fs/binfmt_elf.c:1407:
+	while(!list_empty(&thread_list)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#664: FILE: fs/binfmt_elf.c:1409:
+		struct list_head *tmp = thread_list.next;
+		list_del(tmp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#684: FILE: include/asm-i386/elf.h:103:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#685: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#685: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#685: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_gregset_t *' should also have an identifier name
#685: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#686: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#686: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#686: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_fpregset_t *' should also have an identifier name
#686: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#687: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#687: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#687: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct user_fxsr_struct *' should also have an identifier name
#687: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#703: FILE: include/asm-ia64/elf.h:68:
+typedef unsigned long elf_fpxregset_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#711: FILE: include/asm-ia64/elf.h:76:
 
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#721: FILE: include/asm-ia64/elf.h:96:
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#721: FILE: include/asm-ia64/elf.h:96:
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_gregset_t *' should also have an identifier name
#721: FILE: include/asm-ia64/elf.h:96:
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#722: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#722: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#722: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_fpregset_t *' should also have an identifier name
#722: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#727: FILE: include/asm-ia64/elf.h:102:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#764: FILE: include/linux/elfcore.h:95:
+	if (sizeof(elf_gregset_t) != sizeof(struct pt_regs)) {
[...]
+	} else
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#765: FILE: include/linux/elfcore.h:96:
+		printk("sizeof(elf_gregset_t) (%ld) != sizeof(struct pt_regs) (%ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: include/linux/elfcore.h:97:
+		printk("sizeof(elf_gregset_t) (%ld) != sizeof(struct pt_regs) (%ld)\n",
+			(long)sizeof(elf_gregset_t), (long)sizeof(struct pt_regs));

CHECK:BRACES: Unbalanced braces around else statement
#767: FILE: include/linux/elfcore.h:98:
+	} else

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#772: FILE: include/linux/elfcore.h:103:
+static inline int elf_core_copy_task_regs(struct task_struct *t, elf_gregset_t* elfregs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: include/linux/elfcore.h:106:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#781: FILE: include/linux/elfcore.h:112:
+extern int dump_fpu (struct pt_regs *, elf_fpregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#781: FILE: include/linux/elfcore.h:112:
+extern int dump_fpu (struct pt_regs *, elf_fpregset_t *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#801: FILE: include/linux/elfcore.h:132:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#810: FILE: include/linux/sched.h:134:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#811: FILE: include/linux/sched.h:135:
+/* functions for pausing and resumming functions $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#813: FILE: include/linux/sched.h:137:
+ * by the multithreaded elf core dump code in binfmt_elf.c*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space prohibited after that open parenthesis '('
#814: FILE: include/linux/sched.h:138:
+extern void tcore_suspend_threads( void );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#814: FILE: include/linux/sched.h:138:
+extern void tcore_suspend_threads( void );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#814: FILE: include/linux/sched.h:138:
+extern void tcore_suspend_threads( void );

ERROR:SPACING: space prohibited after that open parenthesis '('
#815: FILE: include/linux/sched.h:139:
+extern void tcore_resume_threads( void );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#815: FILE: include/linux/sched.h:139:
+extern void tcore_resume_threads( void );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#815: FILE: include/linux/sched.h:139:
+extern void tcore_resume_threads( void );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#815: FILE: include/linux/sched.h:139:
+extern void tcore_resume_threads( void );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#817: FILE: include/linux/sched.h:141:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#838: FILE: kernel/sched.c:282:
+	if( unlikely(!p->cpus_allowed) )
+			return;

ERROR:SPACING: space prohibited after that open parenthesis '('
#838: FILE: kernel/sched.c:282:
+	if( unlikely(!p->cpus_allowed) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#838: FILE: kernel/sched.c:282:
+	if( unlikely(!p->cpus_allowed) )

ERROR:SPACING: space required before the open parenthesis '('
#838: FILE: kernel/sched.c:282:
+	if( unlikely(!p->cpus_allowed) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: kernel/sched.c:284:
+^I^I^I$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#849: FILE: kernel/sched.c:386:
+		if (p->cpus_allowed && (p->prio < rq->curr->prio) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->prio < rq->curr->prio'
#849: FILE: kernel/sched.c:386:
+		if (p->cpus_allowed && (p->prio < rq->curr->prio) )

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#867: FILE: kernel/sched.c:1087:
+	for(i=0; i< NR_CPUS; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#867: FILE: kernel/sched.c:1087:
+	for(i=0; i< NR_CPUS; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#867: FILE: kernel/sched.c:1087:
+	for(i=0; i< NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#867: FILE: kernel/sched.c:1087:
+	for(i=0; i< NR_CPUS; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#868: FILE: kernel/sched.c:1088:
+		if(cpu_online(i)) {

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#870: FILE: kernel/sched.c:1090:
+			if (p->thread_info->cpu!= smp_processor_id()) {
 			                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: kernel/sched.c:1096:
+#endif^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#878: FILE: kernel/sched.c:1098:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#880: FILE: kernel/sched.c:1100:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <OnCPUCount>
#887: FILE: kernel/sched.c:1107:
+	int i, OnCPUCount = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#892: FILE: kernel/sched.c:1112:
+//  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#897: FILE: kernel/sched.c:1117:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#900: FILE: kernel/sched.c:1120:
+	for(i=0; i< NR_CPUS; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#900: FILE: kernel/sched.c:1120:
+	for(i=0; i< NR_CPUS; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#900: FILE: kernel/sched.c:1120:
+	for(i=0; i< NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#900: FILE: kernel/sched.c:1120:
+	for(i=0; i< NR_CPUS; i++) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#901: FILE: kernel/sched.c:1121:
+		if(cpu_online(i) )

ERROR:SPACING: space required before the open parenthesis '('
#901: FILE: kernel/sched.c:1121:
+		if(cpu_online(i) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: kernel/sched.c:1128:
+^IphantomQ = cpu_rq(PHANTOM_CPU); $

CHECK:CAMELCASE: Avoid CamelCase: <phantomQ>
#909: FILE: kernel/sched.c:1129:
+	spin_lock(&phantomQ->lock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#910: FILE: kernel/sched.c:1130:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#913: FILE: kernel/sched.c:1133:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#918: FILE: kernel/sched.c:1138:
+			if( p == task_rq(p)->curr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#918: FILE: kernel/sched.c:1138:
+			if( p == task_rq(p)->curr ) {

ERROR:SPACING: space required before the open parenthesis '('
#918: FILE: kernel/sched.c:1138:
+			if( p == task_rq(p)->curr ) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#922: FILE: kernel/sched.c:1142:
+				OnCPUCount ++;
 				           ^

WARNING:TYPO_SPELLING: 'manualy' may be misspelled - perhaps 'manually'?
#924: FILE: kernel/sched.c:1144:
+				// we manualy move the process to the phantom run queue.
 				      ^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#938: FILE: kernel/sched.c:1158:
+	for(i=NR_CPUS-1; i>=0 ; i--) {
 	     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#938: FILE: kernel/sched.c:1158:
+	for(i=NR_CPUS-1; i>=0 ; i--) {
 	             ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#938: FILE: kernel/sched.c:1158:
+	for(i=NR_CPUS-1; i>=0 ; i--) {
 	                  ^

ERROR:SPACING: space required before the open parenthesis '('
#938: FILE: kernel/sched.c:1158:
+	for(i=NR_CPUS-1; i>=0 ; i--) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#938: FILE: kernel/sched.c:1158:
+	for(i=NR_CPUS-1; i>=0 ; i--) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#939: FILE: kernel/sched.c:1159:
+		if(cpu_online(i) )
+		spin_unlock(&cpu_rq(i)->lock);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#939: FILE: kernel/sched.c:1159:
+		if(cpu_online(i) )

ERROR:SPACING: space required before the open parenthesis '('
#939: FILE: kernel/sched.c:1159:
+		if(cpu_online(i) )

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#945: FILE: kernel/sched.c:1165:
+	for( i = 0; i<OnCPUCount; i++) {
 	             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#945: FILE: kernel/sched.c:1165:
+	for( i = 0; i<OnCPUCount; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#945: FILE: kernel/sched.c:1165:
+	for( i = 0; i<OnCPUCount; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#945: FILE: kernel/sched.c:1165:
+	for( i = 0; i<OnCPUCount; i++) {
+		set_cpus_allowed(threads[i], 0);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#948: FILE: kernel/sched.c:1168:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#963: FILE: kernel/sched.c:1183:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#969: FILE: kernel/sched.c:1189:
+				deactivate_task(p,phantomQ);
 				                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#984: FILE: kernel/sched.c:1204:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1005: FILE: kernel/sched.c:1817:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1005: FILE: kernel/sched.c:1817:
+
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: kernel/sched.c:1817:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1024: FILE: kernel/sched.c:1836:
+
+

ERROR:SPACING: space required before the open brace '{'
#1035: FILE: kernel/sched.c:1897:
+	if(new_mask){ // can be O for TCore process suspends

ERROR:SPACING: space required before the open parenthesis '('
#1035: FILE: kernel/sched.c:1897:
+	if(new_mask){ // can be O for TCore process suspends

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1038: FILE: kernel/sched.c:1900:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space prohibited after that open parenthesis '('
#1049: FILE: kernel/sched.c:1986:
+		if( p->cpus_allowed)

ERROR:SPACING: space required before the open parenthesis '('
#1049: FILE: kernel/sched.c:1986:
+		if( p->cpus_allowed)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000454320.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 113 errors, 70 warnings, 43 checks, 952 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000454320.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
