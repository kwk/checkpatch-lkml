ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#39: FILE: drivers/char/tpm/tpm_nsc.c:264:
+static struct platform_device *pdev = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#41: FILE: drivers/char/tpm/tpm_nsc.c:266:
+static void __devexit tpm_nsc_remove(struct device *dev) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#41: FILE: drivers/char/tpm/tpm_nsc.c:266:
+static void __devexit tpm_nsc_remove(struct device *dev) 

WARNING:LINE_SPACING: Missing a blank line after declarations
#44: FILE: drivers/char/tpm/tpm_nsc.c:269:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if ( chip ) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#44: FILE: drivers/char/tpm/tpm_nsc.c:269:
+	if ( chip ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#44: FILE: drivers/char/tpm/tpm_nsc.c:269:
+	if ( chip ) {

CHECK:CAMELCASE: Avoid CamelCase: <nscAddrBase>
#79: FILE: drivers/char/tpm/tpm_nsc.c:298:
+		if (tpm_read_index(nscAddrBase, NSC_SID_INDEX) != 0xF6)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pdev)...) over kmalloc(sizeof(struct platform_device)...)
#92: FILE: drivers/char/tpm/tpm_nsc.c:309:
+	pdev = kmalloc(sizeof(struct platform_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/char/tpm/tpm_nsc.c:310:
+^Iif ( !pdev ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#93: FILE: drivers/char/tpm/tpm_nsc.c:310:
+	if ( !pdev ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#93: FILE: drivers/char/tpm/tpm_nsc.c:310:
+	if ( !pdev ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/char/tpm/tpm_nsc.c:318:
+^Ipdev->dev.release = tpm_nsc_remove;^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#104: FILE: drivers/char/tpm/tpm_nsc.c:321:
+	if ((rc=platform_device_register(pdev)) < 0) {
 	       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#104: FILE: drivers/char/tpm/tpm_nsc.c:321:
+	if ((rc=platform_device_register(pdev)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#110: FILE: drivers/char/tpm/tpm_nsc.c:327:
+	if (request_region(tpm_nsc.base, 2, "tpm_nsc0") == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#110: FILE: drivers/char/tpm/tpm_nsc.c:327:
+	if (request_region(tpm_nsc.base, 2, "tpm_nsc0") == NULL ) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#117: FILE: drivers/char/tpm/tpm_nsc.c:334:
+	if ((rc = tpm_register_hardware(&pdev->dev, &tpm_nsc)) < 0) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 2 warnings, 3 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
