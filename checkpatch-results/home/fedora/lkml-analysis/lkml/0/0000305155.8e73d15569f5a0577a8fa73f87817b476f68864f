WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -urN linux-2.5/drivers/pci/pci-sysfs.c linuxppc-2.5-benh/drivers/pci/pci-sysfs.c

CHECK:LINE_SPACING: Please don't use multiple blank lines
#95: FILE: include/asm-i386/pci.h:92:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: include/asm-ppc/pci.h:285:
+extern void pcibios_add_platform_entries(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#188: FILE: include/asm-ppc64/pci.h:155:
+extern void pcibios_add_platform_entries(struct pci_dev *dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: arch/ppc/kernel/pci.c:1031:
+	pdev = to_pci_dev (dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np"
#276: FILE: arch/ppc/kernel/pci.c:1033:
+	if (np == NULL || np->full_name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np->full_name"
#276: FILE: arch/ppc/kernel/pci.c:1033:
+	if (np == NULL || np->full_name == NULL)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pci_show_devspec' to 'devspec_show'
#279: FILE: arch/ppc/kernel/pci.c:1036:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#280: FILE: arch/ppc/kernel/pci.c:1037:
+static DEVICE_ATTR(devspec, S_IRUGO, pci_show_devspec, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#292: FILE: arch/ppc/kernel/pci.c:1049:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: arch/ppc64/kernel/pci.c:550:
+	pdev = to_pci_dev (dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np"
#312: FILE: arch/ppc64/kernel/pci.c:552:
+	if (np == NULL || np->full_name == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np->full_name"
#312: FILE: arch/ppc64/kernel/pci.c:552:
+	if (np == NULL || np->full_name == NULL)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pci_show_devspec' to 'devspec_show'
#315: FILE: arch/ppc64/kernel/pci.c:555:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#316: FILE: arch/ppc64/kernel/pci.c:556:
+static DEVICE_ATTR(devspec, S_IRUGO, pci_show_devspec, NULL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305155.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 8 checks, 212 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305155.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
