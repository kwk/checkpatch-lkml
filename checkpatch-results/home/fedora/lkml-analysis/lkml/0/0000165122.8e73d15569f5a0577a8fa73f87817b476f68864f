WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: security/cap_stack.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: security/cap_stack.c:58:
+static int __init capability_init (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#156: FILE: security/cap_stack.c:61:
+		printk(KERN_INFO "Capabilities disabled at initialization\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: security/cap_stack.c:65:
+	if (register_security (&capability_ops)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&capability_ops'
#160: FILE: security/cap_stack.c:65:
+	if (register_security (&capability_ops)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: security/cap_stack.c:67:
+		if (mod_reg_security (MY_NAME, &capability_ops)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#163: FILE: security/cap_stack.c:68:
+			printk (KERN_INFO "Failure registering capabilities "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: security/cap_stack.c:68:
+			printk (KERN_INFO "Failure registering capabilities "

WARNING:SPLIT_STRING: quoted string split across lines
#164: FILE: security/cap_stack.c:69:
+			printk (KERN_INFO "Failure registering capabilities "
+				"with primary security module.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#169: FILE: security/cap_stack.c:74:
+	printk (KERN_INFO "Capability LSM initialized%s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#169: FILE: security/cap_stack.c:74:
+	printk (KERN_INFO "Capability LSM initialized%s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#174: FILE: security/cap_stack.c:79:
+static void __exit capability_exit (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: security/cap_stack.c:85:
+		if (mod_unreg_security (MY_NAME, &capability_ops))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#181: FILE: security/cap_stack.c:86:
+			printk (KERN_INFO "Failure unregistering capabilities "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: security/cap_stack.c:86:
+			printk (KERN_INFO "Failure unregistering capabilities "

WARNING:SPLIT_STRING: quoted string split across lines
#182: FILE: security/cap_stack.c:87:
+			printk (KERN_INFO "Failure unregistering capabilities "
+				"with primary module.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: security/cap_stack.c:91:
+	if (unregister_security (&capability_ops)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&capability_ops'
#186: FILE: security/cap_stack.c:91:
+	if (unregister_security (&capability_ops)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#187: FILE: security/cap_stack.c:92:
+		printk (KERN_INFO

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: security/cap_stack.c:92:
+		printk (KERN_INFO

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: security/cap_stack.c:97:
+security_initcall (capability_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: security/cap_stack.c:98:
+module_exit (capability_exit);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000165122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 20 warnings, 2 checks, 145 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000165122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
