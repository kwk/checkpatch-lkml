WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
small hooks into the normal serial core so that we can take away the uart and

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#107: FILE: drivers/serial/kgdb_8250.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#134: FILE: drivers/serial/kgdb_8250.c:28:
+#include <asm/io.h>

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#148: FILE: drivers/serial/kgdb_8250.c:42:
+static struct kgdb_io local_kgdb_io_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#172: FILE: drivers/serial/kgdb_8250.c:66:
+static int kgdb8250_ttyS = 0;	/* Start with this if not given */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:TYPO_SPELLING: 'existant' may be misspelled - perhaps 'existent'?
#182: FILE: drivers/serial/kgdb_8250.c:76:
+/* Old-style serial definitions, if existant, and a counter. */
                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MISPLACED_INIT: __initdata should be placed after old_rs_table[]
#184: FILE: drivers/serial/kgdb_8250.c:78:
+static struct serial_state __initdata old_rs_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:CAMELCASE: Avoid CamelCase: <kgdb8250_ttyS>
#208: FILE: drivers/serial/kgdb_8250.c:102:
+#define CURRENTPORT		kgdb8250_ports[kgdb8250_ttyS]

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#226: FILE: drivers/serial/kgdb_8250.c:120:
+	while (!(ioread8(kgdb8250_addr + (UART_LSR << KGDB8250_REG_SHIFT)) &
+		 UART_LSR_THRE)) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited before semicolon
#227: FILE: drivers/serial/kgdb_8250.c:121:
+		 UART_LSR_THRE)) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#302: FILE: drivers/serial/kgdb_8250.c:196:
+		if (kgdb_io_ops.init != kgdb_init_io) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#311: FILE: drivers/serial/kgdb_8250.c:205:
+		} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#324: FILE: drivers/serial/kgdb_8250.c:218:
+	unsigned cval;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#360: FILE: drivers/serial/kgdb_8250.c:254:
+		/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: drivers/serial/kgdb_8250.c:330:
+	iowrite8(UART_MCR_OUT2 | UART_MCR_DTR | UART_MCR_RTS,
+		    kgdb8250_addr + (UART_MCR << KGDB8250_REG_SHIFT));

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#472: FILE: drivers/serial/kgdb_8250.c:366:
+ * Perform static initalization tasks which we need to always do,
                   ^^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/serial/kgdb_8250.c:380:
+			CURRENTPORT.membase = ioport_map(CURRENTPORT.mapbase,
+						      8 << KGDB8250_REG_SHIFT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: drivers/serial/kgdb_8250.c:389:
+		kgdb8250_addr = ioport_map(CURRENTPORT.iobase,
+				8 << KGDB8250_REG_SHIFT);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#510: FILE: drivers/serial/kgdb_8250.c:404:
+		printk(KERN_ERR "kgdb8250: argument error, usage: "

WARNING:SPLIT_STRING: quoted string split across lines
#511: FILE: drivers/serial/kgdb_8250.c:405:
+		printk(KERN_ERR "kgdb8250: argument error, usage: "
+		       "kgdb8250=<port number>,<baud rate>");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#513: FILE: drivers/serial/kgdb_8250.c:407:
+		printk(",<irq>,<iomem base>");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#515: FILE: drivers/serial/kgdb_8250.c:409:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#521: FILE: drivers/serial/kgdb_8250.c:415:
+		printk(KERN_ERR "kgdb8250: local init failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#526: FILE: drivers/serial/kgdb_8250.c:420:
+		printk(KERN_ERR "kgdb8250: init failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#537: FILE: drivers/serial/kgdb_8250.c:431:
+	printk(KERN_INFO "kgdb8250: debugging enabled\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#549: FILE: drivers/serial/kgdb_8250.c:443:
+#if defined(CONFIG_SERIAL_8250) || defined (CONFIG_SERIAL_8250_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/serial/kgdb_8250.c:455:
+	if (request_irq(KGDB8250_IRQ, kgdb8250_interrupt, SA_SHIRQ,
+		    "GDB-stub", &CURRENTPORT) < 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#562: FILE: drivers/serial/kgdb_8250.c:456:
+		printk(KERN_ERR "KGDB failed to request the serial IRQ (%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: drivers/serial/kgdb_8250.c:457:
+		printk(KERN_ERR "KGDB failed to request the serial IRQ (%d)\n",
+				KGDB8250_IRQ);

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#571: FILE: drivers/serial/kgdb_8250.c:465:
+struct kgdb_io local_kgdb_io_ops = {

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#573: FILE: drivers/serial/kgdb_8250.c:467:
+struct kgdb_io kgdb_io_ops = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#584: FILE: drivers/serial/kgdb_8250.c:478:
+ * ^Ikgdb8250_get_ttyS - Return the index of the UART used by kgdb,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#593: FILE: drivers/serial/kgdb_8250.c:487:
+ * ^Ikgdb8250_add_port - Define a serial port for use with KGDB$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#594: FILE: drivers/serial/kgdb_8250.c:488:
+ * ^I@i: The index of the port being added$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#595: FILE: drivers/serial/kgdb_8250.c:489:
+ * ^I@serial_req: The &struct uart_port describing the port$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#597: FILE: drivers/serial/kgdb_8250.c:491:
+ * ^IOn platforms where we must register the serial device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#598: FILE: drivers/serial/kgdb_8250.c:492:
+ * ^Idynamically, this is the best option if a platform also normally$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#599: FILE: drivers/serial/kgdb_8250.c:493:
+ * ^Icalls early_serial_setup().$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#612: FILE: drivers/serial/kgdb_8250.c:506:
+ * ^Ikgdb8250_add_platform_port - Define a serial port for use with KGDB$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#613: FILE: drivers/serial/kgdb_8250.c:507:
+ * ^I@i: The index of the port being added$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#614: FILE: drivers/serial/kgdb_8250.c:508:
+ * ^I@p: The &struct plat_serial8250_port describing the port$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#616: FILE: drivers/serial/kgdb_8250.c:510:
+ * ^IOn platforms where we must register the serial device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#617: FILE: drivers/serial/kgdb_8250.c:511:
+ * ^Idynamically, this is the best option if a platform normally$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#618: FILE: drivers/serial/kgdb_8250.c:512:
+ * ^Ihandles uart setup with an array of &struct plat_serial8250_port.$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#650: FILE: drivers/serial/kgdb_8250.c:544:
+	kgdb8250_baud = simple_strtoul(str, &str, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#659: FILE: drivers/serial/kgdb_8250.c:553:
+		KGDB8250_IRQ = simple_strtoul(str, &str, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#664: FILE: drivers/serial/kgdb_8250.c:558:
+			    (unsigned char *)simple_strtoul(str, &str, 0);

WARNING:INDENTED_LABEL: labels should not be indented
#671: FILE: drivers/serial/kgdb_8250.c:565:
+      errout:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#672: FILE: drivers/serial/kgdb_8250.c:566:
+	printk(KERN_ERR "Invalid syntax for option kgdb8250=\n");

WARNING:SPACING: Unnecessary space before function pointer arguments
#717: FILE: include/linux/kgdb.h:227:
+	void (*write_char) (u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#717: FILE: include/linux/kgdb.h:227:
+	void (*write_char) (u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#725: FILE: include/linux/kgdb.h:244:
+extern int kgdb8250_get_ttyS(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#756: FILE: lib/Kconfig.debug:209:
+config KGDB_8250_NOMODULE
+	bool "KGDB: On generic serial port (8250)"
+	select KGDB_8250
+	help
+	  Uses generic serial port (8250) to communicate with the host
+	  GDB.  This is independent of the normal (SERIAL_8250) driver
+	  for this chipset.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#774: FILE: lib/Kconfig.debug:227:
+config KGDB_8250
+	tristate "KGDB: On generic serial port (8250)" if !KGDB_8250_NOMODULE
+	depends on m && KGDB_ONLY_MODULES
+	help
+	  Uses generic serial port (8250) to communicate with the host
+	  GDB.  This is independent of the normal (SERIAL_8250) driver
+	  for this chipset.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#793: FILE: lib/Kconfig.debug:246:
+choice
+    	prompt "Debug serial port BAUD"
+	depends on KGDB_8250
+	default KGDB_115200BAUD
+	help
+	  gdb and the kernel stub need to agree on the baud rate to be
+	  used.  Standard rates from 9600 to 115200 are allowed, and this
+	  may be overridden via the commandline.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#802: FILE: lib/Kconfig.debug:255:
+config KGDB_9600BAUD
+	bool "9600"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#805: FILE: lib/Kconfig.debug:258:
+config KGDB_19200BAUD
+	bool "19200"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#808: FILE: lib/Kconfig.debug:261:
+config KGDB_38400BAUD
+	bool "38400"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#811: FILE: lib/Kconfig.debug:264:
+config KGDB_57600BAUD
+	bool "57600"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#814: FILE: lib/Kconfig.debug:267:
+config KGDB_115200BAUD
+	bool "115200"

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#818: FILE: lib/Kconfig.debug:271:
+choice
+	prompt "Serial port for KGDB"
+	depends on KGDB_SIMPLE_SERIAL
+	default KGDB_PORT_0
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#823: FILE: lib/Kconfig.debug:276:
+config KGDB_PORT_0
+	bool "Primary serial port"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#826: FILE: lib/Kconfig.debug:279:
+config KGDB_PORT_1
+	bool "First serial port"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#829: FILE: lib/Kconfig.debug:282:
+config KGDB_PORT_2
+	bool "Second serial port"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#832: FILE: lib/Kconfig.debug:285:
+config KGDB_PORT_3
+	bool "Third serial port"

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 54 warnings, 9 checks, 770 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
