WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urpN -X dontdiff linux-2.6.0-test1/include/linux/relayfs_fs.h linux-2.6.0-test1-relayfs-printk/include/linux/relayfs_fs.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#29: FILE: include/linux/relayfs_fs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#30: FILE: include/linux/relayfs_fs.h:2:
+ * linux/include/linux/relayfs_fs.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: include/linux/relayfs_fs.h:84:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#116: FILE: include/linux/relayfs_fs.h:88:
+#define LOW_WATER_TIME 60 * 1000000

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#122: FILE: include/linux/relayfs_fs.h:94:
+struct rchan_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#140: FILE: include/linux/relayfs_fs.h:112:
+struct rchan_callbacks
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: include/linux/relayfs_fs.h:127:
+^I * a value for start_reserve and/or rchan_start_reserve when the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: include/linux/relayfs_fs.h:128:
+^I * channel was opened.  In the latter case, the client can $

WARNING:SPACING: Unnecessary space before function pointer arguments
#161: FILE: include/linux/relayfs_fs.h:133:
+	int (*buffer_start) (int rchan_id,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: include/linux/relayfs_fs.h:154:
+ ^I * the current write wouldn't fit, the buffer is considered full$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: include/linux/relayfs_fs.h:154:
+ ^I * the current write wouldn't fit, the buffer is considered full$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: include/linux/relayfs_fs.h:155:
+ ^I * even though there may be unused space at the end.  The$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: include/linux/relayfs_fs.h:155:
+ ^I * even though there may be unused space at the end.  The$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: include/linux/relayfs_fs.h:156:
+ ^I * end_of_buffer value can be used to determine exactly the size$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: include/linux/relayfs_fs.h:156:
+ ^I * end_of_buffer value can be used to determine exactly the size$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: include/linux/relayfs_fs.h:157:
+^I * of the unused space.  The client should only write into the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: include/linux/relayfs_fs.h:162:
+^I * if it needs to process raw sub-buffers (an alternative would $

WARNING:SPACING: Unnecessary space before function pointer arguments
#195: FILE: include/linux/relayfs_fs.h:167:
+	int (*buffer_end) (int rchan_id,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: include/linux/relayfs_fs.h:180:
+^I * This callback is used to notify a client when a sub-buffer is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: include/linux/relayfs_fs.h:181:
+^I * complete (bulk delivery) or a single write is complete (packet $

WARNING:SPACING: Unnecessary space before function pointer arguments
#214: FILE: include/linux/relayfs_fs.h:186:
+	void (*deliver) (int rchan_id, char *from, u32 len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: include/linux/relayfs_fs.h:197:
+^I * counter will be incremented for each discarded write.  The $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: include/linux/relayfs_fs.h:199:
+^I * API function.  If the client returns 0, writing will continue $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#308: FILE: include/linux/relayfs_fs.h:280:
+struct lockless_rchan
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#325: FILE: include/linux/relayfs_fs.h:297:
+struct locking_rchan
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#347: FILE: include/linux/relayfs_fs.h:319:
+struct rchan
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: include/linux/relayfs_fs.h:332:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: include/linux/relayfs_fs.h:347:
+^I$

WARNING:TYPO_SPELLING: 'repace' may be misspelled - perhaps 'replace'?
#386: FILE: include/linux/relayfs_fs.h:358:
+	struct semaphore resize_sem;	/* serializes alloc/repace */
 	                            	                    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: include/linux/relayfs_fs.h:361:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: include/linux/relayfs_fs.h:368:
+^I$

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#401: FILE: include/linux/relayfs_fs.h:373:
+	int replace_buffer;		/* is the alloced buffer ready?  */
 	                   		          ^^^^^^^

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#404: FILE: include/linux/relayfs_fs.h:376:
+	union
+	{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#414: FILE: include/linux/relayfs_fs.h:386:
+struct free_rchan_buf
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: include/linux/relayfs_fs.h:436:
+calc_time_delta(struct timeval *now, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: include/linux/relayfs_fs.h:449:
+static inline void $

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#489: FILE: include/linux/relayfs_fs.h:461:
+ *	Returns 1 if this architecture has a cmpxchg useable by 
   	                                             ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: include/linux/relayfs_fs.h:461:
+ *^IReturns 1 if this architecture has a cmpxchg useable by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: include/linux/relayfs_fs.h:464:
+static inline int $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'DEST' - possible side-effects?
#505: FILE: include/linux/relayfs_fs.h:477:
+#define relay_write_direct(DEST, SRC, SIZE) \
+do\
+{\
+   memcpy(DEST, SRC, SIZE);\
+   DEST += SIZE;\
+} while (0);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'SIZE' - possible side-effects?
#505: FILE: include/linux/relayfs_fs.h:477:
+#define relay_write_direct(DEST, SRC, SIZE) \
+do\
+{\
+   memcpy(DEST, SRC, SIZE);\
+   DEST += SIZE;\
+} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#505: FILE: include/linux/relayfs_fs.h:477:
+#define relay_write_direct(DEST, SRC, SIZE) \
+do\
+{\
+   memcpy(DEST, SRC, SIZE);\
+   DEST += SIZE;\
+} while (0);

do {} while(0) macros should not have a trailing semicolon.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#506: FILE: include/linux/relayfs_fs.h:478:
+do\
+{\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: include/linux/relayfs_fs.h:480:
+   memcpy(DEST, SRC, SIZE);\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: include/linux/relayfs_fs.h:481:
+   DEST += SIZE;\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: include/linux/relayfs_fs.h:488:
+ *^Iis in use and the channel usage is SMP, does a local_irq_save.  If the $

WARNING:TYPO_SPELLING: 'sheme' may be misspelled - perhaps 'scheme'?
#517: FILE: include/linux/relayfs_fs.h:489:
+ *	locking sheme is in use and the channel usage is GLOBAL, uses 
   	        ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: include/linux/relayfs_fs.h:489:
+ *^Ilocking sheme is in use and the channel usage is GLOBAL, uses $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'RCHAN' - possible side-effects?
#521: FILE: include/linux/relayfs_fs.h:493:
+#define relay_lock_channel(RCHAN, FLAGS) \
+do\
+{\
+   FLAGS = 0;\
+   if (using_locking(RCHAN)) {\
+      if (usage_smp(RCHAN)) {\
+         local_irq_save(FLAGS); \
+      } else {\
+         spin_lock_irqsave(&(RCHAN)->scheme.locking.lock, FLAGS); \
+      }\
+   }\
+} while (0);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'FLAGS' - possible side-effects?
#521: FILE: include/linux/relayfs_fs.h:493:
+#define relay_lock_channel(RCHAN, FLAGS) \
+do\
+{\
+   FLAGS = 0;\
+   if (using_locking(RCHAN)) {\
+      if (usage_smp(RCHAN)) {\
+         local_irq_save(FLAGS); \
+      } else {\
+         spin_lock_irqsave(&(RCHAN)->scheme.locking.lock, FLAGS); \
+      }\
+   }\
+} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#521: FILE: include/linux/relayfs_fs.h:493:
+#define relay_lock_channel(RCHAN, FLAGS) \
+do\
+{\
+   FLAGS = 0;\
+   if (using_locking(RCHAN)) {\
+      if (usage_smp(RCHAN)) {\
+         local_irq_save(FLAGS); \
+      } else {\
+         spin_lock_irqsave(&(RCHAN)->scheme.locking.lock, FLAGS); \
+      }\
+   }\
+} while (0);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#522: FILE: include/linux/relayfs_fs.h:494:
+do\
+{\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: include/linux/relayfs_fs.h:496:
+   FLAGS = 0;\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: include/linux/relayfs_fs.h:497:
+   if (using_locking(RCHAN)) {\$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#525: FILE: include/linux/relayfs_fs.h:497:
+   if (using_locking(RCHAN)) {\
+      if (usage_smp(RCHAN)) {\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: include/linux/relayfs_fs.h:498:
+      if (usage_smp(RCHAN)) {\$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#526: FILE: include/linux/relayfs_fs.h:498:
+      if (usage_smp(RCHAN)) {\
+         local_irq_save(FLAGS); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: include/linux/relayfs_fs.h:499:
+         local_irq_save(FLAGS); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: include/linux/relayfs_fs.h:499:
+         local_irq_save(FLAGS); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: include/linux/relayfs_fs.h:500:
+      } else {\$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#528: FILE: include/linux/relayfs_fs.h:500:
+      } else {\
+         spin_lock_irqsave(&(RCHAN)->scheme.locking.lock, FLAGS); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: include/linux/relayfs_fs.h:501:
+         spin_lock_irqsave(&(RCHAN)->scheme.locking.lock, FLAGS); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: include/linux/relayfs_fs.h:501:
+         spin_lock_irqsave(&(RCHAN)->scheme.locking.lock, FLAGS); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: include/linux/relayfs_fs.h:502:
+      }\$

ERROR:SPACING: space required after that close brace '}'
#530: FILE: include/linux/relayfs_fs.h:502:
+      }\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: include/linux/relayfs_fs.h:503:
+   }\$

ERROR:SPACING: space required after that close brace '}'
#531: FILE: include/linux/relayfs_fs.h:503:
+   }\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'RCHAN' - possible side-effects?
#539: FILE: include/linux/relayfs_fs.h:511:
+#define relay_unlock_channel(RCHAN, FLAGS) \
+do\
+{\
+   if (using_locking(RCHAN)) {\
+      if (usage_smp(RCHAN)) {\
+         local_irq_restore(FLAGS); \
+      } else {\
+         spin_unlock_irqrestore(&(RCHAN)->scheme.locking.lock, FLAGS); \
+      }\
+   }\
+} while (0);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'FLAGS' - possible side-effects?
#539: FILE: include/linux/relayfs_fs.h:511:
+#define relay_unlock_channel(RCHAN, FLAGS) \
+do\
+{\
+   if (using_locking(RCHAN)) {\
+      if (usage_smp(RCHAN)) {\
+         local_irq_restore(FLAGS); \
+      } else {\
+         spin_unlock_irqrestore(&(RCHAN)->scheme.locking.lock, FLAGS); \
+      }\
+   }\
+} while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#539: FILE: include/linux/relayfs_fs.h:511:
+#define relay_unlock_channel(RCHAN, FLAGS) \
+do\
+{\
+   if (using_locking(RCHAN)) {\
+      if (usage_smp(RCHAN)) {\
+         local_irq_restore(FLAGS); \
+      } else {\
+         spin_unlock_irqrestore(&(RCHAN)->scheme.locking.lock, FLAGS); \
+      }\
+   }\
+} while (0);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#540: FILE: include/linux/relayfs_fs.h:512:
+do\
+{\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: include/linux/relayfs_fs.h:514:
+   if (using_locking(RCHAN)) {\$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#542: FILE: include/linux/relayfs_fs.h:514:
+   if (using_locking(RCHAN)) {\
+      if (usage_smp(RCHAN)) {\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: include/linux/relayfs_fs.h:515:
+      if (usage_smp(RCHAN)) {\$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#543: FILE: include/linux/relayfs_fs.h:515:
+      if (usage_smp(RCHAN)) {\
+         local_irq_restore(FLAGS); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: include/linux/relayfs_fs.h:516:
+         local_irq_restore(FLAGS); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: include/linux/relayfs_fs.h:516:
+         local_irq_restore(FLAGS); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: include/linux/relayfs_fs.h:517:
+      } else {\$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#545: FILE: include/linux/relayfs_fs.h:517:
+      } else {\
+         spin_unlock_irqrestore(&(RCHAN)->scheme.locking.lock, FLAGS); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: include/linux/relayfs_fs.h:518:
+         spin_unlock_irqrestore(&(RCHAN)->scheme.locking.lock, FLAGS); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: include/linux/relayfs_fs.h:518:
+         spin_unlock_irqrestore(&(RCHAN)->scheme.locking.lock, FLAGS); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: include/linux/relayfs_fs.h:519:
+      }\$

ERROR:SPACING: space required after that close brace '}'
#547: FILE: include/linux/relayfs_fs.h:519:
+      }\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: include/linux/relayfs_fs.h:520:
+   }\$

ERROR:SPACING: space required after that close brace '}'
#548: FILE: include/linux/relayfs_fs.h:520:
+   }\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: include/linux/relayfs_fs.h:527:
+#define cmpxchg(p,o,n) 0
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: include/linux/relayfs_fs.h:527:
+#define cmpxchg(p,o,n) 0
                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: include/linux/relayfs_fs.h:547:
+extern int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: include/linux/relayfs_fs.h:549:
+^I    const void *data_ptr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: include/linux/relayfs_fs.h:554:
+relay_read(int rchan_id, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: include/linux/relayfs_fs.h:555:
+^I   char * buf, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#583: FILE: include/linux/relayfs_fs.h:555:
+	   char * buf, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: include/linux/relayfs_fs.h:556:
+^I   size_t count, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: include/linux/relayfs_fs.h:557:
+^I   u32 read_offset, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: include/linux/relayfs_fs.h:561:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: include/linux/relayfs_fs.h:567:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: include/linux/relayfs_fs.h:570:
+extern int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: include/linux/relayfs_fs.h:573:
+extern int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#614: FILE: include/linux/relayfs_fs.h:586:
+relay_read_last(int rchan_id, char * buf, size_t count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: include/linux/relayfs_fs.h:605:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: include/linux/relayfs_fs.h:607:
+^I     char *from, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: include/linux/relayfs_fs.h:608:
+^I     u32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#640: FILE: include/linux/relayfs_fs.h:612:
+extern int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: include/linux/relayfs_fs.h:615:
+extern int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#646: FILE: include/linux/relayfs_fs.h:618:
+extern u32 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#652: FILE: include/linux/relayfs_fs.h:624:
+extern int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: include/linux/relayfs_fs.h:625:
+relayfs_create_dir(const char *name, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: include/linux/relayfs_fs.h:626:
+^I^I   struct dentry *parent, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#658: FILE: include/linux/relayfs_fs.h:630:
+relayfs_create_file(const char * name,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: include/linux/relayfs_fs.h:631:
+^I^I    struct dentry *parent, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#661: FILE: include/linux/relayfs_fs.h:633:
+		    void * data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#663: FILE: include/linux/relayfs_fs.h:635:
+extern int $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#670: FILE: include/linux/relayfs_fs.h:642:
+struct relay_ops
+{

WARNING:SPACING: Unnecessary space before function pointer arguments
#671: FILE: include/linux/relayfs_fs.h:643:
+	char * (*reserve) (struct rchan *rchan,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#675: FILE: include/linux/relayfs_fs.h:647:
+			   int * errcode,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#676: FILE: include/linux/relayfs_fs.h:648:
+			   int * interrupting);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: include/linux/relayfs_fs.h:649:
+^I$

WARNING:SPACING: Unnecessary space before function pointer arguments
#678: FILE: include/linux/relayfs_fs.h:650:
+	void (*commit) (struct rchan *rchan,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: include/linux/relayfs_fs.h:651:
+	void (*commit) (struct rchan *rchan,
+		       char *from,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: include/linux/relayfs_fs.h:652:
+^I^I       u32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: include/linux/relayfs_fs.h:653:
+^I^I       int deliver, $

WARNING:SPACING: Unnecessary space before function pointer arguments
#684: FILE: include/linux/relayfs_fs.h:656:
+	u32 (*get_offset) (struct rchan *rchan,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: include/linux/relayfs_fs.h:658:
+^I$

WARNING:SPACING: Unnecessary space before function pointer arguments
#687: FILE: include/linux/relayfs_fs.h:659:
+	void (*resume) (struct rchan *rchan);

WARNING:SPACING: Unnecessary space before function pointer arguments
#688: FILE: include/linux/relayfs_fs.h:660:
+	void (*finalize) (struct rchan *rchan);

WARNING:SPACING: Unnecessary space before function pointer arguments
#689: FILE: include/linux/relayfs_fs.h:661:
+	void (*copy_contents) (struct rchan *rchan,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#692: FILE: include/linux/relayfs_fs.h:664:
+			       char * oldbuf,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#700: FILE: include/linux/relayfs_fs.h:672:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#702: FILE: include/linux/relayfs_fs.h:674:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#708: FILE: include/asm-alpha/relay.h:1:
+#ifndef _ASM_ALPHA_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#717: FILE: include/asm-arm/relay.h:1:
+#ifndef _ASM_ARM_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#726: FILE: include/asm-arm26/relay.h:1:
+#ifndef _ASM_ARM_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#735: FILE: include/asm-cris/relay.h:1:
+#ifndef _ASM_CRIS_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#744: FILE: include/asm-generic/relay.h:1:
+#ifndef _ASM_GENERIC_RELAY_H

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#747: FILE: include/asm-generic/relay.h:4:
+ * linux/include/asm-generic/relay.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: include/asm-generic/relay.h:42:
+static inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#786: FILE: include/asm-generic/relay.h:43:
+get_timestamp(struct timeval *now, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: include/asm-generic/relay.h:58:
+static inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: include/asm-generic/relay.h:59:
+get_time_or_tsc(struct timeval *now, $

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#810: FILE: include/asm-generic/relay.h:67:
+ *	have_tsc - does this platform have a useable TSC?
   	                                     ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: include/asm-generic/relay.h:71:
+static inline int $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#824: FILE: include/asm-h8300/relay.h:1:
+#ifndef _ASM_H8300_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#833: FILE: include/asm-i386/relay.h:1:
+#ifndef _ASM_I386_RELAY_H

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#836: FILE: include/asm-i386/relay.h:4:
+ * linux/include/asm-i386/relay.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#855: FILE: include/asm-i386/relay.h:23:
+ *^Itime difference between the current time and the buffer start time $

CHECK:BRACES: braces {} should be used on all arms of this statement
#863: FILE: include/asm-i386/relay.h:31:
+	if ((using_tsc(rchan) == 1) && cpu_has_tsc)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#865: FILE: include/asm-i386/relay.h:33:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#880: FILE: include/asm-i386/relay.h:48:
+ *^Ipointed to by tsc to the tsc associated with that time, if the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#883: FILE: include/asm-i386/relay.h:51:
+static inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#904: FILE: include/asm-i386/relay.h:72:
+static inline void $

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#916: FILE: include/asm-i386/relay.h:84:
+ *	have_tsc - does this platform have a useable TSC?
   	                                     ^^^^^^^

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#918: FILE: include/asm-i386/relay.h:86:
+ *	Returns 1 if this platform has a useable TSC counter for
   	                                 ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#938: FILE: include/asm-ia64/relay.h:1:
+#ifndef _ASM_IA64_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#947: FILE: include/asm-m68k/relay.h:1:
+#ifndef _ASM_M68K_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#956: FILE: include/asm-m68knommu/relay.h:1:
+#ifndef _ASM_M68KNOMMU_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#965: FILE: include/asm-mips/relay.h:1:
+#ifndef _ASM_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#974: FILE: include/asm-mips64/relay.h:1:
+#ifndef _ASM_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#983: FILE: include/asm-parisc/relay.h:1:
+#ifndef _ASM_PARISC_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#992: FILE: include/asm-ppc/relay.h:1:
+#ifndef _ASM_PPC_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1001: FILE: include/asm-ppc64/relay.h:1:
+#ifndef _ASM_PPC64_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1010: FILE: include/asm-s390/relay.h:1:
+#ifndef _ASM_S390_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1019: FILE: include/asm-sh/relay.h:1:
+#ifndef _ASM_SH_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1028: FILE: include/asm-sparc/relay.h:1:
+#ifndef _ASM_SPARC_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1037: FILE: include/asm-sparc64/relay.h:1:
+#ifndef _ASM_SPARC64_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1046: FILE: include/asm-um/relay.h:1:
+#ifndef __UM_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1055: FILE: include/asm-v850/relay.h:1:
+#ifndef __V850_RELAY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1064: FILE: include/asm-x86_64/relay.h:1:
+#ifndef _ASM_X86_64_RELAY_H

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 85 errors, 72 warnings, 11 checks, 952 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
