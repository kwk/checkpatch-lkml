WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#1. upper level functions of pci_ops functions.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
architecture supports pci_ops, this solution is architecture independent and

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#2. lower level functions of pci_ops functions/or separate functions from

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#92: FILE: pci_hotplug_util.c:166:
+		list_for_each (lh, &pci_root_buses) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#93: FILE: pci_hotplug_util.c:167:
+			pbus = (struct pci_bus *) pci_bus_b(lh);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pbus)...) over kmalloc(sizeof(struct pci_bus)...)
#104: FILE: pci_hotplug_util.c:178:
+	pbus = kmalloc(sizeof(struct pci_bus), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#114: FILE: pci_hotplug_util.c:188:
+static int get_pci_bus (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#114: FILE: pci_hotplug_util.c:188:
+static int get_pci_bus (

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#116: FILE: pci_hotplug_util.c:189:
**pbus)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:BRACES: braces {} should be used on all arms of this statement
#122: FILE: pci_hotplug_util.c:194:
+	if (pdev && pdev->bus)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#124: FILE: pci_hotplug_util.c:196:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: pci_hotplug_util.c:203:
+int pci_config_bare_read (int segnum, int busnum, int devnum, int funcnum,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: pci_hotplug_util.c:204:
+int pci_config_bare_read (int segnum, int busnum, int devnum, int funcnum,
+	int loc, int size, u32 *value)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#170: FILE: pci_hotplug_util.c:238:
+int pci_config_bare_write (int segnum, int busnum, int devnum, int funcnum,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: pci_hotplug_util.c:239:
+int pci_config_bare_write (int segnum, int busnum, int devnum, int funcnum,
+	int loc, int size, u32 value)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#207: FILE: pci_hotplug_util.c:271:
+EXPORT_SYMBOL(pci_config_bare_read);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#208: FILE: pci_hotplug_util.c:272:
+EXPORT_SYMBOL(pci_config_bare_write);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#238: FILE: pci_hotplug_util.c:166:
+		list_for_each (lh, &pci_root_buses) {

CHECK:SPACING: No space is necessary after a cast
#239: FILE: pci_hotplug_util.c:167:
+			pbus = (struct pci_bus *) pci_bus_b(lh);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pbus)...) over kmalloc(sizeof(struct pci_bus)...)
#250: FILE: pci_hotplug_util.c:178:
+	pbus = kmalloc(sizeof(struct pci_bus), GFP_KERNEL);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#260: FILE: pci_hotplug_util.c:188:
+static int get_pci_bus (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: pci_hotplug_util.c:188:
+static int get_pci_bus (

CHECK:BRACES: braces {} should be used on all arms of this statement
#266: FILE: pci_hotplug_util.c:194:
+	if (pdev && pdev->bus)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#268: FILE: pci_hotplug_util.c:196:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: pci_hotplug_util.c:203:
+int pci_config_bare_read (int segnum, int busnum, int devnum, int funcnum,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: pci_hotplug_util.c:204:
+int pci_config_bare_read (int segnum, int busnum, int devnum, int funcnum,
+	int loc, int size, u32 *value)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: pci_hotplug_util.c:238:
+int pci_config_bare_write (int segnum, int busnum, int devnum, int funcnum,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: pci_hotplug_util.c:239:
+int pci_config_bare_write (int segnum, int busnum, int devnum, int funcnum,
+	int loc, int size, u32 value)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#343: FILE: pci_hotplug_util.c:271:
+EXPORT_SYMBOL(pci_config_bare_read);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#344: FILE: pci_hotplug_util.c:272:
+EXPORT_SYMBOL(pci_config_bare_write);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416520.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 15 warnings, 14 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416520.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
