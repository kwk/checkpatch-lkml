WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
diff -urN linux-2.5.66/drivers/s390/cio/airq.c linux-2.5.66-s390/drivers/s390/cio/airq.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#57: FILE: drivers/s390/cio/airq.c:5:
+ *   $Revision: 1.11 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#66: FILE: drivers/s390/cio/airq.c:90:
+do_adapter_IO (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#91: FILE: drivers/s390/cio/airq.h:8:
+extern void do_adapter_IO (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: drivers/s390/cio/airq.h:8:
+extern void do_adapter_IO (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#102: FILE: drivers/s390/cio/chsc.c:4:
+ *   $Revision: 1.63 $

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#116: FILE: drivers/s390/cio/chsc.c:85:
+		__attribute__ ((aligned(PAGE_SIZE))) = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#125: FILE: drivers/s390/cio/chsc.c:92:
+	typeof (chsc_area_ssd.response_block)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/s390/cio/chsc.c:94:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#129: FILE: drivers/s390/cio/chsc.c:96:
+	chsc_area_ssd.request_block.l_sch = irq,
+
 	ccode = chsc(&chsc_area_ssd);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sch->schib.pmcw.lpum == mask'
#158: FILE: drivers/s390/cio/chsc.c:236:
+	if ((sch->schib.scsw.actl & (SCSW_ACTL_CLEAR_PEND |
+				     SCSW_ACTL_HALT_PEND |
+				     SCSW_ACTL_START_PEND |
+				     SCSW_ACTL_RESUME_PEND)) &&
+	    (sch->schib.pmcw.lpum == mask)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: drivers/s390/cio/chsc.c:242:
+^I^I$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#295: FILE: drivers/s390/cio/cio.c:4:
+ *   $Revision: 1.94 $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: drivers/s390/cio/cio.h:117:
+extern int cio_clear (struct subchannel *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: drivers/s390/cio/cio.h:117:
+extern int cio_clear (struct subchannel *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subchannel *' should also have an identifier name
#410: FILE: drivers/s390/cio/cio.h:117:
+extern int cio_clear (struct subchannel *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: drivers/s390/cio/cio.h:119:
+extern int cio_halt (struct subchannel *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#414: FILE: drivers/s390/cio/cio.h:119:
+extern int cio_halt (struct subchannel *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subchannel *' should also have an identifier name
#414: FILE: drivers/s390/cio/cio.h:119:
+extern int cio_halt (struct subchannel *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#415: FILE: drivers/s390/cio/cio.h:120:
+extern int cio_start (struct subchannel *, struct ccw1 *, unsigned int, __u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#415: FILE: drivers/s390/cio/cio.h:120:
+extern int cio_start (struct subchannel *, struct ccw1 *, unsigned int, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct subchannel *' should also have an identifier name
#415: FILE: drivers/s390/cio/cio.h:120:
+extern int cio_start (struct subchannel *, struct ccw1 *, unsigned int, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw1 *' should also have an identifier name
#415: FILE: drivers/s390/cio/cio.h:120:
+extern int cio_start (struct subchannel *, struct ccw1 *, unsigned int, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#415: FILE: drivers/s390/cio/cio.h:120:
+extern int cio_start (struct subchannel *, struct ccw1 *, unsigned int, __u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#415: FILE: drivers/s390/cio/cio.h:120:
+extern int cio_start (struct subchannel *, struct ccw1 *, unsigned int, __u8);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#427: FILE: drivers/s390/cio/css.c:4:
+ *   $Revision: 1.43 $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: drivers/s390/cio/css.c:44:
+	sch = kmalloc (sizeof (*sch), GFP_KERNEL | GFP_DMA);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: drivers/s390/cio/css.c:44:
+	sch = kmalloc (sizeof (*sch), GFP_KERNEL | GFP_DMA);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#477: FILE: drivers/s390/cio/device.c:4:
+ *   $Revision: 1.53 $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#513: FILE: drivers/s390/cio/device.c:149:
+	if ((ret = driver_register(&io_subchannel_driver.drv)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: drivers/s390/cio/device.c:432:
+^I^I/* $

CHECK:SPACING: No space is necessary after a cast
#569: FILE: drivers/s390/cio/device.c:437:
+			  io_subchannel_register, (void *) cdev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: drivers/s390/cio/device.c:516:
+^Icdev->private = kmalloc(sizeof(struct ccw_device_private), $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cdev->private)...) over kmalloc(sizeof(struct ccw_device_private)...)
#607: FILE: drivers/s390/cio/device.c:516:
+	cdev->private = kmalloc(sizeof(struct ccw_device_private), 

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: drivers/s390/cio/device_fsm.c:84:
+			if (cio_halt (sch) == 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#657: FILE: drivers/s390/cio/device_fsm.c:91:
+		if (cio_clear (sch) == 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#755: FILE: drivers/s390/cio/device_fsm.c:544:
+			cdev->handler (cdev, 0, irb);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: drivers/s390/cio/device_fsm.c:564:
+ * Bug operation action. $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#826: FILE: drivers/s390/cio/device_fsm.c:569:
+	printk(KERN_EMERG "dev_jumptable[%i][%i] == NULL\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#828: FILE: drivers/s390/cio/device_fsm.c:571:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#884: FILE: drivers/s390/cio/device_fsm.c:671:
+EXPORT_SYMBOL(ccw_device_set_timeout);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#896: FILE: drivers/s390/cio/device_id.c:203:
+				udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#943: FILE: drivers/s390/cio/device_ops.c:81:
+	ret = cio_start (sch, cpa, 0xe4e2c5d9, lpm);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1011: FILE: drivers/s390/cio/device_ops.c:371:
+EXPORT_SYMBOL(read_dev_chars);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1025: FILE: drivers/s390/cio/device_pgid.c:56:
+^I^I^I^ICIO_MSG_EVENT(2, $

WARNING:SPLIT_STRING: quoted string split across lines
#1027: FILE: drivers/s390/cio/device_pgid.c:58:
+					      "SNID - device %04X, start_io() "
+					      "reports rc : %d, retrying ...\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1029: FILE: drivers/s390/cio/device_pgid.c:60:
+				udelay(100);

WARNING:SPLIT_STRING: quoted string split across lines
#1040: FILE: drivers/s390/cio/device_pgid.c:66:
+			CIO_MSG_EVENT(2, "SNID - Device %04X on Subchannel "
+				      "%04X, lpm %02X, became 'not "

WARNING:SPLIT_STRING: quoted string split across lines
#1041: FILE: drivers/s390/cio/device_pgid.c:67:
+				      "%04X, lpm %02X, became 'not "
+				      "operational'\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1067: FILE: drivers/s390/cio/device_status.c:312:
+	return cio_start (sch, &sch->sense_ccw, 0xE2C5D5E2, 0xff);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1079: FILE: drivers/s390/cio/qdio.c:58:
+#define VERSION_QDIO_C "$Revision: 1.40 $"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1127: FILE: drivers/s390/cio/qdio.c:1584:
+	sprintf(dbf_text,"%s", cdev->dev.bus_id);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1128: FILE: drivers/s390/cio/qdio.c:1585:
+	QDIO_DBF_TEXT2(1,trace,dbf_text);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1128: FILE: drivers/s390/cio/qdio.c:1585:
+	QDIO_DBF_TEXT2(1,trace,dbf_text);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1129: FILE: drivers/s390/cio/qdio.c:1586:
+	QDIO_DBF_HEX2(0,trace,&intparm,sizeof(int));
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1129: FILE: drivers/s390/cio/qdio.c:1586:
+	QDIO_DBF_HEX2(0,trace,&intparm,sizeof(int));
 	                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1129: FILE: drivers/s390/cio/qdio.c:1586:
+	QDIO_DBF_HEX2(0,trace,&intparm,sizeof(int));
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1129: FILE: drivers/s390/cio/qdio.c:1586:
+	QDIO_DBF_HEX2(0,trace,&intparm,sizeof(int));
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1130: FILE: drivers/s390/cio/qdio.c:1587:
+	QDIO_DBF_HEX2(0,trace,&dstat,sizeof(int));
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1130: FILE: drivers/s390/cio/qdio.c:1587:
+	QDIO_DBF_HEX2(0,trace,&dstat,sizeof(int));
 	                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1130: FILE: drivers/s390/cio/qdio.c:1587:
+	QDIO_DBF_HEX2(0,trace,&dstat,sizeof(int));
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1130: FILE: drivers/s390/cio/qdio.c:1587:
+	QDIO_DBF_HEX2(0,trace,&dstat,sizeof(int));
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: drivers/s390/cio/qdio.c:1588:
+	QDIO_DBF_HEX2(0,trace,&cstat,sizeof(int));
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1131: FILE: drivers/s390/cio/qdio.c:1588:
+	QDIO_DBF_HEX2(0,trace,&cstat,sizeof(int));
 	                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1131: FILE: drivers/s390/cio/qdio.c:1588:
+	QDIO_DBF_HEX2(0,trace,&cstat,sizeof(int));
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: drivers/s390/cio/qdio.c:1588:
+	QDIO_DBF_HEX2(0,trace,&cstat,sizeof(int));
 	                            ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1132: FILE: drivers/s390/cio/qdio.c:1589:
+	QDIO_PRINT_ERR("received check condition on activate " \

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1136: FILE: drivers/s390/cio/qdio.c:1593:
+		q=irq_ptr->input_qs[0];
 		 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1138: FILE: drivers/s390/cio/qdio.c:1595:
+		q=irq_ptr->output_qs[0];
 		 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1144: FILE: drivers/s390/cio/qdio.c:1601:
+	q->handler(q->cdev,QDIO_STATUS_ACTIVATE_CHECK_CONDITION|
 	                  ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1144: FILE: drivers/s390/cio/qdio.c:1601:
+	q->handler(q->cdev,QDIO_STATUS_ACTIVATE_CHECK_CONDITION|
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1146: FILE: drivers/s390/cio/qdio.c:1603:
+		   0,0,0,-1,-1,q->int_parm);
 		    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1146: FILE: drivers/s390/cio/qdio.c:1603:
+		   0,0,0,-1,-1,q->int_parm);
 		      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1146: FILE: drivers/s390/cio/qdio.c:1603:
+		   0,0,0,-1,-1,q->int_parm);
 		        ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1146: FILE: drivers/s390/cio/qdio.c:1603:
+		   0,0,0,-1,-1,q->int_parm);
 		         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1146: FILE: drivers/s390/cio/qdio.c:1603:
+		   0,0,0,-1,-1,q->int_parm);
 		           ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1146: FILE: drivers/s390/cio/qdio.c:1603:
+		   0,0,0,-1,-1,q->int_parm);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1146: FILE: drivers/s390/cio/qdio.c:1603:
+		   0,0,0,-1,-1,q->int_parm);
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1148: FILE: drivers/s390/cio/qdio.c:1605:
+	qdio_set_state(irq_ptr,QDIO_IRQ_STATE_STOPPED);
 	                      ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1150: FILE: drivers/s390/cio/qdio.c:1607:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1167: FILE: drivers/s390/cio/qdio.c:1624:
+		QDIO_PRINT_ERR("got unsolicited interrupt in qdio " \

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#1197: FILE: drivers/s390/cio/qdio.c:1660:
+		if ((cstat&~SCHN_STAT_PCI)||dstat) {
 		          ^

ERROR:SPACING: spaces required around that '||' (ctx:VxV)
#1197: FILE: drivers/s390/cio/qdio.c:1660:
+		if ((cstat&~SCHN_STAT_PCI)||dstat) {
 		                          ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1202: FILE: drivers/s390/cio/qdio.c:1665:
+		QDIO_PRINT_ERR("got interrupt for queues in state %d on " \

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1232: FILE: drivers/s390/cio/qdio.c:1671:
 
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1264: FILE: drivers/s390/cio/qdio.c:1703:
+		QDIO_DBF_TEXT2(1,setup,"eq:timeo");
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1264: FILE: drivers/s390/cio/qdio.c:1703:
+		QDIO_DBF_TEXT2(1,setup,"eq:timeo");
 		                      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1273: FILE: drivers/s390/cio/qdio.c:1712:
+		BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#1310: FILE: drivers/s390/cio/qdio.c:2076:
+ ^I/* exchange int handlers, if necessary */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1310: FILE: drivers/s390/cio/qdio.c:2076:
+ ^I/* exchange int handlers, if necessary */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1310: FILE: drivers/s390/cio/qdio.c:2076:
+ ^I/* exchange int handlers, if necessary */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1311: FILE: drivers/s390/cio/qdio.c:2077:
+ ^Iif ((void*)cdev->handler == (void*)qdio_handler)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1311: FILE: drivers/s390/cio/qdio.c:2077:
+ ^Iif ((void*)cdev->handler == (void*)qdio_handler)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: drivers/s390/cio/qdio.c:2077:
+ ^Iif ((void*)cdev->handler == (void*)qdio_handler)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1311: FILE: drivers/s390/cio/qdio.c:2077:
+ 	if ((void*)cdev->handler == (void*)qdio_handler)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1311: FILE: drivers/s390/cio/qdio.c:2077:
+ 	if ((void*)cdev->handler == (void*)qdio_handler)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1312: FILE: drivers/s390/cio/qdio.c:2078:
+ ^I^Icdev->handler=irq_ptr->original_int_handler;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1312: FILE: drivers/s390/cio/qdio.c:2078:
+ ^I^Icdev->handler=irq_ptr->original_int_handler;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1312: FILE: drivers/s390/cio/qdio.c:2078:
+ ^I^Icdev->handler=irq_ptr->original_int_handler;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1312: FILE: drivers/s390/cio/qdio.c:2078:
+ 		cdev->handler=irq_ptr->original_int_handler;
  		             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1401: FILE: drivers/s390/cio/qdio.c:2243:
+		qdio_set_state(irq_ptr,QDIO_IRQ_STATE_ERR);
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1452: FILE: drivers/s390/cio/qdio.c:2277:
+	sprintf(dbf_text,"qehi%4x",cdev->private->irq);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1452: FILE: drivers/s390/cio/qdio.c:2277:
+	sprintf(dbf_text,"qehi%4x",cdev->private->irq);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1453: FILE: drivers/s390/cio/qdio.c:2278:
+	QDIO_DBF_TEXT0(0,setup,dbf_text);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1453: FILE: drivers/s390/cio/qdio.c:2278:
+	QDIO_DBF_TEXT0(0,setup,dbf_text);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1454: FILE: drivers/s390/cio/qdio.c:2279:
+	QDIO_DBF_TEXT0(0,trace,dbf_text);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1454: FILE: drivers/s390/cio/qdio.c:2279:
+	QDIO_DBF_TEXT0(0,trace,dbf_text);
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1477: FILE: drivers/s390/cio/qdio.c:2355:
+	irq_ptr=kmalloc(sizeof(struct qdio_irq), GFP_KERNEL | GFP_DMA);
 	       ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*irq_ptr)...) over kmalloc(sizeof(struct qdio_irq)...)
#1477: FILE: drivers/s390/cio/qdio.c:2355:
+	irq_ptr=kmalloc(sizeof(struct qdio_irq), GFP_KERNEL | GFP_DMA);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1486: FILE: drivers/s390/cio/qdio.c:2368:
+	irq_ptr->qdr=kmalloc(sizeof(struct qdr), GFP_KERNEL | GFP_DMA);
 	            ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*irq_ptr->qdr)...) over kmalloc(sizeof(struct qdr)...)
#1486: FILE: drivers/s390/cio/qdio.c:2368:
+	irq_ptr->qdr=kmalloc(sizeof(struct qdr), GFP_KERNEL | GFP_DMA);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1587: FILE: drivers/s390/cio/qdio.c:2577:
+	if (irq_ptr->state == QDIO_IRQ_STATE_ESTABLISHED)
[...]
-	else 
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1590: FILE: drivers/s390/cio/qdio.c:2579:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1636: FILE: drivers/s390/cio/qdio.c:2672:
+	if (irq_ptr->state == QDIO_IRQ_STATE_ACTIVE)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1638: FILE: drivers/s390/cio/qdio.c:2674:
+	else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1650: FILE: drivers/s390/cio/qdio.c:2825:
+	sprintf(dbf_text,"doQD%04x",cdev->private->irq);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1650: FILE: drivers/s390/cio/qdio.c:2825:
+	sprintf(dbf_text,"doQD%04x",cdev->private->irq);
 	                           ^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1662: FILE: drivers/s390/cio/qdio.h:4:
+#define VERSION_CIO_QDIO_H "$Revision: 1.13 $"

WARNING:SPACING: Unnecessary space before function pointer arguments
#1732: FILE: drivers/s390/cio/qdio.h:698:
+	void (*timeout) (struct ccw_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_device *' should also have an identifier name
#1732: FILE: drivers/s390/cio/qdio.h:698:
+	void (*timeout) (struct ccw_device *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1734: FILE: drivers/s390/cio/qdio.h:700:
+ ^Ivoid (*original_int_handler) (struct ccw_device *,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1734: FILE: drivers/s390/cio/qdio.h:700:
+ ^Ivoid (*original_int_handler) (struct ccw_device *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1734: FILE: drivers/s390/cio/qdio.h:700:
+ ^Ivoid (*original_int_handler) (struct ccw_device *,$

WARNING:SPACING: Unnecessary space before function pointer arguments
#1734: FILE: drivers/s390/cio/qdio.h:700:
+ 	void (*original_int_handler) (struct ccw_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_device *' should also have an identifier name
#1734: FILE: drivers/s390/cio/qdio.h:700:
+ 	void (*original_int_handler) (struct ccw_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1734: FILE: drivers/s390/cio/qdio.h:700:
+ 	void (*original_int_handler) (struct ccw_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irb *' should also have an identifier name
#1734: FILE: drivers/s390/cio/qdio.h:700:
+ 	void (*original_int_handler) (struct ccw_device *,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1735: FILE: drivers/s390/cio/qdio.h:701:
+ ^I^I^I^I      unsigned long, struct irb *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1735: FILE: drivers/s390/cio/qdio.h:701:
+ ^I^I^I^I      unsigned long, struct irb *);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1735: FILE: drivers/s390/cio/qdio.h:701:
+ 	void (*original_int_handler) (struct ccw_device *,
+ 				      unsigned long, struct irb *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1735: FILE: drivers/s390/cio/qdio.h:701:
+ ^I^I^I^I      unsigned long, struct irb *);$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1747: FILE: drivers/s390/s390mach.c:24:
+extern void chp_process_crw(int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1747: FILE: drivers/s390/s390mach.c:24:
+extern void chp_process_crw(int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1747: FILE: drivers/s390/s390mach.c:24:
+extern void chp_process_crw(int, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382469.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 55 errors, 59 warnings, 20 checks, 1573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382469.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
