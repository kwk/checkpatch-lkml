WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#52: FILE: drivers/spi/Kconfig:45:
+config SPI_PNX
+ 	tristate "PNX SPI bus support"
+ 	depends on ARCH_PNX4008 && SPI
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#56: FILE: drivers/spi/Kconfig:49:
+config SPI_PNX4008_EEPROM
+ 	tristate "Dummy EEPROM driver"
+ 	depends on SPI && SPI_PNX && ARCH_PNX4008
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: drivers/spi/pnx4008-eeprom.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#86: FILE: drivers/spi/pnx4008-eeprom.c:20:
+static int spiee_read_block (struct device *d, void *block)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: drivers/spi/pnx4008-eeprom.c:22:
+	struct spi_device *device = TO_SPI_DEV (d);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#91: FILE: drivers/spi/pnx4008-eeprom.c:25:
+					SPI_M_CS|SPI_M_CSREL,
 					        ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#95: FILE: drivers/spi/pnx4008-eeprom.c:29:
+	struct spi_msg *msg_cmd = spimsg_chain(msg, SPI_M_CS|SPI_M_WR|SPI_M_DMAUNSAFE, cmd, 2, NULL);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#95: FILE: drivers/spi/pnx4008-eeprom.c:29:
+	struct spi_msg *msg_cmd = spimsg_chain(msg, SPI_M_CS|SPI_M_WR|SPI_M_DMAUNSAFE, cmd, 2, NULL);
 	                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#95: FILE: drivers/spi/pnx4008-eeprom.c:29:
+	struct spi_msg *msg_cmd = spimsg_chain(msg, SPI_M_CS|SPI_M_WR|SPI_M_DMAUNSAFE, cmd, 2, NULL);
 	                                                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#96: FILE: drivers/spi/pnx4008-eeprom.c:30:
+	struct spi_msg *msg_cmd = spimsg_chain(msg, SPI_M_CS|SPI_M_WR|SPI_M_DMAUNSAFE, cmd, 2, NULL);
+	spimsg_chain(msg_cmd, SPI_M_RD|SPI_M_CSREL,  block, 256, NULL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#96: FILE: drivers/spi/pnx4008-eeprom.c:30:
+	spimsg_chain(msg_cmd, SPI_M_RD|SPI_M_CSREL,  block, 256, NULL);
 	                              ^

ERROR:SPACING: space prohibited after that open square bracket '['
#98: FILE: drivers/spi/pnx4008-eeprom.c:32:
+	cmd[ 0 ] = 0x03;

ERROR:SPACING: space prohibited before that close square bracket ']'
#98: FILE: drivers/spi/pnx4008-eeprom.c:32:
+	cmd[ 0 ] = 0x03;

ERROR:SPACING: space prohibited after that open square bracket '['
#99: FILE: drivers/spi/pnx4008-eeprom.c:33:
+	cmd[ 1 ] = 0x00;

ERROR:SPACING: space prohibited before that close square bracket ']'
#99: FILE: drivers/spi/pnx4008-eeprom.c:33:
+	cmd[ 1 ] = 0x00;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#106: FILE: drivers/spi/pnx4008-eeprom.c:40:
+}
+static ssize_t blk_show (struct device *d, struct device_attribute *attr, char *text )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: drivers/spi/pnx4008-eeprom.c:40:
+static ssize_t blk_show (struct device *d, struct device_attribute *attr, char *text )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#106: FILE: drivers/spi/pnx4008-eeprom.c:40:
+static ssize_t blk_show (struct device *d, struct device_attribute *attr, char *text )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#108: FILE: drivers/spi/pnx4008-eeprom.c:42:
+	char *rdbuff = kmalloc (256, SLAB_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: drivers/spi/pnx4008-eeprom.c:43:
+	char line1[80],line2[80];
 	              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: drivers/spi/pnx4008-eeprom.c:47:
+	blen = spiee_read_block (d, rdbuff);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#120: FILE: drivers/spi/pnx4008-eeprom.c:54:
+		strcpy(line2, "" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#124: FILE: drivers/spi/pnx4008-eeprom.c:58:
+				sprintf(item2, " " );

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#127: FILE: drivers/spi/pnx4008-eeprom.c:61:
+				if (isprint(rdbuff[x])) {
[...]
+				} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#138: FILE: drivers/spi/pnx4008-eeprom.c:72:
+		strcat(text, "|  " );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#140: FILE: drivers/spi/pnx4008-eeprom.c:74:
+		strcat(text, "\n" );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: drivers/spi/pnx4008-eeprom.c:76:
+		bytes += (strlen (line1 ) + strlen(line2) + 4);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#142: FILE: drivers/spi/pnx4008-eeprom.c:76:
+		bytes += (strlen (line1 ) + strlen(line2) + 4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: drivers/spi/pnx4008-eeprom.c:79:
+	kfree (rdbuff);

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#148: FILE: drivers/spi/pnx4008-eeprom.c:82:
+}

The DEVICE_ATTR_RO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0444, name_show, NULL);

Note that the macro automatically appends _show to the named
attribute variable of the device for the show method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

ERROR:SPACING: space prohibited before that close parenthesis ')'
#150: FILE: drivers/spi/pnx4008-eeprom.c:84:
+static DEVICE_ATTR(blk, S_IRUGO, blk_show, NULL );

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#150: FILE: drivers/spi/pnx4008-eeprom.c:84:
+static DEVICE_ATTR(blk, S_IRUGO, blk_show, NULL );

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#152: FILE: drivers/spi/pnx4008-eeprom.c:86:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#177: FILE: drivers/spi/pnx4008-eeprom.c:111:
+}
+static void __exit spi_eeprom_cleanup(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#193: FILE: drivers/spi/spipnx-init.h:1:
+#include <linux/kernel.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#207: FILE: drivers/spi/spipnx.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#241: FILE: drivers/spi/spipnx.c:35:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#244: FILE: drivers/spi/spipnx.c:38:
+#include <asm/uaccess.h>

ERROR:SPACING: space prohibited after that open parenthesis '('
#252: FILE: drivers/spi/spipnx.c:46:
+#define lock_device( dev )	/* down( &dev->sem ); */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#252: FILE: drivers/spi/spipnx.c:46:
+#define lock_device( dev )	/* down( &dev->sem ); */

ERROR:SPACING: space prohibited after that open parenthesis '('
#253: FILE: drivers/spi/spipnx.c:47:
+#define unlock_device( dev )	/* up( &dev->sem );   */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#253: FILE: drivers/spi/spipnx.c:47:
+#define unlock_device( dev )	/* up( &dev->sem );   */

ERROR:SPACING: space prohibited after that open parenthesis '('
#255: FILE: drivers/spi/spipnx.c:49:
+#define spipnx_dump_xchg(xxx...) pr_debug( xxx )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#255: FILE: drivers/spi/spipnx.c:49:
+#define spipnx_dump_xchg(xxx...) pr_debug( xxx )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#257: FILE: drivers/spi/spipnx.c:51:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: drivers/spi/spipnx.c:64:
+static void spipnx_reset (struct device *bus_device, u32 context);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#274: FILE: drivers/spi/spipnx.c:68:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/spi/spipnx.c:80:
+ ^I.reset = spipnx_reset,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: drivers/spi/spipnx.c:80:
+ ^I.reset = spipnx_reset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/spi/spipnx.c:80:
+ ^I.reset = spipnx_reset,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#322: FILE: drivers/spi/spipnx.c:116:
+	dev_dbg (bus_device, "setting clock speed to %d\n", dd->saved_clock );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#322: FILE: drivers/spi/spipnx.c:116:
+	dev_dbg (bus_device, "setting clock speed to %d\n", dd->saved_clock );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: drivers/spi/spipnx.c:119:
+static void spipnx_reset (struct device *bus_device, u32 context )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#325: FILE: drivers/spi/spipnx.c:119:
+static void spipnx_reset (struct device *bus_device, u32 context )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#330: FILE: drivers/spi/spipnx.c:124:
+	dev_dbg (bus_device, "CON set to 0x%08X\n", context );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#330: FILE: drivers/spi/spipnx.c:124:
+	dev_dbg (bus_device, "CON set to 0x%08X\n", context );

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dd)...) over kzalloc(sizeof(struct spipnx_driver_data)...)
#338: FILE: drivers/spi/spipnx.c:132:
+	dd = kzalloc(sizeof(struct spipnx_driver_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space prohibited after that open parenthesis '('
#361: FILE: drivers/spi/spipnx.c:155:
+	spipnx_arch_add_devices( device, to_platform_device(device)->id );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#361: FILE: drivers/spi/spipnx.c:155:
+	spipnx_arch_add_devices( device, to_platform_device(device)->id );

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#394: FILE: drivers/spi/spipnx.c:188:
+		/*
+		release_mem_region((unsigned long)dd->iostart,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#408: FILE: drivers/spi/spipnx.c:202:
+		printk(KERN_ERR

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#415: FILE: drivers/spi/spipnx.c:209:
+void spipnx_dma_handler (int channel, int cause, void* context, struct pt_regs* pt_regs )

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#415: FILE: drivers/spi/spipnx.c:209:
+void spipnx_dma_handler (int channel, int cause, void* context, struct pt_regs* pt_regs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#415: FILE: drivers/spi/spipnx.c:209:
+void spipnx_dma_handler (int channel, int cause, void* context, struct pt_regs* pt_regs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#420: FILE: drivers/spi/spipnx.c:214:
+	if (cause & DMA_TC_INT )

ERROR:SPACING: space prohibited after that open parenthesis '('
#421: FILE: drivers/spi/spipnx.c:215:
+		complete( &dd->threshold );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#421: FILE: drivers/spi/spipnx.c:215:
+		complete( &dd->threshold );

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#438: FILE: drivers/spi/spipnx.c:232:
+		/*
+		if (!request_mem_region

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#473: FILE: drivers/spi/spipnx.c:267:
+	printk("PNX/SPI bus driver\n");

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#491: FILE: drivers/spi/spipnx.c:285:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#499: FILE: drivers/spi/spipnx.c:293:
+	config |= (7<<9);
 	            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#513: FILE: drivers/spi/spipnx.c:307:
+spipnx_xfer_buggy (struct spi_msg *msg)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#515: FILE: drivers/spi/spipnx.c:309:
+	u8* dat;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#522: FILE: drivers/spi/spipnx.c:316:
+	vhblas_spiregs* regs;

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#551: FILE: drivers/spi/spipnx.c:345:
+				params.dma_buffer = dma_map_single(dev->parent, dat, len, DMA_TO_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/spi/spipnx.c:350:
+				spipnx_setup_dma(dd->iostart, dd->slave_nr, dd->dma_channel,
+					 DMA_MODE_WRITE, dat, len);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#557: FILE: drivers/spi/spipnx.c:351:
+				init_completion (&dd->threshold);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#559: FILE: drivers/spi/spipnx.c:353:
+				wait_for_completion (&dd->threshold);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#561: FILE: drivers/spi/spipnx.c:355:
+				dma_unmap_single(dev->parent, params.dma_buffer, len, DMA_TO_DEVICE);

ERROR:SPACING: space required one side of that '++' (ctx:WxW)
#564: FILE: drivers/spi/spipnx.c:358:
+				for (i = 0; i < len ; i ++ ) {
 				                        ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#564: FILE: drivers/spi/spipnx.c:358:
+				for (i = 0; i < len ; i ++ ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: drivers/spi/spipnx.c:360:
+^I^I^I       ^I^I^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#566: FILE: drivers/spi/spipnx.c:360:
+^I^I^I       ^I^I^Icontinue;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#568: FILE: drivers/spi/spipnx.c:362:
+					dat ++;
 					    ^

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#588: FILE: drivers/spi/spipnx.c:382:
+				params.dma_buffer = dma_map_single(dev->parent, dat, len - (FIFO_CHUNK_SIZE - 1), DMA_FROM_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: drivers/spi/spipnx.c:387:
+				spipnx_setup_dma(dd->iostart, dd->slave_nr, dd->dma_channel,
+					 DMA_MODE_READ, dat, len - (FIFO_CHUNK_SIZE - 1));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#594: FILE: drivers/spi/spipnx.c:388:
+				init_completion (&dd->threshold);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#596: FILE: drivers/spi/spipnx.c:390:
+				wait_for_completion (&dd->threshold);

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#598: FILE: drivers/spi/spipnx.c:392:
+				dma_unmap_single(dev->parent, params.dma_buffer, len - (FIFO_CHUNK_SIZE - 1), DMA_FROM_DEVICE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: drivers/spi/spipnx.c:397:
+                ^Istopped = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#603: FILE: drivers/spi/spipnx.c:397:
+                ^Istopped = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: drivers/spi/spipnx.c:397:
+                ^Istopped = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: drivers/spi/spipnx.c:398:
+^I                stat = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: drivers/spi/spipnx.c:399:
+        ^I        for(i = 0; i < len; ) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#605: FILE: drivers/spi/spipnx.c:399:
+        ^I        for(i = 0; i < len; ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: drivers/spi/spipnx.c:399:
+        ^I        for(i = 0; i < len; ) {$

ERROR:SPACING: space required before the open parenthesis '('
#605: FILE: drivers/spi/spipnx.c:399:
+        	        for(i = 0; i < len; ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#607: FILE: drivers/spi/spipnx.c:401:
+				unsigned long irq_flags;
+				local_irq_save(irq_flags);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#609: FILE: drivers/spi/spipnx.c:403:
+				stat = dd->spi_regs->stat;;

ERROR:SPACING: space required before the open parenthesis '('
#612: FILE: drivers/spi/spipnx.c:406:
+				if(fc == 0) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#617: FILE: drivers/spi/spipnx.c:411:
+				if((!(stat & SPI_STAT_SPI_BE)) && ((fc > 4) || (stopped ))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fc > 4'
#617: FILE: drivers/spi/spipnx.c:411:
+				if((!(stat & SPI_STAT_SPI_BE)) && ((fc > 4) || (stopped ))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#617: FILE: drivers/spi/spipnx.c:411:
+				if((!(stat & SPI_STAT_SPI_BE)) && ((fc > 4) || (stopped ))) {

ERROR:SPACING: spaces required around that '=' (ctx:OxW)
#618: FILE: drivers/spi/spipnx.c:412:
+					*dat++= c = dd->spi_regs->dat;
 					      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!stopped'
#621: FILE: drivers/spi/spipnx.c:415:
+				if((stat & SPI_STAT_SPI_BF) && (!stopped)) {

ERROR:SPACING: space required before the open parenthesis '('
#621: FILE: drivers/spi/spipnx.c:415:
+				if((stat & SPI_STAT_SPI_BF) && (!stopped)) {

ERROR:SPACING: spaces required around that '=' (ctx:OxW)
#622: FILE: drivers/spi/spipnx.c:416:
+					*dat++= c = dd->spi_regs->dat;
 					      ^

WARNING:TABSTOP: Statements should start on a tabstop
#626: FILE: drivers/spi/spipnx.c:420:
+			 }

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#636: FILE: drivers/spi/spipnx.c:430:
+static inline char *spimsg_flags_str(unsigned flags)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#687: FILE: drivers/spi/spipnx.c:481:
+	spipnx_release_dma(&dd->dma_channel);	/* any sanity checks, eg using DMA,
+						   will be done here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#687: FILE: drivers/spi/spipnx.c:481:
+						   will be done here */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#711: FILE: drivers/spi/spipnx.c:505:
+EXPORT_SYMBOL(spipnx_set_mode);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#722: FILE: drivers/spi/spipnx.h:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#743: FILE: drivers/spi/spipnx.h:22:
+	unsigned io_flags;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#765: FILE: drivers/spi/spipnx.h:44:
+	void (*control) (struct spi_device * dev, int code, u32 ctl);

WARNING:SPACING: Unnecessary space before function pointer arguments
#765: FILE: drivers/spi/spipnx.h:44:
+	void (*control) (struct spi_device * dev, int code, u32 ctl);

ERROR:SPACING: space prohibited after that open parenthesis '('
#772: FILE: drivers/spi/spipnx.h:51:
+#define SPIPNX_IS_READY( bus )  ( (bus)->state == SPIPNX_STATE_READY )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#772: FILE: drivers/spi/spipnx.h:51:
+#define SPIPNX_IS_READY( bus )  ( (bus)->state == SPIPNX_STATE_READY )

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 54 warnings, 16 checks, 711 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
