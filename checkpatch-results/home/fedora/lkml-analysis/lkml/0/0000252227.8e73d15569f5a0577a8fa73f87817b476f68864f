WARNING:TYPO_SPELLING: 'immidiately' may be misspelled - perhaps 'immediately'?
#50: 
least it doesn't blow up immidiately since I'm currently running a 
                         ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'occour' may be misspelled - perhaps 'occur'?
#64: 
the errors where they occour, but in the end I settled on keeping it and 
                      ^^^^^^

CHECK:SPACING: No space is necessary after a cast
#94: FILE: fs/binfmt_elf.c:113:
+		retval = clear_user((void __user *) elf_bss, nbyte);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#163: FILE: fs/binfmt_elf.c:755:
+				if (clear_user((void __user *) elf_bss + load_bias, nbyte)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'interpreter_type == INTERPRETER_AOUT'
#190: FILE: fs/binfmt_elf.c:879:
+	if ((retval = create_elf_tables(bprm, &elf_ex, (interpreter_type == INTERPRETER_AOUT),
+			load_addr, interp_load_addr)) != 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#190: FILE: fs/binfmt_elf.c:879:
+	if ((retval = create_elf_tables(bprm, &elf_ex, (interpreter_type == INTERPRETER_AOUT),

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: fs/binfmt_elf.c:880:
+	if ((retval = create_elf_tables(bprm, &elf_ex, (interpreter_type == INTERPRETER_AOUT),
+			load_addr, interp_load_addr)) != 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: fs/binfmt_elf.c:1236:
+^I/* If we fail to copy all from userspace for some odd reason, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: fs/binfmt_elf.c:1237:
+^I * then adjust len. The entire struct is has been zeroed, $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252227.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 2 warnings, 4 checks, 135 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252227.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
