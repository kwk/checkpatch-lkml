WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
ChangeSet 1.1938.446.2, 2004/12/15 14:12:32-08:00, alborchers@steinerpoint.com

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1:
+/* vi: ts=8 sw=8

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: drivers/usb/serial/ti_usb_3410_5052.c:19:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#110: FILE: drivers/usb/serial/ti_usb_3410_5052.c:31:
+ * ^Iexit$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: drivers/usb/serial/ti_usb_3410_5052.c:38:
+ * ^Iexit$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: drivers/usb/serial/ti_usb_3410_5052.c:48:
+ * ^Is=$1$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: drivers/usb/serial/ti_usb_3410_5052.c:49:
+ * ^Ishift$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: drivers/usb/serial/ti_usb_3410_5052.c:50:
+ * ^Ifor i$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#130: FILE: drivers/usb/serial/ti_usb_3410_5052.c:51:
+ * ^Ido$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#131: FILE: drivers/usb/serial/ti_usb_3410_5052.c:52:
+ * ^I^Iif [[ $s -eq $i ]]$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#132: FILE: drivers/usb/serial/ti_usb_3410_5052.c:53:
+ * ^I^Ithen$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#133: FILE: drivers/usb/serial/ti_usb_3410_5052.c:54:
+ * ^I^I^Ireturn 0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: drivers/usb/serial/ti_usb_3410_5052.c:55:
+ * ^I^Ifi$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: drivers/usb/serial/ti_usb_3410_5052.c:56:
+ * ^Idone$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: drivers/usb/serial/ti_usb_3410_5052.c:57:
+ * ^Ireturn 1$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: drivers/usb/serial/ti_usb_3410_5052.c:67:
+ * ^Iecho $ACTIVE_CONFIG > $CONFIG_PATH$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#163: FILE: drivers/usb/serial/ti_usb_3410_5052.c:84:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#172: FILE: drivers/usb/serial/ti_usb_3410_5052.c:93:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#198: FILE: drivers/usb/serial/ti_usb_3410_5052.c:119:
+
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#215: FILE: drivers/usb/serial/ti_usb_3410_5052.c:136:
+	spinlock_t		tp_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#229: FILE: drivers/usb/serial/ti_usb_3410_5052.c:150:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/usb/serial/ti_usb_3410_5052.c:158:
+static int ti_write(struct usb_serial_port *port, const unsigned char *data,
+	int count);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#242: FILE: drivers/usb/serial/ti_usb_3410_5052.c:163:
+static int ti_ioctl(struct usb_serial_port *port, struct file *file, unsigned int cmd, unsigned long arg);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/usb/serial/ti_usb_3410_5052.c:165:
+static void ti_set_termios(struct usb_serial_port *port,
+	struct termios *old_termios);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/usb/serial/ti_usb_3410_5052.c:168:
+static int ti_tiocmset(struct usb_serial_port *port, struct file *file,
+	unsigned int set, unsigned int clear);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/usb/serial/ti_usb_3410_5052.c:175:
+static void ti_recv(struct device *dev, struct tty_struct *tty,
+	unsigned char *data, int length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: drivers/usb/serial/ti_usb_3410_5052.c:180:
+static int ti_get_serial_info(struct ti_port *tport,
+	struct serial_struct __user *ret_arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: drivers/usb/serial/ti_usb_3410_5052.c:182:
+static int ti_set_serial_info(struct ti_port *tport,
+	struct serial_struct *new_arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/usb/serial/ti_usb_3410_5052.c:191:
+static int ti_command_out_sync(struct ti_device *tdev, __u8 command,
+	__u16 moduleid, __u16 value, __u8 *data, int size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/usb/serial/ti_usb_3410_5052.c:193:
+static int ti_command_in_sync(struct ti_device *tdev, __u8 command,
+	__u16 moduleid, __u16 value, __u8 *data, int size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/usb/serial/ti_usb_3410_5052.c:196:
+static int ti_write_byte(struct ti_device *tdev, unsigned long addr,
+	__u8 mask, __u8 byte);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/usb/serial/ti_usb_3410_5052.c:199:
+static int ti_download_firmware(struct ti_device *tdev,
+	unsigned char *firmware, unsigned int firmware_size);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#289: FILE: drivers/usb/serial/ti_usb_3410_5052.c:210:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#309: FILE: drivers/usb/serial/ti_usb_3410_5052.c:230:
+static struct usb_device_id ti_id_table_3410[1+TI_EXTRA_VID_PID_COUNT+1] = {
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#309: FILE: drivers/usb/serial/ti_usb_3410_5052.c:230:
+static struct usb_device_id ti_id_table_3410[1+TI_EXTRA_VID_PID_COUNT+1] = {
                                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#313: FILE: drivers/usb/serial/ti_usb_3410_5052.c:234:
+static struct usb_device_id ti_id_table_5052[4+TI_EXTRA_VID_PID_COUNT+1] = {
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#313: FILE: drivers/usb/serial/ti_usb_3410_5052.c:234:
+static struct usb_device_id ti_id_table_5052[4+TI_EXTRA_VID_PID_COUNT+1] = {
                                                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#391: FILE: drivers/usb/serial/ti_usb_3410_5052.c:312:
+
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#399: FILE: drivers/usb/serial/ti_usb_3410_5052.c:320:
+module_param(debug, bool, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#402: FILE: drivers/usb/serial/ti_usb_3410_5052.c:323:
+module_param(low_latency, bool, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#405: FILE: drivers/usb/serial/ti_usb_3410_5052.c:326:
+module_param(closing_wait, int, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#408: FILE: drivers/usb/serial/ti_usb_3410_5052.c:329:
+module_param_array(vendor_3410, ushort, &vendor_3410_count, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#410: FILE: drivers/usb/serial/ti_usb_3410_5052.c:331:
+module_param_array(product_3410, ushort, &product_3410_count, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#412: FILE: drivers/usb/serial/ti_usb_3410_5052.c:333:
+module_param_array(vendor_5052, ushort, &vendor_5052_count, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#414: FILE: drivers/usb/serial/ti_usb_3410_5052.c:335:
+module_param_array(product_5052, ushort, &product_5052_count, S_IRUGO);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#419: FILE: drivers/usb/serial/ti_usb_3410_5052.c:340:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: drivers/usb/serial/ti_usb_3410_5052.c:345:
+	int i,j;
 	     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#427: FILE: drivers/usb/serial/ti_usb_3410_5052.c:348:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#429: FILE: drivers/usb/serial/ti_usb_3410_5052.c:350:
+	j = sizeof(ti_id_table_3410)/sizeof(struct usb_device_id)
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#431: FILE: drivers/usb/serial/ti_usb_3410_5052.c:352:
+	for (i=0; i<min(vendor_3410_count,product_3410_count); i++,j++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#431: FILE: drivers/usb/serial/ti_usb_3410_5052.c:352:
+	for (i=0; i<min(vendor_3410_count,product_3410_count); i++,j++) {
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#431: FILE: drivers/usb/serial/ti_usb_3410_5052.c:352:
+	for (i=0; i<min(vendor_3410_count,product_3410_count); i++,j++) {
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#431: FILE: drivers/usb/serial/ti_usb_3410_5052.c:352:
+	for (i=0; i<min(vendor_3410_count,product_3410_count); i++,j++) {
 	                                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#432: FILE: drivers/usb/serial/ti_usb_3410_5052.c:353:
+		ti_id_table_3410[j].idVendor = vendor_3410[i];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#433: FILE: drivers/usb/serial/ti_usb_3410_5052.c:354:
+		ti_id_table_3410[j].idProduct = product_3410[i];

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#436: FILE: drivers/usb/serial/ti_usb_3410_5052.c:357:
+	j = sizeof(ti_id_table_5052)/sizeof(struct usb_device_id)
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#438: FILE: drivers/usb/serial/ti_usb_3410_5052.c:359:
+	for (i=0; i<min(vendor_5052_count,product_5052_count); i++,j++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#438: FILE: drivers/usb/serial/ti_usb_3410_5052.c:359:
+	for (i=0; i<min(vendor_5052_count,product_5052_count); i++,j++) {
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#438: FILE: drivers/usb/serial/ti_usb_3410_5052.c:359:
+	for (i=0; i<min(vendor_5052_count,product_5052_count); i++,j++) {
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#438: FILE: drivers/usb/serial/ti_usb_3410_5052.c:359:
+	for (i=0; i<min(vendor_5052_count,product_5052_count); i++,j++) {
 	                                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#467: FILE: drivers/usb/serial/ti_usb_3410_5052.c:388:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#475: FILE: drivers/usb/serial/ti_usb_3410_5052.c:396:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#479: FILE: drivers/usb/serial/ti_usb_3410_5052.c:400:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#488: FILE: drivers/usb/serial/ti_usb_3410_5052.c:409:
+
+

WARNING:LONG_LINE: line length of 200 exceeds 100 columns
#489: FILE: drivers/usb/serial/ti_usb_3410_5052.c:410:
+	dbg("%s - product 0x%4X, num configurations %d, configuration value %d", __FUNCTION__, dev->descriptor.idProduct, dev->descriptor.bNumConfigurations, dev->actconfig->desc.bConfigurationValue);

CHECK:CAMELCASE: Avoid CamelCase: <bNumConfigurations>
#489: FILE: drivers/usb/serial/ti_usb_3410_5052.c:410:
+	dbg("%s - product 0x%4X, num configurations %d, configuration value %d", __FUNCTION__, dev->descriptor.idProduct, dev->descriptor.bNumConfigurations, dev->actconfig->desc.bConfigurationValue);

CHECK:CAMELCASE: Avoid CamelCase: <bConfigurationValue>
#489: FILE: drivers/usb/serial/ti_usb_3410_5052.c:410:
+	dbg("%s - product 0x%4X, num configurations %d, configuration value %d", __FUNCTION__, dev->descriptor.idProduct, dev->descriptor.bNumConfigurations, dev->actconfig->desc.bConfigurationValue);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#489: FILE: drivers/usb/serial/ti_usb_3410_5052.c:410:
+	dbg("%s - product 0x%4X, num configurations %d, configuration value %d", __FUNCTION__, dev->descriptor.idProduct, dev->descriptor.bNumConfigurations, dev->actconfig->desc.bConfigurationValue);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tdev)...) over kmalloc(sizeof(struct ti_device)...)
#492: FILE: drivers/usb/serial/ti_usb_3410_5052.c:413:
+	tdev = kmalloc(sizeof(struct ti_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tdev"
#493: FILE: drivers/usb/serial/ti_usb_3410_5052.c:414:
+	if (tdev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#494: FILE: drivers/usb/serial/ti_usb_3410_5052.c:415:
+	if (tdev == NULL) {
+		dev_err(&dev->dev, "%s - out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#494: FILE: drivers/usb/serial/ti_usb_3410_5052.c:415:
+		dev_err(&dev->dev, "%s - out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#505: FILE: drivers/usb/serial/ti_usb_3410_5052.c:426:
+	dbg("%s - device type is %s", __FUNCTION__, tdev->td_is_3410 ? "3410" : "5052");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#509: FILE: drivers/usb/serial/ti_usb_3410_5052.c:430:
+	if (dev->descriptor.bNumConfigurations == 1) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/usb/serial/ti_usb_3410_5052.c:433:
+			status = ti_download_firmware(tdev, ti_fw_3410,
+				sizeof(ti_fw_3410));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/usb/serial/ti_usb_3410_5052.c:436:
+			status = ti_download_firmware(tdev, ti_fw_5052,
+				sizeof(ti_fw_5052));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: drivers/usb/serial/ti_usb_3410_5052.c:448:
+^I} $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tport)...) over kmalloc(sizeof(struct ti_port)...)
#537: FILE: drivers/usb/serial/ti_usb_3410_5052.c:458:
+		tport = kmalloc(sizeof(struct ti_port), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#538: FILE: drivers/usb/serial/ti_usb_3410_5052.c:459:
+		if (tport == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#539: FILE: drivers/usb/serial/ti_usb_3410_5052.c:460:
+		if (tport == NULL) {
+			dev_err(&dev->dev, "%s - out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#539: FILE: drivers/usb/serial/ti_usb_3410_5052.c:460:
+			dev_err(&dev->dev, "%s - out of memory\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport->tp_write_buf"
#551: FILE: drivers/usb/serial/ti_usb_3410_5052.c:472:
+		if (tport->tp_write_buf == NULL) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#552: FILE: drivers/usb/serial/ti_usb_3410_5052.c:473:
+			dev_err(&dev->dev, "%s - out of memory\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: drivers/usb/serial/ti_usb_3410_5052.c:483:
+^I$

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#566: FILE: drivers/usb/serial/ti_usb_3410_5052.c:487:
+	for (--i; i>=0; --i) {
 	           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#578: FILE: drivers/usb/serial/ti_usb_3410_5052.c:499:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#585: FILE: drivers/usb/serial/ti_usb_3410_5052.c:506:
+	dbg("%s", __FUNCTION__);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#587: FILE: drivers/usb/serial/ti_usb_3410_5052.c:508:
+	for (i=0; i < serial->num_ports; ++i) {
 	      ^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#597: FILE: drivers/usb/serial/ti_usb_3410_5052.c:518:
+	if (tdev)
+		kfree(tdev);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#601: FILE: drivers/usb/serial/ti_usb_3410_5052.c:522:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: drivers/usb/serial/ti_usb_3410_5052.c:531:
+^I__u16 open_settings = (__u8)(TI_PIPE_MODE_CONTINOUS | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: drivers/usb/serial/ti_usb_3410_5052.c:532:
+^I^I^I     TI_PIPE_TIMEOUT_ENABLE | $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#614: FILE: drivers/usb/serial/ti_usb_3410_5052.c:535:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#616: FILE: drivers/usb/serial/ti_usb_3410_5052.c:537:
+	if (tport == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: drivers/usb/serial/ti_usb_3410_5052.c:548:
+^I^Iport->tty->low_latency = $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tport->tp_icount
#632: FILE: drivers/usb/serial/ti_usb_3410_5052.c:553:
+	memset(&(tport->tp_icount), 0x00, sizeof(tport->tp_icount));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#639: FILE: drivers/usb/serial/ti_usb_3410_5052.c:560:
+		dbg("%s - start interrupt in urb", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#642: FILE: drivers/usb/serial/ti_usb_3410_5052.c:563:
+			dev_err(&port->dev, "%s - no interrupt urb\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#651: FILE: drivers/usb/serial/ti_usb_3410_5052.c:572:
+			dev_err(&port->dev, "%s - submit interrupt urb failed, %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#651: FILE: drivers/usb/serial/ti_usb_3410_5052.c:572:
+			dev_err(&port->dev, "%s - submit interrupt urb failed, %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#658: FILE: drivers/usb/serial/ti_usb_3410_5052.c:579:
+	dbg("%s - sending TI_OPEN_PORT", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: drivers/usb/serial/ti_usb_3410_5052.c:581:
+	status = ti_command_out_sync(tdev, TI_OPEN_PORT,
+		(__u8)(TI_UART1_PORT + port_number), open_settings, NULL, 0);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#662: FILE: drivers/usb/serial/ti_usb_3410_5052.c:583:
+		dev_err(&port->dev, "%s - cannot send open command, %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#666: FILE: drivers/usb/serial/ti_usb_3410_5052.c:587:
+	dbg("%s - sending TI_START_PORT", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#668: FILE: drivers/usb/serial/ti_usb_3410_5052.c:589:
+	status = ti_command_out_sync(tdev, TI_START_PORT,
+		(__u8)(TI_UART1_PORT + port_number), 0, NULL, 0);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#670: FILE: drivers/usb/serial/ti_usb_3410_5052.c:591:
+		dev_err(&port->dev, "%s - cannot send start command, %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#674: FILE: drivers/usb/serial/ti_usb_3410_5052.c:595:
+	dbg("%s - sending TI_PURGE_PORT", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#676: FILE: drivers/usb/serial/ti_usb_3410_5052.c:597:
+	status = ti_command_out_sync(tdev, TI_PURGE_PORT,
+		(__u8)(TI_UART1_PORT + port_number), TI_PURGE_INPUT, NULL, 0);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#678: FILE: drivers/usb/serial/ti_usb_3410_5052.c:599:
+		dev_err(&port->dev, "%s - cannot clear input buffers, %d\n", __FUNCTION__, status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#682: FILE: drivers/usb/serial/ti_usb_3410_5052.c:603:
+	status = ti_command_out_sync(tdev, TI_PURGE_PORT,
+		(__u8)(TI_UART1_PORT + port_number), TI_PURGE_OUTPUT, NULL, 0);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#684: FILE: drivers/usb/serial/ti_usb_3410_5052.c:605:
+		dev_err(&port->dev, "%s - cannot clear output buffers, %d\n", __FUNCTION__, status);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#689: FILE: drivers/usb/serial/ti_usb_3410_5052.c:610:
+	 * host controllers where things get out of sync some times */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#695: FILE: drivers/usb/serial/ti_usb_3410_5052.c:616:
+	dbg("%s - sending TI_OPEN_PORT (2)", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#697: FILE: drivers/usb/serial/ti_usb_3410_5052.c:618:
+	status = ti_command_out_sync(tdev, TI_OPEN_PORT,
+		(__u8)(TI_UART1_PORT + port_number), open_settings, NULL, 0);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#699: FILE: drivers/usb/serial/ti_usb_3410_5052.c:620:
+		dev_err(&port->dev, "%s - cannot send open command (2), %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#699: FILE: drivers/usb/serial/ti_usb_3410_5052.c:620:
+		dev_err(&port->dev, "%s - cannot send open command (2), %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#703: FILE: drivers/usb/serial/ti_usb_3410_5052.c:624:
+	dbg("%s - sending TI_START_PORT (2)", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/usb/serial/ti_usb_3410_5052.c:626:
+	status = ti_command_out_sync(tdev, TI_START_PORT,
+		(__u8)(TI_UART1_PORT + port_number), 0, NULL, 0);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#707: FILE: drivers/usb/serial/ti_usb_3410_5052.c:628:
+		dev_err(&port->dev, "%s - cannot send start command (2), %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#707: FILE: drivers/usb/serial/ti_usb_3410_5052.c:628:
+		dev_err(&port->dev, "%s - cannot send start command (2), %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#712: FILE: drivers/usb/serial/ti_usb_3410_5052.c:633:
+	dbg("%s - start read urb", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#715: FILE: drivers/usb/serial/ti_usb_3410_5052.c:636:
+		dev_err(&port->dev, "%s - no read urb\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#725: FILE: drivers/usb/serial/ti_usb_3410_5052.c:646:
+		dev_err(&port->dev, "%s - submit read urb failed, %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#739: FILE: drivers/usb/serial/ti_usb_3410_5052.c:660:
+	dbg("%s - exit %d", __FUNCTION__, status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#743: FILE: drivers/usb/serial/ti_usb_3410_5052.c:664:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#752: FILE: drivers/usb/serial/ti_usb_3410_5052.c:673:
+	dbg("%s - port %d", __FUNCTION__, port->number);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: drivers/usb/serial/ti_usb_3410_5052.c:674:
+^I^I^I $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tdev"
#756: FILE: drivers/usb/serial/ti_usb_3410_5052.c:677:
+	if (tdev == NULL || tport == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#756: FILE: drivers/usb/serial/ti_usb_3410_5052.c:677:
+	if (tdev == NULL || tport == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#761: FILE: drivers/usb/serial/ti_usb_3410_5052.c:682:
+	ti_drain(tport, (tport->tp_closing_wait*HZ)/100, 1);
 	                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#761: FILE: drivers/usb/serial/ti_usb_3410_5052.c:682:
+	ti_drain(tport, (tport->tp_closing_wait*HZ)/100, 1);
 	                                           ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#769: FILE: drivers/usb/serial/ti_usb_3410_5052.c:690:
+	dbg("%s - sending TI_CLOSE_PORT", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#771: FILE: drivers/usb/serial/ti_usb_3410_5052.c:692:
+	status = ti_command_out_sync(tdev, TI_CLOSE_PORT,
+		     (__u8)(TI_UART1_PORT + port_number), 0, NULL, 0);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#773: FILE: drivers/usb/serial/ti_usb_3410_5052.c:694:
+		dev_err(&port->dev, "%s - cannot send close port command, %d\n" , __FUNCTION__, status);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#773: FILE: drivers/usb/serial/ti_usb_3410_5052.c:694:
+		dev_err(&port->dev, "%s - cannot send close port command, %d\n" , __FUNCTION__, status);
 		                                                                ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#773: FILE: drivers/usb/serial/ti_usb_3410_5052.c:694:
+		dev_err(&port->dev, "%s - cannot send close port command, %d\n" , __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#786: FILE: drivers/usb/serial/ti_usb_3410_5052.c:707:
+	dbg("%s - exit", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#789: FILE: drivers/usb/serial/ti_usb_3410_5052.c:710:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: drivers/usb/serial/ti_usb_3410_5052.c:712:
+static int ti_write(struct usb_serial_port *port, const unsigned char *data,
+	int count)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#796: FILE: drivers/usb/serial/ti_usb_3410_5052.c:717:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#799: FILE: drivers/usb/serial/ti_usb_3410_5052.c:720:
+		dbg("%s - write request of 0 bytes", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#803: FILE: drivers/usb/serial/ti_usb_3410_5052.c:724:
+	if (tport == NULL || !tport->tp_is_open)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#815: FILE: drivers/usb/serial/ti_usb_3410_5052.c:736:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#822: FILE: drivers/usb/serial/ti_usb_3410_5052.c:743:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#824: FILE: drivers/usb/serial/ti_usb_3410_5052.c:745:
+	if (tport == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#826: FILE: drivers/usb/serial/ti_usb_3410_5052.c:747:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#831: FILE: drivers/usb/serial/ti_usb_3410_5052.c:752:
+	dbg("%s - returns %d", __FUNCTION__, room);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#835: FILE: drivers/usb/serial/ti_usb_3410_5052.c:756:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#842: FILE: drivers/usb/serial/ti_usb_3410_5052.c:763:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#844: FILE: drivers/usb/serial/ti_usb_3410_5052.c:765:
+	if (tport == NULL)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#851: FILE: drivers/usb/serial/ti_usb_3410_5052.c:772:
+	dbg("%s - returns %d", __FUNCTION__, chars);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#855: FILE: drivers/usb/serial/ti_usb_3410_5052.c:776:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#861: FILE: drivers/usb/serial/ti_usb_3410_5052.c:782:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#863: FILE: drivers/usb/serial/ti_usb_3410_5052.c:784:
+	if (tport == NULL)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#868: FILE: drivers/usb/serial/ti_usb_3410_5052.c:789:
+		dbg("%s - no tty", __FUNCTION__);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#875: FILE: drivers/usb/serial/ti_usb_3410_5052.c:796:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#877: FILE: drivers/usb/serial/ti_usb_3410_5052.c:798:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#884: FILE: drivers/usb/serial/ti_usb_3410_5052.c:805:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#886: FILE: drivers/usb/serial/ti_usb_3410_5052.c:807:
+	if (tport == NULL)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#891: FILE: drivers/usb/serial/ti_usb_3410_5052.c:812:
+		dbg("%s - no tty", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#898: FILE: drivers/usb/serial/ti_usb_3410_5052.c:819:
+			dev_err(&port->dev, "%s - cannot restart read, %d\n", __FUNCTION__, status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#902: FILE: drivers/usb/serial/ti_usb_3410_5052.c:823:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: drivers/usb/serial/ti_usb_3410_5052.c:825:
+static int ti_ioctl(struct usb_serial_port *port, struct file *file,
+	unsigned int cmd, unsigned long arg)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#910: FILE: drivers/usb/serial/ti_usb_3410_5052.c:831:
+	dbg("%s - port %d, cmd = 0x%04X", __FUNCTION__, port->number, cmd);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#912: FILE: drivers/usb/serial/ti_usb_3410_5052.c:833:
+	if (tport == NULL)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#915: FILE: drivers/usb/serial/ti_usb_3410_5052.c:836:
+	switch (cmd) {
+		case TIOCGSERIAL:
[...]
+		case TIOCSSERIAL:
[...]
+		case TIOCMIWAIT:
[...]
+		case TIOCGICOUNT:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#917: FILE: drivers/usb/serial/ti_usb_3410_5052.c:838:
+			dbg("%s - (%d) TIOCGSERIAL", __FUNCTION__, port->number);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#919: FILE: drivers/usb/serial/ti_usb_3410_5052.c:840:
+			return ti_get_serial_info(tport, (struct serial_struct __user *)arg);
+			break;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#922: FILE: drivers/usb/serial/ti_usb_3410_5052.c:843:
+			dbg("%s - (%d) TIOCSSERIAL", __FUNCTION__, port->number);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#924: FILE: drivers/usb/serial/ti_usb_3410_5052.c:845:
+			return ti_set_serial_info(tport, (struct serial_struct *)arg);
+			break;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#927: FILE: drivers/usb/serial/ti_usb_3410_5052.c:848:
+			dbg("%s - (%d) TIOCMIWAIT", __FUNCTION__, port->number);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.rng != cprev.rng'
#937: FILE: drivers/usb/serial/ti_usb_3410_5052.c:858:
+				if (((arg & TIOCM_RNG) && (cnow.rng != cprev.rng)) ||
+				    ((arg & TIOCM_DSR) && (cnow.dsr != cprev.dsr)) ||
+				    ((arg & TIOCM_CD)  && (cnow.dcd != cprev.dcd)) ||
+				    ((arg & TIOCM_CTS) && (cnow.cts != cprev.cts)) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.dsr != cprev.dsr'
#937: FILE: drivers/usb/serial/ti_usb_3410_5052.c:858:
+				if (((arg & TIOCM_RNG) && (cnow.rng != cprev.rng)) ||
+				    ((arg & TIOCM_DSR) && (cnow.dsr != cprev.dsr)) ||
+				    ((arg & TIOCM_CD)  && (cnow.dcd != cprev.dcd)) ||
+				    ((arg & TIOCM_CTS) && (cnow.cts != cprev.cts)) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.dcd != cprev.dcd'
#937: FILE: drivers/usb/serial/ti_usb_3410_5052.c:858:
+				if (((arg & TIOCM_RNG) && (cnow.rng != cprev.rng)) ||
+				    ((arg & TIOCM_DSR) && (cnow.dsr != cprev.dsr)) ||
+				    ((arg & TIOCM_CD)  && (cnow.dcd != cprev.dcd)) ||
+				    ((arg & TIOCM_CTS) && (cnow.cts != cprev.cts)) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.cts != cprev.cts'
#937: FILE: drivers/usb/serial/ti_usb_3410_5052.c:858:
+				if (((arg & TIOCM_RNG) && (cnow.rng != cprev.rng)) ||
+				    ((arg & TIOCM_DSR) && (cnow.dsr != cprev.dsr)) ||
+				    ((arg & TIOCM_CD)  && (cnow.dcd != cprev.dcd)) ||
+				    ((arg & TIOCM_CTS) && (cnow.cts != cprev.cts)) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#940: FILE: drivers/usb/serial/ti_usb_3410_5052.c:861:
+				    ((arg & TIOCM_CTS) && (cnow.cts != cprev.cts)) ) {

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#948: FILE: drivers/usb/serial/ti_usb_3410_5052.c:869:
+			dbg("%s - (%d) TIOCGICOUNT RX=%d, TX=%d", __FUNCTION__, port->number, tport->tp_icount.rx, tport->tp_icount.tx);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#948: FILE: drivers/usb/serial/ti_usb_3410_5052.c:869:
+			dbg("%s - (%d) TIOCGICOUNT RX=%d, TX=%d", __FUNCTION__, port->number, tport->tp_icount.rx, tport->tp_icount.tx);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#949: FILE: drivers/usb/serial/ti_usb_3410_5052.c:870:
+			if (copy_to_user((void __user *)arg, &tport->tp_icount, sizeof(tport->tp_icount)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#957: FILE: drivers/usb/serial/ti_usb_3410_5052.c:878:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#959: FILE: drivers/usb/serial/ti_usb_3410_5052.c:880:
+static void ti_set_termios(struct usb_serial_port *port,
+	struct termios *old_termios)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#964: FILE: drivers/usb/serial/ti_usb_3410_5052.c:885:
+	tcflag_t cflag,iflag;
 	              ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#970: FILE: drivers/usb/serial/ti_usb_3410_5052.c:891:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#973: FILE: drivers/usb/serial/ti_usb_3410_5052.c:894:
+		dbg("%s - no tty or termios", __FUNCTION__);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#981: FILE: drivers/usb/serial/ti_usb_3410_5052.c:902:
+	if (old_termios && cflag == old_termios->c_cflag
+	&& iflag == old_termios->c_iflag) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#982: FILE: drivers/usb/serial/ti_usb_3410_5052.c:903:
+		dbg("%s - nothing to change", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#986: FILE: drivers/usb/serial/ti_usb_3410_5052.c:907:
+	dbg("%s - clfag %08x, iflag %08x", __FUNCTION__, cflag, iflag);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#989: FILE: drivers/usb/serial/ti_usb_3410_5052.c:910:
+		dbg("%s - old clfag %08x, old iflag %08x", __FUNCTION__, old_termios->c_cflag, old_termios->c_iflag);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#989: FILE: drivers/usb/serial/ti_usb_3410_5052.c:910:
+		dbg("%s - old clfag %08x, old iflag %08x", __FUNCTION__, old_termios->c_cflag, old_termios->c_iflag);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#991: FILE: drivers/usb/serial/ti_usb_3410_5052.c:912:
+	if (tport == NULL)

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#996: FILE: drivers/usb/serial/ti_usb_3410_5052.c:917:
+	if (!config) {
+		dev_err(&port->dev, "%s - out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#996: FILE: drivers/usb/serial/ti_usb_3410_5052.c:917:
+		dev_err(&port->dev, "%s - out of memory\n", __FUNCTION__);

CHECK:CAMELCASE: Avoid CamelCase: <wFlags>
#1000: FILE: drivers/usb/serial/ti_usb_3410_5052.c:921:
+	config->wFlags = 0;

CHECK:CAMELCASE: Avoid CamelCase: <bUartMode>
#1005: FILE: drivers/usb/serial/ti_usb_3410_5052.c:926:
+	config->bUartMode = (__u8)(tport->tp_uart_mode);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1007: FILE: drivers/usb/serial/ti_usb_3410_5052.c:928:
+	switch (cflag & CSIZE) {
+		case CS5:
[...]
+		case CS6:
[...]
+		case CS7:
[...]
+		default:
+		case CS8:

CHECK:CAMELCASE: Avoid CamelCase: <bDataBits>
#1009: FILE: drivers/usb/serial/ti_usb_3410_5052.c:930:
+			    config->bDataBits = TI_UART_5_DATA_BITS;

WARNING:TABSTOP: Statements should start on a tabstop
#1010: FILE: drivers/usb/serial/ti_usb_3410_5052.c:931:
+			    break;

WARNING:TABSTOP: Statements should start on a tabstop
#1013: FILE: drivers/usb/serial/ti_usb_3410_5052.c:934:
+			    break;

WARNING:TABSTOP: Statements should start on a tabstop
#1016: FILE: drivers/usb/serial/ti_usb_3410_5052.c:937:
+			    break;

WARNING:TABSTOP: Statements should start on a tabstop
#1020: FILE: drivers/usb/serial/ti_usb_3410_5052.c:941:
+			    break;

CHECK:CAMELCASE: Avoid CamelCase: <bParity>
#1026: FILE: drivers/usb/serial/ti_usb_3410_5052.c:947:
+			config->bParity = TI_UART_ODD_PARITY;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1033: FILE: drivers/usb/serial/ti_usb_3410_5052.c:954:
+^I^Iconfig->bParity = TI_UART_NO_PARITY; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1033: FILE: drivers/usb/serial/ti_usb_3410_5052.c:954:
+^I^Iconfig->bParity = TI_UART_NO_PARITY; ^I$

CHECK:CAMELCASE: Avoid CamelCase: <bStopBits>
#1037: FILE: drivers/usb/serial/ti_usb_3410_5052.c:958:
+		config->bStopBits = TI_UART_2_STOP_BITS;

CHECK:CAMELCASE: Avoid CamelCase: <cXon>
#1052: FILE: drivers/usb/serial/ti_usb_3410_5052.c:973:
+		config->cXon  = START_CHAR(tty);

CHECK:CAMELCASE: Avoid CamelCase: <cXoff>
#1053: FILE: drivers/usb/serial/ti_usb_3410_5052.c:974:
+		config->cXoff = STOP_CHAR(tty);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1065: FILE: drivers/usb/serial/ti_usb_3410_5052.c:986:
+	if (!baud) baud = 9600;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1067: FILE: drivers/usb/serial/ti_usb_3410_5052.c:988:
+		config->wBaudRate = (__u16)((923077 + baud/2) / baud);
 		                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <wBaudRate>
#1067: FILE: drivers/usb/serial/ti_usb_3410_5052.c:988:
+		config->wBaudRate = (__u16)((923077 + baud/2) / baud);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1069: FILE: drivers/usb/serial/ti_usb_3410_5052.c:990:
+		config->wBaudRate = (__u16)((461538 + baud/2) / baud);
 		                                          ^

WARNING:LONG_LINE_STRING: line length of 133 exceeds 100 columns
#1071: FILE: drivers/usb/serial/ti_usb_3410_5052.c:992:
+	dbg("%s - BaudRate=%d, wBaudRate=%d, wFlags=0x%04X, bDataBits=%d, bParity=%d, bStopBits=%d, cXon=%d, cXoff=%d, bUartMode=%d",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 166 exceeds 100 columns
#1072: FILE: drivers/usb/serial/ti_usb_3410_5052.c:993:
+	__FUNCTION__, baud, config->wBaudRate, config->wFlags, config->bDataBits, config->bParity, config->bStopBits, config->cXon, config->cXoff, config->bUartMode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1072: FILE: drivers/usb/serial/ti_usb_3410_5052.c:993:
+	dbg("%s - BaudRate=%d, wBaudRate=%d, wFlags=0x%04X, bDataBits=%d, bParity=%d, bStopBits=%d, cXon=%d, cXoff=%d, bUartMode=%d",
+	__FUNCTION__, baud, config->wBaudRate, config->wFlags, config->bDataBits, config->bParity, config->bStopBits, config->cXon, config->cXoff, config->bUartMode);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1072: FILE: drivers/usb/serial/ti_usb_3410_5052.c:993:
+	__FUNCTION__, baud, config->wBaudRate, config->wFlags, config->bDataBits, config->bParity, config->bStopBits, config->cXon, config->cXoff, config->bUartMode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1078: FILE: drivers/usb/serial/ti_usb_3410_5052.c:999:
+	status = ti_command_out_sync(tport->tp_tdev, TI_SET_CONFIG,
+		(__u8)(TI_UART1_PORT + port_number), 0, (__u8 *)config,

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1081: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1002:
+		dev_err(&port->dev, "%s - cannot set config on port %d, %d\n", __FUNCTION__, port_number, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1081: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1002:
+		dev_err(&port->dev, "%s - cannot set config on port %d, %d\n", __FUNCTION__, port_number, status);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1090: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1011:
+		dev_err(&port->dev, "%s - cannot set modem control on port %d, %d\n", __FUNCTION__, port_number, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1090: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1011:
+		dev_err(&port->dev, "%s - cannot set modem control on port %d, %d\n", __FUNCTION__, port_number, status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1095: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1016:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1103: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1024:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#1105: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1026:
+	if (tport == NULL)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1119: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1040:
+	dbg("%s - 0x%04X", __FUNCTION__, result);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1124: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1045:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1126: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1047:
+static int ti_tiocmset(struct usb_serial_port *port, struct file *file,
+	unsigned int set, unsigned int clear)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1131: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1052:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#1133: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1054:
+	if (tport == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1155: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1076:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1161: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1082:
+	dbg("%s - state = %d", __FUNCTION__, break_state);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tport"
#1163: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1084:
+	if (tport == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1166: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1087:
+	ti_drain(tport, (tport->tp_closing_wait*HZ)/100, 0);
 	                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1166: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1087:
+	ti_drain(tport, (tport->tp_closing_wait*HZ)/100, 0);
 	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1169: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1090:
+	status = ti_write_byte(tport->tp_tdev,
+		tport->tp_uart_base_addr + TI_UART_OFFSET_LCR,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1173: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1094:
+		dbg("%s - error setting break, %d", __FUNCTION__, status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1176: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1097:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1191: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1112:
+	dbg("%s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1199: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1120:
+		dbg("%s - urb shutting down, %d", __FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1203: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1124:
+		dev_err(dev, "%s - nonzero urb status, %d\n", __FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1209: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1130:
+		dbg("%s - bad packet size, %d", __FUNCTION__, length);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1214: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1135:
+		dev_err(dev, "%s - hardware error, %d\n", __FUNCTION__, data[1]);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1221: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1142:
+	dbg("%s - port_number %d, function %d, data 0x%02X", __FUNCTION__, port_number, function, data[1]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1221: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1142:
+	dbg("%s - port_number %d, function %d, data 0x%02X", __FUNCTION__, port_number, function, data[1]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1224: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1145:
+		dev_err(dev, "%s - bad port number, %d\n", __FUNCTION__, port_number);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1236: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1157:
+		dev_err(dev, "%s - DATA ERROR, port %d, data 0x%02X\n", __FUNCTION__, port_number, data[1]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1236: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1157:
+		dev_err(dev, "%s - DATA ERROR, port %d, data 0x%02X\n", __FUNCTION__, port_number, data[1]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1241: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1162:
+		dbg("%s - port %d, msr 0x%02X", __FUNCTION__, port_number, msr);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1246: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1167:
+		dev_err(dev, "%s - unknown interrupt code, 0x%02X\n", __FUNCTION__, data[1]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1253: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1174:
+		dev_err(dev, "%s - resubmit interrupt urb failed, %d\n", __FUNCTION__, status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1256: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1177:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1264: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1185:
+	dbg("%s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1272: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1193:
+		dbg("%s - urb shutting down, %d", __FUNCTION__, urb->status);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1277: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1198:
+		dev_err(dev, "%s - nonzero urb status, %d\n", __FUNCTION__, urb->status );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1277: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1198:
+		dev_err(dev, "%s - nonzero urb status, %d\n", __FUNCTION__, urb->status );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1286: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1207:
+		dev_err(dev, "%s - stopping read!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1291: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1212:
+		usb_serial_debug_data(debug, dev, __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1292: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1213:
+		usb_serial_debug_data(debug, dev, __FUNCTION__,
+			urb->actual_length, urb->transfer_buffer);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1295: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1216:
+			dbg("%s - port closed, dropping data", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1316: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1237:
+		dev_err(dev, "%s - resubmit read urb failed, %d\n", __FUNCTION__, status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1319: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1240:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1326: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1247:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1336: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1257:
+		dbg("%s - urb shutting down, %d", __FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1341: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1262:
+		dev_err(dev, "%s - nonzero urb status, %d\n", __FUNCTION__, urb->status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1350: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1271:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1352: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1273:
+static void ti_recv(struct device *dev, struct tty_struct *tty,
+	unsigned char *data, int length)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1360: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1281:
+				dev_err(dev, "%s - dropping data, %d bytes lost\n", __FUNCTION__, length);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1360: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1281:
+				dev_err(dev, "%s - dropping data, %d bytes lost\n", __FUNCTION__, length);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1377: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1298:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1385: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1306:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1386: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1307:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1396: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1317:
+	count = ti_buf_get(tport->tp_write_buf,
+				port->write_urb->transfer_buffer,

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1408: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1329:
+	usb_serial_debug_data(debug, &port->dev, __FUNCTION__, count, port->write_urb->transfer_buffer);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1408: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1329:
+	usb_serial_debug_data(debug, &port->dev, __FUNCTION__, count, port->write_urb->transfer_buffer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1411: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1332:
+	usb_fill_bulk_urb(port->write_urb, port->serial->dev,
+			   usb_sndbulkpipe(port->serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1412: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1333:
+			   usb_sndbulkpipe(port->serial->dev,
+					    port->bulk_out_endpointAddress),

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddress>
#1412: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1333:
+					    port->bulk_out_endpointAddress),

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1418: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1339:
+		dev_err(&port->dev, "%s - submit write urb failed, %d\n", __FUNCTION__, result);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1419: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1340:
+^I^Itport->tp_write_urb_in_use = 0; $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1433: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1354:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1439: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1360:
+	status = ti_write_byte(tport->tp_tdev,
+		tport->tp_uart_base_addr + TI_UART_OFFSET_MCR,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1448: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1369:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1451: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1372:
+	int size,status;
 	        ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1457: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1378:
+	dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1462: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1383:
+		dev_err(&port->dev, "%s - out of memory\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1467: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1388:
+	status = ti_command_in_sync(tdev, TI_GET_PORT_STATUS,
+		(__u8)(TI_UART1_PORT+port_number), 0, (__u8 *)data, size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1467: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1388:
+		(__u8)(TI_UART1_PORT+port_number), 0, (__u8 *)data, size);
 		                    ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1469: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1390:
+		dev_err(&port->dev, "%s - get port status command failed, %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1469: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1390:
+		dev_err(&port->dev, "%s - get port status command failed, %d\n", __FUNCTION__, status);

CHECK:CAMELCASE: Avoid CamelCase: <bLSR>
#1473: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1394:
+	dbg("%s - lsr 0x%02X", __FUNCTION__, data->bLSR);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1473: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1394:
+	dbg("%s - lsr 0x%02X", __FUNCTION__, data->bLSR);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1482: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1403:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1484: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1405:
+static int ti_get_serial_info(struct ti_port *tport,
+	struct serial_struct __user *ret_arg)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1508: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1429:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1510: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1431:
+static int ti_set_serial_info(struct ti_port *tport,
+	struct serial_struct *new_arg)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1527: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1448:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1534: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1455:
+	dbg("%s - msr 0x%02X", __FUNCTION__, msr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1565: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1486:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1573: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1494:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1584: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1505:
+		if (ti_buf_data_avail(tport->tp_write_buf) == 0
+		|| timeout == 0 || signal_pending(current)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1585: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1506:
+		|| timeout == 0 || signal_pending(current)
+		|| tdev->td_urb_error

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1586: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1507:
+		|| tdev->td_urb_error
+		|| !usb_get_intfdata(port->serial->interface))  /* disconnect */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1606: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1527:
+	while ((long)(jiffies - timeout) < 0 && !signal_pending(current)
+	&& !(tport->tp_lsr&TI_LSR_TX_EMPTY) && !tdev->td_urb_error

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1606: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1527:
+	&& !(tport->tp_lsr&TI_LSR_TX_EMPTY) && !tdev->td_urb_error
 	                  ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1607: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1528:
+	&& !(tport->tp_lsr&TI_LSR_TX_EMPTY) && !tdev->td_urb_error
+	&& usb_get_intfdata(port->serial->interface)) {  /* not disconnected */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1614: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1535:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1627: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1548:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1650: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1571:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1652: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1573:
+static int ti_command_out_sync(struct ti_device *tdev, __u8 command,
+	__u16 moduleid, __u16 value, __u8 *data, int size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1657: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1578:
+	status = usb_control_msg(tdev->td_serial->dev,
+		usb_sndctrlpipe(tdev->td_serial->dev, 0), command,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1670: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1591:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1672: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1593:
+static int ti_command_in_sync(struct ti_device *tdev, __u8 command,
+	__u16 moduleid, __u16 value, __u8 *data, int size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1677: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1598:
+	status = usb_control_msg(tdev->td_serial->dev,
+		usb_rcvctrlpipe(tdev->td_serial->dev, 0), command,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1690: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1611:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1692: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1613:
+static int ti_write_byte(struct ti_device *tdev, unsigned long addr,
+	__u8 mask, __u8 byte)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1699: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1620:
+	dbg("%s - addr 0x%08lX, mask 0x%02X, byte 0x%02X", __FUNCTION__, addr, mask, byte);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1704: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1625:
+		dev_err(dev, "%s - out of memory\n", __FUNCTION__);

CHECK:CAMELCASE: Avoid CamelCase: <bAddrType>
#1708: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1629:
+	data->bAddrType = TI_RW_DATA_ADDR_XDATA;

CHECK:CAMELCASE: Avoid CamelCase: <bDataType>
#1709: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1630:
+	data->bDataType = TI_RW_DATA_BYTE;

CHECK:CAMELCASE: Avoid CamelCase: <bDataCounter>
#1710: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1631:
+	data->bDataCounter = 1;

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1711: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1632:
+	data->wBaseAddrHi = cpu_to_be16(addr>>16);
 	                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <wBaseAddrHi>
#1711: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1632:
+	data->wBaseAddrHi = cpu_to_be16(addr>>16);

CHECK:CAMELCASE: Avoid CamelCase: <wBaseAddrLo>
#1712: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1633:
+	data->wBaseAddrLo = cpu_to_be16(addr);

CHECK:CAMELCASE: Avoid CamelCase: <bData>
#1713: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1634:
+	data->bData[0] = mask;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1717: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1638:
+	status = ti_command_out_sync(tdev, TI_WRITE_DATA, TI_RAM_PORT, 0,
+		(__u8 *)data, size);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1720: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1641:
+		dev_err(dev, "%s - failed, %d\n", __FUNCTION__, status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1727: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1648:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1729: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1650:
+static int ti_download_firmware(struct ti_device *tdev,
+	unsigned char *firmware, unsigned int firmware_size)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1743: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1664:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1747: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1668:
+		dev_err(&dev->dev, "%s - out of memory\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1752: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1673:
+	memset(buffer+firmware_size, 0xff, buffer_size-firmware_size);
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1752: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1673:
+	memset(buffer+firmware_size, 0xff, buffer_size-firmware_size);
 	                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#1754: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1675:
+	for(pos = sizeof(struct ti_firmware_header); pos < buffer_size; pos++)

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#1758: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1679:
+	header->wLength = cpu_to_le16((__u16)(buffer_size - sizeof(struct ti_firmware_header)));

CHECK:CAMELCASE: Avoid CamelCase: <bCheckSum>
#1759: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1680:
+	header->bCheckSum = cs;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1761: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1682:
+	dbg("%s - downloading firmware", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1764: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1685:
+		status = usb_bulk_msg(dev, pipe, buffer+pos, len, &done, HZ);
 		                                       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1772: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1693:
+		dev_err(&dev->dev, "%s - error downloading firmware, %d\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1776: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1697:
+	dbg("%s - download successful", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1781: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1702:
+
+

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1794: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1715:
+	cb = (struct circ_buf *)kmalloc(sizeof(struct circ_buf), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cb)...) over kmalloc(sizeof(struct circ_buf)...)
#1794: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1715:
+	cb = (struct circ_buf *)kmalloc(sizeof(struct circ_buf), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cb"
#1795: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1716:
+	if (cb == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cb->buf"
#1799: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1720:
+	if (cb->buf == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1809: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1730:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1822: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1743:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1831: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1752:
+	cb->head = cb->tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1834: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1755:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1844: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1765:
+	return CIRC_CNT(cb->head,cb->tail,TI_WRITE_BUF_SIZE);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1844: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1765:
+	return CIRC_CNT(cb->head,cb->tail,TI_WRITE_BUF_SIZE);
 	                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1847: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1768:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1857: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1778:
+	return CIRC_SPACE(cb->head,cb->tail,TI_WRITE_BUF_SIZE);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1857: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1778:
+	return CIRC_SPACE(cb->head,cb->tail,TI_WRITE_BUF_SIZE);
 	                                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1860: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1781:
+
+

WARNING:REPEATED_WORD: Possible repeated word: 'data'
#1864: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1785:
+ * Copy data data from a user buffer and put it into the circular buffer.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1881: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1802:
+		cb->head = (cb->head + c) & (TI_WRITE_BUF_SIZE-1);
 		                                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1890: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1811:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1911: FILE: drivers/usb/serial/ti_usb_3410_5052.c:1832:
+		cb->tail = (cb->tail + c) & (TI_WRITE_BUF_SIZE-1);
 		                                              ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1923: FILE: drivers/usb/serial/ti_usb_3410_5052.h:1:
+/* vi: ts=8 sw=8

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2064: FILE: drivers/usb/serial/ti_usb_3410_5052.h:142:
+} __attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <bCmdCode>
#2068: FILE: drivers/usb/serial/ti_usb_3410_5052.h:146:
+	__u8	bCmdCode;

CHECK:CAMELCASE: Avoid CamelCase: <bModuleId>
#2069: FILE: drivers/usb/serial/ti_usb_3410_5052.h:147:
+	__u8	bModuleId;

CHECK:CAMELCASE: Avoid CamelCase: <bErrorCode>
#2070: FILE: drivers/usb/serial/ti_usb_3410_5052.h:148:
+	__u8	bErrorCode;

CHECK:CAMELCASE: Avoid CamelCase: <bMSR>
#2071: FILE: drivers/usb/serial/ti_usb_3410_5052.h:149:
+	__u8	bMSR;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2073: FILE: drivers/usb/serial/ti_usb_3410_5052.h:151:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2101: FILE: drivers/usb/serial/ti_usb_3410_5052.h:179:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2109: FILE: drivers/usb/serial/ti_usb_3410_5052.h:187:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2116: FILE: drivers/usb/serial/ti_usb_3410_5052.h:194:
+} __attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <bICode>
#2120: FILE: drivers/usb/serial/ti_usb_3410_5052.h:198:
+	__u8	bICode;

CHECK:CAMELCASE: Avoid CamelCase: <bIInfo>
#2121: FILE: drivers/usb/serial/ti_usb_3410_5052.h:199:
+	__u8	bIInfo;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2122: FILE: drivers/usb/serial/ti_usb_3410_5052.h:200:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2138: FILE: drivers/usb/serial/ti_usb_3410_5052.h:216:
+} __attribute__((packed));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217618.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 160 warnings, 176 checks, 2086 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217618.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
