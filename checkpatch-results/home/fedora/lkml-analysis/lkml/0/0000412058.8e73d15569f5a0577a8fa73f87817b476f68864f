WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
actual MCA handling away from the hardware implementation (any raving lunatic 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	           ChangeSet	1.843   -> 1.844  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	drivers/mca/mca-legacy.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	 include/linux/mca.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	arch/i386/kernel/mca.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	drivers/mca/Makefile	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	               (new)	        -> 1.1     include/asm-i386/mca.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	               (new)	        -> 1.1     drivers/mca/mca-device.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	               (new)	        -> 1.1     include/linux/mca-legacy.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# 02/11/20	jejb@mulgrave.(none)	1.844

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# MCA sysfs Part II - abstract out the hw specific pieces

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# Just in case some raving lunatic wants to add other platform

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# support for MCA (like RS6000)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# Abstract the hardware pieces from the general MCA bus handling

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# Make all bus and pos accesses go through special accessor registers

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# add transform functions for multiple MCA bus machines

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#78: 
--- a/arch/i386/kernel/mca.c	Wed Nov 20 13:31:07 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required before the open parenthesis '('
#89: FILE: arch/i386/kernel/mca.c:166:
+	if(reg < 0 || reg >= 8)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#93: FILE: arch/i386/kernel/mca.c:170:
+	if(mca_dev->pos_register) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#102: FILE: arch/i386/kernel/mca.c:179:
+	} else {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#109: FILE: arch/i386/kernel/mca.c:186:
+		outb_p(0x8|(mca_dev->slot & 0xf), MCA_ADAPTER_SETUP_REG);
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#125: FILE: arch/i386/kernel/mca.c:202:
+	if(reg < 0 || reg >= 8)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#136: FILE: arch/i386/kernel/mca.c:213:
+	outb_p(0x8|(mca_dev->slot&0xf), MCA_ADAPTER_SETUP_REG);
 	          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#136: FILE: arch/i386/kernel/mca.c:213:
+	outb_p(0x8|(mca_dev->slot&0xf), MCA_ADAPTER_SETUP_REG);
 	                         ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#146: FILE: arch/i386/kernel/mca.c:223:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#149: FILE: arch/i386/kernel/mca.c:226:
+static int mca_dummy_transform_irq(struct mca_device * mca_dev, int irq)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: arch/i386/kernel/mca.c:231:
+static int mca_dummy_transform_ioport(struct mca_device * mca_dev, int port)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#159: FILE: arch/i386/kernel/mca.c:236:
+static void *mca_dummy_transform_memory(struct mca_device * mca_dev, void *mem)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#194: FILE: drivers/mca/mca-device.c:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#203: FILE: drivers/mca/mca-device.c:10:
+ *
+**-----------------------------------------------------------------------------

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/mca/mca-device.c:11:
+**  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#216: FILE: drivers/mca/mca-device.c:23:
+**  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#217: FILE: drivers/mca/mca-device.c:24:
+**  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#220: FILE: drivers/mca/mca-device.c:27:
+**-----------------------------------------------------------------------------
+ */

ERROR:SPACING: space required before the open parenthesis '('
#237: FILE: drivers/mca/mca-device.c:44:
+	if(reg < 0 || reg >= 8)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: drivers/mca/mca-device.c:68:
+^Ireturn ^Imca_dev->pos[reg];$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: drivers/mca/mca-device.c:72:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#356: FILE: drivers/mca/mca-device.c:163:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#500: FILE: drivers/mca/mca-legacy.c:342:
+	if(mca_device_claimed(mca_dev))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#531: FILE: drivers/mca/mca-legacy.c:388:
+	return status == MCA_ADAPTER_NORMAL
+		|| status == MCA_ADAPTER_DISABLED;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#546: FILE: include/asm-i386/mca.h:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#558: FILE: include/asm-i386/mca.h:13:
+ * I know have at most two */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#566: FILE: include/asm-i386/mca.h:21:
+#define MCA_INTEGVIDEO	(MCA_MAX_SLOT_NR+1)
                       	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#567: FILE: include/asm-i386/mca.h:22:
+#define MCA_MOTHERBOARD (MCA_MAX_SLOT_NR+2)
                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#571: FILE: include/asm-i386/mca.h:26:
+#define MCA_INTEGSCSI_POS	(MCA_DUMMY_POS_START+1)
                          	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#572: FILE: include/asm-i386/mca.h:27:
+#define MCA_INTEGVIDEO_POS	(MCA_DUMMY_POS_START+2)
                           	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#573: FILE: include/asm-i386/mca.h:28:
+#define MCA_MOTHERBOARD_POS	(MCA_DUMMY_POS_START+3)
                            	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#579: FILE: include/asm-i386/mca.h:34:
+#define MCA_POS_REG(n)			(0x100+(n))
                       			      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#586: FILE: include/asm-i386/mca.h:41:
+#define MCA_NUMADAPTERS (MCA_MAX_SLOT_NR+3)
                                         ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#596: FILE: include/linux/mca-legacy.h:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#600: FILE: include/linux/mca-legacy.h:5:
+ * Please move your driver to the new sysfs based one instead */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#618: FILE: include/linux/mca-legacy.h:23:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#625: FILE: include/linux/mca-legacy.h:30:
+extern int mca_find_adapter(int id, int start);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#626: FILE: include/linux/mca-legacy.h:31:
+extern int mca_find_unused_adapter(int id, int start);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#629: FILE: include/linux/mca-legacy.h:34:
+extern int mca_isadapter(int slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#630: FILE: include/linux/mca-legacy.h:35:
+extern int mca_isenabled(int slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#632: FILE: include/linux/mca-legacy.h:37:
+extern int mca_is_adapter_used(int slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#633: FILE: include/linux/mca-legacy.h:38:
+extern int mca_mark_as_used(int slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#634: FILE: include/linux/mca-legacy.h:39:
+extern void mca_mark_as_unused(int slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#637: FILE: include/linux/mca-legacy.h:42:
+extern unsigned char mca_read_stored_pos(int slot, int reg);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#643: FILE: include/linux/mca-legacy.h:48:
+extern void mca_set_adapter_name(int slot, char* name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#643: FILE: include/linux/mca-legacy.h:48:
+extern void mca_set_adapter_name(int slot, char* name);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#644: FILE: include/linux/mca-legacy.h:49:
+extern char* mca_get_adapter_name(int slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#644: FILE: include/linux/mca-legacy.h:49:
+extern char* mca_get_adapter_name(int slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#658: FILE: include/linux/mca-legacy.h:63:
+extern unsigned char mca_read_pos(int slot, int reg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#661: FILE: include/linux/mca-legacy.h:66:
+extern void mca_write_pos(int slot, int reg, unsigned char byte);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#664: FILE: include/linux/mca-legacy.h:69:
+extern void mca_do_proc_init(void);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#665: FILE: include/linux/mca-legacy.h:70:
+extern void mca_set_adapter_procfn(int slot, MCA_ProcFn, void* dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#665: FILE: include/linux/mca-legacy.h:70:
+extern void mca_set_adapter_procfn(int slot, MCA_ProcFn, void* dev);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'MCA_ProcFn' should also have an identifier name
#665: FILE: include/linux/mca-legacy.h:70:
+extern void mca_set_adapter_procfn(int slot, MCA_ProcFn, void* dev);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#671: FILE: include/linux/mca-legacy.h:76:
+static inline void mca_set_adapter_procfn(int slot, MCA_ProcFn *fn, void* dev)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mca_device *' should also have an identifier name
#813: FILE: include/linux/mca.h:77:
+	unsigned char	(*mca_read_pos)(struct mca_device *, int reg);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mca_device *' should also have an identifier name
#814: FILE: include/linux/mca.h:78:
+	void		(*mca_write_pos)(struct mca_device *, int reg,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mca_device *' should also have an identifier name
#816: FILE: include/linux/mca.h:80:
+	int		(*mca_transform_irq)(struct mca_device *, int irq);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mca_device *' should also have an identifier name
#817: FILE: include/linux/mca.h:81:
+	int		(*mca_transform_ioport)(struct mca_device *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: include/linux/mca.h:82:
+	int		(*mca_transform_ioport)(struct mca_device *,
+						  int region);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mca_device *' should also have an identifier name
#819: FILE: include/linux/mca.h:83:
+	void *		(*mca_transform_memory)(struct mca_device *,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#829: FILE: include/linux/mca.h:93:
+};
+#define to_mca_bus(mdev) container_of(mdev, struct mca_bus, dev)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#846: FILE: include/linux/mca.h:108:
+extern unsigned char mca_device_read_stored_pos(struct mca_device *mca_dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#848: FILE: include/linux/mca.h:110:
+extern unsigned char mca_device_read_pos(struct mca_device *mca_dev, int reg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#849: FILE: include/linux/mca.h:111:
+extern void mca_device_write_pos(struct mca_device *mca_dev, int reg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#851: FILE: include/linux/mca.h:113:
+extern int mca_device_transform_irq(struct mca_device *mca_dev, int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#852: FILE: include/linux/mca.h:114:
+extern int mca_device_transform_ioport(struct mca_device *mca_dev, int port);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#853: FILE: include/linux/mca.h:115:
+extern void *mca_device_transform_memory(struct mca_device *mca_dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#855: FILE: include/linux/mca.h:117:
+extern int mca_device_claimed(struct mca_device *mca_dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#856: FILE: include/linux/mca.h:118:
+extern void mca_device_set_claim(struct mca_device *mca_dev, int val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#857: FILE: include/linux/mca.h:119:
+extern enum MCA_AdapterStatus mca_device_status(struct mca_device *mca_dev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 41 warnings, 41 checks, 761 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
