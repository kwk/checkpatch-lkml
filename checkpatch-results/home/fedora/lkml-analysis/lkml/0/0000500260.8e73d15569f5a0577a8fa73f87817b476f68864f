ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: fs/intermezzo/dcache.c:55:
+                /* This should really only happen in the case of a dentry$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: fs/intermezzo/dcache.c:56:
+                 * with no inode. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#55: FILE: fs/intermezzo/dcache.c:56:
+                 * with no inode. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: fs/intermezzo/dcache.c:80:
+        if (dentry == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: fs/intermezzo/dcache.c:80:
+        if (dentry == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dentry"
#63: FILE: fs/intermezzo/dcache.c:80:
+        if (dentry == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: fs/intermezzo/dcache.c:81:
+                BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: fs/intermezzo/dcache.c:81:
+                BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#64: FILE: fs/intermezzo/dcache.c:81:
+                BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: fs/intermezzo/dcache.c:87:
+                EXIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: fs/intermezzo/dcache.c:87:
+                EXIT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: fs/intermezzo/dcache.c:91:
+        if (dentry->d_inode == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: fs/intermezzo/dcache.c:91:
+        if (dentry->d_inode == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dentry->d_inode"
#75: FILE: fs/intermezzo/dcache.c:91:
+        if (dentry->d_inode == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: fs/intermezzo/dcache.c:131:
+                                  SLAB_HWCACHE_ALIGN, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: fs/intermezzo/dcache.c:131:
+                                  SLAB_HWCACHE_ALIGN, NULL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: fs/intermezzo/dir.c:166:
+        if (!inode || is_bad_inode(inode)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: fs/intermezzo/dir.c:166:
+        if (!inode || is_bad_inode(inode)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: fs/intermezzo/dir.c:173:
+        } else if (inode->i_nlink == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/intermezzo/dir.c:173:
+        } else if (inode->i_nlink == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: fs/intermezzo/dir.c:174:
+                /* This is quite evil, but we have little choice.  If we were$

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#105: FILE: fs/intermezzo/dir.c:175:
+                 * to iput() again with i_nlink == 0, delete_inode would get
                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: fs/intermezzo/dir.c:175:
+                 * to iput() again with i_nlink == 0, delete_inode would get$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: fs/intermezzo/dir.c:176:
+                 * called again, which ext3 really Does Not Like. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#106: FILE: fs/intermezzo/dir.c:176:
+                 * called again, which ext3 really Does Not Like. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: fs/intermezzo/dir.c:177:
+                atomic_dec(&inode->i_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: fs/intermezzo/dir.c:177:
+                atomic_dec(&inode->i_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: fs/intermezzo/dir.c:178:
+                EXIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: fs/intermezzo/dir.c:178:
+                EXIT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: fs/intermezzo/dir.c:179:
+                return ERR_PTR(-ENOENT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/intermezzo/dir.c:179:
+                return ERR_PTR(-ENOENT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: fs/intermezzo/dir.c:195:
+        dentry->d_flags |= DCACHE_NFSD_DISCONNECTED; /* NFS hack */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: fs/intermezzo/dir.c:195:
+        dentry->d_flags |= DCACHE_NFSD_DISCONNECTED; /* NFS hack */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: fs/intermezzo/journal.c:109:
+                unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/intermezzo/journal.c:109:
+                unlock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: fs/intermezzo/journal.c:110:
+                fs_up(&inode->i_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/intermezzo/journal.c:110:
+                fs_up(&inode->i_sem);$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#143: FILE: fs/intermezzo/journal_xfs.c:27:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#155: FILE: fs/intermezzo/methods.c:166:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/intermezzo/methods.c:167:
+                //#if defined(CONFIG_XFS_FS) || defined (CONFIG_XFS_FS_MODULE)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#178: FILE: fs/intermezzo/vfs.c:165:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#180: FILE: fs/intermezzo/vfs.c:167:
+/* XXX fixme: this should not fail, all these dentries are in memory
+   when _we_ call this */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#180: FILE: fs/intermezzo/vfs.c:167:
+   when _we_ call this */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: fs/intermezzo/vfs.c:200:
+        if (!iops) { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: fs/intermezzo/vfs.c:200:
+        if (!iops) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: fs/intermezzo/vfs.c:200:
+        if (!iops) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: fs/intermezzo/vfs.c:1280:
+        if ( !error && do_kml )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: fs/intermezzo/vfs.c:1280:
+        if ( !error && do_kml )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#273: FILE: fs/intermezzo/vfs.c:1280:
+        if ( !error && do_kml )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#273: FILE: fs/intermezzo/vfs.c:1280:
+        if ( !error && do_kml )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: fs/intermezzo/vfs.c:1287:
+        if ( !error && do_expect ) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: fs/intermezzo/vfs.c:1287:
+        if ( !error && do_expect ) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: fs/intermezzo/vfs.c:1287:
+        if ( !error && do_expect ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#281: FILE: fs/intermezzo/vfs.c:1287:
+        if ( !error && do_expect ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#281: FILE: fs/intermezzo/vfs.c:1287:
+        if ( !error && do_expect ) 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000500260.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 24 warnings, 3 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000500260.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
