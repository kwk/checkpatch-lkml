WARNING:TYPO_SPELLING: 'beleive' may be misspelled - perhaps 'believe'?
#33: 
http://ozlabs.org/ppc64-patches/ patch 239, I beleive.
                                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'doens't' may be misspelled - perhaps 'doesn't'?
#34: 
Because it doens't apply cleanly any more, I whacked 
           ^^^^^^^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#54: FILE: arch/ppc64/kernel/eeh.c:17:
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#78: FILE: arch/ppc64/kernel/eeh.c:34:
+#include <asm/atomic.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#108: FILE: arch/ppc64/kernel/eeh.c:64:
+ *  event has occured (e.g. by reading 0xff's), will then ask EEH
               ^^^^^^^

WARNING:TYPO_SPELLING: 'BUID' may be misspelled - perhaps 'BUILD'?
#117: FILE: arch/ppc64/kernel/eeh.c:73:
+/** Bus Unit ID macros; get low and hi 32-bits of the 64-bit BUID */
                                                              ^^^^

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#197: FILE: arch/ppc64/kernel/eeh.c:428:
+	 * XXX We should create a seperate sysctl for this.
 	                          ^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#205: FILE: arch/ppc64/kernel/eeh.c:436:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#207: FILE: arch/ppc64/kernel/eeh.c:438:
+		printk(KERN_INFO "EEH: Ignored MMIO failure (%d) on device:%s %s\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!event"
#234: FILE: arch/ppc64/kernel/eeh.c:465:
+		if (event == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'notifiying' may be misspelled - perhaps 'notifying'?
#237: FILE: arch/ppc64/kernel/eeh.c:468:
+		printk(KERN_INFO "EEH: MMIO failure (%d), notifiying device "
 		                                          ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#237: FILE: arch/ppc64/kernel/eeh.c:468:
+		printk(KERN_INFO "EEH: MMIO failure (%d), notifiying device "

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: arch/ppc64/kernel/eeh.c:469:
+		printk(KERN_INFO "EEH: MMIO failure (%d), notifiying device "
+		       "%s %s\n", event->reset_state,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: arch/ppc64/kernel/eeh.c:473:
+		notifier_call_chain (&eeh_notifier_chain,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: arch/ppc64/kernel/eeh.c:547:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#294: FILE: arch/ppc64/kernel/eeh.c:559:
+				  BUID_HI(dn->phb->buid),
 				                   ^^^^

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#295: FILE: arch/ppc64/kernel/eeh.c:560:
+				  BUID_LO(dn->phb->buid));
 				                   ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: arch/ppc64/kernel/eeh.c:586:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: arch/ppc64/kernel/eeh.c:591:
+^I               8, 1, NULL, dn->eeh_config_addr,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#358: FILE: arch/ppc64/kernel/eeh.c:592:
+	               BUID_HI(dn->phb->buid),
 	                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: arch/ppc64/kernel/eeh.c:592:
+^I               BUID_HI(dn->phb->buid),$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#359: FILE: arch/ppc64/kernel/eeh.c:593:
+	               BUID_LO(dn->phb->buid), NULL, 0,
 	                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: arch/ppc64/kernel/eeh.c:593:
+^I               BUID_LO(dn->phb->buid), NULL, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: arch/ppc64/kernel/eeh.c:594:
+^I               virt_to_phys(slot_errbuf),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: arch/ppc64/kernel/eeh.c:595:
+^I               eeh_error_buf_size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: arch/ppc64/kernel/eeh.c:596:
+^I               1 /* Temporary Error */);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!event"
#369: FILE: arch/ppc64/kernel/eeh.c:603:
+	if (event == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: arch/ppc64/kernel/eeh.c:606:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#372: FILE: arch/ppc64/kernel/eeh.c:606:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: arch/ppc64/kernel/eeh.c:606:
+ ^I}$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#385: FILE: arch/ppc64/kernel/eeh.c:619:
+	 * out what happened.  So print that out. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#439: FILE: include/asm-ppc64/eeh.h:46:
+#define EEH_MODE_ISOLATED	(1<<2)
                          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#439: FILE: include/asm-ppc64/eeh.h:46:
+#define EEH_MODE_ISOLATED	(1<<2)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#448: FILE: include/asm-ppc64/eeh.h:82:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253818.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 17 warnings, 7 checks, 404 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253818.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
