WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: arch/i386/kernel/sysenter.c:73:
+	struct page *p = virt_to_page(adr - vma->vm_start + syscall_page);
+	get_page(p);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#176: FILE: arch/i386/kernel/sysenter.c:82:
+static struct vm_operations_struct syscall_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#182: FILE: arch/i386/kernel/sysenter.c:88:
+extern char SYSENTER_RETURN_OFFSET[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#209: FILE: arch/i386/kernel/sysenter.c:115:
+	vma->vm_flags = VM_READ|VM_EXEC|VM_MAYREAD|VM_MAYEXEC|VM_MAYWRITE;
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#209: FILE: arch/i386/kernel/sysenter.c:115:
+	vma->vm_flags = VM_READ|VM_EXEC|VM_MAYREAD|VM_MAYEXEC|VM_MAYWRITE;
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#209: FILE: arch/i386/kernel/sysenter.c:115:
+	vma->vm_flags = VM_READ|VM_EXEC|VM_MAYREAD|VM_MAYEXEC|VM_MAYWRITE;
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#209: FILE: arch/i386/kernel/sysenter.c:115:
+	vma->vm_flags = VM_READ|VM_EXEC|VM_MAYREAD|VM_MAYEXEC|VM_MAYWRITE;
 	                                                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#215: FILE: arch/i386/kernel/sysenter.c:121:
+	if ((ret = insert_vm_struct(mm, vma)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#305: FILE: arch/i386/mm/pgtable.c:142:
+static int nr_fixmaps = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#321: FILE: arch/i386/mm/pgtable.c:160:
+	BUG_ON(nr_fixmaps > 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#336: FILE: fs/proc/task_mmu.c:157:
+		const char *name = arch_vma_name(vma);
+		if (!name) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: fs/proc/task_mmu.c:160:
+				if (vma->vm_start <= mm->start_brk &&
 						vma->vm_end >= mm->brk) {

CHECK:SPACING: No space is necessary after a cast
#384: FILE: include/asm-i386/elf.h:135:
+#define VSYSCALL_OFFSET	((unsigned long) &__kernel_vsyscall)

CHECK:SPACING: No space is necessary after a cast
#388: FILE: include/asm-i386/elf.h:139:
+#define __VSYSCALL_EHDR	((const struct elfhdr *) __VSYSCALL_BASE)

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SETUP_ADDITIONAL_PAGES' is wrong - use Kconfig variables or standard guards instead
#391: FILE: include/asm-i386/elf.h:142:
+#define ARCH_HAS_SETUP_ADDITIONAL_PAGES

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#393: FILE: include/asm-i386/elf.h:144:
+extern int arch_setup_additional_pages(struct linux_binprm *bprm,

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: include/asm-i386/elf.h:145:
+                                       int executable_stack);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: include/asm-i386/elf.h:145:
+                                       int executable_stack);$

CHECK:SPACING: No space is necessary after a cast
#410: FILE: include/asm-i386/elf.h:165:
+		(const struct elf_phdr *) (__VSYSCALL_BASE		      \

CHECK:SPACING: No space is necessary after a cast
#425: FILE: include/asm-i386/elf.h:187:
+		(const struct elf_phdr *) (__VSYSCALL_BASE		      \

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#449: FILE: include/asm-i386/fixmap.h:98:
+extern void set_fixaddr_top(unsigned long top);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#498: FILE: include/asm-i386/page.h:127:
+#define MAXMEM			(__FIXADDR_TOP-__PAGE_OFFSET-__VMALLOC_RESERVE)
               			              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#498: FILE: include/asm-i386/page.h:127:
+#define MAXMEM			(__FIXADDR_TOP-__PAGE_OFFSET-__VMALLOC_RESERVE)
               			                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 13 checks, 402 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
