WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
- Unfold ide_init_drive_cmd() at the places where it's used. This makes obvious

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#101: FILE: drivers/ide/ide.c:805:
+		printk(" sc=0x%02x ", args[1]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#102: FILE: drivers/ide/ide.c:806:
+		printk(" fr=0x%02x ", args[2]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: drivers/ide/ide.c:807:
+		printk(" xx=0x%02x\n", args[3]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: drivers/ide/ide.c:814:
+			struct hd_drive_task_hdr regfile;
+			regfile.feature = args[2];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#209: FILE: drivers/ide/ide-floppy.c:1068:
+	OUT_BYTE(dma_ok ? 1:0,IDE_FEATURE_REG);			/* Use PIO/DMA */
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: drivers/ide/ide-floppy.c:1068:
+	OUT_BYTE(dma_ok ? 1:0,IDE_FEATURE_REG);			/* Use PIO/DMA */
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: drivers/ide/ide-floppy.c:1069:
+	OUT_BYTE(bcount.b.high,IDE_BCOUNTH_REG);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/ide/ide-floppy.c:1070:
+	OUT_BYTE(bcount.b.low,IDE_BCOUNTL_REG);
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: drivers/ide/ide-floppy.c:1071:
+	OUT_BYTE(drive->select.all,IDE_SELECT_REG);
 	                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->addressing == 1'
#336: FILE: drivers/ide/ide-taskfile.c:324:
+	if ((id->command_set_2 & 0x0400) && (id->cfs_enable_2 & 0x0400) &&
+	    (drive->addressing == 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#344: FILE: drivers/ide/ide-taskfile.c:332:
+		u8 HIHI = (drive->addressing) ? 0xE0 : 0xEF;
+		OUT_BYTE((args->taskfile.device_head & HIHI) | drive->select.all, IDE_SELECT_REG);

WARNING:TYPO_SPELLING: 'programm' may be misspelled - perhaps 'program'?
#525: FILE: drivers/ide/ioctl.c:39:
+ * Unfortunately every single low level programm out there is using this
                                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!argbuf"
#562: FILE: drivers/ide/ioctl.c:76:
+		if (argbuf == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args.taskfile.command == WIN_SETFEATURES'
#577: FILE: drivers/ide/ioctl.c:91:
+	if ((args.taskfile.command == WIN_SETFEATURES) &&
+	    (args.taskfile.sector_number >= XFER_SW_DMA_0) &&
+	    (args.taskfile.feature == SETFEATURES_XFER) &&
+	    (drive->id->dma_ultra ||
+	     drive->id->dma_mword ||
+	     drive->id->dma_1word)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args.taskfile.sector_number >= XFER_SW_DMA_0'
#577: FILE: drivers/ide/ioctl.c:91:
+	if ((args.taskfile.command == WIN_SETFEATURES) &&
+	    (args.taskfile.sector_number >= XFER_SW_DMA_0) &&
+	    (args.taskfile.feature == SETFEATURES_XFER) &&
+	    (drive->id->dma_ultra ||
+	     drive->id->dma_mword ||
+	     drive->id->dma_1word)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args.taskfile.feature == SETFEATURES_XFER'
#577: FILE: drivers/ide/ioctl.c:91:
+	if ((args.taskfile.command == WIN_SETFEATURES) &&
+	    (args.taskfile.sector_number >= XFER_SW_DMA_0) &&
+	    (args.taskfile.feature == SETFEATURES_XFER) &&
+	    (drive->id->dma_ultra ||
+	     drive->id->dma_mword ||
+	     drive->id->dma_1word)) {

WARNING:TYPO_SPELLING: 'capabilties' may be misspelled - perhaps 'capabilities'?
#587: FILE: drivers/ide/ioctl.c:101:
+		 * Since some hardware can improperly report capabilties, we
 		                                             ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#594: FILE: drivers/ide/ioctl.c:108:
+				printk(KERN_WARNING "%s: Speed warnings UDMA > 2 is not functional.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/ide/ioctl.c:109:
+				printk(KERN_WARNING "%s: Speed warnings UDMA > 2 is not functional.\n",
+						drive->channel->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#605: FILE: drivers/ide/ioctl.c:119:
+				printk(KERN_WARNING "%s: Speed warnings UDMA > 2 is not functional.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#606: FILE: drivers/ide/ioctl.c:120:
+				printk(KERN_WARNING "%s: Speed warnings UDMA > 2 is not functional.\n",
+						drive->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#785: FILE: drivers/scsi/ide-scsi.c:415:
+	OUT_BYTE(dma_ok,IDE_FEATURE_REG);
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#786: FILE: drivers/scsi/ide-scsi.c:416:
+	OUT_BYTE(bcount >> 8,IDE_BCOUNTH_REG);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#787: FILE: drivers/scsi/ide-scsi.c:417:
+	OUT_BYTE(bcount & 0xff,IDE_BCOUNTL_REG);
 	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#803: FILE: drivers/scsi/ide-scsi.c:670:
+	ide_do_drive_cmd (drive, rq, ide_end);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#811: FILE: drivers/scsi/ide-scsi.c:676:
+		kfree (pc);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#811: FILE: drivers/scsi/ide-scsi.c:676:
+	if (pc)
+		kfree (pc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#813: FILE: drivers/scsi/ide-scsi.c:678:
+		kfree (rq);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#813: FILE: drivers/scsi/ide-scsi.c:678:
+	if (rq)
+		kfree (rq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#894: FILE: include/linux/ide.h:510:
+extern void ide_unregister(struct ata_channel *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_channel *' should also have an identifier name
#894: FILE: include/linux/ide.h:510:
+extern void ide_unregister(struct ata_channel *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#947: FILE: include/linux/ide.h:845:
+extern void ata_out_regfile(struct ata_device *, struct hd_drive_task_hdr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#947: FILE: include/linux/ide.h:845:
+extern void ata_out_regfile(struct ata_device *, struct hd_drive_task_hdr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hd_drive_task_hdr *' should also have an identifier name
#947: FILE: include/linux/ide.h:845:
+extern void ata_out_regfile(struct ata_device *, struct hd_drive_task_hdr *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452820.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 18 warnings, 10 checks, 821 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452820.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
