WARNING:TYPO_SPELLING: 'isnt' may be misspelled - perhaps 'isn't'?
#44: 
> isnt there some ext3-private journal structure (journal-bh) linked off
  ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#115: 
buffer heads down, so it's prefered over my last patch.
                           ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#135: 
diff -ur linux-2.6.11-rc4-V0.7.39-02.orig/fs/jbd/journal.c linux-2.6.11-rc4-V0.7.39-02/fs/jbd/journal.c

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#179: FILE: fs/jbd/journal.c:1779:
+				BUG_ON(buffer_journalhead(bh));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Unbalanced braces around else statement
#181: FILE: fs/jbd/journal.c:1781:
+			} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#188: FILE: fs/jbd/journal.c:1788:
+					printk(KERN_WARNING "%s: freeing "

WARNING:SPLIT_STRING: quoted string split across lines
#189: FILE: fs/jbd/journal.c:1789:
+					printk(KERN_WARNING "%s: freeing "
+					       "b_frozen_data\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#190: FILE: fs/jbd/journal.c:1790:
+					       __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#194: FILE: fs/jbd/journal.c:1794:
+					printk(KERN_WARNING "%s: freeing "

WARNING:SPLIT_STRING: quoted string split across lines
#195: FILE: fs/jbd/journal.c:1795:
+					printk(KERN_WARNING "%s: freeing "
+					       "b_committed_data\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#196: FILE: fs/jbd/journal.c:1796:
+					       __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: include/linux/jbd.h:316:
+BUFFER_FNS(JournalHead,journalhead)
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <JournalHead>
#265: FILE: include/linux/jbd.h:316:
+BUFFER_FNS(JournalHead,journalhead)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#281: FILE: include/linux/jbd.h:336:
+	BUG_ON(!bh->b_private);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#290: FILE: include/linux/jbd.h:345:
+	BUG_ON(!bh->b_private);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#292: FILE: include/linux/jbd.h:347:
+	if ((ret = spin_trylock(&bh2jh(bh)->b_state_lock)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#300: FILE: include/linux/jbd.h:355:
+	return bh2jh(bh) ? spin_is_locked(&bh2jh(bh)->b_state_lock) : 0;

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#307: FILE: include/linux/jbd.h:362:
+	BUG_ON(!atomic_read(&bh2jh(bh)->b_state_wait_count));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199811.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 14 warnings, 2 checks, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199811.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
