WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#132: FILE: drivers/s390/net/cu3088.c:2:
+ * $Id: cu3088.c,v 1.36 2005/10/25 14:37:17 cohuck Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#171: FILE: drivers/s390/s390_rdev.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#172: FILE: drivers/s390/s390_rdev.c:2:
+ *  drivers/s390/s390_rdev.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#174: FILE: drivers/s390/s390_rdev.c:4:
+ *   $Revision: 1.2 $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct device)...)
#201: FILE: drivers/s390/s390_rdev.c:31:
+	dev = kmalloc(sizeof(struct device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:MINMAX: min() should probably be min_t(size_t, strlen(name), BUS_ID_SIZE)
#205: FILE: drivers/s390/s390_rdev.c:35:
+	strncpy(dev->bus_id, name, min(strlen(name), (size_t)BUS_ID_SIZE));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#222: FILE: drivers/s390/s390_rdev.c:52:
+EXPORT_SYMBOL(s390_root_dev_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#223: FILE: drivers/s390/s390_rdev.c:53:
+EXPORT_SYMBOL(s390_root_dev_unregister);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#240: FILE: include/asm-s390/s390_rdev.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#252: FILE: include/asm-s390/s390_rdev.h:13:
+extern struct device *s390_root_dev_register(const char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#253: FILE: include/asm-s390/s390_rdev.h:14:
+extern void s390_root_dev_unregister(struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#253: FILE: include/asm-s390/s390_rdev.h:14:
+extern void s390_root_dev_unregister(struct device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127075.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 3 checks, 171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127075.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
