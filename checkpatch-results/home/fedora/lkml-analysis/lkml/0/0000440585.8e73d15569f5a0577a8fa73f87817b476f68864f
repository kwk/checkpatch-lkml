WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	           ChangeSet	1.470   -> 1.471  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	include/linux/acpi.h	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	arch/ia64/kernel/setup.c	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	arch/ia64/mm/Makefile	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	include/asm-ia64/acpi.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	drivers/acpi/tables.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	arch/ia64/kernel/acpi.c	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#	drivers/acpi/Config.in	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#	               (new)	        -> 1.1     include/asm-ia64/numa.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#	               (new)	        -> 1.1     arch/ia64/mm/numa.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# 02/08/09	focht@beast.ess.nec.de	1.471

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# Added ACPI SRAT (Static Resource Affinity Table) and SLIT

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# (System Locality Information Table) parsing code as suggested

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# by Tak Kouchi. Tables are parsed if CONFIG_ACPI_NUMA=y.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# The ACPI SRAT and SLIT parsing routines are actually quite

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# arch-independent, but currently this setup is used only on IA64.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# The NUMA related variables touched are:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
#  node_memblk : physical memory blocks, node to which they belong

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
#  node_cpuid : hardware cpu IDs and nodes to which they belong

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
#  numa_slit : locality matrix with "distances" between nodes.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#91: 
# This setup is needed for CONFIG_DISCONTIGMEM on IA64 but can be

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#92: 
# used for other NUMA purposes, too.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#93: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#94: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#96: 
--- a/arch/ia64/kernel/acpi.c	Fri Aug  9 17:58:36 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#125: FILE: arch/ia64/kernel/acpi.c:453:
+#define PXM_FLAG_LEN ((MAX_PXM_DOMAINS + 1)/32)
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#127: FILE: arch/ia64/kernel/acpi.c:455:
+static int __initdata srat_num_cpus = 0;		/* number of cpus */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after srat_num_cpus
#127: FILE: arch/ia64/kernel/acpi.c:455:
+static int __initdata srat_num_cpus = 0;		/* number of cpus */

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#128: FILE: arch/ia64/kernel/acpi.c:456:
+static u32 __initdata pxm_flag[PXM_FLAG_LEN] = { [0 ... PXM_FLAG_LEN-1] = 0};
                                                                     ^

WARNING:MISPLACED_INIT: __initdata should be placed after pxm_flag[PXM_FLAG_LEN]
#128: FILE: arch/ia64/kernel/acpi.c:456:
+static u32 __initdata pxm_flag[PXM_FLAG_LEN] = { [0 ... PXM_FLAG_LEN-1] = 0};

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: arch/ia64/kernel/acpi.c:457:
+#define PXM_BIT_SET(bit)	(set_bit(bit,(void *)pxm_flag))
                         	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: arch/ia64/kernel/acpi.c:458:
+#define PXM_BIT_CLEAR(bit)	(clear_bit(bit,(void *)pxm_flag))
                           	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: arch/ia64/kernel/acpi.c:459:
+#define PXM_BIT_TEST(bit)	(test_bit(bit,(void *)pxm_flag))
                          	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: arch/ia64/kernel/acpi.c:461:
+int pxm_to_nid_map[MAX_PXM_DOMAINS] = { [0 ... MAX_PXM_DOMAINS-1] = -1};
                                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#134: FILE: arch/ia64/kernel/acpi.c:462:
+int nid_to_pxm_map[NR_NODES] = { [0 ... NR_NODES-1] = -1};
                                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: arch/ia64/kernel/acpi.c:469:
+acpi_numa_slit_init (struct acpi_table_slit *slit)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: arch/ia64/kernel/acpi.c:474:
+^Ilen = sizeof(struct acpi_table_header) + 8 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: arch/ia64/kernel/acpi.c:477:
+		printk("ACPI 2.0 SLIT: size mismatch: %d expected, %d actual\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: arch/ia64/kernel/acpi.c:478:
+		printk("ACPI 2.0 SLIT: size mismatch: %d expected, %d actual\n",
+		      len, slit->header.length);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#156: FILE: arch/ia64/kernel/acpi.c:484:
+	for (i=0; i<slit->localities; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#156: FILE: arch/ia64/kernel/acpi.c:484:
+	for (i=0; i<slit->localities; i++) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#160: FILE: arch/ia64/kernel/acpi.c:488:
+		for (j=0; j<slit->localities; j++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#160: FILE: arch/ia64/kernel/acpi.c:488:
+		for (j=0; j<slit->localities; j++) {
 		           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: arch/ia64/kernel/acpi.c:492:
+^I^I^Inode_distance(node_from, node_to) = $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#165: FILE: arch/ia64/kernel/acpi.c:493:
+				slit->entry[i*slit->localities + j];
 				             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#170: FILE: arch/ia64/kernel/acpi.c:498:
+	printk("ACPI 2.0 SLIT locality table:\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: arch/ia64/kernel/acpi.c:501:
+			printk("%03d ", node_distance(i,j));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: arch/ia64/kernel/acpi.c:501:
+			printk("%03d ", node_distance(i,j));
 			                               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: arch/ia64/kernel/acpi.c:502:
+		printk("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: arch/ia64/kernel/acpi.c:508:
+acpi_numa_processor_affinity_init (struct acpi_table_processor_affinity *pa)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#191: FILE: arch/ia64/kernel/acpi.c:519:
+	printk("CPU %x in proximity domain %x %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: arch/ia64/kernel/acpi.c:526:
+acpi_numa_memory_affinity_init (struct acpi_table_memory_affinity *ma)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#216: FILE: arch/ia64/kernel/acpi.c:544:
+		printk("Too many mem chunks in SRAT. Ignoring %ld MBytes at %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: arch/ia64/kernel/acpi.c:545:
+		printk("Too many mem chunks in SRAT. Ignoring %ld MBytes at %lx\n",
+			size/(1024*1024), paddr);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#217: FILE: arch/ia64/kernel/acpi.c:545:
+			size/(1024*1024), paddr);
 			    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#217: FILE: arch/ia64/kernel/acpi.c:545:
+			size/(1024*1024), paddr);
 			          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#237: FILE: arch/ia64/kernel/acpi.c:565:
+	printk("Memory range 0x%lx to 0x%lx (type %x) in proximity domain %x %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: arch/ia64/kernel/acpi.c:568:
+^I       ma->flags.enabled ? (ma->flags.hot_pluggable ? $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#241: FILE: arch/ia64/kernel/acpi.c:569:
+				    "enabled and removable" : "enabled" )

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#278: FILE: arch/ia64/kernel/acpi.c:606:
+	printk("Number of logical nodes in system = %d\n", numnodes);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#279: FILE: arch/ia64/kernel/acpi.c:607:
+	printk("Number of memory chunks in system = %d\n", num_memblks);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#331: FILE: arch/ia64/mm/numa.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: arch/ia64/mm/numa.c:9:
+ * $

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#355: FILE: arch/ia64/mm/numa.c:25:
+int num_memblks = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#407: FILE: drivers/acpi/tables.c:209:
+acpi_table_print_srat_entry (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#407: FILE: drivers/acpi/tables.c:209:
+acpi_table_print_srat_entry (

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#408: FILE: drivers/acpi/tables.c:210:
+	acpi_table_entry_header	*header)
 	                       	^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#414: FILE: drivers/acpi/tables.c:216:
+	switch (header->type) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#418: FILE: drivers/acpi/tables.c:220:
+			(struct acpi_table_processor_affinity*) header;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#418: FILE: drivers/acpi/tables.c:220:
+			(struct acpi_table_processor_affinity*) header;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#419: FILE: drivers/acpi/tables.c:221:
+		printk(KERN_INFO PREFIX "SRAT Processor (id[0x%02x] eid[0x%02x]) in proximity domain %d %s\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#421: FILE: drivers/acpi/tables.c:223:
+		       p->flags.enabled?"enabled":"disabled");
 		                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#421: FILE: drivers/acpi/tables.c:223:
+		       p->flags.enabled?"enabled":"disabled");
 		                                 ^

CHECK:SPACING: No space is necessary after a cast
#428: FILE: drivers/acpi/tables.c:230:
+			(struct acpi_table_memory_affinity*) header;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#428: FILE: drivers/acpi/tables.c:230:
+			(struct acpi_table_memory_affinity*) header;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#429: FILE: drivers/acpi/tables.c:231:
+		printk(KERN_INFO PREFIX "SRAT Memory (0x%08x%08x length 0x%08x%08x type 0x%x) in proximity domain %d %s%s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#438: FILE: drivers/acpi/tables.c:240:
+		printk(KERN_WARNING PREFIX "Found unsupported SRAT entry (type = 0x%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: drivers/acpi/tables.c:241:
+		printk(KERN_WARNING PREFIX "Found unsupported SRAT entry (type = 0x%x)\n",
+			header->type);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#445: FILE: drivers/acpi/tables.c:247:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#456: FILE: drivers/acpi/tables.c:268:
+acpi_table_parse_madt_family (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#456: FILE: drivers/acpi/tables.c:268:
+acpi_table_parse_madt_family (

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#479: FILE: drivers/acpi/tables.c:291:
+			printk(KERN_WARNING PREFIX "Unable to map %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#488: FILE: drivers/acpi/tables.c:299:
+		printk(KERN_WARNING PREFIX "%s not present\n",

CHECK:SPACING: No space is necessary after a cast
#498: FILE: drivers/acpi/tables.c:309:
+		((unsigned long) madt + madt_size);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#510: FILE: drivers/acpi/tables.c:323:
 
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#512: FILE: drivers/acpi/tables.c:325:
+acpi_table_parse_madt (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#512: FILE: drivers/acpi/tables.c:325:
+acpi_table_parse_madt (

CHECK:LINE_SPACING: Please don't use multiple blank lines
#520: FILE: drivers/acpi/tables.c:333:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#523: FILE: drivers/acpi/tables.c:336:
+acpi_parse_slit (unsigned long phys_addr, unsigned long size)

CHECK:SPACING: No space is necessary after a cast
#531: FILE: drivers/acpi/tables.c:344:
+	slit = (struct acpi_table_slit *) __va(phys_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#533: FILE: drivers/acpi/tables.c:346:
+		printk(KERN_WARNING PREFIX "Unable to map SLIT\n");

CHECK:SPACING: No space is necessary after a cast
#538: FILE: drivers/acpi/tables.c:351:
+	localities = (u32) slit->localities;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#540: FILE: drivers/acpi/tables.c:353:
+	printk(KERN_INFO PREFIX "SLIT localities %ux%u\n", localities, localities);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#547: FILE: drivers/acpi/tables.c:360:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#549: FILE: drivers/acpi/tables.c:362:
+acpi_parse_processor_affinity (acpi_table_entry_header *header)

CHECK:SPACING: No space is necessary after a cast
#553: FILE: drivers/acpi/tables.c:366:
+	processor_affinity = (struct acpi_table_processor_affinity*) header;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#553: FILE: drivers/acpi/tables.c:366:
+	processor_affinity = (struct acpi_table_processor_affinity*) header;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#565: FILE: drivers/acpi/tables.c:378:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#567: FILE: drivers/acpi/tables.c:380:
+acpi_parse_memory_affinity (acpi_table_entry_header *header)

CHECK:SPACING: No space is necessary after a cast
#571: FILE: drivers/acpi/tables.c:384:
+	memory_affinity = (struct acpi_table_memory_affinity*) header;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#571: FILE: drivers/acpi/tables.c:384:
+	memory_affinity = (struct acpi_table_memory_affinity*) header;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#583: FILE: drivers/acpi/tables.c:396:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#585: FILE: drivers/acpi/tables.c:398:
+acpi_parse_srat (unsigned long phys_addr, unsigned long size)

CHECK:SPACING: No space is necessary after a cast
#592: FILE: drivers/acpi/tables.c:405:
+	srat = (struct acpi_table_srat *) __va(phys_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#594: FILE: drivers/acpi/tables.c:407:
+		printk(KERN_WARNING PREFIX "Unable to map SRAT\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#598: FILE: drivers/acpi/tables.c:411:
+	printk(KERN_INFO PREFIX "SRAT revision %d\n", srat->table_revision);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#603: FILE: drivers/acpi/tables.c:416:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#619: FILE: drivers/acpi/tables.c:432:
+		printk("Warning: acpi_table_parse(ACPI_SRAT) returned %d!\n",result);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#619: FILE: drivers/acpi/tables.c:432:
+		printk("Warning: acpi_table_parse(ACPI_SRAT) returned %d!\n",result);
 		                                                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#626: FILE: drivers/acpi/tables.c:439:
+		printk("Warning: acpi_table_parse(ACPI_SLIT) returned %d!\n",result);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#626: FILE: drivers/acpi/tables.c:439:
+		printk("Warning: acpi_table_parse(ACPI_SLIT) returned %d!\n",result);
 		                                                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#632: FILE: drivers/acpi/tables.c:445:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#634: FILE: drivers/acpi/tables.c:447:
+acpi_table_parse_srat (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#634: FILE: drivers/acpi/tables.c:447:
+acpi_table_parse_srat (

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#676: FILE: include/asm-ia64/numa.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: include/asm-ia64/numa.h:7:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/mmzone.h> instead of <asm/mmzone.h>
#692: FILE: include/asm-ia64/numa.h:17:
+# include <asm/mmzone.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#707: FILE: include/asm-ia64/numa.h:32:
+ * obtain information about memory nodes.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: include/asm-ia64/numa.h:58:
+#define node_distance(from,to) (numa_slit[from * numnodes + to])
                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'from' may be better as '(from)' to avoid precedence issues
#733: FILE: include/asm-ia64/numa.h:58:
+#define node_distance(from,to) (numa_slit[from * numnodes + to])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'to' may be better as '(to)' to avoid precedence issues
#733: FILE: include/asm-ia64/numa.h:58:
+#define node_distance(from,to) (numa_slit[from * numnodes + to])

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#735: FILE: include/asm-ia64/numa.h:60:
+extern int paddr_to_nid(unsigned long paddr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: include/linux/acpi.h:339:
+int acpi_numa_init (void);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#752: FILE: include/linux/acpi.h:343:
+int acpi_table_parse_madt (enum acpi_madt_entry_id, acpi_madt_entry_handler);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_madt_entry_handler' should also have an identifier name
#752: FILE: include/linux/acpi.h:343:
+int acpi_table_parse_madt (enum acpi_madt_entry_id, acpi_madt_entry_handler);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#753: FILE: include/linux/acpi.h:344:
+int acpi_table_parse_srat (enum acpi_srat_entry_id, acpi_madt_entry_handler);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_madt_entry_handler' should also have an identifier name
#753: FILE: include/linux/acpi.h:344:
+int acpi_table_parse_srat (enum acpi_srat_entry_id, acpi_madt_entry_handler);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#756: FILE: include/linux/acpi.h:347:
+void acpi_table_print_srat_entry (acpi_table_entry_header *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_table_entry_header *' should also have an identifier name
#756: FILE: include/linux/acpi.h:347:
+void acpi_table_print_srat_entry (acpi_table_entry_header *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#759: FILE: include/linux/acpi.h:350:
+extern void __init acpi_numa_slit_init (struct acpi_table_slit *slit);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#759: FILE: include/linux/acpi.h:350:
+extern void __init acpi_numa_slit_init (struct acpi_table_slit *slit);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#760: FILE: include/linux/acpi.h:351:
+extern void __init acpi_numa_processor_affinity_init (struct acpi_table_processor_affinity *pa);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#760: FILE: include/linux/acpi.h:351:
+extern void __init acpi_numa_processor_affinity_init (struct acpi_table_processor_affinity *pa);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#761: FILE: include/linux/acpi.h:352:
+extern void __init acpi_numa_memory_affinity_init (struct acpi_table_memory_affinity *ma);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#761: FILE: include/linux/acpi.h:352:
+extern void __init acpi_numa_memory_affinity_init (struct acpi_table_memory_affinity *ma);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#762: FILE: include/linux/acpi.h:353:
+extern void __init acpi_numa_arch_fixup(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 81 warnings, 41 checks, 627 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
