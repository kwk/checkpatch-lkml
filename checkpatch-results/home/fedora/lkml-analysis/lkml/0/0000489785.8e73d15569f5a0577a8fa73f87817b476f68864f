WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#66: FILE: include/linux/fs.h:394:
+	void (*removepage)(struct page *); /* called when page gets removed from the inode */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: mm/filemap.c:101:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: mm/shmem.c:56:
+	struct inode * inode;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: mm/shmem.c:57:
+	struct shmem_sb_info * sbinfo;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: mm/shmem.c:66:
+	spin_lock (&sbinfo->stat_lock);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: mm/shmem.c:68:
+	spin_unlock (&sbinfo->stat_lock);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#157: FILE: mm/shmem.c:311:
+	inode->i_blocks -= freed*BLOCKS_PER_PAGE;
 	                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: mm/shmem.c:313:
+	spin_lock (&sbinfo->stat_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#161: FILE: mm/shmem.c:315:
+	spin_unlock (&sbinfo->stat_lock);

WARNING:INDENTED_LABEL: labels should not be indented
#201: FILE: mm/shmem.c:1314:
+	removepage:	shmem_removepage,

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#220: FILE: mm/shmem.c:43:
+static struct address_space_operations shmem_noswap_aops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: mm/shmem.c:50:
+static struct super_block *shmem_read_super(struct super_block * sb, void * data, int silent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: mm/shmem.c:50:
+static struct super_block *shmem_read_super(struct super_block * sb, void * data, int silent);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#235: FILE: mm/shmem.c:58:
+static DECLARE_FSTYPE(tmpfs_fs_type, "tmpfs", shmem_read_super, FS_LITTER|FS_NOMOUNT);
                                                                          ^

WARNING:INDENTED_LABEL: labels should not be indented
#278: FILE: mm/shmem.c:568:
+	noswap_alloc:

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#320: FILE: mm/shmem.c:1346:
+static struct address_space_operations shmem_noswap_aops = {

WARNING:INDENTED_LABEL: labels should not be indented
#321: FILE: mm/shmem.c:1347:
+	removepage:	shmem_removepage,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#322: FILE: mm/shmem.c:1348:
+	writepage:	fail_writepage,
 	         ^

WARNING:INDENTED_LABEL: labels should not be indented
#322: FILE: mm/shmem.c:1348:
+	writepage:	fail_writepage,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#346: FILE: mm/shmem.c:1416:
+	if ((error = register_filesystem(&ramfs2_fs_type))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#347: FILE: mm/shmem.c:1417:
+		printk (KERN_ERR "Could not register ramfs2\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#347: FILE: mm/shmem.c:1417:
+		printk (KERN_ERR "Could not register ramfs2\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000489785.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 13 warnings, 2 checks, 266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000489785.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
