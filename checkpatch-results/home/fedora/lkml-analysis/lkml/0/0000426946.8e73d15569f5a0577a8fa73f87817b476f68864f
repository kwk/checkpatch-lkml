WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urN linux-2.5.40/arch/s390/kernel/Makefile linux-2.5.40-s390/arch/s390/kernel/Makefile

CHECK:SPACING: No space is necessary after a cast
#493: FILE: arch/s390/kernel/process.c:139:
+	regs.psw.addr = (__u32) kernel_thread_starter | _ADDR_31;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#496: FILE: arch/s390/kernel/process.c:142:
+	regs.gprs[9] = (unsigned long) fn;

CHECK:SPACING: No space is necessary after a cast
#497: FILE: arch/s390/kernel/process.c:143:
+	regs.gprs[10] = (unsigned long) arg;

CHECK:SPACING: No space is necessary after a cast
#498: FILE: arch/s390/kernel/process.c:144:
+	regs.gprs[11] = (unsigned long) do_exit;

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: arch/s390/kernel/process.c:190:
+        frame->childregs = *regs;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: arch/s390/kernel/process.c:190:
+        frame->childregs = *regs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: arch/s390/kernel/process.c:195:
+        /* new return point is ret_from_fork */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: arch/s390/kernel/process.c:196:
+        frame->gprs[8] = (unsigned long) ret_from_fork;$

CHECK:SPACING: No space is necessary after a cast
#520: FILE: arch/s390/kernel/process.c:196:
+        frame->gprs[8] = (unsigned long) ret_from_fork;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: arch/s390/kernel/process.c:196:
+        frame->gprs[8] = (unsigned long) ret_from_fork;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: arch/s390/kernel/process.c:215:
+        p = do_fork(SIGCHLD, regs.gprs[15], &regs, 0, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: arch/s390/kernel/process.c:215:
+        p = do_fork(SIGCHLD, regs.gprs[15], &regs, 0, NULL);$

CHECK:SPACING: No space is necessary after a cast
#550: FILE: arch/s390/kernel/process.c:228:
+	user_tid = (int *) regs.gprs[4];

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: arch/s390/kernel/process.c:231:
+        p = do_fork(clone_flags & ~CLONE_IDLETASK, newsp, &regs, 0, user_tid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/s390/kernel/process.c:231:
+        p = do_fork(clone_flags & ~CLONE_IDLETASK, newsp, &regs, 0, user_tid);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#576: FILE: arch/s390/kernel/setup.c:527:
+			       num_online_cpus(), loops_per_jiffy/(500000/HZ),
 			                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#576: FILE: arch/s390/kernel/setup.c:527:
+			       num_online_cpus(), loops_per_jiffy/(500000/HZ),
 			                                                 ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#668: FILE: arch/s390/kernel/smp.c:56:
+volatile unsigned long cpu_possible_map;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#707: FILE: arch/s390/kernel/smp.c:122:
+	int cpus = num_online_cpus()-1;
 	                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: arch/s390/kernel/smp.c:158:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: arch/s390/kernel/smp.c:158:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#721: FILE: arch/s390/kernel/smp.c:158:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: arch/s390/kernel/smp.c:159:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: arch/s390/kernel/smp.c:159:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: arch/s390/kernel/smp.c:174:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: arch/s390/kernel/smp.c:174:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#732: FILE: arch/s390/kernel/smp.c:174:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#733: FILE: arch/s390/kernel/smp.c:175:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: arch/s390/kernel/smp.c:175:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: arch/s390/kernel/smp.c:320:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: arch/s390/kernel/smp.c:320:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#743: FILE: arch/s390/kernel/smp.c:320:
+        for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#744: FILE: arch/s390/kernel/smp.c:321:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: arch/s390/kernel/smp.c:321:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#759: FILE: arch/s390/kernel/smp.c:400:
+	parms.start_ctl = cr;
 	^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#760: FILE: arch/s390/kernel/smp.c:401:
+	parms.end_ctl = cr;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#761: FILE: arch/s390/kernel/smp.c:402:
+	parms.orvals[cr] = 1 << bit;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#762: FILE: arch/s390/kernel/smp.c:403:
+	parms.andvals[cr] = 0xFFFFFFFF;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#763: FILE: arch/s390/kernel/smp.c:404:
+	smp_call_function(smp_ctl_bit_callback, &parms, 0, 1);
 	                                         ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#778: FILE: arch/s390/kernel/smp.c:414:
+	parms.start_ctl = cr;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#779: FILE: arch/s390/kernel/smp.c:415:
+	parms.end_ctl = cr;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#780: FILE: arch/s390/kernel/smp.c:416:
+	parms.orvals[cr] = 0x00000000;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#781: FILE: arch/s390/kernel/smp.c:417:
+	parms.andvals[cr] = ~(1 << bit);
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#782: FILE: arch/s390/kernel/smp.c:418:
+	smp_call_function(smp_ctl_bit_callback, &parms, 0, 1);
 	                                         ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: arch/s390/kernel/smp.c:428:
+        int curr_cpu, num_cpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: arch/s390/kernel/smp.c:428:
+        int curr_cpu, num_cpus;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#800: FILE: arch/s390/kernel/smp.c:432:
+        num_cpus = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: arch/s390/kernel/smp.c:432:
+        num_cpus = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: arch/s390/kernel/smp.c:436:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: arch/s390/kernel/smp.c:436:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: arch/s390/kernel/smp.c:439:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

CHECK:SPACING: No space is necessary after a cast
#810: FILE: arch/s390/kernel/smp.c:439:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: arch/s390/kernel/smp.c:439:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: arch/s390/kernel/smp.c:440:
+                if (signal_processor(num_cpus, sigp_sense) ==$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: arch/s390/kernel/smp.c:440:
+                if (signal_processor(num_cpus, sigp_sense) ==$

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: arch/s390/kernel/smp.c:444:
+                num_cpus++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: arch/s390/kernel/smp.c:444:
+                num_cpus++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: arch/s390/kernel/smp.c:446:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

CHECK:SPACING: No space is necessary after a cast
#820: FILE: arch/s390/kernel/smp.c:446:
+        printk("Detected %d CPU's\n",(int) num_cpus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: arch/s390/kernel/smp.c:446:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#820: FILE: arch/s390/kernel/smp.c:446:
+        printk("Detected %d CPU's\n",(int) num_cpus);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#820: FILE: arch/s390/kernel/smp.c:446:
+        printk("Detected %d CPU's\n",(int) num_cpus);
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: arch/s390/kernel/smp.c:471:
+        /* Print info about this processor */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#850: FILE: arch/s390/kernel/smp.c:472:
+        print_cpu_info(&S390_lowcore.cpu_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: arch/s390/kernel/smp.c:472:
+        print_cpu_info(&S390_lowcore.cpu_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: arch/s390/kernel/smp.c:483:
+       return do_fork(CLONE_VM|CLONE_IDLETASK, 0, &regs, 0, NULL);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#859: FILE: arch/s390/kernel/smp.c:483:
+       return do_fork(CLONE_VM|CLONE_IDLETASK, 0, &regs, 0, NULL);
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: arch/s390/kernel/smp.c:490:
+        sigp_ccode          ccode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: arch/s390/kernel/smp.c:490:
+        sigp_ccode          ccode;$

ERROR:SPACING: space required before the open brace '{'
#875: FILE: arch/s390/kernel/smp.c:498:
+	if (ccode){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#876: FILE: arch/s390/kernel/smp.c:499:
+		printk("sigp_set_prefix failed for cpu %d "

WARNING:SPLIT_STRING: quoted string split across lines
#877: FILE: arch/s390/kernel/smp.c:500:
+		printk("sigp_set_prefix failed for cpu %d "
+		       "with condition code %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#878: FILE: arch/s390/kernel/smp.c:501:
+		       (int) cpu, (int) ccode);

ERROR:SPACING: space required before the open brace '{'
#888: FILE: arch/s390/kernel/smp.c:509:
+	if (IS_ERR(idle)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: arch/s390/kernel/smp.c:510:
+                printk("failed fork for CPU %d", cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: arch/s390/kernel/smp.c:510:
+                printk("failed fork for CPU %d", cpu);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#889: FILE: arch/s390/kernel/smp.c:510:
+                printk("failed fork for CPU %d", cpu);

CHECK:SPACING: No space is necessary after a cast
#900: FILE: arch/s390/kernel/smp.c:524:
+	cpu_lowcore->kernel_stack = (__u32) idle->thread_info + (2*PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#900: FILE: arch/s390/kernel/smp.c:524:
+	cpu_lowcore->kernel_stack = (__u32) idle->thread_info + (2*PAGE_SIZE);
 	                                                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#926: FILE: arch/s390/kernel/smp.c:536:
+	while (!cpu_online(cpu));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: arch/s390/kernel/smp.c:552:
+        smp_check_cpus(max_cpus);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: arch/s390/kernel/smp.c:552:
+        smp_check_cpus(max_cpus);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#952: FILE: arch/s390/kernel/smp.c:556:
+         *  Initialize prefix pages and stacks for all possible cpus$

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: arch/s390/kernel/smp.c:560:
+        for(i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: arch/s390/kernel/smp.c:560:
+        for(i = 0; i < NR_CPUS; i++) {$

ERROR:SPACING: space required before the open parenthesis '('
#957: FILE: arch/s390/kernel/smp.c:560:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#957: FILE: arch/s390/kernel/smp.c:560:
+        for(i = 0; i < NR_CPUS; i++) {

CHECK:SPACING: No space is necessary after a cast
#987: FILE: arch/s390/kernel/smp.c:572:
+	set_prefix((u32) lowcore_ptr[smp_processor_id()]);

CHECK:SPACING: No space is necessary after a cast
#1669: FILE: arch/s390x/kernel/process.c:136:
+	regs.psw.addr = (__u64) kernel_thread_starter;

CHECK:SPACING: No space is necessary after a cast
#1672: FILE: arch/s390x/kernel/process.c:139:
+	regs.gprs[9] = (unsigned long) fn;

CHECK:SPACING: No space is necessary after a cast
#1673: FILE: arch/s390x/kernel/process.c:140:
+	regs.gprs[10] = (unsigned long) arg;

CHECK:SPACING: No space is necessary after a cast
#1674: FILE: arch/s390x/kernel/process.c:141:
+	regs.gprs[11] = (unsigned long) do_exit;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1693: FILE: arch/s390x/kernel/process.c:192:
+        /* new return point is ret_from_fork */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1694: FILE: arch/s390x/kernel/process.c:193:
+        frame->gprs[8] = (unsigned long) ret_from_fork;$

CHECK:SPACING: No space is necessary after a cast
#1694: FILE: arch/s390x/kernel/process.c:193:
+        frame->gprs[8] = (unsigned long) ret_from_fork;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1694: FILE: arch/s390x/kernel/process.c:193:
+        frame->gprs[8] = (unsigned long) ret_from_fork;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1699: FILE: arch/s390x/kernel/process.c:197:
+        /* save fprs */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1712: FILE: arch/s390x/kernel/process.c:210:
+        p = do_fork(SIGCHLD, regs.gprs[15], &regs, 0, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1712: FILE: arch/s390x/kernel/process.c:210:
+        p = do_fork(SIGCHLD, regs.gprs[15], &regs, 0, NULL);$

CHECK:SPACING: No space is necessary after a cast
#1724: FILE: arch/s390x/kernel/process.c:223:
+	user_tid = (int *) regs.gprs[4];

ERROR:CODE_INDENT: code indent should use tabs where possible
#1728: FILE: arch/s390x/kernel/process.c:226:
+        p = do_fork(clone_flags & ~CLONE_IDLETASK, newsp, &regs, 0, user_tid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1728: FILE: arch/s390x/kernel/process.c:226:
+        p = do_fork(clone_flags & ~CLONE_IDLETASK, newsp, &regs, 0, user_tid);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1750: FILE: arch/s390x/kernel/setup.c:517:
+				num_online_cpus(), loops_per_jiffy/(500000/HZ),
 				                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1750: FILE: arch/s390x/kernel/setup.c:517:
+				num_online_cpus(), loops_per_jiffy/(500000/HZ),
 				                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1847: FILE: arch/s390x/kernel/signal32.c:150:
+        spin_lock_irq(&current->sig->siglock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1847: FILE: arch/s390x/kernel/signal32.c:150:
+        spin_lock_irq(&current->sig->siglock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1852: FILE: arch/s390x/kernel/signal32.c:154:
+        spin_unlock_irq(&current->sig->siglock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1852: FILE: arch/s390x/kernel/signal32.c:154:
+        spin_unlock_irq(&current->sig->siglock);$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1913: FILE: arch/s390x/kernel/smp.c:55:
+volatile unsigned long cpu_possible_map;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1952: FILE: arch/s390x/kernel/smp.c:121:
+	int cpus = num_online_cpus()-1;
 	                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1966: FILE: arch/s390x/kernel/smp.c:157:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1966: FILE: arch/s390x/kernel/smp.c:157:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1966: FILE: arch/s390x/kernel/smp.c:157:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1967: FILE: arch/s390x/kernel/smp.c:158:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1967: FILE: arch/s390x/kernel/smp.c:158:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1977: FILE: arch/s390x/kernel/smp.c:173:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1977: FILE: arch/s390x/kernel/smp.c:173:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1977: FILE: arch/s390x/kernel/smp.c:173:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1978: FILE: arch/s390x/kernel/smp.c:174:
+                if (!cpu_online(i) || smp_processor_id() == i) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1978: FILE: arch/s390x/kernel/smp.c:174:
+                if (!cpu_online(i) || smp_processor_id() == i) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1978: FILE: arch/s390x/kernel/smp.c:174:
+                if (!cpu_online(i) || smp_processor_id() == i) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1988: FILE: arch/s390x/kernel/smp.c:315:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1988: FILE: arch/s390x/kernel/smp.c:315:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1988: FILE: arch/s390x/kernel/smp.c:315:
+        for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1989: FILE: arch/s390x/kernel/smp.c:316:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1989: FILE: arch/s390x/kernel/smp.c:316:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2004: FILE: arch/s390x/kernel/smp.c:380:
+	parms.start_ctl = cr;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2005: FILE: arch/s390x/kernel/smp.c:381:
+	parms.end_ctl = cr;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2006: FILE: arch/s390x/kernel/smp.c:382:
+	parms.orvals[cr] = 1 << bit;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2007: FILE: arch/s390x/kernel/smp.c:383:
+	parms.andvals[cr] = -1L;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2008: FILE: arch/s390x/kernel/smp.c:384:
+	smp_call_function(smp_ctl_bit_callback, &parms, 0, 1);
 	                                         ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2023: FILE: arch/s390x/kernel/smp.c:394:
+	parms.start_ctl = cr;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2024: FILE: arch/s390x/kernel/smp.c:395:
+	parms.end_ctl = cr;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2025: FILE: arch/s390x/kernel/smp.c:396:
+	parms.orvals[cr] = 0;
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2026: FILE: arch/s390x/kernel/smp.c:397:
+	parms.andvals[cr] = ~(1L << bit);
 	^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2027: FILE: arch/s390x/kernel/smp.c:398:
+	smp_call_function(smp_ctl_bit_callback, &parms, 0, 1);
 	                                         ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2039: FILE: arch/s390x/kernel/smp.c:409:
+        int curr_cpu, num_cpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2039: FILE: arch/s390x/kernel/smp.c:409:
+        int curr_cpu, num_cpus;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2045: FILE: arch/s390x/kernel/smp.c:413:
+        num_cpus = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2045: FILE: arch/s390x/kernel/smp.c:413:
+        num_cpus = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2050: FILE: arch/s390x/kernel/smp.c:417:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2050: FILE: arch/s390x/kernel/smp.c:417:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2055: FILE: arch/s390x/kernel/smp.c:420:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

CHECK:SPACING: No space is necessary after a cast
#2055: FILE: arch/s390x/kernel/smp.c:420:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2055: FILE: arch/s390x/kernel/smp.c:420:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2056: FILE: arch/s390x/kernel/smp.c:421:
+                if (signal_processor(num_cpus, sigp_sense) ==$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2056: FILE: arch/s390x/kernel/smp.c:421:
+                if (signal_processor(num_cpus, sigp_sense) ==$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2062: FILE: arch/s390x/kernel/smp.c:425:
+                num_cpus++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2062: FILE: arch/s390x/kernel/smp.c:425:
+                num_cpus++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2065: FILE: arch/s390x/kernel/smp.c:427:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

CHECK:SPACING: No space is necessary after a cast
#2065: FILE: arch/s390x/kernel/smp.c:427:
+        printk("Detected %d CPU's\n",(int) num_cpus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2065: FILE: arch/s390x/kernel/smp.c:427:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2065: FILE: arch/s390x/kernel/smp.c:427:
+        printk("Detected %d CPU's\n",(int) num_cpus);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2065: FILE: arch/s390x/kernel/smp.c:427:
+        printk("Detected %d CPU's\n",(int) num_cpus);
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2090: FILE: arch/s390x/kernel/smp.c:452:
+        /* Print info about this processor */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2091: FILE: arch/s390x/kernel/smp.c:453:
+        print_cpu_info(&S390_lowcore.cpu_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2091: FILE: arch/s390x/kernel/smp.c:453:
+        print_cpu_info(&S390_lowcore.cpu_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2100: FILE: arch/s390x/kernel/smp.c:464:
+       return do_fork(CLONE_VM|CLONE_IDLETASK, 0, &regs, 0, NULL);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2100: FILE: arch/s390x/kernel/smp.c:464:
+       return do_fork(CLONE_VM|CLONE_IDLETASK, 0, &regs, 0, NULL);
                               ^

CHECK:SPACING: No space is necessary after a cast
#2114: FILE: arch/s390x/kernel/smp.c:477:
+	ccode = signal_processor_p((u64) lowcore_ptr[cpu],

ERROR:SPACING: space required before the open brace '{'
#2116: FILE: arch/s390x/kernel/smp.c:479:
+	if(ccode){

ERROR:SPACING: space required before the open parenthesis '('
#2116: FILE: arch/s390x/kernel/smp.c:479:
+	if(ccode){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2117: FILE: arch/s390x/kernel/smp.c:480:
+		printk("sigp_set_prefix failed for cpu %d "

WARNING:SPLIT_STRING: quoted string split across lines
#2118: FILE: arch/s390x/kernel/smp.c:481:
+		printk("sigp_set_prefix failed for cpu %d "
+		       "with condition code %d\n",

CHECK:SPACING: No space is necessary after a cast
#2119: FILE: arch/s390x/kernel/smp.c:482:
+		       (int) cpu, (int) ccode);

ERROR:SPACING: space required before the open brace '{'
#2128: FILE: arch/s390x/kernel/smp.c:489:
+	if (IS_ERR(idle)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#2129: FILE: arch/s390x/kernel/smp.c:490:
+                printk("failed fork for CPU %d", cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2129: FILE: arch/s390x/kernel/smp.c:490:
+                printk("failed fork for CPU %d", cpu);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2129: FILE: arch/s390x/kernel/smp.c:490:
+                printk("failed fork for CPU %d", cpu);

CHECK:SPACING: No space is necessary after a cast
#2140: FILE: arch/s390x/kernel/smp.c:504:
+	cpu_lowcore->kernel_stack = (__u64) idle->thread_info + (4*PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2140: FILE: arch/s390x/kernel/smp.c:504:
+	cpu_lowcore->kernel_stack = (__u64) idle->thread_info + (4*PAGE_SIZE);
 	                                                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2166: FILE: arch/s390x/kernel/smp.c:516:
+	while (!cpu_online(cpu));

ERROR:CODE_INDENT: code indent should use tabs where possible
#2186: FILE: arch/s390x/kernel/smp.c:532:
+        smp_check_cpus(max_cpus);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2186: FILE: arch/s390x/kernel/smp.c:532:
+        smp_check_cpus(max_cpus);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2191: FILE: arch/s390x/kernel/smp.c:536:
+         *  Initialize prefix pages and stacks for all possible cpus$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2198: FILE: arch/s390x/kernel/smp.c:540:
+        for(i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2198: FILE: arch/s390x/kernel/smp.c:540:
+        for(i = 0; i < NR_CPUS; i++) {$

ERROR:SPACING: space required before the open parenthesis '('
#2198: FILE: arch/s390x/kernel/smp.c:540:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#2198: FILE: arch/s390x/kernel/smp.c:540:
+        for(i = 0; i < NR_CPUS; i++) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2202: FILE: arch/s390x/kernel/smp.c:544:
+			__get_free_pages(GFP_KERNEL|GFP_DMA, 1);
 			                           ^

CHECK:SPACING: No space is necessary after a cast
#2229: FILE: arch/s390x/kernel/smp.c:551:
+	set_prefix((u32)(u64) lowcore_ptr[smp_processor_id()]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2256: FILE: arch/s390x/kernel/time.c:52:
+        xtime->tv_sec = (todval >> 12) / 1000000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2256: FILE: arch/s390x/kernel/time.c:52:
+        xtime->tv_sec = (todval >> 12) / 1000000;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426946.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 86 warnings, 34 checks, 1426 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426946.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
