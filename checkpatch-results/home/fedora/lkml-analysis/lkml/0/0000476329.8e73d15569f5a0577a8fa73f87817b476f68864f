WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#68: 
diff -Naur -X dontdiff linux.2417org/drivers/char/raw.c linux.2417.badari/drivers/char/raw.c

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#107: FILE: drivers/char/raw.c:362:
+			blocknr += (err/sector_size);
 			               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: fs/buffer.c:2081:
+^I^Iif (!err) iosize += size; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#143: FILE: fs/buffer.c:2081:
+		if (!err) iosize += size; 

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: fs/buffer.c:2154:
+^I^I^I^Iif (b) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: fs/buffer.c:2156:
+^I^I^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: fs/iobuf.c:33:
+int alloc_kiobuf_bhs(struct kiobuf * kiobuf, int nr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*iobuf)...) over vmalloc(sizeof(struct kiobuf)...)
#271: FILE: fs/iobuf.c:69:
+		iobuf = vmalloc(sizeof(struct kiobuf) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: fs/iobuf.c:77:
+ ^I^Iif (alloc_kiobuf_bhs(iobuf, KIO_MAX_SECTORS )) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: fs/iobuf.c:77:
+ ^I^Iif (alloc_kiobuf_bhs(iobuf, KIO_MAX_SECTORS )) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: fs/iobuf.c:77:
+ ^I^Iif (alloc_kiobuf_bhs(iobuf, KIO_MAX_SECTORS )) {$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#279: FILE: fs/iobuf.c:77:
+ 		if (alloc_kiobuf_bhs(iobuf, KIO_MAX_SECTORS )) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: fs/iobuf.c:79:
+ ^I^I^Ifree_kiovec(i, bufp);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#281: FILE: fs/iobuf.c:79:
+ ^I^I^Ifree_kiovec(i, bufp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: fs/iobuf.c:79:
+ ^I^I^Ifree_kiovec(i, bufp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: fs/iobuf.c:80:
+ ^I^I^Ireturn -ENOMEM;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#282: FILE: fs/iobuf.c:80:
+ ^I^I^Ireturn -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/iobuf.c:80:
+ ^I^I^Ireturn -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: fs/iobuf.c:81:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#283: FILE: fs/iobuf.c:81:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: fs/iobuf.c:81:
+ ^I^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: fs/iobuf.c:84:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: fs/iobuf.c:92:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: fs/iobuf.c:100:
+ ^I^Iif (alloc_kiobuf_bhs(iobuf, bhs)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: fs/iobuf.c:100:
+ ^I^Iif (alloc_kiobuf_bhs(iobuf, bhs)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: fs/iobuf.c:100:
+ ^I^Iif (alloc_kiobuf_bhs(iobuf, bhs)) {$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: include/linux/fs.h:1353:
+extern void submit_bh_blknr(int, struct buffer_head *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#314: FILE: include/linux/fs.h:1353:
+extern void submit_bh_blknr(int, struct buffer_head *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#314: FILE: include/linux/fs.h:1353:
+extern void submit_bh_blknr(int, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiobuf **' should also have an identifier name
#351: FILE: include/linux/iobuf.h:77:
+int	alloc_kiovec_bhs(int nr, int bhs, struct kiobuf **);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#356: FILE: include/linux/iobuf.h:81:
+extern int alloc_kiobuf_bhs(struct kiobuf *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiobuf *' should also have an identifier name
#356: FILE: include/linux/iobuf.h:81:
+extern int alloc_kiobuf_bhs(struct kiobuf *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#356: FILE: include/linux/iobuf.h:81:
+extern int alloc_kiobuf_bhs(struct kiobuf *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000476329.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 16 warnings, 4 checks, 260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000476329.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
