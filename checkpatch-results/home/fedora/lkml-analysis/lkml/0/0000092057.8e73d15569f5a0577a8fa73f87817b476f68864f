WARNING:REPEATED_WORD: Possible repeated word: 'exported'
#26: 
devices exported exported by a virtual machine containing a physical

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: drivers/xen/net_driver_util.c:1:
+/*****************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/xen/net_driver_util.c:6:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/xen/net_driver_util.c:10:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: drivers/xen/net_driver_util.c:17:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/xen/net_driver_util.c:20:
+ * $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#113: FILE: drivers/xen/net_driver_util.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: drivers/xen/net_driver_util.c:36:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: drivers/xen/net_driver_util.c:43:
+	char *macstr = xenbus_read(XBT_NULL, dev->nodename, "mac", NULL);
+	if (IS_ERR(macstr))

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#130: FILE: drivers/xen/net_driver_util.c:47:
+		mac[i] = simple_strtoul(s, &e, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#151: FILE: drivers/xen/netfront/netfront.c:1:
+/******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: drivers/xen/netfront/netfront.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: drivers/xen/netfront/netfront.c:6:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/xen/netfront/netfront.c:12:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/xen/netfront/netfront.c:19:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/xen/netfront/netfront.c:22:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#203: FILE: drivers/xen/netfront/netfront.c:53:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#204: FILE: drivers/xen/netfront/netfront.c:54:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#213: FILE: drivers/xen/netfront/netfront.c:63:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#226: FILE: drivers/xen/netfront/netfront.c:76:
+#define alloc_xen_skb(_l) __dev_alloc_skb((_l), GFP_ATOMIC|__GFP_NOWARN)
                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_skb' - possible side-effects?
#228: FILE: drivers/xen/netfront/netfront.c:78:
+#define init_skb_shinfo(_skb)                         \
+    do {                                              \
+        atomic_set(&(skb_shinfo(_skb)->dataref), 1);  \
+        skb_shinfo(_skb)->nr_frags = 0;               \
+        skb_shinfo(_skb)->frag_list = NULL;           \
+    } while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/xen/netfront/netfront.c:79:
+    do {                                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: drivers/xen/netfront/netfront.c:80:
+        atomic_set(&(skb_shinfo(_skb)->dataref), 1);  \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/xen/netfront/netfront.c:80:
+        atomic_set(&(skb_shinfo(_skb)->dataref), 1);  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: drivers/xen/netfront/netfront.c:81:
+        skb_shinfo(_skb)->nr_frags = 0;               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/xen/netfront/netfront.c:81:
+        skb_shinfo(_skb)->nr_frags = 0;               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/xen/netfront/netfront.c:82:
+        skb_shinfo(_skb)->frag_list = NULL;           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/xen/netfront/netfront.c:82:
+        skb_shinfo(_skb)->frag_list = NULL;           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/xen/netfront/netfront.c:83:
+    } while (0)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#236: FILE: drivers/xen/netfront/netfront.c:86:
+static struct multicall_entry rx_mcl[NET_RX_RING_SIZE+1];
                                                      ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#240: FILE: drivers/xen/netfront/netfront.c:90:
+struct netfront_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#250: FILE: drivers/xen/netfront/netfront.c:100:
+	spinlock_t   tx_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#251: FILE: drivers/xen/netfront/netfront.c:101:
+	spinlock_t   rx_lock;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#280: FILE: drivers/xen/netfront/netfront.c:130:
+	struct sk_buff *tx_skbs[NET_TX_RING_SIZE+1];
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#281: FILE: drivers/xen/netfront/netfront.c:131:
+	struct sk_buff *rx_skbs[NET_RX_RING_SIZE+1];
 	                                        ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#295: FILE: drivers/xen/netfront/netfront.c:145:
+#define ADD_ID_TO_FREELIST(_list, _id)			\
+	(_list)[(_id)] = (_list)[0];			\
+	(_list)[0]     = (void *)(unsigned long)(_id);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_list' - possible side-effects?
#295: FILE: drivers/xen/netfront/netfront.c:145:
+#define ADD_ID_TO_FREELIST(_list, _id)			\
+	(_list)[(_id)] = (_list)[0];			\
+	(_list)[0]     = (void *)(unsigned long)(_id);

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_id' - possible side-effects?
#295: FILE: drivers/xen/netfront/netfront.c:145:
+#define ADD_ID_TO_FREELIST(_list, _id)			\
+	(_list)[(_id)] = (_list)[0];			\
+	(_list)[0]     = (void *)(unsigned long)(_id);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#295: FILE: drivers/xen/netfront/netfront.c:145:
+#define ADD_ID_TO_FREELIST(_list, _id)			\
+	(_list)[(_id)] = (_list)[0];			\
+	(_list)[0]     = (void *)(unsigned long)(_id);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_list' - possible side-effects?
#298: FILE: drivers/xen/netfront/netfront.c:148:
+#define GET_ID_FROM_FREELIST(_list)				\
+	({ unsigned long _id = (unsigned long)(_list)[0];	\
+	   (_list)[0]  = (_list)[_id];				\
+	   (unsigned short)_id; })

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: drivers/xen/netfront/netfront.c:162:
+                                       __FUNCTION__, __LINE__, ##args)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/xen/netfront/netfront.c:162:
+                                       __FUNCTION__, __LINE__, ##args)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#312: FILE: drivers/xen/netfront/netfront.c:162:
+                                       __FUNCTION__, __LINE__, ##args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#314: FILE: drivers/xen/netfront/netfront.c:164:
+	printk(KERN_INFO "netfront: " fmt, ##args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#316: FILE: drivers/xen/netfront/netfront.c:166:
+	printk(KERN_WARNING "netfront: " fmt, ##args)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#318: FILE: drivers/xen/netfront/netfront.c:168:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: drivers/xen/netfront/netfront.c:199:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#389: FILE: drivers/xen/netfront/netfront.c:239:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#406: FILE: drivers/xen/netfront/netfront.c:256:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#433: FILE: drivers/xen/netfront/netfront.c:283:
+	err = xenbus_printf(xbt, dev->nodename, "tx-ring-ref","%u",
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#439: FILE: drivers/xen/netfront/netfront.c:289:
+	err = xenbus_printf(xbt, dev->nodename, "rx-ring-ref","%u",
 	                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateConnected>
#453: FILE: drivers/xen/netfront/netfront.c:303:
+			    "state", "%d", XenbusStateConnected);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#478: FILE: drivers/xen/netfront/netfront.c:328:
+
+

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#488: FILE: drivers/xen/netfront/netfront.c:338:
+	info->rx.sring = NULL;
 	         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#489: FILE: drivers/xen/netfront/netfront.c:339:
+	info->tx.sring = NULL;
 	         ^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#529: FILE: drivers/xen/netfront/netfront.c:379:
+	info->irq = bind_evtchn_to_irqhandler(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#542: FILE: drivers/xen/netfront/netfront.c:392:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <XenbusState>
#547: FILE: drivers/xen/netfront/netfront.c:397:
+			    XenbusState backend_state)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#566: FILE: drivers/xen/netfront/netfront.c:416:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#589: FILE: drivers/xen/netfront/netfront.c:439:
+	if (skb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#595: FILE: drivers/xen/netfront/netfront.c:445:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#629: FILE: drivers/xen/netfront/netfront.c:479:
+			if (unlikely(gnttab_query_foreign_access(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#631: FILE: drivers/xen/netfront/netfront.c:481:
+				printk(KERN_ALERT "network_tx_buf_gc: warning "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'network_tx_buf_gc', this function's name, in a string
#631: FILE: drivers/xen/netfront/netfront.c:481:
+				printk(KERN_ALERT "network_tx_buf_gc: warning "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#632: FILE: drivers/xen/netfront/netfront.c:482:
+				printk(KERN_ALERT "network_tx_buf_gc: warning "
+				       "-- grant still in use by backend "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#633: FILE: drivers/xen/netfront/netfront.c:483:
+				       "-- grant still in use by backend "
+				       "domain.\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#636: FILE: drivers/xen/netfront/netfront.c:486:
+			gnttab_end_foreign_access_ref(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#638: FILE: drivers/xen/netfront/netfront.c:488:
+			gnttab_release_grant_reference(

WARNING:MEMORY_BARRIER: memory barrier without comment
#657: FILE: drivers/xen/netfront/netfront.c:507:
+		mb();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#669: FILE: drivers/xen/netfront/netfront.c:519:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#673: FILE: drivers/xen/netfront/netfront.c:523:
+	struct net_device *dev = (struct net_device *)data;
+	netif_rx_schedule(dev);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#676: FILE: drivers/xen/netfront/netfront.c:526:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#702: FILE: drivers/xen/netfront/netfront.c:552:
+		skb = alloc_xen_skb(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#705: FILE: drivers/xen/netfront/netfront.c:555:
+		if (skb == NULL) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#711: FILE: drivers/xen/netfront/netfront.c:561:
+				  jiffies + (HZ/10));
 				               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#718: FILE: drivers/xen/netfront/netfront.c:568:
+	if (i < (np->rx_target/2))
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#722: FILE: drivers/xen/netfront/netfront.c:572:
+	if (((req_prod - np->rx.sring->rsp_prod) < (np->rx_target / 4)) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#728: FILE: drivers/xen/netfront/netfront.c:578:
+		if ((skb = __skb_dequeue(&np->rx_batch)) == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#739: FILE: drivers/xen/netfront/netfront.c:589:
+		BUG_ON((signed short)ref < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#752: FILE: drivers/xen/netfront/netfront.c:602:
+			MULTI_update_va_mapping(rx_mcl+i,
 			                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#773: FILE: drivers/xen/netfront/netfront.c:623:
+		rx_mcl[i-1].args[MULTI_UVMFLAGS_INDEX] =
 		        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#774: FILE: drivers/xen/netfront/netfront.c:624:
+			UVMF_TLB_FLUSH|UVMF_ALL;
 			              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#782: FILE: drivers/xen/netfront/netfront.c:632:
+		(void)HYPERVISOR_multicall(rx_mcl, i+1);
 		                                    ^

CHECK:BRACES: Unbalanced braces around else statement
#787: FILE: drivers/xen/netfront/netfront.c:637:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#798: FILE: drivers/xen/netfront/netfront.c:648:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#810: FILE: drivers/xen/netfront/netfront.c:660:
+		printk(KERN_ALERT "%s: full queue wasn't stopped!\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#819: FILE: drivers/xen/netfront/netfront.c:669:
+		struct sk_buff *nskb;
+		if (unlikely((nskb = alloc_xen_skb(skb->len)) == NULL))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#819: FILE: drivers/xen/netfront/netfront.c:669:
+		if (unlikely((nskb = alloc_xen_skb(skb->len)) == NULL))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#844: FILE: drivers/xen/netfront/netfront.c:694:
+	BUG_ON((signed short)ref < 0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#846: FILE: drivers/xen/netfront/netfront.c:696:
+	gnttab_grant_foreign_access_ref(

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#848: FILE: drivers/xen/netfront/netfront.c:698:
+	tx->gref = np->grant_tx_ref[id] = ref;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'np->user_state == UST_OPEN'
#888: FILE: drivers/xen/netfront/netfront.c:738:
+	if (RING_HAS_UNCONSUMED_RESPONSES(&np->rx) &&
+	    (np->user_state == UST_OPEN))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#895: FILE: drivers/xen/netfront/netfront.c:745:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#919: FILE: drivers/xen/netfront/netfront.c:769:
+	if ((budget = *pbudget) > dev->quota)

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: drivers/xen/netfront/netfront.c:780:
+                 * This definitely indicates a bug, either in this driver or$

ERROR:CODE_INDENT: code indent should use tabs where possible
#931: FILE: drivers/xen/netfront/netfront.c:781:
+                 * in the backend driver. In future this should flag the bad$

ERROR:CODE_INDENT: code indent should use tabs where possible
#932: FILE: drivers/xen/netfront/netfront.c:782:
+                 * situation to the system controller to reboot the backed.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: drivers/xen/netfront/netfront.c:783:
+                 */$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#934: FILE: drivers/xen/netfront/netfront.c:784:
+		if ((ref = np->grant_rx_ref[rx->id]) == GRANT_INVALID_REF) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#941: FILE: drivers/xen/netfront/netfront.c:791:
+		if ((mfn = gnttab_end_foreign_transfer_ref(ref)) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1011: FILE: drivers/xen/netfront/netfront.c:861:
+				printk(KERN_INFO "Received packet too big for "

WARNING:SPLIT_STRING: quoted string split across lines
#1012: FILE: drivers/xen/netfront/netfront.c:862:
+				printk(KERN_INFO "Received packet too big for "
+				       "MTU (%d > %d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1029: FILE: drivers/xen/netfront/netfront.c:879:
+					printk(KERN_INFO "Received packet "

WARNING:SPLIT_STRING: quoted string split across lines
#1030: FILE: drivers/xen/netfront/netfront.c:880:
+					printk(KERN_INFO "Received packet "
+					       "is %zd bytes beyond tail.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1033: FILE: drivers/xen/netfront/netfront.c:883:
+					printk(KERN_INFO "Received packet "

WARNING:SPLIT_STRING: quoted string split across lines
#1034: FILE: drivers/xen/netfront/netfront.c:884:
+					printk(KERN_INFO "Received packet "
+					       "is %zd bytes before head.\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "nskb"
#1039: FILE: drivers/xen/netfront/netfront.c:889:
+			if (nskb != NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1054: FILE: drivers/xen/netfront/netfront.c:904:
+			if ((skb = nskb) == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1073: FILE: drivers/xen/netfront/netfront.c:923:
+	     ((3*np->rx_target) / 4)) &&
 	        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1097: FILE: drivers/xen/netfront/netfront.c:947:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1101: FILE: drivers/xen/netfront/netfront.c:951:
+	struct netfront_info *np = netdev_priv(dev);
+	np->user_state = UST_CLOSED;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1106: FILE: drivers/xen/netfront/netfront.c:956:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1110: FILE: drivers/xen/netfront/netfront.c:960:
+	struct netfront_info *np = netdev_priv(dev);
+	return &np->stats;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1157: FILE: drivers/xen/netfront/netfront.c:1007:
+		gnttab_grant_foreign_access_ref(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1178: FILE: drivers/xen/netfront/netfront.c:1028:
+		gnttab_grant_foreign_transfer_ref(

CHECK:BRACES: braces {} should be used on all arms of this statement
#1210: FILE: drivers/xen/netfront/netfront.c:1060:
+	if (np) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1218: FILE: drivers/xen/netfront/netfront.c:1068:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#1226: FILE: drivers/xen/netfront/netfront.c:1076:
+	struct netfront_info *np = netdev_priv(dev);
+	gnttab_free_grant_references(np->gref_tx_head);

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#1230: FILE: drivers/xen/netfront/netfront.c:1080:
+static struct ethtool_ops network_ethtool_ops =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1231: FILE: drivers/xen/netfront/netfront.c:1081:
+static struct ethtool_ops network_ethtool_ops =
+{

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1248: FILE: drivers/xen/netfront/netfront.c:1098:
+	if ((netdev = alloc_etherdev(sizeof(struct netfront_info))) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1249: FILE: drivers/xen/netfront/netfront.c:1099:
+		printk(KERN_WARNING "%s> alloc_etherdev failed.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1250: FILE: drivers/xen/netfront/netfront.c:1100:
+		       __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#1275: FILE: drivers/xen/netfront/netfront.c:1125:
+		np->tx_skbs[i] = (void *)((unsigned long) i+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1275: FILE: drivers/xen/netfront/netfront.c:1125:
+		np->tx_skbs[i] = (void *)((unsigned long) i+1);
 		                                           ^

CHECK:SPACING: No space is necessary after a cast
#1280: FILE: drivers/xen/netfront/netfront.c:1130:
+		np->rx_skbs[i] = (void *)((unsigned long) i+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1280: FILE: drivers/xen/netfront/netfront.c:1130:
+		np->rx_skbs[i] = (void *)((unsigned long) i+1);
 		                                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1287: FILE: drivers/xen/netfront/netfront.c:1137:
+		printk(KERN_ALERT "#### netfront can't alloc tx grant refs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1294: FILE: drivers/xen/netfront/netfront.c:1144:
+		printk(KERN_ALERT "#### netfront can't alloc rx grant refs\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1313: FILE: drivers/xen/netfront/netfront.c:1163:
+	if ((err = register_netdev(netdev)) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1314: FILE: drivers/xen/netfront/netfront.c:1164:
+		printk(KERN_WARNING "%s> register_netdev err=%d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1315: FILE: drivers/xen/netfront/netfront.c:1165:
+		       __FUNCTION__, err);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1319: FILE: drivers/xen/netfront/netfront.c:1169:
+	if ((err = xennet_proc_addif(netdev)) != 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "val"
#1329: FILE: drivers/xen/netfront/netfront.c:1179:
+	else if (val != NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1356: FILE: drivers/xen/netfront/netfront.c:1206:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1359: FILE: drivers/xen/netfront/netfront.c:1209:
+
+

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#1364: FILE: drivers/xen/netfront/netfront.c:1214:
+ * acknowledgement.
    ^^^^^^^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'netfront_closing', this function's name, in a string
#1370: FILE: drivers/xen/netfront/netfront.c:1220:
+	DPRINTK("netfront_closing: %s removed\n", dev->nodename);

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateClosed>
#1374: FILE: drivers/xen/netfront/netfront.c:1224:
+	xenbus_switch_state(dev, XBT_NULL, XenbusStateClosed);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1377: FILE: drivers/xen/netfront/netfront.c:1227:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1390: FILE: drivers/xen/netfront/netfront.c:1240:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1406: FILE: drivers/xen/netfront/netfront.c:1256:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1418: FILE: drivers/xen/netfront/netfront.c:1268:
+	info->evtchn = info->irq = 0;

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1420: FILE: drivers/xen/netfront/netfront.c:1270:
+	end_access(info->tx_ring_ref, info->tx.sring);
 	                                       ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1421: FILE: drivers/xen/netfront/netfront.c:1271:
+	end_access(info->rx_ring_ref, info->rx.sring);
 	                                       ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1424: FILE: drivers/xen/netfront/netfront.c:1274:
+	info->tx.sring = NULL;
 	         ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1425: FILE: drivers/xen/netfront/netfront.c:1275:
+	info->rx.sring = NULL;
 	         ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1428: FILE: drivers/xen/netfront/netfront.c:1278:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1436: FILE: drivers/xen/netfront/netfront.c:1286:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1443: FILE: drivers/xen/netfront/netfront.c:1293:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1446: FILE: drivers/xen/netfront/netfront.c:1296:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1452: FILE: drivers/xen/netfront/netfront.c:1302:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1463: FILE: drivers/xen/netfront/netfront.c:1313:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1477: FILE: drivers/xen/netfront/netfront.c:1327:
+	if ((err = xennet_proc_init()) != 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1488: FILE: drivers/xen/netfront/netfront.c:1338:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1499: FILE: drivers/xen/netfront/netfront.c:1349:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1502: FILE: drivers/xen/netfront/netfront.c:1352:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1509: FILE: drivers/xen/netfront/netfront.c:1359:
+static int xennet_proc_read(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1533: FILE: drivers/xen/netfront/netfront.c:1383:
+static int xennet_proc_write(

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1554: FILE: drivers/xen/netfront/netfront.c:1404:
+	string[sizeof(string)-1] = '\0';
 	                     ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1556: FILE: drivers/xen/netfront/netfront.c:1406:
+	target = simple_strtol(string, NULL, 10);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_mkdir"
#1592: FILE: drivers/xen/netfront/netfront.c:1442:
+	if (proc_mkdir("xen/net", NULL) == NULL)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1654: FILE: include/xen/net_driver_util.h:1:
+/*****************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1659: FILE: include/xen/net_driver_util.h:6:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1663: FILE: include/xen/net_driver_util.h:10:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1670: FILE: include/xen/net_driver_util.h:17:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1673: FILE: include/xen/net_driver_util.h:20:
+ * $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1686: FILE: include/xen/net_driver_util.h:33:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1689: FILE: include/xen/net_driver_util.h:36:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1698: FILE: include/xen/net_driver_util.h:45:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 54 warnings, 79 checks, 1637 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
