ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#55: FILE: arch/um/kernel/sysrq.c:18:
+void show_trace(struct task_struct *task, unsigned long * stack)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#63: FILE: arch/um/kernel/sysrq.c:23:
+		stack = (unsigned long*) &stack;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#63: FILE: arch/um/kernel/sysrq.c:23:
+		stack = (unsigned long*) &stack;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "task"
#89: FILE: arch/um/kernel/sysrq.c:64:
+		if (task != current && task != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#102: FILE: arch/um/kernel/sysrq.c:86:
+	printk("Call Trace: \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#102: FILE: arch/um/kernel/sysrq.c:86:
+	printk("Call Trace: \n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: arch/um/sys-i386/sysrq.c:37:
+        show_trace(NULL, (unsigned long *) &regs);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#129: FILE: arch/um/sys-i386/sysrq.c:37:
+        show_trace(NULL, (unsigned long *) &regs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/um/sys-i386/sysrq.c:37:
+        show_trace(NULL, (unsigned long *) &regs);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: arch/um/sys-i386/sysrq.c:49:
+static inline unsigned long print_context_stack(struct thread_info *tinfo,
+				unsigned long *stack, unsigned long ebp)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#148: FILE: arch/um/sys-i386/sysrq.c:56:
+		printk("%08lx:  [<%08lx>]", ebp + 4, addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: arch/um/sys-i386/sysrq.c:58:
+		printk("\n");

CHECK:SPACING: No space is necessary after a cast
#157: FILE: arch/um/sys-i386/sysrq.c:65:
+			printk("%08lx:  [<%08lx>]", (unsigned long) stack, addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#157: FILE: arch/um/sys-i386/sysrq.c:65:
+			printk("%08lx:  [<%08lx>]", (unsigned long) stack, addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#159: FILE: arch/um/sys-i386/sysrq.c:67:
+			printk("\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#167: FILE: arch/um/sys-i386/sysrq.c:75:
+void show_trace(struct task_struct* task, unsigned long * stack)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#167: FILE: arch/um/sys-i386/sysrq.c:75:
+void show_trace(struct task_struct* task, unsigned long * stack)

CHECK:SPACING: No space is necessary after a cast
#174: FILE: arch/um/sys-i386/sysrq.c:82:
+		stack = (unsigned long*) &stack;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#174: FILE: arch/um/sys-i386/sysrq.c:82:
+		stack = (unsigned long*) &stack;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: arch/um/sys-i386/sysrq.c:83:
+		printk("show_trace: got NULL stack, implicit assumption task == current");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'show_trace', this function's name, in a string
#175: FILE: arch/um/sys-i386/sysrq.c:83:
+		printk("show_trace: got NULL stack, implicit assumption task == current");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#185: FILE: arch/um/sys-i386/sysrq.c:93:
+		ebp = (unsigned long) PT_REGS_EBP(&task->thread.regs);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#195: FILE: arch/um/sys-i386/sysrq.c:103:
+	/*while (((long) stack & (THREAD_SIZE-1)) != 0) {
+		addr = *stack;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#202: FILE: arch/um/sys-i386/sysrq.c:110:
+	}*/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#203: FILE: arch/um/sys-i386/sysrq.c:111:
+	printk("\n");

CHECK:SPACING: No space is necessary after a cast
#222: FILE: include/asm-um/thread_info.h:50:
+	ti = (struct thread_info *) (((unsigned long) &ti) & ~mask);

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: include/asm-um/thread_info.h:50:
+	unsigned long mask = THREAD_SIZE - 1;
+	ti = (struct thread_info *) (((unsigned long) &ti) & ~mask);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#239: FILE: arch/um/sys-x86_64/sysrq.c:39:
+	show_trace(current, (unsigned long *) &regs);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#259: FILE: arch/um/include/sysrq.h:5:
+extern void show_trace(struct task_struct* task, unsigned long *stack);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#259: FILE: arch/um/include/sysrq.h:5:
+extern void show_trace(struct task_struct* task, unsigned long *stack);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/um/sys-ppc/sysrq.c:30:
+        show_trace(current, &regs->gpr[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/um/sys-ppc/sysrq.c:30:
+        show_trace(current, &regs->gpr[1]);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180767.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 14 warnings, 10 checks, 196 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180767.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
