WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#45: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: drivers/media/common/ir-functions.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#68: FILE: drivers/media/common/ir-functions.c:19:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: drivers/media/common/ir-functions.c:20:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: drivers/media/common/ir-functions.c:35:
+MODULE_PARM_DESC(repeat,"auto-repeat for IR keys (default: on)");
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#86: FILE: drivers/media/common/ir-functions.c:37:
+static int debug = 0;    /* debug level (0,1,2) */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#89: FILE: drivers/media/common/ir-functions.c:40:
+#define dprintk(level, fmt, arg...)	if (debug >= level) \
+	printk(KERN_DEBUG fmt , ## arg)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'level' may be better as '(level)' to avoid precedence issues
#89: FILE: drivers/media/common/ir-functions.c:40:
+#define dprintk(level, fmt, arg...)	if (debug >= level) \
+	printk(KERN_DEBUG fmt , ## arg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#90: FILE: drivers/media/common/ir-functions.c:41:
+	printk(KERN_DEBUG fmt , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#90: FILE: drivers/media/common/ir-functions.c:41:
+	printk(KERN_DEBUG fmt , ## arg)
 	                      ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#96: FILE: drivers/media/common/ir-functions.c:47:
+	if (KEY_RESERVED == ir->keycode) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#97: FILE: drivers/media/common/ir-functions.c:48:
+		printk(KERN_INFO "%s: unknown key: key=0x%02x raw=0x%02x down=%d\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#98: FILE: drivers/media/common/ir-functions.c:49:
+		       dev->name,ir->ir_key,ir->ir_raw,ir->keypressed);
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#98: FILE: drivers/media/common/ir-functions.c:49:
+		       dev->name,ir->ir_key,ir->ir_raw,ir->keypressed);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#98: FILE: drivers/media/common/ir-functions.c:49:
+		       dev->name,ir->ir_key,ir->ir_raw,ir->keypressed);
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: drivers/media/common/ir-functions.c:52:
+	dprintk(1,"%s: key event code=%d down=%d\n",
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: drivers/media/common/ir-functions.c:53:
+		dev->name,ir->keycode,ir->keypressed);
 		         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: drivers/media/common/ir-functions.c:53:
+		dev->name,ir->keycode,ir->keypressed);
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: drivers/media/common/ir-functions.c:54:
+	input_report_key(dev,ir->keycode,ir->keypressed);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: drivers/media/common/ir-functions.c:54:
+	input_report_key(dev,ir->keycode,ir->keypressed);
 	                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#118: FILE: drivers/media/common/ir-functions.c:69:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: drivers/media/common/ir-functions.c:86:
+		ir_input_key_event(dev,ir);
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: drivers/media/common/ir-functions.c:97:
+		ir_input_key_event(dev,ir);
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: drivers/media/common/ir-functions.c:104:
+		ir_input_key_event(dev,ir);
 		                      ^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#176: FILE: drivers/media/common/ir-functions.c:127:
+static int inline getbit(u32 *samples, int bit)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#178: FILE: drivers/media/common/ir-functions.c:129:
+	return (samples[bit/32] & (1 << (31-(bit%32)))) ? 1 : 0;
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#178: FILE: drivers/media/common/ir-functions.c:129:
+	return (samples[bit/32] & (1 << (31-(bit%32)))) ? 1 : 0;
 	                                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#178: FILE: drivers/media/common/ir-functions.c:129:
+	return (samples[bit/32] & (1 << (31-(bit%32)))) ? 1 : 0;
 	                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#186: FILE: drivers/media/common/ir-functions.c:137:
+	printk(KERN_DEBUG "ir samples: ");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: drivers/media/common/ir-functions.c:140:
+		bit = getbit(samples,i);
 		                    ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#192: FILE: drivers/media/common/ir-functions.c:143:
+		if (0 == start)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#194: FILE: drivers/media/common/ir-functions.c:145:
+		printk("%s", bit ? "#" : "_");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#196: FILE: drivers/media/common/ir-functions.c:147:
+	printk("\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: drivers/media/common/ir-functions.c:154:
+	int i,last,bit,len;
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: drivers/media/common/ir-functions.c:154:
+	int i,last,bit,len;
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: drivers/media/common/ir-functions.c:154:
+	int i,last,bit,len;
 	              ^

CHECK:CAMELCASE: Avoid CamelCase: <curBit>
#204: FILE: drivers/media/common/ir-functions.c:155:
+	u32 curBit;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: drivers/media/common/ir-functions.c:160:
+		bit = getbit(samples,i);
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#225: FILE: drivers/media/common/ir-functions.c:176:
+		bit = getbit(samples,i);
 		                    ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#226: FILE: drivers/media/common/ir-functions.c:177:
+		if (bit) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#228: FILE: drivers/media/common/ir-functions.c:179:
+			break;
+		} else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#242: FILE: drivers/media/common/ir-functions.c:193:
+		bit  = getbit(samples,i);
 		                     ^

ERROR:SPACING: space required before the open parenthesis '('
#244: FILE: drivers/media/common/ir-functions.c:195:
+			if(bit) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#244: FILE: drivers/media/common/ir-functions.c:195:
+			if(bit) {
[...]
+			} else {
[...]

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#251: FILE: drivers/media/common/ir-functions.c:202:
+				if (len > (low + high) /2)
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: drivers/media/common/ir-functions.c:220:
+	int i,last,bit,len,flips;
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: drivers/media/common/ir-functions.c:220:
+	int i,last,bit,len,flips;
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: drivers/media/common/ir-functions.c:220:
+	int i,last,bit,len,flips;
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: drivers/media/common/ir-functions.c:220:
+	int i,last,bit,len,flips;
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#274: FILE: drivers/media/common/ir-functions.c:225:
+		bit = getbit(samples,i);
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#289: FILE: drivers/media/common/ir-functions.c:240:
+		bit  = getbit(samples,i);
 		                     ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#307: FILE: drivers/media/common/ir-functions.c:258:
+EXPORT_SYMBOL_GPL(ir_input_init);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#308: FILE: drivers/media/common/ir-functions.c:259:
+EXPORT_SYMBOL_GPL(ir_input_nokey);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#309: FILE: drivers/media/common/ir-functions.c:260:
+EXPORT_SYMBOL_GPL(ir_input_keydown);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#311: FILE: drivers/media/common/ir-functions.c:262:
+EXPORT_SYMBOL_GPL(ir_extract_bits);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#312: FILE: drivers/media/common/ir-functions.c:263:
+EXPORT_SYMBOL_GPL(ir_dump_samples);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#313: FILE: drivers/media/common/ir-functions.c:264:
+EXPORT_SYMBOL_GPL(ir_decode_biphase);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#314: FILE: drivers/media/common/ir-functions.c:265:
+EXPORT_SYMBOL_GPL(ir_decode_pulsedistance);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 19 warnings, 7 checks, 272 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
