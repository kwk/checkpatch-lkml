WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#28: 
> (upto 256bytes) when only a few descriptors are needed. This makes
   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> with this patch, because it usually has 10+ daemons hanging around in poll or 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: fs/select.c:15:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: fs/select.c:17:
+ *     Stack allocation and fast path (Andi Kleen) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: fs/select.c:60:
+^I^Iif (old != &pt->inline_page) $

CHECK:SPACING: No space is necessary after a cast
#105: FILE: fs/select.c:61:
+			free_page((unsigned long) old);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: fs/select.c:71:
+^Iif (!table) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: fs/select.c:72:
+^I^Inew_table = &p->inline_page; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: fs/select.c:73:
+^I} else { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: fs/select.c:74:
+^I^Isz = (table == &p->inline_page) ? POLL_INLINE_TABLE_LEN : PAGE_SIZE; $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#127: FILE: fs/select.c:75:
+		if ((char*)table->entry >= (char*)table + sz) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#127: FILE: fs/select.c:75:
+		if ((char*)table->entry >= (char*)table + sz) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: fs/select.c:83:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: fs/select.c:85:
+^Iif (new_table) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: fs/select.c:130:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: fs/select.c:132:
+^Imaxoff = (n+BITS_PER_LONG-1)/BITS_PER_LONG; $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#212: FILE: fs/select.c:132:
+	maxoff = (n+BITS_PER_LONG-1)/BITS_PER_LONG; 
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#212: FILE: fs/select.c:132:
+	maxoff = (n+BITS_PER_LONG-1)/BITS_PER_LONG; 
 	                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#212: FILE: fs/select.c:132:
+	maxoff = (n+BITS_PER_LONG-1)/BITS_PER_LONG; 
 	                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: fs/select.c:135:
+^I^Ifor (off = 0; off <= maxoff; off++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: fs/select.c:136:
+^I^I^Iunsigned long val = BITS(fds, off); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: fs/select.c:138:
+^I^I^Iwhile (val) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: fs/select.c:139:
+^I^I^I^Iint k = ffz(~val), index; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: fs/select.c:143:
+^I^I^I^Ibit = (1UL << k); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: fs/select.c:144:
+^I^I^I^Ival &= ~bit; $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#256: FILE: fs/select.c:146:
+				index = off*BITS_PER_LONG + k;
 				           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: fs/select.c:147:
+^I^I^I^Iif (index >= n) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: fs/select.c:157:
+^I^I^I^I} else { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: fs/select.c:158:
+^I^I^I^I^I/* This error will shadow all other results. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#269: FILE: fs/select.c:159:
+					 * This matches previous linux behaviour */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: fs/select.c:160:
+^I^I^I^I^Iretval = -EBADF; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: fs/select.c:161:
+^I^I^I^I^Igoto out; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: fs/select.c:162:
+^I^I^I^I} $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#273: FILE: fs/select.c:163:
+				if ((mask & POLLIN_SET) && ISSET(bit, __IN(fds,off))) {
 				                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#274: FILE: fs/select.c:164:
+					SET(bit, __RES_IN(fds,off));
 					                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#278: FILE: fs/select.c:168:
+				if ((mask& POLLOUT_SET) && ISSET(bit,__OUT(fds,off))) {
 				         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: fs/select.c:168:
+				if ((mask& POLLOUT_SET) && ISSET(bit,__OUT(fds,off))) {
 				                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: fs/select.c:168:
+				if ((mask& POLLOUT_SET) && ISSET(bit,__OUT(fds,off))) {
 				                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#279: FILE: fs/select.c:169:
+					SET(bit, __RES_OUT(fds,off));
 					                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: fs/select.c:173:
+				if ((mask & POLLEX_SET) && ISSET(bit, __EX(fds,off))) {
 				                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: fs/select.c:174:
+					SET(bit, __RES_EX(fds,off));
 					                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: fs/select.c:191:
+out:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: fs/select.c:210:
+^Iunsigned long rounded = FDS_BYTES(nr), mask; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#326: FILE: fs/select.c:211:
+	unsigned long rounded = FDS_BYTES(nr), mask; 
+	if (ufdset) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: fs/select.c:213:
+		int error = verify_area(VERIFY_WRITE, ufdset, rounded);
+		if (!error && __copy_from_user(fdset, ufdset, rounded))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: fs/select.c:239:
+^Ichar stack_bits[FDS_BYTES(FAST_SELECT_MAX) * 6]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: fs/select.c:275:
+^Iif (n < FAST_SELECT_MAX) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: fs/select.c:277:
+^I} else { $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#358: FILE: fs/select.c:279:
+		bits = kmalloc(6*size, GFP_KERNEL);
 		                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: fs/select.c:282:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: fs/select.c:295:
+^Imemset(fds.res_in, 0, 3*size); $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#373: FILE: fs/select.c:295:
+	memset(fds.res_in, 0, 3*size); 
 	                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: fs/select.c:324:
+^Iif (n >= FAST_SELECT_MAX) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: fs/select.c:392:
+static int fast_poll(poll_table *table, poll_table *wait, struct pollfd *ufds, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: fs/select.c:394:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: fs/select.c:395:
+^Ipoll_table *pt = wait; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: fs/select.c:397:
+^Iint count, i; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: fs/select.c:400:
+^I^Ireturn -EFAULT; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: fs/select.c:401:
+^Ifor (;;) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: fs/select.c:403:
+^I^Icount = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: fs/select.c:404:
+^I^Ido_pollfd(nfds, fds, &pt, &count); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: fs/select.c:408:
+^I^Icount = wait->error; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: fs/select.c:409:
+^I^Iif (count) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: fs/select.c:410:
+^I^I^Ibreak; ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#422: FILE: fs/select.c:410:
+^I^I^Ibreak; ^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: fs/select.c:412:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: fs/select.c:414:
+^Ifor (i = 0; i < nfds; i++) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: fs/select.c:416:
+^Ipoll_freewait(table);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: fs/select.c:417:
+^Iif (!count && signal_pending(current)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: fs/select.c:418:
+^I^Ireturn -EINTR; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: fs/select.c:419:
+^Ireturn count; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: fs/select.c:420:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: fs/select.c:427:
+^Iint nchunks, nleft; $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#449: FILE: fs/select.c:441:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: fs/select.c:447:
+^Iif (nfds < FAST_POLL_MAX) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: fs/select.c:448:
+^I^Ireturn fast_poll(&table, wait, ufds, nfds, timeout); $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#468: FILE: fs/select.c:451:
+	fds = (struct pollfd **)kmalloc(

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#468: FILE: fs/select.c:451:
+	fds = (struct pollfd **)kmalloc(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fds"
#471: FILE: fs/select.c:454:
+	if (fds == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: fs/select.c:456:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: fs/select.c:459:
+^Iwhile (nleft > POLLFD_PER_PAGE) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: fs/select.c:466:
+^Iif (nleft) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: fs/select.c:470:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: fs/select.c:471:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: fs/select.c:476:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#525: FILE: include/linux/poll.h:16:
+#define POLL_INLINE_ENTRIES (1+(POLL_INLINE_BYTES / sizeof(struct poll_table_entry)))
                               ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#528: FILE: include/linux/poll.h:19:
+	struct file * filp;
 	              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#528: FILE: include/linux/poll.h:19:
+	struct file * filp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#530: FILE: include/linux/poll.h:21:
+	wait_queue_head_t * wait_address;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#534: FILE: include/linux/poll.h:25:
+	struct poll_table_page * next;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#535: FILE: include/linux/poll.h:26:
+	struct poll_table_entry * entry;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#542: FILE: include/linux/poll.h:33:
+^Istruct poll_table_page inline_page; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: include/linux/poll.h:34:
+^Istruct poll_table_entry inline_table[POLL_INLINE_ENTRIES]; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000454431.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 73 errors, 8 warnings, 12 checks, 521 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000454431.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
