WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# against 2.4.18-pe7

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#56: FILE: fs/reiserfs/inode.c:448:
+static int reiserfs_get_block_direct_io (struct inode * inode, long block,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#56: FILE: fs/reiserfs/inode.c:448:
+static int reiserfs_get_block_direct_io (struct inode * inode, long block,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#56: FILE: fs/reiserfs/inode.c:448:
+static int reiserfs_get_block_direct_io (struct inode * inode, long block,
+			struct buffer_head * bh_result, int create) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: fs/reiserfs/inode.c:449:
+static int reiserfs_get_block_direct_io (struct inode * inode, long block,
+			struct buffer_head * bh_result, int create) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#57: FILE: fs/reiserfs/inode.c:449:
+			struct buffer_head * bh_result, int create) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: fs/reiserfs/inode.c:450:
+    int ret ;$

WARNING:SPACING: space prohibited before semicolon
#58: FILE: fs/reiserfs/inode.c:450:
+    int ret ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: fs/reiserfs/inode.c:452:
+    ret = reiserfs_get_block(inode, block, bh_result, create) ;$

WARNING:SPACING: space prohibited before semicolon
#60: FILE: fs/reiserfs/inode.c:452:
+    ret = reiserfs_get_block(inode, block, bh_result, create) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: fs/reiserfs/inode.c:455:
+    if (ret == 0 && buffer_mapped(bh_result) && bh_result->b_blocknr == 0) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#63: FILE: fs/reiserfs/inode.c:455:
+    if (ret == 0 && buffer_mapped(bh_result) && bh_result->b_blocknr == 0) {
+        ret = -EINVAL ;
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: fs/reiserfs/inode.c:456:
+        ret = -EINVAL ;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: fs/reiserfs/inode.c:456:
+        ret = -EINVAL ;$

WARNING:SPACING: space prohibited before semicolon
#64: FILE: fs/reiserfs/inode.c:456:
+        ret = -EINVAL ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: fs/reiserfs/inode.c:457:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/reiserfs/inode.c:458:
+    return ret ;$

WARNING:SPACING: space prohibited before semicolon
#66: FILE: fs/reiserfs/inode.c:458:
+    return ret ;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#69: FILE: fs/reiserfs/inode.c:461:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: fs/reiserfs/inode.c:2067:
+static int reiserfs_direct_io(int rw, struct inode *inode, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: fs/reiserfs/inode.c:2068:
+                              struct kiobuf *iobuf, unsigned long blocknr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: fs/reiserfs/inode.c:2068:
+                              struct kiobuf *iobuf, unsigned long blocknr,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: fs/reiserfs/inode.c:2069:
+^I^I^I      int blocksize) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: fs/reiserfs/inode.c:2071:
+    return generic_direct_IO(rw, inode, iobuf, blocknr, blocksize,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: fs/reiserfs/inode.c:2072:
+                             reiserfs_get_block_direct_io) ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/reiserfs/inode.c:2072:
+                             reiserfs_get_block_direct_io) ;$

WARNING:SPACING: space prohibited before semicolon
#82: FILE: fs/reiserfs/inode.c:2072:
+                             reiserfs_get_block_direct_io) ;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#92: FILE: fs/reiserfs/inode.c:2081:
+    bmap: reiserfs_aop_bmap,
         ^

WARNING:INDENTED_LABEL: labels should not be indented
#92: FILE: fs/reiserfs/inode.c:2081:
+    bmap: reiserfs_aop_bmap,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#93: FILE: fs/reiserfs/inode.c:2082:
+    direct_IO: reiserfs_direct_io,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#93: FILE: fs/reiserfs/inode.c:2082:
+    direct_IO: reiserfs_direct_io,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000479585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 20 warnings, 2 checks, 41 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000479585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
