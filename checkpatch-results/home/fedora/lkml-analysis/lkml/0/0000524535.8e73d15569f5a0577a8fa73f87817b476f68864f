WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#24: 
This cleans up existing thermal code a bit, plus implements usefull
                                                            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#38: FILE: drivers/acpi/ospm/thermal/tz_osl.c:32:
+#include <asm/uaccess.h>

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#67: FILE: drivers/acpi/ospm/thermal/tz_osl.c:78:
+	tz = (TZ_CONTEXT*)context;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#82: FILE: drivers/acpi/ospm/thermal/tz_osl.c:93:
+	for (i = 0; i < tz->policy.threshold_list.count; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tz->policy.threshold_list.thresholds[i]
#83: FILE: drivers/acpi/ospm/thermal/tz_osl.c:94:
+		threshold = &(tz->policy.threshold_list.thresholds[i]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#86: FILE: drivers/acpi/ospm/thermal/tz_osl.c:97:
+		switch (threshold->type) {
+

WARNING:LONG_LINE: line length of 195 exceeds 100 columns
#92: FILE: drivers/acpi/ospm/thermal/tz_osl.c:103:
+			p += sprintf(p, "Passive: TC1=%d TC2=%d TSP=%d %d dK ", tz->policy.passive.tc1, tz->policy.passive.tc2, tz->policy.passive.tsp, tz->policy.passive.threshold->temperature);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#97: FILE: drivers/acpi/ospm/thermal/tz_osl.c:107:
+			p += sprintf(p, "Active[%d]: %d dK ", threshold->index, threshold->temperature);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: drivers/acpi/ospm/thermal/tz_osl.c:150:
+^Ip += sprintf(p, "Temperature:             %d dK\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#112: FILE: drivers/acpi/ospm/thermal/tz_osl.c:151:
+		thermal_zone->policy.temperature );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#145: FILE: drivers/acpi/ospm/thermal/tz_osl.c:209:
+		if (!(active = tz->policy.active.threshold[i]))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: drivers/acpi/ospm/thermal/tz_osl.c:220:
+^Iint ^I^I^Ilen = 0;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#159: FILE: drivers/acpi/ospm/thermal/tz_osl.c:223:
+	tz = (TZ_CONTEXT*)context;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#166: FILE: drivers/acpi/ospm/thermal/tz_osl.c:230:
+	printk("osl_write_status: %s...", buf);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#173: FILE: drivers/acpi/ospm/thermal/tz_osl.c:237:
+		int i = simple_strtoul(buf+5, &s, 0);
 		                          ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#173: FILE: drivers/acpi/ospm/thermal/tz_osl.c:237:
+		int i = simple_strtoul(buf+5, &s, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#174: FILE: drivers/acpi/ospm/thermal/tz_osl.c:238:
+		int i = simple_strtoul(buf+5, &s, 0);
+		tz_policy_passive_do(tz, i);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/acpi/ospm/thermal/tz_osl.c:244:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#184: FILE: drivers/acpi/ospm/thermal/tz_osl.c:248:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: drivers/acpi/ospm/thermal/tz_osl.c:272:
+^Iproc = create_proc_read_entry(TZ_PROC_STATUS, S_IFREG | S_IRUGO, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#207: FILE: drivers/acpi/ospm/thermal/tz_osl.c:272:
+	proc = create_proc_read_entry(TZ_PROC_STATUS, S_IFREG | S_IRUGO, 

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: drivers/acpi/ospm/thermal/tz_osl.c:273:
+	proc = create_proc_read_entry(TZ_PROC_STATUS, S_IFREG | S_IRUGO, 
 		proc_entry, tz_osl_proc_read_status, (void*)thermal_zone);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: drivers/acpi/ospm/thermal/tz_osl.c:278:
+^Iproc = create_proc_read_entry(TZ_PROC_INFO, S_IFREG | S_IRUGO, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#214: FILE: drivers/acpi/ospm/thermal/tz_osl.c:278:
+	proc = create_proc_read_entry(TZ_PROC_INFO, S_IFREG | S_IRUGO, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/acpi/ospm/thermal/tz_osl.c:279:
+	proc = create_proc_read_entry(TZ_PROC_INFO, S_IFREG | S_IRUGO, 
 		proc_entry, tz_osl_proc_read_info, (void*)thermal_zone);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: drivers/acpi/ospm/thermal/tzpolicy.c:62:
 
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#237: FILE: drivers/acpi/ospm/thermal/tzpolicy.c:81:
+		printk(KERN_CRIT "Unable to set performance limit to %d\n", flag);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tz->policy.passive
#251: FILE: drivers/acpi/ospm/thermal/tzpolicy.c:139:
+	passive = &(tz->policy.passive);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#252: FILE: drivers/acpi/ospm/thermal/tzpolicy.c:140:
+	for (i=0; i<passive->threshold->cooling_devices.count; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#252: FILE: drivers/acpi/ospm/thermal/tzpolicy.c:140:
+	for (i=0; i<passive->threshold->cooling_devices.count; i++)
 	           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#300: FILE: drivers/acpi/ospm/thermal/tzpolicy.c:214:
+	printk("Setting active cooling: %d\n", state);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#305: FILE: drivers/acpi/ospm/thermal/tzpolicy.c:219:
+			printk(KERN_CRIT "ACPI: Failed to turn active cooling on/off.\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#319: FILE: drivers/acpi/ospm/thermal/tzpolicy.c:236:
+		if (!(active = tz->policy.active.threshold[i]))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#371: FILE: drivers/acpi/ospm/thermal/tzpolicy.c:327:
+		printk(KERN_CRIT "ACPI: CPU temperature critical\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000524535.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 14 warnings, 9 checks, 327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000524535.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
