WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -urN linux-2.5.25/arch/s390/defconfig linux-2.5.25-s390/arch/s390/defconfig

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#67: FILE: arch/s390/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#67: FILE: arch/s390/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#67: FILE: arch/s390/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#69: FILE: arch/s390/kernel/irq.c:71:
+			seq_printf(p, "CPU%d       ",j);
 			                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#81: FILE: arch/s390/kernel/setup.c:527:
+			       num_online_cpus(), loops_per_jiffy/(500000/HZ),
 			                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#81: FILE: arch/s390/kernel/setup.c:527:
+			       num_online_cpus(), loops_per_jiffy/(500000/HZ),
 			                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#101: FILE: arch/s390/kernel/smp.c:152:
+	int cpus = num_online_cpus()-1;
 	                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/s390/kernel/smp.c:187:
+        for (i =  0; i < NR_CPUS; i++) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/s390/kernel/smp.c:187:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#111: FILE: arch/s390/kernel/smp.c:187:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/s390/kernel/smp.c:188:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/s390/kernel/smp.c:188:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: arch/s390/kernel/smp.c:203:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/s390/kernel/smp.c:203:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#122: FILE: arch/s390/kernel/smp.c:203:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: arch/s390/kernel/smp.c:204:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/s390/kernel/smp.c:204:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/s390/kernel/smp.c:349:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/s390/kernel/smp.c:349:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#133: FILE: arch/s390/kernel/smp.c:349:
+        for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/s390/kernel/smp.c:350:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/s390/kernel/smp.c:350:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: arch/s390/kernel/smp.c:461:
+        int curr_cpu, num_cpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/s390/kernel/smp.c:461:
+        int curr_cpu, num_cpus;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/s390/kernel/smp.c:464:
+        num_cpus = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/s390/kernel/smp.c:464:
+        num_cpus = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/s390/kernel/smp.c:468:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/s390/kernel/smp.c:468:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/s390/kernel/smp.c:471:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

CHECK:SPACING: No space is necessary after a cast
#157: FILE: arch/s390/kernel/smp.c:471:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/s390/kernel/smp.c:471:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: arch/s390/kernel/smp.c:472:
+                if (signal_processor(num_cpus, sigp_sense) ==$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/s390/kernel/smp.c:472:
+                if (signal_processor(num_cpus, sigp_sense) ==$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/s390/kernel/smp.c:476:
+                num_cpus++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/s390/kernel/smp.c:476:
+                num_cpus++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

CHECK:SPACING: No space is necessary after a cast
#167: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#167: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: arch/s390/kernel/smp.c:593:
+        for(i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/s390/kernel/smp.c:593:
+        for(i = 0; i < NR_CPUS; i++) {$

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: arch/s390/kernel/smp.c:593:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#176: FILE: arch/s390/kernel/smp.c:593:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#210: FILE: arch/s390/mm/fault.c:248:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#244: FILE: arch/s390x/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#244: FILE: arch/s390x/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#244: FILE: arch/s390x/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: arch/s390x/kernel/irq.c:71:
+			seq_printf(p, "CPU%d       ",j);
 			                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#258: FILE: arch/s390x/kernel/setup.c:517:
+				num_online_cpus(), loops_per_jiffy/(500000/HZ),
 				                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#258: FILE: arch/s390x/kernel/setup.c:517:
+				num_online_cpus(), loops_per_jiffy/(500000/HZ),
 				                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#278: FILE: arch/s390x/kernel/smp.c:151:
+	int cpus = num_online_cpus()-1;
 	                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: arch/s390x/kernel/smp.c:186:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: arch/s390x/kernel/smp.c:186:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#288: FILE: arch/s390x/kernel/smp.c:186:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: arch/s390x/kernel/smp.c:187:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: arch/s390x/kernel/smp.c:187:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/s390x/kernel/smp.c:202:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/s390x/kernel/smp.c:202:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#299: FILE: arch/s390x/kernel/smp.c:202:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: arch/s390x/kernel/smp.c:203:
+                if (!cpu_online(i) || smp_processor_id() == i) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/s390x/kernel/smp.c:203:
+                if (!cpu_online(i) || smp_processor_id() == i) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/s390x/kernel/smp.c:203:
+                if (!cpu_online(i) || smp_processor_id() == i) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: arch/s390x/kernel/smp.c:344:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/s390x/kernel/smp.c:344:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#310: FILE: arch/s390x/kernel/smp.c:344:
+        for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/s390x/kernel/smp.c:345:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/s390x/kernel/smp.c:345:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/s390x/kernel/smp.c:442:
+        int curr_cpu, num_cpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/s390x/kernel/smp.c:442:
+        int curr_cpu, num_cpus;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: arch/s390x/kernel/smp.c:445:
+        num_cpus = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/s390x/kernel/smp.c:445:
+        num_cpus = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: arch/s390x/kernel/smp.c:449:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: arch/s390x/kernel/smp.c:449:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: arch/s390x/kernel/smp.c:452:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

CHECK:SPACING: No space is necessary after a cast
#334: FILE: arch/s390x/kernel/smp.c:452:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: arch/s390x/kernel/smp.c:452:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: arch/s390x/kernel/smp.c:453:
+                if (signal_processor(num_cpus, sigp_sense) ==$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/s390x/kernel/smp.c:453:
+                if (signal_processor(num_cpus, sigp_sense) ==$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: arch/s390x/kernel/smp.c:457:
+                num_cpus++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/s390x/kernel/smp.c:457:
+                num_cpus++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

CHECK:SPACING: No space is necessary after a cast
#344: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#344: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/s390x/kernel/smp.c:573:
+        for(i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/s390x/kernel/smp.c:573:
+        for(i = 0; i < NR_CPUS; i++) {$

ERROR:SPACING: space required before the open parenthesis '('
#353: FILE: arch/s390x/kernel/smp.c:573:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#353: FILE: arch/s390x/kernel/smp.c:573:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#387: FILE: arch/s390x/mm/fault.c:248:
+		BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: drivers/s390/cio/cio_debug.h:23:
+                                    imp , \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/s390/cio/cio_debug.h:23:
+                                    imp , \$

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#498: FILE: drivers/s390/cio/cio_debug.h:23:
+                                    imp , \
                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: drivers/s390/cio/cio_debug.h:30:
+                                    imp , \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/s390/cio/cio_debug.h:30:
+                                    imp , \$

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#506: FILE: drivers/s390/cio/cio_debug.h:30:
+                                    imp , \
                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#588: FILE: include/asm-s390/smp.h:49:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

CHECK:SPACING: No space is necessary after a cast
#632: FILE: include/asm-s390x/bitops.h:818:
+	__w = generic_hweight32((unsigned int) __x);		\

CHECK:SPACING: No space is necessary after a cast
#633: FILE: include/asm-s390x/bitops.h:819:
+	__w += generic_hweight32((unsigned int) (__x>>32));	\

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#633: FILE: include/asm-s390x/bitops.h:819:
+	__w += generic_hweight32((unsigned int) (__x>>32));	\
 	                                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#688: FILE: include/asm-s390x/smp.h:49:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prev' - possible side-effects?
#715: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'prev' may be better as '(prev)' to avoid precedence issues
#715: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'next' may be better as '(next)' to avoid precedence issues
#715: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000448740.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 45 warnings, 18 checks, 553 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000448740.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
