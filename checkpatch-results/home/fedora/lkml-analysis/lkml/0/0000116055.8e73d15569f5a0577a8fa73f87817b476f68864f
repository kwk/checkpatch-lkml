WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#47: 
Signed-off-by:	Duncan Sands <baldrick@free.fr>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#67: FILE: drivers/usb/atm/usbatm.c:102:
+#define UDSL_MAX_BUF_SIZE		64 * 1024	/* bytes */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#72: FILE: drivers/usb/atm/usbatm.c:105:
+#define UDSL_DEFAULT_RCV_BUF_SIZE	64 * ATM_CELL_SIZE	/* bytes */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#73: FILE: drivers/usb/atm/usbatm.c:106:
+#define UDSL_DEFAULT_SND_BUF_SIZE	64 * ATM_CELL_SIZE	/* bytes */

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#96: FILE: drivers/usb/atm/usbatm.c:129:
+module_param(rcv_buf_bytes, uint, S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#105: FILE: drivers/usb/atm/usbatm.c:135:
+module_param(snd_buf_bytes, uint, S_IRUGO);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: drivers/usb/atm/usbatm.c:1064:
+	instance->tx_channel.buf_size = max (instance->tx_channel.stride,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/usb/atm/usbatm.c:1065:
+	instance->tx_channel.buf_size = max (instance->tx_channel.stride,
+			snd_buf_bytes - (snd_buf_bytes % instance->tx_channel.stride));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'maxpacket < 1'
#203: FILE: drivers/usb/atm/usbatm.c:1070:
+	if ((maxpacket < 1) || (maxpacket > UDSL_MAX_BUF_SIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'maxpacket > UDSL_MAX_BUF_SIZE'
#203: FILE: drivers/usb/atm/usbatm.c:1070:
+	if ((maxpacket < 1) || (maxpacket > UDSL_MAX_BUF_SIZE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: drivers/usb/atm/usbatm.c:1072:
+		dev_err(dev, "%s: invalid endpoint %02x!\n", __func__,
+				usb_pipeendpoint(instance->rx_channel.endpoint));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: drivers/usb/atm/usbatm.c:1077:
+	num_packets = max (1U, (rcv_buf_bytes + maxpacket / 2) / maxpacket); /* round */

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#222: FILE: drivers/usb/atm/usbatm.c:1089:
+		dev_dbg(dev, "%s: using %d byte buffer for %s channel 0x%p\n", __func__, channel->buf_size, i ? "tx" : "rx", channel);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#237: FILE: drivers/usb/atm/usbatm.c:1263:
 	    || (num_snd_urbs > UDSL_MAX_SND_URBS)
+	    || (rcv_buf_bytes < 1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#238: FILE: drivers/usb/atm/usbatm.c:1264:
+	    || (rcv_buf_bytes < 1)
+	    || (rcv_buf_bytes > UDSL_MAX_BUF_SIZE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#239: FILE: drivers/usb/atm/usbatm.c:1265:
+	    || (rcv_buf_bytes > UDSL_MAX_BUF_SIZE)
+	    || (snd_buf_bytes < 1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#240: FILE: drivers/usb/atm/usbatm.c:1266:
+	    || (snd_buf_bytes < 1)
+	    || (snd_buf_bytes > UDSL_MAX_BUF_SIZE))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#269: FILE: drivers/usb/atm/speedtch.c:276:
+	if ((ret = usb_set_interface(usb_dev, INTERFACE_DATA, instance->altsetting)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#270: FILE: drivers/usb/atm/speedtch.c:277:
+		usb_err(usbatm, "%s: setting interface to %d failed (%d)!\n", __func__, instance->altsetting, ret);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#297: FILE: drivers/usb/atm/speedtch.c:735:
+		if ((ret = usb_set_interface(usb_dev, INTERFACE_DATA, instance->altsetting)) < 0) {

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#298: FILE: drivers/usb/atm/speedtch.c:736:
+			usb_err(usbatm, "%s: setting interface to %2d failed (%d)!\n", __func__, instance->altsetting, ret);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#303: FILE: drivers/usb/atm/speedtch.c:741:
+		if ((ret = usb_set_interface(usb_dev, INTERFACE_DATA, DEFAULT_ALTSETTING)) < 0) {

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#304: FILE: drivers/usb/atm/speedtch.c:742:
+			usb_err(usbatm, "%s: setting interface to %2d failed (%d)!\n", __func__, DEFAULT_ALTSETTING, ret);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 9 warnings, 8 checks, 232 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
