CHECK:LINE_SPACING: Please don't use multiple blank lines
#59: FILE: arch/powerpc/platforms/cell/cbe_regs.h:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: arch/powerpc/platforms/cell/pmu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#88: FILE: arch/powerpc/platforms/cell/pmu.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#89: FILE: arch/powerpc/platforms/cell/pmu.c:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#93: FILE: arch/powerpc/platforms/cell/pmu.c:26:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#108: FILE: arch/powerpc/platforms/cell/pmu.c:41:
+#define WRITE_WO_MMIO(reg, x)					\
+	do {							\
+		u32 _x = (x);					\
+		struct cbe_pmd_regs __iomem *pmd_regs;		\
+		struct cbe_pmd_shadow_regs *shadow_regs;	\
+		pmd_regs = cbe_get_cpu_pmd_regs(cpu);		\
+		shadow_regs = cbe_get_cpu_pmd_shadow_regs(cpu);	\
+		out_be64(&(pmd_regs->reg), (((u64)_x) << 32));	\
+		shadow_regs->reg = _x;				\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#108: FILE: arch/powerpc/platforms/cell/pmu.c:41:
+#define WRITE_WO_MMIO(reg, x)					\
+	do {							\
+		u32 _x = (x);					\
+		struct cbe_pmd_regs __iomem *pmd_regs;		\
+		struct cbe_pmd_shadow_regs *shadow_regs;	\
+		pmd_regs = cbe_get_cpu_pmd_regs(cpu);		\
+		shadow_regs = cbe_get_cpu_pmd_shadow_regs(cpu);	\
+		out_be64(&(pmd_regs->reg), (((u64)_x) << 32));	\
+		shadow_regs->reg = _x;				\
+	} while (0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pmd_regs->reg
#115: FILE: arch/powerpc/platforms/cell/pmu.c:48:
+		out_be64(&(pmd_regs->reg), (((u64)_x) << 32));	\

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#119: FILE: arch/powerpc/platforms/cell/pmu.c:52:
+#define READ_SHADOW_REG(val, reg)				\
+	do {							\
+		struct cbe_pmd_shadow_regs *shadow_regs;	\
+		shadow_regs = cbe_get_cpu_pmd_shadow_regs(cpu);	\
+		(val) = shadow_regs->reg;			\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#126: FILE: arch/powerpc/platforms/cell/pmu.c:59:
+#define READ_MMIO_UPPER32(val, reg)				\
+	do {							\
+		struct cbe_pmd_regs __iomem *pmd_regs;		\
+		pmd_regs = cbe_get_cpu_pmd_regs(cpu);		\
+		(val) = (u32)(in_be64(&pmd_regs->reg) >> 32);	\
+	} while (0)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#146: FILE: arch/powerpc/platforms/cell/pmu.c:79:
+		if (val_in_latch & (1 << phys_ctr)) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#378: FILE: arch/powerpc/platforms/cell/pmu.c:311:
+	u32 pm_ctrl;
+	pm_ctrl = cbe_read_pm(cpu, pm_control) & ~CBE_PM_ENABLE_PERF_MON;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#401: FILE: arch/powerpc/platforms/cell/pmu.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#421: FILE: arch/powerpc/platforms/cell/pmu.h:21:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#422: FILE: arch/powerpc/platforms/cell/pmu.h:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#439: FILE: arch/powerpc/platforms/cell/pmu.h:39:
+extern u32  cbe_read_phys_ctr(u32 cpu, u32 phys_ctr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#440: FILE: arch/powerpc/platforms/cell/pmu.h:40:
+extern void cbe_write_phys_ctr(u32 cpu, u32 phys_ctr, u32 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#441: FILE: arch/powerpc/platforms/cell/pmu.h:41:
+extern u32  cbe_read_ctr(u32 cpu, u32 ctr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#442: FILE: arch/powerpc/platforms/cell/pmu.h:42:
+extern void cbe_write_ctr(u32 cpu, u32 ctr, u32 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#444: FILE: arch/powerpc/platforms/cell/pmu.h:44:
+extern u32  cbe_read_pm07_control(u32 cpu, u32 ctr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#445: FILE: arch/powerpc/platforms/cell/pmu.h:45:
+extern void cbe_write_pm07_control(u32 cpu, u32 ctr, u32 val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: arch/powerpc/platforms/cell/pmu.h:46:
+extern u32  cbe_read_pm (u32 cpu, enum pm_reg_name reg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#446: FILE: arch/powerpc/platforms/cell/pmu.h:46:
+extern u32  cbe_read_pm (u32 cpu, enum pm_reg_name reg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#447: FILE: arch/powerpc/platforms/cell/pmu.h:47:
+extern void cbe_write_pm (u32 cpu, enum pm_reg_name reg, u32 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#447: FILE: arch/powerpc/platforms/cell/pmu.h:47:
+extern void cbe_write_pm (u32 cpu, enum pm_reg_name reg, u32 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#449: FILE: arch/powerpc/platforms/cell/pmu.h:49:
+extern u32  cbe_get_ctr_size(u32 cpu, u32 phys_ctr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#450: FILE: arch/powerpc/platforms/cell/pmu.h:50:
+extern void cbe_set_ctr_size(u32 cpu, u32 phys_ctr, u32 ctr_size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#452: FILE: arch/powerpc/platforms/cell/pmu.h:52:
+extern void cbe_enable_pm(u32 cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#453: FILE: arch/powerpc/platforms/cell/pmu.h:53:
+extern void cbe_disable_pm(u32 cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#455: FILE: arch/powerpc/platforms/cell/pmu.h:55:
+extern void cbe_read_trace_buffer(u32 cpu, u64 *buf);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 20 checks, 403 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
