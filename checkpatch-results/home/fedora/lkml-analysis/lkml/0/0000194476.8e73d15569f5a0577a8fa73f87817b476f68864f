WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#51: 
 Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#78: FILE: fs/namei.c:325:
+void path_release_open_intent(struct nameidata *nd)
                                                 ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "nd->intent.open.file"
#80: FILE: fs/namei.c:327:
+	if ((nd->flags & LOOKUP_OPEN) && nd->intent.open.file != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#84: FILE: fs/namei.c:331:
+	path_release(nd);
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#97: FILE: fs/namei.c:1423:
+	nd_init_open_intent(nd, flag, mode);
 	                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#106: FILE: fs/namei.c:1514:
+	path_release_open_intent(nd);
 	                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#119: FILE: fs/exec.c:126:
+	nd_init_open_intent(&nd, FMODE_READ, 0);
 	                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#128: FILE: fs/exec.c:139:
+	file = nd_open_file(&nd, O_RDONLY);
 	                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#137: FILE: fs/exec.c:167:
+	path_release_open_intent(&nd);
 	                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#146: FILE: fs/exec.c:494:
+	nd_init_open_intent(&nd, FMODE_READ, 0);
 	                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#155: FILE: fs/exec.c:508:
+				file = nd_open_file(&nd, O_RDONLY);
 				                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#164: FILE: fs/exec.c:520:
+		path_release_open_intent(&nd);
 		                          ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/namei.h:68:
+extern void path_release_open_intent(struct nameidata *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#184: FILE: include/linux/namei.h:68:
+extern void path_release_open_intent(struct nameidata *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#186: FILE: include/linux/namei.h:70:
+extern struct file *nd_open_file(struct nameidata *nd, int flags);
                                                    ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: include/linux/namei.h:70:
+extern struct file *nd_open_file(struct nameidata *nd, int flags);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#187: FILE: include/linux/namei.h:71:
+static inline void nd_init_open_intent(struct nameidata *nd, int flags, int mode)
                                                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#205: FILE: fs/open.c:766:
+		return nd_open_file(&nd, flags);
 		                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#212: FILE: fs/open.c:773:
+struct file *nd_open_file(struct nameidata *nd, int flags)
                                             ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#214: FILE: fs/open.c:775:
+	struct file *filp;
 	             ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#216: FILE: fs/open.c:777:
+	if ((nd->flags & LOOKUP_OPEN) && nd->intent.open.file != NULL) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "nd->intent.open.file"
#216: FILE: fs/open.c:777:
+	if ((nd->flags & LOOKUP_OPEN) && nd->intent.open.file != NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#217: FILE: fs/open.c:778:
+		filp = nd->intent.open.file;
 		^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#218: FILE: fs/open.c:779:
+		path_release(nd);
 		             ^^

CHECK:BRACES: Unbalanced braces around else statement
#219: FILE: fs/open.c:780:
+	} else

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#220: FILE: fs/open.c:781:
+		filp = dentry_open(nd->dentry, nd->mnt, flags);
 		^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#221: FILE: fs/open.c:782:
+	return filp;
 	       ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000194476.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 21 warnings, 6 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000194476.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
