WARNING:TYPO_SPELLING: 'rewite' may be misspelled - perhaps 'rewrite'?
#26: 
I rewite this patch.
  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#116: FILE: sound/drivers/mpu401/mpu401_pc98.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#137: FILE: sound/drivers/mpu401/mpu401_pc98.c:22:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#138: FILE: sound/drivers/mpu401/mpu401_pc98.c:23:
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#143: FILE: sound/drivers/mpu401/mpu401_pc98.c:28:
+#include <asm/io.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: sound/drivers/mpu401/mpu401_pc98.c:50:
+static void snd_mpu401_pc98_input_read(mpu401_t * mpu);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#166: FILE: sound/drivers/mpu401/mpu401_pc98.c:51:
+static void snd_mpu401_pc98_output_write(mpu401_t * mpu);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#169: FILE: sound/drivers/mpu401/mpu401_pc98.c:54:
+/*
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#182: FILE: sound/drivers/mpu401/mpu401_pc98.c:67:
+	int timeout = 100000;
+	for (; timeout > 0 && snd_mpu401_98_input_avail(mpu); timeout--)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: sound/drivers/mpu401/mpu401_pc98.c:89:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpu"
#205: FILE: sound/drivers/mpu401/mpu401_pc98.c:90:
+	if (mpu == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#224: FILE: sound/drivers/mpu401/mpu401_pc98.c:109:
+static void snd_mpu401_pc98_add_timer (mpu401_t *mpu, int input)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: sound/drivers/mpu401/mpu401_pc98.c:113:
+	spin_lock_irqsave (&mpu->timer_lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: sound/drivers/mpu401/mpu401_pc98.c:119:
+^I} $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: sound/drivers/mpu401/mpu401_pc98.c:121:
+	spin_unlock_irqrestore (&mpu->timer_lock, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#239: FILE: sound/drivers/mpu401/mpu401_pc98.c:124:
+static void snd_mpu401_pc98_remove_timer (mpu401_t *mpu, int input)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: sound/drivers/mpu401/mpu401_pc98.c:128:
+	spin_lock_irqsave (&mpu->timer_lock, flags);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#246: FILE: sound/drivers/mpu401/mpu401_pc98.c:131:
+		if (! mpu->timer_invoked)
 		    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: sound/drivers/mpu401/mpu401_pc98.c:134:
+	spin_unlock_irqrestore (&mpu->timer_lock, flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#253: FILE: sound/drivers/mpu401/mpu401_pc98.c:138:
+/*
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: sound/drivers/mpu401/mpu401_pc98.c:141:
+static void snd_mpu401_pc98_cmd(mpu401_t * mpu, unsigned char cmd, int ack)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#269: FILE: sound/drivers/mpu401/mpu401_pc98.c:154:
+			udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#291: FILE: sound/drivers/mpu401/mpu401_pc98.c:176:
+	if (! ok)
 	    ^

WARNING:LONG_LINE: line length of 144 exceeds 100 columns
#292: FILE: sound/drivers/mpu401/mpu401_pc98.c:177:
+		snd_printk("cmd: 0x%x failed at 0x%lx (status = 0x%x, data = 0x%x)\n", cmd, mpu->port, inb(MPU401C_98(mpu)), inb(MPU401D(mpu)));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 132 exceeds 100 columns
#293: FILE: sound/drivers/mpu401/mpu401_pc98.c:178:
+	// snd_printk("cmd: 0x%x at 0x%lx (status = 0x%x, data = 0x%x)\n", cmd, mpu->port, inb(MPU401C_98(mpu)), inb(MPU401D(mpu)));

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: sound/drivers/mpu401/mpu401_pc98.c:184:
+static int snd_mpu401_pc98_input_open(snd_rawmidi_substream_t * substream)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#305: FILE: sound/drivers/mpu401/mpu401_pc98.c:190:
+	if (mpu->open_input && (err = mpu->open_input(mpu)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#307: FILE: sound/drivers/mpu401/mpu401_pc98.c:192:
+	if (! test_bit(MPU401_MODE_BIT_OUTPUT, &mpu->mode)) {
 	    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#316: FILE: sound/drivers/mpu401/mpu401_pc98.c:201:
+static int snd_mpu401_pc98_output_open(snd_rawmidi_substream_t * substream)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#322: FILE: sound/drivers/mpu401/mpu401_pc98.c:207:
+	if (mpu->open_output && (err = mpu->open_output(mpu)) < 0)

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#324: FILE: sound/drivers/mpu401/mpu401_pc98.c:209:
+	if (! test_bit(MPU401_MODE_BIT_INPUT, &mpu->mode)) {
 	    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#333: FILE: sound/drivers/mpu401/mpu401_pc98.c:218:
+static int snd_mpu401_pc98_input_close(snd_rawmidi_substream_t * substream)

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#340: FILE: sound/drivers/mpu401/mpu401_pc98.c:225:
+	if (! test_bit(MPU401_MODE_BIT_OUTPUT, &mpu->mode))
 	    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#347: FILE: sound/drivers/mpu401/mpu401_pc98.c:232:
+static int snd_mpu401_pc98_output_close(snd_rawmidi_substream_t * substream)

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#354: FILE: sound/drivers/mpu401/mpu401_pc98.c:239:
+	if (! test_bit(MPU401_MODE_BIT_INPUT, &mpu->mode))
 	    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: sound/drivers/mpu401/mpu401_pc98.c:249:
+static void snd_mpu401_pc98_input_trigger(snd_rawmidi_substream_t * substream, int up)

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#373: FILE: sound/drivers/mpu401/mpu401_pc98.c:258:
+		if (! test_and_set_bit(MPU401_MODE_BIT_INPUT_TRIGGER, &mpu->mode)) {
 		    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: sound/drivers/mpu401/mpu401_pc98.c:275:
+static void snd_mpu401_pc98_input_read(mpu401_t * mpu)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#423: FILE: sound/drivers/mpu401/mpu401_pc98.c:308:
+static void snd_mpu401_pc98_output_write(mpu401_t * mpu)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#444: FILE: sound/drivers/mpu401/mpu401_pc98.c:329:
+			snd_mpu401_pc98_remove_timer (mpu, 0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#452: FILE: sound/drivers/mpu401/mpu401_pc98.c:337:
+static void snd_mpu401_pc98_output_trigger(snd_rawmidi_substream_t * substream, int up)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#472: FILE: sound/drivers/mpu401/mpu401_pc98.c:357:
+/*
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#476: FILE: sound/drivers/mpu401/mpu401_pc98.c:361:
+static snd_rawmidi_ops_t snd_mpu401_pc98_output =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#483: FILE: sound/drivers/mpu401/mpu401_pc98.c:368:
+static snd_rawmidi_ops_t snd_mpu401_pc98_input =
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#492: FILE: sound/drivers/mpu401/mpu401_pc98.c:377:
+	mpu401_t *mpu = snd_magic_cast(mpu401_t, rmidi->private_data, return);
+	if (mpu->irq_flags && mpu->irq >= 0)

CHECK:SPACING: No space is necessary after a cast
#493: FILE: sound/drivers/mpu401/mpu401_pc98.c:378:
+		free_irq(mpu->irq, (void *) mpu);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#501: FILE: sound/drivers/mpu401/mpu401_pc98.c:386:
+int snd_mpu401_pc98_new(snd_card_t * card, int device,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#505: FILE: sound/drivers/mpu401/mpu401_pc98.c:390:
+			snd_rawmidi_t ** rrawmidi)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#513: FILE: sound/drivers/mpu401/mpu401_pc98.c:398:
+	if ((err = snd_rawmidi_new(card, "MPU-401U", device, 1, 1, &rmidi)) < 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpu"
#516: FILE: sound/drivers/mpu401/mpu401_pc98.c:401:
+	if (mpu == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#528: FILE: sound/drivers/mpu401/mpu401_pc98.c:413:
+		if ((mpu->res = request_region(port, 2, "MPU401 UART")) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#530: FILE: sound/drivers/mpu401/mpu401_pc98.c:415:
+		if ((mpu->res = request_region(port, 4, "MPU401 UART")) == NULL)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#539: FILE: sound/drivers/mpu401/mpu401_pc98.c:424:
+		if (request_irq(irq, snd_mpu401_pc98_interrupt, irq_flags, "MPU401 UART", (void *) mpu)) {

CHECK:SPACING: No space is necessary after a cast
#539: FILE: sound/drivers/mpu401/mpu401_pc98.c:424:
+		if (request_irq(irq, snd_mpu401_pc98_interrupt, irq_flags, "MPU401 UART", (void *) mpu)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#550: FILE: sound/drivers/mpu401/mpu401_pc98.c:435:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#550: FILE: sound/drivers/mpu401/mpu401_pc98.c:435:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
 		                                    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#550: FILE: sound/drivers/mpu401/mpu401_pc98.c:435:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
 		                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#550: FILE: sound/drivers/mpu401/mpu401_pc98.c:435:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
 		                                                        ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#550: FILE: sound/drivers/mpu401/mpu401_pc98.c:435:
+		#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:SPACING: space required after that ',' (ctx:VxV)
#551: FILE: sound/drivers/mpu401/mpu401_pc98.c:436:
+		#define WAIT118 outb(0x00,0x5f)
 		                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#557: FILE: sound/drivers/mpu401/mpu401_pc98.c:442:
+		switch (irq)
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#580: FILE: sound/drivers/mpu401/mpu401_pc98.c:465:
+		if (inb(0x148f) & 0x08)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#588: FILE: sound/drivers/mpu401/mpu401_pc98.c:473:
+		for (count = 0; count < 35000; count ++)
 		                                     ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#591: FILE: sound/drivers/mpu401/mpu401_pc98.c:476:
+		for (count = 0; count < 65000; count ++)
 		                                     ^

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#594: FILE: sound/drivers/mpu401/mpu401_pc98.c:479:
+		snd_printk("MIDI daughter board initalize failed at stage1\n\n");
 		                                ^^^^^^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#598: FILE: sound/drivers/mpu401/mpu401_pc98.c:483:
+		set_mode_118:

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#603: FILE: sound/drivers/mpu401/mpu401_pc98.c:488:
+		for (count = 0; count < sizeof(Data0485_99); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#603: FILE: sound/drivers/mpu401/mpu401_pc98.c:488:
+		for (count = 0; count < sizeof(Data0485_99); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_99>
#603: FILE: sound/drivers/mpu401/mpu401_pc98.c:488:
+		for (count = 0; count < sizeof(Data0485_99); count ++)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#613: FILE: sound/drivers/mpu401/mpu401_pc98.c:498:
+		for (count = 0; count < sizeof(Data0485_9E); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_9E>
#613: FILE: sound/drivers/mpu401/mpu401_pc98.c:498:
+		for (count = 0; count < sizeof(Data0485_9E); count ++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#614: FILE: sound/drivers/mpu401/mpu401_pc98.c:499:
+			if (inb(0x485) != Data0485_9E[count])
+			{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#622: FILE: sound/drivers/mpu401/mpu401_pc98.c:507:
+		for (count = 0; count < 2000; count ++)
 		                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#625: FILE: sound/drivers/mpu401/mpu401_pc98.c:510:
+		if (!err)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#630: FILE: sound/drivers/mpu401/mpu401_pc98.c:515:
+			for (count = 0; count < sizeof(Data0485_36); count ++)
 			                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_36>
#630: FILE: sound/drivers/mpu401/mpu401_pc98.c:515:
+			for (count = 0; count < sizeof(Data0485_36); count ++)

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#633: FILE: sound/drivers/mpu401/mpu401_pc98.c:518:
+			for (count = 0; count < 1500; count ++)
 			                                    ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#638: FILE: sound/drivers/mpu401/mpu401_pc98.c:523:
+			for (count = 0; count < 1500; count ++)
 			                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#646: FILE: sound/drivers/mpu401/mpu401_pc98.c:531:
+		for (count = 0; count < sizeof(Data0485_A9); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#646: FILE: sound/drivers/mpu401/mpu401_pc98.c:531:
+		for (count = 0; count < sizeof(Data0485_A9); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_A9>
#646: FILE: sound/drivers/mpu401/mpu401_pc98.c:531:
+		for (count = 0; count < sizeof(Data0485_A9); count ++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#656: FILE: sound/drivers/mpu401/mpu401_pc98.c:541:
+		for (count = 0; count < sizeof(Data0485_0C); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#656: FILE: sound/drivers/mpu401/mpu401_pc98.c:541:
+		for (count = 0; count < sizeof(Data0485_0C); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_0C>
#656: FILE: sound/drivers/mpu401/mpu401_pc98.c:541:
+		for (count = 0; count < sizeof(Data0485_0C); count ++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#666: FILE: sound/drivers/mpu401/mpu401_pc98.c:551:
+		for (count = 0; count < sizeof(Data0485_66); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#666: FILE: sound/drivers/mpu401/mpu401_pc98.c:551:
+		for (count = 0; count < sizeof(Data0485_66); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_66>
#666: FILE: sound/drivers/mpu401/mpu401_pc98.c:551:
+		for (count = 0; count < sizeof(Data0485_66); count ++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#676: FILE: sound/drivers/mpu401/mpu401_pc98.c:561:
+		for (count = 0; count < sizeof(Data0485_60); count ++)
+		{

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#676: FILE: sound/drivers/mpu401/mpu401_pc98.c:561:
+		for (count = 0; count < sizeof(Data0485_60); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_60>
#676: FILE: sound/drivers/mpu401/mpu401_pc98.c:561:
+		for (count = 0; count < sizeof(Data0485_60); count ++)

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#685: FILE: sound/drivers/mpu401/mpu401_pc98.c:570:
+		for (count = 0; count < 35000; count ++)
 		                                     ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#688: FILE: sound/drivers/mpu401/mpu401_pc98.c:573:
+		for (count = 0; count < 65000; count ++)
 		                                     ^

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#691: FILE: sound/drivers/mpu401/mpu401_pc98.c:576:
+		snd_printk("MIDI daughter board initalize failed at stage2\n\n");
 		                                ^^^^^^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#695: FILE: sound/drivers/mpu401/mpu401_pc98.c:580:
+		end_mode_118:

WARNING:TYPO_SPELLING: 'initalized' may be misspelled - perhaps 'initialized'?
#697: FILE: sound/drivers/mpu401/mpu401_pc98.c:582:
+		snd_printk("MIDI daughter board initalized\n");
 		                                ^^^^^^^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#698: FILE: sound/drivers/mpu401/mpu401_pc98.c:583:
+		skip118:

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: sound/drivers/mpu401/mpu401_pc98.c:590:
+^I                     SNDRV_RAWMIDI_INFO_INPUT |$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#706: FILE: sound/drivers/mpu401/mpu401_pc98.c:591:
+^I                     SNDRV_RAWMIDI_INFO_DUPLEX;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#713: FILE: sound/drivers/mpu401/mpu401_pc98.c:598:
+EXPORT_SYMBOL(snd_mpu401_pc98_interrupt);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#714: FILE: sound/drivers/mpu401/mpu401_pc98.c:599:
+EXPORT_SYMBOL(snd_mpu401_pc98_new);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#840: FILE: sound/isa/cs423x/cs4231_lib.c:1476:
+	switch (irq) {
+		case 3:
[...]
+		case 5:
[...]
+		case 10:
[...]
+		case 12:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#863: FILE: sound/isa/cs423x/cs4231_lib.c:1499:
+	switch (dma1) {
+		case 0:
[...]
+		case 1:
[...]
+		case 3:
[...]
+		default:

WARNING:TYPO_SPELLING: 'CanBe' may be misspelled - perhaps 'Can be'?
#883: FILE: sound/isa/cs423x/cs4231_lib.c:1519:
+		/* Set up CanBe control registers. */
 		          ^^^^^

WARNING:TYPO_SPELLING: 'CanBe' may be misspelled - perhaps 'Can be'?
#884: FILE: sound/isa/cs423x/cs4231_lib.c:1520:
+		snd_printk("Setting up CanBe Sound System\n");
 		                       ^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#936: FILE: include/sound/mpu401.h:113:
+int snd_mpu401_pc98_new(snd_card_t * card,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#943: FILE: include/sound/mpu401.h:120:
+			snd_rawmidi_t ** rrawmidi);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#951: FILE: include/sound/pc9801_118_magic.h:1:
+		static unsigned char	Data0485_A9[] = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1366: FILE: include/sound/sound_pc9800.h:1:
+#ifndef _SOUND_PC9800_H_

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1369: FILE: include/sound/sound_pc9800.h:4:
+#include <asm/io.h>

WARNING:TYPO_SPELLING: 'CanBe' may be misspelled - perhaps 'Can be'?
#1384: FILE: include/sound/sound_pc9800.h:19:
+#define PC9800_SOUND_ID_118	0x8	/* PC-9801-118 and compatible(CanBe Internal, etc.) */
                            	   	                              ^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419514.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 66 errors, 32 warnings, 12 checks, 1292 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419514.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
