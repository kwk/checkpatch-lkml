WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
> > > Hmmm... Good ideas. I think it could be much simpler like the following 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: mm/rmap.c:715:
+static int __try_to_unmap_anon(struct anon_vma *anon_vma,
+	struct page *page, int migration)

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: mm/rmap.c:730:
+        struct anon_vma *anon_vma;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: mm/rmap.c:730:
+        struct anon_vma *anon_vma;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: mm/rmap.c:731:
+        struct vm_area_struct *vma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: mm/rmap.c:731:
+        struct vm_area_struct *vma;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: mm/rmap.c:732:
+        int ret = SWAP_AGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: mm/rmap.c:732:
+        int ret = SWAP_AGAIN;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: mm/rmap.c:747:
+	int ret = SWAP_AGAIN;
+	if (PageAnon(page))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#192: FILE: mm/rmap.c:869:
+	if (PageAnon(page)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#197: FILE: mm/rmap.c:874:
+	} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084893.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 3 checks, 73 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084893.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
