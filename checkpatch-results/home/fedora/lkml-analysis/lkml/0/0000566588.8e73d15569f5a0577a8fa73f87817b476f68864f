ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: fs/buffer.c:1762:
+        unsigned long *bytes)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#60: FILE: fs/buffer.c:1762:
+int cont_grow_file(struct inode *i, get_block_t *get_block,
+        unsigned long *bytes)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: fs/buffer.c:1762:
+        unsigned long *bytes)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#70: FILE: fs/buffer.c:1772:
+	if (!page) return -ENOMEM;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#71: FILE: fs/buffer.c:1773:
+	if (!PageLocked(page)) PAGE_BUG(page);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#74: FILE: fs/buffer.c:1776:
+	/* Prepare to write at i_size.  This will allocate new sectors
+	   as appropriate and zero them out. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#74: FILE: fs/buffer.c:1776:
+	   as appropriate and zero them out. */

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#78: FILE: fs/buffer.c:1780:
+		/* The file was not succesfully resized to the
 		                    ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#79: FILE: fs/buffer.c:1781:
+		/* The file was not succesfully resized to the
+		   requested size.  Then we must reset i_size to the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#80: FILE: fs/buffer.c:1782:
+		   actual allocation. */

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#84: FILE: fs/buffer.c:1786:
+	UnlockPage(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sbi' - possible side-effects?
#100: FILE: fs/fat/file.c:117:
+#define CLUSTERS(sbi, size) \
+(((size) + SECTOR_SIZE * (sbi)->cluster_size - 1) >> (sbi)->cluster_bits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: fs/fat/file.c:139:
+		status = cont_grow_file(inode, fat_get_block,
+			&MSDOS_I(inode)->mmu_private);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#133: FILE: fs/fat/file.c:141:
+			printk( "fat_truncate: unable to grow file "

ERROR:SPACING: space prohibited after that open parenthesis '('
#133: FILE: fs/fat/file.c:141:
+			printk( "fat_truncate: unable to grow file "

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: fs/fat/file.c:142:
+^I^I^I^I"to %Ld bytes, error = %d\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#134: FILE: fs/fat/file.c:142:
+			printk( "fat_truncate: unable to grow file "
+				"to %Ld bytes, error = %d\n", 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#134: FILE: fs/fat/file.c:142:
+				"to %Ld bytes, error = %d\n", 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#159: FILE: fs/hpfs/file.c:51:
+	if (BLOCKS(inode->u.hpfs_i.mmu_private) <= file_secno) return 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: fs/hpfs/file.c:75:
+		status = cont_grow_file(i, hpfs_get_block,
+			&i->u.hpfs_i.mmu_private);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: fs/hpfs/file.c:77:
+			printk( "HPFS: unable to grow file "

ERROR:SPACING: space prohibited after that open parenthesis '('
#183: FILE: fs/hpfs/file.c:77:
+			printk( "HPFS: unable to grow file "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: fs/hpfs/file.c:78:
+^I^I^I^I"to %Ld bytes, error = %d\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#184: FILE: fs/hpfs/file.c:78:
+			printk( "HPFS: unable to grow file "
+				"to %Ld bytes, error = %d\n", 

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#184: FILE: fs/hpfs/file.c:78:
+				"to %Ld bytes, error = %d\n", 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: include/linux/fs.h:1192:
+extern int cont_grow_file(struct inode *, get_block_t *, unsigned long *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#201: FILE: include/linux/fs.h:1192:
+extern int cont_grow_file(struct inode *, get_block_t *, unsigned long *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'get_block_t *' should also have an identifier name
#201: FILE: include/linux/fs.h:1192:
+extern int cont_grow_file(struct inode *, get_block_t *, unsigned long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#201: FILE: include/linux/fs.h:1192:
+extern int cont_grow_file(struct inode *, get_block_t *, unsigned long *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566588.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 15 warnings, 6 checks, 147 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566588.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
