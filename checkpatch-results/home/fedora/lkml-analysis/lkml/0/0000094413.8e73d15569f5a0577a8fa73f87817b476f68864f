WARNING:REPEATED_WORD: Possible repeated word: 'me'
#50: 
> Errrr, guess that would me me.  Looks like a few interfaces have changed.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#93: 
      [>....................]  resync =  0.0% (64768/70838464) finish=127224.1min speed=9K/sec

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#141: FILE: sata_nv.c:289:
+static void nv_adma_fill_aprd(struct ata_queued_cmd *qc, struct scatterlist *sg, int idx, struct nv_adma_prd *aprd);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#215: FILE: sata_nv.c:1041:
+		dev_printk(KERN_DEBUG, &pdev->dev, "version " DRV_VERSION "\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#256: FILE: sata_nv.c:1265:
+		aprd = (idx < 5) ? &cpb->aprd[idx] : &pp->aprd[idx-5];
 		                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#305: FILE: drivers/scsi/sata_nv.c:127:
+#define NV_MCP_SATA_CFG_20_PORT0_EN	(1 << 17)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#306: FILE: drivers/scsi/sata_nv.c:128:
+#define NV_MCP_SATA_CFG_20_PORT1_EN	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#307: FILE: drivers/scsi/sata_nv.c:129:
+#define NV_MCP_SATA_CFG_20_PORT0_PWB_EN	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#308: FILE: drivers/scsi/sata_nv.c:130:
+#define NV_MCP_SATA_CFG_20_PORT1_PWB_EN	(1 << 12)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#320: FILE: drivers/scsi/sata_nv.c:142:
+#define NV_ADMA_SGTBL_LEN		(1024 - NV_ADMA_CPB_SZ) / NV_ADMA_APRD_SZ

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#321: FILE: drivers/scsi/sata_nv.c:143:
+#define NV_ADMA_SGTBL_SZ                NV_ADMA_SGTBL_LEN * NV_ADMA_APRD_SZ

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#322: FILE: drivers/scsi/sata_nv.c:144:
+#define NV_ADMA_PORT_PRIV_DMA_SZ        NV_ADMA_CAN_QUEUE * (NV_ADMA_CPB_SZ + NV_ADMA_SGTBL_SZ)

ERROR:SPACING: space prohibited after that open parenthesis '('
#330: FILE: drivers/scsi/sata_nv.c:152:
+#define NV_ADMA_CHECK_INTR(GCTL, PORT) ((GCTL) & ( 1 << (19 + (12 * (PORT)))))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: drivers/scsi/sata_nv.c:157:
+// size of ADMA port register space $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#350: FILE: drivers/scsi/sata_nv.c:172:
+#define NV_ADMA_CTL_HOTPLUG_IEN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#351: FILE: drivers/scsi/sata_nv.c:173:
+#define NV_ADMA_CTL_CHANNEL_RESET	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#352: FILE: drivers/scsi/sata_nv.c:174:
+#define NV_ADMA_CTL_GO			(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#353: FILE: drivers/scsi/sata_nv.c:175:
+#define NV_ADMA_CTL_AIEN		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#354: FILE: drivers/scsi/sata_nv.c:176:
+#define NV_ADMA_CTL_READ_NON_COHERENT	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#355: FILE: drivers/scsi/sata_nv.c:177:
+#define NV_ADMA_CTL_WRITE_NON_COHERENT	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#358: FILE: drivers/scsi/sata_nv.c:180:
+#define NV_CPB_RESP_DONE		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#359: FILE: drivers/scsi/sata_nv.c:181:
+#define NV_CPB_RESP_ATA_ERR		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#360: FILE: drivers/scsi/sata_nv.c:182:
+#define NV_CPB_RESP_CMD_ERR		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#361: FILE: drivers/scsi/sata_nv.c:183:
+#define NV_CPB_RESP_CPB_ERR		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#364: FILE: drivers/scsi/sata_nv.c:186:
+#define NV_CPB_CTL_CPB_VALID		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#365: FILE: drivers/scsi/sata_nv.c:187:
+#define NV_CPB_CTL_QUEUE		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#366: FILE: drivers/scsi/sata_nv.c:188:
+#define NV_CPB_CTL_APRD_VALID		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#367: FILE: drivers/scsi/sata_nv.c:189:
+#define NV_CPB_CTL_IEN			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#368: FILE: drivers/scsi/sata_nv.c:190:
+#define NV_CPB_CTL_FPDMA		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#371: FILE: drivers/scsi/sata_nv.c:193:
+#define NV_APRD_WRITE			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#372: FILE: drivers/scsi/sata_nv.c:194:
+#define NV_APRD_END			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#373: FILE: drivers/scsi/sata_nv.c:195:
+#define NV_APRD_CONT			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#376: FILE: drivers/scsi/sata_nv.c:198:
+#define NV_ADMA_STAT_TIMEOUT		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#377: FILE: drivers/scsi/sata_nv.c:199:
+#define NV_ADMA_STAT_HOTUNPLUG		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#378: FILE: drivers/scsi/sata_nv.c:200:
+#define NV_ADMA_STAT_HOTPLUG		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#379: FILE: drivers/scsi/sata_nv.c:201:
+#define NV_ADMA_STAT_CPBERR		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#380: FILE: drivers/scsi/sata_nv.c:202:
+#define NV_ADMA_STAT_SERROR		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#381: FILE: drivers/scsi/sata_nv.c:203:
+#define NV_ADMA_STAT_CMD_COMPLETE	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#382: FILE: drivers/scsi/sata_nv.c:204:
+#define NV_ADMA_STAT_IDLE		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#383: FILE: drivers/scsi/sata_nv.c:205:
+#define NV_ADMA_STAT_LEGACY		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#384: FILE: drivers/scsi/sata_nv.c:206:
+#define NV_ADMA_STAT_STOPPED		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#385: FILE: drivers/scsi/sata_nv.c:207:
+#define NV_ADMA_STAT_DONE		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#389: FILE: drivers/scsi/sata_nv.c:211:
+#define NV_ADMA_PORT_REGISTER_MODE	(1 << 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: drivers/scsi/sata_nv.c:214:
+#define min(x,y) ((x) < (y) ? x : y)
              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#392: FILE: drivers/scsi/sata_nv.c:214:
+#define min(x,y) ((x) < (y) ? x : y)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#392: FILE: drivers/scsi/sata_nv.c:214:
+#define min(x,y) ((x) < (y) ? x : y)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: drivers/scsi/sata_nv.c:240:
+ ^Iu8^I^I^Ilen;           //3 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: drivers/scsi/sata_nv.c:240:
+ ^Iu8^I^I^Ilen;           //3 $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#418: FILE: drivers/scsi/sata_nv.c:240:
+ ^Iu8^I^I^Ilen;           //3 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/scsi/sata_nv.c:240:
+ ^Iu8^I^I^Ilen;           //3 $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#428: FILE: drivers/scsi/sata_nv.c:250:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#469: FILE: drivers/scsi/sata_nv.c:289:
+static void nv_adma_fill_aprd(struct ata_queued_cmd *qc, struct scatterlist *sg, int idx, struct nv_adma_prd *aprd);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#544: FILE: drivers/scsi/sata_nv.c:385:
+		.disable_hotplug= nv_disable_hotplug,
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#549: FILE: drivers/scsi/sata_nv.c:390:
+		.disable_hotplug= nv_disable_hotplug,
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#554: FILE: drivers/scsi/sata_nv.c:395:
+		.disable_hotplug= nv_disable_hotplug_adma,
 		                ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#599: FILE: drivers/scsi/sata_nv.c:469:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#599: FILE: drivers/scsi/sata_nv.c:469:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: drivers/scsi/sata_nv.c:488:
+static inline void __iomem *__nv_adma_ctl_block(void __iomem *mmio,
+					     unsigned int port_no)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#677: FILE: drivers/scsi/sata_nv.c:547:
+	if (!NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no)) {
+		return 0;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#714: FILE: drivers/scsi/sata_nv.c:584:
+	if (status & NV_ADMA_STAT_CMD_COMPLETE) {
+		VPRINTK("ADMA command complete, stat = 0x%x\n", status);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#721: FILE: drivers/scsi/sata_nv.c:591:
+		if (!(status & NV_ADMA_STAT_IDLE)) {
+			VPRINTK("XXX CPB done, but not idle\n");
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#724: FILE: drivers/scsi/sata_nv.c:594:
+		if (flags & NV_CPB_RESP_DONE) {
+			VPRINTK("CPB flags done, flags = 0x%x\n", flags);
+		}

WARNING:LINE_SPACING: Missing a blank line after declarations
#746: FILE: drivers/scsi/sata_nv.c:616:
+		u8 ata_status = readb(mmio + (ATA_REG_STATUS * 4));
+		qc->err_mask |= ac_err_mask(have_err ? (ata_status | ATA_ERR) : ata_status);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#768: FILE: drivers/scsi/sata_nv.c:650:
+static inline void nv_enable_adma_space (struct pci_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#779: FILE: drivers/scsi/sata_nv.c:661:
+static inline void nv_disable_adma_space (struct pci_dev *pdev)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#795: FILE: drivers/scsi/sata_nv.c:677:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#812: FILE: drivers/scsi/sata_nv.c:694:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#829: FILE: drivers/scsi/sata_nv.c:711:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: drivers/scsi/sata_nv.c:746:
+^I^I^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#888: FILE: drivers/scsi/sata_nv.c:766:
+			struct nv_adma_port_priv *pp = ap->private_data;
+			writel(pp->notifier | pp->notifier_error,

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#948: FILE: drivers/scsi/sata_nv.c:837:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#960: FILE: drivers/scsi/sata_nv.c:849:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: drivers/scsi/sata_nv.c:887:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1000: FILE: drivers/scsi/sata_nv.c:889:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1068: FILE: drivers/scsi/sata_nv.c:957:
+
+

CHECK:SPACING: No space is necessary after a cast
#1078: FILE: drivers/scsi/sata_nv.c:967:
+	ioport->cmd_addr	= (unsigned long) mmio;

CHECK:SPACING: No space is necessary after a cast
#1079: FILE: drivers/scsi/sata_nv.c:968:
+	ioport->data_addr	= (unsigned long) mmio + (ATA_REG_DATA * 4);

CHECK:SPACING: No space is necessary after a cast
#1081: FILE: drivers/scsi/sata_nv.c:970:
+	ioport->feature_addr	= (unsigned long) mmio + (ATA_REG_ERR * 4);

CHECK:SPACING: No space is necessary after a cast
#1082: FILE: drivers/scsi/sata_nv.c:971:
+	ioport->nsect_addr	= (unsigned long) mmio + (ATA_REG_NSECT * 4);

CHECK:SPACING: No space is necessary after a cast
#1083: FILE: drivers/scsi/sata_nv.c:972:
+	ioport->lbal_addr	= (unsigned long) mmio + (ATA_REG_LBAL * 4);

CHECK:SPACING: No space is necessary after a cast
#1084: FILE: drivers/scsi/sata_nv.c:973:
+	ioport->lbam_addr	= (unsigned long) mmio + (ATA_REG_LBAM * 4);

CHECK:SPACING: No space is necessary after a cast
#1085: FILE: drivers/scsi/sata_nv.c:974:
+	ioport->lbah_addr	= (unsigned long) mmio + (ATA_REG_LBAH * 4);

CHECK:SPACING: No space is necessary after a cast
#1086: FILE: drivers/scsi/sata_nv.c:975:
+	ioport->device_addr	= (unsigned long) mmio + (ATA_REG_DEVICE * 4);

CHECK:SPACING: No space is necessary after a cast
#1088: FILE: drivers/scsi/sata_nv.c:977:
+	ioport->command_addr	= (unsigned long) mmio + (ATA_REG_STATUS * 4);

CHECK:SPACING: No space is necessary after a cast
#1090: FILE: drivers/scsi/sata_nv.c:979:
+	ioport->ctl_addr	= (unsigned long) mmio + 0x20;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: drivers/scsi/sata_nv.c:993:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1113: FILE: drivers/scsi/sata_nv.c:1002:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1151: FILE: drivers/scsi/sata_nv.c:1063:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1163: FILE: drivers/scsi/sata_nv.c:1075:
+^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1206: FILE: drivers/scsi/sata_nv.c:1157:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1220: FILE: drivers/scsi/sata_nv.c:1171:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1226: FILE: drivers/scsi/sata_nv.c:1177:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1228: FILE: drivers/scsi/sata_nv.c:1179:
+		printk(KERN_ERR "ata%u: BUG: timeout without command\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1232: FILE: drivers/scsi/sata_nv.c:1183:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1233: FILE: drivers/scsi/sata_nv.c:1184:
+	
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1240: FILE: drivers/scsi/sata_nv.c:1191:
+	printk(KERN_ERR "ata%u: command 0x%x timeout, stat 0x%x\n",

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1261: FILE: drivers/scsi/sata_nv.c:1212:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1283: FILE: drivers/scsi/sata_nv.c:1234:
+^I       $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1314: FILE: drivers/scsi/sata_nv.c:1265:
+		aprd = (idx < 5) ? &cpb->aprd[idx] : &pp->aprd[idx-5];
 		                                                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1318: FILE: drivers/scsi/sata_nv.c:1269:
+	if (idx > 5) {
+		cpb->next_aprd = (u64)(pp->aprd_dma + NV_ADMA_APRD_SZ * qc->tag);
+	}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1338: FILE: drivers/scsi/sata_nv.c:1289:
+	if (idx == qc->n_elem - 1) {
[...]
+	} else if (idx != 4) {
[...]

ERROR:SPACING: space required before the open parenthesis '('
#1367: FILE: drivers/scsi/sata_nv.c:1318:
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1367: FILE: drivers/scsi/sata_nv.c:1318:
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {
+		return;
+	}

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1371: FILE: drivers/scsi/sata_nv.c:1322:
+#if 0

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1386: FILE: drivers/scsi/sata_nv.c:1337:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1395: FILE: drivers/scsi/sata_nv.c:1346:
+#if 0

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1407: FILE: drivers/scsi/sata_nv.c:1358:
+		return ata_qc_issue_prot(qc);
+	} else {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1411: FILE: drivers/scsi/sata_nv.c:1362:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#1416: FILE: drivers/scsi/sata_nv.c:1367:
+		int i;
+		for (i = 0; i < qc->n_elem - 5; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1416: FILE: drivers/scsi/sata_nv.c:1367:
+		for (i = 0; i < qc->n_elem - 5; i++) {
+			nv_adma_dump_aprd(&pp->aprd[i]);
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1428: FILE: drivers/scsi/sata_nv.c:1379:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1511: FILE: drivers/scsi/sata_nv.c:1504:
+		void __iomem *mmio = __nv_adma_ctl_block(probe_ent->mmio_base, i);
+		writew(NV_ADMA_STAT_HOTPLUG | NV_ADMA_STAT_HOTUNPLUG,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: drivers/scsi/sata_nv.c:1509:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1531: FILE: drivers/scsi/sata_nv.c:1523:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1532: FILE: drivers/scsi/sata_nv.c:1524:
+		
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1542: FILE: drivers/scsi/sata_nv.c:1534:
+		void __iomem *mmio = __nv_adma_ctl_block(host_set->mmio_base, i);
+		adma_status = readw(mmio + NV_ADMA_STAT);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1544: FILE: drivers/scsi/sata_nv.c:1536:
+			printk(KERN_WARNING "nv_sata: "

WARNING:SPLIT_STRING: quoted string split across lines
#1545: FILE: drivers/scsi/sata_nv.c:1537:
+			printk(KERN_WARNING "nv_sata: "
+			       "port %d device added\n", i);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1549: FILE: drivers/scsi/sata_nv.c:1541:
+			printk(KERN_WARNING "nv_sata: "

WARNING:SPLIT_STRING: quoted string split across lines
#1550: FILE: drivers/scsi/sata_nv.c:1542:
+			printk(KERN_WARNING "nv_sata: "
+			       "port %d device removed\n", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1565: FILE: drivers/scsi/sata_nv.c:1564:
+	printk("%016llx %08x %02x %s %s %s\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1573: FILE: drivers/scsi/sata_nv.c:1572:
+}
+static void nv_adma_dump_iomem(void __iomem *m, int len)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1577: FILE: drivers/scsi/sata_nv.c:1576:
+	for (i = 0; i < len/16; i++) {
 	                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1578: FILE: drivers/scsi/sata_nv.c:1577:
+		printk(KERN_WARNING "%02x: ", 16*i);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1578: FILE: drivers/scsi/sata_nv.c:1577:
+		printk(KERN_WARNING "%02x: ", 16*i);
 		                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1580: FILE: drivers/scsi/sata_nv.c:1579:
+			printk("%02x%s", (u32)readb(m + 16*i + j),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1580: FILE: drivers/scsi/sata_nv.c:1579:
+			printk("%02x%s", (u32)readb(m + 16*i + j),
 			                                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1583: FILE: drivers/scsi/sata_nv.c:1582:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1589: FILE: drivers/scsi/sata_nv.c:1588:
+	printk("0x%04x %s %s %s 0x%02x 0x%02x\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1597: FILE: drivers/scsi/sata_nv.c:1596:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1601: FILE: drivers/scsi/sata_nv.c:1600:
+	void __iomem *mmio = nv_adma_ctl_block(ap);
+	nv_adma_dump_iomem(mmio, NV_ADMA_PORT_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1603: FILE: drivers/scsi/sata_nv.c:1602:
+^I^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1608: FILE: drivers/scsi/sata_nv.c:1607:
+	printk("resp_flags:   0x%02x\n", cpb->resp_flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1609: FILE: drivers/scsi/sata_nv.c:1608:
+	printk("ctl_flags:    0x%02x\n", cpb->ctl_flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1610: FILE: drivers/scsi/sata_nv.c:1609:
+	printk("len:          0x%02x\n", cpb->len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1611: FILE: drivers/scsi/sata_nv.c:1610:
+	printk("tag:          0x%02x\n", cpb->tag);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1612: FILE: drivers/scsi/sata_nv.c:1611:
+	printk("next_cpb_idx: 0x%02x\n", cpb->next_cpb_idx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1613: FILE: drivers/scsi/sata_nv.c:1612:
+	printk("tf:\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1614: FILE: drivers/scsi/sata_nv.c:1613:
+	for (i=0; i<12; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1614: FILE: drivers/scsi/sata_nv.c:1613:
+	for (i=0; i<12; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1614: FILE: drivers/scsi/sata_nv.c:1613:
+	for (i=0; i<12; i++) {
+		nv_adma_dump_cpb_tf(cpb->tf[i]);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1617: FILE: drivers/scsi/sata_nv.c:1616:
+	printk("aprd:\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1618: FILE: drivers/scsi/sata_nv.c:1617:
+	for (i=0; i<5; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1618: FILE: drivers/scsi/sata_nv.c:1617:
+	for (i=0; i<5; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1618: FILE: drivers/scsi/sata_nv.c:1617:
+	for (i=0; i<5; i++) {
+		nv_adma_dump_aprd(&cpb->aprd[i]);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1621: FILE: drivers/scsi/sata_nv.c:1620:
+	printk("next_aprd:    0x%016llx\n", cpb->next_aprd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1624: FILE: drivers/scsi/sata_nv.c:1623:
+#endif^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000094413.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 56 warnings, 58 checks, 1466 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000094413.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
