WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
diff -Nru a/Documentation/filesystems/driverfs.txt b/Documentation/filesystems/driverfs.txt

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#55: 
--- a/Documentation/filesystems/driverfs.txt	Thu Aug 22 13:39:15 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#94: FILE: drivers/base/base.h:12:
+extern struct device * get_device_locked(struct device *);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#94: FILE: drivers/base/base.h:12:
+extern struct device * get_device_locked(struct device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#94: FILE: drivers/base/base.h:12:
+extern struct device * get_device_locked(struct device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: drivers/base/bus.c:19:
+#define to_dev(node) container_of(node,struct device,bus_list)
                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: drivers/base/bus.c:19:
+#define to_dev(node) container_of(node,struct device,bus_list)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#107: FILE: drivers/base/bus.c:20:
+#define to_drv(node) container_of(node,struct device_driver,bus_list)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#107: FILE: drivers/base/bus.c:20:
+#define to_drv(node) container_of(node,struct device_driver,bus_list)
                                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: drivers/base/bus.c:32:
+ * Take device_lock and get the first node in the list. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/base/bus.c:35:
+ * It's still in the list, so we grab the next node and try that one. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: drivers/base/bus.c:39:
+ * On the next go-round, we decrement the reference count on @prev, so if $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: drivers/base/bus.c:46:
+	struct device * prev = NULL;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#156: FILE: drivers/base/bus.c:51:
+	list_for_each(node,&bus->devices) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#156: FILE: drivers/base/bus.c:51:
+	list_for_each(node,&bus->devices) {
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: drivers/base/bus.c:52:
+		struct device * dev = get_device_locked(to_dev(node));

WARNING:LINE_SPACING: Missing a blank line after declarations
#158: FILE: drivers/base/bus.c:53:
+		struct device * dev = get_device_locked(to_dev(node));
+		if (dev) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: drivers/base/bus.c:55:
+			error = callback(dev,data);
 			                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: drivers/base/bus.c:75:
+	struct device_driver * prev = NULL;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#207: FILE: drivers/base/bus.c:82:
+	list_for_each(node,&bus->drivers) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#207: FILE: drivers/base/bus.c:82:
+	list_for_each(node,&bus->drivers) {
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/base/bus.c:83:
+		struct device_driver * drv = get_driver(to_drv(node));

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: drivers/base/bus.c:84:
+		struct device_driver * drv = get_driver(to_drv(node));
+		if (drv) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/base/bus.c:86:
+			error = callback(drv,data);
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: drivers/base/core.c:28:
+#define to_dev(node) container_of(node,struct device,driver_list)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: drivers/base/core.c:28:
+#define to_dev(node) container_of(node,struct device,driver_list)
                                                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: drivers/base/core.c:137:
+	struct device * prev = NULL;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#340: FILE: drivers/base/core.c:140:
+	list_for_each(node,&drv->devices) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#340: FILE: drivers/base/core.c:140:
+	list_for_each(node,&drv->devices) {
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#341: FILE: drivers/base/core.c:141:
+		struct device * dev = get_device_locked(to_dev(node));

WARNING:LINE_SPACING: Missing a blank line after declarations
#342: FILE: drivers/base/core.c:142:
+		struct device * dev = get_device_locked(to_dev(node));
+		if (dev) {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#392: FILE: drivers/base/core.c:188:
+		list_add_tail(&dev->g_list,&dev->parent->g_list);
 		                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#392: FILE: drivers/base/core.c:188:
+		list_add_tail(&dev->g_list,&dev->parent->g_list);
 		                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#418: FILE: drivers/base/core.c:221:
+struct device * get_device_locked(struct device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#418: FILE: drivers/base/core.c:221:
+struct device * get_device_locked(struct device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#420: FILE: drivers/base/core.c:223:
+	struct device * ret = dev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#421: FILE: drivers/base/core.c:224:
+	struct device * ret = dev;
+	if (dev && atomic_read(&dev->refcount) > 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#428: FILE: drivers/base/core.c:231:
+struct device * get_device(struct device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#428: FILE: drivers/base/core.c:231:
+struct device * get_device(struct device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#430: FILE: drivers/base/core.c:233:
+	struct device * ret;

WARNING:LINE_SPACING: Missing a blank line after declarations
#431: FILE: drivers/base/core.c:234:
+	struct device * ret;
+	spin_lock(&device_lock);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#462: FILE: drivers/base/driver.c:13:
+#define to_dev(node) container_of(node,struct device,driver_list)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#462: FILE: drivers/base/driver.c:13:
+#define to_dev(node) container_of(node,struct device,driver_list)
                                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: drivers/base/driver.c:15:
+int driver_for_each_dev(struct device_driver * drv, void * data, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#465: FILE: drivers/base/driver.c:15:
+int driver_for_each_dev(struct device_driver * drv, void * data, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#465: FILE: drivers/base/driver.c:15:
+int driver_for_each_dev(struct device_driver * drv, void * data, 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#466: FILE: drivers/base/driver.c:16:
+			int (*callback)(struct device *, void * ))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#471: FILE: drivers/base/driver.c:19:
+	struct device * prev = NULL;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#489: FILE: drivers/base/driver.c:24:
+	list_for_each(node,&drv->devices) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#489: FILE: drivers/base/driver.c:24:
+	list_for_each(node,&drv->devices) {
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: drivers/base/driver.c:25:
+		struct device * dev = get_device_locked(to_dev(node));

WARNING:LINE_SPACING: Missing a blank line after declarations
#491: FILE: drivers/base/driver.c:26:
+		struct device * dev = get_device_locked(to_dev(node));
+		if (dev) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: drivers/base/driver.c:28:
+			error = callback(dev,data);
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#543: FILE: drivers/base/driver.c:93:
+	if (!atomic_dec_and_lock(&drv->refcount,&device_lock))
 	                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#543: FILE: drivers/base/driver.c:93:
+	if (!atomic_dec_and_lock(&drv->refcount,&device_lock))
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#560: FILE: drivers/base/interface.c:17:
+static DEVICE_ATTR(name,S_IRUGO,device_read_name,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#560: FILE: drivers/base/interface.c:17:
+static DEVICE_ATTR(name,S_IRUGO,device_read_name,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#560: FILE: drivers/base/interface.c:17:
+static DEVICE_ATTR(name,S_IRUGO,device_read_name,NULL);
                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#560: FILE: drivers/base/interface.c:17:
+static DEVICE_ATTR(name,S_IRUGO,device_read_name,NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#569: FILE: drivers/base/interface.c:88:
+static DEVICE_ATTR(power,S_IWUSR | S_IRUGO,
                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#569: FILE: drivers/base/interface.c:88:
+static DEVICE_ATTR(power,S_IWUSR | S_IRUGO,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#580: FILE: drivers/base/power.c:17:
+#define to_dev(node) container_of(node,struct device,g_list)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#580: FILE: drivers/base/power.c:17:
+#define to_dev(node) container_of(node,struct device,g_list)
                                                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#591: FILE: drivers/base/power.c:30:
+	struct list_head * node;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#592: FILE: drivers/base/power.c:31:
+	struct device * prev = NULL;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#612: FILE: drivers/base/power.c:37:
+	list_for_each(node,&device_root.g_list) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#612: FILE: drivers/base/power.c:37:
+	list_for_each(node,&device_root.g_list) {
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#613: FILE: drivers/base/power.c:38:
+		struct device * dev = get_device_locked(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#614: FILE: drivers/base/power.c:39:
+		struct device * dev = get_device_locked(dev);
+		if (dev) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#617: FILE: drivers/base/power.c:42:
+				error = dev->driver->suspend(dev,state,level);
 				                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#617: FILE: drivers/base/power.c:42:
+				error = dev->driver->suspend(dev,state,level);
 				                                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#637: FILE: drivers/base/power.c:64:
+	struct list_head * node;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#638: FILE: drivers/base/power.c:65:
+	struct device * prev = NULL;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#653: FILE: drivers/base/power.c:68:
+	list_for_each_prev(node,&device_root.g_list) {
 	                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#653: FILE: drivers/base/power.c:68:
+	list_for_each_prev(node,&device_root.g_list) {
 	                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#654: FILE: drivers/base/power.c:69:
+		struct device * dev = get_device_locked(to_dev(node));

WARNING:LINE_SPACING: Missing a blank line after declarations
#655: FILE: drivers/base/power.c:70:
+		struct device * dev = get_device_locked(to_dev(node));
+		if (dev) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#658: FILE: drivers/base/power.c:73:
+				dev->driver->resume(dev,level);
 				                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#676: FILE: drivers/base/power.c:95:
+	struct list_head * node;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#677: FILE: drivers/base/power.c:96:
+	struct device * prev = NULL;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#696: FILE: drivers/base/power.c:101:
+	list_for_each(node,&device_root.g_list) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#696: FILE: drivers/base/power.c:101:
+	list_for_each(node,&device_root.g_list) {
 	                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#697: FILE: drivers/base/power.c:102:
+		struct device * dev = get_device_locked(to_dev(node));

WARNING:LINE_SPACING: Missing a blank line after declarations
#698: FILE: drivers/base/power.c:103:
+		struct device * dev = get_device_locked(to_dev(node));
+		if (dev) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#721: FILE: drivers/pci/proc.c:381:
+static DEVICE_ATTR(irq,S_IRUGO,pci_show_irq,NULL);
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#721: FILE: drivers/pci/proc.c:381:
+static DEVICE_ATTR(irq,S_IRUGO,pci_show_irq,NULL);
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#721: FILE: drivers/pci/proc.c:381:
+static DEVICE_ATTR(irq,S_IRUGO,pci_show_irq,NULL);
                                            ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#721: FILE: drivers/pci/proc.c:381:
+static DEVICE_ATTR(irq,S_IRUGO,pci_show_irq,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: drivers/pci/proc.c:405:
+static DEVICE_ATTR(resource,S_IRUGO,pci_show_resources,NULL);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: drivers/pci/proc.c:405:
+static DEVICE_ATTR(resource,S_IRUGO,pci_show_resources,NULL);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: drivers/pci/proc.c:405:
+static DEVICE_ATTR(resource,S_IRUGO,pci_show_resources,NULL);
                                                       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#730: FILE: drivers/pci/proc.c:405:
+static DEVICE_ATTR(resource,S_IRUGO,pci_show_resources,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#742: FILE: drivers/scsi/scsi_scan.c:308:
+static DEVICE_ATTR(type,S_IRUGO,scsi_device_type_read,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#742: FILE: drivers/scsi/scsi_scan.c:308:
+static DEVICE_ATTR(type,S_IRUGO,scsi_device_type_read,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#742: FILE: drivers/scsi/scsi_scan.c:308:
+static DEVICE_ATTR(type,S_IRUGO,scsi_device_type_read,NULL);
                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#742: FILE: drivers/scsi/scsi_scan.c:308:
+static DEVICE_ATTR(type,S_IRUGO,scsi_device_type_read,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#754: FILE: drivers/scsi/sg.c:1404:
+static DEVICE_ATTR(kdev,S_IRUGO,sg_device_kdev_read,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#754: FILE: drivers/scsi/sg.c:1404:
+static DEVICE_ATTR(kdev,S_IRUGO,sg_device_kdev_read,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#754: FILE: drivers/scsi/sg.c:1404:
+static DEVICE_ATTR(kdev,S_IRUGO,sg_device_kdev_read,NULL);
                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#754: FILE: drivers/scsi/sg.c:1404:
+static DEVICE_ATTR(kdev,S_IRUGO,sg_device_kdev_read,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#762: FILE: drivers/scsi/sg.c:1411:
+static DEVICE_ATTR(type,S_IRUGO,sg_device_type_read,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#762: FILE: drivers/scsi/sg.c:1411:
+static DEVICE_ATTR(type,S_IRUGO,sg_device_type_read,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#762: FILE: drivers/scsi/sg.c:1411:
+static DEVICE_ATTR(type,S_IRUGO,sg_device_type_read,NULL);
                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#762: FILE: drivers/scsi/sg.c:1411:
+static DEVICE_ATTR(type,S_IRUGO,sg_device_type_read,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#774: FILE: drivers/scsi/sr.c:740:
+static DEVICE_ATTR(kdev,S_IRUGO,sr_device_kdev_read,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#774: FILE: drivers/scsi/sr.c:740:
+static DEVICE_ATTR(kdev,S_IRUGO,sr_device_kdev_read,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#774: FILE: drivers/scsi/sr.c:740:
+static DEVICE_ATTR(kdev,S_IRUGO,sr_device_kdev_read,NULL);
                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#774: FILE: drivers/scsi/sr.c:740:
+static DEVICE_ATTR(kdev,S_IRUGO,sr_device_kdev_read,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#782: FILE: drivers/scsi/sr.c:747:
+static DEVICE_ATTR(type,S_IRUGO,sr_device_type_read,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#782: FILE: drivers/scsi/sr.c:747:
+static DEVICE_ATTR(type,S_IRUGO,sr_device_type_read,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#782: FILE: drivers/scsi/sr.c:747:
+static DEVICE_ATTR(type,S_IRUGO,sr_device_type_read,NULL);
                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#782: FILE: drivers/scsi/sr.c:747:
+static DEVICE_ATTR(type,S_IRUGO,sr_device_type_read,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#794: FILE: drivers/scsi/st.c:3536:
+static DEVICE_ATTR(kdev,S_IRUGO,st_device_kdev_read,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#794: FILE: drivers/scsi/st.c:3536:
+static DEVICE_ATTR(kdev,S_IRUGO,st_device_kdev_read,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#794: FILE: drivers/scsi/st.c:3536:
+static DEVICE_ATTR(kdev,S_IRUGO,st_device_kdev_read,NULL);
                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#794: FILE: drivers/scsi/st.c:3536:
+static DEVICE_ATTR(kdev,S_IRUGO,st_device_kdev_read,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#802: FILE: drivers/scsi/st.c:3543:
+static DEVICE_ATTR(type,S_IRUGO,st_device_type_read,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#802: FILE: drivers/scsi/st.c:3543:
+static DEVICE_ATTR(type,S_IRUGO,st_device_type_read,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#802: FILE: drivers/scsi/st.c:3543:
+static DEVICE_ATTR(type,S_IRUGO,st_device_type_read,NULL);
                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#802: FILE: drivers/scsi/st.c:3543:
+static DEVICE_ATTR(type,S_IRUGO,st_device_type_read,NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#879: FILE: drivers/usb/core/devio.c:1085:
+		err ("USBDEVFS_CONNECT is no longer supported.");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#898: FILE: drivers/usb/core/hcd.c:728:
+	retval = usb_new_device (usb_dev, parent_dev);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#901: FILE: drivers/usb/core/hcd.c:730:
+		err("%s - usb_new_device failed with value %d", __FUNCTION__, retval);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#916: FILE: drivers/usb/core/hcd.h:258:
+extern int usb_new_device(struct usb_device *dev, struct device *parent);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#946: FILE: drivers/usb/core/hub.c:187:
+		dev = interface_to_usbdev (hub->intf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#947: FILE: drivers/usb/core/hub.c:188:
+		status = hub_clear_tt_buffer (dev, clear->devinfo, clear->tt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#978: FILE: drivers/usb/core/hub.c:265:
+	struct usb_device *dev = interface_to_usbdev (hub->intf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1009: FILE: drivers/usb/core/hub.c:451:
+		flush_scheduled_tasks ();

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1018: FILE: drivers/usb/core/hub.c:460:
+	if (hub->descriptor) {
+		kfree(hub->descriptor);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'desc->bInterfaceSubClass != 0'
#1043: FILE: drivers/usb/core/hub.c:482:
+	if ((desc->bInterfaceSubClass != 0) &&
+	    (desc->bInterfaceSubClass != 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'desc->bInterfaceSubClass != 1'
#1043: FILE: drivers/usb/core/hub.c:482:
+	if ((desc->bInterfaceSubClass != 0) &&
+	    (desc->bInterfaceSubClass != 1)) {

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceSubClass>
#1043: FILE: drivers/usb/core/hub.c:482:
+	if ((desc->bInterfaceSubClass != 0) &&

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#1054: FILE: drivers/usb/core/hub.c:490:
+	if (desc->bNumEndpoints != 1) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1109: FILE: drivers/usb/core/hub.c:537:
+		strcpy (intf->dev.name, "Hub/Port Status Changes");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1115: FILE: drivers/usb/core/hub.c:543:
+	hub_disconnect (intf);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1117: FILE: drivers/usb/core/hub.c:545:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1254: FILE: drivers/usb/core/usb.c:53:
+static int generic_probe (struct device *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1258: FILE: drivers/usb/core/usb.c:57:
+}
+static int generic_remove (struct device *dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1258: FILE: drivers/usb/core/usb.c:57:
+static int generic_remove (struct device *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1262: FILE: drivers/usb/core/usb.c:61:
+}
+static void generic_release (struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1262: FILE: drivers/usb/core/usb.c:61:
+static void generic_release (struct device_driver * drv)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1262: FILE: drivers/usb/core/usb.c:61:
+static void generic_release (struct device_driver * drv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: drivers/usb/core/usb.c:71:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1273: FILE: drivers/usb/core/usb.c:72:
+	
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1274: FILE: drivers/usb/core/usb.c:73:
+static int usb_device_probe(struct device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1276: FILE: drivers/usb/core/usb.c:75:
+	struct usb_interface * intf = to_usb_interface(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1277: FILE: drivers/usb/core/usb.c:76:
+	struct usb_driver * driver = to_usb_driver(dev->driver);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1281: FILE: drivers/usb/core/usb.c:80:
+	dbg("%s", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1286: FILE: drivers/usb/core/usb.c:85:
+	id = usb_match_id (intf, driver->id_table);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1288: FILE: drivers/usb/core/usb.c:87:
+		dbg ("%s - got id", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1288: FILE: drivers/usb/core/usb.c:87:
+		dbg ("%s - got id", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1289: FILE: drivers/usb/core/usb.c:88:
+		down (&driver->serialize);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1290: FILE: drivers/usb/core/usb.c:89:
+		error = driver->new_probe (intf, id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1291: FILE: drivers/usb/core/usb.c:90:
+		up (&driver->serialize);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1298: FILE: drivers/usb/core/usb.c:97:
+static int usb_device_remove(struct device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1300: FILE: drivers/usb/core/usb.c:99:
+	struct usb_interface * intf = list_entry(dev,struct usb_interface,dev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1300: FILE: drivers/usb/core/usb.c:99:
+	struct usb_interface * intf = list_entry(dev,struct usb_interface,dev);
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1300: FILE: drivers/usb/core/usb.c:99:
+	struct usb_interface * intf = list_entry(dev,struct usb_interface,dev);
 	                                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: drivers/usb/core/usb.c:137:
+		err("problem %d when registering driver %s",
+			retval, new_driver->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1435: FILE: drivers/usb/core/usb.c:273:
+	remove_driver (&driver->driver);

CHECK:CAMELCASE: Avoid CamelCase: <bNumInterfaces>
#1461: FILE: drivers/usb/core/usb.c:324:
+	for (i = 0; i < dev->actconfig->bNumInterfaces; i++)

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#1463: FILE: drivers/usb/core/usb.c:326:
+			return dev->actconfig->interface[i].altsetting[0].bInterfaceNumber;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1531: FILE: drivers/usb/core/usb.c:566:
+static int usb_device_match (struct device *dev, struct device_driver *drv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1578: FILE: drivers/usb/core/usb.c:576:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1579: FILE: drivers/usb/core/usb.c:577:
+	id = usb_match_id (intf, usb_drv->id_table);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1589: FILE: drivers/usb/core/usb.c:584:
 
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1598: FILE: drivers/usb/core/usb.c:738:
+static DEVICE_ATTR(configuration,S_IRUGO,show_config,NULL);
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1598: FILE: drivers/usb/core/usb.c:738:
+static DEVICE_ATTR(configuration,S_IRUGO,show_config,NULL);
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1598: FILE: drivers/usb/core/usb.c:738:
+static DEVICE_ATTR(configuration,S_IRUGO,show_config,NULL);
                                                     ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1598: FILE: drivers/usb/core/usb.c:738:
+static DEVICE_ATTR(configuration,S_IRUGO,show_config,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1607: FILE: drivers/usb/core/usb.c:753:
+static DEVICE_ATTR(altsetting,S_IRUGO,show_altsetting,NULL);
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1607: FILE: drivers/usb/core/usb.c:753:
+static DEVICE_ATTR(altsetting,S_IRUGO,show_altsetting,NULL);
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1607: FILE: drivers/usb/core/usb.c:753:
+static DEVICE_ATTR(altsetting,S_IRUGO,show_altsetting,NULL);
                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1607: FILE: drivers/usb/core/usb.c:753:
+static DEVICE_ATTR(altsetting,S_IRUGO,show_altsetting,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1616: FILE: drivers/usb/core/usb.c:772:
+static DEVICE_ATTR(product,S_IRUGO,show_product,NULL);
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1616: FILE: drivers/usb/core/usb.c:772:
+static DEVICE_ATTR(product,S_IRUGO,show_product,NULL);
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1616: FILE: drivers/usb/core/usb.c:772:
+static DEVICE_ATTR(product,S_IRUGO,show_product,NULL);
                                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1616: FILE: drivers/usb/core/usb.c:772:
+static DEVICE_ATTR(product,S_IRUGO,show_product,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1625: FILE: drivers/usb/core/usb.c:792:
+static DEVICE_ATTR(manufacturer,S_IRUGO,show_manufacturer,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1625: FILE: drivers/usb/core/usb.c:792:
+static DEVICE_ATTR(manufacturer,S_IRUGO,show_manufacturer,NULL);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1625: FILE: drivers/usb/core/usb.c:792:
+static DEVICE_ATTR(manufacturer,S_IRUGO,show_manufacturer,NULL);
                                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1625: FILE: drivers/usb/core/usb.c:792:
+static DEVICE_ATTR(manufacturer,S_IRUGO,show_manufacturer,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1699: FILE: drivers/usb/core/usb.c:812:
+static DEVICE_ATTR(serial,S_IRUGO,show_serial,NULL);
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1699: FILE: drivers/usb/core/usb.c:812:
+static DEVICE_ATTR(serial,S_IRUGO,show_serial,NULL);
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1699: FILE: drivers/usb/core/usb.c:812:
+static DEVICE_ATTR(serial,S_IRUGO,show_serial,NULL);
                                              ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1699: FILE: drivers/usb/core/usb.c:812:
+static DEVICE_ATTR(serial,S_IRUGO,show_serial,NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1731: FILE: drivers/usb/core/usb.c:1230:
+	sprintf (&dev->dev.bus_id[0], "%s-%s",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1739: FILE: drivers/usb/core/usb.c:1237:
+	device_create_file (&dev->dev, &dev_attr_configuration);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1750: FILE: drivers/usb/core/usb.c:1246:
+	 * Remember, interfaces get bound to drivers, not devices. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1759: FILE: drivers/usb/core/usb.c:1253:
+		sprintf (&interface->dev.bus_id[0], "%s-%s:%d",

CHECK:CAMELCASE: Avoid CamelCase: <iInterface>
#1762: FILE: drivers/usb/core/usb.c:1256:
+		if (!desc->iInterface

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1763: FILE: drivers/usb/core/usb.c:1257:
+		if (!desc->iInterface
+				|| usb_string (dev, desc->iInterface,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1763: FILE: drivers/usb/core/usb.c:1257:
+				|| usb_string (dev, desc->iInterface,

WARNING:SIZEOF_PARENTHESIS: sizeof interface->dev.name should be sizeof(interface->dev.name)
#1765: FILE: drivers/usb/core/usb.c:1259:
+					sizeof interface->dev.name) <= 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1771: FILE: drivers/usb/core/usb.c:1265:
+			sprintf (&interface->dev.name[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1772: FILE: drivers/usb/core/usb.c:1266:
+			sprintf (&interface->dev.name[0],
+				"usb-%s-%s interface %d",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1776: FILE: drivers/usb/core/usb.c:1270:
+		dbg ("%s - registering %s", __FUNCTION__, interface->dev.bus_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1776: FILE: drivers/usb/core/usb.c:1270:
+		dbg ("%s - registering %s", __FUNCTION__, interface->dev.bus_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1777: FILE: drivers/usb/core/usb.c:1271:
+		device_register (&interface->dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1778: FILE: drivers/usb/core/usb.c:1272:
+		device_create_file (&interface->dev, &dev_attr_altsetting);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1824: FILE: drivers/usb/core/usb.c:1473:
+EXPORT_SYMBOL(usb_if_to_ifnum);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1836: FILE: drivers/usb/host/ehci-dbg.c:255:
+static DEVICE_ATTR (async, S_IRUSR, show_async, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#1836: FILE: drivers/usb/host/ehci-dbg.c:255:
+static DEVICE_ATTR (async, S_IRUSR, show_async, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1845: FILE: drivers/usb/host/ehci-dbg.c:363:
+static DEVICE_ATTR (periodic, S_IRUSR, show_periodic, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#1845: FILE: drivers/usb/host/ehci-dbg.c:363:
+static DEVICE_ATTR (periodic, S_IRUSR, show_periodic, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1861: FILE: drivers/usb/input/hid-core.c:1344:
+	struct usb_device *dev = interface_to_usbdev (intf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1895: FILE: drivers/usb/input/hid-core.c:1498:
+static int hid_probe (struct usb_interface *intf, const struct usb_device_id *id)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1907: FILE: drivers/usb/input/hid-core.c:1507:
+	if (!(hid = usb_hid_configure(intf)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1973: FILE: drivers/usb/serial/belkin_sa.c:536:
+	usb_register (&belkin_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1981: FILE: drivers/usb/serial/belkin_sa.c:544:
+	usb_deregister (&belkin_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2006: FILE: drivers/usb/serial/cyberjack.c:471:
+	usb_register (&cyberjack_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2014: FILE: drivers/usb/serial/cyberjack.c:481:
+	usb_deregister (&cyberjack_driver);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2026: FILE: drivers/usb/serial/digi_acceleport.c:480:
+static struct usb_device_id id_table_combined [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2041: FILE: drivers/usb/serial/digi_acceleport.c:505:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2049: FILE: drivers/usb/serial/digi_acceleport.c:2037:
+	usb_register (&digi_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2057: FILE: drivers/usb/serial/digi_acceleport.c:2045:
+	usb_deregister (&digi_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2091: FILE: drivers/usb/serial/empeg.c:578:
+	usb_serial_register (&empeg_device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2092: FILE: drivers/usb/serial/empeg.c:579:
+	usb_register (&empeg_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2105: FILE: drivers/usb/serial/empeg.c:592:
+	usb_register (&empeg_driver);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2125: FILE: drivers/usb/serial/ftdi_sio.c:143:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2147: FILE: drivers/usb/serial/ftdi_sio.c:954:
+	usb_register (&ftdi_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2155: FILE: drivers/usb/serial/ftdi_sio.c:963:
+	usb_deregister (&ftdi_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2179: FILE: drivers/usb/serial/io_edgeport.c:3058:
+	usb_register (&io_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2187: FILE: drivers/usb/serial/io_edgeport.c:3071:
+	usb_deregister (&io_driver);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2199: FILE: drivers/usb/serial/io_tables.h:64:
+static struct usb_device_id id_table_combined [] = {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2211: FILE: drivers/usb/serial/io_ti.c:145:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2233: FILE: drivers/usb/serial/io_ti.c:2668:
+	usb_register (&io_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2240: FILE: drivers/usb/serial/io_ti.c:2675:
+	usb_deregister (&io_driver);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2258: FILE: drivers/usb/serial/ipaq.c:104:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2299: FILE: drivers/usb/serial/ir-usb.c:616:
+	usb_register (&ir_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2307: FILE: drivers/usb/serial/ir-usb.c:624:
+	usb_deregister (&ir_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2318: FILE: drivers/usb/serial/keyspan.c:186:
+	usb_register (&keyspan_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2326: FILE: drivers/usb/serial/keyspan.c:195:
+	usb_deregister (&keyspan_driver);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2348: FILE: drivers/usb/serial/keyspan.h:438:
+^I.name =^I^I"keyspan",                $

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2364: FILE: drivers/usb/serial/keyspan_pda.c:143:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2386: FILE: drivers/usb/serial/keyspan_pda.c:872:
+	usb_register (&keyspan_pda_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2394: FILE: drivers/usb/serial/keyspan_pda.c:880:
+	usb_deregister (&keyspan_pda_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2418: FILE: drivers/usb/serial/kl5kusb105.c:1022:
+	usb_register (&kl5kusb105d_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2426: FILE: drivers/usb/serial/kl5kusb105.c:1031:
+	usb_deregister (&kl5kusb105d_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2450: FILE: drivers/usb/serial/mct_u232.c:792:
+	usb_register (&mct_u232_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2458: FILE: drivers/usb/serial/mct_u232.c:800:
+	usb_deregister (&mct_u232_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2483: FILE: drivers/usb/serial/omninet.c:380:
+	usb_register (&omninet_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2491: FILE: drivers/usb/serial/omninet.c:388:
+	usb_deregister (&omninet_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2515: FILE: drivers/usb/serial/pl2303.c:717:
+	usb_register (&pl2303_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2523: FILE: drivers/usb/serial/pl2303.c:725:
+	usb_deregister (&pl2303_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2548: FILE: drivers/usb/serial/safe_serial.c:444:
+	usb_register (&safe_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2555: FILE: drivers/usb/serial/safe_serial.c:451:
+	usb_deregister (&safe_driver);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2566: FILE: drivers/usb/serial/usb-serial.h:236:
+extern int usb_serial_probe(struct usb_interface *iface, const struct usb_device_id *id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2567: FILE: drivers/usb/serial/usb-serial.h:237:
+extern void usb_serial_disconnect(struct usb_interface *iface);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2598: FILE: drivers/usb/serial/usbserial.c:385:
+ * depending on the command line argument */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2633: FILE: drivers/usb/serial/usbserial.c:1158:
+int usb_serial_probe(struct usb_interface *interface,
 			       const struct usb_device_id *id)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2635: FILE: drivers/usb/serial/usbserial.c:1160:
+	struct usb_device *dev = interface_to_usbdev (interface);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2679: FILE: drivers/usb/serial/usbserial.c:1253:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2760: FILE: drivers/usb/serial/usbserial.c:1675:
+			usb_serial_disconnect (serial->interface);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2769: FILE: drivers/usb/serial/usbserial.c:1689:
+EXPORT_SYMBOL(usb_serial_disconnect);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2781: FILE: drivers/usb/serial/visor.c:200:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2803: FILE: drivers/usb/serial/visor.c:769:
+	usb_register (&visor_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2811: FILE: drivers/usb/serial/visor.c:778:
+	usb_deregister (&visor_driver);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2823: FILE: drivers/usb/serial/whiteheat.c:113:
+static struct usb_device_id id_table_combined [] = {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2845: FILE: drivers/usb/serial/whiteheat.c:686:
+	usb_register (&whiteheat_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2853: FILE: drivers/usb/serial/whiteheat.c:694:
+	usb_deregister (&whiteheat_driver);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2980: FILE: fs/partitions/check.c:178:
+static DEVICE_ATTR(kdev,S_IRUGO,partition_device_kdev_read,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2980: FILE: fs/partitions/check.c:178:
+static DEVICE_ATTR(kdev,S_IRUGO,partition_device_kdev_read,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2980: FILE: fs/partitions/check.c:178:
+static DEVICE_ATTR(kdev,S_IRUGO,partition_device_kdev_read,NULL);
                                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2980: FILE: fs/partitions/check.c:178:
+static DEVICE_ATTR(kdev,S_IRUGO,partition_device_kdev_read,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2988: FILE: fs/partitions/check.c:185:
+static DEVICE_ATTR(type,S_IRUGO,partition_device_type_read,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2988: FILE: fs/partitions/check.c:185:
+static DEVICE_ATTR(type,S_IRUGO,partition_device_type_read,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2988: FILE: fs/partitions/check.c:185:
+static DEVICE_ATTR(type,S_IRUGO,partition_device_type_read,NULL);
                                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2988: FILE: fs/partitions/check.c:185:
+static DEVICE_ATTR(type,S_IRUGO,partition_device_type_read,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3000: FILE: include/linux/device.h:96:
+#define BUS_ATTR(_name,_mode,_show,_store)	\
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3000: FILE: include/linux/device.h:96:
+#define BUS_ATTR(_name,_mode,_show,_store)	\
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3000: FILE: include/linux/device.h:96:
+#define BUS_ATTR(_name,_mode,_show,_store)	\
                                   ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3000: FILE: include/linux/device.h:96:
+#define BUS_ATTR(_name,_mode,_show,_store)	\
 struct bus_attribute bus_attr_##_name = { 		\
+	.attr = {.name = __stringify(_name), .mode = _mode },	\
 	.show	= _show,				\
 	.store	= _store,				\
 };

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3012: FILE: include/linux/device.h:153:
+#define DRIVER_ATTR(_name,_mode,_show,_store)	\
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3012: FILE: include/linux/device.h:153:
+#define DRIVER_ATTR(_name,_mode,_show,_store)	\
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3012: FILE: include/linux/device.h:153:
+#define DRIVER_ATTR(_name,_mode,_show,_store)	\
                                      ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3012: FILE: include/linux/device.h:153:
+#define DRIVER_ATTR(_name,_mode,_show,_store)	\
 struct driver_attribute driver_attr_##_name = { 		\
+	.attr = {.name = __stringify(_name), .mode = _mode },	\
 	.show	= _show,				\
 	.store	= _store,				\
 };

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3024: FILE: include/linux/device.h:225:
+#define DEVICE_ATTR(_name,_mode,_show,_store) \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3024: FILE: include/linux/device.h:225:
+#define DEVICE_ATTR(_name,_mode,_show,_store) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3024: FILE: include/linux/device.h:225:
+#define DEVICE_ATTR(_name,_mode,_show,_store) \
                                      ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3024: FILE: include/linux/device.h:225:
+#define DEVICE_ATTR(_name,_mode,_show,_store) \
 struct device_attribute dev_attr_##_name = { 		\
+	.attr = {.name = __stringify(_name), .mode = _mode },	\
 	.show	= _show,				\
 	.store	= _store,				\
 };

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3032: FILE: include/linux/device.h:232:
 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3046: FILE: include/linux/device.h:264:
+extern struct device * get_device(struct device * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3046: FILE: include/linux/device.h:264:
+extern struct device * get_device(struct device * dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3046: FILE: include/linux/device.h:264:
+extern struct device * get_device(struct device * dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3066: FILE: include/linux/usb.h:294:
+extern int usb_if_to_ifnum(struct usb_interface *iface);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3067: FILE: include/linux/usb.h:295:
+^I$

WARNING:SPACING: Unnecessary space before function pointer arguments
#3085: FILE: include/linux/usb.h:647:
+	int	(*new_probe)	(struct usb_interface *intf, const struct usb_device_id *id);

WARNING:SPACING: Unnecessary space before function pointer arguments
#3086: FILE: include/linux/usb.h:648:
+	void	(*new_disco)	(struct usb_interface *intf);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3105: FILE: include/linux/usb.h:675:
 };
+#define	to_usb_driver(d) container_of(d, struct usb_driver, driver)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437811.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 149 errors, 116 warnings, 25 checks, 2724 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437811.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
