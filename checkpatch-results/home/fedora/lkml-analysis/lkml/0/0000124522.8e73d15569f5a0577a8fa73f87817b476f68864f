WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#36: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#76: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:36:
+ * $Id: ipath_mad.c 4491 2005-12-15 22:20:31Z rjwalsh $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#86: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:46:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#87: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:47:
+#define IB_SMP_INVALID_FIELD	__constant_htons(0x001C)

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#91: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:51:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#104: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:64:
+{
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#123: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:83:
+} __attribute__ ((packed));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#135: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:95:
+	uint32_t vendor, boardid, majrev, minrev;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#159: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:119:
+	uint32_t t = to_idev(ibdev)->ib_unit;

CHECK:SPACING: No space is necessary after a cast
#161: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:121:
+	u64 *p = (u64 *) smp->data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#213: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:173:
+} __attribute__ ((packed));

CHECK:BRACES: Unbalanced braces around else statement
#261: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:221:
+	else {

CHECK:SPACING: No space is necessary after a cast
#318: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:278:
+	u16 *p = (u16 *) smp->data;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#342: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:302:
+	uint32_t lportnum = be32_to_cpu(smp->attr_mod);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#345: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:305:
+	uint32_t flags;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#385: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:345:
+#if 0

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != lpp->linkwidthenabled'
#387: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:347:
+	if (tmp && (tmp != lpp->linkwidthenabled)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#438: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:398:
+#if 0

CHECK:CAMELCASE: Avoid CamelCase: <iba_Subn_PortInfo>
#439: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:399:
+	tmp = BF_GET(g.madp, iba_Subn_PortInfo, FIELD_PortPhysicalState);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != lpp->portphysicalstate'
#440: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:400:
+	if (tmp && (tmp != lpp->portphysicalstate)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != lpp->linkdowndefaultstate'
#446: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:406:
+	if (tmp && (tmp != lpp->linkdowndefaultstate)) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#454: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:414:
+#if 0

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != lpp->linkspeedenabled'
#456: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:416:
+	if (tmp && (tmp != lpp->linkspeedenabled)) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#490: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:450:
+#if 0

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp != lpp->operationalvls'
#501: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:461:
+	if (tmp && (tmp != lpp->operationalvls)) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#509: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:469:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#518: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:478:
+#if 0

CHECK:SPACING: No space is necessary after a cast
#552: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:512:
+	u16 *p = (u16 *) smp->data;

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#561: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:521:
+#define IB_PMA_CLASS_PORT_INFO		__constant_htons(0x0001)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#562: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:522:
+#define IB_PMA_PORT_SAMPLES_CONTROL	__constant_htons(0x0010)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#563: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:523:
+#define IB_PMA_PORT_SAMPLES_RESULT	__constant_htons(0x0011)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#564: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:524:
+#define IB_PMA_PORT_COUNTERS		__constant_htons(0x0012)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#565: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:525:
+#define IB_PMA_PORT_COUNTERS_EXT	__constant_htons(0x001D)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#566: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:526:
+#define IB_PMA_PORT_SAMPLES_RESULT_EXT	__constant_htons(0x001E)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#581: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:541:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#601: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:561:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#618: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:578:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#624: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:584:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#631: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:591:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#654: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:614:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#669: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:629:
+} __attribute__ ((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#674: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:634:
+	/*
+	   struct ib_pma_classportinfo *p =

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#796: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:756:
+	p->extended_width = __constant_cpu_to_be16(0x80000000); /* 64 bits */

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#912: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:872:
+	if (dev->mkey_lease_timeout && jiffies >= dev->mkey_lease_timeout) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 28 warnings, 17 checks, 1020 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
