ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#50: 
--- a/net/ipv4/ip_proc.c	Wed Oct 16 21:44:36 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#59: FILE: net/ipv4/ip_proc.c:73:
+		pos:	   sizeof(loff_t) * 8 - 7;
 		   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#59: FILE: net/ipv4/ip_proc.c:73:
+		pos:	   sizeof(loff_t) * 8 - 7;

WARNING:INLINE: plain inline is preferred over __inline__
#62: FILE: net/ipv4/ip_proc.c:76:
+static __inline__ struct neighbour *neigh_get_bucket(loff_t *pos)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#65: FILE: net/ipv4/ip_proc.c:79:
+	struct arp_iter_state* state = (struct arp_iter_state *)pos;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#82: FILE: net/ipv4/ip_proc.c:96:
+static __inline__ struct pneigh_entry *pneigh_get_bucket(loff_t *pos)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#85: FILE: net/ipv4/ip_proc.c:99:
+	struct arp_iter_state* state = (struct arp_iter_state *)pos;

WARNING:INLINE: plain inline is preferred over __inline__
#101: FILE: net/ipv4/ip_proc.c:115:
+static __inline__ void *arp_get_bucket(struct seq_file *seq, loff_t *pos)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#106: FILE: net/ipv4/ip_proc.c:120:
+		struct arp_iter_state* state = (struct arp_iter_state *)pos;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#132: FILE: net/ipv4/ip_proc.c:142:
+	struct arp_iter_state* state;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#143: FILE: net/ipv4/ip_proc.c:153:
+		rc = n = n->next;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:INLINE: plain inline is preferred over __inline__
#183: FILE: net/ipv4/ip_proc.c:192:
+static __inline__ void arp_format_neigh_entry(struct seq_file *seq,

CHECK:BRACES: braces {} should be used on all arms of this statement
#212: FILE: net/ipv4/ip_proc.c:205:
+	if (hatype == ARPHRD_AX25 || hatype == ARPHRD_NETROM)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#214: FILE: net/ipv4/ip_proc.c:207:
+	else {
[...]
+	for (k = 0, j = 0; k < HBUFFERLEN - 3 && j < dev->addr_len; j++) {

CHECK:BRACES: Unbalanced braces around else statement
#214: FILE: net/ipv4/ip_proc.c:207:
+	else {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#260: FILE: net/ipv4/ip_proc.c:218:
+	sprintf(tbuf, "%u.%u.%u.%u", NIPQUAD(*(u32*)n->primary_key));

WARNING:INLINE: plain inline is preferred over __inline__
#267: FILE: net/ipv4/ip_proc.c:224:
+static __inline__ void arp_format_pneigh_entry(struct seq_file *seq,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#277: FILE: net/ipv4/ip_proc.c:232:
+	sprintf(tbuf, "%u.%u.%u.%u", NIPQUAD(*(u32*)n->key));

CHECK:BRACES: Unbalanced braces around else statement
#293: FILE: net/ipv4/ip_proc.c:243:
+	else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422616.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 7 warnings, 4 checks, 249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422616.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
