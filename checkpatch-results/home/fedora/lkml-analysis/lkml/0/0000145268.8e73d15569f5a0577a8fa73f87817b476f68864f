WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
For my modification of XFree86 keyboard event handling I need to detect *duration*

WARNING:TYPO_SPELLING: 'adjustements' may be misspelled - perhaps 'adjustments'?
#30: 
presence of adjustements to timeofday the difference/duration information is
            ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: drivers/input/evdev.c:41:
+        int time_kind;      /* which time to use for the timestamps. Monotonic or timeofday */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/input/evdev.c:41:
+        int time_kind;      /* which time to use for the timestamps. Monotonic or timeofday */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: drivers/input/evdev.c:50:
+void $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#77: FILE: drivers/input/evdev.c:51:
+mem_copy_time(struct timeval *a, struct timeval* b)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: drivers/input/evdev.c:53:
+        memcpy(a, b, sizeof(struct timeval));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/input/evdev.c:53:
+        memcpy(a, b, sizeof(struct timeval));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/input/evdev.c:61:
+        struct timeval mtv, dtv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/input/evdev.c:61:
+        struct timeval mtv, dtv;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: drivers/input/evdev.c:62:
+        /* `do_posix_clock_monotonic_gettime' delivers a different struct,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/input/evdev.c:63:
+         * but i do the conversion immediately, and once. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#89: FILE: drivers/input/evdev.c:63:
+         * but i do the conversion immediately, and once. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/input/evdev.c:64:
+        struct timespec mts;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/input/evdev.c:64:
+        struct timespec mts;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/input/evdev.c:65:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: drivers/input/evdev.c:65:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/input/evdev.c:65:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: drivers/input/evdev.c:66:
+        do_posix_clock_monotonic_gettime(&mts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/input/evdev.c:66:
+        do_posix_clock_monotonic_gettime(&mts);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: drivers/input/evdev.c:67:
+        mtv.tv_sec = mts.tv_sec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/input/evdev.c:67:
+        mtv.tv_sec = mts.tv_sec;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: drivers/input/evdev.c:68:
+        mtv.tv_usec = mts.tv_nsec / 1000; /* should I >> 10 ? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/input/evdev.c:68:
+        mtv.tv_usec = mts.tv_nsec / 1000; /* should I >> 10 ? */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: drivers/input/evdev.c:69:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: drivers/input/evdev.c:69:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/input/evdev.c:69:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: drivers/input/evdev.c:70:
+        do_gettimeofday(&dtv);         /* for backward compatibility: */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/input/evdev.c:70:
+        do_gettimeofday(&dtv);         /* for backward compatibility: */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/input/evdev.c:75:
+                if (list->time_kind == EV_USE_DAY_TIME)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/input/evdev.c:75:
+                if (list->time_kind == EV_USE_DAY_TIME)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: drivers/input/evdev.c:76:
+                        mem_copy_time(&list->buffer[list->head].time,&dtv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/input/evdev.c:76:
+                        mem_copy_time(&list->buffer[list->head].time,&dtv);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#103: FILE: drivers/input/evdev.c:76:
+                        mem_copy_time(&list->buffer[list->head].time,&dtv);
                                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#103: FILE: drivers/input/evdev.c:76:
+                        mem_copy_time(&list->buffer[list->head].time,&dtv);
                                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/input/evdev.c:77:
+                else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/input/evdev.c:77:
+                else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: drivers/input/evdev.c:78:
+                        mem_copy_time(&list->buffer[list->head].time,&mtv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/input/evdev.c:78:
+                        mem_copy_time(&list->buffer[list->head].time,&mtv);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#105: FILE: drivers/input/evdev.c:78:
+                        mem_copy_time(&list->buffer[list->head].time,&mtv);
                                                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#105: FILE: drivers/input/evdev.c:78:
+                        mem_copy_time(&list->buffer[list->head].time,&mtv);
                                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/input/evdev.c:89:
+                        if (list->time_kind == EV_USE_DAY_TIME)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/input/evdev.c:89:
+                        if (list->time_kind == EV_USE_DAY_TIME)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/input/evdev.c:90:
+                                mem_copy_time(&list->buffer[list->head].time,&dtv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/input/evdev.c:90:
+                                mem_copy_time(&list->buffer[list->head].time,&dtv);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#116: FILE: drivers/input/evdev.c:90:
+                                mem_copy_time(&list->buffer[list->head].time,&dtv);
                                                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#116: FILE: drivers/input/evdev.c:90:
+                                mem_copy_time(&list->buffer[list->head].time,&dtv);
                                                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: drivers/input/evdev.c:91:
+                        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/input/evdev.c:91:
+                        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: drivers/input/evdev.c:92:
+                                mem_copy_time(&list->buffer[list->head].time,&mtv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/input/evdev.c:92:
+                                mem_copy_time(&list->buffer[list->head].time,&mtv);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#118: FILE: drivers/input/evdev.c:92:
+                                mem_copy_time(&list->buffer[list->head].time,&mtv);
                                                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#118: FILE: drivers/input/evdev.c:92:
+                                mem_copy_time(&list->buffer[list->head].time,&mtv);
                                                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/input/evdev.c:165:
+        list->time_kind = EV_USE_DAY_TIME; /* for backward compatibility! */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/input/evdev.c:165:
+        list->time_kind = EV_USE_DAY_TIME; /* for backward compatibility! */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: drivers/input/evdev.c:402:
+                case EVIOCTIME:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/input/evdev.c:402:
+                case EVIOCTIME:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: drivers/input/evdev.c:403:
+                        switch (arg) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/input/evdev.c:403:
+                        switch (arg) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: drivers/input/evdev.c:404:
+                        case EV_USE_MONOTONIC_TIME:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/input/evdev.c:404:
+                        case EV_USE_MONOTONIC_TIME:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: drivers/input/evdev.c:405:
+                                list->time_kind = EV_USE_MONOTONIC_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/input/evdev.c:405:
+                                list->time_kind = EV_USE_MONOTONIC_TIME;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: drivers/input/evdev.c:408:
+                                list->time_kind = EV_USE_DAY_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/input/evdev.c:408:
+                                list->time_kind = EV_USE_DAY_TIME;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/input/evdev.c:410:
+                        default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/input/evdev.c:411:
+                                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/input/evdev.c:411:
+                                return -EINVAL;$

WARNING:LONG_LINE_COMMENT: line length of 124 exceeds 100 columns
#155: FILE: include/linux/input.h:81:
+#define EVIOCTIME		_IOW('E', 0x91, int)			/* choose what kind of time to use for timestamps */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: include/linux/input.h:84:
+ * Time used to timestamp $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: include/linux/input.h:89:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145268.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 29 warnings, 1 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145268.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
