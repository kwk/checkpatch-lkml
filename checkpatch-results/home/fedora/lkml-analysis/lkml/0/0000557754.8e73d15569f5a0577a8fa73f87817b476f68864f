ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: CREDITS:498:
+D: kswapd improvements regarding process RSS limits $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: CREDITS:500:
+S: PO Box 305, Strawberry Hills NSW 2012, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: CREDITS:501:
+S: Australia $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: CREDITS:507:
+D: kswapd improvements regarding process RSS limits $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: CREDITS:509:
+S: PO Box 305, Strawberry Hills NSW 2012, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: CREDITS:510:
+S: Australia $

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#203: FILE: arch/alpha/kernel/osf_sys.c:1197:
+		r.ru_maxrss = current->maxrss  >  current->cmaxrss ? current->maxrss : current->cmaxrss;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#205: FILE: arch/alpha/kernel/osf_sys.c:1199:
+		r.ru_idrss = current->irss + current>cirss;
 		                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->maj_flt_rate
#240: FILE: arch/arm/mm/fault-common.c:104:
+		update_flt_rate(&(tsk->maj_flt_rate), &(tsk->maj_flt_time));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->maj_flt_time
#240: FILE: arch/arm/mm/fault-common.c:104:
+		update_flt_rate(&(tsk->maj_flt_rate), &(tsk->maj_flt_time));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: arch/arm/mm/fault-common.c:105:
+#endif^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->min_flt_rate
#246: FILE: arch/arm/mm/fault-common.c:110:
+		update_flt_rate(&(tsk->min_flt_rate), &(tsk->min_flt_time));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->min_flt_time
#246: FILE: arch/arm/mm/fault-common.c:110:
+		update_flt_rate(&(tsk->min_flt_rate), &(tsk->min_flt_time));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: arch/arm/mm/fault-common.c:111:
+#endif^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->maj_flt_rate
#300: FILE: arch/i386/mm/fault.c:205:
+		update_flt_rate(&(tsk->maj_flt_rate), &(tsk->maj_flt_time));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->maj_flt_time
#300: FILE: arch/i386/mm/fault.c:205:
+		update_flt_rate(&(tsk->maj_flt_rate), &(tsk->maj_flt_time));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: arch/i386/mm/fault.c:206:
+#endif^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->min_flt_rate
#306: FILE: arch/i386/mm/fault.c:211:
+		update_flt_rate(&(tsk->min_flt_rate), &(tsk->min_flt_time));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->min_flt_time
#306: FILE: arch/i386/mm/fault.c:211:
+		update_flt_rate(&(tsk->min_flt_rate), &(tsk->min_flt_time));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: arch/i386/mm/fault.c:212:
+#endif^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->mm->rss'
#341: FILE: arch/ia64/ia32/binfmt_elf32.c:207:
+			if (++(current->mm->rss) > current->mm->maxrss)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#520: FILE: drivers/acpi/include/acgcc.h:4:
+ *       $Revision: 1.1.1.1 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#537: FILE: drivers/acpi/include/aclinux.h:4:
+ *       $Revision: 1.1.1.1 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#554: FILE: drivers/acpi/include/actbl1.h:4:
+ *       $Revision: 1.1.1.1 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#571: FILE: drivers/acpi/include/actbl2.h:4:
+ *       $Revision: 1.1.1.1 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#588: FILE: drivers/acpi/include/actbl71.h:6:
+ *       $Revision: 1.1.1.1 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#605: FILE: drivers/acpi/namespace/nsinit.c:4:
+ *              $Revision: 1.1.1.1 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#622: FILE: drivers/acpi/tables/tbconvrt.c:4:
+ *              $Revision: 1.1.1.1 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#639: FILE: drivers/acpi/tables/tbxfroot.c:4:
+ *              $Revision: 1.1.1.1 $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#672: FILE: drivers/scsi/osst.c:19:
+  $Header: /wrk/CVSROOT/linux-2.4/drivers/scsi/osst.c,v 1.1.1.1 2001/01/04 23:22:39 peterc Exp $

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#680: FILE: drivers/scsi/osst.c:26:
+static const char * cvsid = "$Id: osst.c,v 1.1.1.1 2001/01/04 23:22:39 peterc Exp $";

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#680: FILE: drivers/scsi/osst.c:26:
+static const char * cvsid = "$Id: osst.c,v 1.1.1.1 2001/01/04 23:22:39 peterc Exp $";

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#695: FILE: drivers/scsi/osst.h:2:
+ *	$Header: /wrk/CVSROOT/linux-2.4/drivers/scsi/osst.h,v 1.1.1.1 2001/01/04 23:22:39 peterc Exp $

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#695: FILE: drivers/scsi/osst.h:2:
+ *	$Header: /wrk/CVSROOT/linux-2.4/drivers/scsi/osst.h,v 1.1.1.1 2001/01/04 23:22:39 peterc Exp $

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#712: FILE: drivers/scsi/osst_options.h:11:
+   $Header: /wrk/CVSROOT/linux-2.4/drivers/scsi/osst_options.h,v 1.1.1.1 2001/01/04 23:22:39 peterc Exp $

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#712: FILE: drivers/scsi/osst_options.h:11:
+   $Header: /wrk/CVSROOT/linux-2.4/drivers/scsi/osst_options.h,v 1.1.1.1 2001/01/04 23:22:39 peterc Exp $

ERROR:SPACING: space required after that ',' (ctx:OxV)
#790: FILE: fs/proc/base.c:45:
+int proc_pid_rss_read(struct task_struct*,char*);
                                          ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);
                                               ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);
                                                                         ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct*' should also have an identifier name
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file*' should also have an identifier name
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t*' should also have an identifier name
#791: FILE: fs/proc/base.c:46:
+ssize_t proc_pid_rss_write(struct task_struct*,struct file*,char*,size_t,loff_t*);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#801: FILE: fs/proc/base.c:319:
+static struct file_operations proc_rss_file_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#802: FILE: fs/proc/base.c:320:
+	read:		proc_info_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#803: FILE: fs/proc/base.c:321:
+	write:		proc_pid_rss_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#803: FILE: fs/proc/base.c:321:
+	write:		proc_pid_rss_write,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#807: FILE: fs/proc/base.c:325:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: fs/proc/base.c:535:
+  E(PROC_PID_RSS,^I"rss",^I^IS_IFREG|S_IRUGO|S_IWUSR),$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#826: FILE: fs/proc/base.c:535:
+  E(PROC_PID_RSS,	"rss",		S_IFREG|S_IRUGO|S_IWUSR),
                  	      		       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#826: FILE: fs/proc/base.c:535:
+  E(PROC_PID_RSS,	"rss",		S_IFREG|S_IRUGO|S_IWUSR),
                  	      		               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#826: FILE: fs/proc/base.c:535:
+  E(PROC_PID_RSS,	"rss",		S_IFREG|S_IRUGO|S_IWUSR),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'occurence' may be misspelled - perhaps 'occurrence'?
#867: FILE: include/linux/sched.h:357:
+/* major and minor page fault rates and time of occurence */
                                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#888: FILE: include/linux/swap.h:112:
+#ifdef CONFIG_RSS_HARDLIMIT $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#889: FILE: include/linux/swap.h:113:
+extern int try_to_swap_out_page(unsigned int gfp_mask);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#914: FILE: kernel/exit.c:313:
+^I^I/* $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#945: FILE: kernel/fork.c:289:
+	tsk->cmaxrss = tsk->cirss = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#947: FILE: kernel/fork.c:291:
+	tsk->maj_flt_time = tsk->min_flt_time = tsk->start_time / HZ;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#948: FILE: kernel/fork.c:292:
+	tsk->maj_flt_rate = tsk->min_flt_rate = 0;

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#966: FILE: kernel/sys.c:1082:
+		current->mm->rss_limit = (new_rlim.rlim_cur == RLIM_INFINITY) ? ULONG_MAX : (new_rlim.rlim_cur >> PAGE_SHIFT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1017: FILE: kernel/timer.c:572:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1152: FILE: mm/vmscan.c:306:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1156: FILE: mm/vmscan.c:310:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1156: FILE: mm/vmscan.c:310:
+
+	

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1162: FILE: mm/vmscan.c:316:
+	printk("Starting krssd\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krssd', this function's name, in a string
#1162: FILE: mm/vmscan.c:316:
+	printk("Starting krssd\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1165: FILE: mm/vmscan.c:319:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1165: FILE: mm/vmscan.c:319:
+	for (;;) {
+		

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1176: FILE: mm/vmscan.c:330:
+^I^I * so that swap_out_mm can sleep (processes can $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1178: FILE: mm/vmscan.c:332:
+^I^I * Using PIDS rather than proc_t pointers also $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1179: FILE: mm/vmscan.c:333:
+^I^I * reduces the time holding tasklist_lock. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1190: FILE: mm/vmscan.c:344:
+^I^I^Ioldp = &init_task;^I$

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1201: FILE: mm/vmscan.c:355:
+		for (i = 0; i < nprocs; i ++) {
 		                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1203: FILE: mm/vmscan.c:357:
+			struct mm_struct *mm;
+			read_lock(&tasklist_lock);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1205: FILE: mm/vmscan.c:359:
+			if (p && (mm = p->mm))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1219: FILE: mm/vmscan.c:373:
+^I^I^I * TODO: think about hysteresis --- track $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: mm/vmscan.c:376:
+^I^I^Iwhile ((rss = mm->rss) > mm->rss_limit && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1223: FILE: mm/vmscan.c:377:
+^I^I^I    (swap_out_mm(mm, GFP_KSWAPD) || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: mm/vmscan.c:377:
+			while ((rss = mm->rss) > mm->rss_limit && 
+			    (swap_out_mm(mm, GFP_KSWAPD) || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1262: FILE: fs/proc/rss.c:1:
+/* fs/proc/rss.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1262: FILE: fs/proc/rss.c:1:
+/* fs/proc/rss.c 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1262: FILE: fs/proc/rss.c:1:
+/* fs/proc/rss.c 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1264: FILE: fs/proc/rss.c:3:
+ * 15 March 2000, Kingsley Cheung $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1265: FILE: fs/proc/rss.c:4:
+ * Support added for page fault calculation and /proc/pid/rss. $

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#1278: FILE: fs/proc/rss.c:17:
+#include <asm/processor.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1279: FILE: fs/proc/rss.c:18:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1281: FILE: fs/proc/rss.c:20:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1282: FILE: fs/proc/rss.c:21:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1286: FILE: fs/proc/rss.c:25:
+ * rates displayed in /proc/<pid>/rss.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1289: FILE: fs/proc/rss.c:28:
+unsigned long mov_ave_table[MOV_AVE_TABLE_SIZE] = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1290: FILE: fs/proc/rss.c:29:
+{ 1000, 800, 640, 512, 410, 328, 262, 210, 168, 134, 107, 86, $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1290: FILE: fs/proc/rss.c:29:
+unsigned long mov_ave_table[MOV_AVE_TABLE_SIZE] = 
+{ 1000, 800, 640, 512, 410, 328, 262, 210, 168, 134, 107, 86, 

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1291: FILE: fs/proc/rss.c:30:
+  69, 55, 44, 35, 28, 23, 18, 14, 12, 9, 7, 6, 5, 4, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1291: FILE: fs/proc/rss.c:30:
+  69, 55, 44, 35, 28, 23, 18, 14, 12, 9, 7, 6, 5, 4, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: fs/proc/rss.c:31:
+  3, 2, 2, 2, 1, 1, 1, 1, 1 };$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1294: FILE: fs/proc/rss.c:33:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1296: FILE: fs/proc/rss.c:35:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1297: FILE: fs/proc/rss.c:36:
+/* Support for /proc/<pid>/rss $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1301: FILE: fs/proc/rss.c:40:
+ * of file operations.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1304: FILE: fs/proc/rss.c:43:
+ *^I- current RSS limit $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1311: FILE: fs/proc/rss.c:50:
+ * descriptor. To obtain more recent data, the file must be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1312: FILE: fs/proc/rss.c:51:
+ * closed and opened again. The file is readable by all everyone. $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1318: FILE: fs/proc/rss.c:57:
+	int count;
+	task_lock(tsk);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->maj_flt_rate
#1321: FILE: fs/proc/rss.c:60:
+	decay_flt_rate(&(tsk->maj_flt_rate), &(tsk->maj_flt_time));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->maj_flt_time
#1321: FILE: fs/proc/rss.c:60:
+	decay_flt_rate(&(tsk->maj_flt_rate), &(tsk->maj_flt_time));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1322: FILE: fs/proc/rss.c:61:
+^Idecay_flt_rate(&(tsk->min_flt_rate), &(tsk->min_flt_time)); $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->min_flt_rate
#1322: FILE: fs/proc/rss.c:61:
+	decay_flt_rate(&(tsk->min_flt_rate), &(tsk->min_flt_time)); 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->min_flt_time
#1322: FILE: fs/proc/rss.c:61:
+	decay_flt_rate(&(tsk->min_flt_rate), &(tsk->min_flt_time)); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1323: FILE: fs/proc/rss.c:62:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1325: FILE: fs/proc/rss.c:64:
+	count = sprintf(buf,
+	    "%ld %ld %lu %lu %lu\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1336: FILE: fs/proc/rss.c:75:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buffer' - possible side-effects?
#1338: FILE: fs/proc/rss.c:77:
+#define skip_space(buffer)                   \
+do {                                         \
+    while (*(buffer) && isspace(*(buffer)))  \
+      (buffer)++;                            \
+} while(0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 4)
#1339: FILE: fs/proc/rss.c:78:
+do {                                         \
+    while (*(buffer) && isspace(*(buffer)))  \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1340: FILE: fs/proc/rss.c:79:
+    while (*(buffer) && isspace(*(buffer)))  \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1340: FILE: fs/proc/rss.c:79:
+    while (*(buffer) && isspace(*(buffer)))  \
+      (buffer)++;                            \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: fs/proc/rss.c:80:
+      (buffer)++;                            \$

ERROR:SPACING: space required before the open parenthesis '('
#1342: FILE: fs/proc/rss.c:81:
+} while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1344: FILE: fs/proc/rss.c:83:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1349: FILE: fs/proc/rss.c:88:
+ */^I       $

CHECK:SPACING: No space is necessary after a cast
#1354: FILE: fs/proc/rss.c:93:
+	for (p = (char *) buf, i = 0; i < count && *p; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1359: FILE: fs/proc/rss.c:98:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1362: FILE: fs/proc/rss.c:101:
+		if (*p == '-' && isdigit(*(p+1))) {
 		                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1365: FILE: fs/proc/rss.c:104:
+^I^I$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1367: FILE: fs/proc/rss.c:106:
+		numbers[i] = simple_strtoul(p, &p, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#1369: FILE: fs/proc/rss.c:108:
+			numbers[i] = - numbers[i];
 			             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1374: FILE: fs/proc/rss.c:113:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1383: FILE: fs/proc/rss.c:122:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'new_limit' - possible side-effects?
#1384: FILE: fs/proc/rss.c:123:
+#define bad_rss_limit(new_limit) \
+((new_limit) < 0 || (new_limit) > RLIM_INFINITY)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buf' - possible side-effects?
#1387: FILE: fs/proc/rss.c:126:
+#define getnextline(buf)    \
+({                          \
+        while (*(buf))      \
+                (buf)++;    \
+        (buf)++;            \
+})

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: fs/proc/rss.c:128:
+        while (*(buf))      \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: fs/proc/rss.c:128:
+        while (*(buf))      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1390: FILE: fs/proc/rss.c:129:
+                (buf)++;    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1390: FILE: fs/proc/rss.c:129:
+                (buf)++;    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1391: FILE: fs/proc/rss.c:130:
+        (buf)++;            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: fs/proc/rss.c:130:
+        (buf)++;            \$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1394: FILE: fs/proc/rss.c:133:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1397: FILE: fs/proc/rss.c:136:
+ * that may be written to it specify the current and maximum RSS limits $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1405: FILE: fs/proc/rss.c:144:
+ *      2. Whenever one number is specified on a line, the number is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1407: FILE: fs/proc/rss.c:146:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1414: FILE: fs/proc/rss.c:153:
+ *      5. The limits must lie between the range 0 and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1424: FILE: fs/proc/rss.c:163:
+ * written.  $

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1427: FILE: fs/proc/rss.c:166:
+ssize_t proc_pid_rss_write(struct task_struct *tsk, struct file *file, const char *buf, size_t count, loff_t *ppos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1431: FILE: fs/proc/rss.c:170:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1432: FILE: fs/proc/rss.c:171:
+^Ichar *page, *p; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1434: FILE: fs/proc/rss.c:173:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1435: FILE: fs/proc/rss.c:174:
+^I/* buffer to write to */   $

CHECK:SPACING: No space is necessary after a cast
#1436: FILE: fs/proc/rss.c:175:
+	if (!(page = (char * ) __get_free_page(GFP_KERNEL)))

ERROR:POINTER_LOCATION: "(foo * )" should be "(foo *)"
#1436: FILE: fs/proc/rss.c:175:
+	if (!(page = (char * ) __get_free_page(GFP_KERNEL)))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1436: FILE: fs/proc/rss.c:175:
+	if (!(page = (char * ) __get_free_page(GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1436: FILE: fs/proc/rss.c:175:
+	if (!(page = (char * ) __get_free_page(GFP_KERNEL)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1438: FILE: fs/proc/rss.c:177:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1452: FILE: fs/proc/rss.c:191:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1459: FILE: fs/proc/rss.c:198:
+		if ((res = get_unsigned_numbers(p, numbers, 2)) < 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1460: FILE: fs/proc/rss.c:199:
+^I^I^Iret = -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1470: FILE: fs/proc/rss.c:209:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1472: FILE: fs/proc/rss.c:211:
+^I^I^Iif (bad_rss_limit(new_rss.rlim_cur) || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1475: FILE: fs/proc/rss.c:214:
+^I^I^I^Iret = -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1477: FILE: fs/proc/rss.c:216:
+^I^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1478: FILE: fs/proc/rss.c:217:
+^I^I^I$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1480: FILE: fs/proc/rss.c:219:
+			if (new_rss.rlim_max > tsk->rlim[RLIMIT_RSS].rlim_max
+			    && !capable(CAP_SYS_RESOURCE)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1481: FILE: fs/proc/rss.c:220:
+^I^I^I^Iret = -EPERM; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1484: FILE: fs/proc/rss.c:223:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1492: FILE: fs/proc/rss.c:231:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1493: FILE: fs/proc/rss.c:232:
+^I*ppos += ret;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1495: FILE: fs/proc/rss.c:234:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1497: FILE: fs/proc/rss.c:236:
+^Ifree_page((unsigned long) page);  $

CHECK:SPACING: No space is necessary after a cast
#1497: FILE: fs/proc/rss.c:236:
+	free_page((unsigned long) page);  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1498: FILE: fs/proc/rss.c:237:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000557754.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 86 errors, 47 warnings, 39 checks, 1040 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000557754.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
