ERROR:TRAILING_WHITESPACE: trailing whitespace
#40: FILE: arch/i386/kernel/suspend.c:33:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: arch/i386/kernel/suspend.c:38:
+ * many assumptions about the layout of the stack this far down.) Also, the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#46: FILE: arch/i386/kernel/suspend.c:39:
+ * handy little __builtin_frame_pointer(level) where level > 0, is blatantly $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#47: FILE: arch/i386/kernel/suspend.c:40:
+ * buggy - it returns the value of the stack at the proper location, not the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: arch/i386/kernel/suspend.c:42:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: arch/i386/kernel/suspend.c:47:
+ * place. $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#56: FILE: arch/i386/kernel/suspend.c:49:
+static inline void save_processor_context (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: arch/i386/kernel/suspend.c:67:
+^I * so it's avoided. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: arch/i386/kernel/suspend.c:87:
+^I * control registers $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: arch/i386/kernel/suspend.c:102:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: arch/i386/kernel/suspend.c:108:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: arch/i386/kernel/suspend.c:109:
+ * Note that it is critical that this function is declared inline.  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#121: FILE: arch/i386/kernel/suspend.c:114:
+static inline void restore_processor_context (void)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#129: FILE: arch/i386/kernel/suspend.c:122:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: arch/i386/kernel/suspend.c:130:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: arch/i386/kernel/suspend.c:142:
+^I * note that even though gcc has constructs to specify memory $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: arch/i386/kernel/suspend.c:145:
+^I * bad since we don't have a stack set up when we enter, and we $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#196: FILE: arch/i386/kernel/suspend.c:199:
+	struct tss_struct * t = &init_tss[nr];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#198: FILE: arch/i386/kernel/suspend.c:201:
+	set_tss_desc(nr,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
 	                   	                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#198: FILE: arch/i386/kernel/suspend.c:201:
+	set_tss_desc(nr,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
 	                   	                                                                       ^^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 189 exceeds 100 columns
#198: FILE: arch/i386/kernel/suspend.c:201:
+	set_tss_desc(nr,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: arch/i386/kernel/suspend.c:201:
+	set_tss_desc(nr,t);	/* This just modifies memory; should not be neccessary. But... This is neccessary, because 386 hardware has concept of busy tsc or some similar stupidity. */
 	               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/i386/kernel/suspend.c:202:
+        gdt_table[__TSS(nr)].b &= 0xfffffdff;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/i386/kernel/suspend.c:202:
+        gdt_table[__TSS(nr)].b &= 0xfffffdff;$

ERROR:SPACING: space required before the open brace '{'
#208: FILE: arch/i386/kernel/suspend.c:211:
+	if (current->thread.debugreg[7]){

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: arch/i386/kernel/suspend.c:212:
+                loaddebug(&current->thread, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/i386/kernel/suspend.c:212:
+                loaddebug(&current->thread, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: arch/i386/kernel/suspend.c:213:
+                loaddebug(&current->thread, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/i386/kernel/suspend.c:213:
+                loaddebug(&current->thread, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: arch/i386/kernel/suspend.c:214:
+                loaddebug(&current->thread, 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/i386/kernel/suspend.c:214:
+                loaddebug(&current->thread, 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: arch/i386/kernel/suspend.c:215:
+                loaddebug(&current->thread, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/i386/kernel/suspend.c:215:
+                loaddebug(&current->thread, 3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: arch/i386/kernel/suspend.c:216:
+                /* no 4 and 5 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/i386/kernel/suspend.c:217:
+                loaddebug(&current->thread, 6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/i386/kernel/suspend.c:217:
+                loaddebug(&current->thread, 6);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/i386/kernel/suspend.c:218:
+                loaddebug(&current->thread, 7);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/i386/kernel/suspend.c:218:
+                loaddebug(&current->thread, 7);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#218: FILE: arch/i386/kernel/suspend.c:221:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/i386/kernel/suspend.c:226:
+        /* restore FPU regs if necessary */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/i386/kernel/suspend.c:228:
+        kernel_fpu_end();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/i386/kernel/suspend.c:228:
+        kernel_fpu_end();$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#229: FILE: arch/i386/kernel/suspend.c:232:
+static int loop __nosavedata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#230: FILE: arch/i386/kernel/suspend.c:233:
+static int loop2 __nosavedata = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: arch/i386/kernel/suspend.c:240:
+ * stack pointer, but excluding the instruction pointer) will be loaded with $

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#252: FILE: arch/i386/kernel/suspend.c:255:
+		save_processor_context();	/* We need to capture registers and memory at "same time" */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#253: FILE: arch/i386/kernel/suspend.c:256:
+		do_magic_suspend_2();		/* If everything goes okay, this function does not return */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: arch/i386/kernel/suspend.c:261:
+^I * place in memory $

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: arch/i386/kernel/suspend.c:264:
+        __asm__( "movl %%ecx,%%cr3\n" ::"c"(__pa(swapper_pg_dir)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/i386/kernel/suspend.c:264:
+        __asm__( "movl %%ecx,%%cr3\n" ::"c"(__pa(swapper_pg_dir)));$

ERROR:SPACING: space prohibited after that open parenthesis '('
#261: FILE: arch/i386/kernel/suspend.c:264:
+        __asm__( "movl %%ecx,%%cr3\n" ::"c"(__pa(swapper_pg_dir)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: arch/i386/kernel/suspend.c:272:
+ * with 4MB page tables. That's why we require have_pse.  $

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#277: FILE: arch/i386/kernel/suspend.c:280:
+ * Critical section here: noone should touch saved memory after
                           ^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#283: FILE: arch/i386/kernel/suspend.c:286:
+	for (loop=0; loop < nr_copy_pages; loop++) {
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#285: FILE: arch/i386/kernel/suspend.c:288:
+		for (loop2=0; loop2 < PAGE_SIZE; loop2++) {
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#286: FILE: arch/i386/kernel/suspend.c:289:
+			*(((char *)((pagedir_nosave+loop)->orig_address))+loop2) =
 			                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#286: FILE: arch/i386/kernel/suspend.c:289:
+			*(((char *)((pagedir_nosave+loop)->orig_address))+loop2) =
 			                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#287: FILE: arch/i386/kernel/suspend.c:290:
+				*(((char *)((pagedir_nosave+loop)->address))+loop2);
 				                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#287: FILE: arch/i386/kernel/suspend.c:290:
+				*(((char *)((pagedir_nosave+loop)->address))+loop2);
 				                                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#295: FILE: arch/i386/kernel/suspend.c:298:
+/* Ahah, we now run with our old stack, and with registers copied from
+   suspend time */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#295: FILE: arch/i386/kernel/suspend.c:298:
+   suspend time */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#565: FILE: include/asm-i386/suspend.h:41:
+extern void do_fpu_end(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#566: FILE: include/asm-i386/suspend.h:42:
+extern void fix_processor_context(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#567: FILE: include/asm-i386/suspend.h:43:
+extern void do_magic(int resume);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#580: FILE: include/linux/suspend.h:61:
+
+

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#591: FILE: kernel/suspend.c:109:
+unsigned int nr_copy_pages __nosavedata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451846.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 19 warnings, 10 checks, 594 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451846.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
