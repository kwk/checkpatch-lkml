WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	           ChangeSet	1.1721  -> 1.1722 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	arch/ia64/sn/io/sn2/ml_iograph.c	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	arch/ia64/sn/io/sn2/ml_SN_init.c	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	arch/ia64/sn/io/sn2/klconflib.c	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	arch/ia64/sn/io/sn2/module.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	include/asm-ia64/sn/sn2/sn_private.h	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	arch/ia64/sn/kernel/sn2/prominfo_proc.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	arch/ia64/kernel/smpboot.c	1.47    -> 1.48   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	arch/ia64/sn/kernel/setup.c	1.33    -> 1.34   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	 arch/ia64/mm/numa.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	include/asm-ia64/numa.h	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	arch/ia64/sn/fakeprom/fpmem.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	arch/ia64/kernel/acpi.c	1.63    -> 1.64   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	arch/ia64/mm/hugetlbpage.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#	arch/ia64/sn/io/sn2/shub.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#	arch/ia64/sn/io/sn2/klgraph.c	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#	arch/ia64/sn/io/sn2/ml_SN_intr.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#	arch/ia64/sn/io/machvec/pci_bus_cvlink.c	1.36    -> 1.37   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#	arch/ia64/mm/discontig.c	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#	arch/ia64/sn/kernel/sn2/sn2_smp.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c	1.29    -> 1.30   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# 04/03/28	pj@sgi.com	1.1722

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# Matthew Dobson's [PATCH]_nodemask_t_ia64_changes_[6_7] of 18 Mar 2004:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
#   Changes to ia64 specific code.  Untested.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
#   Code review & testing requested.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#90: 
--- a/arch/ia64/kernel/acpi.c	Mon Mar 29 01:03:56 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#125: FILE: arch/ia64/kernel/acpi.c:483:
+	printk(KERN_INFO "Number of logical nodes in system = %d\n", num_online_nodes());

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: arch/ia64/mm/discontig.c:160:
+	for(i = 0; i < nnode; i++)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sysfs_nodes)...) over kmalloc(sizeof(struct node)...)
#354: FILE: arch/ia64/mm/numa.c:57:
+	sysfs_nodes = kmalloc(sizeof(struct node) * num_online_nodes(), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#354: FILE: arch/ia64/mm/numa.c:57:
+	sysfs_nodes = kmalloc(sizeof(struct node) * num_online_nodes(), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: arch/ia64/sn/fakeprom/fpmem.c:29:
+ * ^I^Inum_nodes^Inumcpus$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: arch/ia64/sn/fakeprom/fpmem.c:62:
+ * For SN, this may not take an arg and gets the num_nodes from $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#399: FILE: arch/ia64/sn/fakeprom/fpmem.c:147:
+	int		num_nodes = GetNumNodes() ;

CHECK:CAMELCASE: Avoid CamelCase: <GetNumNodes>
#399: FILE: arch/ia64/sn/fakeprom/fpmem.c:147:
+	int		num_nodes = GetNumNodes() ;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#408: FILE: arch/ia64/sn/fakeprom/fpmem.c:156:
+	for (cnode=0; cnode<num_nodes; cnode++) {
 	          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#408: FILE: arch/ia64/sn/fakeprom/fpmem.c:156:
+	for (cnode=0; cnode<num_nodes; cnode++) {
 	                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: arch/ia64/sn/io/sn2/module.c:198:
+    for_each_online_node(node) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: arch/ia64/sn/io/sn2/module.c:213:
+    for (node = num_online_nodes(); node < numionodes; node++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c:2642:
+                if (numionodes == num_online_nodes())$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c:2642:
+                if (numionodes == num_online_nodes())$

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c:2655:
+                if (numionodes == num_online_nodes())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c:2655:
+                if (numionodes == num_online_nodes())$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: arch/ia64/sn/io/sn2/shub.c:168:
+        if (cnode < 0 || cnode >= num_online_nodes())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: arch/ia64/sn/io/sn2/shub.c:168:
+        if (cnode < 0 || cnode >= num_online_nodes())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#577: FILE: arch/ia64/sn/io/sn2/shub.c:243:
+	for_each_online_node(cnode) {
 	    shub_mmr_write(cnode, SH_NI0_LLP_ERR, 0L);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#631: FILE: arch/ia64/sn/io/sn2/shub.c:461:
+	sn_linkstats = kmalloc(num_online_nodes() * sizeof(struct s_linkstats), GFP_KERNEL);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#681: FILE: arch/ia64/sn/kernel/setup.c:489:
+		buddy_nasid = cnodeid_to_nasid(numa_node_id() == num_online_nodes()-1 ? 0 : numa_node_id()+ 1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#681: FILE: arch/ia64/sn/kernel/setup.c:489:
+		buddy_nasid = cnodeid_to_nasid(numa_node_id() == num_online_nodes()-1 ? 0 : numa_node_id()+ 1);
 		                                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#681: FILE: arch/ia64/sn/kernel/setup.c:489:
+		buddy_nasid = cnodeid_to_nasid(numa_node_id() == num_online_nodes()-1 ? 0 : numa_node_id()+ 1);
 		                                                                                          ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#696: FILE: arch/ia64/sn/kernel/sn2/prominfo_proc.c:325:
+	proc_entries = kmalloc(num_online_nodes() * sizeof(struct proc_dir_entry *),
 			       GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#754: FILE: include/asm-ia64/numa.h:62:
+#define node_distance(from,to) (numa_slit[from * num_online_nodes() + to])
                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'from' may be better as '(from)' to avoid precedence issues
#754: FILE: include/asm-ia64/numa.h:62:
+#define node_distance(from,to) (numa_slit[from * num_online_nodes() + to])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'to' may be better as '(to)' to avoid precedence issues
#754: FILE: include/asm-ia64/numa.h:62:
+#define node_distance(from,to) (numa_slit[from * num_online_nodes() + to])

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#766: FILE: include/asm-ia64/sn/sn2/sn_private.h:90:
+extern void replicate_kernel_text(void);  /* TODO: is this used??? */

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#769: FILE: include/asm-ia64/sn/sn2/sn_private.h:92:
+extern void setup_replication_mask(void); /* TODO: is this used??? */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000292509.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 48 warnings, 8 checks, 568 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000292509.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
