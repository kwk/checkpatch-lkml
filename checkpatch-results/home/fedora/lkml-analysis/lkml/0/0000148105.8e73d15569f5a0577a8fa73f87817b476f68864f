WARNING:TYPO_SPELLING: 'trys' may be misspelled - perhaps 'tries'?
#40: 
list. If that alloctype has insufficient free blocks it trys to
                                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
The other functions do basically the same thing they did before, they just get

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: mm/page_alloc.c:349:
+	freelist = zone->free_area_lists[get_pageblock_type(zone,page)];
 	                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#110: FILE: mm/page_alloc.c:371:
+	if (unlikely(order == MAX_ORDER-1)) zone->fallback_balance++;
 	                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#110: FILE: mm/page_alloc.c:371:
+	if (unlikely(order == MAX_ORDER-1)) zone->fallback_balance++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#130: FILE: mm/page_alloc.c:571:
+	if (unlikely(current_order == MAX_ORDER-1)) zone->fallback_balance--;
 	                                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#130: FILE: mm/page_alloc.c:571:
+	if (unlikely(current_order == MAX_ORDER-1)) zone->fallback_balance--;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: mm/page_alloc.c:578:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#141: FILE: mm/page_alloc.c:582:
+	/* Stub out for seperate review, NULL equates to no fallback*/
 	                ^^^^^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#144: FILE: mm/page_alloc.c:585:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#162: FILE: mm/page_alloc.c:602:
+		if (list_empty(&area->free_list)) continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: mm/page_alloc.c:604:
+ ^I^Iarea->nr_free--;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: mm/page_alloc.c:604:
+ ^I^Iarea->nr_free--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: mm/page_alloc.c:604:
+ ^I^Iarea->nr_free--;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#175: FILE: mm/page_alloc.c:609:
+	if (page == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#204: FILE: mm/page_alloc.c:633:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#222: FILE: mm/page_alloc.c:645:
+		if (page == NULL) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#223: FILE: mm/page_alloc.c:646:
+			if (current_order == 0) break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#268: FILE: mm/page_alloc.c:733:
+	for (type=0; type < RCLM_TYPES; type++) {
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#335: FILE: mm/page_alloc.c:1531:
+			for (type=0; type < RCLM_TYPES; type++) {
 			         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#360: FILE: mm/page_alloc.c:2251:
+		for (order = 0; order < MAX_ORDER-1; ++order) {
 		                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#363: FILE: mm/page_alloc.c:2254:
+			for (type=0; type < RCLM_TYPES; type++) {
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#374: FILE: mm/page_alloc.c:2265:
+		for (type=0; type < RCLM_TYPES; type++) {
 		         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#376: FILE: mm/page_alloc.c:2267:
+				[MAX_ORDER-1].nr_free;
 				          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148105.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 5 warnings, 9 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148105.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
