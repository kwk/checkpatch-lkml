ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#266: FILE: fs/autofs/symlink.c:17:
+	char *s=((struct autofs_symlink *)dentry->d_inode->generic_ip)->data;
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#285: FILE: fs/binfmt_misc.c:545:
loff_t *ppos)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:CAMELCASE: Avoid CamelCase: <Node>
#288: FILE: fs/binfmt_misc.c:547:
+	Node *e = file->f_dentry->d_inode->generic_ip;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#426: FILE: fs/jffs/inode-v23.c:445:
+	if (!(old_dir_f = (struct jffs_file *)old_dir->generic_ip)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#435: FILE: fs/jffs/inode-v23.c:459:
+	if (!(new_dir_f = (struct jffs_file *)new_dir->generic_ip)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#462: FILE: fs/jffs/inode-v23.c:671:
+	if (!(d = (struct jffs_file *)dir->generic_ip)) {

CHECK:SPACING: No space is necessary after a cast
#489: FILE: fs/jffs/inode-v23.c:975:
+	dir_f = (struct jffs_file *) dir->generic_ip;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#527: FILE: fs/jffs/inode-v23.c:1406:
+	if (!(f = (struct jffs_file *)inode->generic_ip)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#528: FILE: fs/jffs/inode-v23.c:1407:
+		D(printk("jffs_file_write(): inode->generic_ip = 0x%p\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jffs_file_write', this function's name, in a string
#528: FILE: fs/jffs/inode-v23.c:1407:
+		D(printk("jffs_file_write(): inode->generic_ip = 0x%p\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: fs/jffs/inode-v23.c:1408:
+		D(printk("jffs_file_write(): inode->generic_ip = 0x%p\n",
+				inode->generic_ip));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#563: FILE: fs/openpromfs/inode.c:75:
+	sprintf (buffer, "%8.8x\n", (u32)(long)(inode->generic_ip));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: fs/openpromfs/inode.c:763:
+^I^Iinode->generic_ip = (void *)(long)(((u16)dirnode) | $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: fs/openpromfs/inode.c:889:
+^Iinode->generic_ip = (void *)(long)(((u16)aliases) | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: include/linux/fs.h:473:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000239986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 3 warnings, 3 checks, 481 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000239986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
