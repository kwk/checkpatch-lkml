WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#40: 
12- LTTng architecture dependant instrumentation : PowerPC (32-bit/64-bit)
                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
OpenPGP public key:              http://krystal.dyndns.org:8080/key/compudj.gpg

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#51: 
--- a/arch/powerpc/kernel/entry_32.S

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#192: FILE: arch/powerpc/kernel/process.c:468:
+long original_kernel_thread(int (*fn) (void*), void* arg, unsigned long flags);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#192: FILE: arch/powerpc/kernel/process.c:468:
+long original_kernel_thread(int (*fn) (void*), void* arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#194: FILE: arch/powerpc/kernel/process.c:470:
+long kernel_thread(int (fn) (void *), void* arg, unsigned long flags)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: arch/powerpc/kernel/time.c:656:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#235: FILE: arch/powerpc/kernel/time.c:657:
+	trace_kernel_trap_entry(regs->trap, (void*)instruction_pointer(regs));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#274: FILE: arch/powerpc/kernel/traps.c:133:
+	printk("LTT NESTING LEVEL : %u ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: arch/powerpc/kernel/traps.c:134:
+	printk("LTT NESTING LEVEL : %u ",
+			ltt_nesting[smp_processor_id()]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#276: FILE: arch/powerpc/kernel/traps.c:135:
+	printk("\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#285: FILE: arch/powerpc/kernel/traps.c:179:
+	trace_kernel_trap_entry(regs->trap, (void*)instruction_pointer(regs));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#303: FILE: arch/powerpc/kernel/traps.c:890:
+	trace_kernel_trap_entry(regs->trap, (void*)instruction_pointer(regs));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#313: FILE: arch/powerpc/kernel/traps.c:975:
+	trace_kernel_trap_entry(regs->trap, (void*)instruction_pointer(regs));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#337: FILE: arch/powerpc/kernel/traps.c:1095:
+	trace_kernel_arch_syscall_entry(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#339: FILE: arch/powerpc/kernel/traps.c:1097:
+			(void*)instruction_pointer(regs));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#342: FILE: arch/powerpc/kernel/traps.c:1100:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: arch/powerpc/mm/fault.c:130:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#366: FILE: arch/powerpc/mm/fault.c:131:
+	trace_kernel_trap_entry(regs->trap, (void*)instruction_pointer(regs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address >= TASK_SIZE'
#390: FILE: arch/powerpc/mm/fault.c:162:
+	if (!user_mode(regs) && (address >= TASK_SIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#527: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000042448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 5 warnings, 4 checks, 388 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000042448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
