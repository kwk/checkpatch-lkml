WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
The previous code has so many problems that it appears to never have worked.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: drivers/net/mv643xx_eth.c:347:
+				pci_unmap_single(NULL, pkt_info.buf_ptr,
+					pkt_info.byte_cnt, PCI_DMA_TODEVICE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: drivers/net/mv643xx_eth.c:353:
+^I^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#80: FILE: drivers/net/mv643xx_eth.c:354:
+			/* 
+			 * Decrement the number of outstanding skbs counter on

WARNING:SPLIT_STRING: quoted string split across lines
#85: FILE: drivers/net/mv643xx_eth.c:359:
+				panic("ERROR - TX outstanding SKBs"
+						"counter is corrupted");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#85: FILE: drivers/net/mv643xx_eth.c:359:
+				panic("ERROR - TX outstanding SKBs"
+						"counter is corrupted");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 33)
#120: FILE: drivers/net/mv643xx_eth.c:1022:
+			else
+                                 pci_unmap_single(NULL, pkt_info.buf_ptr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: drivers/net/mv643xx_eth.c:1023:
+                                 pci_unmap_single(NULL, pkt_info.buf_ptr,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/net/mv643xx_eth.c:1023:
+                                 pci_unmap_single(NULL, pkt_info.buf_ptr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: drivers/net/mv643xx_eth.c:1024:
+                                             pkt_info.byte_cnt,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/net/mv643xx_eth.c:1024:
+                                 pci_unmap_single(NULL, pkt_info.buf_ptr,
+                                             pkt_info.byte_cnt,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/net/mv643xx_eth.c:1024:
+                                             pkt_info.byte_cnt,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: drivers/net/mv643xx_eth.c:1025:
+                                             PCI_DMA_TODEVICE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/net/mv643xx_eth.c:1025:
+                                             PCI_DMA_TODEVICE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: drivers/net/mv643xx_eth.c:1028:
+                                                  pkt_info.return_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/net/mv643xx_eth.c:1028:
+                                                  pkt_info.return_info);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: drivers/net/mv643xx_eth.c:1030:
+                        if (mp->tx_ring_skbs != 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/net/mv643xx_eth.c:1030:
+                        if (mp->tx_ring_skbs != 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: drivers/net/mv643xx_eth.c:1031:
+                                mp->tx_ring_skbs--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/net/mv643xx_eth.c:1031:
+                                mp->tx_ring_skbs--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: drivers/net/mv643xx_eth.c:1038:
+            MV64340_TX_QUEUE_SIZE > mp->tx_ring_skbs + MAX_DESCS_PER_SKB)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/net/mv643xx_eth.c:1038:
+            MV64340_TX_QUEUE_SIZE > mp->tx_ring_skbs + MAX_DESCS_PER_SKB)$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#139: FILE: drivers/net/mv643xx_eth.c:1038:
+            MV64340_TX_QUEUE_SIZE > mp->tx_ring_skbs + MAX_DESCS_PER_SKB)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:BRACES: Unbalanced braces around else statement
#156: FILE: drivers/net/mv643xx_eth.c:1142:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#165: FILE: drivers/net/mv643xx_eth.c:1151:
+			if (skb->nh.iph->protocol == IPPROTO_UDP) {
[...]
+			else if (skb->nh.iph->protocol == IPPROTO_TCP)
[...]
+			else {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#169: FILE: drivers/net/mv643xx_eth.c:1155:
+			}
+			else if (skb->nh.iph->protocol == IPPROTO_TCP)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#171: FILE: drivers/net/mv643xx_eth.c:1157:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#172: FILE: drivers/net/mv643xx_eth.c:1158:
+				printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/net/mv643xx_eth.c:1183:
+                pkt_info.cmd_sts = ETH_TX_FIRST_DESC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/net/mv643xx_eth.c:1183:
+                pkt_info.cmd_sts = ETH_TX_FIRST_DESC;$

CHECK:BRACES: braces {} should be used on all arms of this statement
#215: FILE: drivers/net/mv643xx_eth.c:1191:
+			if (skb->nh.iph->protocol == IPPROTO_UDP) {
[...]
+			else if (skb->nh.iph->protocol == IPPROTO_TCP)
[...]
+			else {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#219: FILE: drivers/net/mv643xx_eth.c:1195:
+			}
+			else if (skb->nh.iph->protocol == IPPROTO_TCP)

CHECK:BRACES: Unbalanced braces around else statement
#221: FILE: drivers/net/mv643xx_eth.c:1197:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#222: FILE: drivers/net/mv643xx_eth.c:1198:
+				printk(KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/net/mv643xx_eth.c:1257:
+	pkt_info.buf_ptr = pci_map_single(0, skb->data, skb->len,
+							PCI_DMA_TODEVICE);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status == ETH_ERROR'
#254: FILE: drivers/net/mv643xx_eth.c:1260:
+	if ((status == ETH_ERROR) || (status == ETH_QUEUE_FULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status == ETH_QUEUE_FULL'
#254: FILE: drivers/net/mv643xx_eth.c:1260:
+	if ((status == ETH_ERROR) || (status == ETH_QUEUE_FULL))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#255: FILE: drivers/net/mv643xx_eth.c:1261:
+		printk(KERN_ERR "%s: Error on transmitting packet\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/net/mv643xx_eth.c:1262:
+		printk(KERN_ERR "%s: Error on transmitting packet\n",
+			       dev->name);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#284: FILE: drivers/net/mv643xx_eth.c:2254:
+	/*
+	 * The hardware requires that each buffer that is <= 8 bytes

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: drivers/net/mv643xx_eth.c:2257:
+        if (p_pkt_info->byte_cnt <= 8 && p_pkt_info->buf_ptr & 0x7) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: drivers/net/mv643xx_eth.c:2257:
+        if (p_pkt_info->byte_cnt <= 8 && p_pkt_info->buf_ptr & 0x7) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: drivers/net/mv643xx_eth.c:2258:
+                printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: drivers/net/mv643xx_eth.c:2258:
+                printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#288: FILE: drivers/net/mv643xx_eth.c:2258:
+                printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: drivers/net/mv643xx_eth.c:2261:
+                return ETH_ERROR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/net/mv643xx_eth.c:2261:
+                return ETH_ERROR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: drivers/net/mv643xx_eth.c:2262:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/net/mv643xx_eth.c:2262:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: drivers/net/mv643xx_eth.c:2285:
+                first_descriptor = current_descriptor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/net/mv643xx_eth.c:2285:
+                first_descriptor = current_descriptor;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: drivers/net/mv643xx_eth.c:2287:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/net/mv643xx_eth.c:2287:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: drivers/net/mv643xx_eth.c:2288:
+                tx_first_desc = mp->tx_first_desc_q;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/net/mv643xx_eth.c:2288:
+                tx_first_desc = mp->tx_first_desc_q;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: drivers/net/mv643xx_eth.c:2289:
+                first_descriptor = &mp->p_tx_desc_area[tx_first_desc];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/net/mv643xx_eth.c:2289:
+                first_descriptor = &mp->p_tx_desc_area[tx_first_desc];$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#365: FILE: drivers/net/mv643xx_eth.c:2290:
+		BUG_ON(first_descriptor == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!first_descriptor"
#365: FILE: drivers/net/mv643xx_eth.c:2290:
+		BUG_ON(first_descriptor == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/net/mv643xx_eth.c:2292:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/net/mv643xx_eth.c:2292:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: drivers/net/mv643xx_eth.c:2294:
+        if (command & ETH_TX_LAST_DESC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/net/mv643xx_eth.c:2294:
+        if (command & ETH_TX_LAST_DESC) {$

WARNING:MEMORY_BARRIER: memory barrier without comment
#381: FILE: drivers/net/mv643xx_eth.c:2298:
+		wmb();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#396: FILE: drivers/net/mv643xx_eth.c:2308:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: drivers/net/mv643xx_eth.c:2398:
+        int tx_busy_desc = mp->tx_first_desc_q;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/net/mv643xx_eth.c:2398:
+        int tx_busy_desc = mp->tx_first_desc_q;$

WARNING:MEMORY_BARRIER: memory barrier without comment
#509: FILE: drivers/net/mv643xx_eth.c:2503:
+	rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#526: FILE: drivers/net/mv643xx_eth.c:2547:
+	wmb();

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#546: FILE: drivers/net/mv643xx_eth.h:521:
+	struct eth_rx_desc		* p_rx_desc_area;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#552: FILE: drivers/net/mv643xx_eth.h:526:
+	struct eth_tx_desc		* p_tx_desc_area;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000223400.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 34 warnings, 13 checks, 496 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000223400.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
