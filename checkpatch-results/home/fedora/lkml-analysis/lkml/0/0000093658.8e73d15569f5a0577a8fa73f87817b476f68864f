WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
I added an "adma" boolean flag to simplify testing the different code paths.

CHECK:BIT_MACRO: Prefer using the BIT macro
#104: FILE: drivers/scsi/sata_nv.c:131:
+#define NV_MCP_SATA_CFG_20_PORT0_EN	(1 << 17)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#105: FILE: drivers/scsi/sata_nv.c:132:
+#define NV_MCP_SATA_CFG_20_PORT1_EN	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#106: FILE: drivers/scsi/sata_nv.c:133:
+#define NV_MCP_SATA_CFG_20_PORT0_PWB_EN	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#107: FILE: drivers/scsi/sata_nv.c:134:
+#define NV_MCP_SATA_CFG_20_PORT1_PWB_EN	(1 << 12)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#119: FILE: drivers/scsi/sata_nv.c:146:
+#define NV_ADMA_SGTBL_LEN		(1024 - NV_ADMA_CPB_SZ) / NV_ADMA_APRD_SZ

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#120: FILE: drivers/scsi/sata_nv.c:147:
+#define NV_ADMA_SGTBL_SZ                NV_ADMA_SGTBL_LEN * NV_ADMA_APRD_SZ

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#121: FILE: drivers/scsi/sata_nv.c:148:
+#define NV_ADMA_PORT_PRIV_DMA_SZ        NV_ADMA_CAN_QUEUE * (NV_ADMA_CPB_SZ + NV_ADMA_SGTBL_SZ)

ERROR:SPACING: space prohibited after that open parenthesis '('
#129: FILE: drivers/scsi/sata_nv.c:156:
+#define NV_ADMA_CHECK_INTR(GCTL, PORT) ((GCTL) & ( 1 << (19 + (12 * (PORT)))))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: drivers/scsi/sata_nv.c:161:
+// size of ADMA port register space $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#149: FILE: drivers/scsi/sata_nv.c:176:
+#define NV_ADMA_CTL_HOTPLUG_IEN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#150: FILE: drivers/scsi/sata_nv.c:177:
+#define NV_ADMA_CTL_CHANNEL_RESET	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#151: FILE: drivers/scsi/sata_nv.c:178:
+#define NV_ADMA_CTL_GO			(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#152: FILE: drivers/scsi/sata_nv.c:179:
+#define NV_ADMA_CTL_AIEN		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#154: FILE: drivers/scsi/sata_nv.c:181:
+#define NV_ADMA_CTL_WRITE_NON_COHERENT	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#157: FILE: drivers/scsi/sata_nv.c:184:
+#define NV_CPB_RESP_DONE		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#158: FILE: drivers/scsi/sata_nv.c:185:
+#define NV_CPB_RESP_ATA_ERR		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#159: FILE: drivers/scsi/sata_nv.c:186:
+#define NV_CPB_RESP_CMD_ERR		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#160: FILE: drivers/scsi/sata_nv.c:187:
+#define NV_CPB_RESP_CPB_ERR		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#163: FILE: drivers/scsi/sata_nv.c:190:
+#define NV_CPB_CTL_CPB_VALID		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#164: FILE: drivers/scsi/sata_nv.c:191:
+#define NV_CPB_CTL_QUEUE		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#165: FILE: drivers/scsi/sata_nv.c:192:
+#define NV_CPB_CTL_APRD_VALID		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#166: FILE: drivers/scsi/sata_nv.c:193:
+#define NV_CPB_CTL_IEN			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#167: FILE: drivers/scsi/sata_nv.c:194:
+#define NV_CPB_CTL_FPDMA		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#170: FILE: drivers/scsi/sata_nv.c:197:
+#define NV_APRD_WRITE			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#171: FILE: drivers/scsi/sata_nv.c:198:
+#define NV_APRD_END			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#172: FILE: drivers/scsi/sata_nv.c:199:
+#define NV_APRD_CONT			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#175: FILE: drivers/scsi/sata_nv.c:202:
+#define NV_ADMA_STAT_TIMEOUT		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#176: FILE: drivers/scsi/sata_nv.c:203:
+#define NV_ADMA_STAT_HOTUNPLUG		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#177: FILE: drivers/scsi/sata_nv.c:204:
+#define NV_ADMA_STAT_HOTPLUG		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#178: FILE: drivers/scsi/sata_nv.c:205:
+#define NV_ADMA_STAT_CPBERR		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#179: FILE: drivers/scsi/sata_nv.c:206:
+#define NV_ADMA_STAT_SERROR		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#180: FILE: drivers/scsi/sata_nv.c:207:
+#define NV_ADMA_STAT_CMD_COMPLETE	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#181: FILE: drivers/scsi/sata_nv.c:208:
+#define NV_ADMA_STAT_IDLE		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#182: FILE: drivers/scsi/sata_nv.c:209:
+#define NV_ADMA_STAT_LEGACY		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#183: FILE: drivers/scsi/sata_nv.c:210:
+#define NV_ADMA_STAT_STOPPED		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#184: FILE: drivers/scsi/sata_nv.c:211:
+#define NV_ADMA_STAT_DONE		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#188: FILE: drivers/scsi/sata_nv.c:215:
+#define NV_ADMA_PORT_REGISTER_MODE	(1 << 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: drivers/scsi/sata_nv.c:218:
+#define min(x,y) ((x) < (y) ? x : y)
              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#191: FILE: drivers/scsi/sata_nv.c:218:
+#define min(x,y) ((x) < (y) ? x : y)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#191: FILE: drivers/scsi/sata_nv.c:218:
+#define min(x,y) ((x) < (y) ? x : y)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: drivers/scsi/sata_nv.c:244:
+ ^Iu8^I^I^Ilen;           //3 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/scsi/sata_nv.c:244:
+ ^Iu8^I^I^Ilen;           //3 $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: drivers/scsi/sata_nv.c:244:
+ ^Iu8^I^I^Ilen;           //3 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/scsi/sata_nv.c:244:
+ ^Iu8^I^I^Ilen;           //3 $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: drivers/scsi/sata_nv.c:254:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#266: FILE: drivers/scsi/sata_nv.c:293:
+static void nv_adma_fill_aprd(struct ata_queued_cmd *qc, struct scatterlist *sg, int idx, struct nv_adma_prd *aprd);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#283: FILE: drivers/scsi/sata_nv.c:310:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#344: FILE: drivers/scsi/sata_nv.c:383:
+		.disable_hotplug= nv_disable_hotplug_adma,
 		                ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#389: FILE: drivers/scsi/sata_nv.c:457:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#389: FILE: drivers/scsi/sata_nv.c:457:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/scsi/sata_nv.c:476:
+static inline void __iomem *__nv_adma_ctl_block(void __iomem *mmio,
+					     unsigned int port_no)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#467: FILE: drivers/scsi/sata_nv.c:535:
+	if (!NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no)) {
+		return 0;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#504: FILE: drivers/scsi/sata_nv.c:572:
+	if (status & NV_ADMA_STAT_CMD_COMPLETE) {
+		VPRINTK("ADMA command complete, stat = 0x%x\n", status);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#511: FILE: drivers/scsi/sata_nv.c:579:
+		if (!(status & NV_ADMA_STAT_IDLE)) {
+			VPRINTK("XXX CPB done, but not idle\n");
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#514: FILE: drivers/scsi/sata_nv.c:582:
+		if (flags & NV_CPB_RESP_DONE) {
+			VPRINTK("CPB flags done, flags = 0x%x\n", flags);
+		}

WARNING:LINE_SPACING: Missing a blank line after declarations
#536: FILE: drivers/scsi/sata_nv.c:604:
+		u8 ata_status = readb(mmio + (ATA_REG_STATUS * 4));
+		qc->err_mask |= ac_err_mask(have_err ? (ata_status | ATA_ERR) : ata_status);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#558: FILE: drivers/scsi/sata_nv.c:638:
+static inline void nv_enable_adma_space (struct pci_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#569: FILE: drivers/scsi/sata_nv.c:649:
+static inline void nv_disable_adma_space (struct pci_dev *pdev)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#585: FILE: drivers/scsi/sata_nv.c:665:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#602: FILE: drivers/scsi/sata_nv.c:682:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#620: FILE: drivers/scsi/sata_nv.c:700:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: drivers/scsi/sata_nv.c:737:
+^I^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#676: FILE: drivers/scsi/sata_nv.c:755:
+		(void) host->host_desc->check_hotplug(host_set);

WARNING:LINE_SPACING: Missing a blank line after declarations
#683: FILE: drivers/scsi/sata_nv.c:762:
+			struct nv_adma_port_priv *pp = ap->private_data;
+			writel(pp->notifier | pp->notifier_error,

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#743: FILE: drivers/scsi/sata_nv.c:833:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#755: FILE: drivers/scsi/sata_nv.c:845:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: drivers/scsi/sata_nv.c:883:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: drivers/scsi/sata_nv.c:885:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#863: FILE: drivers/scsi/sata_nv.c:953:
+
+

CHECK:SPACING: No space is necessary after a cast
#873: FILE: drivers/scsi/sata_nv.c:963:
+	ioport->cmd_addr	= (unsigned long) mmio;

CHECK:SPACING: No space is necessary after a cast
#874: FILE: drivers/scsi/sata_nv.c:964:
+	ioport->data_addr	= (unsigned long) mmio + (ATA_REG_DATA * 4);

CHECK:SPACING: No space is necessary after a cast
#876: FILE: drivers/scsi/sata_nv.c:966:
+	ioport->feature_addr	= (unsigned long) mmio + (ATA_REG_ERR * 4);

CHECK:SPACING: No space is necessary after a cast
#877: FILE: drivers/scsi/sata_nv.c:967:
+	ioport->nsect_addr	= (unsigned long) mmio + (ATA_REG_NSECT * 4);

CHECK:SPACING: No space is necessary after a cast
#878: FILE: drivers/scsi/sata_nv.c:968:
+	ioport->lbal_addr	= (unsigned long) mmio + (ATA_REG_LBAL * 4);

CHECK:SPACING: No space is necessary after a cast
#879: FILE: drivers/scsi/sata_nv.c:969:
+	ioport->lbam_addr	= (unsigned long) mmio + (ATA_REG_LBAM * 4);

CHECK:SPACING: No space is necessary after a cast
#880: FILE: drivers/scsi/sata_nv.c:970:
+	ioport->lbah_addr	= (unsigned long) mmio + (ATA_REG_LBAH * 4);

CHECK:SPACING: No space is necessary after a cast
#881: FILE: drivers/scsi/sata_nv.c:971:
+	ioport->device_addr	= (unsigned long) mmio + (ATA_REG_DEVICE * 4);

CHECK:SPACING: No space is necessary after a cast
#883: FILE: drivers/scsi/sata_nv.c:973:
+	ioport->command_addr	= (unsigned long) mmio + (ATA_REG_STATUS * 4);

CHECK:SPACING: No space is necessary after a cast
#885: FILE: drivers/scsi/sata_nv.c:975:
+	ioport->ctl_addr	= (unsigned long) mmio + 0x20;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: drivers/scsi/sata_nv.c:989:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: drivers/scsi/sata_nv.c:998:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#930: FILE: drivers/scsi/sata_nv.c:1020:
+	for (i = 0 ; i < (sizeof nv_device_tbl)/(sizeof nv_device_tbl[0]); i++)
 	                                       ^

WARNING:SIZEOF_PARENTHESIS: sizeof nv_device_tbl should be sizeof(nv_device_tbl)
#930: FILE: drivers/scsi/sata_nv.c:1020:
+	for (i = 0 ; i < (sizeof nv_device_tbl)/(sizeof nv_device_tbl[0]); i++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#936: FILE: drivers/scsi/sata_nv.c:1026:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#973: FILE: drivers/scsi/sata_nv.c:1086:
+^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1016: FILE: drivers/scsi/sata_nv.c:1168:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: drivers/scsi/sata_nv.c:1182:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1036: FILE: drivers/scsi/sata_nv.c:1188:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1038: FILE: drivers/scsi/sata_nv.c:1190:
+		printk(KERN_ERR "ata%u: BUG: timeout without command\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1042: FILE: drivers/scsi/sata_nv.c:1194:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1043: FILE: drivers/scsi/sata_nv.c:1195:
+	
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1050: FILE: drivers/scsi/sata_nv.c:1202:
+	printk(KERN_ERR "ata%u: command 0x%x timeout, stat 0x%x\n",

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1071: FILE: drivers/scsi/sata_nv.c:1223:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1093: FILE: drivers/scsi/sata_nv.c:1245:
+^I       $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1124: FILE: drivers/scsi/sata_nv.c:1276:
+		aprd = (idx < 5) ? &cpb->aprd[idx] : &pp->aprd[idx-5];
 		                                                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1128: FILE: drivers/scsi/sata_nv.c:1280:
+	if (idx > 5) {
+		cpb->next_aprd = (u64)(pp->aprd_dma + NV_ADMA_APRD_SZ * qc->tag);
+	}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1148: FILE: drivers/scsi/sata_nv.c:1300:
+	if (idx == qc->n_elem - 1) {
[...]
+	} else if (idx != 4) {
[...]

ERROR:SPACING: space required before the open parenthesis '('
#1177: FILE: drivers/scsi/sata_nv.c:1329:
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1177: FILE: drivers/scsi/sata_nv.c:1329:
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {
+		return;
+	}

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1181: FILE: drivers/scsi/sata_nv.c:1333:
+#if 0

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1196: FILE: drivers/scsi/sata_nv.c:1348:
+	if (host->host_desc->host_type == ADMA) {
[...]
+	} else {
[...]

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1205: FILE: drivers/scsi/sata_nv.c:1357:
+#if 0

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1217: FILE: drivers/scsi/sata_nv.c:1369:
+		return ata_qc_issue_prot(qc);
+	} else {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1221: FILE: drivers/scsi/sata_nv.c:1373:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#1226: FILE: drivers/scsi/sata_nv.c:1378:
+		int i;
+		for (i = 0; i < qc->n_elem - 5; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1226: FILE: drivers/scsi/sata_nv.c:1378:
+		for (i = 0; i < qc->n_elem - 5; i++) {
+			nv_adma_dump_aprd(&pp->aprd[i]);
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1238: FILE: drivers/scsi/sata_nv.c:1390:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1293: FILE: drivers/scsi/sata_nv.c:1523:
+		void __iomem *mmio = __nv_adma_ctl_block(probe_ent->mmio_base, i);
+		writew(NV_ADMA_STAT_HOTPLUG | NV_ADMA_STAT_HOTUNPLUG,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: drivers/scsi/sata_nv.c:1528:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1299: FILE: drivers/scsi/sata_nv.c:1529:
+		
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1312: FILE: drivers/scsi/sata_nv.c:1542:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1313: FILE: drivers/scsi/sata_nv.c:1543:
+		
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1324: FILE: drivers/scsi/sata_nv.c:1554:
+		void __iomem *mmio = __nv_adma_ctl_block(host_set->mmio_base, i);
+		adma_status = readw(mmio + NV_ADMA_STAT);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1326: FILE: drivers/scsi/sata_nv.c:1556:
+			printk(KERN_WARNING "nv_sata: "

WARNING:SPLIT_STRING: quoted string split across lines
#1327: FILE: drivers/scsi/sata_nv.c:1557:
+			printk(KERN_WARNING "nv_sata: "
+			       "port %d device added\n", i);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1332: FILE: drivers/scsi/sata_nv.c:1562:
+			printk(KERN_WARNING "nv_sata: "

WARNING:SPLIT_STRING: quoted string split across lines
#1333: FILE: drivers/scsi/sata_nv.c:1563:
+			printk(KERN_WARNING "nv_sata: "
+			       "port %d device removed\n", i);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1352: FILE: drivers/scsi/sata_nv.c:1587:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1356: FILE: drivers/scsi/sata_nv.c:1591:
+	printk("%016llx %08x %02x %s %s %s\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1364: FILE: drivers/scsi/sata_nv.c:1599:
+}
+static void nv_adma_dump_iomem(void __iomem *m, int len)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1368: FILE: drivers/scsi/sata_nv.c:1603:
+	for (i = 0; i < len/16; i++) {
 	                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1369: FILE: drivers/scsi/sata_nv.c:1604:
+		printk(KERN_WARNING "%02x: ", 16*i);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1369: FILE: drivers/scsi/sata_nv.c:1604:
+		printk(KERN_WARNING "%02x: ", 16*i);
 		                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1371: FILE: drivers/scsi/sata_nv.c:1606:
+			printk("%02x%s", (u32)readb(m + 16*i + j),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1371: FILE: drivers/scsi/sata_nv.c:1606:
+			printk("%02x%s", (u32)readb(m + 16*i + j),
 			                                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1374: FILE: drivers/scsi/sata_nv.c:1609:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1380: FILE: drivers/scsi/sata_nv.c:1615:
+	printk("0x%04x %s %s %s 0x%02x 0x%02x\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1388: FILE: drivers/scsi/sata_nv.c:1623:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1392: FILE: drivers/scsi/sata_nv.c:1627:
+	void __iomem *mmio = nv_adma_ctl_block(ap);
+	nv_adma_dump_iomem(mmio, NV_ADMA_PORT_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1394: FILE: drivers/scsi/sata_nv.c:1629:
+^I^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1399: FILE: drivers/scsi/sata_nv.c:1634:
+	printk("resp_flags:   0x%02x\n", cpb->resp_flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1400: FILE: drivers/scsi/sata_nv.c:1635:
+	printk("ctl_flags:    0x%02x\n", cpb->ctl_flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1401: FILE: drivers/scsi/sata_nv.c:1636:
+	printk("len:          0x%02x\n", cpb->len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1402: FILE: drivers/scsi/sata_nv.c:1637:
+	printk("tag:          0x%02x\n", cpb->tag);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1403: FILE: drivers/scsi/sata_nv.c:1638:
+	printk("next_cpb_idx: 0x%02x\n", cpb->next_cpb_idx);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1404: FILE: drivers/scsi/sata_nv.c:1639:
+	printk("tf:\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1405: FILE: drivers/scsi/sata_nv.c:1640:
+	for (i=0; i<12; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1405: FILE: drivers/scsi/sata_nv.c:1640:
+	for (i=0; i<12; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1405: FILE: drivers/scsi/sata_nv.c:1640:
+	for (i=0; i<12; i++) {
+		nv_adma_dump_cpb_tf(cpb->tf[i]);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1408: FILE: drivers/scsi/sata_nv.c:1643:
+	printk("aprd:\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1409: FILE: drivers/scsi/sata_nv.c:1644:
+	for (i=0; i<5; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1409: FILE: drivers/scsi/sata_nv.c:1644:
+	for (i=0; i<5; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1409: FILE: drivers/scsi/sata_nv.c:1644:
+	for (i=0; i<5; i++) {
+		nv_adma_dump_aprd(&cpb->aprd[i]);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1412: FILE: drivers/scsi/sata_nv.c:1647:
+	printk("next_aprd:    0x%016llx\n", cpb->next_aprd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1415: FILE: drivers/scsi/sata_nv.c:1650:
+#endif^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093658.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 54 warnings, 62 checks, 1320 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093658.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
