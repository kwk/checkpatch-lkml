WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -u -p -r linux/include/net/irda.sA/irda_device.h linux/include/net/irda/irda_device.h

CHECK:SPACING: No space is necessary after a cast
#76: FILE: include/net/irda/irda_device.h:257:
+	const struct irda_skb_cb *cb = (const struct irda_skb_cb *) skb->cb;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#77: FILE: include/net/irda/irda_device.h:258:
+	const struct irda_skb_cb *cb = (const struct irda_skb_cb *) skb->cb;
+	return (cb->magic == LAP_MAGIC) ? cb->mtt : 10000;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#104: FILE: include/net/irda/irda_device.h:270:
+	const struct irda_skb_cb *cb = (const struct irda_skb_cb *) skb->cb;

WARNING:LINE_SPACING: Missing a blank line after declarations
#105: FILE: include/net/irda/irda_device.h:271:
+	const struct irda_skb_cb *cb = (const struct irda_skb_cb *) skb->cb;
+	return (cb->magic == LAP_MAGIC) ? cb->next_speed : -1;

CHECK:SPACING: No space is necessary after a cast
#121: FILE: include/net/irda/irda_device.h:283:
+	const struct irda_skb_cb *cb = (const struct irda_skb_cb *) skb->cb;

WARNING:LINE_SPACING: Missing a blank line after declarations
#122: FILE: include/net/irda/irda_device.h:284:
+	const struct irda_skb_cb *cb = (const struct irda_skb_cb *) skb->cb;
+	return (cb->magic == LAP_MAGIC) ? cb->xbofs : 10;

CHECK:SPACING: No space is necessary after a cast
#138: FILE: include/net/irda/irda_device.h:296:
+	const struct irda_skb_cb *cb = (const struct irda_skb_cb *) skb->cb;

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: include/net/irda/irda_device.h:297:
+	const struct irda_skb_cb *cb = (const struct irda_skb_cb *) skb->cb;
+	return (cb->magic == LAP_MAGIC) ? cb->next_xbofs : -1;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297609.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 4 checks, 185 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297609.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
