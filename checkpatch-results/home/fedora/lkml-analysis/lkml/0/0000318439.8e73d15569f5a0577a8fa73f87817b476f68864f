WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -ur linux-2.6.0-test11_original/drivers/block/DAC960.c linux-2.6.0-test11_DAC/drivers/block/DAC960.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/block/DAC960.c:2487:
+  ^Istruct request_queue *RequestQueue;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: drivers/block/DAC960.c:2487:
+  ^Istruct request_queue *RequestQueue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/block/DAC960.c:2487:
+  ^Istruct request_queue *RequestQueue;$

CHECK:CAMELCASE: Avoid CamelCase: <RequestQueue>
#89: FILE: drivers/block/DAC960.c:2487:
+  	struct request_queue *RequestQueue;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: drivers/block/DAC960.c:2490:
+  ^IRequestQueue = blk_init_queue(DAC960_RequestFunction,&Controller->queue_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: drivers/block/DAC960.c:2490:
+  ^IRequestQueue = blk_init_queue(DAC960_RequestFunction,&Controller->queue_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/block/DAC960.c:2490:
+  ^IRequestQueue = blk_init_queue(DAC960_RequestFunction,&Controller->queue_lock);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#92: FILE: drivers/block/DAC960.c:2490:
+  	RequestQueue = blk_init_queue(DAC960_RequestFunction,&Controller->queue_lock);
   	                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#92: FILE: drivers/block/DAC960.c:2490:
+  	RequestQueue = blk_init_queue(DAC960_RequestFunction,&Controller->queue_lock);
   	                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_RequestFunction>
#92: FILE: drivers/block/DAC960.c:2490:
+  	RequestQueue = blk_init_queue(DAC960_RequestFunction,&Controller->queue_lock);

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#92: FILE: drivers/block/DAC960.c:2490:
+  	RequestQueue = blk_init_queue(DAC960_RequestFunction,&Controller->queue_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: drivers/block/DAC960.c:2491:
+  ^Iif (!RequestQueue) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#93: FILE: drivers/block/DAC960.c:2491:
+  ^Iif (!RequestQueue) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/block/DAC960.c:2491:
+  ^Iif (!RequestQueue) {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#94: FILE: drivers/block/DAC960.c:2492:
+		printk("DAC960: failure to allocate request queue\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: drivers/block/DAC960.c:2494:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: drivers/block/DAC960.c:2494:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/block/DAC960.c:2494:
+  ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/block/DAC960.c:2495:
+  ^IController->RequestQueue[n] = RequestQueue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: drivers/block/DAC960.c:2495:
+  ^IController->RequestQueue[n] = RequestQueue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/block/DAC960.c:2495:
+  ^IController->RequestQueue[n] = RequestQueue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/block/DAC960.c:2496:
+  ^Iblk_queue_bounce_limit(RequestQueue, Controller->BounceBufferLimit);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: drivers/block/DAC960.c:2496:
+  ^Iblk_queue_bounce_limit(RequestQueue, Controller->BounceBufferLimit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/block/DAC960.c:2496:
+  ^Iblk_queue_bounce_limit(RequestQueue, Controller->BounceBufferLimit);$

CHECK:CAMELCASE: Avoid CamelCase: <BounceBufferLimit>
#98: FILE: drivers/block/DAC960.c:2496:
+  	blk_queue_bounce_limit(RequestQueue, Controller->BounceBufferLimit);

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: drivers/block/DAC960.c:2497:
+  ^IRequestQueue->queuedata = Controller;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: drivers/block/DAC960.c:2497:
+  ^IRequestQueue->queuedata = Controller;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/block/DAC960.c:2497:
+  ^IRequestQueue->queuedata = Controller;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: drivers/block/DAC960.c:2498:
+  ^Iblk_queue_max_hw_segments(RequestQueue, Controller->DriverScatterGatherLimit);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: drivers/block/DAC960.c:2498:
+  ^Iblk_queue_max_hw_segments(RequestQueue, Controller->DriverScatterGatherLimit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: drivers/block/DAC960.c:2498:
+  ^Iblk_queue_max_hw_segments(RequestQueue, Controller->DriverScatterGatherLimit);$

CHECK:CAMELCASE: Avoid CamelCase: <DriverScatterGatherLimit>
#100: FILE: drivers/block/DAC960.c:2498:
+  	blk_queue_max_hw_segments(RequestQueue, Controller->DriverScatterGatherLimit);

CHECK:CAMELCASE: Avoid CamelCase: <MaxBlocksPerCommand>
#102: FILE: drivers/block/DAC960.c:2500:
+	blk_queue_max_sectors(RequestQueue, Controller->MaxBlocksPerCommand);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/block/DAC960.c:2526:
+  for (disk = 0; disk < DAC960_MaxLogicalDrives; disk++) {$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_MaxLogicalDrives>
#113: FILE: drivers/block/DAC960.c:2526:
+  for (disk = 0; disk < DAC960_MaxLogicalDrives; disk++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/block/DAC960.c:2530:
+  }$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_Controller_T>
#134: FILE: drivers/block/DAC960.c:3251:
+static int DAC960_process_queue(DAC960_Controller_T *Controller, struct request_queue *req_q)

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#136: FILE: drivers/block/DAC960.c:3253:
+	struct request *Request;

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_Command_T>
#137: FILE: drivers/block/DAC960.c:3254:
+	DAC960_Command_T *Command;

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#137: FILE: drivers/block/DAC960.c:3254:
+	DAC960_Command_T *Command;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/block/DAC960.c:3256:
+   while(1) {$

ERROR:SPACING: space required before the open parenthesis '('
#139: FILE: drivers/block/DAC960.c:3256:
+   while(1) {

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_AllocateCommand>
#144: FILE: drivers/block/DAC960.c:3261:
+	Command = DAC960_AllocateCommand(Controller);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Command"
#145: FILE: drivers/block/DAC960.c:3262:
+	if (Command == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <DmaDirection>
#149: FILE: drivers/block/DAC960.c:3266:
+		Command->DmaDirection = PCI_DMA_FROMDEVICE;

CHECK:CAMELCASE: Avoid CamelCase: <CommandType>
#150: FILE: drivers/block/DAC960.c:3267:
+		Command->CommandType = DAC960_ReadCommand;

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_ReadCommand>
#150: FILE: drivers/block/DAC960.c:3267:
+		Command->CommandType = DAC960_ReadCommand;

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_WriteCommand>
#153: FILE: drivers/block/DAC960.c:3270:
+		Command->CommandType = DAC960_WriteCommand;

CHECK:CAMELCASE: Avoid CamelCase: <Completion>
#155: FILE: drivers/block/DAC960.c:3272:
+	Command->Completion = Request->waiting;

CHECK:CAMELCASE: Avoid CamelCase: <LogicalDriveNumber>
#156: FILE: drivers/block/DAC960.c:3273:
+	Command->LogicalDriveNumber = (long)Request->rq_disk->private_data;

CHECK:CAMELCASE: Avoid CamelCase: <BlockNumber>
#157: FILE: drivers/block/DAC960.c:3274:
+	Command->BlockNumber = Request->sector;

CHECK:CAMELCASE: Avoid CamelCase: <BlockCount>
#158: FILE: drivers/block/DAC960.c:3275:
+	Command->BlockCount = Request->nr_sectors;

CHECK:CAMELCASE: Avoid CamelCase: <SegmentCount>
#161: FILE: drivers/block/DAC960.c:3278:
+	Command->SegmentCount = blk_rq_map_sg(req_q,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: drivers/block/DAC960.c:3279:
+	Command->SegmentCount = blk_rq_map_sg(req_q,
+		  Command->Request, Command->cmd_sglist);

CHECK:CAMELCASE: Avoid CamelCase: <PCIDevice>
#164: FILE: drivers/block/DAC960.c:3281:
+	Command->SegmentCount = pci_map_sg(Controller->PCIDevice, Command->cmd_sglist,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/block/DAC960.c:3282:
+	Command->SegmentCount = pci_map_sg(Controller->PCIDevice, Command->cmd_sglist,
+		 Command->SegmentCount, Command->DmaDirection);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_QueueReadWriteCommand>
#167: FILE: drivers/block/DAC960.c:3284:
+	DAC960_QueueReadWriteCommand(Command);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/block/DAC960.c:3285:
+  }$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_ProcessRequest>
#180: FILE: drivers/block/DAC960.c:3294:
+static void DAC960_ProcessRequest(DAC960_Controller_T *controller)

CHECK:CAMELCASE: Avoid CamelCase: <ControllerInitialized>
#189: FILE: drivers/block/DAC960.c:3298:
+	if (!controller->ControllerInitialized)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req_q"
#203: FILE: drivers/block/DAC960.c:3305:
+		if (req_q == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req_q"
#242: FILE: drivers/block/DAC960.c:3320:
+		if (req_q == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/block/DAC960.c:3344:
+  struct request_queue *req_q = Controller->RequestQueue[Command->LogicalDriveNumber];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/block/DAC960.c:3357:
+  (void)blk_rq_map_sg(req_q, Command->Request, Command->cmd_sglist);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/block/DAC960.c:3359:
+  (void)pci_map_sg(Controller->PCIDevice, Command->cmd_sglist, 1, Command->DmaDirection);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/block/DAC960.c:5225:
+  DAC960_ProcessRequest(Controller);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/block/DAC960.c:5268:
+  DAC960_ProcessRequest(Controller);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/block/DAC960.c:5307:
+  DAC960_ProcessRequest(Controller);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/block/DAC960.c:5346:
+  DAC960_ProcessRequest(Controller);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/block/DAC960.c:5381:
+  DAC960_ProcessRequest(Controller);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/block/DAC960.c:5455:
+  DAC960_ProcessRequest(Controller);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/block/DAC960.h:2336:
+  struct request_queue *RequestQueue[DAC960_MaxLogicalDrives];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/block/DAC960.h:2337:
+  int req_q_index;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318439.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 33 warnings, 30 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318439.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
