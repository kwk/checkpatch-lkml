CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: fs/ext2/balloc.c:144:
+static int group_reserve_blocks(struct super_block *sb, int group_no,
 	struct ext2_group_desc *desc, struct buffer_head *bh, int count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: fs/ext2/balloc.c:386:
+	group_alloc = group_reserve_blocks(sb, group_no, desc,
 					gdp_bh, es_alloc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: fs/ext2/balloc.c:422:
+		group_alloc = group_reserve_blocks(sb, group_no, desc,
 						gdp_bh, es_alloc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: fs/ext2/ext2.h:152:
+extern void ext2_prepare_super (struct super_block *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: fs/ext2/ext2.h:152:
+extern void ext2_prepare_super (struct super_block *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#166: FILE: fs/ext2/ext2.h:152:
+extern void ext2_prepare_super (struct super_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: fs/ext2/ext2.h:153:
+extern void __ext2_mark_fs_clean (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: fs/ext2/ext2.h:153:
+extern void __ext2_mark_fs_clean (struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#167: FILE: fs/ext2/ext2.h:153:
+extern void __ext2_mark_fs_clean (struct super_block *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: fs/ext2/ext2.h:154:
+extern void ext2_mark_fs_dirty (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: fs/ext2/ext2.h:154:
+extern void ext2_mark_fs_dirty (struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#168: FILE: fs/ext2/ext2.h:154:
+extern void ext2_mark_fs_dirty (struct super_block *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#169: FILE: fs/ext2/ext2.h:155:
+extern void ext2_mark_inode_dirty (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: fs/ext2/ext2.h:155:
+extern void ext2_mark_inode_dirty (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#169: FILE: fs/ext2/ext2.h:155:
+extern void ext2_mark_inode_dirty (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: fs/ext2/ext2.h:156:
+extern void ext2_orphan_add(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#170: FILE: fs/ext2/ext2.h:156:
+extern void ext2_orphan_add(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: fs/ext2/ext2.h:157:
+extern void ext2_orphan_del(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#171: FILE: fs/ext2/ext2.h:157:
+extern void ext2_orphan_del(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: fs/ext2/ext2.h:187:
+extern void ext2_dirtyd_start_thread(struct super_block *sb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: fs/ext2/ext2.h:188:
+extern void ext2_dirtyd_kill_thread(struct super_block *sb);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#276: FILE: fs/ext2/state.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#284: FILE: fs/ext2/state.c:9:
+extern void sys_sync(void);	/* XXX Gross */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#330: FILE: fs/ext2/state.c:55:
+			 * sync, recheck */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#334: FILE: fs/ext2/state.c:59:
+				printk(KERN_DEBUG "fs dirtied during sync\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#362: FILE: fs/ext2/state.c:87:
+	printk(KERN_DEBUG "ext2: dirty:%u clean:%u total:%u percent clean: %u\n",

CHECK:SPACING: No space is necessary after a cast
#368: FILE: fs/ext2/state.c:93:
+	struct super_block *sb = (struct super_block *) arg;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#373: FILE: fs/ext2/state.c:98:
+	printk(KERN_INFO "ext2_dirtyd starting, interval %d seconds\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ext2_dirtyd', this function's name, in a string
#373: FILE: fs/ext2/state.c:98:
+	printk(KERN_INFO "ext2_dirtyd starting, interval %d seconds\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#384: FILE: fs/ext2/state.c:109:
+		if (freezing(current)) {
+			refrigerator();
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: fs/ext2/state.c:113:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#399: FILE: fs/ext2/state.c:124:
+	kernel_thread(ext2_dirtyd, sb, CLONE_VM|CLONE_FS|CLONE_FILES);
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#399: FILE: fs/ext2/state.c:124:
+	kernel_thread(ext2_dirtyd, sb, CLONE_VM|CLONE_FS|CLONE_FILES);
 	                                                ^

CHECK:SPACING: No space is necessary after a cast
#458: FILE: fs/ext2/super.c:669:
+	sbi->s_es = (struct ext2_super_block *) sbi->s_esp + offset;

CHECK:SPACING: No space is necessary after a cast
#482: FILE: fs/ext2/super.c:765:
+		sbi->s_es = (struct ext2_super_block *) sbi->s_esp + offset;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#513: FILE: fs/ext2/super.c:950:
+void ext2_prepare_super(struct super_block * sb)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#535: FILE: fs/ext2/super.c:971:
+static void ext2_end_async_io(struct buffer_head *bh, int uptodate)
                                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#538: FILE: fs/ext2/super.c:974:
+	if (uptodate)
 	    ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: fs/ext2/super.c:1000:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#647: FILE: fs/ext2/super.c:1085:
+		printk(KERN_DEBUG "marking fs dirty\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#650: FILE: fs/ext2/super.c:1088:
+		printk(KERN_DEBUG "marking fs clean\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: fs/ext2/super.c:1103:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: fs/ext2/super.c:1109:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: fs/ext2/super.c:1123:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#726: FILE: fs/ext2/super.c:1164:
+	printk(KERN_DEBUG "sb_info orphan list:\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#729: FILE: fs/ext2/super.c:1167:
+		struct inode *inode = orphan_list_entry(l);
+		printk(KERN_DEBUG "  "

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#729: FILE: fs/ext2/super.c:1167:
+		printk(KERN_DEBUG "  "

WARNING:SPLIT_STRING: quoted string split across lines
#730: FILE: fs/ext2/super.c:1168:
+		printk(KERN_DEBUG "  "
+		       "inode %s:%ld at %p: mode %o, nlink %d, next %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: fs/ext2/super.c:1170:
+^I^I       inode->i_mode, inode->i_nlink, $

WARNING:RETURN_VOID: void function return statements are not generally useful
#764: FILE: fs/ext2/super.c:1202:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#803: FILE: fs/ext2/super.c:1241:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#884: FILE: include/linux/ext2_fs_sb.h:37:
+	struct ext2_super_block * s_es;	/* Pointer to the in memory super block */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#885: FILE: include/linux/ext2_fs_sb.h:38:
+	char * s_esp;			/* Pointer to kmalloc'd memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#888: FILE: include/linux/ext2_fs_sb.h:41:
+					 * buffer */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#901: FILE: include/linux/ext2_fs_sb.h:65:
+	void * s_process;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092123.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 29 warnings, 16 checks, 755 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092123.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
