WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Tim Bird <tim.bird@am.sony.com> for CELF', should be: 'Tim Bird <tim.bird@am.sony.com> (for CELF)'
#62: 
Signed-off-by: Tim Bird <tim.bird@am.sony.com> for CELF

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: init/main.c:173:
+	loops_per_jiffy = simple_strtoul(str,NULL,10) | 1;
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: init/main.c:173:
+	loops_per_jiffy = simple_strtoul(str,NULL,10) | 1;
 	                                         ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#125: FILE: init/main.c:173:
+	loops_per_jiffy = simple_strtoul(str,NULL,10) | 1;

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#129: FILE: init/main.c:177:
+__setup("lpj=", lpj_setup);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#154: FILE: init/main.c:197:
+	if ((loops_per_jiffy & 1) == 0) {
+		loops_per_jiffy = CONFIG_PRESET_LPJ | 1;
  	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#172: FILE: init/main.c:203:
+		printk("Calibrating delay loop (skipped)... ");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#174: FILE: init/main.c:205:
+	} else {
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: init/main.c:206:
+		printk("Calibrating delay loop... ");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 45)
#179: FILE: init/main.c:210:
+			while (ticks == jiffies)
+				/* nothing */;

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#179: FILE: init/main.c:210:
+			while (ticks == jiffies)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#190: FILE: init/main.c:221:
+	/* Do a binary approximation to get loops_per_jiffy set to equal one clock
+	   (up to lps_precision bits) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#190: FILE: init/main.c:221:
+	   (up to lps_precision bits) */

ERROR:SPACING: space prohibited after that open parenthesis '('
#193: FILE: init/main.c:224:
+		while ( lps_precision-- && (loopbit >>= 1) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#193: FILE: init/main.c:224:
+		while ( lps_precision-- && (loopbit >>= 1) ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: init/main.c:227:
+			while (ticks == jiffies);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#196: FILE: init/main.c:227:
+			while (ticks == jiffies);

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#199: FILE: init/main.c:230:
+			if (jiffies != ticks)	/* longer than 1 tick */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#211: FILE: init/main.c:241:
+	printk("Set 'Preset loops_per_jiffy'=%lu for preset lpj.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: init/main.c:242:
+	printk("Set 'Preset loops_per_jiffy'=%lu for preset lpj.\n",
+		loops_per_jiffy);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269111.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 12 warnings, 3 checks, 138 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269111.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
