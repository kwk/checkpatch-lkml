WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -uNr -Xdontdiff ../master/linux-2.4.7-ac7/include/asm-alpha/syscall.h linux/include/asm-alpha/syscall.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: include/asm-alpha/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#63: FILE: include/asm-arm/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: include/asm-cris/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: include/asm-i386/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#115: FILE: include/asm-i386/syscall.h:17:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: include/asm-i386/syscall.h:22:
+extern asmlinkage int^Isys_fork(struct pt_regs regs);                                                      $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#120: FILE: include/asm-i386/syscall.h:22:
+extern asmlinkage int	sys_fork(struct pt_regs regs);                                                      

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: include/asm-i386/syscall.h:32:
+extern asmlinkage int	sys_pipe(unsigned long * fildes);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#137: FILE: include/asm-ia64/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#155: FILE: include/asm-m68k/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#173: FILE: include/asm-mips/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#191: FILE: include/asm-mips64/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#209: FILE: include/asm-parisc/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#227: FILE: include/asm-ppc/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#245: FILE: include/asm-s390x/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#263: FILE: include/asm-sparc/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#281: FILE: include/asm-sparc64/syscall.h:1:
+#ifndef _ASM_SYSCALL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#299: FILE: include/linux/syscall.h:1:
+#ifndef _LINUX_SYSCALL_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: include/linux/syscall.h:27:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#327: FILE: include/linux/syscall.h:29:
+extern asmlinkage long	sys_uselib(const char * library);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#338: FILE: include/linux/syscall.h:40:
+extern asmlinkage long	sys_mkdir(const char * pathname, int mode);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: include/linux/syscall.h:41:
+extern asmlinkage long	sys_mknod(const char * filename, int mode, dev_t dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: include/linux/syscall.h:42:
+extern asmlinkage long	sys_rename(const char * oldname, const char * newname);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: include/linux/syscall.h:42:
+extern asmlinkage long	sys_rename(const char * oldname, const char * newname);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: include/linux/syscall.h:45:
+extern asmlinkage long^Isys_access(const char * filename, int mode);                              $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#343: FILE: include/linux/syscall.h:45:
+extern asmlinkage long	sys_access(const char * filename, int mode);                              

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#344: FILE: include/linux/syscall.h:46:
+extern asmlinkage long	sys_open(const char * filename, int flags, int mode);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#345: FILE: include/linux/syscall.h:47:
+extern asmlinkage long	sys_statfs(const char * path, struct statfs * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#345: FILE: include/linux/syscall.h:47:
+extern asmlinkage long	sys_statfs(const char * path, struct statfs * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#346: FILE: include/linux/syscall.h:48:
+extern asmlinkage long	sys_fstatfs(unsigned int fd, struct statfs * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: include/linux/syscall.h:51:
+extern asmlinkage long	sys_truncate64(const char * path, loff_t length);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#350: FILE: include/linux/syscall.h:52:
+extern asmlinkage long	sys_truncate64(const char * path, loff_t length);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#356: FILE: include/linux/syscall.h:58:
+				unsigned long offset_low, loff_t * result,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#358: FILE: include/linux/syscall.h:60:
+extern asmlinkage ssize_t sys_read(unsigned int fd, char * buf, size_t count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: include/linux/syscall.h:61:
+extern asmlinkage ssize_t sys_pread(unsigned int fd, char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#361: FILE: include/linux/syscall.h:63:
+extern asmlinkage ssize_t sys_pwrite(unsigned int fd, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#365: FILE: include/linux/syscall.h:67:
+extern asmlinkage int	old_readdir(unsigned int fd, void * dirent,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#369: FILE: include/linux/syscall.h:71:
+extern asmlinkage long	sys_poll(struct pollfd * ufds, unsigned int nfds,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#375: FILE: include/linux/syscall.h:77:
+extern asmlinkage long	sys_readlink(const char * path, char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#375: FILE: include/linux/syscall.h:77:
+extern asmlinkage long	sys_readlink(const char * path, char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: include/linux/syscall.h:97:
+extern asmlinkage long	sys_stime(int * tptr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#396: FILE: include/linux/syscall.h:98:
+extern asmlinkage long	sys_time(int * tloc);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#458: FILE: include/linux/syscall.h:160:
+extern asmlinkage long	sys_sendto(int fd, void * buff, size_t len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#459: FILE: include/linux/syscall.h:161:
+				unsigned flags, struct sockaddr *addr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#461: FILE: include/linux/syscall.h:163:
+extern asmlinkage long	sys_send(int fd, void * buff, size_t len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#462: FILE: include/linux/syscall.h:164:
+					unsigned flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#463: FILE: include/linux/syscall.h:165:
+extern asmlinkage long	sys_recvfrom(int fd, void * ubuf, size_t size,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#464: FILE: include/linux/syscall.h:166:
+				unsigned flags, struct sockaddr *addr,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#472: FILE: include/linux/syscall.h:174:
+				unsigned flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: include/linux/syscall.h:179:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#499: FILE: kernel/ksyms.c:560:
+EXPORT_SYMBOL(sys_gettimeofday);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#500: FILE: kernel/ksyms.c:561:
+EXPORT_SYMBOL(sys_settimeofday);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#501: FILE: kernel/ksyms.c:562:
+EXPORT_SYMBOL(sys_getitimer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#502: FILE: kernel/ksyms.c:563:
+EXPORT_SYMBOL(sys_setitimer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#503: FILE: kernel/ksyms.c:564:
+EXPORT_SYMBOL(sys_access);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#504: FILE: kernel/ksyms.c:565:
+EXPORT_SYMBOL(sys_statfs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#505: FILE: kernel/ksyms.c:566:
+EXPORT_SYMBOL(sys_fstatfs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#506: FILE: kernel/ksyms.c:567:
+EXPORT_SYMBOL(sys_open);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#507: FILE: kernel/ksyms.c:568:
+EXPORT_SYMBOL(sys_ftruncate);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#508: FILE: kernel/ksyms.c:569:
+EXPORT_SYMBOL(sys_poll);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#509: FILE: kernel/ksyms.c:570:
+EXPORT_SYMBOL(sys_sysfs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#510: FILE: kernel/ksyms.c:571:
+EXPORT_SYMBOL(sys_stime);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#511: FILE: kernel/ksyms.c:572:
+EXPORT_SYMBOL(sys_gethostname);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#512: FILE: kernel/ksyms.c:573:
+EXPORT_SYMBOL(sys_sethostname);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#513: FILE: kernel/ksyms.c:574:
+EXPORT_SYMBOL(sys_getrlimit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#514: FILE: kernel/ksyms.c:575:
+EXPORT_SYMBOL(sys_exit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#515: FILE: kernel/ksyms.c:576:
+EXPORT_SYMBOL(sys_pread);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#516: FILE: kernel/ksyms.c:577:
+EXPORT_SYMBOL(sys_pwrite);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#517: FILE: kernel/ksyms.c:578:
+EXPORT_SYMBOL(sys_nanosleep);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#518: FILE: kernel/ksyms.c:579:
+EXPORT_SYMBOL(sys_ftruncate64);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#519: FILE: kernel/ksyms.c:580:
+EXPORT_SYMBOL(sys_time);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#520: FILE: kernel/ksyms.c:581:
+EXPORT_SYMBOL(sys_kill);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#521: FILE: kernel/ksyms.c:582:
+EXPORT_SYMBOL(sys_brk);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#522: FILE: kernel/ksyms.c:583:
+EXPORT_SYMBOL(sys_mkdir);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#523: FILE: kernel/ksyms.c:584:
+EXPORT_SYMBOL(sys_setdomainname);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#524: FILE: kernel/ksyms.c:585:
+EXPORT_SYMBOL(sys_setsid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#525: FILE: kernel/ksyms.c:586:
+EXPORT_SYMBOL(sys_getsid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#526: FILE: kernel/ksyms.c:587:
+EXPORT_SYMBOL(sys_setpgid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#527: FILE: kernel/ksyms.c:588:
+EXPORT_SYMBOL(sys_getpgid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#528: FILE: kernel/ksyms.c:589:
+EXPORT_SYMBOL(sys_lseek);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#529: FILE: kernel/ksyms.c:590:
+EXPORT_SYMBOL(sys_mknod);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#530: FILE: kernel/ksyms.c:591:
+EXPORT_SYMBOL(sys_rt_sigprocmask);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#531: FILE: kernel/ksyms.c:592:
+EXPORT_SYMBOL(sys_rt_sigpending);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#532: FILE: kernel/ksyms.c:593:
+EXPORT_SYMBOL(sys_rt_sigtimedwait);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#533: FILE: kernel/ksyms.c:594:
+EXPORT_SYMBOL(sys_sigpending);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#534: FILE: kernel/ksyms.c:595:
+EXPORT_SYMBOL(sys_sigprocmask);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#535: FILE: kernel/ksyms.c:596:
+EXPORT_SYMBOL(sys_rt_sigaction);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#536: FILE: kernel/ksyms.c:597:
+EXPORT_SYMBOL(sys_sigaltstack);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#537: FILE: kernel/ksyms.c:598:
+EXPORT_SYMBOL(old_readdir);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#538: FILE: kernel/ksyms.c:599:
+EXPORT_SYMBOL(sys_llseek);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#539: FILE: kernel/ksyms.c:600:
+EXPORT_SYMBOL(sys_sigsuspend);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#540: FILE: kernel/ksyms.c:601:
+EXPORT_SYMBOL(sys_readlink);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#541: FILE: kernel/ksyms.c:602:
+EXPORT_SYMBOL(sys_dup2);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#542: FILE: kernel/ksyms.c:603:
+EXPORT_SYMBOL(sys_select);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#543: FILE: kernel/ksyms.c:604:
+EXPORT_SYMBOL(sys_truncate64);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#544: FILE: kernel/ksyms.c:605:
+EXPORT_SYMBOL(sys_uselib);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#545: FILE: kernel/ksyms.c:606:
+EXPORT_SYMBOL(sys_wait4);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#546: FILE: kernel/ksyms.c:607:
+EXPORT_SYMBOL(sys_fcntl);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#547: FILE: kernel/ksyms.c:608:
+EXPORT_SYMBOL(sys_read);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#548: FILE: kernel/ksyms.c:609:
+EXPORT_SYMBOL(sys_rename);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#549: FILE: kernel/ksyms.c:610:
+EXPORT_SYMBOL(sys_setgroups);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#550: FILE: kernel/ksyms.c:611:
+EXPORT_SYMBOL(sys_getgroups);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#552: FILE: kernel/ksyms.c:613:
+EXPORT_SYMBOL(sys_socket);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#553: FILE: kernel/ksyms.c:614:
+EXPORT_SYMBOL(sys_socketpair);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#554: FILE: kernel/ksyms.c:615:
+EXPORT_SYMBOL(sys_bind);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#555: FILE: kernel/ksyms.c:616:
+EXPORT_SYMBOL(sys_listen);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#556: FILE: kernel/ksyms.c:617:
+EXPORT_SYMBOL(sys_accept);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#557: FILE: kernel/ksyms.c:618:
+EXPORT_SYMBOL(sys_connect);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#558: FILE: kernel/ksyms.c:619:
+EXPORT_SYMBOL(sys_getsockname);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#559: FILE: kernel/ksyms.c:620:
+EXPORT_SYMBOL(sys_getpeername);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#560: FILE: kernel/ksyms.c:621:
+EXPORT_SYMBOL(sys_sendto);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#561: FILE: kernel/ksyms.c:622:
+EXPORT_SYMBOL(sys_send);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#562: FILE: kernel/ksyms.c:623:
+EXPORT_SYMBOL(sys_recvfrom);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#563: FILE: kernel/ksyms.c:624:
+EXPORT_SYMBOL(sys_setsockopt);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#564: FILE: kernel/ksyms.c:625:
+EXPORT_SYMBOL(sys_getsockopt);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#565: FILE: kernel/ksyms.c:626:
+EXPORT_SYMBOL(sys_shutdown);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#566: FILE: kernel/ksyms.c:627:
+EXPORT_SYMBOL(sys_sendmsg);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#567: FILE: kernel/ksyms.c:628:
+EXPORT_SYMBOL(sys_recvmsg);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#568: FILE: kernel/ksyms.c:629:
+EXPORT_SYMBOL(sys_socketcall);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#570: FILE: kernel/ksyms.c:631:
+EXPORT_SYMBOL(sys_shmctl);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#571: FILE: kernel/ksyms.c:632:
+EXPORT_SYMBOL(sys_shmat);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#572: FILE: kernel/ksyms.c:633:
+EXPORT_SYMBOL(sys_semop);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#573: FILE: kernel/ksyms.c:634:
+EXPORT_SYMBOL(sys_shmdt);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#574: FILE: kernel/ksyms.c:635:
+EXPORT_SYMBOL(sys_msgctl);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#575: FILE: kernel/ksyms.c:636:
+EXPORT_SYMBOL(sys_msgrcv);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#576: FILE: kernel/ksyms.c:637:
+EXPORT_SYMBOL(sys_shmget);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#577: FILE: kernel/ksyms.c:638:
+EXPORT_SYMBOL(sys_msgsnd);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#578: FILE: kernel/ksyms.c:639:
+EXPORT_SYMBOL(sys_msgget);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#579: FILE: kernel/ksyms.c:640:
+EXPORT_SYMBOL(sys_semget);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#583: FILE: kernel/ksyms.c:644:
+EXPORT_SYMBOL(sys_setgroups16);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#584: FILE: kernel/ksyms.c:645:
+EXPORT_SYMBOL(sys_setreuid16);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#585: FILE: kernel/ksyms.c:646:
+EXPORT_SYMBOL(sys_setregid16);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000520761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 102 warnings, 3 checks, 485 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000520761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
