WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
#include <linux/debug.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: include/linux/debug.h:1:
+#ifndef _LINUX_DEBUG_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: include/linux/debug.h:5:
+ * unconditional messages $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#60: FILE: include/linux/debug.h:9:
+#define unc_debug(fmt,arg...) printk(KERN_DEBUG fmt, ##arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#60: FILE: include/linux/debug.h:9:
+#define unc_debug(fmt,arg...) printk(KERN_DEBUG fmt, ##arg)
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#63: FILE: include/linux/debug.h:12:
+#define info(fmt,arg...) printk(KERN_INFO fmt, ##arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#63: FILE: include/linux/debug.h:12:
+#define info(fmt,arg...) printk(KERN_INFO fmt, ##arg)
                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARN ...
#64: FILE: include/linux/debug.h:13:
+#define warn(fmt,arg...) printk(KERN_WARN fmt, ##arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#64: FILE: include/linux/debug.h:13:
+#define warn(fmt,arg...) printk(KERN_WARN fmt, ##arg)
                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#65: FILE: include/linux/debug.h:14:
+#define err(fmt,arg...) printk(KERN_EMERG fmt, ##arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#65: FILE: include/linux/debug.h:14:
+#define err(fmt,arg...) printk(KERN_EMERG fmt, ##arg)
                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#67: FILE: include/linux/debug.h:16:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: include/linux/debug.h:19:
+ * debug messages (de)activated at runtime $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#81: FILE: include/linux/debug.h:30:
+	static unsigned int DEBUG_VARIABLE = 0; \

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required before the open parenthesis '('
#84: FILE: include/linux/debug.h:33:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#87: FILE: include/linux/debug.h:36:
+#define debug(fmt,arg...) do { if (DEBUG_VARIABLE) unc_debug(fmt, ##arg); } while (0)
                  ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#90: FILE: include/linux/debug.h:39:
+#define ldebug(level,fmt,arg...) do { if (DEBUG_VARIABLE >= level) unc_debug(fmt, ##arg); } while (0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: include/linux/debug.h:39:
+#define ldebug(level,fmt,arg...) do { if (DEBUG_VARIABLE >= level) unc_debug(fmt, ##arg); } while (0)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: include/linux/debug.h:39:
+#define ldebug(level,fmt,arg...) do { if (DEBUG_VARIABLE >= level) unc_debug(fmt, ##arg); } while (0)
                         ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#90: FILE: include/linux/debug.h:39:
+#define ldebug(level,fmt,arg...) do { if (DEBUG_VARIABLE >= level) unc_debug(fmt, ##arg); } while (0)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'level' may be better as '(level)' to avoid precedence issues
#90: FILE: include/linux/debug.h:39:
+#define ldebug(level,fmt,arg...) do { if (DEBUG_VARIABLE >= level) unc_debug(fmt, ##arg); } while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#92: FILE: include/linux/debug.h:41:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: include/linux/debug.h:43:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: include/linux/debug.h:44:
+ * debug messages (de)activated by the preprocessor $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#98: FILE: include/linux/debug.h:47:
+#define pr_debug(fmt,arg...) unc_debug(fmt, ##arg)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#100: FILE: include/linux/debug.h:49:
+#define pr_debug(fmt,arg...) do { } while (0)
                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 8 warnings, 3 checks, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
