ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#92: FILE: include/linux/security.h:1241:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: include/linux/security.h:1245:
+extern int security_init	(void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: include/linux/security.h:1245:
+extern int security_init	(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#98: FILE: include/linux/security.h:1246:
+extern int register_security	(struct security_operations *ops);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#98: FILE: include/linux/security.h:1246:
+extern int register_security	(struct security_operations *ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#99: FILE: include/linux/security.h:1247:
+extern int unregister_security	(struct security_operations *ops);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#99: FILE: include/linux/security.h:1247:
+extern int unregister_security	(struct security_operations *ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: include/linux/security.h:1248:
+extern int mod_reg_security	(const char *name, struct security_operations =

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: include/linux/security.h:1248:
+extern int mod_reg_security	(const char *name, struct security_operations =

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct security_operations' should also have an identifier name
#100: FILE: include/linux/security.h:1248:
+extern int mod_reg_security	(const char *name, struct security_operations =

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#102: FILE: include/linux/security.h:1249:
+extern int mod_unreg_security	(const char *name, struct security_operation=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#102: FILE: include/linux/security.h:1249:
+extern int mod_unreg_security	(const char *name, struct security_operation=
                              	                                            ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: include/linux/security.h:1249:
+extern int mod_unreg_security	(const char *name, struct security_operation=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct security_operation' should also have an identifier name
#102: FILE: include/linux/security.h:1249:
+extern int mod_unreg_security	(const char *name, struct security_operation=

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'seop' may be better as '(seop)' to avoid precedence issues
#105: FILE: include/linux/security.h:1251:
+#define COND_SECURITY(seop, def) security_ops->seop

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: include/linux/security.h:1273:
+	return COND_SECURITY(ptrace (parent, child),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: include/linux/security.h:1274:
+			 cap_ptrace (parent, child));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#139: FILE: include/linux/security.h:1281:
+	return COND_SECURITY(capget (target, effective, inheritable, permitted),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: include/linux/security.h:1282:
+			 cap_capget (target, effective, inheritable, permitted));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: include/linux/security.h:1289:
+	return COND_SECURITY(capset_check (target, effective, inheritable, permit=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#150: FILE: include/linux/security.h:1289:
+	return COND_SECURITY(capset_check (target, effective, inheritable, permit=
 	                                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: include/linux/security.h:1290:
+			 cap_capset_check (target, effective, inheritable, permitted));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#161: FILE: include/linux/security.h:1297:
+	COND_SECURITY(capset_set (target, effective, inheritable, permitted),

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: include/linux/security.h:1298:
+^I       ^I  cap_capset_set (target, effective, inheritable, permitted));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: include/linux/security.h:1298:
+^I       ^I  cap_capset_set (target, effective, inheritable, permitted));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: include/linux/security.h:1298:
+	COND_SECURITY(capset_set (target, effective, inheritable, permitted),
+	       	  cap_capset_set (target, effective, inheritable, permitted));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: include/linux/security.h:1298:
+	       	  cap_capset_set (target, effective, inheritable, permitted));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: include/linux/security.h:1302:
+	return COND_SECURITY(acct (file),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: include/linux/security.h:1313:
+	return COND_SECURITY(quotactl (cmds, type, id, sb),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: include/linux/security.h:1318:
+	return COND_SECURITY(quota_on (dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: include/linux/security.h:1338:
+	return COND_SECURITY(bprm_alloc_security (bprm),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#226: FILE: include/linux/security.h:1343:
+	COND_SECURITY(bprm_free_security (bprm),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: include/linux/security.h:1344:
+	COND_SECURITY(bprm_free_security (bprm),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: include/linux/security.h:1348:
+	COND_SECURITY(bprm_apply_creds (bprm, unsafe),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: include/linux/security.h:1349:
+	COND_SECURITY(bprm_apply_creds (bprm, unsafe),
+		  cap_bprm_apply_creds (bprm, unsafe));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: include/linux/security.h:1349:
+		  cap_bprm_apply_creds (bprm, unsafe));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: include/linux/security.h:1353:
+	COND_SECURITY(bprm_post_apply_creds (bprm),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: include/linux/security.h:1354:
+	COND_SECURITY(bprm_post_apply_creds (bprm),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: include/linux/security.h:1358:
+	return COND_SECURITY(bprm_set_security (bprm),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: include/linux/security.h:1359:
+			 cap_bprm_set_security (bprm));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: include/linux/security.h:1363:
+	return COND_SECURITY(bprm_check_security (bprm),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: include/linux/security.h:1368:
+	return COND_SECURITY(bprm_secureexec (bprm),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#261: FILE: include/linux/security.h:1369:
+			 cap_bprm_secureexec (bprm));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: include/linux/security.h:1373:
+	return COND_SECURITY(sb_alloc_security (sb),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: include/linux/security.h:1378:
+	COND_SECURITY(sb_free_security (sb),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: include/linux/security.h:1379:
+	COND_SECURITY(sb_free_security (sb),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: include/linux/security.h:1384:
+	return COND_SECURITY(sb_copy_data (type, orig, copy),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: include/linux/security.h:1394:
+	return COND_SECURITY(sb_statfs (sb),

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#306: FILE: include/linux/security.h:1401:
+	return COND_SECURITY(sb_mount (dev_name, nd, type, flags, data),
 	                                         ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#314: FILE: include/linux/security.h:1407:
+	return COND_SECURITY(sb_check_sb (mnt, nd),
 	                                       ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#314: FILE: include/linux/security.h:1407:
+	return COND_SECURITY(sb_check_sb (mnt, nd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: include/linux/security.h:1417:
+	COND_SECURITY(sb_umount_close (mnt),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: include/linux/security.h:1418:
+	COND_SECURITY(sb_umount_close (mnt),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#335: FILE: include/linux/security.h:1422:
+	COND_SECURITY(sb_umount_busy (mnt),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: include/linux/security.h:1423:
+	COND_SECURITY(sb_umount_busy (mnt),
+		  SE_NOP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: include/linux/security.h:1429:
+	COND_SECURITY(sb_post_remount (mnt, flags, data),
+		  SE_NOP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: include/linux/security.h:1434:
+	COND_SECURITY(sb_post_mountroot (),
+		  SE_NOP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: include/linux/security.h:1440:
+	COND_SECURITY(sb_post_addmount (mnt, mountpoint_nd),
+		  SE_NOP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: include/linux/security.h:1452:
+	COND_SECURITY(sb_post_pivotroot (old_nd, new_nd),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#381: FILE: include/linux/security.h:1456:
+	return COND_SECURITY(inode_alloc_security (inode),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#388: FILE: include/linux/security.h:1461:
+	COND_SECURITY(inode_free_security (inode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: include/linux/security.h:1462:
+	COND_SECURITY(inode_free_security (inode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#397: FILE: include/linux/security.h:1469:
+	return COND_SECURITY(inode_create (dir, dentry, mode),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#406: FILE: include/linux/security.h:1476:
+	COND_SECURITY(inode_post_create (dir, dentry, mode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: include/linux/security.h:1477:
+	COND_SECURITY(inode_post_create (dir, dentry, mode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#415: FILE: include/linux/security.h:1483:
+	return COND_SECURITY(inode_link (old_dentry, dir, new_dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: include/linux/security.h:1490:
+	COND_SECURITY(inode_post_link (old_dentry, dir, new_dentry),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: include/linux/security.h:1491:
+	COND_SECURITY(inode_post_link (old_dentry, dir, new_dentry),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#432: FILE: include/linux/security.h:1496:
+	return COND_SECURITY(inode_unlink (dir, dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#441: FILE: include/linux/security.h:1503:
+	return COND_SECURITY(inode_symlink (dir, dentry, old_name),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#450: FILE: include/linux/security.h:1510:
+	COND_SECURITY(inode_post_symlink (dir, dentry, old_name),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: include/linux/security.h:1511:
+	COND_SECURITY(inode_post_symlink (dir, dentry, old_name),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#459: FILE: include/linux/security.h:1517:
+	return COND_SECURITY(inode_mkdir (dir, dentry, mode),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#468: FILE: include/linux/security.h:1524:
+	COND_SECURITY(inode_post_mkdir (dir, dentry, mode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: include/linux/security.h:1525:
+	COND_SECURITY(inode_post_mkdir (dir, dentry, mode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#476: FILE: include/linux/security.h:1530:
+	return COND_SECURITY(inode_rmdir (dir, dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: include/linux/security.h:1537:
+	return COND_SECURITY(inode_mknod (dir, dentry, mode, dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#494: FILE: include/linux/security.h:1544:
+	COND_SECURITY(inode_post_mknod (dir, dentry, mode, dev),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: include/linux/security.h:1545:
+	COND_SECURITY(inode_post_mknod (dir, dentry, mode, dev),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#505: FILE: include/linux/security.h:1552:
+	return COND_SECURITY(inode_rename (old_dir, old_dentry,

ERROR:SPACING: space required after that ',' (ctx:VxO)
#506: FILE: include/linux/security.h:1553:
+					   new_dir, new_dentry),=20
 					                       ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#506: FILE: include/linux/security.h:1553:
+					   new_dir, new_dentry),=20
 					                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#517: FILE: include/linux/security.h:1561:
+	COND_SECURITY(inode_post_rename (old_dir, old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#525: FILE: include/linux/security.h:1567:
+	return COND_SECURITY(inode_readlink (dentry),

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#533: FILE: include/linux/security.h:1573:
+	return COND_SECURITY(inode_follow_link (dentry, nd),
 	                                                ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: include/linux/security.h:1573:
+	return COND_SECURITY(inode_follow_link (dentry, nd),

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#541: FILE: include/linux/security.h:1579:
+	return COND_SECURITY(inode_permission (inode, mask, nd),
 	                                                    ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: include/linux/security.h:1579:
+	return COND_SECURITY(inode_permission (inode, mask, nd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#549: FILE: include/linux/security.h:1585:
+	return COND_SECURITY(inode_setattr (dentry, attr),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#557: FILE: include/linux/security.h:1591:
+	return COND_SECURITY(inode_getattr (mnt, dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#564: FILE: include/linux/security.h:1596:
+	COND_SECURITY(inode_delete (inode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: include/linux/security.h:1597:
+	COND_SECURITY(inode_delete (inode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#573: FILE: include/linux/security.h:1602:
+	return COND_SECURITY(inode_setxattr (dentry, name, value, size, flags),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#574: FILE: include/linux/security.h:1603:
+			 cap_inode_setxattr (dentry, name, value, size, flags));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: include/linux/security.h:1609:
+	COND_SECURITY(inode_post_setxattr (dentry, name, value, size, flags),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#636: FILE: include/linux/security.h:1643:
+	return COND_SECURITY(file_permission (file, mask),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#643: FILE: include/linux/security.h:1648:
+	return COND_SECURITY(file_alloc_security (file),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#650: FILE: include/linux/security.h:1653:
+	COND_SECURITY(file_free_security (file),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#651: FILE: include/linux/security.h:1654:
+	COND_SECURITY(file_free_security (file),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#658: FILE: include/linux/security.h:1659:
+	return COND_SECURITY(file_ioctl (file, cmd, arg),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#667: FILE: include/linux/security.h:1665:
+	return COND_SECURITY(file_mmap (file, prot, flags),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#682: FILE: include/linux/security.h:1676:
+	return COND_SECURITY(file_lock (file, cmd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#690: FILE: include/linux/security.h:1682:
+	return COND_SECURITY(file_fcntl (file, cmd, arg),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#706: FILE: include/linux/security.h:1694:
+	return COND_SECURITY(file_send_sigiotask (tsk, fown, sig),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#727: FILE: include/linux/security.h:1709:
+	return COND_SECURITY(task_alloc_security (p),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#734: FILE: include/linux/security.h:1714:
+	COND_SECURITY(task_free_security (p),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#735: FILE: include/linux/security.h:1715:
+	COND_SECURITY(task_free_security (p),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#742: FILE: include/linux/security.h:1720:
+	return COND_SECURITY(task_setuid (id0, id1, id2, flags),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#752: FILE: include/linux/security.h:1726:
+	return COND_SECURITY(task_post_setuid (old_ruid, old_euid, old_suid, flag=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#752: FILE: include/linux/security.h:1726:
+	return COND_SECURITY(task_post_setuid (old_ruid, old_euid, old_suid, flag=
 	                                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#754: FILE: include/linux/security.h:1727:
+			 cap_task_post_setuid (old_ruid, old_euid, old_suid, flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#761: FILE: include/linux/security.h:1732:
+	return COND_SECURITY(task_setgid (id0, id1, id2, flags),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#768: FILE: include/linux/security.h:1737:
+	return COND_SECURITY(task_setpgid (p, pgid),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#775: FILE: include/linux/security.h:1742:
+	return COND_SECURITY(task_getpgid (p),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#782: FILE: include/linux/security.h:1747:
+	return COND_SECURITY(task_getsid (p),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#789: FILE: include/linux/security.h:1752:
+	return COND_SECURITY(task_setgroups (group_info),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#828: FILE: include/linux/security.h:1781:
+	return COND_SECURITY(task_kill (p, info, sig),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#845: FILE: include/linux/security.h:1794:
+	return COND_SECURITY(task_prctl (option, arg2, arg3, arg4, arg5),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#853: FILE: include/linux/security.h:1800:
+	COND_SECURITY(task_reparent_to_init (p),
+		  cap_task_reparent_to_init (p));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: include/linux/security.h:1805:
+	COND_SECURITY(task_to_inode(p, inode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#868: FILE: include/linux/security.h:1810:
+	return COND_SECURITY(ipc_permission (ipcp, flag),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#875: FILE: include/linux/security.h:1815:
+	return COND_SECURITY(msg_msg_alloc_security (msg),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#883: FILE: include/linux/security.h:1821:
+	COND_SECURITY(msg_msg_free_security(msg),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#889: FILE: include/linux/security.h:1825:
+	return COND_SECURITY(msg_queue_alloc_security (msq),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#896: FILE: include/linux/security.h:1830:
+	COND_SECURITY(msg_queue_free_security (msq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#897: FILE: include/linux/security.h:1831:
+	COND_SECURITY(msg_queue_free_security (msq),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#912: FILE: include/linux/security.h:1841:
+	return COND_SECURITY(msg_queue_msgctl (msq, cmd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: include/linux/security.h:1855:
+	return COND_SECURITY(msg_queue_msgrcv (msq, msg, target, type, mode),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#937: FILE: include/linux/security.h:1860:
+	return COND_SECURITY(shm_alloc_security (shp),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#944: FILE: include/linux/security.h:1865:
+	COND_SECURITY(shm_free_security (shp),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: include/linux/security.h:1866:
+	COND_SECURITY(shm_free_security (shp),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#959: FILE: include/linux/security.h:1876:
+	return COND_SECURITY(shm_shmctl (shp, cmd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#974: FILE: include/linux/security.h:1887:
+	return COND_SECURITY(sem_alloc_security (sma),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#981: FILE: include/linux/security.h:1892:
+	COND_SECURITY(sem_free_security (sma),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#982: FILE: include/linux/security.h:1893:
+	COND_SECURITY(sem_free_security (sma),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#996: FILE: include/linux/security.h:1902:
+	return COND_SECURITY(sem_semctl (sma, cmd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1005: FILE: include/linux/security.h:1909:
+	return COND_SECURITY(sem_semop (sma, sops, nsops, alter),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1014: FILE: include/linux/security.h:1915:
+	COND_SECURITY(d_instantiate (dentry, inode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1168: FILE: include/linux/security.h:1934:
+	return COND_SECURITY(netlink_recv (skb),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1169: FILE: include/linux/security.h:1935:
+			 cap_netlink_recv (skb));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1173: FILE: include/linux/security.h:1937:
 }
+/* CONFIG_SECURITY_NETWORK stubs */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1174: FILE: include/linux/security.h:1938:
+static inline int security_unix_stream_connect(struct socket * sock,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1175: FILE: include/linux/security.h:1939:
+					       struct socket * other,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1175: FILE: include/linux/security.h:1939:
+					       struct socket * other,=20
 					                            ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1175: FILE: include/linux/security.h:1939:
+					       struct socket * other,=20
 					                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1176: FILE: include/linux/security.h:1940:
+					       struct sock * newsk)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1188: FILE: include/linux/security.h:1945:
 }
+static inline int security_unix_may_send(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1188: FILE: include/linux/security.h:1945:
+static inline int security_unix_may_send(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1188: FILE: include/linux/security.h:1945:
+static inline int security_unix_may_send(struct socket * sock,=20
                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1188: FILE: include/linux/security.h:1945:
+static inline int security_unix_may_send(struct socket * sock,=20
                                                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1189: FILE: include/linux/security.h:1946:
+					 struct socket * other)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1198: FILE: include/linux/security.h:1951:
 }
+static inline int security_socket_create (int family, int type,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1207: FILE: include/linux/security.h:1957:
 }
+static inline void security_socket_post_create(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1207: FILE: include/linux/security.h:1957:
+static inline void security_socket_post_create(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1207: FILE: include/linux/security.h:1957:
+static inline void security_socket_post_create(struct socket * sock,=20
                                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1207: FILE: include/linux/security.h:1957:
+static inline void security_socket_post_create(struct socket * sock,=20
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1209: FILE: include/linux/security.h:1959:
+					       int type,=20
 					               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1209: FILE: include/linux/security.h:1959:
+					       int type,=20
 					                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1214: FILE: include/linux/security.h:1963:
+	COND_SECU_NET(socket_post_create(sock, family, type, protocol, kern),
+		  SE_NOP);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1220: FILE: include/linux/security.h:1965:
 }
+static inline int security_socket_bind(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1220: FILE: include/linux/security.h:1965:
+static inline int security_socket_bind(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1220: FILE: include/linux/security.h:1965:
+static inline int security_socket_bind(struct socket * sock,=20
                                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1220: FILE: include/linux/security.h:1965:
+static inline int security_socket_bind(struct socket * sock,=20
                                                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1221: FILE: include/linux/security.h:1966:
+				       struct sockaddr * address,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1221: FILE: include/linux/security.h:1966:
+				       struct sockaddr * address,=20
 				                                ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1221: FILE: include/linux/security.h:1966:
+				       struct sockaddr * address,=20
 				                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1222: FILE: include/linux/security.h:1967:
+				       struct sockaddr * address,=20
+				       int addrlen)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1231: FILE: include/linux/security.h:1972:
 }
+static inline int security_socket_connect(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1231: FILE: include/linux/security.h:1972:
+static inline int security_socket_connect(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1231: FILE: include/linux/security.h:1972:
+static inline int security_socket_connect(struct socket * sock,=20
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1231: FILE: include/linux/security.h:1972:
+static inline int security_socket_connect(struct socket * sock,=20
                                                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1232: FILE: include/linux/security.h:1973:
+					  struct sockaddr * address,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1232: FILE: include/linux/security.h:1973:
+					  struct sockaddr * address,=20
 					                           ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1232: FILE: include/linux/security.h:1973:
+					  struct sockaddr * address,=20
 					                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1233: FILE: include/linux/security.h:1974:
+					  struct sockaddr * address,=20
+					  int addrlen)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1241: FILE: include/linux/security.h:1979:
 }
+static inline int security_socket_listen(struct socket * sock, int backlog)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1241: FILE: include/linux/security.h:1979:
+static inline int security_socket_listen(struct socket * sock, int backlog)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1267: FILE: include/linux/security.h:1984:
 }
+static inline int security_socket_accept(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1267: FILE: include/linux/security.h:1984:
+static inline int security_socket_accept(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1267: FILE: include/linux/security.h:1984:
+static inline int security_socket_accept(struct socket * sock,=20
                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1267: FILE: include/linux/security.h:1984:
+static inline int security_socket_accept(struct socket * sock,=20
                                                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1268: FILE: include/linux/security.h:1985:
+					 struct socket * newsock)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1280: FILE: include/linux/security.h:1990:
 }
+static inline void security_socket_post_accept(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1280: FILE: include/linux/security.h:1990:
+static inline void security_socket_post_accept(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1280: FILE: include/linux/security.h:1990:
+static inline void security_socket_post_accept(struct socket * sock,=20
                                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1280: FILE: include/linux/security.h:1990:
+static inline void security_socket_post_accept(struct socket * sock,=20
                                                                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1281: FILE: include/linux/security.h:1991:
+					       struct socket * newsock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1285: FILE: include/linux/security.h:1994:
+	COND_SECU_NET(socket_post_accept(sock, newsock),
+		  SE_NOP);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1294: FILE: include/linux/security.h:1996:
 }
+static inline int security_socket_sendmsg(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1294: FILE: include/linux/security.h:1996:
+static inline int security_socket_sendmsg(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1294: FILE: include/linux/security.h:1996:
+static inline int security_socket_sendmsg(struct socket * sock,=20
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1294: FILE: include/linux/security.h:1996:
+static inline int security_socket_sendmsg(struct socket * sock,=20
                                                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1295: FILE: include/linux/security.h:1997:
+					  struct msghdr * msg, int size)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1310: FILE: include/linux/security.h:2002:
 }
+static inline int security_socket_recvmsg(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1310: FILE: include/linux/security.h:2002:
+static inline int security_socket_recvmsg(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1310: FILE: include/linux/security.h:2002:
+static inline int security_socket_recvmsg(struct socket * sock,=20
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1310: FILE: include/linux/security.h:2002:
+static inline int security_socket_recvmsg(struct socket * sock,=20
                                                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1311: FILE: include/linux/security.h:2003:
+					  struct msghdr * msg, int size,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1311: FILE: include/linux/security.h:2003:
+					  struct msghdr * msg, int size,=20
 					                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1311: FILE: include/linux/security.h:2003:
+					  struct msghdr * msg, int size,=20
 					                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1312: FILE: include/linux/security.h:2004:
+					  struct msghdr * msg, int size,=20
+					  int flags)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1326: FILE: include/linux/security.h:2009:
 }
+static inline int security_socket_getsockname(struct socket * sock)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1326: FILE: include/linux/security.h:2009:
+static inline int security_socket_getsockname(struct socket * sock)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1336: FILE: include/linux/security.h:2014:
 }
+static inline int security_socket_getpeername(struct socket * sock)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1336: FILE: include/linux/security.h:2014:
+static inline int security_socket_getpeername(struct socket * sock)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1351: FILE: include/linux/security.h:2019:
 }
+static inline int security_socket_getsockopt(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1351: FILE: include/linux/security.h:2019:
+static inline int security_socket_getsockopt(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1351: FILE: include/linux/security.h:2019:
+static inline int security_socket_getsockopt(struct socket * sock,=20
                                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1351: FILE: include/linux/security.h:2019:
+static inline int security_socket_getsockopt(struct socket * sock,=20
                                                                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1366: FILE: include/linux/security.h:2025:
 }
+static inline int security_socket_setsockopt(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1366: FILE: include/linux/security.h:2025:
+static inline int security_socket_setsockopt(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1366: FILE: include/linux/security.h:2025:
+static inline int security_socket_setsockopt(struct socket * sock,=20
                                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1366: FILE: include/linux/security.h:2025:
+static inline int security_socket_setsockopt(struct socket * sock,=20
                                                                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1377: FILE: include/linux/security.h:2031:
 }
+static inline int security_socket_shutdown(struct socket * sock, int how)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1377: FILE: include/linux/security.h:2031:
+static inline int security_socket_shutdown(struct socket * sock, int how)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1393: FILE: include/linux/security.h:2036:
 }
+static inline int security_sock_rcv_skb (struct sock * sk,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1393: FILE: include/linux/security.h:2036:
+static inline int security_sock_rcv_skb (struct sock * sk,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1393: FILE: include/linux/security.h:2036:
+static inline int security_sock_rcv_skb (struct sock * sk,=20
                                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1393: FILE: include/linux/security.h:2036:
+static inline int security_sock_rcv_skb (struct sock * sk,=20
                                                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1394: FILE: include/linux/security.h:2037:
+					 struct sk_buff * skb)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1408: FILE: include/linux/security.h:2042:
 }
+static inline int security_socket_getpeersec(struct socket *sock, char __u=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1408: FILE: include/linux/security.h:2042:
+static inline int security_socket_getpeersec(struct socket *sock, char __u=
                                                                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1410: FILE: include/linux/security.h:2043:
+					     int __user *optlen, unsigned len)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1419: FILE: include/linux/security.h:2048:
 }
+static inline int security_sk_alloc(struct sock *sk, int family, int prior=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1419: FILE: include/linux/security.h:2048:
+static inline int security_sk_alloc(struct sock *sk, int family, int prior=
                                                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2028: FILE: include/linux/security.h:2056:
+^I^I  ^I SE_NOP);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2028: FILE: include/linux/security.h:2056:
+^I^I  ^I SE_NOP);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2028: FILE: include/linux/security.h:2056:
+	COND_SECU_NET(sk_free_security(sk),
+		  	 SE_NOP);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206984.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 68 errors, 104 warnings, 56 checks, 1958 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206984.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
