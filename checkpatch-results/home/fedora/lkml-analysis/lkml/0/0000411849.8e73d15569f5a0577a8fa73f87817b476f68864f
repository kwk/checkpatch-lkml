WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#100: 
diff -urP -I \$Id:.*Exp \$ -X /usr/src/patch.exclude linux-2.5.48-bk2-kb/arch/i386/kernel/entry.S linux/arch/i386/kernel/entry.S

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: arch/i386/kernel/entry.S:805:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: arch/i386/kernel/entry.S:806:
+ $

ERROR:SPACING: space prohibited after that open parenthesis '('
#183: FILE: include/asm-generic/siginfo.h:48:
+			char _pad[sizeof( __ARCH_SI_UID_T) - sizeof(int)];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#213: FILE: include/asm-generic/siginfo.h:243:
+		 int _tid;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#237: FILE: include/asm-i386/posix_types.h:25:
+typedef int		__kernel_timer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#238: FILE: include/asm-i386/posix_types.h:26:
+typedef int		__kernel_clockid_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#258: FILE: include/asm-i386/signal.h:221:
 }
+#ifndef _STRUCT_TIMESPEC

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: include/asm-i386/signal.h:233:
+ * The issue is that these functions need the *regs pointer which is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: include/asm-i386/signal.h:241:
+ * could be undefined, resulting in not needing to stack all the $

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#279: FILE: include/asm-i386/signal.h:242:
+ * parms over again, i.e. better (faster AND smaller) code.
    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: include/asm-i386/signal.h:245:
+ * on the way to do_signal().  It (i.e. do_signal()) saves the regs on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: include/asm-i386/signal.h:248:
+ * set in the register PRIOR to calling do_signal().  See our answer $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#290: FILE: include/asm-i386/signal.h:253:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: include/asm-i386/signal.h:255:
+extern long do_clock_nanosleep(struct pt_regs *regs, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: include/asm-i386/signal.h:255:
+extern long do_clock_nanosleep(struct pt_regs *regs, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: include/asm-i386/signal.h:256:
+^I^I^Iclockid_t which_clock, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: include/asm-i386/signal.h:256:
+extern long do_clock_nanosleep(struct pt_regs *regs, 
+			clockid_t which_clock, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: include/asm-i386/signal.h:257:
+^I^I^Iint flags, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: include/asm-i386/signal.h:258:
+^I^I^Iconst struct timespec *rqtp, $

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#298: FILE: include/asm-i386/signal.h:261:
+#define NANOSLEEP_ENTRY(a) \
+  asmlinkage long sys_nanosleep( struct timespec* rqtp, \
+                                 struct timespec * rmtp) \
+{       struct pt_regs *regs = (struct pt_regs *)&rqtp; \
+        return do_clock_nanosleep(regs, CLOCK_REALTIME, 0, rqtp, rmtp); \
+} 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: include/asm-i386/signal.h:262:
+  asmlinkage long sys_nanosleep( struct timespec* rqtp, \$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#299: FILE: include/asm-i386/signal.h:262:
+  asmlinkage long sys_nanosleep( struct timespec* rqtp, \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#299: FILE: include/asm-i386/signal.h:262:
+  asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: include/asm-i386/signal.h:263:
+                                 struct timespec * rmtp) \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: include/asm-i386/signal.h:263:
+                                 struct timespec * rmtp) \$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: include/asm-i386/signal.h:263:
+                                 struct timespec * rmtp) \

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: include/asm-i386/signal.h:265:
+        return do_clock_nanosleep(regs, CLOCK_REALTIME, 0, rqtp, rmtp); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: include/asm-i386/signal.h:265:
+        return do_clock_nanosleep(regs, CLOCK_REALTIME, 0, rqtp, rmtp); \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: include/asm-i386/signal.h:266:
+} $

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#305: FILE: include/asm-i386/signal.h:268:
+#define CLOCK_NANOSLEEP_ENTRY(a) asmlinkage long sys_clock_nanosleep( \
+                               clockid_t which_clock,      \
+                               int flags,                  \
+                               const struct timespec *rqtp, \
+                               struct timespec *rmtp)       \
+{       struct pt_regs *regs = (struct pt_regs *)&which_clock; \
+        return do_clock_nanosleep(regs, which_clock, flags, rqtp, rmtp); \
+} \
+long do_clock_nanosleep(struct pt_regs *regs, \
+                    clockid_t which_clock,      \
+                    int flags,                  \
+                    const struct timespec *rqtp, \
+                    struct timespec *rmtp)       \
+{        a

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: include/asm-i386/signal.h:269:
+                               clockid_t which_clock,      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: include/asm-i386/signal.h:269:
+                               clockid_t which_clock,      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: include/asm-i386/signal.h:270:
+                               int flags,                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: include/asm-i386/signal.h:270:
+                               int flags,                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: include/asm-i386/signal.h:271:
+                               const struct timespec *rqtp, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: include/asm-i386/signal.h:271:
+                               const struct timespec *rqtp, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: include/asm-i386/signal.h:272:
+                               struct timespec *rmtp)       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: include/asm-i386/signal.h:272:
+                               struct timespec *rmtp)       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: include/asm-i386/signal.h:274:
+        return do_clock_nanosleep(regs, which_clock, flags, rqtp, rmtp); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: include/asm-i386/signal.h:274:
+        return do_clock_nanosleep(regs, which_clock, flags, rqtp, rmtp); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: include/asm-i386/signal.h:277:
+                    clockid_t which_clock,      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: include/asm-i386/signal.h:277:
+                    clockid_t which_clock,      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: include/asm-i386/signal.h:278:
+                    int flags,                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: include/asm-i386/signal.h:278:
+                    int flags,                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: include/asm-i386/signal.h:279:
+                    const struct timespec *rqtp, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: include/asm-i386/signal.h:279:
+                    const struct timespec *rqtp, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: include/asm-i386/signal.h:280:
+                    struct timespec *rmtp)       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: include/asm-i386/signal.h:280:
+                    struct timespec *rmtp)       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: include/asm-i386/signal.h:285:
+      asmlinkage long sys_nanosleep( struct timespec* rqtp, \$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#322: FILE: include/asm-i386/signal.h:285:
+      asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:SPACING: space prohibited after that open parenthesis '('
#322: FILE: include/asm-i386/signal.h:285:
+      asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: include/asm-i386/signal.h:286:
+                                     struct timespec * rmtp) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: include/asm-i386/signal.h:286:
+                                     struct timespec * rmtp) \$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: include/asm-i386/signal.h:286:
+                                     struct timespec * rmtp) \

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: include/asm-i386/signal.h:288:
+        a$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: include/asm-i386/signal.h:288:
+        a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: include/asm-i386/signal.h:290:
+                               clockid_t which_clock,      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: include/asm-i386/signal.h:290:
+                               clockid_t which_clock,      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: include/asm-i386/signal.h:291:
+                               int flags,                  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: include/asm-i386/signal.h:291:
+                               int flags,                  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: include/asm-i386/signal.h:292:
+                               const struct timespec *rqtp, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: include/asm-i386/signal.h:292:
+                               const struct timespec *rqtp, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: include/asm-i386/signal.h:293:
+                               struct timespec *rmtp)       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: include/asm-i386/signal.h:293:
+                               struct timespec *rmtp)       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: include/asm-i386/signal.h:295:
+        a$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: include/asm-i386/signal.h:295:
+        a$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#346: FILE: include/asm-i386/unistd.h:267:
+#define __NR_timer_settime	(__NR_timer_create+1)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#347: FILE: include/asm-i386/unistd.h:268:
+#define __NR_timer_gettime	(__NR_timer_create+2)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#348: FILE: include/asm-i386/unistd.h:269:
+#define __NR_timer_getoverrun	(__NR_timer_create+3)
                              	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: include/asm-i386/unistd.h:270:
+#define __NR_timer_delete	(__NR_timer_create+4)
                          	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#350: FILE: include/asm-i386/unistd.h:271:
+#define __NR_clock_settime	(__NR_timer_create+5)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#351: FILE: include/asm-i386/unistd.h:272:
+#define __NR_clock_gettime	(__NR_timer_create+6)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#352: FILE: include/asm-i386/unistd.h:273:
+#define __NR_clock_getres	(__NR_timer_create+7)
                          	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#353: FILE: include/asm-i386/unistd.h:274:
+#define __NR_clock_nanosleep	(__NR_timer_create+8)
                             	                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#361: FILE: include/linux/id_reuse.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: include/linux/id_reuse.h:3:
+ * $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#373: FILE: include/linux/id_reuse.h:13:
+#define IDR_MASK ((1 << IDR_BITS)-1)
                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#374: FILE: include/linux/id_reuse.h:14:
+#define IDR_FULL ((int)((1ULL << (1 << IDR_BITS))-1))
                                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#381: FILE: include/linux/id_reuse.h:21:
+	struct idr_layer	*ary[1<<IDR_BITS];
 	                	      ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#389: FILE: include/linux/id_reuse.h:29:
+	spinlock_t      id_slock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#441: FILE: include/linux/id_reuse.h:81:
+	if ((unsigned)id >= (1 << n)) { // unsigned catches <=0 input

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#443: FILE: include/linux/id_reuse.h:83:
+		return(NULL);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#453: FILE: include/linux/id_reuse.h:93:
+}
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#465: FILE: include/linux/id_reuse.h:105:
+	if ((unsigned)id >= (1 << n)) { // unsigned catches <=0 input

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#466: FILE: include/linux/id_reuse.h:106:
+		return(NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#476: FILE: include/linux/id_reuse.h:116:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#495: FILE: include/linux/posix-timers.h:1:
+#ifndef _linux_POSIX_TIMERS_H

WARNING:TABSTOP: Statements should start on a tabstop
#499: FILE: include/linux/posix-timers.h:5:
+	 int  res;		    /* in nano seconds */

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#500: FILE: include/linux/posix-timers.h:6:
+	 int ( *clock_set)(struct timespec *tp);

ERROR:SPACING: space prohibited after that open parenthesis '('
#500: FILE: include/linux/posix-timers.h:6:
+	 int ( *clock_set)(struct timespec *tp);

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#501: FILE: include/linux/posix-timers.h:7:
+	 int ( *clock_get)(struct timespec *tp);

ERROR:SPACING: space prohibited after that open parenthesis '('
#501: FILE: include/linux/posix-timers.h:7:
+	 int ( *clock_get)(struct timespec *tp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: include/linux/posix-timers.h:8:
+^I int ( *nsleep)(   int flags, $

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#502: FILE: include/linux/posix-timers.h:8:
+	 int ( *nsleep)(   int flags, 

ERROR:SPACING: space prohibited after that open parenthesis '('
#502: FILE: include/linux/posix-timers.h:8:
+	 int ( *nsleep)(   int flags, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: include/linux/posix-timers.h:9:
+	 int ( *nsleep)(   int flags, 
+			   struct timespec*new_setting,

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#503: FILE: include/linux/posix-timers.h:9:
+			   struct timespec*new_setting,

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#505: FILE: include/linux/posix-timers.h:11:
+	 int ( *timer_set)(struct k_itimer *timr, int flags,

ERROR:SPACING: space prohibited after that open parenthesis '('
#505: FILE: include/linux/posix-timers.h:11:
+	 int ( *timer_set)(struct k_itimer *timr, int flags,

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#508: FILE: include/linux/posix-timers.h:14:
+	 int  ( *timer_del)(struct k_itimer *timr);

ERROR:SPACING: space prohibited after that open parenthesis '('
#508: FILE: include/linux/posix-timers.h:14:
+	 int  ( *timer_del)(struct k_itimer *timr);

WARNING:SPACING: Unnecessary space after function pointer open parenthesis
#509: FILE: include/linux/posix-timers.h:15:
+	 void ( *timer_get)(struct k_itimer *timr,

ERROR:SPACING: space prohibited after that open parenthesis '('
#509: FILE: include/linux/posix-timers.h:15:
+	 void ( *timer_get)(struct k_itimer *timr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: include/linux/posix-timers.h:16:
+	 void ( *timer_get)(struct k_itimer *timr,
+			   struct itimerspec *cur_setting);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: include/linux/posix-timers.h:18:
+struct now_struct{ $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#512: FILE: include/linux/posix-timers.h:18:
+};
+struct now_struct{ 

WARNING:SPACING: missing space after struct definition
#512: FILE: include/linux/posix-timers.h:18:
+struct now_struct{ 

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#515: FILE: include/linux/posix-timers.h:21:
+};
+#define posix_get_now(now) (now)->jiffies = jiffies;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#515: FILE: include/linux/posix-timers.h:21:
+#define posix_get_now(now) (now)->jiffies = jiffies;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#515: FILE: include/linux/posix-timers.h:21:
+#define posix_get_now(now) (now)->jiffies = jiffies;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: include/linux/posix-timers.h:23:
+                      time_before((timer)->expires, (now)->jiffies)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: include/linux/posix-timers.h:23:
+                      time_before((timer)->expires, (now)->jiffies)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'timr' - possible side-effects?
#519: FILE: include/linux/posix-timers.h:25:
+#define posix_bump_timer(timr) do { \
+                        (timr)->it_timer.expires += (timr)->it_incr; \
+                        (timr)->it_overrun++;               \
+                       }while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: include/linux/posix-timers.h:26:
+                        (timr)->it_timer.expires += (timr)->it_incr; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: include/linux/posix-timers.h:26:
+                        (timr)->it_timer.expires += (timr)->it_incr; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: include/linux/posix-timers.h:27:
+                        (timr)->it_overrun++;               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: include/linux/posix-timers.h:27:
+                        (timr)->it_overrun++;               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: include/linux/posix-timers.h:28:
+                       }while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: include/linux/posix-timers.h:28:
+                       }while (0)$

ERROR:SPACING: space required after that close brace '}'
#522: FILE: include/linux/posix-timers.h:28:
+                       }while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#548: FILE: include/linux/sched.h:296:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#565: FILE: include/linux/sched.h:632:
+extern void exit_itimers(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#565: FILE: include/linux/sched.h:632:
+extern void exit_itimers(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#584: FILE: include/linux/signal.h:235:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
+type name(p1_type p1,p2_type p2)\
+{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#585: FILE: include/linux/signal.h:236:
+type name(p1_type p1,p2_type p2)\
                     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#592: FILE: include/linux/signal.h:243:
+#define NANOSLEEP_ENTRY(a) asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:SPACING: space prohibited after that open parenthesis '('
#592: FILE: include/linux/signal.h:243:
+#define NANOSLEEP_ENTRY(a) asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#593: FILE: include/linux/signal.h:244:
+							  struct timespec * rmtp) \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: include/linux/signal.h:254:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: include/linux/signal.h:254:
+ $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#650: FILE: include/linux/time.h:154:
+extern int do_sys_settimeofday(struct timeval *tv, struct timezone *tz);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#651: FILE: include/linux/time.h:155:
+extern void clock_was_set(void); // call when ever the clock is set

CHECK:LINE_SPACING: Please don't use multiple blank lines
#660: FILE: include/linux/time.h:182:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#688: FILE: include/linux/types.h:26:
+typedef __kernel_timer_t	timer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#689: FILE: include/linux/types.h:27:
+typedef __kernel_clockid_t	clockid_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#712: FILE: kernel/exit.c:414:
 
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#739: FILE: kernel/id_reuse.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: kernel/id_reuse.c:8:
+ * Small id to pointer translation service.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#748: FILE: kernel/id_reuse.c:10:
+ * It uses a radix tree like structure as a sparse array indexed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: kernel/id_reuse.c:12:
+ * an new id quick.  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#756: FILE: kernel/id_reuse.c:18:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#780: FILE: kernel/id_reuse.c:42:
+	if (!(p = id_free))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#781: FILE: kernel/id_reuse.c:43:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#785: FILE: kernel/id_reuse.c:47:
+	return(p);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#807: FILE: kernel/id_reuse.c:69:
+		return(n);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#811: FILE: kernel/id_reuse.c:73:
+	v = sub_alloc(p->ary[n], shift-IDR_BITS, ptr);
 	                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#819: FILE: kernel/id_reuse.c:81:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#827: FILE: kernel/id_reuse.c:89:
+	while (id_free_cnt < n+1) {
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#829: FILE: kernel/id_reuse.c:91:
+		struct idr_layer *new;
+		idr_unlock(idp);

ERROR:SPACING: space required before the open parenthesis '('
#831: FILE: kernel/id_reuse.c:93:
+		if(new == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#831: FILE: kernel/id_reuse.c:93:
+		if(new == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#838: FILE: kernel/id_reuse.c:100:
+^I * Add a new layer if the array is full $

ERROR:SPACING: space required before the open brace '{'
#840: FILE: kernel/id_reuse.c:102:
+	if (idp->top->bitmap == IDR_FULL){

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#848: FILE: kernel/id_reuse.c:110:
+	v = sub_alloc(idp->top, n-IDR_BITS, ptr);
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#852: FILE: kernel/id_reuse.c:114:
+	return(v+1);
 	        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#854: FILE: kernel/id_reuse.c:116:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#862: FILE: kernel/id_reuse.c:124:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#863: FILE: kernel/id_reuse.c:125:
+if (!p) {
+printk("in sub_remove for id=%d called with null pointer.\n", id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#864: FILE: kernel/id_reuse.c:126:
+printk("in sub_remove for id=%d called with null pointer.\n", id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sub_remove', this function's name, in a string
#864: FILE: kernel/id_reuse.c:126:
+printk("in sub_remove for id=%d called with null pointer.\n", id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#865: FILE: kernel/id_reuse.c:127:
+return(0);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#867: FILE: kernel/id_reuse.c:129:
+}
+	if (shift != 0) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#868: FILE: kernel/id_reuse.c:130:
+		if (sub_remove(p->ary[n], shift-IDR_BITS, id)) {
 		                               ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#873: FILE: kernel/id_reuse.c:135:
+		return (0);      // for now, prune only at 0

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#874: FILE: kernel/id_reuse.c:136:
+		return (0);      // for now, prune only at 0
+	} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#877: FILE: kernel/id_reuse.c:139:
+^I} $

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#878: FILE: kernel/id_reuse.c:140:
+	return (! p->bitmap);
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#889: FILE: kernel/id_reuse.c:151:
+	sub_remove(idp->top, (idp->layers-1)*IDR_BITS, id);
 	                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#889: FILE: kernel/id_reuse.c:151:
+	sub_remove(idp->top, (idp->layers-1)*IDR_BITS, id);
 	                                    ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#890: FILE: kernel/id_reuse.c:152:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#895: FILE: kernel/id_reuse.c:157:
+^I * This is not too bad as we do prune the leaf nodes. So for a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#896: FILE: kernel/id_reuse.c:158:
+^I * three layer tree we will only be left with 33 nodes when $

ERROR:SPACING: space required before the open brace '{'
#899: FILE: kernel/id_reuse.c:161:
+	if(idp->top->bitmap == 1 && idp->layers > 1 ){  // We can drop a layer

ERROR:SPACING: space prohibited before that close parenthesis ')'
#899: FILE: kernel/id_reuse.c:161:
+	if(idp->top->bitmap == 1 && idp->layers > 1 ){  // We can drop a layer

ERROR:SPACING: space required before the open parenthesis '('
#899: FILE: kernel/id_reuse.c:161:
+	if(idp->top->bitmap == 1 && idp->layers > 1 ){  // We can drop a layer

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: kernel/id_reuse.c:170:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#908: FILE: kernel/id_reuse.c:170:
+	if (id_free_cnt >= IDR_FREE_MAX) {
+		

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: kernel/id_reuse.c:182:
+^I^Iidr_layer_cache = kmem_cache_create("idr_layer_cache", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#921: FILE: kernel/id_reuse.c:183:
+		idr_layer_cache = kmem_cache_create("idr_layer_cache", 
+			sizeof(struct idr_layer), 0, 0, 0, 0);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#936: FILE: kernel/id_reuse.c:198:
+__initcall(init_id_cache);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#941: FILE: kernel/posix-timers.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#944: FILE: kernel/posix-timers.c:4:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: kernel/posix-timers.c:9:
+/* These are all the functions necessary to implement $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#959: FILE: kernel/posix-timers.c:19:
+#include <asm/uaccess.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: kernel/posix-timers.c:30:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: kernel/posix-timers.c:30:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#970: FILE: kernel/posix-timers.c:30:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
+		       u64 result = dividend;		\
+		       *remainder = do_div(result,divisor); \
+		       result; })

WARNING:TABSTOP: Statements should start on a tabstop
#971: FILE: kernel/posix-timers.c:31:
+		       u64 result = dividend;		\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#972: FILE: kernel/posix-timers.c:32:
+		       *remainder = do_div(result,divisor); \
 		                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#983: FILE: kernel/posix-timers.c:43:
+ *int idr_get_new(struct idr *idp, void *ptr);       to get a new id and $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#996: FILE: kernel/posix-timers.c:56:
+/*
+   * Lets keep our timers in a slab cache :-)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#997: FILE: kernel/posix-timers.c:57:
+   * Lets keep our timers in a slab cache :-)
+ */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1001: FILE: kernel/posix-timers.c:61:
+
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tmr' may be better as '(tmr)' to avoid precedence issues
#1009: FILE: kernel/posix-timers.c:69:
+#define timer_active(tmr) (tmr->it_timer.entry.prev != (void *)TIMER_INACTIVE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tmr' may be better as '(tmr)' to avoid precedence issues
#1010: FILE: kernel/posix-timers.c:70:
+#define set_timer_inactive(tmr) tmr->it_timer.entry.prev = (void *)TIMER_INACTIVE

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1018: FILE: kernel/posix-timers.c:78:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1026: FILE: kernel/posix-timers.c:86:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1042: FILE: kernel/posix-timers.c:102:
+ $

WARNING:TYPO_SPELLING: 'underlaying' may be misspelled - perhaps 'underlying'?
#1046: FILE: kernel/posix-timers.c:106:
+ *	    resolution may depend on the underlaying clock hardware and
   	                                 ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: kernel/posix-timers.c:120:
+ *^I    fields are not modified by timer code. $

WARNING:TYPO_SPELLING: 'ignors' may be misspelled - perhaps 'ignores'?
#1064: FILE: kernel/posix-timers.c:124:
+ *          there, but the code ignors it.
                                 ^^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#1076: FILE: kernel/posix-timers.c:136:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                        ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#1076: FILE: kernel/posix-timers.c:136:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	                       ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1076: FILE: kernel/posix-timers.c:136:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                       ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1076: FILE: kernel/posix-timers.c:136:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	 ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1076: FILE: kernel/posix-timers.c:136:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1076: FILE: kernel/posix-timers.c:136:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'clock_fun' - possible side-effects?
#1076: FILE: kernel/posix-timers.c:136:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'clock_fun' may be better as '(clock_fun)' to avoid precedence issues
#1076: FILE: kernel/posix-timers.c:136:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'parms' - possible side-effects?
#1076: FILE: kernel/posix-timers.c:136:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#1077: FILE: kernel/posix-timers.c:137:
+							      clock_fun parms
 							                ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1079: FILE: kernel/posix-timers.c:139:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1079: FILE: kernel/posix-timers.c:139:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \
                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1079: FILE: kernel/posix-timers.c:139:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1081: FILE: kernel/posix-timers.c:141:
+					     (a,b))
 					       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1083: FILE: kernel/posix-timers.c:143:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1083: FILE: kernel/posix-timers.c:143:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1083: FILE: kernel/posix-timers.c:143:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1083: FILE: kernel/posix-timers.c:143:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1085: FILE: kernel/posix-timers.c:145:
+					    (a,b,c))
 					      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1085: FILE: kernel/posix-timers.c:145:
+					    (a,b,c))
 					        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1087: FILE: kernel/posix-timers.c:147:
+#define p_timer_del( clock,a) if_clock_do((clock)->timer_del, \
                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1087: FILE: kernel/posix-timers.c:147:
+#define p_timer_del( clock,a) if_clock_do((clock)->timer_del, \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1091: FILE: kernel/posix-timers.c:151:
+void register_posix_clock(int clock_id, struct k_clock * new_clock);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1091: FILE: kernel/posix-timers.c:151:
+void register_posix_clock(int clock_id, struct k_clock * new_clock);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1095: FILE: kernel/posix-timers.c:155:
+int do_posix_clock_monotonic_gettime(struct timespec *tp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1097: FILE: kernel/posix-timers.c:157:
+int do_posix_clock_monotonic_settime(struct timespec *tp);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1098: FILE: kernel/posix-timers.c:158:
+static struct k_itimer* lock_timer( timer_t timer_id,long *flags);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1098: FILE: kernel/posix-timers.c:158:
+static struct k_itimer* lock_timer( timer_t timer_id,long *flags);
                                                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1098: FILE: kernel/posix-timers.c:158:
+static struct k_itimer* lock_timer( timer_t timer_id,long *flags);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1099: FILE: kernel/posix-timers.c:159:
+static inline void unlock_timer(struct k_itimer *timr,long flags);
                                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1101: FILE: kernel/posix-timers.c:161:
+/* $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1107: FILE: kernel/posix-timers.c:167:
+	struct k_clock clock_realtime = {.res = NSEC_PER_SEC/HZ};
 	                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: kernel/posix-timers.c:168:
+^Istruct k_clock clock_monotonic = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1109: FILE: kernel/posix-timers.c:169:
+	struct k_clock clock_monotonic = 
+	{.res = NSEC_PER_SEC/HZ,

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1109: FILE: kernel/posix-timers.c:169:
+	{.res = NSEC_PER_SEC/HZ,
 	                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: kernel/posix-timers.c:170:
+^I .clock_get =  do_posix_clock_monotonic_gettime, $

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1113: FILE: kernel/posix-timers.c:173:
+	register_posix_clock(CLOCK_REALTIME,&clock_realtime);
 	                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1113: FILE: kernel/posix-timers.c:173:
+	register_posix_clock(CLOCK_REALTIME,&clock_realtime);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1114: FILE: kernel/posix-timers.c:174:
+	register_posix_clock(CLOCK_MONOTONIC,&clock_monotonic);
 	                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1114: FILE: kernel/posix-timers.c:174:
+	register_posix_clock(CLOCK_MONOTONIC,&clock_monotonic);
 	                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: kernel/posix-timers.c:177:
+	posix_timers_cache = kmem_cache_create("posix_timers_cache",
+		sizeof(struct k_itimer), 0, 0, 0, 0);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#1122: FILE: kernel/posix-timers.c:182:
+__initcall(init_posix_timers);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1124: FILE: kernel/posix-timers.c:184:
+static inline int tstojiffie(struct timespec *tp, $

ERROR:SPACING: space required before the open brace '{'
#1131: FILE: kernel/posix-timers.c:191:
+	if( nsec > NSEC_PER_SEC){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1131: FILE: kernel/posix-timers.c:191:
+	if( nsec > NSEC_PER_SEC){

ERROR:SPACING: space required before the open parenthesis '('
#1131: FILE: kernel/posix-timers.c:191:
+	if( nsec > NSEC_PER_SEC){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1144: FILE: kernel/posix-timers.c:204:
+^I * bits.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1148: FILE: kernel/posix-timers.c:208:
+^I * Do the res thing. (Don't forget the add in the declaration of nsec) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1156: FILE: kernel/posix-timers.c:216:
+^I * We trust that the optimizer will use the remainder from the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1157: FILE: kernel/posix-timers.c:217:
+^I * above div in the following operation as long as they are close. $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1161: FILE: kernel/posix-timers.c:221:
+}
+static void tstotimer(struct itimerspec * time, struct k_itimer * timer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1161: FILE: kernel/posix-timers.c:221:
+static void tstotimer(struct itimerspec * time, struct k_itimer * timer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1161: FILE: kernel/posix-timers.c:221:
+static void tstotimer(struct itimerspec * time, struct k_itimer * timer)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1164: FILE: kernel/posix-timers.c:224:
+	int res = posix_clocks[timer->it_clock].res;
+	tstojiffie(&time->it_value,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1171: FILE: kernel/posix-timers.c:231:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1171: FILE: kernel/posix-timers.c:231:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1172: FILE: kernel/posix-timers.c:232:
+ 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1174: FILE: kernel/posix-timers.c:234:
+static void schedule_next_timer(struct k_itimer * timr)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1179: FILE: kernel/posix-timers.c:239:
+	if (timr->it_incr == 0){
+			{

ERROR:SPACING: space required before the open brace '{'
#1179: FILE: kernel/posix-timers.c:239:
+	if (timr->it_incr == 0){

ERROR:SPACING: space required before the open brace '{'
#1186: FILE: kernel/posix-timers.c:246:
+	while (posix_time_before(&timr->it_timer, &now)){

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1195: FILE: kernel/posix-timers.c:255:
+/*
+

WARNING:TYPO_SPELLING: 'aginst' may be misspelled - perhaps 'against'?
#1203: FILE: kernel/posix-timers.c:263:
+ * To protect aginst the timer going away while the interrupt is queued,
               ^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1209: FILE: kernel/posix-timers.c:269:
+{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: kernel/posix-timers.c:275:
+^Iif( !timr || ! timr->it_requeue_pending) $

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1215: FILE: kernel/posix-timers.c:275:
+	if( !timr || ! timr->it_requeue_pending) 
 	             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1215: FILE: kernel/posix-timers.c:275:
+	if( !timr || ! timr->it_requeue_pending) 

ERROR:SPACING: space required before the open parenthesis '('
#1215: FILE: kernel/posix-timers.c:275:
+	if( !timr || ! timr->it_requeue_pending) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#1221: FILE: kernel/posix-timers.c:281:
+	if( timr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1221: FILE: kernel/posix-timers.c:281:
+	if( timr )

ERROR:SPACING: space required before the open parenthesis '('
#1221: FILE: kernel/posix-timers.c:281:
+	if( timr )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1225: FILE: kernel/posix-timers.c:285:
+/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1226: FILE: kernel/posix-timers.c:286:
+/* 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1242: FILE: kernel/posix-timers.c:302:
+
+

ERROR:SPACING: space required before the open brace '{'
#1251: FILE: kernel/posix-timers.c:311:
+	if ( timr->it_incr == 0){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1251: FILE: kernel/posix-timers.c:311:
+	if ( timr->it_incr == 0){

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1251: FILE: kernel/posix-timers.c:311:
+	if ( timr->it_incr == 0){
[...]
+	}else{
[...]

ERROR:SPACING: space required before the open brace '{'
#1253: FILE: kernel/posix-timers.c:313:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1253: FILE: kernel/posix-timers.c:313:
+	}else{

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1254: FILE: kernel/posix-timers.c:314:
+		timr->it_requeue_pending = info.si_sys_private = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1258: FILE: kernel/posix-timers.c:318:
+	switch (ret) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1264: FILE: kernel/posix-timers.c:324:
+		printk(KERN_WARNING "sending signal failed: %d\n", ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1265: FILE: kernel/posix-timers.c:325:
+^Icase 1:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1270: FILE: kernel/posix-timers.c:330:
+^I^I * it should be restarted. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1274: FILE: kernel/posix-timers.c:334:
+^I^I/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1282: FILE: kernel/posix-timers.c:342:
+/*
+

WARNING:TYPO_SPELLING: 'interrutps' may be misspelled - perhaps 'interrupts'?
#1285: FILE: kernel/posix-timers.c:345:
+ * run_timer_list code ALWAYS calls with interrutps on.
                                          ^^^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1297: FILE: kernel/posix-timers.c:357:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: kernel/posix-timers.c:358:
+ * For some reason mips/mips64 define the SIGEV constants plus 128.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1299: FILE: kernel/posix-timers.c:359:
+ * Here we define a mask to get rid of the common bits.^I The $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1302: FILE: kernel/posix-timers.c:362:
+#if (ARCH == mips) || (ARCH == mips64)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1308: FILE: kernel/posix-timers.c:368:
+#define MIPS_SIGEV (int)-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1311: FILE: kernel/posix-timers.c:371:
+static inline struct task_struct * good_sigevent(sigevent_t *event)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1313: FILE: kernel/posix-timers.c:373:
+	struct task_struct * rtn = current;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1315: FILE: kernel/posix-timers.c:375:
+	if (event->sigev_notify & SIGEV_THREAD_ID & MIPS_SIGEV ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1316: FILE: kernel/posix-timers.c:376:
+^I^Iif ( !(rtn = $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1316: FILE: kernel/posix-timers.c:376:
+		if ( !(rtn = 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1316: FILE: kernel/posix-timers.c:376:
+		if ( !(rtn = 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1323: FILE: kernel/posix-timers.c:383:
+		if ((unsigned)(event->sigev_signo > SIGRTMAX))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1326: FILE: kernel/posix-timers.c:386:
+	if (event->sigev_notify & ~(SIGEV_SIGNAL | SIGEV_THREAD_ID )) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1326: FILE: kernel/posix-timers.c:386:
+	if (event->sigev_notify & ~(SIGEV_SIGNAL | SIGEV_THREAD_ID )) {
+		return NULL;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1332: FILE: kernel/posix-timers.c:392:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1333: FILE: kernel/posix-timers.c:393:
+void register_posix_clock(int clock_id,struct k_clock * new_clock)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1333: FILE: kernel/posix-timers.c:393:
+void register_posix_clock(int clock_id,struct k_clock * new_clock)
                                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1335: FILE: kernel/posix-timers.c:395:
+	if ( (unsigned)clock_id >= MAX_CLOCKS){

ERROR:SPACING: space required before the open brace '{'
#1335: FILE: kernel/posix-timers.c:395:
+	if ( (unsigned)clock_id >= MAX_CLOCKS){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1335: FILE: kernel/posix-timers.c:395:
+	if ( (unsigned)clock_id >= MAX_CLOCKS){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1336: FILE: kernel/posix-timers.c:396:
+		printk("POSIX clock register failed for clock_id %d\n",clock_id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1336: FILE: kernel/posix-timers.c:396:
+		printk("POSIX clock register failed for clock_id %d\n",clock_id);
 		                                                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1342: FILE: kernel/posix-timers.c:402:
+static struct k_itimer * alloc_posix_timer(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1345: FILE: kernel/posix-timers.c:405:
+	struct k_itimer *tmr;
+	tmr = kmem_cache_alloc(posix_timers_cache, GFP_KERNEL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1347: FILE: kernel/posix-timers.c:407:
+	return(tmr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1350: FILE: kernel/posix-timers.c:410:
+static void release_posix_timer(struct k_itimer * tmr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1356: FILE: kernel/posix-timers.c:416:
+^I^I^I $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1366: FILE: kernel/posix-timers.c:426:
+	struct task_struct * process = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1369: FILE: kernel/posix-timers.c:429:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1369: FILE: kernel/posix-timers.c:429:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1369: FILE: kernel/posix-timers.c:429:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1370: FILE: kernel/posix-timers.c:430:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1373: FILE: kernel/posix-timers.c:433:
+	if (new_timer == NULL) return -EAGAIN;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_timer"
#1373: FILE: kernel/posix-timers.c:433:
+	if (new_timer == NULL) return -EAGAIN;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1376: FILE: kernel/posix-timers.c:436:
+^Inew_timer_id = (timer_t)idr_get_new(&posix_timers_id, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1384: FILE: kernel/posix-timers.c:444:
+^I * return the timer_id now.  The next step is hard to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1387: FILE: kernel/posix-timers.c:447:
+^Iif (copy_to_user(created_timer_id, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1388: FILE: kernel/posix-timers.c:448:
+^I^I^I &new_timer_id, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1400: FILE: kernel/posix-timers.c:460:
+		if ((process = good_sigevent(&event))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1402: FILE: kernel/posix-timers.c:462:
+			/*
+

WARNING:TYPO_SPELLING: 'invloved' may be misspelled - perhaps 'involved'?
#1409: FILE: kernel/posix-timers.c:469:
+			 * The exec case is a bit more invloved but easy
 			                               ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1420: FILE: kernel/posix-timers.c:480:
+^I^I^I^Ilist_add(&new_timer->list, $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1437: FILE: kernel/posix-timers.c:497:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1437: FILE: kernel/posix-timers.c:497:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1450: FILE: kernel/posix-timers.c:510:
+	init_timer (&new_timer->it_timer);

CHECK:SPACING: No space is necessary after a cast
#1452: FILE: kernel/posix-timers.c:512:
+	new_timer->it_timer.data = (unsigned long) new_timer;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1462: FILE: kernel/posix-timers.c:522:
+	if (error) {
+		release_posix_timer(new_timer);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1476: FILE: kernel/posix-timers.c:536:
+ * Return value: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1485: FILE: kernel/posix-timers.c:545:
+^Iif ((ts == NULL) || $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ts == NULL'
#1485: FILE: kernel/posix-timers.c:545:
+	if ((ts == NULL) || 
+	    (ts->tv_sec < 0) ||
+	    ((unsigned)ts->tv_nsec >= NSEC_PER_SEC))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ts->tv_sec < 0'
#1485: FILE: kernel/posix-timers.c:545:
+	if ((ts == NULL) || 
+	    (ts->tv_sec < 0) ||
+	    ((unsigned)ts->tv_nsec >= NSEC_PER_SEC))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ts"
#1485: FILE: kernel/posix-timers.c:545:
+	if ((ts == NULL) || 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1487: FILE: kernel/posix-timers.c:547:
+	    ((unsigned)ts->tv_nsec >= NSEC_PER_SEC))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1496: FILE: kernel/posix-timers.c:556:
+}
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1497: FILE: kernel/posix-timers.c:557:
+/*
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1505: FILE: kernel/posix-timers.c:565:
+static struct k_itimer* lock_timer( timer_t timer_id, long *flags)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1505: FILE: kernel/posix-timers.c:565:
+static struct k_itimer* lock_timer( timer_t timer_id, long *flags)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1510: FILE: kernel/posix-timers.c:570:
+^Itimr = (struct  k_itimer *)idr_find_nolock(&posix_timers_id, $

ERROR:SPACING: space required before the open brace '{'
#1512: FILE: kernel/posix-timers.c:572:
+	if (timr){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1516: FILE: kernel/posix-timers.c:576:
+		if (timr->it_id != timer_id) {
+			BUG();
+		}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1517: FILE: kernel/posix-timers.c:577:
+			BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1519: FILE: kernel/posix-timers.c:579:
+^I^Iif ( ! (timr->it_process) || $

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1519: FILE: kernel/posix-timers.c:579:
+		if ( ! (timr->it_process) || 
 		     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1519: FILE: kernel/posix-timers.c:579:
+		if ( ! (timr->it_process) || 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'timr->it_process'
#1519: FILE: kernel/posix-timers.c:579:
+		if ( ! (timr->it_process) || 
+		     timr->it_process->tgid != current->tgid){ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1520: FILE: kernel/posix-timers.c:580:
+^I^I     timr->it_process->tgid != current->tgid){ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1520: FILE: kernel/posix-timers.c:580:
+		if ( ! (timr->it_process) || 
+		     timr->it_process->tgid != current->tgid){ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1523: FILE: kernel/posix-timers.c:583:
+^I^I}^I$

ERROR:SPACING: space required before the open brace '{'
#1524: FILE: kernel/posix-timers.c:584:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1524: FILE: kernel/posix-timers.c:584:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: kernel/posix-timers.c:587:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1531: FILE: kernel/posix-timers.c:591:
+/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1532: FILE: kernel/posix-timers.c:592:
+/* 
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1549: FILE: kernel/posix-timers.c:609:
+void inline do_timer_gettime(struct k_itimer *timr,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1554: FILE: kernel/posix-timers.c:614:
+^Istruct now_struct now;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1557: FILE: kernel/posix-timers.c:617:
+^I^Iexpires = timr->it_timer.expires;  $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1558: FILE: kernel/posix-timers.c:618:
+	} while ((volatile long)(timr->it_timer.expires) != expires);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1562: FILE: kernel/posix-timers.c:622:
+	if ( expires &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1563: FILE: kernel/posix-timers.c:623:
+^I     (timr->it_sigev_notify & SIGEV_NONE) && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1563: FILE: kernel/posix-timers.c:623:
+	if ( expires &&
+	     (timr->it_sigev_notify & SIGEV_NONE) && 

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1564: FILE: kernel/posix-timers.c:624:
+	     ! timr->it_incr){
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1565: FILE: kernel/posix-timers.c:625:
+		if (posix_time_before(&timr->it_timer,&now)){
 		                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1565: FILE: kernel/posix-timers.c:625:
+		if (posix_time_before(&timr->it_timer,&now)){
 		                                      ^

ERROR:SPACING: space required before the open brace '{'
#1565: FILE: kernel/posix-timers.c:625:
+		if (posix_time_before(&timr->it_timer,&now)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1565: FILE: kernel/posix-timers.c:625:
+		if (posix_time_before(&timr->it_timer,&now)){
+			timr->it_timer.expires = expires = 0;
+		}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1566: FILE: kernel/posix-timers.c:626:
+			timr->it_timer.expires = expires = 0;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1569: FILE: kernel/posix-timers.c:629:
+	if (expires ){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1570: FILE: kernel/posix-timers.c:630:
+^I^Iif ( timr->it_requeue_pending || $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1570: FILE: kernel/posix-timers.c:630:
+		if ( timr->it_requeue_pending || 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1571: FILE: kernel/posix-timers.c:631:
+		if ( timr->it_requeue_pending || 
+		     (timr->it_sigev_notify & SIGEV_NONE)){

ERROR:SPACING: space required before the open brace '{'
#1571: FILE: kernel/posix-timers.c:631:
+		     (timr->it_sigev_notify & SIGEV_NONE)){

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1572: FILE: kernel/posix-timers.c:632:
+			while ( posix_time_before(&timr->it_timer,&now)){
 			                                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1572: FILE: kernel/posix-timers.c:632:
+			while ( posix_time_before(&timr->it_timer,&now)){
 			                                          ^

ERROR:SPACING: space required before the open brace '{'
#1572: FILE: kernel/posix-timers.c:632:
+			while ( posix_time_before(&timr->it_timer,&now)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1572: FILE: kernel/posix-timers.c:632:
+			while ( posix_time_before(&timr->it_timer,&now)){

ERROR:SPACING: space required before the open brace '{'
#1575: FILE: kernel/posix-timers.c:635:
+		}else{

ERROR:SPACING: space required after that close brace '}'
#1575: FILE: kernel/posix-timers.c:635:
+		}else{

ERROR:SPACING: space required before the open brace '{'
#1576: FILE: kernel/posix-timers.c:636:
+			if ( !timer_pending(&timr->it_timer)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1576: FILE: kernel/posix-timers.c:636:
+			if ( !timer_pending(&timr->it_timer)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1576: FILE: kernel/posix-timers.c:636:
+			if ( !timer_pending(&timr->it_timer)){
+				sub_expires = expires = 0;
+			}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1577: FILE: kernel/posix-timers.c:637:
+				sub_expires = expires = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1580: FILE: kernel/posix-timers.c:640:
+^I^Iif ( expires){^I^I$

ERROR:SPACING: space required before the open brace '{'
#1580: FILE: kernel/posix-timers.c:640:
+		if ( expires){		

ERROR:SPACING: space prohibited after that open parenthesis '('
#1580: FILE: kernel/posix-timers.c:640:
+		if ( expires){		

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1580: FILE: kernel/posix-timers.c:640:
+		if ( expires){		
+			expires -= now.jiffies;
+		}

ERROR:SPACING: space required before the open brace '{'
#1587: FILE: kernel/posix-timers.c:647:
+	if (cur_setting->it_value.tv_sec < 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1590: FILE: kernel/posix-timers.c:650:
+^I}^I^I^I^I $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1592: FILE: kernel/posix-timers.c:652:
+}
+/* Get the time remaining on a POSIX.1b interval timer. */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1600: FILE: kernel/posix-timers.c:660:
+	if (!timr) return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1602: FILE: kernel/posix-timers.c:662:
+	p_timer_get(&posix_clocks[timr->it_clock],timr, &cur_setting);
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1605: FILE: kernel/posix-timers.c:665:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1611: FILE: kernel/posix-timers.c:671:
+}
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1612: FILE: kernel/posix-timers.c:672:
+/*
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1629: FILE: kernel/posix-timers.c:689:
+	timr = lock_timer( timer_id, &flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1630: FILE: kernel/posix-timers.c:690:
+^Iif (!timr) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1638: FILE: kernel/posix-timers.c:698:
+}
+/* Adjust for absolute time */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1647: FILE: kernel/posix-timers.c:707:
+static int  adjust_abs_time(struct k_clock *clock,struct timespec *tp, int abs)
                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1651: FILE: kernel/posix-timers.c:711:
+	struct timespec oc;
+	do_posix_clock_monotonic_gettime(&now);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1653: FILE: kernel/posix-timers.c:713:
+	if ( abs &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get'
#1653: FILE: kernel/posix-timers.c:713:
+	if ( abs &&
+	     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1654: FILE: kernel/posix-timers.c:714:
+^I     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1654: FILE: kernel/posix-timers.c:714:
+	if ( abs &&
+	     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ 

ERROR:SPACING: space required before the open brace '{'
#1654: FILE: kernel/posix-timers.c:714:
+	     (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)){ 

ERROR:SPACING: space required before the open brace '{'
#1655: FILE: kernel/posix-timers.c:715:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1655: FILE: kernel/posix-timers.c:715:
+	}else{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1656: FILE: kernel/posix-timers.c:716:
+	}else{
+

ERROR:SPACING: space required before the open brace '{'
#1657: FILE: kernel/posix-timers.c:717:
+		if (abs){

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1657: FILE: kernel/posix-timers.c:717:
+		if (abs){
[...]
+		}else{
[...]

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1658: FILE: kernel/posix-timers.c:718:
+			do_posix_gettime(clock,&oc);
 			                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1658: FILE: kernel/posix-timers.c:718:
+			do_posix_gettime(clock,&oc);
 			                       ^

ERROR:SPACING: space required before the open brace '{'
#1659: FILE: kernel/posix-timers.c:719:
+		}else{

ERROR:SPACING: space required after that close brace '}'
#1659: FILE: kernel/posix-timers.c:719:
+		}else{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1660: FILE: kernel/posix-timers.c:720:
+			oc.tv_nsec = oc.tv_sec =0;
 			                       ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1660: FILE: kernel/posix-timers.c:720:
+			oc.tv_nsec = oc.tv_sec =0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1665: FILE: kernel/posix-timers.c:725:
+^I^I/* $

ERROR:SPACING: space required before the open brace '{'
#1668: FILE: kernel/posix-timers.c:728:
+		if (( tp->tv_nsec - NSEC_PER_SEC) >= 0){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1668: FILE: kernel/posix-timers.c:728:
+		if (( tp->tv_nsec - NSEC_PER_SEC) >= 0){

ERROR:SPACING: space required before the open brace '{'
#1672: FILE: kernel/posix-timers.c:732:
+		if (( tp->tv_nsec ) < 0){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1672: FILE: kernel/posix-timers.c:732:
+		if (( tp->tv_nsec ) < 0){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1672: FILE: kernel/posix-timers.c:732:
+		if (( tp->tv_nsec ) < 0){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->tv_nsec '
#1672: FILE: kernel/posix-timers.c:732:
+		if (( tp->tv_nsec ) < 0){

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1684: FILE: kernel/posix-timers.c:744:
+	if ((unsigned)(tp->tv_sec - now.tv_sec) > (MAX_JIFFY_OFFSET / HZ)){

ERROR:SPACING: space required before the open brace '{'
#1684: FILE: kernel/posix-timers.c:744:
+	if ((unsigned)(tp->tv_sec - now.tv_sec) > (MAX_JIFFY_OFFSET / HZ)){

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1685: FILE: kernel/posix-timers.c:745:
+		if ( (unsigned)tp->tv_sec < now.tv_sec){

ERROR:SPACING: space required before the open brace '{'
#1685: FILE: kernel/posix-timers.c:745:
+		if ( (unsigned)tp->tv_sec < now.tv_sec){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1685: FILE: kernel/posix-timers.c:745:
+		if ( (unsigned)tp->tv_sec < now.tv_sec){

ERROR:SPACING: space required before the open brace '{'
#1688: FILE: kernel/posix-timers.c:748:
+		}else{

ERROR:SPACING: space required after that close brace '}'
#1688: FILE: kernel/posix-timers.c:748:
+		}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1693: FILE: kernel/posix-timers.c:753:
+^I^I^I * possible overflows).  We assume such a large $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1697: FILE: kernel/posix-timers.c:757:
+^I^I^I */ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1710: FILE: kernel/posix-timers.c:770:
+	struct k_clock * clock = &posix_clocks[timr->it_clock];

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1712: FILE: kernel/posix-timers.c:772:
+	if (old_setting) {
+		do_timer_gettime(timr, old_setting);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1718: FILE: kernel/posix-timers.c:778:
+^I/* $

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1723: FILE: kernel/posix-timers.c:783:
+	if ( timer_active(timr) && ! del_timer(&timr->it_timer)){
 	                           ^

ERROR:SPACING: space required before the open brace '{'
#1723: FILE: kernel/posix-timers.c:783:
+	if ( timer_active(timr) && ! del_timer(&timr->it_timer)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1723: FILE: kernel/posix-timers.c:783:
+	if ( timer_active(timr) && ! del_timer(&timr->it_timer)){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1728: FILE: kernel/posix-timers.c:788:
+^I^I * we do that anything could happen, including the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1729: FILE: kernel/posix-timers.c:789:
+^I^I * complete melt down of the timer.  So return with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1741: FILE: kernel/posix-timers.c:801:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1742: FILE: kernel/posix-timers.c:802:
+^I *switch off the timer when it_value is zero $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_setting->it_value.tv_sec == 0'
#1744: FILE: kernel/posix-timers.c:804:
+	if ((new_setting->it_value.tv_sec == 0) &&
+	    (new_setting->it_value.tv_nsec == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_setting->it_value.tv_nsec == 0'
#1744: FILE: kernel/posix-timers.c:804:
+	if ((new_setting->it_value.tv_sec == 0) &&
+	    (new_setting->it_value.tv_nsec == 0)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1750: FILE: kernel/posix-timers.c:810:
+^Iif ((flags & TIMER_ABSTIME) && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'clock->clock_get != do_posix_clock_monotonic_gettime'
#1750: FILE: kernel/posix-timers.c:810:
+	if ((flags & TIMER_ABSTIME) && 
+	    (clock->clock_get != do_posix_clock_monotonic_gettime)) {

ERROR:SPACING: space required before the open brace '{'
#1752: FILE: kernel/posix-timers.c:812:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1752: FILE: kernel/posix-timers.c:812:
+	}else{

ERROR:SPACING: space prohibited after that open parenthesis '('
#1754: FILE: kernel/posix-timers.c:814:
+	if( adjust_abs_time(clock,

ERROR:SPACING: space required before the open parenthesis '('
#1754: FILE: kernel/posix-timers.c:814:
+	if( adjust_abs_time(clock,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1759: FILE: kernel/posix-timers.c:819:
+	tstotimer(new_setting,timr);
 	                     ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1766: FILE: kernel/posix-timers.c:826:
+	if (! (timr->it_sigev_notify & SIGEV_NONE)) {
 	    ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1767: FILE: kernel/posix-timers.c:827:
+		if (timr->it_timer.expires == jiffies) {
[...]
+		}else
[...]

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1767: FILE: kernel/posix-timers.c:827:
+		if (timr->it_timer.expires == jiffies) {

ERROR:SPACING: space required after that close brace '}'
#1769: FILE: kernel/posix-timers.c:829:
+		}else

CHECK:BRACES: Unbalanced braces around else statement
#1769: FILE: kernel/posix-timers.c:829:
+		}else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1775: FILE: kernel/posix-timers.c:835:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1787: FILE: kernel/posix-timers.c:847:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1788: FILE: kernel/posix-timers.c:848:
+	if (new_setting == NULL) {
+		return -EINVAL;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_setting"
#1788: FILE: kernel/posix-timers.c:848:
+	if (new_setting == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1792: FILE: kernel/posix-timers.c:852:
+	if (copy_from_user(&new_spec, new_setting, sizeof(new_spec))) {
+		return -EFAULT;
+	}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1801: FILE: kernel/posix-timers.c:861:
+	timr = lock_timer( timer_id, &flag);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1802: FILE: kernel/posix-timers.c:862:
+	if (!timr) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1804: FILE: kernel/posix-timers.c:864:
+	if (! posix_clocks[timr->it_clock].timer_set) {
 	    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1805: FILE: kernel/posix-timers.c:865:
+		error = do_timer_settime(timr, flags, &new_spec, rtn );

ERROR:SPACING: space required before the open brace '{'
#1806: FILE: kernel/posix-timers.c:866:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#1806: FILE: kernel/posix-timers.c:866:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1807: FILE: kernel/posix-timers.c:867:
+^I^Ierror = posix_clocks[timr->it_clock].timer_set(timr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1808: FILE: kernel/posix-timers.c:868:
+^I^I^I^I^I^I^I       flags, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1809: FILE: kernel/posix-timers.c:869:
+^I^I^I^I^I^I^I       &new_spec, $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1810: FILE: kernel/posix-timers.c:870:
+							       rtn );

ERROR:SPACING: space required before the open brace '{'
#1813: FILE: kernel/posix-timers.c:873:
+	if ( error == TIMER_RETRY){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1813: FILE: kernel/posix-timers.c:873:
+	if ( error == TIMER_RETRY){

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1818: FILE: kernel/posix-timers.c:878:
+	if (old_setting && ! error) {
 	                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1819: FILE: kernel/posix-timers.c:879:
+		if (copy_to_user(old_setting, &old_spec, sizeof(old_spec))) {
+			error = -EFAULT;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1831: FILE: kernel/posix-timers.c:891:
+^Iif ( timer_active(timer) && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1831: FILE: kernel/posix-timers.c:891:
+	if ( timer_active(timer) && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1832: FILE: kernel/posix-timers.c:892:
+	if ( timer_active(timer) && 
+	     ! del_timer(&timer->it_timer) &&

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1832: FILE: kernel/posix-timers.c:892:
+	     ! del_timer(&timer->it_timer) &&
 	     ^

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1833: FILE: kernel/posix-timers.c:893:
+	     ! timer->it_requeue_pending){
 	     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1838: FILE: kernel/posix-timers.c:898:
+^I^I * we do that anything could happen, including the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1839: FILE: kernel/posix-timers.c:899:
+^I^I * complete melt down of the timer.  So return with $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1861: FILE: kernel/posix-timers.c:921:
+	timer = lock_timer( timer_id, &flags);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1862: FILE: kernel/posix-timers.c:922:
+	if (!timer) return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1865: FILE: kernel/posix-timers.c:925:
+	error =	 p_timer_del(&posix_clocks[timer->it_clock],timer);
 	       	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1872: FILE: kernel/posix-timers.c:932:
+	p_timer_del(&posix_clocks[timer->it_clock],timer);
 	                                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1890: FILE: kernel/posix-timers.c:950:
+}
+/*

ERROR:SPACING: space required before the open brace '{'
#1895: FILE: kernel/posix-timers.c:955:
+	if (sys_timer_delete(timer->it_id)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1895: FILE: kernel/posix-timers.c:955:
+	if (sys_timer_delete(timer->it_id)){
+		BUG();
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1896: FILE: kernel/posix-timers.c:956:
+		BUG();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1899: FILE: kernel/posix-timers.c:959:
+}
+/*

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1907: FILE: kernel/posix-timers.c:967:
+	while ( ! list_empty(&tsk->posix_timers)){
 	        ^

ERROR:SPACING: space required before the open brace '{'
#1907: FILE: kernel/posix-timers.c:967:
+	while ( ! list_empty(&tsk->posix_timers)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1907: FILE: kernel/posix-timers.c:967:
+	while ( ! list_empty(&tsk->posix_timers)){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1908: FILE: kernel/posix-timers.c:968:
+		tmr = list_entry(tsk->posix_timers.next,struct k_itimer,list);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1908: FILE: kernel/posix-timers.c:968:
+		tmr = list_entry(tsk->posix_timers.next,struct k_itimer,list);
 		                                                       ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1925: FILE: kernel/posix-timers.c:985:
+{
+

ERROR:SPACING: space required before the open brace '{'
#1926: FILE: kernel/posix-timers.c:986:
+	if (clock->clock_get){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1926: FILE: kernel/posix-timers.c:986:
+	if (clock->clock_get){
+		return clock->clock_get(tp);
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1930: FILE: kernel/posix-timers.c:990:
+	do_gettimeofday((struct timeval*)tp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1947: FILE: kernel/posix-timers.c:1007:
+#if (BITS_PER_LONG > 32) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1958: FILE: kernel/posix-timers.c:1018:
+		unsigned long flags;
+		read_lock_irqsave(&xtime_lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1961: FILE: kernel/posix-timers.c:1021:
+
+

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1964: FILE: kernel/posix-timers.c:1024:
+#elif ! defined(CONFIG_SMP) && (BITS_PER_LONG < 64)
       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1966: FILE: kernel/posix-timers.c:1026:
+	unsigned long jiffies_f;
+	do {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1970: FILE: kernel/posix-timers.c:1030:
+	} while (unlikely(jiffies_f != jiffies));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1972: FILE: kernel/posix-timers.c:1032:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1974: FILE: kernel/posix-timers.c:1034:
+	tp->tv_sec = div_long_long_rem(jiffies_64_f,HZ,&sub_sec);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1974: FILE: kernel/posix-timers.c:1034:
+	tp->tv_sec = div_long_long_rem(jiffies_64_f,HZ,&sub_sec);
 	                                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1974: FILE: kernel/posix-timers.c:1034:
+	tp->tv_sec = div_long_long_rem(jiffies_64_f,HZ,&sub_sec);
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1985: FILE: kernel/posix-timers.c:1045:
+asmlinkage int sys_clock_settime(clockid_t which_clock,const struct timespec *tp)
                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1989: FILE: kernel/posix-timers.c:1049:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1989: FILE: kernel/posix-timers.c:1049:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1989: FILE: kernel/posix-timers.c:1049:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#1990: FILE: kernel/posix-timers.c:1050:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:SPACING: space required before the open brace '{'
#1993: FILE: kernel/posix-timers.c:1053:
+	if ( posix_clocks[which_clock].clock_set){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1993: FILE: kernel/posix-timers.c:1053:
+	if ( posix_clocks[which_clock].clock_set){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1993: FILE: kernel/posix-timers.c:1053:
+	if ( posix_clocks[which_clock].clock_set){
+		return posix_clocks[which_clock].clock_set(&new_tp);
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1997: FILE: kernel/posix-timers.c:1057:
+	return do_sys_settimeofday((struct timeval*)&new_tp,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1997: FILE: kernel/posix-timers.c:1057:
+	return do_sys_settimeofday((struct timeval*)&new_tp,NULL);
 	                                                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1999: FILE: kernel/posix-timers.c:1059:
+}
+asmlinkage int sys_clock_gettime(clockid_t which_clock, struct timespec *tp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2003: FILE: kernel/posix-timers.c:1063:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2004: FILE: kernel/posix-timers.c:1064:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2004: FILE: kernel/posix-timers.c:1064:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2004: FILE: kernel/posix-timers.c:1064:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#2005: FILE: kernel/posix-timers.c:1065:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2007: FILE: kernel/posix-timers.c:1067:
+	error = do_posix_gettime(&posix_clocks[which_clock],&rtn_tp);
 	                                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2007: FILE: kernel/posix-timers.c:1067:
+	error = do_posix_gettime(&posix_clocks[which_clock],&rtn_tp);
 	                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2008: FILE: kernel/posix-timers.c:1068:
+^I $

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#2009: FILE: kernel/posix-timers.c:1069:
+	if ( ! error) {
 	     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2009: FILE: kernel/posix-timers.c:1069:
+	if ( ! error) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2010: FILE: kernel/posix-timers.c:1070:
+		if (copy_to_user(tp, &rtn_tp, sizeof(rtn_tp))) {
+			error = -EFAULT;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2015: FILE: kernel/posix-timers.c:1075:
+^I^I $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2016: FILE: kernel/posix-timers.c:1076:
+		 
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2017: FILE: kernel/posix-timers.c:1077:
+}
+asmlinkage int	 sys_clock_getres(clockid_t which_clock, struct timespec *tp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2021: FILE: kernel/posix-timers.c:1081:
+^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2021: FILE: kernel/posix-timers.c:1081:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2021: FILE: kernel/posix-timers.c:1081:
+	if ((unsigned)which_clock >= MAX_CLOCKS || 
+	    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#2022: FILE: kernel/posix-timers.c:1082:
+	    ! posix_clocks[which_clock].res) return -EINVAL;
 	    ^

ERROR:SPACING: space required before the open brace '{'
#2026: FILE: kernel/posix-timers.c:1086:
+	if ( tp){

ERROR:SPACING: space prohibited after that open parenthesis '('
#2026: FILE: kernel/posix-timers.c:1086:
+	if ( tp){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2027: FILE: kernel/posix-timers.c:1087:
+		if (copy_to_user(tp, &rtn_tp, sizeof(rtn_tp))) {
+			return -EFAULT;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2032: FILE: kernel/posix-timers.c:1092:
+^I $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2033: FILE: kernel/posix-timers.c:1093:
+	 
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2034: FILE: kernel/posix-timers.c:1094:
+}
+static void nanosleep_wake_up(unsigned long __data)

CHECK:SPACING: No space is necessary after a cast
#2036: FILE: kernel/posix-timers.c:1096:
+	struct task_struct * p = (struct task_struct *) __data;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2036: FILE: kernel/posix-timers.c:1096:
+	struct task_struct * p = (struct task_struct *) __data;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2040: FILE: kernel/posix-timers.c:1100:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2043: FILE: kernel/posix-timers.c:1103:
+ * For each nanosleep call that needs it (only absolute and not on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2049: FILE: kernel/posix-timers.c:1109:
+ * On locking, clock_was_set() is called from update_wall_clock which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2050: FILE: kernel/posix-timers.c:1110:
+ * holds (or has held for it) a write_lock_irq( xtime_lock) and is $

ERROR:SPACING: space required before the open brace '{'
#2068: FILE: kernel/posix-timers.c:1128:
+	list_for_each(pos, &nanosleep_abs_list){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2069: FILE: kernel/posix-timers.c:1129:
+		wake_up_process(list_entry(pos,struct abs_struct,list)->t);
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2069: FILE: kernel/posix-timers.c:1129:
+		wake_up_process(list_entry(pos,struct abs_struct,list)->t);
 		                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2073: FILE: kernel/posix-timers.c:1133:
+^I^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2074: FILE: kernel/posix-timers.c:1134:
+#if 0^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2074: FILE: kernel/posix-timers.c:1134:
+#if 0	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2077: FILE: kernel/posix-timers.c:1137:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2077: FILE: kernel/posix-timers.c:1137:
+  $

WARNING:TYPO_SPELLING: 'paramerts' may be misspelled - perhaps 'parameters'?
#2081: FILE: kernel/posix-timers.c:1141:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2081: FILE: kernel/posix-timers.c:1141:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                                                      ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2081: FILE: kernel/posix-timers.c:1141:
+// Some systems may find these paramerts in other ways than as entry parms, $

WARNING:TYPO_SPELLING: 'paramerters' may be misspelled - perhaps 'parameters'?
#2083: FILE: kernel/posix-timers.c:1143:
+// first parameter, where as other archs pass it as one of the paramerters.
                                                                ^^^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2088: FILE: kernel/posix-timers.c:1148:
+	CLOCK_NANOSLEEP_ENTRY(	struct timespec t;

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2091: FILE: kernel/posix-timers.c:1151:
+				struct abs_struct abs_struct = {list: {next :0}};
 				                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2092: FILE: kernel/posix-timers.c:1152:
+^I^I^I^Iint abs; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2096: FILE: kernel/posix-timers.c:1156:
+^I^I//asmlinkage int  sys_clock_nanosleep(clockid_t which_clock, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2101: FILE: kernel/posix-timers.c:1161:
+^I^Iif ((unsigned)which_clock >= MAX_CLOCKS || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2101: FILE: kernel/posix-timers.c:1161:
+		if ((unsigned)which_clock >= MAX_CLOCKS || 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2101: FILE: kernel/posix-timers.c:1161:
+		if ((unsigned)which_clock >= MAX_CLOCKS || 
+		    ! posix_clocks[which_clock].res) return -EINVAL;

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#2102: FILE: kernel/posix-timers.c:1162:
+		    ! posix_clocks[which_clock].res) return -EINVAL;
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#2104: FILE: kernel/posix-timers.c:1164:
+	if(copy_from_user(&tsave, rqtp, sizeof(struct timespec)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2107: FILE: kernel/posix-timers.c:1167:
+	if ((unsigned)tsave.tv_nsec >= NSEC_PER_SEC || tsave.tv_sec < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2109: FILE: kernel/posix-timers.c:1169:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2116: FILE: kernel/posix-timers.c:1176:
+^Iif ( abs && (posix_clocks[which_clock].clock_get != $

ERROR:SPACING: space prohibited after that open parenthesis '('
#2116: FILE: kernel/posix-timers.c:1176:
+	if ( abs && (posix_clocks[which_clock].clock_get != 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'posix_clocks[which_clock].clock_get != 
 		     posix_clocks[CLOCK_MONOTONIC].clock_get'
#2116: FILE: kernel/posix-timers.c:1176:
+	if ( abs && (posix_clocks[which_clock].clock_get != 
+		     posix_clocks[CLOCK_MONOTONIC].clock_get) ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2117: FILE: kernel/posix-timers.c:1177:
+		     posix_clocks[CLOCK_MONOTONIC].clock_get) ){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#2125: FILE: kernel/posix-timers.c:1185:
+		if ( (abs || !new_timer.expires) &&
[...]
+				tstojiffie(&t,

ERROR:SPACING: space prohibited after that open parenthesis '('
#2125: FILE: kernel/posix-timers.c:1185:
+		if ( (abs || !new_timer.expires) &&

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2125: FILE: kernel/posix-timers.c:1185:
+		if ( (abs || !new_timer.expires) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2126: FILE: kernel/posix-timers.c:1186:
+		if ( (abs || !new_timer.expires) &&
+		     !(rtn = adjust_abs_time(&posix_clocks[which_clock],

ERROR:SPACING: space required before the open brace '{'
#2140: FILE: kernel/posix-timers.c:1200:
+		if (new_timer.expires ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2140: FILE: kernel/posix-timers.c:1200:
+		if (new_timer.expires ){

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#2147: FILE: kernel/posix-timers.c:1207:
+	while((active = del_timer_sync(&new_timer)) && !_do_signal());
+	 

ERROR:SPACING: space required before the open parenthesis '('
#2147: FILE: kernel/posix-timers.c:1207:
+	while((active = del_timer_sync(&new_timer)) && !_do_signal());

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#2147: FILE: kernel/posix-timers.c:1207:
+	}
+	while((active = del_timer_sync(&new_timer)) && !_do_signal());

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2148: FILE: kernel/posix-timers.c:1208:
+^I $

ERROR:SPACING: space required before the open brace '{'
#2149: FILE: kernel/posix-timers.c:1209:
+	if ( abs_struct.list.next ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#2149: FILE: kernel/posix-timers.c:1209:
+	if ( abs_struct.list.next ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2149: FILE: kernel/posix-timers.c:1209:
+	if ( abs_struct.list.next ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2154: FILE: kernel/posix-timers.c:1214:
+	if (active && rmtp ) {

ERROR:SPACING: space required before the open brace '{'
#2159: FILE: kernel/posix-timers.c:1219:
+		while (t.tv_nsec < 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2162: FILE: kernel/posix-timers.c:1222:
+^I^I} $

ERROR:SPACING: space required before the open brace '{'
#2163: FILE: kernel/posix-timers.c:1223:
+		if (t.tv_sec < 0){

ERROR:SPACING: space required before the open brace '{'
#2167: FILE: kernel/posix-timers.c:1227:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#2167: FILE: kernel/posix-timers.c:1227:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2171: FILE: kernel/posix-timers.c:1231:
+^Iif (!rtn && !abs && rmtp && $

ERROR:SPACING: space required before the open brace '{'
#2172: FILE: kernel/posix-timers.c:1232:
+	    copy_to_user(rmtp, &t, sizeof(struct timespec))){

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2175: FILE: kernel/posix-timers.c:1235:
+	if (active) return -EINTR;

ERROR:SPACING: space prohibited after that open parenthesis '('
#2205: FILE: kernel/signal.c:455:
+	if ( ret &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2206: FILE: kernel/signal.c:456:
+	if ( ret &&
+	     ((info->si_code & __SI_MASK) == __SI_TIMER) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->si_code == SI_TIMER'
#2237: FILE: kernel/signal.c:652:
+		if (((unsigned long)info > 1) && (info->si_code == SI_TIMER))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2239: FILE: kernel/signal.c:654:
+^I^I^I * Set up a return to indicate that we dropped $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'retval >= 0'
#2257: FILE: kernel/signal.c:702:
+	if ((retval >= 0) && !sigismember(&t->blocked, sig))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->si_code == SI_TIMER'
#2265: FILE: kernel/signal.c:738:
+	if (((unsigned long)info > 2) && (info->si_code == SI_TIMER))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2418: FILE: kernel/timer.c:1028:
+#if 0  $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2418: FILE: kernel/timer.c:1028:
+#if 0  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2420: FILE: kernel/timer.c:1030:
+// correct below.  $

WARNING:TYPO_SPELLING: 'paramerts' may be misspelled - perhaps 'parameters'?
#2424: FILE: kernel/timer.c:1034:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#2424: FILE: kernel/timer.c:1034:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                                                      ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2424: FILE: kernel/timer.c:1034:
+// Some systems may find these paramerts in other ways than as entry parms, $

WARNING:TYPO_SPELLING: 'paramerters' may be misspelled - perhaps 'parameters'?
#2426: FILE: kernel/timer.c:1036:
+// first parameter, where as other archs pass it as one of the paramerters.
                                                                ^^^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2432: FILE: kernel/timer.c:1040:
+	NANOSLEEP_ENTRY(	struct timespec t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2436: FILE: kernel/timer.c:1044:
+^I^I// The following code expects rqtp, rmtp to be available $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2437: FILE: kernel/timer.c:1045:
+^I^I// as a result of the above macro.  Also any regs needed $

WARNING:TYPO_SPELLING: 'shoule' may be misspelled - perhaps 'should'?
#2438: FILE: kernel/timer.c:1046:
+		// for the _do_signal() macro shoule be set up here.
 		                              ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2440: FILE: kernel/timer.c:1048:
+^I^I//asmlinkage long sys_nanosleep(struct timespec *rqtp, $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411849.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 384 errors, 138 warnings, 107 checks, 2236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411849.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
