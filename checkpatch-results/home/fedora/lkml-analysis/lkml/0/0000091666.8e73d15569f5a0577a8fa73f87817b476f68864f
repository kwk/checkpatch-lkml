WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#30: 
From: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: include/linux/mm_use_once_policy.h:1:
+#ifndef _LINUX_MM_USEONCE_POLICY_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: include/linux/mm_page_replace.h:1:
+#ifndef _LINUX_MM_PAGE_REPLACE_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/mm_page_replace.h:11:
+extern void fastcall page_replace_add(struct page *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/mm_page_replace.h:13:
+extern void __page_replace_add_drain(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#116: FILE: include/linux/mm_page_replace.h:13:
+extern void __page_replace_add_drain(unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: include/linux/mm_page_replace.h:14:
+extern int page_replace_add_drain_all(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: include/linux/mm_page_replace.h:15:
+extern void __pagevec_page_replace_add(struct pagevec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pagevec *' should also have an identifier name
#118: FILE: include/linux/mm_page_replace.h:15:
+extern void __pagevec_page_replace_add(struct pagevec *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#184: FILE: mm/useonce.c:1:
+#include <linux/mm_page_replace.h>

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#217: FILE: mm/useonce.c:34:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#226: FILE: mm/useonce.c:43:
+EXPORT_SYMBOL(__pagevec_page_replace_add);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#244: FILE: mm/useonce.c:61:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#246: FILE: mm/useonce.c:63:
+			BUG();

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#854: FILE: include/linux/swap.h:169:
+extern void release_pages(struct page **, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#854: FILE: include/linux/swap.h:169:
+extern void release_pages(struct page **, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#854: FILE: include/linux/swap.h:169:
+extern void release_pages(struct page **, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#854: FILE: include/linux/swap.h:169:
+extern void release_pages(struct page **, int, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091666.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 5 checks, 687 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091666.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
