ERROR:SPACING: space required before the open parenthesis '('
#70: FILE: ipc/msg.c:182:
+		while(len > alen) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#71: FILE: ipc/msg.c:183:
+			struct msg_msgseg* seg;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#74: FILE: ipc/msg.c:186:
+			src = ((char*)src)+alen;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#74: FILE: ipc/msg.c:186:
+			src = ((char*)src)+alen;
 			                  ^

ERROR:SPACING: space required before the open parenthesis '('
#77: FILE: ipc/msg.c:189:
+			if(alen > DATALEN_SEG)

CHECK:SPACING: No space is necessary after a cast
#79: FILE: ipc/msg.c:191:
+			seg = (struct msg_msgseg *) kmalloc (sizeof(*seg) + alen, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: ipc/msg.c:191:
+			seg = (struct msg_msgseg *) kmalloc (sizeof(*seg) + alen, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#79: FILE: ipc/msg.c:191:
+			seg = (struct msg_msgseg *) kmalloc (sizeof(*seg) + alen, GFP_KERNEL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#80: FILE: ipc/msg.c:192:
+			if(seg==NULL) {
 			      ^

ERROR:SPACING: space required before the open parenthesis '('
#80: FILE: ipc/msg.c:192:
+			if(seg==NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!seg"
#80: FILE: ipc/msg.c:192:
+			if(seg==NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#81: FILE: ipc/msg.c:193:
+				err=-ENOMEM;
 				   ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#81: FILE: ipc/msg.c:193:
+				err=-ENOMEM;
 				    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#86: FILE: ipc/msg.c:198:
+			if(copy_from_user (seg+1, src, alen)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#86: FILE: ipc/msg.c:198:
+			if(copy_from_user (seg+1, src, alen)) {
 			                      ^

ERROR:SPACING: space required before the open parenthesis '('
#86: FILE: ipc/msg.c:198:
+			if(copy_from_user (seg+1, src, alen)) {

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: ipc/msg.c:225:
+		while(len > alen) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#118: FILE: ipc/msg.c:227:
+			dest = ((char*)dest)+alen;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#118: FILE: ipc/msg.c:227:
+			dest = ((char*)dest)+alen;
 			                    ^

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: ipc/msg.c:230:
+			if(alen > DATALEN_SEG)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: ipc/msg.c:232:
+			if(copy_to_user (dest, seg+1, alen))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#123: FILE: ipc/msg.c:232:
+			if(copy_to_user (dest, seg+1, alen))
 			                          ^

ERROR:SPACING: space required before the open parenthesis '('
#123: FILE: ipc/msg.c:232:
+			if(copy_to_user (dest, seg+1, alen))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#126: FILE: ipc/msg.c:235:
+			seg=seg->next;
 			   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000539998.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 4 warnings, 6 checks, 83 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000539998.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
