WARNING:TYPO_SPELLING: 'accouting' may be misspelled - perhaps 'accounting'?
#29: 
wants to implement better accouting as well. Who knows?
                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#73: FILE: arch/s390/Kconfig:369:
+config VIRT_CPU_ACCOUNTING
+	bool "Base user process accounting on virtual cpu timer"
+	depends on VIRT_TIMER
+	help
+	  Select this option to use CPU timer deltas to do user
+	  process accounting.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: arch/s390/kernel/vtime.c:46:
+^I^I        "=m" (S390_lowcore.last_update_clock) );$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space prohibited before that close parenthesis ')'
#731: FILE: arch/s390/kernel/vtime.c:46:
+		        "=m" (S390_lowcore.last_update_clock) );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#747: FILE: arch/s390/kernel/vtime.c:62:
+	if ((__s64) cputime > 0) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#770: FILE: arch/s390/kernel/vtime.c:85:
+		      : "=m" (S390_lowcore.last_update_timer) );

WARNING:TYPO_SPELLING: 'immediatly' may be misspelled - perhaps 'immediately'?
#784: FILE: arch/s390/kernel/vtime.c:99:
+		      "  SPT %1"     /* Set new value immediatly afterwards */
 		                                      ^^^^^^^^^^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#785: FILE: arch/s390/kernel/vtime.c:100:
+		      : "=m" (timer) : "m" (expires) );

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#859: FILE: include/asm-s390/cputime.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#860: FILE: include/asm-s390/cputime.h:2:
+ *  include/asm-s390/cputime.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#874: FILE: include/asm-s390/cputime.h:14:
+typedef unsigned long long cputime_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#875: FILE: include/asm-s390/cputime.h:15:
+typedef unsigned long long cputime64_t;

CHECK:SPACING: No space is necessary after a cast
#934: FILE: include/asm-s390/cputime.h:74:
+	return (cputime_t) m * 1000;

CHECK:SPACING: No space is necessary after a cast
#949: FILE: include/asm-s390/cputime.h:89:
+	return (cputime_t) s * 1000000;

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: include/asm-s390/cputime.h:98:
+        return value->tv_nsec / 1000 + (u64) value->tv_sec * 1000000;$

CHECK:SPACING: No space is necessary after a cast
#958: FILE: include/asm-s390/cputime.h:98:
+        return value->tv_nsec / 1000 + (u64) value->tv_sec * 1000000;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: include/asm-s390/cputime.h:98:
+        return value->tv_nsec / 1000 + (u64) value->tv_sec * 1000000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: include/asm-s390/cputime.h:125:
+        return value->tv_usec + (u64) value->tv_sec * 1000000;$

CHECK:SPACING: No space is necessary after a cast
#985: FILE: include/asm-s390/cputime.h:125:
+        return value->tv_usec + (u64) value->tv_sec * 1000000;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: include/asm-s390/cputime.h:125:
+        return value->tv_usec + (u64) value->tv_sec * 1000000;$

CHECK:SPACING: No space is necessary after a cast
#1016: FILE: include/asm-s390/cputime.h:156:
+	return (cputime_t) x * (1000000 / USER_HZ);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: include/asm-s390/cputime.h:165:
+       return __div(cputime, 1000000 / USER_HZ);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1118: FILE: include/asm-s390/lowcore.h:195:
+	__u8         pad8[0xc00-0x288];        /* 0x288 */
 	                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1137: FILE: include/asm-s390/lowcore.h:285:
+        __u8         pad8[0xc00-0x294];        /* 0x294 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1137: FILE: include/asm-s390/lowcore.h:285:
+        __u8         pad8[0xc00-0x294];        /* 0x294 */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1137: FILE: include/asm-s390/lowcore.h:285:
+        __u8         pad8[0xc00-0x294];        /* 0x294 */
                                ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1150: FILE: include/asm-s390/system.h:110:
+extern void account_user_vtime(struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1151: FILE: include/asm-s390/system.h:111:
+extern void account_system_vtime(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#1151: FILE: include/asm-s390/system.h:111:
+extern void account_system_vtime(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000231839.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 12 warnings, 10 checks, 1038 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000231839.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
