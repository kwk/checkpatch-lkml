WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
The attached patch renames the functions of the x86_64 traditional semaphore

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#31: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: include/asm-x86_64/mmu.h:17:
+^Istruct mutex sem; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#57: FILE: include/asm-x86_64/mmu.h:17:
+	struct mutex sem; 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#102: FILE: include/asm-x86_64/semaphore.h:80:
+asmlinkage void __down_sem(struct semaphore * sem);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: include/asm-x86_64/semaphore.h:81:
+asmlinkage int  __down_sem_interruptible(struct semaphore * sem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: include/asm-x86_64/semaphore.h:82:
+asmlinkage int  __down_sem_trylock(struct semaphore * sem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: include/asm-x86_64/semaphore.h:83:
+asmlinkage void __up_sem(struct semaphore * sem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: include/asm-x86_64/semaphore.h:90:
+static inline void down_sem(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: include/asm-x86_64/semaphore.h:112:
+static inline int down_sem_interruptible(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: include/asm-x86_64/semaphore.h:138:
+static inline int down_sem_trylock(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: include/asm-x86_64/semaphore.h:164:
+static inline void up_sem(struct semaphore * sem)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#202: FILE: arch/x86_64/kernel/x8664_ksyms.c:65:
+EXPORT_SYMBOL(__down_sem_failed);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#203: FILE: arch/x86_64/kernel/x8664_ksyms.c:66:
+EXPORT_SYMBOL(__down_sem_failed_interruptible);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#204: FILE: arch/x86_64/kernel/x8664_ksyms.c:67:
+EXPORT_SYMBOL(__down_sem_failed_trylock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#205: FILE: arch/x86_64/kernel/x8664_ksyms.c:68:
+EXPORT_SYMBOL(__up_sem_wakeup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000126292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 6 warnings, 1 checks, 161 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000126292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
