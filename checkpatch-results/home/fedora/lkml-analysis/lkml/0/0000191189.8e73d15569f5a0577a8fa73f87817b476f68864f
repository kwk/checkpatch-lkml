WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Kernel connector - new netlink based userspace <-> kernel space easy to use communication module.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#196: FILE: drivers/connector/cbus.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: drivers/connector/cbus.c:2:
+ * ^Icbus.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/connector/cbus.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/connector/cbus.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#213: FILE: drivers/connector/cbus.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#214: FILE: drivers/connector/cbus.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:SPLIT_STRING: quoted string split across lines
#234: FILE: drivers/connector/cbus.c:39:
+MODULE_PARM_DESC(cbus_max_queue_len, "Maximum CBUS queue length, "
+		"if it is overflowed events will be delivered using direct connector's methods.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#236: FILE: drivers/connector/cbus.c:41:
+static char cbus_name[] = "cbus";

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#239: FILE: drivers/connector/cbus.c:44:
+struct cbus_event_container
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#241: FILE: drivers/connector/cbus.c:46:
+	spinlock_t		event_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: drivers/connector/cbus.c:47:
+^Iint ^I^I^Iqlen;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#246: FILE: drivers/connector/cbus.c:51:
+struct cbus_event
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#260: FILE: drivers/connector/cbus.c:65:
+		printk(KERN_ERR "%s: qlen=%d after dequeue on CPU%u.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: drivers/connector/cbus.c:66:
+		printk(KERN_ERR "%s: qlen=%d after dequeue on CPU%u.\n",
+				cbus_name, c->qlen, smp_processor_id());

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: drivers/connector/cbus.c:69:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: drivers/connector/cbus.c:77:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: drivers/connector/cbus.c:80:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#304: FILE: drivers/connector/cbus.c:109:
+		memcpy(event+1, msg->data, msg->len);
 		            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: drivers/connector/cbus.c:110:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/connector/cbus.c:151:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: drivers/connector/cbus.c:153:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/connector/cbus.c:163:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#368: FILE: drivers/connector/cbus.c:173:
+	for (i=0; i<len; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#368: FILE: drivers/connector/cbus.c:173:
+	for (i=0; i<len; ++i) {
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: drivers/connector/cbus.c:183:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#393: FILE: drivers/connector/cbus.c:198:
+			wait_event_interruptible_timeout(cbus_wait_queue, 0, HZ/100);
 			                                                       ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#425: FILE: drivers/connector/cbus.c:230:
+int __devinit cbus_init(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: drivers/connector/cbus.c:234:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: drivers/connector/cbus.c:244:
+^I^Iprintk(KERN_ERR "%s: Failed to create cbus event thread: err=%d.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#439: FILE: drivers/connector/cbus.c:244:
+		printk(KERN_ERR "%s: Failed to create cbus event thread: err=%d.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/connector/cbus.c:245:
+		printk(KERN_ERR "%s: Failed to create cbus event thread: err=%d.\n", 
+				cbus_name, cbus_pid);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#449: FILE: drivers/connector/cbus.c:254:
+void __devexit cbus_fini(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/connector/cbus.c:262:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#467: FILE: drivers/connector/cbus.c:272:
+EXPORT_SYMBOL_GPL(cbus_insert);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#472: FILE: drivers/connector/cn_queue.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#473: FILE: drivers/connector/cn_queue.c:2:
+ * ^Icn_queue.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: drivers/connector/cn_queue.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: drivers/connector/cn_queue.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#489: FILE: drivers/connector/cn_queue.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#490: FILE: drivers/connector/cn_queue.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#522: FILE: drivers/connector/cn_queue.c:51:
+		printk(KERN_ERR "Failed to create new callback queue.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#522: FILE: drivers/connector/cn_queue.c:51:
+	if (!cbq) {
+		printk(KERN_ERR "Failed to create new callback queue.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#541: FILE: drivers/connector/cn_queue.c:70:
+		printk(KERN_INFO "Waiting for %s to become free: refcnt=%d.\n",

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#552: FILE: drivers/connector/cn_queue.c:81:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#553: FILE: drivers/connector/cn_queue.c:82:
+	printk(KERN_INFO "%s: comparing %04x.%04x and %04x.%04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: drivers/connector/cn_queue.c:83:
+	printk(KERN_INFO "%s: comparing %04x.%04x and %04x.%04x\n",
+			__func__,

WARNING:TYPO_SPELLING: 'allocte' may be misspelled - perhaps 'allocate'?
#628: FILE: drivers/connector/cn_queue.c:157:
+		printk(KERN_ERR "%s: Failed to allocte new struct cn_queue_dev.\n",
 		                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#628: FILE: drivers/connector/cn_queue.c:157:
+		printk(KERN_ERR "%s: Failed to allocte new struct cn_queue_dev.\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#628: FILE: drivers/connector/cn_queue.c:157:
+	if (!dev) {
+		printk(KERN_ERR "%s: Failed to allocte new struct cn_queue_dev.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#646: FILE: drivers/connector/cn_queue.c:175:
+		printk(KERN_ERR "Failed to create %s queue.\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#669: FILE: drivers/connector/cn_queue.c:198:
+		printk(KERN_INFO "Waiting for %s to become free: refcnt=%d.\n",

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#683: FILE: drivers/connector/connector.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#684: FILE: drivers/connector/connector.c:2:
+ * ^Iconnector.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: drivers/connector/connector.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: drivers/connector/connector.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#700: FILE: drivers/connector/connector.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#701: FILE: drivers/connector/connector.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#734: FILE: drivers/connector/connector.c:52:
+int cn_already_initialized = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: drivers/connector/connector.c:56:
+ * When someone sends message it puts there locally unique sequence $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: drivers/connector/connector.c:62:
+ * If we expect reply to our message, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#748: FILE: drivers/connector/connector.c:66:
+ * If we receive message and it's sequence number is not equal to one we are expecting, $

CHECK:BRACES: braces {} should be used on all arms of this statement
#766: FILE: drivers/connector/connector.c:84:
+	if (!__groups) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#777: FILE: drivers/connector/connector.c:95:
+			printk(KERN_ERR "Failed to find multicast netlink group for callback[0x%x.0x%x]. seq=%u\n",

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#782: FILE: drivers/connector/connector.c:100:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#789: FILE: drivers/connector/connector.c:107:
+		printk(KERN_ERR "Failed to allocate new skb with size=%u.\n", size);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#789: FILE: drivers/connector/connector.c:107:
+	if (!skb) {
+		printk(KERN_ERR "Failed to allocate new skb with size=%u.\n", size);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#798: FILE: drivers/connector/connector.c:116:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#799: FILE: drivers/connector/connector.c:117:
+	printk("%s: len=%u, seq=%u, ack=%u, group=%u.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: drivers/connector/connector.c:120:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: drivers/connector/connector.c:122:
+^I$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#838: FILE: drivers/connector/connector.c:156:
+	return (found)?0:-ENODEV;
 	              ^

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#838: FILE: drivers/connector/connector.c:156:
+	return (found)?0:-ENODEV;
 	                ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#838: FILE: drivers/connector/connector.c:156:
+	return (found)?0:-ENODEV;
 	                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#857: FILE: drivers/connector/connector.c:175:
+		printk(KERN_ERR "skb does not have enough length: "

WARNING:SPLIT_STRING: quoted string split across lines
#858: FILE: drivers/connector/connector.c:176:
+		printk(KERN_ERR "skb does not have enough length: "
+				"requested msg->len=%u[%u], nlh->nlmsg_len=%u, skb->len=%u.\n",

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#863: FILE: drivers/connector/connector.c:181:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#864: FILE: drivers/connector/connector.c:182:
+	printk(KERN_INFO "pid=%u, uid=%u, seq=%u, group=%u.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#871: FILE: drivers/connector/connector.c:189:
+ * Main netlink receiving function - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#872: FILE: drivers/connector/connector.c:190:
+ * it checks skb and netlink header sizes $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#884: FILE: drivers/connector/connector.c:202:
+		printk(KERN_ERR "Failed to reference an skb.\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#888: FILE: drivers/connector/connector.c:206:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#889: FILE: drivers/connector/connector.c:207:
+	printk(KERN_INFO

WARNING:IF_1: Consider removing the #if 1 and its #endif
#900: FILE: drivers/connector/connector.c:218:
+#if 1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#901: FILE: drivers/connector/connector.c:219:
+			printk(KERN_INFO "nlmsg_len=%u, sizeof(*nlh)=%u\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#922: FILE: drivers/connector/connector.c:240:
+ * Netlink socket input callback - dequeues skb and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: drivers/connector/connector.c:255:
+ * If there are such requests notify it's listeners $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#951: FILE: drivers/connector/connector.c:269:
+		idx_found = val_found = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#952: FILE: drivers/connector/connector.c:270:
+^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#954: FILE: drivers/connector/connector.c:272:
+		for (i=0; i<ctl->idx_notify_num; ++i, ++req) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#954: FILE: drivers/connector/connector.c:272:
+		for (i=0; i<ctl->idx_notify_num; ++i, ++req) {
 		           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#960: FILE: drivers/connector/connector.c:278:
+^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#961: FILE: drivers/connector/connector.c:279:
+		for (i=0; i<ctl->val_notify_num; ++i, ++req) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#961: FILE: drivers/connector/connector.c:279:
+		for (i=0; i<ctl->val_notify_num; ++i, ++req) {
 		           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: drivers/connector/connector.c:288:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#971: FILE: drivers/connector/connector.c:289:
+^I^I^Iprintk(KERN_INFO "Notifying group %x with event %u about %x.%x.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#971: FILE: drivers/connector/connector.c:289:
+			printk(KERN_INFO "Notifying group %x with event %u about %x.%x.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#972: FILE: drivers/connector/connector.c:290:
+^I^I^I^I^Ictl->group, notify_event, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#972: FILE: drivers/connector/connector.c:290:
+			printk(KERN_INFO "Notifying group %x with event %u about %x.%x.\n", 
+					ctl->group, notify_event, 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1001: FILE: drivers/connector/connector.c:319:
+		printk(KERN_INFO "%s: Failed to allocate new struct cn_callback.\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1001: FILE: drivers/connector/connector.c:319:
+	if (!cb) {
+		printk(KERN_INFO "%s: Failed to allocate new struct cn_callback.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1020: FILE: drivers/connector/connector.c:338:
+^I^I^I$

WARNING:TYPO_SPELLING: 'firts' may be misspelled - perhaps 'first'?
#1044: FILE: drivers/connector/connector.c:362:
+ * Returns 1 if they are the same or firts one is broken.
                                      ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: drivers/connector/connector.c:371:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: drivers/connector/connector.c:374:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1060: FILE: drivers/connector/connector.c:378:
+	if ((m1->idx_notify_num + m1->val_notify_num)*sizeof(*req1) != m1->len) {
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1061: FILE: drivers/connector/connector.c:379:
+^I^Iprintk(KERN_ERR "Notify entry[idx_num=%x, val_num=%x, len=%u] contains garbage. Removing.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1061: FILE: drivers/connector/connector.c:379:
+		printk(KERN_ERR "Notify entry[idx_num=%x, val_num=%x, len=%u] contains garbage. Removing.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1062: FILE: drivers/connector/connector.c:380:
+		printk(KERN_ERR "Notify entry[idx_num=%x, val_num=%x, len=%u] contains garbage. Removing.\n", 
+				m1->idx_notify_num, m1->val_notify_num, m1->len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1068: FILE: drivers/connector/connector.c:386:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1069: FILE: drivers/connector/connector.c:387:
+	for (i=0; i<m1->idx_notify_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1069: FILE: drivers/connector/connector.c:387:
+	for (i=0; i<m1->idx_notify_num; ++i) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1077: FILE: drivers/connector/connector.c:395:
+	for (i=0; i<m1->val_notify_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1077: FILE: drivers/connector/connector.c:395:
+	for (i=0; i<m1->val_notify_num; ++i) {
 	           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1092: FILE: drivers/connector/connector.c:410:
+static void cn_callback(void * data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1098: FILE: drivers/connector/connector.c:416:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1098: FILE: drivers/connector/connector.c:416:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1100: FILE: drivers/connector/connector.c:418:
+^I^Iprintk(KERN_ERR "Wrong connector request size %u, must be >= %u.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1100: FILE: drivers/connector/connector.c:418:
+		printk(KERN_ERR "Wrong connector request size %u, must be >= %u.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1101: FILE: drivers/connector/connector.c:419:
+		printk(KERN_ERR "Wrong connector request size %u, must be >= %u.\n", 
+				msg->len, sizeof(*ctl));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: drivers/connector/connector.c:422:
+^I$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1107: FILE: drivers/connector/connector.c:425:
+	size = sizeof(*ctl) + (ctl->idx_notify_num + ctl->val_notify_num)*sizeof(struct cn_notify_req);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1107: FILE: drivers/connector/connector.c:425:
+	size = sizeof(*ctl) + (ctl->idx_notify_num + ctl->val_notify_num)*sizeof(struct cn_notify_req);
 	                                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: drivers/connector/connector.c:428:
+^I^Iprintk(KERN_ERR "Wrong connector request size %u, must be == %u.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1110: FILE: drivers/connector/connector.c:428:
+		printk(KERN_ERR "Wrong connector request size %u, must be == %u.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1111: FILE: drivers/connector/connector.c:429:
+		printk(KERN_ERR "Wrong connector request size %u, must be == %u.\n", 
+				msg->len, size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1116: FILE: drivers/connector/connector.c:434:
+^I^Iprintk(KERN_ERR "Wrong message: msg->len=%u must be equal to inner_len=%u [+%u].\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1116: FILE: drivers/connector/connector.c:434:
+		printk(KERN_ERR "Wrong message: msg->len=%u must be equal to inner_len=%u [+%u].\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: drivers/connector/connector.c:435:
+		printk(KERN_ERR "Wrong message: msg->len=%u must be equal to inner_len=%u [+%u].\n", 
+				msg->len, ctl->len, sizeof(*ctl));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1126: FILE: drivers/connector/connector.c:444:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1143: FILE: drivers/connector/connector.c:461:
+		printk(KERN_ERR "Failed to allocate %d bytes for new notify entry.\n", size);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1143: FILE: drivers/connector/connector.c:461:
+	if (!ent) {
+		printk(KERN_ERR "Failed to allocate %d bytes for new notify entry.\n", size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1169: FILE: drivers/connector/connector.c:487:
+		printk(KERN_ERR "Failed to create new netlink socket(%u).\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1199: FILE: drivers/connector/connector.c:517:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1209: FILE: drivers/connector/connector.c:527:
+EXPORT_SYMBOL_GPL(cn_add_callback);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1210: FILE: drivers/connector/connector.c:528:
+EXPORT_SYMBOL_GPL(cn_del_callback);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1211: FILE: drivers/connector/connector.c:529:
+EXPORT_SYMBOL_GPL(cn_netlink_send);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1218: FILE: drivers/connector/Kconfig:3:
+config CONNECTOR
+	tristate "Connector - unified userspace <-> kernelspace linker"
+	depends on NET
+	---help---
+	  This is unified userspace <-> kernelspace connector working on top
+	  of the netlink socket protocol.
+
+	  Connector support can also be built as a module.  If so, the module
+	  will be called cn.ko.

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1227: FILE: drivers/connector/Kconfig:12:
+config CBUS
+       tristate "CBUS - ultra fast (for insert operations) message bus based on connector"
+       depends on CONNECTOR
+       ---help---
+         This message bus allows message passing between different agents
+         using connector's infrastructure.
+         It is extremly fast for insert operations so it can be used in performance
+         critical pathes instead of direct connector's methods calls.
+
+         CBUS uses per CPU variables and thus allows message reordering,
+         caller must be prepared (and use CPU id in it's messages).
+         
+         CBUS support can also be built as a module.  If so, the module
+         will be called cbus.
+
+endmenu

WARNING:TYPO_SPELLING: 'extremly' may be misspelled - perhaps 'extremely'?
#1233: FILE: drivers/connector/Kconfig:18:
+         It is extremly fast for insert operations so it can be used in performance
                ^^^^^^^^

WARNING:TYPO_SPELLING: 'pathes' may be misspelled - perhaps 'paths'?
#1234: FILE: drivers/connector/Kconfig:19:
+         critical pathes instead of direct connector's methods calls.
                   ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1238: FILE: drivers/connector/Kconfig:23:
+         $

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1267: FILE: include/linux/connector.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1268: FILE: include/linux/connector.h:2:
+ * ^Iconnector.h$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1269: FILE: include/linux/connector.h:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: include/linux/connector.h:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1284: FILE: include/linux/connector.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1285: FILE: include/linux/connector.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1296: FILE: include/linux/connector.h:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1300: FILE: include/linux/connector.h:34:
+#define CONNECTOR_MAX_MSG_SIZE ^I1024$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1303: FILE: include/linux/connector.h:37:
+ * idx and val are unique identifiers which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1304: FILE: include/linux/connector.h:38:
+ * are used for message routing and $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1309: FILE: include/linux/connector.h:43:
+struct cb_id
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1315: FILE: include/linux/connector.h:49:
+struct cn_msg
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1316: FILE: include/linux/connector.h:50:
+^Istruct cb_id ^I^Iid;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1330: FILE: include/linux/connector.h:64:
+struct cn_notify_req
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1337: FILE: include/linux/connector.h:71:
+ * *_notify_num ^I- number of appropriate cn_notify_req structures after $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1337: FILE: include/linux/connector.h:71:
+ * *_notify_num ^I- number of appropriate cn_notify_req structures after $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1339: FILE: include/linux/connector.h:73:
+ * group ^I^I- notification receiver's idx.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1340: FILE: include/linux/connector.h:74:
+ * len ^I^I^I- total length of the attached data.$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1343: FILE: include/linux/connector.h:77:
+struct cn_ctl_msg
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1351: FILE: include/linux/connector.h:85:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1354: FILE: include/linux/connector.h:88:
+#include <asm/atomic.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1364: FILE: include/linux/connector.h:98:
+struct cn_queue_dev
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1369: FILE: include/linux/connector.h:103:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1370: FILE: include/linux/connector.h:104:
+^Istruct list_head ^Iqueue_list;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1371: FILE: include/linux/connector.h:105:
+^Ispinlock_t ^I^Iqueue_lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1371: FILE: include/linux/connector.h:105:
+	spinlock_t 		queue_lock;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1378: FILE: include/linux/connector.h:112:
+struct cn_callback
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1380: FILE: include/linux/connector.h:114:
+^I$

WARNING:SPACING: Unnecessary space before function pointer name
#1382: FILE: include/linux/connector.h:116:
+	void			(* callback)(void *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1382: FILE: include/linux/connector.h:116:
+	void			(* callback)(void *);
 	    			 ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1382: FILE: include/linux/connector.h:116:
+	void			(* callback)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1384: FILE: include/linux/connector.h:118:
+^I$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1389: FILE: include/linux/connector.h:123:
+struct cn_callback_entry
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1394: FILE: include/linux/connector.h:128:
+^I$

WARNING:SPACING: Unnecessary space before function pointer name
#1395: FILE: include/linux/connector.h:129:
+	void			(* destruct_data)(void *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1395: FILE: include/linux/connector.h:129:
+	void			(* destruct_data)(void *);
 	    			 ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1395: FILE: include/linux/connector.h:129:
+	void			(* destruct_data)(void *);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1403: FILE: include/linux/connector.h:137:
+struct cn_ctl_entry
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1409: FILE: include/linux/connector.h:143:
+struct cn_dev
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1410: FILE: include/linux/connector.h:144:
+^Istruct cb_id ^I^Iid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1413: FILE: include/linux/connector.h:147:
+^Istruct sock ^I^I*nls;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1414: FILE: include/linux/connector.h:148:
+^Ivoid ^I^I^I(*input)(struct sock *sk, int len);$

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1419: FILE: include/linux/connector.h:153:
+int cn_add_callback(struct cb_id *, char *, void (* callback)(void *));
                                                   ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cb_id *' should also have an identifier name
#1419: FILE: include/linux/connector.h:153:
+int cn_add_callback(struct cb_id *, char *, void (* callback)(void *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1419: FILE: include/linux/connector.h:153:
+int cn_add_callback(struct cb_id *, char *, void (* callback)(void *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cb_id *' should also have an identifier name
#1420: FILE: include/linux/connector.h:154:
+void cn_del_callback(struct cb_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cn_msg *' should also have an identifier name
#1421: FILE: include/linux/connector.h:155:
+int cn_netlink_send(struct cn_msg *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1421: FILE: include/linux/connector.h:155:
+int cn_netlink_send(struct cn_msg *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1421: FILE: include/linux/connector.h:155:
+int cn_netlink_send(struct cn_msg *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock *' should also have an identifier name
#1426: FILE: include/linux/connector.h:160:
+struct cn_queue_dev *cn_queue_alloc_dev(char *name, struct sock *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cb_id *' should also have an identifier name
#1429: FILE: include/linux/connector.h:163:
+int cn_cb_equal(struct cb_id *, struct cb_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cb_id *' should also have an identifier name
#1429: FILE: include/linux/connector.h:163:
+int cn_cb_equal(struct cb_id *, struct cb_id *);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1459: FILE: Documentation/connector/cn_test.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1460: FILE: Documentation/connector/cn_test.c:2:
+ * ^Icn_test.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1461: FILE: Documentation/connector/cn_test.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1464: FILE: Documentation/connector/cn_test.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1476: FILE: Documentation/connector/cn_test.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1477: FILE: Documentation/connector/cn_test.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#1489: FILE: Documentation/connector/cn_test.c:31:
+static char cn_test_name[] = "cn_test";

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1497: FILE: Documentation/connector/cn_test.c:39:
+	printk("%s: %lu: idx=%x, val=%x, seq=%u, ack=%u, len=%d: %s.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1498: FILE: Documentation/connector/cn_test.c:40:
+^I       __func__, jiffies, msg->id.idx, msg->id.val, $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1512: FILE: Documentation/connector/cn_test.c:54:
+	size0 = sizeof(*msg) + sizeof(*ctl) + 3*sizeof(*req);
 	                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1513: FILE: Documentation/connector/cn_test.c:55:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1518: FILE: Documentation/connector/cn_test.c:60:
+		printk(KERN_ERR "Failed to allocate new skb with size=%u.\n", size);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1518: FILE: Documentation/connector/cn_test.c:60:
+	if (!skb) {
+		printk(KERN_ERR "Failed to allocate new skb with size=%u.\n", size);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1529: FILE: Documentation/connector/cn_test.c:71:
+^Imsg->id.idx ^I= -1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1530: FILE: Documentation/connector/cn_test.c:72:
+^Imsg->id.val ^I= -1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1531: FILE: Documentation/connector/cn_test.c:73:
+^Imsg->seq ^I= 0x123;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1532: FILE: Documentation/connector/cn_test.c:74:
+^Imsg->ack ^I= 0x345;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1533: FILE: Documentation/connector/cn_test.c:75:
+^Imsg->len ^I= size0 - sizeof(*msg);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1537: FILE: Documentation/connector/cn_test.c:79:
+^Ictl->idx_notify_num ^I= 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1538: FILE: Documentation/connector/cn_test.c:80:
+^Ictl->val_notify_num ^I= 2;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1556: FILE: Documentation/connector/cn_test.c:98:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1563: FILE: Documentation/connector/cn_test.c:105:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1568: FILE: Documentation/connector/cn_test.c:110:
+	printk(KERN_INFO "Request was sent. Group=0x%x.\n", ctl->group);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1569: FILE: Documentation/connector/cn_test.c:111:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1573: FILE: Documentation/connector/cn_test.c:115:
+	printk(KERN_ERR "Failed to send %u.%u\n", msg->seq, msg->ack);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1585: FILE: Documentation/connector/cn_test.c:127:
+	if (m)
+	{

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1595: FILE: Documentation/connector/cn_test.c:137:
+		memcpy(m+1, data, m->len);
 		        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1596: FILE: Documentation/connector/cn_test.c:138:
+^I^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1610: FILE: Documentation/connector/cn_test.c:152:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1613: FILE: Documentation/connector/cn_test.c:155:
+		printk(KERN_ERR "Failed to create new netlink socket(%u).\n", NETLINK_NFLOG);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1785: FILE: Documentation/connector/connector.txt:120:
+As example of usage Documentation/connector now contains cn_test.c - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1814: FILE: Documentation/connector/connector.txt:149:
+Netlink itself is not reliable protocol, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1817: FILE: Documentation/connector/connector.txt:152:
+queue overflowed, so caller is warned $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1819: FILE: Documentation/connector/connector.txt:154:
+[main connector's message header] contains $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000191189.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 105 errors, 114 warnings, 21 checks, 1582 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000191189.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
