WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
- Fix wrong time_after usage introduced in 60. Maybe the fact I always get is

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#252: FILE: drivers/ide/ide.c:1454:
+				if ((wait = expiry(drive, drive->rq)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#276: FILE: drivers/ide/ide.c:1489:
+					startstop = ide_error(drive, drive->rq, "irq timeout", GET_STAT());

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#387: FILE: drivers/ide/ide.c:2424:
+			if (put_user(drive->bios_sect, (byte *) &loc->sectors))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#390: FILE: drivers/ide/ide.c:2427:
+			if (put_user(bios_cyl, (unsigned short *) &loc->cylinders))

CHECK:SPACING: No space is necessary after a cast
#395: FILE: drivers/ide/ide.c:2431:
+				(unsigned long *) &loc->start))

CHECK:SPACING: No space is necessary after a cast
#408: FILE: drivers/ide/ide.c:2443:
+			if (put_user(drive->head, (u8 *) &loc->heads))

CHECK:SPACING: No space is necessary after a cast
#411: FILE: drivers/ide/ide.c:2446:
+			if (put_user(drive->sect, (u8 *) &loc->sectors))

CHECK:SPACING: No space is necessary after a cast
#414: FILE: drivers/ide/ide.c:2449:
+			if (put_user(drive->cyl, (unsigned int *) &loc->cylinders))

CHECK:SPACING: No space is necessary after a cast
#419: FILE: drivers/ide/ide.c:2453:
+				(unsigned long *) &loc->start))

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#561: FILE: drivers/ide/ide-disk.c:1184:
+			printk(KERN_ERR "%s: cleanup_module() called while still busy\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#561: FILE: drivers/ide/ide-disk.c:1184:
+			printk(KERN_ERR "%s: cleanup_module() called while still busy\n", drive->name);

CHECK:BRACES: Unbalanced braces around else statement
#615: FILE: drivers/ide/ide-pci.c:706:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#638: FILE: drivers/ide/pdc202xx.c:1453:
+		enablebits: {{0x50,0x02,0x02}, {0x50,0x04,0x04}},
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#638: FILE: drivers/ide/pdc202xx.c:1453:
+		enablebits: {{0x50,0x02,0x02}, {0x50,0x04,0x04}},
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#638: FILE: drivers/ide/pdc202xx.c:1453:
+		enablebits: {{0x50,0x02,0x02}, {0x50,0x04,0x04}},
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#638: FILE: drivers/ide/pdc202xx.c:1453:
+		enablebits: {{0x50,0x02,0x02}, {0x50,0x04,0x04}},
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#638: FILE: drivers/ide/pdc202xx.c:1453:
+		enablebits: {{0x50,0x02,0x02}, {0x50,0x04,0x04}},
 		                                         ^

WARNING:INDENTED_LABEL: labels should not be indented
#638: FILE: drivers/ide/pdc202xx.c:1453:
+		enablebits: {{0x50,0x02,0x02}, {0x50,0x04,0x04}},

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hwif' - possible side-effects?
#1031: FILE: include/linux/ide.h:244:
+# define ide_ack_intr(hwif) (hwif->hw.ack_intr ? hwif->hw.ack_intr(hwif) : 1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hwif' may be better as '(hwif)' to avoid precedence issues
#1031: FILE: include/linux/ide.h:244:
+# define ide_ack_intr(hwif) (hwif->hw.ack_intr ? hwif->hw.ack_intr(hwif) : 1)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1072: FILE: include/linux/ide.h:424:
+typedef enum {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1095: FILE: include/linux/ide.h:447:
+typedef struct hwgroup_s {

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1099: FILE: include/linux/ide.h:451:
+	ide_startstop_t (*handler)(struct ata_device *, struct request *);	/* irq handler, if active */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1099: FILE: include/linux/ide.h:451:
+	ide_startstop_t (*handler)(struct ata_device *, struct request *);	/* irq handler, if active */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#1099: FILE: include/linux/ide.h:451:
+	ide_startstop_t (*handler)(struct ata_device *, struct request *);	/* irq handler, if active */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458966.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 10 warnings, 10 checks, 961 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458966.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
