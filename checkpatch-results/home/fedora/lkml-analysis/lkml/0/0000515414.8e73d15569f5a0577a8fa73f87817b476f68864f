WARNING:TYPO_SPELLING: 'temporarilly' may be misspelled - perhaps 'temporarily'?
#46: 
Alternatively something to temporarilly hold onto 'nearly freed'
                           ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'hueristic' may be misspelled - perhaps 'heuristic'?
#51: 
think of some hueristic to avoid allocating the next order 0
              ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: tmp/page_alloc.c:72:
+       int addfront=1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#90: FILE: tmp/page_alloc.c:72:
+       int addfront=1;
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#98: FILE: tmp/page_alloc.c:116:
                if (!test_and_change_bit(index, area->map))
+                 {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 19)
#98: FILE: tmp/page_alloc.c:116:
                if (!test_and_change_bit(index, area->map))
[...]
+                    */

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: tmp/page_alloc.c:117:
+                 {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: tmp/page_alloc.c:117:
+                 {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: tmp/page_alloc.c:118:
+                   /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: tmp/page_alloc.c:119:
+                    * the buddy page is still allocated.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: tmp/page_alloc.c:120:
+                    *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: tmp/page_alloc.c:121:
+                    * see how many bits are set in its bitmap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: tmp/page_alloc.c:122:
+                    * if 50% or more, we conclude the buddy is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: tmp/page_alloc.c:123:
+                    * unlikely to be freed soon, and add the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: tmp/page_alloc.c:124:
+                    * area to the head of the queue; else we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: tmp/page_alloc.c:125:
+                    * conclude the buddy may be free soon and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: tmp/page_alloc.c:126:
+                    * add it to the head.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: tmp/page_alloc.c:127:
+                    */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: tmp/page_alloc.c:128:
+                   if (mask & 1) /* not order 0 merge */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: tmp/page_alloc.c:128:
+                   if (mask & 1) /* not order 0 merge */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 21)
#114: FILE: tmp/page_alloc.c:128:
+                   if (mask & 1) /* not order 0 merge */
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: tmp/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: tmp/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)$

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#115: FILE: tmp/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)
                                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#115: FILE: tmp/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)
                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#115: FILE: tmp/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)
                                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#115: FILE: tmp/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: tmp/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: tmp/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#116: FILE: tmp/page_alloc.c:130:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)
+                                  && !test_bit((index^1)<<1, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: tmp/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, $

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#116: FILE: tmp/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, 
                                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#116: FILE: tmp/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, 
                                                         ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#117: FILE: tmp/page_alloc.c:130:
(area-1)->map) );

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: tmp/page_alloc.c:131:
+                   break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: tmp/page_alloc.c:131:
+                   break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: tmp/page_alloc.c:132:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: tmp/page_alloc.c:132:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: tmp/page_alloc.c:150:
+       if (addfront)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 9)
#129: FILE: tmp/page_alloc.c:150:
+       if (addfront)
+         memlist_add_head(&(base + page_idx)->list, &area->free_list);

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: tmp/page_alloc.c:151:
+         memlist_add_head(&(base + page_idx)->list, &area->free_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: tmp/page_alloc.c:151:
+         memlist_add_head(&(base + page_idx)->list, &area->free_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: tmp/page_alloc.c:152:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 9)
#131: FILE: tmp/page_alloc.c:152:
+       else
+         memlist_add_tail(&(base + page_idx)->list, &area->free_list);

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: tmp/page_alloc.c:153:
+         memlist_add_tail(&(base + page_idx)->list, &area->free_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: tmp/page_alloc.c:153:
+         memlist_add_tail(&(base + page_idx)->list, &area->free_list);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 17 warnings, 6 checks, 47 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
