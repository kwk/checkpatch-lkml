WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -Nur --exclude-from=exclude linux.orig/fs/adfs/inode.c linux/fs/adfs/inode.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: fs/buffer.c:1943:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: fs/buffer.c:1944:
+^I * If priority is zero, there is no need to actually $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: fs/ext2/inode.c:655:
+	return block_write_full_page(page,ext2_get_block,priority);
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: fs/ext2/inode.c:655:
+	return block_write_full_page(page,ext2_get_block,priority);
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: fs/fat/inode.c:740:
+	return block_write_full_page(page,fat_get_block, priority);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: fs/hfs/inode.c:225:
+	return block_write_full_page(page,hfs_get_block,priority);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: fs/hfs/inode.c:225:
+	return block_write_full_page(page,hfs_get_block,priority);
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: fs/hpfs/file.c:98:
+	return block_write_full_page(page,hpfs_get_block,priority);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: fs/hpfs/file.c:98:
+	return block_write_full_page(page,hpfs_get_block,priority);
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: fs/minix/inode.c:403:
+	return block_write_full_page(page,minix_get_block,priority);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: fs/minix/inode.c:403:
+	return block_write_full_page(page,minix_get_block,priority);
 	                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: fs/nfs/write.c:265:
+^I/* $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#211: FILE: fs/nfs/write.c:269:
+	ClearPageDirty (page);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: fs/qnx4/inode.c:420:
+	return block_write_full_page(page,qnx4_get_block,priority);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: fs/qnx4/inode.c:420:
+	return block_write_full_page(page,qnx4_get_block,priority);
 	                                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#267: FILE: fs/reiserfs/inode.c:1858:
+static int reiserfs_writepage (struct page * page, int priority)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: fs/reiserfs/inode.c:1858:
+static int reiserfs_writepage (struct page * page, int priority)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: fs/reiserfs/inode.c:1862:
+    if (!priority)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#271: FILE: fs/reiserfs/inode.c:1862:
+    if (!priority)
+	    return -1;

WARNING:TABSTOP: Statements should start on a tabstop
#272: FILE: fs/reiserfs/inode.c:1863:
+	    return -1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: fs/reiserfs/inode.c:1866:
+    ClearPageDirty(page);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: fs/smbfs/file.c:166:
+^I * We're going to write the page out: mark it clean. $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#316: FILE: fs/sysv/inode.c:921:
+	return block_write_full_page(page,sysv_get_block,priority);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#316: FILE: fs/sysv/inode.c:921:
+	return block_write_full_page(page,sysv_get_block,priority);
 	                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: fs/udf/file.c:77:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: fs/ufs/inode.c:523:
+	return block_write_full_page(page,ufs_getfrag_block,priority);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: fs/ufs/inode.c:523:
+	return block_write_full_page(page,ufs_getfrag_block,priority);
 	                                                   ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#392: FILE: include/linux/fs.h:365:
+	int (*writepage)(struct page *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#392: FILE: include/linux/fs.h:365:
+	int (*writepage)(struct page *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#401: FILE: include/linux/fs.h:1271:
+extern int block_write_full_page(struct page*, get_block_t*, int priority);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page*' should also have an identifier name
#401: FILE: include/linux/fs.h:1271:
+extern int block_write_full_page(struct page*, get_block_t*, int priority);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'get_block_t*' should also have an identifier name
#401: FILE: include/linux/fs.h:1271:
+extern int block_write_full_page(struct page*, get_block_t*, int priority);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: include/linux/nfs_fs.h:197:
+extern int  nfs_writepage(struct page *, int priority);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#413: FILE: include/linux/nfs_fs.h:197:
+extern int  nfs_writepage(struct page *, int priority);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#447: FILE: mm/shmem.c:224:
+static int shmem_writepage(struct page * page, int priority)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: mm/shmem.c:249:
+^IClearPageDirty(page);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: mm/swap_state.c:38:
+^Iif (!priority) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: mm/vmscan.c:479:
+^I^I^Iint (*writepage)(struct page *, int) = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: mm/vmscan.c:484:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#532: FILE: mm/vmscan.c:489:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: mm/vmscan.c:496:
+^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000535643.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 12 warnings, 2 checks, 411 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000535643.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
