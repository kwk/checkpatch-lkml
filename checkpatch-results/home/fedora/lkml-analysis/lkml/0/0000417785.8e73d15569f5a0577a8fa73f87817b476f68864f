WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#130: 
diff -Nur --exclude=SCCS --exclude=BitKeeper --exclude=ChangeSet linux-2.5.45/arch/i386/kernel/entry.S linux-2.5-lbd/arch/i386/kernel/entry.S

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: fs/coda/upcall.c:587:
+int venus_statfs(struct super_block *sb, struct kstatfs *sfs) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#262: FILE: fs/efs/super.c:280:
+int efs_statfs(struct super_block *s, struct kstatfs *buf) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: fs/ext2/super.c:35:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: fs/ext2/super.c:35:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: fs/ext2/super.c:35:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: fs/ext2/super.c:821:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: fs/ext2/super.c:821:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: fs/ext2/super.c:821:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#295: FILE: fs/ext3/super.c:1762:
+int ext3_statfs (struct super_block * sb, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#295: FILE: fs/ext3/super.c:1762:
+int ext3_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: fs/ext3/super.c:1762:
+int ext3_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#361: FILE: fs/hpfs/hpfs_fn.h:309:
+int hpfs_statfs(struct super_block *, struct kstatfs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#361: FILE: fs/hpfs/hpfs_fn.h:309:
+int hpfs_statfs(struct super_block *, struct kstatfs *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: fs/isofs/inode.c:77:
+static int isofs_statfs (struct super_block *, struct kstatfs *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#394: FILE: fs/isofs/inode.c:887:
+static int isofs_statfs (struct super_block *sb, struct kstatfs *buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#570: FILE: fs/open.c:43:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#580: FILE: fs/open.c:53:
+	if (sizeof(*buf) == sizeof(st))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#582: FILE: fs/open.c:55:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#607: FILE: fs/open.c:80:
+	if (sizeof(*buf) == sizeof(st))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#609: FILE: fs/open.c:82:
+	else {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#636: FILE: fs/open.c:106:
+		error = vfs_statfs_native(nd.dentry->d_inode->i_sb, &tmp);
 		                          ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#647: FILE: fs/open.c:116:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#652: FILE: fs/open.c:121:
+	error = user_path_walk(path, &nd);
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#655: FILE: fs/open.c:124:
+		error = vfs_statfs64(nd.dentry->d_inode->i_sb, &tmp);
 		                     ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#655: FILE: fs/open.c:124:
+		struct statfs64 tmp;
+		error = vfs_statfs64(nd.dentry->d_inode->i_sb, &tmp);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#658: FILE: fs/open.c:127:
+		path_release(&nd);
 		              ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#683: FILE: fs/open.c:152:
+	struct file * file;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#728: FILE: fs/reiserfs/super.c:67:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#728: FILE: fs/reiserfs/super.c:67:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#728: FILE: fs/reiserfs/super.c:67:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#737: FILE: fs/reiserfs/super.c:1343:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#737: FILE: fs/reiserfs/super.c:1343:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#737: FILE: fs/reiserfs/super.c:1343:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf)

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: fs/super.c:355:
+        struct kstatfs sbuf;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: fs/super.c:355:
+        struct kstatfs sbuf;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#827: FILE: fs/ufs/super.c:975:
+int ufs_statfs (struct super_block * sb, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#827: FILE: fs/ufs/super.c:975:
+int ufs_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#827: FILE: fs/ufs/super.c:975:
+int ufs_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'bhv_desc_t *' should also have an identifier name
#880: FILE: fs/xfs/linux/xfs_vfs.h:85:
+	int	(*vfs_statvfs)(bhv_desc_t *, struct kstatfs *, struct vnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#880: FILE: fs/xfs/linux/xfs_vfs.h:85:
+	int	(*vfs_statvfs)(bhv_desc_t *, struct kstatfs *, struct vnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vnode *' should also have an identifier name
#880: FILE: fs/xfs/linux/xfs_vfs.h:85:
+	int	(*vfs_statvfs)(bhv_desc_t *, struct kstatfs *, struct vnode *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#909: FILE: include/asm-generic/statfs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#916: FILE: include/asm-generic/statfs.h:8:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#946: FILE: include/asm-generic/statfs.h:38:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: include/asm-i386/unistd.h:265:
+#define __NR_fstatfs64^I^I258  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1014: FILE: include/asm-ia64/statfs.h:25:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1028: FILE: include/asm-ia64/statfs.h:39:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1064: FILE: include/linux/efs_fs.h:57:
+extern int efs_statfs(struct super_block *, struct kstatfs *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1064: FILE: include/linux/efs_fs.h:57:
+extern int efs_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1064: FILE: include/linux/efs_fs.h:57:
+extern int efs_statfs(struct super_block *, struct kstatfs *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1076: FILE: include/linux/ext3_fs.h:758:
+extern int ext3_statfs (struct super_block *, struct kstatfs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1076: FILE: include/linux/ext3_fs.h:758:
+extern int ext3_statfs (struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1076: FILE: include/linux/ext3_fs.h:758:
+extern int ext3_statfs (struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1076: FILE: include/linux/ext3_fs.h:758:
+extern int ext3_statfs (struct super_block *, struct kstatfs *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1096: FILE: include/linux/fs.h:821:
+	int (*statfs) (struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1096: FILE: include/linux/fs.h:821:
+	int (*statfs) (struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1096: FILE: include/linux/fs.h:821:
+	int (*statfs) (struct super_block *, struct kstatfs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1105: FILE: include/linux/fs.h:1007:
+extern int vfs_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1105: FILE: include/linux/fs.h:1007:
+extern int vfs_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1105: FILE: include/linux/fs.h:1007:
+extern int vfs_statfs(struct super_block *, struct kstatfs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1114: FILE: include/linux/fs.h:1317:
+extern int simple_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1114: FILE: include/linux/fs.h:1317:
+extern int simple_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1114: FILE: include/linux/fs.h:1317:
+extern int simple_statfs(struct super_block *, struct kstatfs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1126: FILE: include/linux/msdos_fs.h:281:
+extern int fat_statfs(struct super_block *sb, struct kstatfs *buf);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1170: FILE: include/linux/statfs.h:1:
+#ifndef _LINUX_STATFS_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1176: FILE: include/linux/statfs.h:7:
+typedef __kernel_fsid_t	fsid_t;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417785.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 36 warnings, 14 checks, 845 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417785.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
