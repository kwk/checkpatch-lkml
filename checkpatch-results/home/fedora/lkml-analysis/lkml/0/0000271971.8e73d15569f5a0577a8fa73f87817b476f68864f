WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -urN linux-2.6.7/Documentation/MSI-HOWTO.txt patch-2.6.7-fix-msix/Documentation/MSI-HOWTO.txt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#51: FILE: Documentation/MSI-HOWTO.txt:10:
+This guide describes the basics of Message Signaled Interrupts (MSI), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: Documentation/MSI-HOWTO.txt:11:
+the advantages of using MSI over traditional interrupt mechanisms, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: Documentation/MSI-HOWTO.txt:12:
+and how to enable your driver to use MSI or MSI-X. Also included is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: Documentation/MSI-HOWTO.txt:101:
+To allow MSI/MSI-X capable device drivers to selectively enable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: Documentation/MSI-HOWTO.txt:102:
+MSI/MSI-X (using pci_enable_msi()/pci_enable_msix() as described $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: Documentation/MSI-HOWTO.txt:103:
+below), the VECTOR based scheme needs to be enabled by setting $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: Documentation/MSI-HOWTO.txt:115:
+capability structure requires a device driver to call the function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: Documentation/MSI-HOWTO.txt:139:
+and resolves vector leakage.   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: Documentation/MSI-HOWTO.txt:158:
+in this context means PCI pin-irq assertion or PCI-Express INTx $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: Documentation/MSI-HOWTO.txt:159:
+emulation. A successful MSI request (using pci_enable_msi()) switches $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: Documentation/MSI-HOWTO.txt:161:
+stored in dev->irq will be saved by the PCI subsystem and a new $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: Documentation/MSI-HOWTO.txt:162:
+assigned MSI vector will replace dev->irq. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: Documentation/MSI-HOWTO.txt:164:
+To return back to its default mode, a device driver must call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: Documentation/MSI-HOWTO.txt:167:
+MSI vector as unused. Once being marked as unused, there is no $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: Documentation/MSI-HOWTO.txt:171:
+may be re-assigned. For the case where the PCI subsystem re-assigned $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: Documentation/MSI-HOWTO.txt:174:
+if no more vectors are available.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: Documentation/MSI-HOWTO.txt:179:
+the MSI-X capability structure with an independent message address $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: Documentation/MSI-HOWTO.txt:181:
+the existing Linux kernel has no impact on supporting multiple $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: Documentation/MSI-HOWTO.txt:182:
+messages on an MSI-X capable device functions. To enable MSI-X on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: Documentation/MSI-HOWTO.txt:183:
+a device function's MSI-X capability structure requires its device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: Documentation/MSI-HOWTO.txt:188:
+resources. If the PCI vector resources are available for the number $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: Documentation/MSI-HOWTO.txt:189:
+of vectors requested by a device driver, this function will configure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: Documentation/MSI-HOWTO.txt:191:
+requested messages. To emphasize this reason, for example, a device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: Documentation/MSI-HOWTO.txt:192:
+may be capable for supporting the maximum of 32 vectors while its $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: Documentation/MSI-HOWTO.txt:194:
+that the device driver should call this function once during the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: Documentation/MSI-HOWTO.txt:197:
+Unlike the function pci_enable_msi(), the function pci_enable_msix() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: Documentation/MSI-HOWTO.txt:198:
+does not replace the pre-assigned IOAPIC dev->irq with a new MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: Documentation/MSI-HOWTO.txt:200:
+into the field vector of each element contained in a second argument. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: Documentation/MSI-HOWTO.txt:204:
+may result unpredictabe behavior. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: Documentation/MSI-HOWTO.txt:206:
+For each MSI-X vector granted, a device driver is responsible to call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: Documentation/MSI-HOWTO.txt:208:
+this vector with its corresponding interrupt service handler. It is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: Documentation/MSI-HOWTO.txt:209:
+a device driver's choice to assign all vectors with the same $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: Documentation/MSI-HOWTO.txt:210:
+interrupt service handler or each vector with a unique interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: Documentation/MSI-HOWTO.txt:211:
+service handler. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: Documentation/MSI-HOWTO.txt:216:
+space for a device's MSI-X structure should be isolated so that the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: Documentation/MSI-HOWTO.txt:217:
+software system can set different page for controlling accesses to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: Documentation/MSI-HOWTO.txt:220:
+table/MSI-X PBA and MMIO address space of the MSI-X table/MSI-X PBA. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: Documentation/MSI-HOWTO.txt:221:
+A device driver is prohibited from requesting the MMIO address space $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: Documentation/MSI-HOWTO.txt:222:
+of the MSI-X table/MSI-X PBA. Otherwise, the PCI subsystem will fail $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: Documentation/MSI-HOWTO.txt:223:
+enabling MSI-X on its hardware device when it calls the function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: Documentation/MSI-HOWTO.txt:228:
+Determining the number of MSI-X vectors allocated to a function is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: Documentation/MSI-HOWTO.txt:230:
+devices populated in the system. The policy of allocating MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: Documentation/MSI-HOWTO.txt:235:
+x = ^IThe number of available PCI vector resources by the time $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: Documentation/MSI-HOWTO.txt:242:
+^INR_HP_RESERVED_VECTORS, for the case where the system is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: Documentation/MSI-HOWTO.txt:245:
+^Imeet their specific needs. $

WARNING:TYPO_SPELLING: 'pupulated' may be misspelled - perhaps 'populated'?
#300: FILE: Documentation/MSI-HOWTO.txt:252:
+z =	The number of MSI-X capable devices pupulated in the system.
    	                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: Documentation/MSI-HOWTO.txt:253:
+^IThis policy ensures that maximum (x - y) is distributed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: Documentation/MSI-HOWTO.txt:254:
+^Ievenly among MSI-X capable devices.^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: Documentation/MSI-HOWTO.txt:255:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: Documentation/MSI-HOWTO.txt:258:
+structure of a device as requested by its device driver, y/z is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: Documentation/MSI-HOWTO.txt:259:
+decremented accordingly.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: Documentation/MSI-HOWTO.txt:263:
+For the case where fewer MSI-X vectors are allocated to a function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: Documentation/MSI-HOWTO.txt:265:
+maximum number of MSI-X vectors available to the caller. A device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: Documentation/MSI-HOWTO.txt:267:
+in a return. For example, if a device driver requests 5 vectors, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: Documentation/MSI-HOWTO.txt:268:
+the number of available vectors is 3 vectors, a value of 3 will be a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: Documentation/MSI-HOWTO.txt:269:
+return as a result of pci_enable_msix() call. A function could be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: Documentation/MSI-HOWTO.txt:270:
+designed for its driver to use only 3 MSI-X table entries as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: Documentation/MSI-HOWTO.txt:271:
+different combinations as ABC--, A-B-C, A--CB, etc. Note that this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: Documentation/MSI-HOWTO.txt:272:
+patch does not support multiple entries with the same vector. Such $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: Documentation/MSI-HOWTO.txt:275:
+pci_enable_msix(). Below are the reasons why supporting multiple $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: Documentation/MSI-HOWTO.txt:277:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: Documentation/MSI-HOWTO.txt:280:
+^I  software driver ISR. Attempting to walk through all MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: Documentation/MSI-HOWTO.txt:281:
+^I  table entries (2048 max) to mask/unmask any match vector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: Documentation/MSI-HOWTO.txt:282:
+^I  is an undesirable solution. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: Documentation/MSI-HOWTO.txt:285:
+^I  SMP affinity of any match vector is an undesirable solution. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: Documentation/MSI-HOWTO.txt:292:
+for enabling MSI-X messages on its hardware device. Depending on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: Documentation/MSI-HOWTO.txt:299:
+elements is indicated in argument nvec. The content of each element $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: Documentation/MSI-HOWTO.txt:307:
+A device driver is responsible for initializing the field entry of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: Documentation/MSI-HOWTO.txt:308:
+each element with unique entry supported by MSI-X table. Otherwise, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: Documentation/MSI-HOWTO.txt:309:
+-EINVAL will be returned as a result. A successful return of zero $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: Documentation/MSI-HOWTO.txt:310:
+indicates the PCI subsystem completes initializing each of requested $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: Documentation/MSI-HOWTO.txt:311:
+entries of the MSI-X table with message address and message data. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: Documentation/MSI-HOWTO.txt:312:
+Last but not least, the PCI subsystem will write the 1:1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: Documentation/MSI-HOWTO.txt:313:
+vector-to-entry mapping into the field vector of each element. A $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: Documentation/MSI-HOWTO.txt:323:
+a failure. This failure may be a result of duplicate entries $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: Documentation/MSI-HOWTO.txt:332:
+unloaded without doing request_irq on all ssigned MSI-X vector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: Documentation/MSI-HOWTO.txt:339:
+vector leakage.   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: Documentation/MSI-HOWTO.txt:356:
+In Figure 2.0, a device operates by default in legacy mode. A $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: Documentation/MSI-HOWTO.txt:357:
+successful MSI-X request (using pci_enable_msix()) switches a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: Documentation/MSI-HOWTO.txt:359:
+stored in dev->irq will be saved by the PCI subsystem; however, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: Documentation/MSI-HOWTO.txt:360:
+unlike MSI mode, the PCI subsystem will not replace dev->irq with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: Documentation/MSI-HOWTO.txt:361:
+assigned MSI-x vector because the PCI subsystem already writes the 1:1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: Documentation/MSI-HOWTO.txt:362:
+vector-to-entry mapping into the field vector of each element $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: Documentation/MSI-HOWTO.txt:365:
+To return back to its default mode, a device driver requires to call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: Documentation/MSI-HOWTO.txt:366:
+free_irq() on all allocated MSI vectors associated with doing $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: Documentation/MSI-HOWTO.txt:367:
+request_irq. Unlike MSI mode, the PCI subsystem switches a device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: Documentation/MSI-HOWTO.txt:368:
+function back to its default legacy mode if and only if its device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: Documentation/MSI-HOWTO.txt:372:
+Note that if a device still operates in MSI-X mode, its device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: Documentation/MSI-HOWTO.txt:376:
+to legacy mode and mark all allocated MSI-X vectors as unused. Once $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: Documentation/MSI-HOWTO.txt:377:
+being marked as unused, there is no guarantee that the PCI subsystem $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: Documentation/MSI-HOWTO.txt:378:
+will reserve these MSI-X vectors for a device. Depending on the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: Documentation/MSI-HOWTO.txt:379:
+availability of current PCI vector resources and the number of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: Documentation/MSI-HOWTO.txt:380:
+MSI/MSI-X requests from other drivers, these MSI-X vectors may be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: Documentation/MSI-HOWTO.txt:381:
+re-assigned. For the case where the PCI subsystem re-assigned $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: Documentation/MSI-HOWTO.txt:382:
+these MSI-X vectors to other driver, a request to switching back to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: Documentation/MSI-HOWTO.txt:384:
+or a failure.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: Documentation/MSI-HOWTO.txt:388:
+For the case where a function implements both MSI and MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: Documentation/MSI-HOWTO.txt:391:
+wants MSI or MSI-X enabled on its hardware device. Once a device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: Documentation/MSI-HOWTO.txt:415:
+depend on BIOS support. This key independency enables MSI/MSI-X $

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#505: FILE: Documentation/MSI-HOWTO.txt:429:
+device funtion. The device function is now running on MSI/MSI-X mode.
        ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: Documentation/MSI-HOWTO.txt:433:
+At the driver level, a return of zero from the function call of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: Documentation/MSI-HOWTO.txt:435:
+its device function is initialized successfully and ready to run in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: Documentation/MSI-HOWTO.txt:440:
+MSI/MSI-X mode ("PCI MSI"/"PCI MSIX"). Below shows below MSI mode is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#523: FILE: Documentation/MSI-HOWTO.txt:441:
+enabled on a SCSI Adaptec 39320D Ultra320.  $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: drivers/pci/msi.c:107:
+		pci_read_config_dword(entry->dev, msi_lower_address_reg(pos),
 			&address.lo_address.value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/pci/msi.c:113:
+		pci_write_config_dword(entry->dev, msi_lower_address_reg(pos),
 			address.lo_address.value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: drivers/pci/msi.c:168:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: drivers/pci/msi.c:201:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#641: FILE: drivers/pci/msi.c:288:
+static int msi_free_vector(struct pci_dev* dev, int vector, int reassign);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: drivers/pci/msi.c:303:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#663: FILE: drivers/pci/msi.c:321:
+^I^I^Iif (!msi_desc[vector]) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: drivers/pci/msi.c:322:
+^I^I^I      ^Ibreak;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: drivers/pci/msi.c:322:
+^I^I^I      ^Ibreak;^I$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#664: FILE: drivers/pci/msi.c:322:
+^I^I^I      ^Ibreak;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: drivers/pci/msi.c:329:
+^I^I}^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msi_desc[free_vector]"
#676: FILE: drivers/pci/msi.c:333:
+		if (msi_desc[free_vector] != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#679: FILE: drivers/pci/msi.c:336:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#689: FILE: drivers/pci/msi.c:346:
+^I       ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#689: FILE: drivers/pci/msi.c:346:
+^I       ^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#701: FILE: drivers/pci/msi.c:383:
+		printk(KERN_INFO "WARNING: ALL VECTORS ARE BUSY\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#737: FILE: drivers/pci/msi.c:453:
+		u16 cmd;
+		pci_read_config_word(dev, PCI_COMMAND, &cmd);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#769: FILE: drivers/pci/msi.c:475:
+		u16 cmd;
+		pci_read_config_word(dev, PCI_COMMAND, &cmd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: drivers/pci/msi.c:491:
+^I^I^Icontinue;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: drivers/pci/msi.c:508:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#802: FILE: drivers/pci/msi.c:508:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#802: FILE: drivers/pci/msi.c:508:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: drivers/pci/msi.c:508:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: drivers/pci/msi.c:548:
+^Idev->irq = vector;^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: drivers/pci/msi.c:562:
+	pci_write_config_dword(dev, msi_lower_address_reg(pos),
+			address.lo_address.value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: drivers/pci/msi.c:564:
+^I^Ipci_write_config_dword(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/pci/msi.c:565:
+		pci_write_config_dword(dev, 
+			msi_upper_address_reg(pos), address.hi_address);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#866: FILE: drivers/pci/msi.c:566:
+^I^Ipci_write_config_word(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#867: FILE: drivers/pci/msi.c:567:
+		pci_write_config_word(dev, 
+			msi_data_reg(pos, 1), *((u32*)&data));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#867: FILE: drivers/pci/msi.c:567:
+			msi_data_reg(pos, 1), *((u32*)&data));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#871: FILE: drivers/pci/msi.c:569:
+^I^Ipci_write_config_word(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: drivers/pci/msi.c:570:
+		pci_write_config_word(dev, 
+			msi_data_reg(pos, 0), *((u32*)&data));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#872: FILE: drivers/pci/msi.c:570:
+			msi_data_reg(pos, 0), *((u32*)&data));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: drivers/pci/msi.c:574:
+^I^Ipci_read_config_dword(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#879: FILE: drivers/pci/msi.c:575:
+		pci_read_config_dword(dev, 
+			msi_mask_bits_reg(pos, is_64bit_address(control)),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: drivers/pci/msi.c:580:
+^I^Ipci_write_config_dword(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#887: FILE: drivers/pci/msi.c:581:
+		pci_write_config_dword(dev, 
+			msi_mask_bits_reg(pos, is_64bit_address(control)),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#906: FILE: drivers/pci/msi.c:599:
+static int msix_capability_init(struct pci_dev *dev, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: drivers/pci/msi.c:607:
+ ^Iu16 control;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#917: FILE: drivers/pci/msi.c:607:
+ ^Iu16 control;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: drivers/pci/msi.c:607:
+ ^Iu16 control;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: drivers/pci/msi.c:610:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: drivers/pci/msi.c:613:
+ ^Ipci_read_config_word(dev, msi_control_reg(pos), &control);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#941: FILE: drivers/pci/msi.c:613:
+ ^Ipci_read_config_word(dev, msi_control_reg(pos), &control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: drivers/pci/msi.c:613:
+ ^Ipci_read_config_word(dev, msi_control_reg(pos), &control);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#943: FILE: drivers/pci/msi.c:615:
+ ^Ipci_read_config_dword(dev, msix_table_offset_reg(pos),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#943: FILE: drivers/pci/msi.c:615:
+ ^Ipci_read_config_dword(dev, msix_table_offset_reg(pos),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: drivers/pci/msi.c:615:
+ ^Ipci_read_config_dword(dev, msix_table_offset_reg(pos),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: drivers/pci/msi.c:616:
+ ^I^I&table_offset);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#944: FILE: drivers/pci/msi.c:616:
+ ^I^I&table_offset);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: drivers/pci/msi.c:616:
+ 	pci_read_config_dword(dev, msix_table_offset_reg(pos),
+ 		&table_offset);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: drivers/pci/msi.c:616:
+ ^I^I&table_offset);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#985: FILE: drivers/pci/msi.c:625:
+	if (base == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: drivers/pci/msi.c:633:
+^I^I^Ibreak;^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#994: FILE: drivers/pci/msi.c:634:
+		if ((vector = get_msi_vector(dev)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#995: FILE: drivers/pci/msi.c:635:
+^I^I^Ibreak; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#995: FILE: drivers/pci/msi.c:635:
+^I^I^Ibreak; ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#997: FILE: drivers/pci/msi.c:637:
+ ^I^Ij = entries[i].entry;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#997: FILE: drivers/pci/msi.c:637:
+ ^I^Ij = entries[i].entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: drivers/pci/msi.c:637:
+ ^I^Ij = entries[i].entry;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: drivers/pci/msi.c:638:
+ ^I^Ientries[i].vector = vector;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#998: FILE: drivers/pci/msi.c:638:
+ ^I^Ientries[i].vector = vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: drivers/pci/msi.c:638:
+ ^I^Ientries[i].vector = vector;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1000: FILE: drivers/pci/msi.c:640:
+ ^I^Ientry->msi_attrib.state = 0;^I^I/* Mark it not active */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1000: FILE: drivers/pci/msi.c:640:
+ ^I^Ientry->msi_attrib.state = 0;^I^I/* Mark it not active */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: drivers/pci/msi.c:640:
+ ^I^Ientry->msi_attrib.state = 0;^I^I/* Mark it not active */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1023: FILE: drivers/pci/msi.c:663:
+^I^Ientry->msi_attrib.current_cpu = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1026: FILE: drivers/pci/msi.c:666:
+^I^Iwritel(address.lo_address.value, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1027: FILE: drivers/pci/msi.c:667:
+		writel(address.lo_address.value, 
+			base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: drivers/pci/msi.c:669:
+^I^Iwritel(address.hi_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1031: FILE: drivers/pci/msi.c:670:
+		writel(address.hi_address, 
+			base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1034: FILE: drivers/pci/msi.c:672:
+^I^Iwritel(*(u32*)&data, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1034: FILE: drivers/pci/msi.c:672:
+		writel(*(u32*)&data, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1035: FILE: drivers/pci/msi.c:673:
+		writel(*(u32*)&data, 
+			base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: drivers/pci/msi.c:688:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1093: FILE: drivers/pci/msi.c:710:
+	if ((status = msi_init()) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1100: FILE: drivers/pci/msi.c:713:
+   ^Iif (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1100: FILE: drivers/pci/msi.c:713:
+   ^Iif (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: drivers/pci/msi.c:713:
+   ^Iif (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1100: FILE: drivers/pci/msi.c:713:
+   	if (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))

WARNING:TYPO_SPELLING: 'Sucess' may be misspelled - perhaps 'Success'?
#1108: FILE: drivers/pci/msi.c:721:
+		/* Lookup Sucess */
 		          ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1113: FILE: drivers/pci/msi.c:726:
+^I^I^Imsi_desc[dev->irq]->msi_attrib.state = 0; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1113: FILE: drivers/pci/msi.c:726:
+^I^I^Imsi_desc[dev->irq]->msi_attrib.state = 0; ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1114: FILE: drivers/pci/msi.c:727:
+^I^I^Ivector_irq[dev->irq] = -1;^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1124: FILE: drivers/pci/msi.c:737:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1124: FILE: drivers/pci/msi.c:737:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1124: FILE: drivers/pci/msi.c:737:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1124: FILE: drivers/pci/msi.c:737:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1124: FILE: drivers/pci/msi.c:737:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && 
[...]
+			printk(KERN_INFO "Can't enable MSI. Device already had MSI-X vectors assigned\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1124: FILE: drivers/pci/msi.c:737:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1125: FILE: drivers/pci/msi.c:738:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && 
+		!msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1126: FILE: drivers/pci/msi.c:739:
+			printk(KERN_INFO "Can't enable MSI. Device already had MSI-X vectors assigned\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1128: FILE: drivers/pci/msi.c:741:
+^I^I^Ireturn -EINVAL;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1129: FILE: drivers/pci/msi.c:742:
+^I}^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1132: FILE: drivers/pci/msi.c:745:
+   ^I^Iif (!pos) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1132: FILE: drivers/pci/msi.c:745:
+   ^I^Iif (!pos) $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1132: FILE: drivers/pci/msi.c:745:
+   ^I^Iif (!pos) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: drivers/pci/msi.c:745:
+   ^I^Iif (!pos) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1134: FILE: drivers/pci/msi.c:747:
+^I^Ielse if (nr_msix_devices > 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1135: FILE: drivers/pci/msi.c:748:
+^I^I^Inr_msix_devices--;^I/* Both MSI and MSI-X capable, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1136: FILE: drivers/pci/msi.c:749:
+			nr_msix_devices--;	/* Both MSI and MSI-X capable, 
+						   but choose enabling MSI */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1136: FILE: drivers/pci/msi.c:749:
+						   but choose enabling MSI */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1144: FILE: drivers/pci/msi.c:755:
+void pci_disable_msi(struct pci_dev* dev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1152: FILE: drivers/pci/msi.c:762:
+   ^Iif (!dev || !(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1152: FILE: drivers/pci/msi.c:762:
+   ^Iif (!dev || !(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: drivers/pci/msi.c:762:
+   ^Iif (!dev || !(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1152: FILE: drivers/pci/msi.c:762:
+   	if (!dev || !(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1156: FILE: drivers/pci/msi.c:766:
+^Iif (!(control & PCI_MSI_FLAGS_ENABLE)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1158: FILE: drivers/pci/msi.c:768:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1167: FILE: drivers/pci/msi.c:777:
+^I^Iprintk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on vector->%d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1167: FILE: drivers/pci/msi.c:777:
+		printk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on vector->%d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1168: FILE: drivers/pci/msi.c:778:
+		printk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on vector->%d\n", 
+		dev->bus->number, PCI_SLOT(dev->devfn),	PCI_FUNC(dev->devfn),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1170: FILE: drivers/pci/msi.c:780:
+		BUG_ON(entry->msi_attrib.state > 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1181: FILE: drivers/pci/msi.c:791:
+		disable_msi_mode(dev, pci_find_capability(dev, PCI_CAP_ID_MSI),
+					PCI_CAP_ID_MSI);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1230: FILE: drivers/pci/msi.c:827:
+^I^I^I/* $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1237: FILE: drivers/pci/msi.c:834:
+^I^Ivector_irq[vector] = 0; ^I^I  /* Mark it free */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1243: FILE: drivers/pci/msi.c:840:
+^I^I} $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1255: FILE: drivers/pci/msi.c:851:
+static int msi_free_vector(struct pci_dev* dev, int vector, int reassign)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1308: FILE: drivers/pci/msi.c:881:
+^I^Iif (!reassign) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1309: FILE: drivers/pci/msi.c:882:
+^I^I^Iwritel(1, base + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1312: FILE: drivers/pci/msi.c:885:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1314: FILE: drivers/pci/msi.c:887:
+^I^I^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: drivers/pci/msi.c:896:
+   ^I^I^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1323: FILE: drivers/pci/msi.c:896:
+   ^I^I^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: drivers/pci/msi.c:896:
+   ^I^I^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1324: FILE: drivers/pci/msi.c:897:
+^I^I^Ipci_read_config_word(dev, msi_control_reg(pos), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1325: FILE: drivers/pci/msi.c:898:
+			pci_read_config_word(dev, msi_control_reg(pos), 
+				&control);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1328: FILE: drivers/pci/msi.c:901:
+			pci_read_config_dword(dev, msix_table_offset_reg(pos),
+				&table_offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1330: FILE: drivers/pci/msi.c:903:
+			phys_addr = pci_resource_start (dev, bir);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1331: FILE: drivers/pci/msi.c:904:
+^I^I^Iphys_addr += (u32)(table_offset & $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1333: FILE: drivers/pci/msi.c:906:
+			iounmap((void*)base);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: drivers/pci/msi.c:907:
+^I^I^Irelease_mem_region(phys_addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1335: FILE: drivers/pci/msi.c:908:
+			release_mem_region(phys_addr, 
+				nr_entries * PCI_MSIX_ENTRY_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1373: FILE: drivers/pci/msi.c:921:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1400: FILE: drivers/pci/msi.c:939:
+^I^Ivector_irq[vector] = -1;^I^I/* Mark it busy */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1405: FILE: drivers/pci/msi.c:944:
+^I^I^Imsi_desc[vector]->msi_attrib.entry_nr =^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1407: FILE: drivers/pci/msi.c:946:
+			writel( readl(base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1408: FILE: drivers/pci/msi.c:947:
+^I^I^I^IPCI_MSIX_ENTRY_LOWER_ADDR_OFFSET), base + $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1411: FILE: drivers/pci/msi.c:950:
+			writel(	readl(base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1412: FILE: drivers/pci/msi.c:951:
+^I^I^I^IPCI_MSIX_ENTRY_UPPER_ADDR_OFFSET), base + $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1415: FILE: drivers/pci/msi.c:954:
+			writel( (readl(base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1417: FILE: drivers/pci/msi.c:956:
+^I^I^I^Ibase + (entries+i)->entry*PCI_MSIX_ENTRY_SIZE + $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1417: FILE: drivers/pci/msi.c:956:
+				base + (entries+i)->entry*PCI_MSIX_ENTRY_SIZE + 
 				               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1417: FILE: drivers/pci/msi.c:956:
+				base + (entries+i)->entry*PCI_MSIX_ENTRY_SIZE + 
 				                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1437: FILE: drivers/pci/msi.c:962:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1455: FILE: drivers/pci/msi.c:975:
+ * indicates the successful configuration of MSI-X capability structure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1456: FILE: drivers/pci/msi.c:976:
+ * with new allocated MSI-X vectors. A return of < 0 indicates a failure. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1458: FILE: drivers/pci/msi.c:978:
+ * of vectors available. Driver should use the returned value to re-send $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1462: FILE: drivers/pci/msi.c:981:
+int pci_enable_msix(struct pci_dev* dev, struct msix_entry *entries, int nvec)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1477: FILE: drivers/pci/msi.c:990:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1478: FILE: drivers/pci/msi.c:991:
+	if ((status = msi_init()) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1480: FILE: drivers/pci/msi.c:993:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1494: FILE: drivers/pci/msi.c:996:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1498: FILE: drivers/pci/msi.c:1000:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1502: FILE: drivers/pci/msi.c:1004:
+^I$

WARNING:TYPO_SPELLING: 'Sucess' may be misspelled - perhaps 'Success'?
#1514: FILE: drivers/pci/msi.c:1016:
+		/* Lookup Sucess */
 		          ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1515: FILE: drivers/pci/msi.c:1017:
+^I^Inr_entries = nvec;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1527: FILE: drivers/pci/msi.c:1029:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1527: FILE: drivers/pci/msi.c:1029:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1527: FILE: drivers/pci/msi.c:1029:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1528: FILE: drivers/pci/msi.c:1030:
+   	if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 &&
+		!msi_lookup_vector(dev, PCI_CAP_ID_MSI)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1529: FILE: drivers/pci/msi.c:1031:
+		printk(KERN_INFO "Can't enable MSI-X. Device already had MSI vector assigned\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1531: FILE: drivers/pci/msi.c:1033:
+^I^Ireturn -EINVAL;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1533: FILE: drivers/pci/msi.c:1035:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1549: FILE: drivers/pci/msi.c:1057:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1576: FILE: drivers/pci/msi.c:1062:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1592: FILE: drivers/pci/msi.c:1066:
+void pci_disable_msix(struct pci_dev* dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1599: FILE: drivers/pci/msi.c:1070:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1600: FILE: drivers/pci/msi.c:1071:
+   ^Iif (!dev || !(pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1600: FILE: drivers/pci/msi.c:1071:
+   ^Iif (!dev || !(pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1600: FILE: drivers/pci/msi.c:1071:
+   ^Iif (!dev || !(pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1600: FILE: drivers/pci/msi.c:1071:
+   	if (!dev || !(pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1606: FILE: drivers/pci/msi.c:1075:
+^Iif (!(control & PCI_MSIX_FLAGS_ENABLE)) $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1618: FILE: drivers/pci/msi.c:1082:
+		vector = head = dev->irq;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1622: FILE: drivers/pci/msi.c:1086:
+^I^I^Iif (state) $

CHECK:BRACES: braces {} should be used on all arms of this statement
#1622: FILE: drivers/pci/msi.c:1086:
+			if (state) 
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1624: FILE: drivers/pci/msi.c:1088:
+			else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1639: FILE: drivers/pci/msi.c:1100:
+^I^I^Iprintk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on all vectors\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1639: FILE: drivers/pci/msi.c:1100:
+			printk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on all vectors\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1640: FILE: drivers/pci/msi.c:1101:
+^I^I^Idev->bus->number, PCI_SLOT(dev->devfn),^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1640: FILE: drivers/pci/msi.c:1101:
+			printk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on all vectors\n", 
+			dev->bus->number, PCI_SLOT(dev->devfn),	

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1642: FILE: drivers/pci/msi.c:1103:
+			BUG_ON(warning > 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1645: FILE: drivers/pci/msi.c:1106:
+^I^I^Idisable_msi_mode(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1646: FILE: drivers/pci/msi.c:1107:
+			disable_msi_mode(dev, 
+				pci_find_capability(dev, PCI_CAP_ID_MSIX),

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1653: FILE: drivers/pci/msi.c:1110:
 
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1669: FILE: drivers/pci/msi.c:1127:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1684: FILE: drivers/pci/msi.c:1130:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1686: FILE: drivers/pci/msi.c:1132:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1686: FILE: drivers/pci/msi.c:1132:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1686: FILE: drivers/pci/msi.c:1132:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1686: FILE: drivers/pci/msi.c:1132:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1687: FILE: drivers/pci/msi.c:1133:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&
+		!msi_lookup_vector(dev, PCI_CAP_ID_MSI)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1712: FILE: drivers/pci/msi.c:1137:
+^I^Iif (state) { ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1712: FILE: drivers/pci/msi.c:1137:
+^I^Iif (state) { ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1713: FILE: drivers/pci/msi.c:1138:
+^I^I^Iprintk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on vector->%d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1713: FILE: drivers/pci/msi.c:1138:
+			printk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on vector->%d\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1714: FILE: drivers/pci/msi.c:1139:
+^I^I^Idev->bus->number, PCI_SLOT(dev->devfn),^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1714: FILE: drivers/pci/msi.c:1139:
+			printk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on vector->%d\n", 
+			dev->bus->number, PCI_SLOT(dev->devfn),	

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1716: FILE: drivers/pci/msi.c:1141:
+			BUG_ON(state > 0);

CHECK:BRACES: Unbalanced braces around else statement
#1717: FILE: drivers/pci/msi.c:1142:
+		} else /* Release MSI vector assigned to this device */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1721: FILE: drivers/pci/msi.c:1146:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1721: FILE: drivers/pci/msi.c:1146:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1721: FILE: drivers/pci/msi.c:1146:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1721: FILE: drivers/pci/msi.c:1146:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1722: FILE: drivers/pci/msi.c:1147:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&
+		!msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1725: FILE: drivers/pci/msi.c:1150:
+^I^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1726: FILE: drivers/pci/msi.c:1151:
+		vector = head = dev->irq;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1738: FILE: drivers/pci/msi.c:1158:
+^I^I^Iif (state)  ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1738: FILE: drivers/pci/msi.c:1158:
+^I^I^Iif (state)  ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1751: FILE: drivers/pci/msi.c:1171:
+^I^I^Ipci_read_config_word(dev, msi_control_reg(pos), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1752: FILE: drivers/pci/msi.c:1172:
+			pci_read_config_word(dev, msi_control_reg(pos), 
+				&control);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1754: FILE: drivers/pci/msi.c:1174:
+			pci_read_config_dword(dev, msix_table_offset_reg(pos),
+				&table_offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1756: FILE: drivers/pci/msi.c:1176:
+			phys_addr = pci_resource_start (dev, bir);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1757: FILE: drivers/pci/msi.c:1177:
+^I^I^Iphys_addr += (u32)(table_offset & $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1759: FILE: drivers/pci/msi.c:1179:
+			iounmap((void*)base);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1762: FILE: drivers/pci/msi.c:1182:
+^I^I^Iprintk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on all vectors\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1762: FILE: drivers/pci/msi.c:1182:
+			printk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on all vectors\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1763: FILE: drivers/pci/msi.c:1183:
+^I^I^I^Idev->bus->number, PCI_SLOT(dev->devfn),^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1763: FILE: drivers/pci/msi.c:1183:
+			printk(KERN_DEBUG "Driver[%d:%d:%d] unloaded wo doing free_irq on all vectors\n", 
+				dev->bus->number, PCI_SLOT(dev->devfn),	

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1765: FILE: drivers/pci/msi.c:1185:
+			BUG_ON(warning > 0);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1780: FILE: drivers/pci/msi.c:1193:
+EXPORT_SYMBOL(pci_enable_msix);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1781: FILE: drivers/pci/msi.c:1194:
+EXPORT_SYMBOL(pci_disable_msix);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1790: FILE: drivers/pci/msi.h:143:
+^I^I__u8^Istate^I: 1; ^I/* {0: free, 1: busy}^I^I  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1791: FILE: drivers/pci/msi.h:144:
+^I^I__u8^Ireserved: 1; ^I/* reserved^I^I^I  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1803: FILE: include/linux/pci.h:790:
+^Iu16 ^Ivector;^I/* kernel uses to write allocated vector */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1811: FILE: include/linux/pci.h:798:
+static inline int pci_enable_msix(struct pci_dev* dev, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1811: FILE: include/linux/pci.h:798:
+static inline int pci_enable_msix(struct pci_dev* dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1812: FILE: include/linux/pci.h:799:
+static inline int pci_enable_msix(struct pci_dev* dev, 
+	struct msix_entry *entries, int nvec) {return -1;}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1812: FILE: include/linux/pci.h:799:
+	struct msix_entry *entries, int nvec) {return -1;}
 	                                                ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1818: FILE: include/linux/pci.h:805:
+extern void pci_disable_msi(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1819: FILE: include/linux/pci.h:806:
+extern int pci_enable_msix(struct pci_dev* dev, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1819: FILE: include/linux/pci.h:806:
+extern int pci_enable_msix(struct pci_dev* dev, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1819: FILE: include/linux/pci.h:806:
+extern int pci_enable_msix(struct pci_dev* dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1820: FILE: include/linux/pci.h:807:
+extern int pci_enable_msix(struct pci_dev* dev, 
+	struct msix_entry *entries, int nvec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1821: FILE: include/linux/pci.h:808:
+extern void pci_disable_msix(struct pci_dev *dev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271971.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 229 errors, 69 warnings, 42 checks, 1750 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271971.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
