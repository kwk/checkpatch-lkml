ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#50: FILE: scripts/kconfig/gconf.c:181:
+void replace_button_icon(GladeXML * xml, GdkDrawable * window,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#50: FILE: scripts/kconfig/gconf.c:181:
+void replace_button_icon(GladeXML * xml, GdkDrawable * window,

CHECK:CAMELCASE: Avoid CamelCase: <GladeXML>
#50: FILE: scripts/kconfig/gconf.c:181:
+void replace_button_icon(GladeXML * xml, GdkDrawable * window,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <GdkDrawable>
#50: FILE: scripts/kconfig/gconf.c:181:
+void replace_button_icon(GladeXML * xml, GdkDrawable * window,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#51: FILE: scripts/kconfig/gconf.c:182:
+			 GtkStyle * style, gchar * btn_name, gchar ** xpm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#51: FILE: scripts/kconfig/gconf.c:182:
+			 GtkStyle * style, gchar * btn_name, gchar ** xpm)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#51: FILE: scripts/kconfig/gconf.c:182:
+			 GtkStyle * style, gchar * btn_name, gchar ** xpm)

CHECK:CAMELCASE: Avoid CamelCase: <GtkStyle>
#51: FILE: scripts/kconfig/gconf.c:182:
+			 GtkStyle * style, gchar * btn_name, gchar ** xpm)

CHECK:CAMELCASE: Avoid CamelCase: <GdkPixmap>
#53: FILE: scripts/kconfig/gconf.c:184:
+	GdkPixmap *pixmap;

CHECK:CAMELCASE: Avoid CamelCase: <GdkBitmap>
#54: FILE: scripts/kconfig/gconf.c:185:
+	GdkBitmap *mask;

CHECK:CAMELCASE: Avoid CamelCase: <GtkToolButton>
#55: FILE: scripts/kconfig/gconf.c:186:
+	GtkToolButton *button;

CHECK:CAMELCASE: Avoid CamelCase: <GtkWidget>
#56: FILE: scripts/kconfig/gconf.c:187:
+	GtkWidget *image;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#113: FILE: scripts/kconfig/gconf.c:238:
+#if 0	/* Use stock Gtk icons instead */

CHECK:SPACING: No space is necessary after a cast
#115: FILE: scripts/kconfig/gconf.c:240:
+			    "button1", (gchar **) xpm_back);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#117: FILE: scripts/kconfig/gconf.c:242:
+			    "button2", (gchar **) xpm_load);

CHECK:SPACING: No space is necessary after a cast
#119: FILE: scripts/kconfig/gconf.c:244:
+			    "button3", (gchar **) xpm_save);

CHECK:SPACING: No space is necessary after a cast
#122: FILE: scripts/kconfig/gconf.c:247:
+			    "button4", (gchar **) xpm_single_view);

CHECK:SPACING: No space is necessary after a cast
#124: FILE: scripts/kconfig/gconf.c:249:
+			    "button5", (gchar **) xpm_split_view);

CHECK:SPACING: No space is necessary after a cast
#126: FILE: scripts/kconfig/gconf.c:251:
+			    "button6", (gchar **) xpm_tree_view);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#128: FILE: scripts/kconfig/gconf.c:253:
+#if 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: scripts/kconfig/gconf.c:809:
+void on_back_clicked(GtkButton * button, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GtkButton>
#178: FILE: scripts/kconfig/gconf.c:809:
+void on_back_clicked(GtkButton * button, gpointer user_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: scripts/kconfig/gconf.c:824:
+void on_load_clicked(GtkButton * button, gpointer user_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#194: FILE: scripts/kconfig/gconf.c:830:
+void on_save_clicked(GtkButton * button, gpointer user_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: scripts/kconfig/gconf.c:874:
+void on_collapse_clicked(GtkButton * button, gpointer user_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: scripts/kconfig/gconf.c:880:
+void on_expand_clicked(GtkButton * button, gpointer user_data)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'view_mode == SPLIT_VIEW'
#268: FILE: scripts/kconfig/gconf.c:1492:
+		if ((view_mode == SPLIT_VIEW)
+		    && !(child->flags & MENU_ROOT) && (tree == tree1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tree == tree1'
#268: FILE: scripts/kconfig/gconf.c:1492:
+		if ((view_mode == SPLIT_VIEW)
+		    && !(child->flags & MENU_ROOT) && (tree == tree1))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#269: FILE: scripts/kconfig/gconf.c:1493:
+		if ((view_mode == SPLIT_VIEW)
+		    && !(child->flags & MENU_ROOT) && (tree == tree1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'view_mode == SPLIT_VIEW'
#274: FILE: scripts/kconfig/gconf.c:1496:
+		if ((view_mode == SPLIT_VIEW) && (child->flags & MENU_ROOT)
+		    && (tree == tree2))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tree == tree2'
#274: FILE: scripts/kconfig/gconf.c:1496:
+		if ((view_mode == SPLIT_VIEW) && (child->flags & MENU_ROOT)
+		    && (tree == tree2))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#275: FILE: scripts/kconfig/gconf.c:1497:
+		if ((view_mode == SPLIT_VIEW) && (child->flags & MENU_ROOT)
+		    && (tree == tree2))

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: scripts/kconfig/gconf.c:1519:
+                if (((menu != &rootmenu) && !(menu->flags & MENU_ROOT))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#286: FILE: scripts/kconfig/gconf.c:1520:
+                if (((menu != &rootmenu) && !(menu->flags & MENU_ROOT))
+		    || (view_mode == FULL_VIEW)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#290: FILE: scripts/kconfig/gconf.c:1523:
 		if (((view_mode == SINGLE_VIEW) && (menu->flags & MENU_ROOT))
+		    || (view_mode == FULL_VIEW)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#291: FILE: scripts/kconfig/gconf.c:1524:
+		    || (view_mode == FULL_VIEW)
+		    || (view_mode == SPLIT_VIEW)) {

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#314: FILE: scripts/kconfig/gconf.c:1559:
+	static int menu_cnt = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164620.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 2 warnings, 23 checks, 601 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164620.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
