WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
2. Kernprof PC sample profile count in loopback_xmit (This is the lo routine

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: include/linux/pcpu_alloc.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'maintanance' may be misspelled - perhaps 'maintenance'?
#88: FILE: include/linux/pcpu_alloc.h:4:
+ * Inspired by the freelist maintanance of the slab allocator implementation
                             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: include/linux/pcpu_alloc.h:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: include/linux/pcpu_alloc.h:21:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#109: FILE: include/linux/pcpu_alloc.h:25:
+ * include/linux/pcpu_alloc.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: include/linux/pcpu_alloc.h:30:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: include/linux/pcpu_alloc.h:30:
+ $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#125: FILE: include/linux/pcpu_alloc.h:41:
+typedef struct pcpu_ctr_s {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: include/linux/pcpu_alloc.h:43:
+^Ivoid *blkp;^I^I/* Pointer to block from which ctr was $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#128: FILE: include/linux/pcpu_alloc.h:44:
+	void *blkp;		/* Pointer to block from which ctr was 
+				   allocated from (for use with free code) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: include/linux/pcpu_alloc.h:44:
+				   allocated from (for use with free code) */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: include/linux/pcpu_alloc.h:47:
+extern pcpu_ctr_t *pcpu_ctr_alloc(int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#131: FILE: include/linux/pcpu_alloc.h:47:
+extern pcpu_ctr_t *pcpu_ctr_alloc(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: include/linux/pcpu_alloc.h:48:
+extern void pcpu_ctr_free(pcpu_ctr_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pcpu_ctr_t *' should also have an identifier name
#132: FILE: include/linux/pcpu_alloc.h:48:
+extern void pcpu_ctr_free(pcpu_ctr_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: include/linux/pcpu_alloc.h:49:
+extern void __init pcpu_ctr_sys_init(void);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ctr' may be better as '(ctr)' to avoid precedence issues
#135: FILE: include/linux/pcpu_alloc.h:51:
+#define PCPU_CTR(ctr, cpuid) ((unsigned long *)ctr->arr[cpuid])

WARNING:NEW_TYPEDEFS: do not add new typedefs
#141: FILE: include/linux/pcpu_alloc.h:57:
+typedef unsigned long pcpu_ctr_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: include/linux/pcpu_alloc.h:59:
+static inline pcpu_ctr_t *pcpu_ctr_alloc(int flags) $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#145: FILE: include/linux/pcpu_alloc.h:61:
+	return(kmalloc(sizeof(pcpu_ctr_t), flags));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: include/linux/pcpu_alloc.h:69:
+#define pcpu_ctr_sys_init() do { } while (0)    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: include/linux/pcpu_alloc.h:72:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/linux/pcpu_alloc.h:72:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: include/linux/pcpu_alloc.h:74:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: include/linux/pcpu_alloc.h:74:
+ $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#164: FILE: include/linux/statctr.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: include/linux/statctr.h:5:
+ *  Scalable Statistic Counters $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#183: FILE: include/linux/statctr.h:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#184: FILE: include/linux/statctr.h:21:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#188: FILE: include/linux/statctr.h:25:
+ * include/linux/statctr.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: include/linux/statctr.h:31:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: include/linux/statctr.h:31:
+ $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#203: FILE: include/linux/statctr.h:40:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#208: FILE: include/linux/statctr.h:45:
+typedef unsigned long statctr_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: include/linux/statctr.h:48:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: include/linux/statctr.h:50:
+#ifdef^ICONFIG_SMP $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: include/linux/statctr.h:51:
+extern int statctr_init(statctr_t *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#215: FILE: include/linux/statctr.h:52:
+extern void statctr_cleanup(statctr_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'statctr_t *' should also have an identifier name
#215: FILE: include/linux/statctr.h:52:
+extern void statctr_cleanup(statctr_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: include/linux/statctr.h:53:
+extern int statctr_ninit(statctr_t *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'statctr_t *' should also have an identifier name
#216: FILE: include/linux/statctr.h:53:
+extern int statctr_ninit(statctr_t *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#216: FILE: include/linux/statctr.h:53:
+extern int statctr_ninit(statctr_t *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#216: FILE: include/linux/statctr.h:53:
+extern int statctr_ninit(statctr_t *, unsigned long, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: include/linux/statctr.h:54:
+extern void statctr_ncleanup(statctr_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'statctr_t *' should also have an identifier name
#217: FILE: include/linux/statctr.h:54:
+extern void statctr_ncleanup(statctr_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#217: FILE: include/linux/statctr.h:54:
+extern void statctr_ncleanup(statctr_t *, int);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#219: FILE: include/linux/statctr.h:56:
+#define statctr_init(stctr, val)	({*(stctr) = (val); 0;})
                                 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: include/linux/statctr.h:59:
+static inline int $

WARNING:LINE_SPACING: Missing a blank line after declarations
#226: FILE: include/linux/statctr.h:63:
+	int i;
+	for(i=0; i < no; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#226: FILE: include/linux/statctr.h:63:
+	for(i=0; i < no; i++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#226: FILE: include/linux/statctr.h:63:
+	for(i=0; i < no; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: include/linux/statctr.h:76:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: include/linux/statctr.h:78:
+ * @stctr: Statistics counter $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: include/linux/statctr.h:80:
+ * Increments the counter by one.  Internally only the per-cpu counter is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: include/linux/statctr.h:96:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: include/linux/statctr.h:96:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: include/linux/statctr.h:107:
+ * Sets the statistics counter. If statctr_read() is invoked after a counter $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: include/linux/statctr.h:110:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: include/linux/statctr.h:110:
+ $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#278: FILE: include/linux/statctr.h:115:
+	for (i=1; i < smp_num_cpus; i++) {
 	      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#278: FILE: include/linux/statctr.h:115:
+	for (i=1; i < smp_num_cpus; i++) {
+		*PCPU_CTR(stctr->ctr, i) = 0;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: include/linux/statctr.h:127:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: include/linux/statctr.h:127:
+ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: include/linux/statctr.h:132:
+	unsigned long res = 0;
+	for( i=0; i < smp_num_cpus; i++ )

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#295: FILE: include/linux/statctr.h:132:
+	for( i=0; i < smp_num_cpus; i++ )
 	      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#295: FILE: include/linux/statctr.h:132:
+	for( i=0; i < smp_num_cpus; i++ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#295: FILE: include/linux/statctr.h:132:
+	for( i=0; i < smp_num_cpus; i++ )

ERROR:SPACING: space required before the open parenthesis '('
#295: FILE: include/linux/statctr.h:132:
+	for( i=0; i < smp_num_cpus; i++ )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: include/linux/statctr.h:143:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: include/linux/statctr.h:143:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: include/linux/statctr.h:146:
+        *PCPU_CTR(stctr->ctr, smp_processor_id()) += val;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: include/linux/statctr.h:146:
+        *PCPU_CTR(stctr->ctr, smp_processor_id()) += val;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: include/linux/statctr.h:155:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: include/linux/statctr.h:155:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: include/linux/statctr.h:158:
+        *PCPU_CTR(stctr->ctr, smp_processor_id()) -= val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: include/linux/statctr.h:158:
+        *PCPU_CTR(stctr->ctr, smp_processor_id()) -= val;$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'stctr' may be better as '(stctr)' to avoid precedence issues
#326: FILE: include/linux/statctr.h:163:
+#define statctr_read(stctr) (*stctr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#327: FILE: include/linux/statctr.h:164:
+#define statctr_set(stctr,val) (*(stctr) = (val))
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: include/linux/statctr.h:165:
+#define statctr_add(stctr,val) ((*(stctr))+=(val))
                          ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#328: FILE: include/linux/statctr.h:165:
+#define statctr_add(stctr,val) ((*(stctr))+=(val))
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#329: FILE: include/linux/statctr.h:166:
+#define statctr_sub(stctr,val) ((*(stctr))-=(val))
                          ^

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#329: FILE: include/linux/statctr.h:166:
+#define statctr_sub(stctr,val) ((*(stctr))-=(val))
                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: include/linux/statctr.h:170:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: include/linux/statctr.h:170:
+ $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#378: FILE: kernel/statctr.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: kernel/statctr.c:6:
+ *  $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#397: FILE: kernel/statctr.c:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#398: FILE: kernel/statctr.c:21:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#402: FILE: kernel/statctr.c:25:
+ * kernel/statctr.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: kernel/statctr.c:45:
+^Iif(!stctr->ctr) $

ERROR:SPACING: space required before the open parenthesis '('
#422: FILE: kernel/statctr.c:45:
+	if(!stctr->ctr) 

WARNING:TYPO_SPELLING: 'contiguos' may be misspelled - perhaps 'contiguous'?
#438: FILE: kernel/statctr.c:61:
+ * statctr_ninit - Inits a bunch of contiguos statctrs
                                     ^^^^^^^^^

WARNING:TYPO_SPELLING: 'contigious' may be misspelled - perhaps 'contiguous'?
#443: FILE: kernel/statctr.c:66:
+ * Inits a bunch of contigious statctrs.  Useful when statctrs
                     ^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: kernel/statctr.c:72:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: kernel/statctr.c:72:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: kernel/statctr.c:73:
+        for(i=0; i < no; i++) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: kernel/statctr.c:73:
+        int i;
+        for(i=0; i < no; i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: kernel/statctr.c:73:
+        for(i=0; i < no; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#450: FILE: kernel/statctr.c:73:
+        for(i=0; i < no; i++) {
              ^

ERROR:SPACING: space required before the open parenthesis '('
#450: FILE: kernel/statctr.c:73:
+        for(i=0; i < no; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: kernel/statctr.c:74:
+                if(statctr_init(&stctr[i], val))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: kernel/statctr.c:74:
+                if(statctr_init(&stctr[i], val))$

ERROR:SPACING: space required before the open parenthesis '('
#451: FILE: kernel/statctr.c:74:
+                if(statctr_init(&stctr[i], val))

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: kernel/statctr.c:75:
+                        goto cleanup;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: kernel/statctr.c:75:
+                        goto cleanup;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: kernel/statctr.c:76:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: kernel/statctr.c:76:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: kernel/statctr.c:77:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: kernel/statctr.c:77:
+        return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: kernel/statctr.c:78:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: kernel/statctr.c:78:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: kernel/statctr.c:81:
+        for(; i >= 0; i--) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: kernel/statctr.c:81:
+        for(; i >= 0; i--) {$

ERROR:SPACING: space required before the open parenthesis '('
#458: FILE: kernel/statctr.c:81:
+        for(; i >= 0; i--) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#458: FILE: kernel/statctr.c:81:
+        for(; i >= 0; i--) {
+                statctr_cleanup(&stctr[i]);
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: kernel/statctr.c:82:
+                statctr_cleanup(&stctr[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: kernel/statctr.c:82:
+                statctr_cleanup(&stctr[i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: kernel/statctr.c:83:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: kernel/statctr.c:83:
+        }$

WARNING:TYPO_SPELLING: 'contiguos' may be misspelled - perhaps 'contiguous'?
#465: FILE: kernel/statctr.c:88:
+ * statctr_ncleanup - cleans up a bunch of contiguos statctrs
                                            ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: kernel/statctr.c:95:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: kernel/statctr.c:95:
+        int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: kernel/statctr.c:96:
+        for(i=0; i < no; i++) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: kernel/statctr.c:96:
+        for(i=0; i < no; i++) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#473: FILE: kernel/statctr.c:96:
+        int i;
+        for(i=0; i < no; i++) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: kernel/statctr.c:96:
+        for(i=0; i < no; i++) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#473: FILE: kernel/statctr.c:96:
+        for(i=0; i < no; i++) 
              ^

ERROR:SPACING: space required before the open parenthesis '('
#473: FILE: kernel/statctr.c:96:
+        for(i=0; i < no; i++) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: kernel/statctr.c:97:
+                statctr_cleanup(&stctr[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: kernel/statctr.c:97:
+                statctr_cleanup(&stctr[i]);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#477: FILE: kernel/statctr.c:100:
+EXPORT_SYMBOL(statctr_init);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#478: FILE: kernel/statctr.c:101:
+EXPORT_SYMBOL(statctr_cleanup);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#479: FILE: kernel/statctr.c:102:
+EXPORT_SYMBOL(statctr_ninit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#480: FILE: kernel/statctr.c:103:
+EXPORT_SYMBOL(statctr_ncleanup);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: mm/Makefile:19:
+obj-$(CONFIG_SMP) += pcpu_alloc.o $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#503: FILE: mm/pcpu_alloc.c:1:
+/*

WARNING:TYPO_SPELLING: 'maintanance' may be misspelled - perhaps 'maintenance'?
#506: FILE: mm/pcpu_alloc.c:4:
+ * Inspired by the freelist maintanance of the slab allocator implementation
                             ^^^^^^^^^^^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#522: FILE: mm/pcpu_alloc.c:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#523: FILE: mm/pcpu_alloc.c:21:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#527: FILE: mm/pcpu_alloc.c:25:
+ * mm/pcpu_alloc.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: mm/pcpu_alloc.c:29:
+#include <linux/pcpu_alloc.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: mm/pcpu_alloc.c:48:
+        void             ^I*lineaddr[NR_CPUS]; /* Array of pointers to $

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: mm/pcpu_alloc.c:48:
+        void             ^I*lineaddr[NR_CPUS]; /* Array of pointers to $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#550: FILE: mm/pcpu_alloc.c:48:
+        void             ^I*lineaddr[NR_CPUS]; /* Array of pointers to $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: mm/pcpu_alloc.c:48:
+        void             ^I*lineaddr[NR_CPUS]; /* Array of pointers to $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#551: FILE: mm/pcpu_alloc.c:49:
+        void             	*lineaddr[NR_CPUS]; /* Array of pointers to 
+						       per cpu cachelines */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#551: FILE: mm/pcpu_alloc.c:49:
+						       per cpu cachelines */

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: mm/pcpu_alloc.c:50:
+        struct list_head        linkage;   /* Linkage for pcpu_ctr_blk s */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: mm/pcpu_alloc.c:50:
+        struct list_head        linkage;   /* Linkage for pcpu_ctr_blk s */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: mm/pcpu_alloc.c:51:
+        unsigned int            usecount;  /* To decide when to free this $

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: mm/pcpu_alloc.c:51:
+        unsigned int            usecount;  /* To decide when to free this $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: mm/pcpu_alloc.c:51:
+        unsigned int            usecount;  /* To decide when to free this $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#554: FILE: mm/pcpu_alloc.c:52:
+        unsigned int            usecount;  /* To decide when to free this 
+					      block */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#554: FILE: mm/pcpu_alloc.c:52:
+					      block */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: mm/pcpu_alloc.c:53:
+^I$

WARNING:TYPO_SPELLING: 'maintanance' may be misspelled - perhaps 'maintenance'?
#556: FILE: mm/pcpu_alloc.c:54:
+	/* Free list maintanance for objs on blk */
 	             ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: mm/pcpu_alloc.c:55:
+^Iint^I^I^Ifreearr[PCPU_CTR_OBJS_IN_BLK];  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#559: FILE: mm/pcpu_alloc.c:57:
+					  /* Array linked list as a per
+					      block freelist.. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#559: FILE: mm/pcpu_alloc.c:57:
+					      block freelist.. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: mm/pcpu_alloc.c:65:
+        struct list_head        blks;          /* Head ptr of the list of all $

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: mm/pcpu_alloc.c:65:
+        struct list_head        blks;          /* Head ptr of the list of all $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: mm/pcpu_alloc.c:65:
+        struct list_head        blks;          /* Head ptr of the list of all $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: mm/pcpu_alloc.c:66:
+^I                           ^I^I  blocks in the pcpu_ctr $

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: mm/pcpu_alloc.c:66:
+^I                           ^I^I  blocks in the pcpu_ctr $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#568: FILE: mm/pcpu_alloc.c:66:
+^I                           ^I^I  blocks in the pcpu_ctr $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#568: FILE: mm/pcpu_alloc.c:66:
+        struct list_head        blks;          /* Head ptr of the list of all 
+	                           		  blocks in the pcpu_ctr 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: mm/pcpu_alloc.c:68:
+^I^I^I^I^I^I  Full, partial first then $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#571: FILE: mm/pcpu_alloc.c:69:
+						  free..*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: mm/pcpu_alloc.c:70:
+        struct list_head        *firstnotfull;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: mm/pcpu_alloc.c:70:
+        struct list_head        *firstnotfull;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#573: FILE: mm/pcpu_alloc.c:71:
+        spinlock_t              lock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: mm/pcpu_alloc.c:71:
+        spinlock_t              lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#573: FILE: mm/pcpu_alloc.c:71:
+        spinlock_t              lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: mm/pcpu_alloc.c:72:
+^Ikmem_cache_t^I^I*cachep;       /* Cache to alloc per cpu $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: mm/pcpu_alloc.c:73:
+^I^I^I^I^I^I  cachelines from */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#575: FILE: mm/pcpu_alloc.c:73:
+	kmem_cache_t		*cachep;       /* Cache to alloc per cpu 
+						  cachelines from */ 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#575: FILE: mm/pcpu_alloc.c:73:
+						  cachelines from */ 

WARNING:INDENTED_LABEL: labels should not be indented
#579: FILE: mm/pcpu_alloc.c:77:
+	blks:			LIST_HEAD_INIT(pcpu_ctr_ctl.blks),

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#580: FILE: mm/pcpu_alloc.c:78:
+	firstnotfull:		&pcpu_ctr_ctl.blks,
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#580: FILE: mm/pcpu_alloc.c:78:
+	firstnotfull:		&pcpu_ctr_ctl.blks,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#581: FILE: mm/pcpu_alloc.c:79:
+	lock:			SPIN_LOCK_UNLOCKED,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#581: FILE: mm/pcpu_alloc.c:79:
+	lock:			SPIN_LOCK_UNLOCKED,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: mm/pcpu_alloc.c:86:
+static struct pcpu_ctr_blk $

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: mm/pcpu_alloc.c:89:
+        struct pcpu_ctr_blk *blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: mm/pcpu_alloc.c:89:
+        struct pcpu_ctr_blk *blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: mm/pcpu_alloc.c:90:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: mm/pcpu_alloc.c:90:
+        int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: mm/pcpu_alloc.c:91:
+        if (!(blkp = (struct pcpu_ctr_blk *) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: mm/pcpu_alloc.c:91:
+        if (!(blkp = (struct pcpu_ctr_blk *) $

CHECK:SPACING: No space is necessary after a cast
#593: FILE: mm/pcpu_alloc.c:91:
+        if (!(blkp = (struct pcpu_ctr_blk *) 

WARNING:LINE_SPACING: Missing a blank line after declarations
#593: FILE: mm/pcpu_alloc.c:91:
+        int i;
+        if (!(blkp = (struct pcpu_ctr_blk *) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: mm/pcpu_alloc.c:91:
+        if (!(blkp = (struct pcpu_ctr_blk *) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#593: FILE: mm/pcpu_alloc.c:91:
+        if (!(blkp = (struct pcpu_ctr_blk *) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: mm/pcpu_alloc.c:93:
+                return blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: mm/pcpu_alloc.c:93:
+                return blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: mm/pcpu_alloc.c:94:
+        blkp->usecount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: mm/pcpu_alloc.c:94:
+        blkp->usecount = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: mm/pcpu_alloc.c:95:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: mm/pcpu_alloc.c:95:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: mm/pcpu_alloc.c:96:
+        blkp->freehead = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: mm/pcpu_alloc.c:96:
+        blkp->freehead = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#599: FILE: mm/pcpu_alloc.c:97:
+        for (i=0; i < PCPU_CTR_OBJS_IN_BLK; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: mm/pcpu_alloc.c:97:
+        for (i=0; i < PCPU_CTR_OBJS_IN_BLK; i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#599: FILE: mm/pcpu_alloc.c:97:
+        for (i=0; i < PCPU_CTR_OBJS_IN_BLK; i++)
               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: mm/pcpu_alloc.c:98:
+                blkp->freearr[i] = i+1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: mm/pcpu_alloc.c:98:
+                blkp->freearr[i] = i+1;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#600: FILE: mm/pcpu_alloc.c:98:
+                blkp->freearr[i] = i+1;
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: mm/pcpu_alloc.c:99:
+        blkp->freearr[i-1] = -1;^I/* Marks the end of the array */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: mm/pcpu_alloc.c:99:
+        blkp->freearr[i-1] = -1;^I/* Marks the end of the array */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#601: FILE: mm/pcpu_alloc.c:99:
+        blkp->freearr[i-1] = -1;	/* Marks the end of the array */
                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: mm/pcpu_alloc.c:100:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: mm/pcpu_alloc.c:100:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: mm/pcpu_alloc.c:101:
+        return blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: mm/pcpu_alloc.c:101:
+        return blkp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: mm/pcpu_alloc.c:112:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: mm/pcpu_alloc.c:113:
+ * Add a "block" to the pcpu_ctr object memory pool.  Returns 0 on failure and $

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: mm/pcpu_alloc.c:118:
+        void *addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: mm/pcpu_alloc.c:118:
+        void *addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: mm/pcpu_alloc.c:119:
+        struct pcpu_ctr_blk *blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: mm/pcpu_alloc.c:119:
+        struct pcpu_ctr_blk *blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: mm/pcpu_alloc.c:120:
+        unsigned int save_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: mm/pcpu_alloc.c:120:
+        unsigned int save_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: mm/pcpu_alloc.c:121:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: mm/pcpu_alloc.c:121:
+        int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: mm/pcpu_alloc.c:122:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: mm/pcpu_alloc.c:122:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: mm/pcpu_alloc.c:123:
+        if (!(blkp = pcpu_ctr_blkctl_alloc(ctl, flags)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: mm/pcpu_alloc.c:123:
+        if (!(blkp = pcpu_ctr_blkctl_alloc(ctl, flags)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#625: FILE: mm/pcpu_alloc.c:123:
+        if (!(blkp = pcpu_ctr_blkctl_alloc(ctl, flags)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: mm/pcpu_alloc.c:124:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: mm/pcpu_alloc.c:124:
+                return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: mm/pcpu_alloc.c:125:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: mm/pcpu_alloc.c:125:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: mm/pcpu_alloc.c:126:
+        /* Get per cpu cache lines for the block */$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#629: FILE: mm/pcpu_alloc.c:127:
+	for (i=0; i < smp_num_cpus; i++) {
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: mm/pcpu_alloc.c:129:
+^I^Iif(!(blkp->lineaddr[i])) $

ERROR:SPACING: space required before the open parenthesis '('
#631: FILE: mm/pcpu_alloc.c:129:
+		if(!(blkp->lineaddr[i])) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: mm/pcpu_alloc.c:132:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: mm/pcpu_alloc.c:132:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: mm/pcpu_alloc.c:133:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: mm/pcpu_alloc.c:133:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: mm/pcpu_alloc.c:134:
+        /* Now that we have the block successfully allocated and instantiated..$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: mm/pcpu_alloc.c:135:
+           add it.....*/$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#637: FILE: mm/pcpu_alloc.c:135:
+        /* Now that we have the block successfully allocated and instantiated..
+           add it.....*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#637: FILE: mm/pcpu_alloc.c:135:
+           add it.....*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: mm/pcpu_alloc.c:136:
+        spin_lock_irqsave(&ctl->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: mm/pcpu_alloc.c:136:
+        spin_lock_irqsave(&ctl->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: mm/pcpu_alloc.c:137:
+        list_add_tail(&blkp->linkage, &ctl->blks);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: mm/pcpu_alloc.c:137:
+        list_add_tail(&blkp->linkage, &ctl->blks);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: mm/pcpu_alloc.c:138:
+        if (ctl->firstnotfull == &ctl->blks)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: mm/pcpu_alloc.c:138:
+        if (ctl->firstnotfull == &ctl->blks)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: mm/pcpu_alloc.c:139:
+                ctl->firstnotfull = &blkp->linkage;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: mm/pcpu_alloc.c:139:
+                ctl->firstnotfull = &blkp->linkage;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: mm/pcpu_alloc.c:140:
+        spin_unlock_irqrestore(&ctl->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: mm/pcpu_alloc.c:140:
+        spin_unlock_irqrestore(&ctl->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: mm/pcpu_alloc.c:141:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: mm/pcpu_alloc.c:141:
+        return 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#644: FILE: mm/pcpu_alloc.c:142:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: mm/pcpu_alloc.c:142:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: mm/pcpu_alloc.c:146:
+^Ifor (i; i >= 0; i--) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: mm/pcpu_alloc.c:148:
+^Ipcpu_ctr_blkctl_free(blkp);^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: mm/pcpu_alloc.c:149:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: mm/pcpu_alloc.c:149:
+        return 0;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#657: FILE: mm/pcpu_alloc.c:155:
+static void pcpu_ctr_init(struct pcpu_ctr_ctl * ctl)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: mm/pcpu_alloc.c:158:
+^I * Create cache to serve out cache line sized, cache line $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: mm/pcpu_alloc.c:160:
+^I */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: mm/pcpu_alloc.c:162:
+^I^I^IPCPU_CTR_LINE_SIZE, 0, SLAB_HWCACHE_ALIGN, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: mm/pcpu_alloc.c:162:
+	ctl->cachep = kmem_cache_create(PCPU_CTR_CACHE_NAME,
+			PCPU_CTR_LINE_SIZE, 0, SLAB_HWCACHE_ALIGN, 

ERROR:SPACING: space required before the open parenthesis '('
#666: FILE: mm/pcpu_alloc.c:164:
+	if(!ctl->cachep)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#667: FILE: mm/pcpu_alloc.c:165:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: mm/pcpu_alloc.c:167:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: mm/pcpu_alloc.c:173:
+^Ipcpu_ctr_init(&pcpu_ctr_ctl);^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#676: FILE: mm/pcpu_alloc.c:174:
+	if( !pcpu_ctr_mem_grow(&pcpu_ctr_ctl, GFP_ATOMIC))

ERROR:SPACING: space required before the open parenthesis '('
#676: FILE: mm/pcpu_alloc.c:174:
+	if( !pcpu_ctr_mem_grow(&pcpu_ctr_ctl, GFP_ATOMIC))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: mm/pcpu_alloc.c:175:
+^I^IBUG();^I^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#677: FILE: mm/pcpu_alloc.c:175:
+		BUG();		

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: mm/pcpu_alloc.c:184:
+        void *objp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: mm/pcpu_alloc.c:184:
+        void *objp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: mm/pcpu_alloc.c:185:
+        unsigned int objidx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: mm/pcpu_alloc.c:185:
+        unsigned int objidx;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: mm/pcpu_alloc.c:186:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: mm/pcpu_alloc.c:186:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: mm/pcpu_alloc.c:187:
+        objidx = blkp->freehead;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: mm/pcpu_alloc.c:187:
+        objidx = blkp->freehead;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: mm/pcpu_alloc.c:188:
+        blkp->freehead = blkp->freearr[objidx];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: mm/pcpu_alloc.c:188:
+        blkp->freehead = blkp->freearr[objidx];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: mm/pcpu_alloc.c:189:
+        blkp->usecount++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: mm/pcpu_alloc.c:189:
+        blkp->usecount++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: mm/pcpu_alloc.c:190:
+        if(blkp->freehead < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: mm/pcpu_alloc.c:190:
+        if(blkp->freehead < 0) {$

ERROR:SPACING: space required before the open parenthesis '('
#692: FILE: mm/pcpu_alloc.c:190:
+        if(blkp->freehead < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: mm/pcpu_alloc.c:191:
+                /* Last obj allocated. So if this is still first not full,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: mm/pcpu_alloc.c:192:
+                   change it */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#694: FILE: mm/pcpu_alloc.c:192:
+                /* Last obj allocated. So if this is still first not full,
+                   change it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#694: FILE: mm/pcpu_alloc.c:192:
+                   change it */

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: mm/pcpu_alloc.c:193:
+                ctl->firstnotfull = blkp->linkage.next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: mm/pcpu_alloc.c:193:
+                ctl->firstnotfull = blkp->linkage.next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: mm/pcpu_alloc.c:194:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: mm/pcpu_alloc.c:194:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: mm/pcpu_alloc.c:195:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: mm/pcpu_alloc.c:195:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: mm/pcpu_alloc.c:196:
+        return objidx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: mm/pcpu_alloc.c:196:
+        return objidx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: mm/pcpu_alloc.c:205:
+        struct pcpu_ctr_blk *blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: mm/pcpu_alloc.c:205:
+        struct pcpu_ctr_blk *blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#708: FILE: mm/pcpu_alloc.c:206:
+        unsigned int save_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: mm/pcpu_alloc.c:206:
+        unsigned int save_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: mm/pcpu_alloc.c:207:
+        struct list_head *l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: mm/pcpu_alloc.c:207:
+        struct list_head *l;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctr"
#714: FILE: mm/pcpu_alloc.c:212:
+	if (ctr == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: mm/pcpu_alloc.c:214:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: mm/pcpu_alloc.c:214:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#718: FILE: mm/pcpu_alloc.c:216:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: mm/pcpu_alloc.c:216:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: mm/pcpu_alloc.c:217:
+        /* Get the block to allocate pcpu_ctr from.. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: mm/pcpu_alloc.c:218:
+        spin_lock_irqsave(&ctl->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: mm/pcpu_alloc.c:218:
+        spin_lock_irqsave(&ctl->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: mm/pcpu_alloc.c:219:
+        l = ctl->firstnotfull;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: mm/pcpu_alloc.c:219:
+        l = ctl->firstnotfull;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: mm/pcpu_alloc.c:220:
+        if (l == &ctl->blks)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: mm/pcpu_alloc.c:220:
+        if (l == &ctl->blks)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: mm/pcpu_alloc.c:221:
+                goto unlock_and_get_mem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: mm/pcpu_alloc.c:221:
+                goto unlock_and_get_mem;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: mm/pcpu_alloc.c:222:
+        blkp = list_entry(l, struct pcpu_ctr_blk, linkage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: mm/pcpu_alloc.c:222:
+        blkp = list_entry(l, struct pcpu_ctr_blk, linkage);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: mm/pcpu_alloc.c:223:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: mm/pcpu_alloc.c:223:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: mm/pcpu_alloc.c:224:
+        /* Get the object index from the block */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: mm/pcpu_alloc.c:225:
+        objidx = __pcpu_ctr_alloc_one(ctl, blkp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: mm/pcpu_alloc.c:225:
+        objidx = __pcpu_ctr_alloc_one(ctl, blkp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: mm/pcpu_alloc.c:226:
+        spin_unlock_irqrestore(&ctl->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: mm/pcpu_alloc.c:226:
+        spin_unlock_irqrestore(&ctl->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: mm/pcpu_alloc.c:227:
+        /* Since we hold the lock and firstnotfull is not the$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: mm/pcpu_alloc.c:228:
+           head list, we shud be getting an object alloc here.firstnotfull $

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: mm/pcpu_alloc.c:228:
+           head list, we shud be getting an object alloc here.firstnotfull $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#730: FILE: mm/pcpu_alloc.c:228:
+        /* Since we hold the lock and firstnotfull is not the
+           head list, we shud be getting an object alloc here.firstnotfull 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: mm/pcpu_alloc.c:229:
+^I   can be pointing to head of the list when all the blks are $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#732: FILE: mm/pcpu_alloc.c:230:
+	   full or when there're no blocks left */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: mm/pcpu_alloc.c:231:
+^Ifor (i=0; i < smp_num_cpus; i++) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#733: FILE: mm/pcpu_alloc.c:231:
+	for (i=0; i < smp_num_cpus; i++) 
 	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#734: FILE: mm/pcpu_alloc.c:232:
+		ctr->arr[i] = blkp->lineaddr[i] + objidx*PCPU_CTR_SIZE;
 		                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#736: FILE: mm/pcpu_alloc.c:234:
+        return ctr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: mm/pcpu_alloc.c:234:
+        return ctr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: mm/pcpu_alloc.c:235:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: mm/pcpu_alloc.c:235:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: mm/pcpu_alloc.c:237:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: mm/pcpu_alloc.c:237:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: mm/pcpu_alloc.c:238:
+        spin_unlock_irqrestore(&ctl->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: mm/pcpu_alloc.c:238:
+        spin_unlock_irqrestore(&ctl->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#741: FILE: mm/pcpu_alloc.c:239:
+        if(pcpu_ctr_mem_grow(ctl, flags))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: mm/pcpu_alloc.c:239:
+        if(pcpu_ctr_mem_grow(ctl, flags))$

ERROR:SPACING: space required before the open parenthesis '('
#741: FILE: mm/pcpu_alloc.c:239:
+        if(pcpu_ctr_mem_grow(ctl, flags))

ERROR:CODE_INDENT: code indent should use tabs where possible
#742: FILE: mm/pcpu_alloc.c:240:
+                goto tryagain;  /* added another block..try allocing obj ..*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: mm/pcpu_alloc.c:240:
+                goto tryagain;  /* added another block..try allocing obj ..*/$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: mm/pcpu_alloc.c:241:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: mm/pcpu_alloc.c:241:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: mm/pcpu_alloc.c:241:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#746: FILE: mm/pcpu_alloc.c:244:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: mm/pcpu_alloc.c:244:
+        return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: mm/pcpu_alloc.c:251:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#754: FILE: mm/pcpu_alloc.c:252:
+ * Allocates memory to a PCPU counter. Returns NULL on failure. $

ERROR:SPACING: space prohibited after that open parenthesis '('
#758: FILE: mm/pcpu_alloc.c:256:
+	return( __pcpu_ctr_alloc(&pcpu_ctr_ctl, flags));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#758: FILE: mm/pcpu_alloc.c:256:
+	return( __pcpu_ctr_alloc(&pcpu_ctr_ctl, flags));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: mm/pcpu_alloc.c:262:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: mm/pcpu_alloc.c:266:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: mm/pcpu_alloc.c:268:
+^Ifor (i=0; i< smp_num_cpus; i++) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#770: FILE: mm/pcpu_alloc.c:268:
+	for (i=0; i< smp_num_cpus; i++) 
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#770: FILE: mm/pcpu_alloc.c:268:
+	for (i=0; i< smp_num_cpus; i++) 
 	           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: mm/pcpu_alloc.c:280:
+        struct pcpu_ctr_blk *blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: mm/pcpu_alloc.c:280:
+        struct pcpu_ctr_blk *blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: mm/pcpu_alloc.c:281:
+        unsigned int objidx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: mm/pcpu_alloc.c:281:
+        unsigned int objidx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: mm/pcpu_alloc.c:282:
+        unsigned int objoffset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: mm/pcpu_alloc.c:282:
+        unsigned int objoffset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#785: FILE: mm/pcpu_alloc.c:283:
+        struct list_head *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: mm/pcpu_alloc.c:283:
+        struct list_head *t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: mm/pcpu_alloc.c:285:
+        unsigned int save_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: mm/pcpu_alloc.c:285:
+        unsigned int save_flags;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: mm/pcpu_alloc.c:286:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#789: FILE: mm/pcpu_alloc.c:287:
+        spin_lock_irqsave(&ctl->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: mm/pcpu_alloc.c:287:
+        spin_lock_irqsave(&ctl->lock, save_flags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#790: FILE: mm/pcpu_alloc.c:288:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: mm/pcpu_alloc.c:288:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: mm/pcpu_alloc.c:289:
+        blkp = (struct pcpu_ctr_blk *)ptr->blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: mm/pcpu_alloc.c:289:
+        blkp = (struct pcpu_ctr_blk *)ptr->blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: mm/pcpu_alloc.c:290:
+        objoffset = (unsigned int)(ptr->arr[cpuid] - blkp->lineaddr[cpuid]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: mm/pcpu_alloc.c:290:
+        objoffset = (unsigned int)(ptr->arr[cpuid] - blkp->lineaddr[cpuid]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: mm/pcpu_alloc.c:291:
+        objidx = objoffset / PCPU_CTR_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: mm/pcpu_alloc.c:291:
+        objidx = objoffset / PCPU_CTR_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: mm/pcpu_alloc.c:295:
+        /* Update the block freelist */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: mm/pcpu_alloc.c:296:
+        blkp->freearr[objidx] = blkp->freehead;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: mm/pcpu_alloc.c:296:
+        blkp->freearr[objidx] = blkp->freehead;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#799: FILE: mm/pcpu_alloc.c:297:
+        blkp->freehead = objidx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: mm/pcpu_alloc.c:297:
+        blkp->freehead = objidx;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: mm/pcpu_alloc.c:298:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: mm/pcpu_alloc.c:298:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#801: FILE: mm/pcpu_alloc.c:299:
+        /* Update usage count */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#802: FILE: mm/pcpu_alloc.c:300:
+        blkp->usecount--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: mm/pcpu_alloc.c:300:
+        blkp->usecount--;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: mm/pcpu_alloc.c:301:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: mm/pcpu_alloc.c:301:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#804: FILE: mm/pcpu_alloc.c:302:
+        /* Fix block freelist chain */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: mm/pcpu_alloc.c:303:
+        if (blkp->freearr[objidx] < 0)  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: mm/pcpu_alloc.c:303:
+        if (blkp->freearr[objidx] < 0)  {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: mm/pcpu_alloc.c:304:
+                /* block was previously full and is now just partially full ..$

ERROR:CODE_INDENT: code indent should use tabs where possible
#807: FILE: mm/pcpu_alloc.c:305:
+                   so make firstnotfull pt to this block and fix list accdly */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#807: FILE: mm/pcpu_alloc.c:305:
+                /* block was previously full and is now just partially full ..
+                   so make firstnotfull pt to this block and fix list accdly */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#807: FILE: mm/pcpu_alloc.c:305:
+                   so make firstnotfull pt to this block and fix list accdly */

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: mm/pcpu_alloc.c:306:
+                t = ctl->firstnotfull;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: mm/pcpu_alloc.c:306:
+                t = ctl->firstnotfull;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#809: FILE: mm/pcpu_alloc.c:307:
+                ctl->firstnotfull = &blkp->linkage;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: mm/pcpu_alloc.c:307:
+                ctl->firstnotfull = &blkp->linkage;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: mm/pcpu_alloc.c:308:
+                if (blkp->linkage.next == t) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: mm/pcpu_alloc.c:308:
+                if (blkp->linkage.next == t) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: mm/pcpu_alloc.c:310:
+                        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: mm/pcpu_alloc.c:310:
+                        return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: mm/pcpu_alloc.c:312:
+                list_del(&blkp->linkage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: mm/pcpu_alloc.c:312:
+                list_del(&blkp->linkage);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: mm/pcpu_alloc.c:313:
+                list_add_tail(&blkp->linkage, t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: mm/pcpu_alloc.c:313:
+                list_add_tail(&blkp->linkage, t);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: mm/pcpu_alloc.c:314:
+        ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#816: FILE: mm/pcpu_alloc.c:314:
+        ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#816: FILE: mm/pcpu_alloc.c:314:
+        ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: mm/pcpu_alloc.c:314:
+        ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: mm/pcpu_alloc.c:316:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: mm/pcpu_alloc.c:316:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#819: FILE: mm/pcpu_alloc.c:317:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: mm/pcpu_alloc.c:317:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#820: FILE: mm/pcpu_alloc.c:318:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: mm/pcpu_alloc.c:318:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: mm/pcpu_alloc.c:319:
+        if (blkp->usecount == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: mm/pcpu_alloc.c:319:
+        if (blkp->usecount == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: mm/pcpu_alloc.c:320:
+                /* Block now empty so give mem back to the slab cache */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: mm/pcpu_alloc.c:321:
+                t = ctl->firstnotfull->prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: mm/pcpu_alloc.c:321:
+                t = ctl->firstnotfull->prev;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: mm/pcpu_alloc.c:322:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: mm/pcpu_alloc.c:322:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: mm/pcpu_alloc.c:323:
+                list_del(&blkp->linkage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: mm/pcpu_alloc.c:323:
+                list_del(&blkp->linkage);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: mm/pcpu_alloc.c:324:
+                if (ctl->firstnotfull == &blkp->linkage)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: mm/pcpu_alloc.c:324:
+                if (ctl->firstnotfull == &blkp->linkage)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#827: FILE: mm/pcpu_alloc.c:325:
+                        ctl->firstnotfull = t->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: mm/pcpu_alloc.c:325:
+                        ctl->firstnotfull = t->next;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: mm/pcpu_alloc.c:326:
+        ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: mm/pcpu_alloc.c:326:
+        ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#828: FILE: mm/pcpu_alloc.c:326:
+        ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: mm/pcpu_alloc.c:326:
+        ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#831: FILE: mm/pcpu_alloc.c:329:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: mm/pcpu_alloc.c:329:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#832: FILE: mm/pcpu_alloc.c:330:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: mm/pcpu_alloc.c:330:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#833: FILE: mm/pcpu_alloc.c:331:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: mm/pcpu_alloc.c:331:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#834: FILE: mm/pcpu_alloc.c:332:
+        spin_unlock_irqrestore(&ctl->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: mm/pcpu_alloc.c:332:
+        spin_unlock_irqrestore(&ctl->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: mm/pcpu_alloc.c:333:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: mm/pcpu_alloc.c:333:
+        return;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: mm/pcpu_alloc.c:338:
+ * @ptr: Pointer to pcpu_ctr_t; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: mm/pcpu_alloc.c:339:
+ */ $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#847: FILE: mm/pcpu_alloc.c:345:
+EXPORT_SYMBOL(pcpu_ctr_alloc);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#848: FILE: mm/pcpu_alloc.c:346:
+EXPORT_SYMBOL(pcpu_ctr_free);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#912: FILE: include/linux/netdevice.h:101:
+^Istatctr_t^Irx_bytes;^I^I/* total bytes received ^I*/$

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#983: FILE: net/core/dev.c:1702:
+		   statctr_read(&stats->tx_packets), statctr_read(&stats->tx_errors), statctr_read(&stats->tx_dropped),

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#986: FILE: net/core/dev.c:1705:
+		   + statctr_read(&stats->tx_window_errors) + statctr_read(&stats->tx_heartbeat_errors),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000473212.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 245 errors, 203 warnings, 17 checks, 861 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000473212.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
