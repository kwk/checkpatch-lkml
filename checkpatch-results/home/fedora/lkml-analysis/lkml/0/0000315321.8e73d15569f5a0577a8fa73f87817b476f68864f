WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#31: 
additional steps to acquire the requested informations. And this can 
                                          ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#define WQ_FLAG_EXCLUSIVE       0x01

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:TYPO_SPELLING: 'interger' may be misspelled - perhaps 'integer'?
#57: 
pointer to an interger to a bitmask. Two functions can be provided to help 
              ^^^^^^^^

WARNING:TYPO_SPELLING: 'typicaly' may be misspelled - perhaps 'typically'?
#61: 
"dup" will be simply NULL. A typicaly info-aware waiter will do something 
                             ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#99: 
--- linux-2.6.1-rc1-mm1/include/linux/wait.h.orig	2003-12-31 16:30:03.872807704 -0800

WARNING:NEW_TYPEDEFS: do not add new typedefs
#105: FILE: include/linux/wait.h:19:
+typedef struct wait_info_t;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_info_t *' should also have an identifier name
#112: FILE: include/linux/wait.h:26:
+	int (*dup)(wait_info_t *, wait_info_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_info_t *' should also have an identifier name
#112: FILE: include/linux/wait.h:26:
+	int (*dup)(wait_info_t *, wait_info_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_info_t *' should also have an identifier name
#113: FILE: include/linux/wait.h:27:
+	void (*dtor)(wait_info_t *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#181: FILE: include/linux/wait.h:128:
+extern void FASTCALL(remove_wait_queue_info(wait_queue_head_t *q, wait_queue_t * wait,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: include/linux/wait.h:128:
+extern void FASTCALL(remove_wait_queue_info(wait_queue_head_t *q, wait_queue_t * wait,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#196: FILE: include/linux/wait.h:155:
+extern void FASTCALL(__wake_up_info(wait_queue_head_t *q, unsigned int mode, int nr, wait_info_t *info));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#196: FILE: include/linux/wait.h:155:
+extern void FASTCALL(__wake_up_info(wait_queue_head_t *q, unsigned int mode, int nr, wait_info_t *info));

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#204: FILE: include/linux/wait.h:166:
+#define wake_up_info(x, i)		__wake_up_info((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE, 1, (i))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: include/linux/wait.h:166:
+#define wake_up_info(x, i)		__wake_up_info((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE, 1, (i))
                           		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#277: FILE: kernel/sched.c:1801:
+EXPORT_SYMBOL(__wake_up_info);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: kernel/fork.c:127:
+void remove_wait_queue_info(wait_queue_head_t *q, wait_queue_t * wait,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#317: FILE: kernel/fork.c:138:
+EXPORT_SYMBOL(remove_wait_queue_info);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 13 warnings, 2 checks, 202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
