CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#146: FILE: fs/file.c:22:
+	spinlock_t lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: fs/file.c:35:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#223: FILE: fs/file.c:106:
+	while(fdt) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#225: FILE: fs/file.c:108:
+		struct fdtable *next = fdt->next;
+		__free_fdtable(fdt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#250: FILE: fs/file.c:119:
+	BUG_ON(!fdt);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: fs/file.c:162:
+^Iif (fdt->free_files || fdt->max_fdset > __FD_SETSIZE || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: fs/file.c:163:
+	if (fdt->free_files || fdt->max_fdset > __FD_SETSIZE || 
+					fdt->max_fds > NR_OPEN_DEFAULT)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#338: FILE: fs/file.c:176:
+	BUG_ON(nfdt->max_fdset < fdt->max_fdset);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#339: FILE: fs/file.c:177:
+	BUG_ON(nfdt->max_fds < fdt->max_fds);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: fs/file.c:183:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: fs/file.c:185:
+^I * not yet initialised.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: fs/file.c:188:
+^I^Imemcpy (nfdt->open_fds, fdt->open_fds, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#350: FILE: fs/file.c:188:
+		memcpy (nfdt->open_fds, fdt->open_fds, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: fs/file.c:189:
+		memcpy (nfdt->open_fds, fdt->open_fds, 
+						fdt->max_fdset/8);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#351: FILE: fs/file.c:189:
+						fdt->max_fdset/8);
 						              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: fs/file.c:190:
+^I^Imemcpy (nfdt->close_on_exec, fdt->close_on_exec, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#352: FILE: fs/file.c:190:
+		memcpy (nfdt->close_on_exec, fdt->close_on_exec, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: fs/file.c:191:
+		memcpy (nfdt->close_on_exec, fdt->close_on_exec, 
+						fdt->max_fdset/8);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#353: FILE: fs/file.c:191:
+						fdt->max_fdset/8);
 						              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#354: FILE: fs/file.c:192:
+		memset (&nfdt->open_fds->fds_bits[i], 0, count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#355: FILE: fs/file.c:193:
+		memset (&nfdt->close_on_exec->fds_bits[i], 0, count);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#362: FILE: fs/file.c:197:
+	/* Don't copy/clear the array if we are creating a new
+	   fd array for fork() */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#362: FILE: fs/file.c:197:
+	   fd array for fork() */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: fs/file.c:199:
+^I^Imemcpy(nfdt->fd, fdt->fd, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: fs/file.c:200:
+		memcpy(nfdt->fd, fdt->fd, 
+			fdt->max_fds * sizeof(struct file *));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: fs/file.c:203:
+^I^I       (nfdt->max_fds - fdt->max_fds) * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: fs/file.c:204:
+^I^I^I^I^Isizeof(struct file *)); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: fs/file.c:241:
+  ^Ifd_set *new_openset = NULL, *new_execset = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#404: FILE: fs/file.c:241:
+  ^Ifd_set *new_openset = NULL, *new_execset = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: fs/file.c:241:
+  ^Ifd_set *new_openset = NULL, *new_execset = NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: fs/file.c:243:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: fs/file.c:243:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: fs/file.c:246:
+  ^I^Igoto out;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#409: FILE: fs/file.c:246:
+  ^I^Igoto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: fs/file.c:246:
+  ^I^Igoto out;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: fs/file.c:248:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: fs/file.c:248:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: fs/file.c:250:
+  ^I/* Expand to the max in easy steps */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: fs/file.c:250:
+  ^I/* Expand to the max in easy steps */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: fs/file.c:250:
+  ^I/* Expand to the max in easy steps */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: fs/file.c:251:
+  ^Ido {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#414: FILE: fs/file.c:251:
+  ^Ido {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: fs/file.c:251:
+  ^Ido {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: fs/file.c:261:
+  ^Inew_openset = alloc_fdset(nfds);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#427: FILE: fs/file.c:261:
+  ^Inew_openset = alloc_fdset(nfds);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: fs/file.c:261:
+  ^Inew_openset = alloc_fdset(nfds);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: fs/file.c:262:
+  ^Inew_execset = alloc_fdset(nfds);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#428: FILE: fs/file.c:262:
+  ^Inew_execset = alloc_fdset(nfds);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: fs/file.c:262:
+  ^Inew_execset = alloc_fdset(nfds);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: fs/file.c:263:
+  ^Iif (!new_openset || !new_execset)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#429: FILE: fs/file.c:263:
+  ^Iif (!new_openset || !new_execset)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: fs/file.c:263:
+  ^Iif (!new_openset || !new_execset)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: fs/file.c:264:
+  ^I^Igoto out;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#430: FILE: fs/file.c:264:
+  ^I^Igoto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: fs/file.c:264:
+  ^I^Igoto out;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: fs/file.c:270:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: fs/file.c:272:
+^I * we have enough for the requested fd array size. $

CHECK:BRACES: braces {} should be used on all arms of this statement
#442: FILE: fs/file.c:276:
+		if (nfds < 256)
[...]
+		else 
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: fs/file.c:278:
+^I^Ielse $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#444: FILE: fs/file.c:278:
+		else 
[...]
+		if (nfds < (PAGE_SIZE / sizeof(struct file *)))

CHECK:BRACES: braces {} should be used on all arms of this statement
#446: FILE: fs/file.c:280:
+		if (nfds < (PAGE_SIZE / sizeof(struct file *)))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#448: FILE: fs/file.c:282:
+		else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: fs/file.c:286:
+  ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#452: FILE: fs/file.c:286:
+  ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: fs/file.c:286:
+  ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: fs/file.c:296:
+  ^Iif (new_openset)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#462: FILE: fs/file.c:296:
+  ^Iif (new_openset)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: fs/file.c:296:
+  ^Iif (new_openset)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: fs/file.c:297:
+  ^I^Ifree_fdset(new_openset, nfds);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#463: FILE: fs/file.c:297:
+  ^I^Ifree_fdset(new_openset, nfds);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: fs/file.c:297:
+  ^I^Ifree_fdset(new_openset, nfds);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: fs/file.c:298:
+  ^Iif (new_execset)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#464: FILE: fs/file.c:298:
+  ^Iif (new_execset)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: fs/file.c:298:
+  ^Iif (new_execset)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: fs/file.c:299:
+  ^I^Ifree_fdset(new_execset, nfds);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#465: FILE: fs/file.c:299:
+  ^I^Ifree_fdset(new_execset, nfds);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: fs/file.c:299:
+  ^I^Ifree_fdset(new_execset, nfds);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: fs/file.c:358:
+^I^Iif (fdt->max_fdset >= NR_OPEN || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: fs/file.c:359:
+		if (fdt->max_fdset >= NR_OPEN || 
+			fdt->max_fds >= NR_OPEN || nr >= NR_OPEN) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#562: FILE: fs/file.c:364:
+		if ((err = expand_fdtable(files, nr)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#570: FILE: fs/file.c:372:
+static void __devinit fdtable_defer_list_init(int cpu)

WARNING:LINE_SPACING: Missing a blank line after declarations
#573: FILE: fs/file.c:375:
+	struct fdtable_defer *fddef = &per_cpu(fdtable_defer_list, cpu);
+	spin_lock_init(&fddef->lock);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#585: FILE: fs/file.c:387:
+	for (i = 0; i < NR_CPUS; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: fs/file_table.c:169:
+^I}^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#756: FILE: include/linux/file.h:73:
+extern void free_fdtable(struct fdtable *fdt);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#757: FILE: include/linux/file.h:74:
+extern void __init files_defer_init(void);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#785: FILE: include/linux/fs.h:604:
+^Istruct rcu_head ^If_rcuhead;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#811: FILE: include/linux/init_task.h:15:
+^I.rcu^I^I= RCU_HEAD_INIT, ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#812: FILE: include/linux/init_task.h:16:
+^I.free_files^I= NULL,^I^I ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#813: FILE: include/linux/init_task.h:17:
+^I.next^I^I= NULL,^I^I ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#820: FILE: include/linux/init_task.h:24:
+^I.fdt^I^I= &init_files.fdtab, ^I^I\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#845: FILE: kernel/exit.c:416:
+^I^Ielse $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176233.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 47 warnings, 13 checks, 798 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176233.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
