ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#35: 
--- a/drivers/pci/hotplug/Kconfig	Mon Feb 16 12:12:05 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: drivers/pci/hotplug/Makefile:38:
+^I^I^I^Irpaphp_pci.o^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/pci/hotplug/rpaphp.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: drivers/pci/hotplug/rpaphp.h:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#99: FILE: drivers/pci/hotplug/rpaphp.h:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: drivers/pci/hotplug/rpaphp.h:37:
+#define LED_OFF^I^I0 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: drivers/pci/hotplug/rpaphp.h:38:
+#define LED_ON^I^I1^I/* continuous on */ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: drivers/pci/hotplug/rpaphp.h:59:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#141: FILE: drivers/pci/hotplug/rpaphp.h:63:
+			printk(KERN_DEBUG "%s: " format,	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: drivers/pci/hotplug/rpaphp.h:64:
+^I^I^I^IMY_NAME , ## arg); ^I^I\$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#142: FILE: drivers/pci/hotplug/rpaphp.h:64:
+				MY_NAME , ## arg); 		\
 				        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#144: FILE: drivers/pci/hotplug/rpaphp.h:66:
+#define err(format, arg...) printk(KERN_ERR "%s: " format, MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#144: FILE: drivers/pci/hotplug/rpaphp.h:66:
+#define err(format, arg...) printk(KERN_ERR "%s: " format, MY_NAME , ## arg)
                                                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#145: FILE: drivers/pci/hotplug/rpaphp.h:67:
+#define info(format, arg...) printk(KERN_INFO "%s: " format, MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#145: FILE: drivers/pci/hotplug/rpaphp.h:67:
+#define info(format, arg...) printk(KERN_INFO "%s: " format, MY_NAME , ## arg)
                                                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#146: FILE: drivers/pci/hotplug/rpaphp.h:68:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format, MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#146: FILE: drivers/pci/hotplug/rpaphp.h:68:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format, MY_NAME , ## arg)
                                                                         ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: drivers/pci/hotplug/rpaphp.h:93:
+^Istruct^Ipci_dev^I*dev;^I/* pci_dev of device in this slot ^I*/$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/pci/hotplug/rpaphp.h:94:
+^I^I^I^I/* it will be used for unconfig^I^I*/ $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: drivers/pci/hotplug/rpaphp.h:101:
+extern struct pci_dev *rpaphp_find_pci_dev(struct device_node *dn);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: drivers/pci/hotplug/rpaphp.h:102:
+extern int rpaphp_add_slot(char *slot_name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: drivers/pci/hotplug/rpaphp.h:103:
+extern int rpaphp_remove_slot(struct slot *slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#182: FILE: drivers/pci/hotplug/rpaphp.h:104:
+extern int rpaphp_claim_resource(struct pci_dev *dev, int resource);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#189: FILE: drivers/pci/hotplug/rpaphp_core.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#207: FILE: drivers/pci/hotplug/rpaphp_core.c:19:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#208: FILE: drivers/pci/hotplug/rpaphp_core.c:20:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#229: FILE: drivers/pci/hotplug/rpaphp_core.c:41:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: drivers/pci/hotplug/rpaphp_core.c:45:
+static LIST_HEAD (rpaphp_slot_head);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#234: FILE: drivers/pci/hotplug/rpaphp_core.c:46:
+static int num_slots = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: drivers/pci/hotplug/rpaphp_core.c:60:
+static int enable_slot		(struct hotplug_slot *slot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: drivers/pci/hotplug/rpaphp_core.c:61:
+static int disable_slot		(struct hotplug_slot *slot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#250: FILE: drivers/pci/hotplug/rpaphp_core.c:62:
+static int set_attention_status (struct hotplug_slot *slot, u8 value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: drivers/pci/hotplug/rpaphp_core.c:63:
+static int get_power_status	(struct hotplug_slot *slot, u8 *value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: drivers/pci/hotplug/rpaphp_core.c:64:
+static int get_attention_status	(struct hotplug_slot *slot, u8 *value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: drivers/pci/hotplug/rpaphp_core.c:65:
+static int get_adapter_status	(struct hotplug_slot *slot, u8 *value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: drivers/pci/hotplug/rpaphp_core.c:66:
+static int get_max_bus_speed	(struct hotplug_slot *hotplug_slot, enum pci_bus_speed *value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: drivers/pci/hotplug/rpaphp_core.c:67:
+static int get_cur_bus_speed	(struct hotplug_slot *hotplug_slot, enum pci_bus_speed *value);

CHECK:BRACES: braces {} should be used on all arms of this statement
#276: FILE: drivers/pci/hotplug/rpaphp_core.c:88:
+		if (rc ==  NEED_POWER || rc == PWR_ONLY) {
[...]
+		} else if (rc == ERR_SENSE_USE)
[...]
+		   else err("%s failed to get sensor state\n", __FUNCTION__);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/pci/hotplug/rpaphp_core.c:90:
+			dbg("%s: slot must be power up to get sensor-state\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#278: FILE: drivers/pci/hotplug/rpaphp_core.c:90:
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#280: FILE: drivers/pci/hotplug/rpaphp_core.c:92:
+			info("%s: slot is unusable\n", __FUNCTION__);

WARNING:TABSTOP: Statements should start on a tabstop
#281: FILE: drivers/pci/hotplug/rpaphp_core.c:93:
+		   else err("%s failed to get sensor state\n", __FUNCTION__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#281: FILE: drivers/pci/hotplug/rpaphp_core.c:93:
+		   else err("%s failed to get sensor state\n", __FUNCTION__);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#281: FILE: drivers/pci/hotplug/rpaphp_core.c:93:
+		   else err("%s failed to get sensor state\n", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#297: FILE: drivers/pci/hotplug/rpaphp_core.c:109:
+	struct pci_dev * retval_dev = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#304: FILE: drivers/pci/hotplug/rpaphp_core.c:116:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/pci/hotplug/rpaphp_core.c:155:
+		err("slot(%s) set attention-status(%d) failed! rc=0x%x\n",
+			slot->name, status, rc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/pci/hotplug/rpaphp_core.c:156:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: drivers/pci/hotplug/rpaphp_core.c:167:
+		err("failed to get power-level for slot(%s), rc=0x%x\n",
+			slot->name, rc);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#362: FILE: drivers/pci/hotplug/rpaphp_core.c:174:
+{
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#373: FILE: drivers/pci/hotplug/rpaphp_core.c:185:
+static int set_attention_status (struct hotplug_slot *hotplug_slot, u8 value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#376: FILE: drivers/pci/hotplug/rpaphp_core.c:188:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#378: FILE: drivers/pci/hotplug/rpaphp_core.c:190:
+	if (slot == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#382: FILE: drivers/pci/hotplug/rpaphp_core.c:194:
+	switch (value) {
+		case 0:
[...]
+		case 1:
+		default:
[...]
+		case 2:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#399: FILE: drivers/pci/hotplug/rpaphp_core.c:211:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: drivers/pci/hotplug/rpaphp_core.c:213:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#412: FILE: drivers/pci/hotplug/rpaphp_core.c:224:
+static int get_power_status (struct hotplug_slot *hotplug_slot, u8 *value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#415: FILE: drivers/pci/hotplug/rpaphp_core.c:227:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#417: FILE: drivers/pci/hotplug/rpaphp_core.c:229:
+	if (slot == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#432: FILE: drivers/pci/hotplug/rpaphp_core.c:244:
+static int get_attention_status (struct hotplug_slot *hotplug_slot, u8 *value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#435: FILE: drivers/pci/hotplug/rpaphp_core.c:247:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#437: FILE: drivers/pci/hotplug/rpaphp_core.c:249:
+	if (slot == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#440: FILE: drivers/pci/hotplug/rpaphp_core.c:252:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#460: FILE: drivers/pci/hotplug/rpaphp_core.c:272:
+^I*value ^I^I  = NOT_VALID;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#471: FILE: drivers/pci/hotplug/rpaphp_core.c:283:
+^I^I^I  /* config/unconfig adapter^I ^I^I   */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#473: FILE: drivers/pci/hotplug/rpaphp_core.c:285:
+		else {
+		if (!slot->dn->child)

CHECK:BRACES: Unbalanced braces around else statement
#473: FILE: drivers/pci/hotplug/rpaphp_core.c:285:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/pci/hotplug/rpaphp_core.c:288:
+			dbg("%s: %s is not valid OFDT node\n",
+				__FUNCTION__, slot->dn->full_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#476: FILE: drivers/pci/hotplug/rpaphp_core.c:288:
+				__FUNCTION__, slot->dn->full_name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#478: FILE: drivers/pci/hotplug/rpaphp_core.c:290:
+			if (rpaphp_find_pci_dev(slot->dn->child))
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#480: FILE: drivers/pci/hotplug/rpaphp_core.c:292:
+			else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/pci/hotplug/rpaphp_core.c:294:
+				dbg("%s: can't find pdev of adapter in slot[%s]\n",
+					__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#482: FILE: drivers/pci/hotplug/rpaphp_core.c:294:
+					__FUNCTION__, slot->name);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#487: FILE: drivers/pci/hotplug/rpaphp_core.c:299:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#488: FILE: drivers/pci/hotplug/rpaphp_core.c:300:
+		if (state == EMPTY) {
+		dbg("slot is empty\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: drivers/pci/hotplug/rpaphp_core.c:304:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#496: FILE: drivers/pci/hotplug/rpaphp_core.c:308:
+static int get_adapter_status (struct hotplug_slot *hotplug_slot, u8 *value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#498: FILE: drivers/pci/hotplug/rpaphp_core.c:310:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#501: FILE: drivers/pci/hotplug/rpaphp_core.c:313:
+	if (slot == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#514: FILE: drivers/pci/hotplug/rpaphp_core.c:326:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#515: FILE: drivers/pci/hotplug/rpaphp_core.c:327:
+static int get_max_bus_speed (struct hotplug_slot *hotplug_slot, enum pci_bus_speed *value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#517: FILE: drivers/pci/hotplug/rpaphp_core.c:329:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#519: FILE: drivers/pci/hotplug/rpaphp_core.c:331:
+	if (slot == NULL)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#524: FILE: drivers/pci/hotplug/rpaphp_core.c:336:
+	switch (slot->type) {
+		case 1:
+		case 2:
+		case 3:
+		case 4:
+		case 5:
+		case 6:
[...]
+		case 7:
+		case 8:
[...]
+		case 11:
+		case 14:
[...]
+		case 12:
+		case 15:
[...]
+		case 13:
+		case 16:
[...]
+		default:

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_33MHz>
#531: FILE: drivers/pci/hotplug/rpaphp_core.c:343:
+			*value = PCI_SPEED_33MHz;	/* speed for case 1-6 */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_66MHz>
#535: FILE: drivers/pci/hotplug/rpaphp_core.c:347:
+			*value = PCI_SPEED_66MHz;

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_66MHz_PCIX>
#539: FILE: drivers/pci/hotplug/rpaphp_core.c:351:
+			*value = PCI_SPEED_66MHz_PCIX;

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_100MHz_PCIX>
#543: FILE: drivers/pci/hotplug/rpaphp_core.c:355:
+			*value = PCI_SPEED_100MHz_PCIX;

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_133MHz_PCIX>
#547: FILE: drivers/pci/hotplug/rpaphp_core.c:359:
+			*value = PCI_SPEED_133MHz_PCIX;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#553: FILE: drivers/pci/hotplug/rpaphp_core.c:365:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#560: FILE: drivers/pci/hotplug/rpaphp_core.c:372:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#562: FILE: drivers/pci/hotplug/rpaphp_core.c:374:
+static int get_cur_bus_speed (struct hotplug_slot *hotplug_slot, enum pci_bus_speed *value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#564: FILE: drivers/pci/hotplug/rpaphp_core.c:376:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#566: FILE: drivers/pci/hotplug/rpaphp_core.c:378:
+	if (slot == NULL)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#576: FILE: drivers/pci/hotplug/rpaphp_core.c:388:
+ * ^I^I^I^Ithe location code , if the slots is not$

ERROR:SPACING: space required before the open parenthesis '('
#583: FILE: drivers/pci/hotplug/rpaphp_core.c:395:
+	for(dn = find_all_nodes(); dn; dn = dn->next) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#584: FILE: drivers/pci/hotplug/rpaphp_core.c:396:
+	for(dn = find_all_nodes(); dn; dn = dn->next) {
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#585: FILE: drivers/pci/hotplug/rpaphp_core.c:397:
+^I^Iint ^I^I*index;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: drivers/pci/hotplug/rpaphp_core.c:406:
+^I^I^Iif (!loc_code) { $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#594: FILE: drivers/pci/hotplug/rpaphp_core.c:406:
+			if (!loc_code) { 
+				return -1;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: drivers/pci/hotplug/rpaphp_core.c:410:
+^I^I^Itmp_str = kmalloc(MAX_LOC_CODE, GFP_KERNEL); $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#600: FILE: drivers/pci/hotplug/rpaphp_core.c:412:
+				err("%s: out of memory\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: drivers/pci/hotplug/rpaphp_core.c:415:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: drivers/pci/hotplug/rpaphp_core.c:418:
+^I^I^Iif (slash) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: drivers/pci/hotplug/rpaphp_core.c:420:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: drivers/pci/hotplug/rpaphp_core.c:430:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#634: FILE: drivers/pci/hotplug/rpaphp_core.c:446:
+			int i;
+			pcibios_fixup_device_resources(dev, bus);

WARNING:LINE_SPACING: Missing a blank line after declarations
#638: FILE: drivers/pci/hotplug/rpaphp_core.c:450:
+				struct resource *r = &dev->resource[i];
+				if (r->parent || !r->start || !r->flags)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#648: FILE: drivers/pci/hotplug/rpaphp_core.c:460:
+^Istruct pci_bus ^I^I*pci_bus;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#650: FILE: drivers/pci/hotplug/rpaphp_core.c:462:
+^Iint ^I^I^Inum;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#654: FILE: drivers/pci/hotplug/rpaphp_core.c:466:
+	if (slot->bridge) {
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#658: FILE: drivers/pci/hotplug/rpaphp_core.c:470:
+			err("%s: can't find bus structure\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#665: FILE: drivers/pci/hotplug/rpaphp_core.c:477:
+				num = pci_scan_slot(pci_bus,
+				PCI_DEVFN(PCI_SLOT(dn->devfn),  0));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#677: FILE: drivers/pci/hotplug/rpaphp_core.c:489:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#677: FILE: drivers/pci/hotplug/rpaphp_core.c:489:
+	else {

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#685: FILE: drivers/pci/hotplug/rpaphp_core.c:497:
+	dbg("Exit %s: pci_dev %s\n", __FUNCTION__, dev? "found":"not found");
 	                                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#685: FILE: drivers/pci/hotplug/rpaphp_core.c:497:
+	dbg("Exit %s: pci_dev %s\n", __FUNCTION__, dev? "found":"not found");
 	                                                       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#685: FILE: drivers/pci/hotplug/rpaphp_core.c:497:
+	dbg("Exit %s: pci_dev %s\n", __FUNCTION__, dev? "found":"not found");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: drivers/pci/hotplug/rpaphp_core.c:506:
+		info("%s: no card in slot[%s]\n",
+			__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#694: FILE: drivers/pci/hotplug/rpaphp_core.c:506:
+			__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#705: FILE: drivers/pci/hotplug/rpaphp_core.c:517:
+	dbg("%s: adapter in slot[%s] unconfigured.\n", __FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#714: FILE: drivers/pci/hotplug/rpaphp_core.c:526:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#716: FILE: drivers/pci/hotplug/rpaphp_core.c:528:
+	if (slot == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: drivers/pci/hotplug/rpaphp_core.c:543:
+  ^Isysfs_remove_link(slot->hotplug_slot->kobj.parent,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#731: FILE: drivers/pci/hotplug/rpaphp_core.c:543:
+  ^Isysfs_remove_link(slot->hotplug_slot->kobj.parent,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: drivers/pci/hotplug/rpaphp_core.c:543:
+  ^Isysfs_remove_link(slot->hotplug_slot->kobj.parent,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#732: FILE: drivers/pci/hotplug/rpaphp_core.c:544:
+  	sysfs_remove_link(slot->hotplug_slot->kobj.parent,
+			slot->bridge->slot_name);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#743: FILE: drivers/pci/hotplug/rpaphp_core.c:555:
+static int is_php_dn(struct device_node *dn, int **indexes,  int **names, int **types, int **power_domains)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#768: FILE: drivers/pci/hotplug/rpaphp_core.c:580:
+	return(1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*slot)...) over kmalloc(sizeof(struct slot)...)
#775: FILE: drivers/pci/hotplug/rpaphp_core.c:587:
+	slot = kmalloc(sizeof(struct slot), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*slot->hotplug_slot)...) over kmalloc(sizeof(struct hotplug_slot)...)
#779: FILE: drivers/pci/hotplug/rpaphp_core.c:591:
+	slot->hotplug_slot = kmalloc(sizeof(struct hotplug_slot),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: drivers/pci/hotplug/rpaphp_core.c:592:
+	slot->hotplug_slot = kmalloc(sizeof(struct hotplug_slot),
+		GFP_KERNEL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#783: FILE: drivers/pci/hotplug/rpaphp_core.c:595:
+		return (NULL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*slot->hotplug_slot->info)...) over kmalloc(sizeof(struct hotplug_slot_info)...)
#786: FILE: drivers/pci/hotplug/rpaphp_core.c:598:
+	slot->hotplug_slot->info = kmalloc(sizeof(struct hotplug_slot_info),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: drivers/pci/hotplug/rpaphp_core.c:599:
+	slot->hotplug_slot->info = kmalloc(sizeof(struct hotplug_slot_info),
+		GFP_KERNEL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#791: FILE: drivers/pci/hotplug/rpaphp_core.c:603:
+		return (NULL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#799: FILE: drivers/pci/hotplug/rpaphp_core.c:611:
+		return (NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#807: FILE: drivers/pci/hotplug/rpaphp_core.c:619:
+	rpaphp_get_power_status(slot,
+		&slot->hotplug_slot->info->power_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#810: FILE: drivers/pci/hotplug/rpaphp_core.c:622:
+	rpaphp_get_adapter_status(slot, 1,
+		&slot->hotplug_slot->info->adapter_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: drivers/pci/hotplug/rpaphp_core.c:626:
+		dbg("%s: NOT_VALID: skip dn->full_name=%s\n",
+			__FUNCTION__, slot->dn->full_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#814: FILE: drivers/pci/hotplug/rpaphp_core.c:626:
+			__FUNCTION__, slot->dn->full_name);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#832: FILE: drivers/pci/hotplug/rpaphp_core.c:644:
+		return (retval);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#835: FILE: drivers/pci/hotplug/rpaphp_core.c:647:
+	dbg("%s: sysfs_create_link: %s --> %s\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/pci/hotplug/rpaphp_core.c:648:
+	dbg("%s: sysfs_create_link: %s --> %s\n", __FUNCTION__,
+		slot->bridge->slot_name, slot->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#838: FILE: drivers/pci/hotplug/rpaphp_core.c:650:
+	retval = sysfs_create_link(slot->hotplug_slot->kobj.parent,
+			&slot->hotplug_slot->kobj,

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#843: FILE: drivers/pci/hotplug/rpaphp_core.c:655:
+		return (retval);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#847: FILE: drivers/pci/hotplug/rpaphp_core.c:659:
+	dbg("%s adding slot[%s] to rpaphp_slot_list\n",
+		__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#847: FILE: drivers/pci/hotplug/rpaphp_core.c:659:
+		__FUNCTION__, slot->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#852: FILE: drivers/pci/hotplug/rpaphp_core.c:664:
+	info("Slot [%s] (bus_id=%s) registered\n",
+		slot->name, slot->bridge->slot_name);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#853: FILE: drivers/pci/hotplug/rpaphp_core.c:665:
+	return (0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#863: FILE: drivers/pci/hotplug/rpaphp_core.c:675:
+^Iint ^I^I^Iretval = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#864: FILE: drivers/pci/hotplug/rpaphp_core.c:676:
+^Iint ^I^I^Ii;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#865: FILE: drivers/pci/hotplug/rpaphp_core.c:677:
+^Istruct device_node ^I*dn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#866: FILE: drivers/pci/hotplug/rpaphp_core.c:678:
+^Iint ^I^I^I*indexes, *names, *types, *power_domains;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#867: FILE: drivers/pci/hotplug/rpaphp_core.c:679:
+^Ichar ^I^I^I*name, *type;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#870: FILE: drivers/pci/hotplug/rpaphp_core.c:682:
+	for (dn = find_all_nodes(); dn; dn = dn->next) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#876: FILE: drivers/pci/hotplug/rpaphp_core.c:688:
+			dbg("%s : found device_node in OFDT full_name=%s, name=%s\n",
+				__FUNCTION__, dn->full_name, dn->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#876: FILE: drivers/pci/hotplug/rpaphp_core.c:688:
+				__FUNCTION__, dn->full_name, dn->name);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#885: FILE: drivers/pci/hotplug/rpaphp_core.c:697:
+				type += (strlen(type) + 1)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#887: FILE: drivers/pci/hotplug/rpaphp_core.c:699:
+				dbg("%s: name[%s] index[%x]\n",
+					__FUNCTION__, name, indexes[i+1]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#887: FILE: drivers/pci/hotplug/rpaphp_core.c:699:
+					__FUNCTION__, name, indexes[i+1]);
 					                             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#887: FILE: drivers/pci/hotplug/rpaphp_core.c:699:
+					__FUNCTION__, name, indexes[i+1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#894: FILE: drivers/pci/hotplug/rpaphp_core.c:706:
+					dbg("%s: slot(%s, 0x%x) is invalid.\n",
+						__FUNCTION__, name, indexes[i+ 1]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#894: FILE: drivers/pci/hotplug/rpaphp_core.c:706:
+						__FUNCTION__, name, indexes[i+ 1]);
 						                             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#894: FILE: drivers/pci/hotplug/rpaphp_core.c:706:
+						__FUNCTION__, name, indexes[i+ 1]);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#907: FILE: drivers/pci/hotplug/rpaphp_core.c:719:
+				slot->type = simple_strtoul(type, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:TYPO_SPELLING: 'Initilize' may be misspelled - perhaps 'Initialize'?
#919: FILE: drivers/pci/hotplug/rpaphp_core.c:731:
+			 	* Initilize the slot info structure with some known
 			 	  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#919: FILE: drivers/pci/hotplug/rpaphp_core.c:731:
+^I^I^I ^I* Initilize the slot info structure with some known$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#919: FILE: drivers/pci/hotplug/rpaphp_core.c:731:
+^I^I^I ^I* Initilize the slot info structure with some known$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#919: FILE: drivers/pci/hotplug/rpaphp_core.c:731:
+				/*
+			 	* Initilize the slot info structure with some known

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: drivers/pci/hotplug/rpaphp_core.c:732:
+^I^I^I ^I* good values.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#920: FILE: drivers/pci/hotplug/rpaphp_core.c:732:
+^I^I^I ^I* good values.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: drivers/pci/hotplug/rpaphp_core.c:733:
+^I^I^I ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#921: FILE: drivers/pci/hotplug/rpaphp_core.c:733:
+^I^I^I ^I*/$

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#926: FILE: drivers/pci/hotplug/rpaphp_core.c:738:
+				if (!slot->bridge && slot_name) { /* slot being added doesn't have pci_dev yet*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#928: FILE: drivers/pci/hotplug/rpaphp_core.c:740:
+					dbg("%s: no pci_dev for bridge dn %s\n",
+							__FUNCTION__, slot_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#928: FILE: drivers/pci/hotplug/rpaphp_core.c:740:
+							__FUNCTION__, slot_name);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#941: FILE: drivers/pci/hotplug/rpaphp_core.c:753:
+				}
+				else {  /* slot is occupied */

CHECK:BRACES: Unbalanced braces around else statement
#941: FILE: drivers/pci/hotplug/rpaphp_core.c:753:
+				else {  /* slot is occupied */

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#942: FILE: drivers/pci/hotplug/rpaphp_core.c:754:
+					if(!(slot->dn->child)) { /* non-empty slot has to have child */

ERROR:SPACING: space required before the open parenthesis '('
#942: FILE: drivers/pci/hotplug/rpaphp_core.c:754:
+					if(!(slot->dn->child)) { /* non-empty slot has to have child */

WARNING:LONG_LINE_STRING: line length of 114 exceeds 100 columns
#943: FILE: drivers/pci/hotplug/rpaphp_core.c:755:
+						err("%s: slot[%s]'s device_node doesn't have child for adapter\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: drivers/pci/hotplug/rpaphp_core.c:756:
+						err("%s: slot[%s]'s device_node doesn't have child for adapter\n",
+						__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#944: FILE: drivers/pci/hotplug/rpaphp_core.c:756:
+						__FUNCTION__, slot->name);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#951: FILE: drivers/pci/hotplug/rpaphp_core.c:763:
+
+					}

ERROR:SPACING: space required before the open parenthesis '('
#954: FILE: drivers/pci/hotplug/rpaphp_core.c:766:
+					if(slot->dev) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#958: FILE: drivers/pci/hotplug/rpaphp_core.c:770:
+					}
+					else {

CHECK:BRACES: Unbalanced braces around else statement
#958: FILE: drivers/pci/hotplug/rpaphp_core.c:770:
+					else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#960: FILE: drivers/pci/hotplug/rpaphp_core.c:772:
+						 * boot time */

WARNING:LONG_LINE_STRING: line length of 110 exceeds 100 columns
#964: FILE: drivers/pci/hotplug/rpaphp_core.c:776:
+				dbg("%s registering slot:path[%s] index[%x], name[%s] pdomain[%x] type[%d]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#965: FILE: drivers/pci/hotplug/rpaphp_core.c:777:
+				dbg("%s registering slot:path[%s] index[%x], name[%s] pdomain[%x] type[%d]\n",
+					__FUNCTION__, dn->full_name, slot->index, slot->name,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#965: FILE: drivers/pci/hotplug/rpaphp_core.c:777:
+					__FUNCTION__, dn->full_name, slot->index, slot->name,

ERROR:SPACING: space required after that close brace '}'
#977: FILE: drivers/pci/hotplug/rpaphp_core.c:789:
+			}/* for indexes */

ERROR:SPACING: space required after that close brace '}'
#978: FILE: drivers/pci/hotplug/rpaphp_core.c:790:
+		}/* "pci" */

ERROR:SPACING: space required after that close brace '}'
#979: FILE: drivers/pci/hotplug/rpaphp_core.c:791:
+	}/* find_all_nodes */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#982: FILE: drivers/pci/hotplug/rpaphp_core.c:794:
+	dbg("%s - Exit: num_slots=%d rc[%d]\n",
+		__FUNCTION__, num_slots, retval);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#982: FILE: drivers/pci/hotplug/rpaphp_core.c:794:
+		__FUNCTION__, num_slots, retval);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#990: FILE: drivers/pci/hotplug/rpaphp_core.c:802:
+static int init_slots (void)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#992: FILE: drivers/pci/hotplug/rpaphp_core.c:804:
+^Iint ^I^I^Iretval = 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#999: FILE: drivers/pci/hotplug/rpaphp_core.c:811:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1000: FILE: drivers/pci/hotplug/rpaphp_core.c:812:
+static int init_rpa (void)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1002: FILE: drivers/pci/hotplug/rpaphp_core.c:814:
+^Iint ^I^I^Iretval = 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1014: FILE: drivers/pci/hotplug/rpaphp_core.c:826:
+static void cleanup_slots (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1025: FILE: drivers/pci/hotplug/rpaphp_core.c:837:
+	list_for_each_safe (tmp, n, &rpaphp_slot_head) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1028: FILE: drivers/pci/hotplug/rpaphp_core.c:840:
+		sysfs_remove_link(slot->hotplug_slot->kobj.parent,
+			slot->bridge->slot_name);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1034: FILE: drivers/pci/hotplug/rpaphp_core.c:846:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1036: FILE: drivers/pci/hotplug/rpaphp_core.c:848:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1051: FILE: drivers/pci/hotplug/rpaphp_core.c:863:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1057: FILE: drivers/pci/hotplug/rpaphp_core.c:869:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1062: FILE: drivers/pci/hotplug/rpaphp_core.c:874:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#1064: FILE: drivers/pci/hotplug/rpaphp_core.c:876:
+	if (slot == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1069: FILE: drivers/pci/hotplug/rpaphp_core.c:881:
+		dbg("%s: %s is already enabled\n",
+			__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1069: FILE: drivers/pci/hotplug/rpaphp_core.c:881:
+			__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1082: FILE: drivers/pci/hotplug/rpaphp_core.c:894:
+	dbg("%s: sensor state[%d]\n", __FUNCTION__, state);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1086: FILE: drivers/pci/hotplug/rpaphp_core.c:898:
+		dbg("%s : slot[%s] is occupid.\n", __FUNCTION__, slot->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: drivers/pci/hotplug/rpaphp_core.c:900:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1088: FILE: drivers/pci/hotplug/rpaphp_core.c:900:
+
+		

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "slot->dev"
#1090: FILE: drivers/pci/hotplug/rpaphp_core.c:902:
+		if (slot->dev != NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1094: FILE: drivers/pci/hotplug/rpaphp_core.c:906:
+			dbg("%s: adapter %s in slot[%s] has been configured\n",
+				__FUNCTION__, slot->dev->slot_name,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1094: FILE: drivers/pci/hotplug/rpaphp_core.c:906:
+				__FUNCTION__, slot->dev->slot_name,

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1097: FILE: drivers/pci/hotplug/rpaphp_core.c:909:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1097: FILE: drivers/pci/hotplug/rpaphp_core.c:909:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1101: FILE: drivers/pci/hotplug/rpaphp_core.c:913:
+			dbg("%s: no pci_dev struct for adapter in slot[%s]\n",
+				__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1101: FILE: drivers/pci/hotplug/rpaphp_core.c:913:
+				__FUNCTION__, slot->name);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1104: FILE: drivers/pci/hotplug/rpaphp_core.c:916:
+
+	}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1105: FILE: drivers/pci/hotplug/rpaphp_core.c:917:
+	}
+	else if (state == EMPTY) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1106: FILE: drivers/pci/hotplug/rpaphp_core.c:918:
+		dbg("%s : slot[%s] is empty\n", __FUNCTION__, slot->name);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1109: FILE: drivers/pci/hotplug/rpaphp_core.c:921:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1109: FILE: drivers/pci/hotplug/rpaphp_core.c:921:
+	else {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1110: FILE: drivers/pci/hotplug/rpaphp_core.c:922:
+		err("%s: slot[%s] is in invalid state\n", __FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1129: FILE: drivers/pci/hotplug/rpaphp_core.c:941:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#1131: FILE: drivers/pci/hotplug/rpaphp_core.c:943:
+	if (slot == NULL)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1152: FILE: drivers/pci/hotplug/rpaphp_core.c:964:
+EXPORT_SYMBOL_GPL(rpaphp_add_slot);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1153: FILE: drivers/pci/hotplug/rpaphp_core.c:965:
+EXPORT_SYMBOL_GPL(rpaphp_remove_slot);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1158: FILE: drivers/pci/hotplug/rpaphp_pci.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1176: FILE: drivers/pci/hotplug/rpaphp_pci.c:19:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1177: FILE: drivers/pci/hotplug/rpaphp_pci.c:20:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1186: FILE: drivers/pci/hotplug/rpaphp_pci.c:29:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#1192: FILE: drivers/pci/hotplug/rpaphp_pci.c:35:
+		if(!dev->bus)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1207: FILE: drivers/pci/hotplug/rpaphp_pci.c:50:
+
+}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1217: FILE: drivers/pci/hotplug/rpaphp_pci.c:60:
+	if (root != NULL) {
+		err = request_resource(root, res);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "root"
#1217: FILE: drivers/pci/hotplug/rpaphp_pci.c:60:
+	if (root != NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: drivers/pci/hotplug/rpaphp_pci.c:66:
+		err("PCI: %s region %d of %s %s [%lx:%lx]\n",
+			root ? "Address space collision on" :

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1231: FILE: drivers/pci/hotplug/rpaphp_pci.c:74:
+EXPORT_SYMBOL_GPL(rpaphp_find_pci_dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1232: FILE: drivers/pci/hotplug/rpaphp_pci.c:75:
+EXPORT_SYMBOL_GPL(rpaphp_claim_resource);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000303597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 56 errors, 103 warnings, 86 checks, 1178 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000303597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
