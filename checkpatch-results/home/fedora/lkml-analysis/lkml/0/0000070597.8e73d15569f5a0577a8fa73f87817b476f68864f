WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#39: 
Signed-Off-By: Pavel Emelianiov <xemul@openvz.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#40: 
Signed-Off-By: Kirill Korotaev <dev@openvz.org>

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#86: FILE: ipc/shm.c:54:
+	((struct shmid_kernel*)ipc_lock(&shm_ids(ns),id))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: ipc/shm.c:54:
+	((struct shmid_kernel*)ipc_lock(&shm_ids(ns),id))
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#90: FILE: ipc/shm.c:58:
+	((struct shmid_kernel*)ipc_get(&shm_ids(ns),id))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: ipc/shm.c:58:
+	((struct shmid_kernel*)ipc_get(&shm_ids(ns),id))
 	                                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#94: FILE: ipc/shm.c:62:
+static int newseg (struct ipc_namespace *ns, key_t key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: ipc/shm.c:63:
+static int newseg (struct ipc_namespace *ns, key_t key,
+		int shmflg, size_t size);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#98: FILE: ipc/shm.c:66:
+static void shm_destroy (struct ipc_namespace *ns, struct shmid_kernel *shp);

ERROR:SPACING: space required before the open brace '{'
#119: FILE: ipc/shm.c:83:
+	if (shp->shm_nattch){

CHECK:BRACES: braces {} should be used on all arms of this statement
#119: FILE: ipc/shm.c:83:
+	if (shp->shm_nattch){
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#124: FILE: ipc/shm.c:88:
+	} else

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ids)...) over kmalloc(sizeof(struct ipc_ids)...)
#133: FILE: ipc/shm.c:97:
+	ids = kmalloc(sizeof(struct ipc_ids), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ids"
#134: FILE: ipc/shm.c:98:
+	if (ids == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#149: FILE: ipc/shm.c:113:
+		if (shp == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: ipc/shm.c:134:
+static inline int shm_checkid(struct ipc_namespace *ns,
+		struct shmid_kernel *s, int id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: ipc/shm.c:171:
+	shm_inc(shm_file_ns(shmd->vm_file),
+			shmd->vm_file->f_dentry->d_inode->i_ino);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: ipc/shm.c:270:
+static int newseg (struct ipc_namespace *ns, key_t key, int shmflg, size_t size)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#359: FILE: ipc/shm.c:364:
+	} else if ((id = ipc_findkey(&shm_ids(ns), key)) == -1) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: ipc/shm.c:483:
+^I^Iunsigned long *swp) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: ipc/shm.c:483:
+static void shm_get_stat(struct ipc_namespace *ns, unsigned long *rss,
+		unsigned long *swp) 

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#435: FILE: ipc/shm.c:538:
+		shminfo.shmmni = shminfo.shmseg = ns->shm_ctlmni;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#444: FILE: ipc/shm.c:546:
+		err= shm_ids(ns).max_id;
 		   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#458: FILE: ipc/shm.c:562:
+		shm_get_stat (ns, &shm_info.shm_rss, &shm_info.shm_swp);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#487: FILE: ipc/shm.c:592:
+			err = shm_checkid(ns, shp,shmid);
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#502: FILE: ipc/shm.c:629:
+		err = shm_checkid(ns, shp,shmid);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#551: FILE: ipc/shm.c:720:
+		err = shm_checkid(ns, shp,shmid);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: ipc/shm.c:828:
+	err = shm_checkid(ns, shp,shmid);
 	                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000070597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 7 warnings, 10 checks, 532 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000070597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
