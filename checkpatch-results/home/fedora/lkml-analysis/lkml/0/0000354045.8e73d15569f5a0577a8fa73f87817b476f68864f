WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
Content-Disposition: attachment; filename="patch-2.4.22-pre6-mq0.04-mq0.05.diff"

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#106: FILE: fs/dquot.c:492:
+			if ((type == cnt || type == -1) && dqh_has_quota_enabled(dqh, cnt)
+			    && dqh_dqopt(dqh)->info[cnt].dqi_flags & DQF_ANY_DQUOT_DIRTY)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: fs/inode.c:98:
+^I^Iinode->i_dqh = sb->s_dqh;   ^I/* this is the default */$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#333: FILE: fs/quota.c:165:
+			if ((ret = hash->dqh_qcop->get_info(hash, type, &info)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#348: FILE: fs/quota.c:181:
+			if ((ret = hash->dqh_qcop->get_dqblk(hash, type, id, &idq)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#378: FILE: fs/quota.c:211:
+			if ((ret = hash->dqh_qcop->get_xstate(hash, &fqs)))

WARNING:TABSTOP: Statements should start on a tabstop
#387: FILE: fs/quota.c:222:
+		       return hash->dqh_qcop->set_xquota(hash, type, id, &fdq);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#393: FILE: fs/quota.c:227:
+			if ((ret = hash->dqh_qcop->get_xquota(hash, type, id, &fdq)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#486: FILE: fs/quota.c:334:
+	if ((ret = hash->dqh_qcop->get_dqblk(hash, type, id, &idq)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#495: FILE: fs/quota.c:347:
+		if ((ret = hash->dqh_qcop->get_info(hash, type, &info)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#578: FILE: fs/quota.c:422:
+			if ((ret = v1_get_dqblk(hash, type, id, &mdq)))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#603: FILE: fs/quota.c:476:
 	}
+	else if (sb)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: fs/quota.c:477:
+^I    ^Idqh = sb->s_dqh;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#604: FILE: fs/quota.c:477:
+^I    ^Idqh = sb->s_dqh;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: fs/quota.c:478:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#608: FILE: fs/quota.c:480:
+		if ((ret = check_compat_quotactl_valid(dqh, type, cmds, id)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#615: FILE: fs/quota.c:485:
+	if ((ret = check_quotactl_valid(dqh, type, cmds, id)) < 0)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#674: FILE: include/linux/quota.h:266:
+	int (*get_xstate)(struct dqhash *, struct fs_quota_stat *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_quota_stat *' should also have an identifier name
#674: FILE: include/linux/quota.h:266:
+	int (*get_xstate)(struct dqhash *, struct fs_quota_stat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#675: FILE: include/linux/quota.h:267:
+	int (*set_xstate)(struct dqhash *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#675: FILE: include/linux/quota.h:267:
+	int (*set_xstate)(struct dqhash *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#675: FILE: include/linux/quota.h:267:
+	int (*set_xstate)(struct dqhash *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#676: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#676: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#676: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_disk_quota *' should also have an identifier name
#676: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#677: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#677: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#677: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_disk_quota *' should also have an identifier name
#677: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#709: FILE: include/linux/quotaops.h:24:
+extern void sync_dquots_dqh(struct dqhash *hash, int type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#745: FILE: include/linux/quotaops.h:59:
+		inode->i_dqh->dqh_qop->drop(inode);	/* Ops must be set when there's any quota... */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:INLINE: plain inline is preferred over __inline__
#826: FILE: include/linux/quotaops.h:167:
+static __inline__ int DQUOT_OFF(struct dqhash *hash)

ERROR:SPACING: space required before the open parenthesis '('
#851: FILE: include/linux/quotaops.h:189:
+#define DQUOT_SYNC_DQH(hash)			do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1018: FILE: fs/dquot.c:197:
+static inline struct dquot *find_dquot(struct dqhash *hash, unsigned int hashent, unsigned int id, int type)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1024: FILE: fs/dquot.c:202:
+	for (head = hash->dqh_hash[hashent].next; head != hash->dqh_hash+hashent; head = head->next) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1024: FILE: fs/dquot.c:202:
+	for (head = hash->dqh_hash[hashent].next; head != hash->dqh_hash+hashent; head = head->next) {
 	                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1060: FILE: fs/dquot.c:352:
+    ^I/* this could be optimized! (easily?) */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1060: FILE: fs/dquot.c:352:
+    ^I/* this could be optimized! (easily?) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: fs/dquot.c:352:
+    ^I/* this could be optimized! (easily?) */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1081: FILE: fs/dquot.c:381:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1084: FILE: fs/dquot.c:384:
+        struct dqhash *hash;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: fs/dquot.c:384:
+        struct dqhash *hash;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1086: FILE: fs/dquot.c:386:
+    ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1086: FILE: fs/dquot.c:386:
+    ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: fs/dquot.c:386:
+    ^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hash)...) over kmalloc(sizeof(struct dqhash)...)
#1087: FILE: fs/dquot.c:387:
+	hash = kmalloc(sizeof(struct dqhash),  GFP_USER);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1119: FILE: fs/dquot.c:419:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1132: FILE: fs/dquot.c:432:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1138: FILE: fs/dquot.c:438:
+
+

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1177: FILE: fs/dquot.c:472:
+		if ((cnt == type || type == -1) && dqh_has_quota_enabled(hash, cnt) && info_dirty(&dqopt->info[cnt]))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1192: FILE: fs/dquot.c:492:
+			if ((type == cnt || type == -1) && dqh_has_quota_enabled(dqh, cnt)
+			    && dqh_dqopt(dqh)->info[cnt].dqi_flags & DQF_ANY_DQUOT_DIRTY)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1256: FILE: fs/dquot.c:648:
+^I    ^Idquot->dq_dev = hash->dqh_sb->s_dev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1256: FILE: fs/dquot.c:648:
+^I    ^Idquot->dq_dev = hash->dqh_sb->s_dev;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1280: FILE: fs/dquot.c:670:
+	if ((dquot = find_dquot(hash, hashent, id, type)) == NODQUOT) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1283: FILE: fs/dquot.c:672:
+			if ((empty = get_empty_dquot(hash, type)) == NODQUOT)

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1358: FILE: fs/dquot.c:968:
+		dquot->dq_dqb.dqb_itime = CURRENT_TIME + dqh_dqopt(dquot->dq_dqh)->info[dquot->dq_type].dqi_igrace;

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1367: FILE: fs/dquot.c:1002:
+			dquot->dq_dqb.dqb_btime = CURRENT_TIME + dqh_dqopt(dquot->dq_dqh)->info[dquot->dq_type].dqi_bgrace;

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1399: FILE: fs/dquot.c:1050:
+		if (dquot[cnt] == NODQUOT || !dqh_has_quota_enabled(dqh, cnt) || inode->i_dquot[cnt] != NODQUOT)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1407: FILE: fs/dquot.c:1206:
+    ^Istruct dqhash *dqh = inode->i_sb->s_dqh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1407: FILE: fs/dquot.c:1206:
+    ^Istruct dqhash *dqh = inode->i_sb->s_dqh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1407: FILE: fs/dquot.c:1206:
+    ^Istruct dqhash *dqh = inode->i_sb->s_dqh;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1515: FILE: fs/dquot.c:1413:
+	if ((error = dqopt->ops[type]->read_file_info(hash, type)) < 0)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1541: FILE: fs/dquot.c:1496:
+			dm->dqb_btime = CURRENT_TIME + dqh_dqopt(dquot->dq_dqh)->info[dquot->dq_type].dqi_bgrace;

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1550: FILE: fs/dquot.c:1504:
+			dm->dqb_itime = CURRENT_TIME + dqh_dqopt(dquot->dq_dqh)->info[dquot->dq_type].dqi_igrace;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1630: FILE: fs/inode.c:98:
+^I^Iinode->i_dqh = sb->s_dqh;   ^I/* this is the default */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1643: FILE: fs/inode.c:1213:
+    ^Istruct super_block *sb = hash->dqh_sb;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1643: FILE: fs/inode.c:1213:
+    ^Istruct super_block *sb = hash->dqh_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1643: FILE: fs/inode.c:1213:
+    ^Istruct super_block *sb = hash->dqh_sb;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1803: FILE: fs/quota.c:165:
+			if ((ret = hash->dqh_qcop->get_info(hash, type, &info)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1818: FILE: fs/quota.c:181:
+			if ((ret = hash->dqh_qcop->get_dqblk(hash, type, id, &idq)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1848: FILE: fs/quota.c:211:
+			if ((ret = hash->dqh_qcop->get_xstate(hash, &fqs)))

WARNING:TABSTOP: Statements should start on a tabstop
#1857: FILE: fs/quota.c:222:
+		       return hash->dqh_qcop->set_xquota(hash, type, id, &fdq);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1863: FILE: fs/quota.c:227:
+			if ((ret = hash->dqh_qcop->get_xquota(hash, type, id, &fdq)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1954: FILE: fs/quota.c:334:
+	if ((ret = hash->dqh_qcop->get_dqblk(hash, type, id, &idq)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1963: FILE: fs/quota.c:347:
+		if ((ret = hash->dqh_qcop->get_info(hash, type, &info)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2033: FILE: fs/quota.c:422:
+			if ((ret = v1_get_dqblk(hash, type, id, &mdq)))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2058: FILE: fs/quota.c:476:
 	}
+	else if (sb)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2059: FILE: fs/quota.c:477:
+^I    ^Idqh = sb->s_dqh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2059: FILE: fs/quota.c:477:
+^I    ^Idqh = sb->s_dqh;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2060: FILE: fs/quota.c:478:
+^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2063: FILE: fs/quota.c:480:
+		if ((ret = check_compat_quotactl_valid(dqh, type, cmds, id)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2070: FILE: fs/quota.c:485:
+	if ((ret = check_quotactl_valid(dqh, type, cmds, id)) < 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2085: FILE: fs/quota_v1.c:45:
+	filp = dqh_dqopt(dquot->dq_dqh)->files[type];
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2094: FILE: fs/quota_v1.c:74:
+	filp = dqh_dqopt(dquot->dq_dqh)->files[type];
 	^^^^

WARNING:LONG_LINE: line length of 163 exceeds 100 columns
#2126: FILE: fs/quota_v1.c:147:
+	printk(KERN_INFO "VFS: %s: Refusing to turn on old quota format on given file. It probably contains newer quota format.\n", kdevname(hash->dqh_sb->s_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2126: FILE: fs/quota_v1.c:147:
+	printk(KERN_INFO "VFS: %s: Refusing to turn on old quota format on given file. It probably contains newer quota format.\n", kdevname(hash->dqh_sb->s_dev));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2177: FILE: fs/quota_v2.c:52:
+	struct mem_dqinfo *info = dqh_dqopt(hash)->info+type;
 	                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2193: FILE: fs/quota_v2.c:80:
+	struct mem_dqinfo *info = dqh_dqopt(hash)->info+type;
 	                                               ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2204: FILE: fs/quota_v2.c:284:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2205: FILE: fs/quota_v2.c:285:
+	struct mem_dqinfo *info = dqh_dqopt(dquot->dq_dqh)->info+dquot->dq_type;
 	                                                        ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2215: FILE: fs/quota_v2.c:345:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2225: FILE: fs/quota_v2.c:419:
+	filp = dqh_dqopt(dquot->dq_dqh)->files[type];
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2235: FILE: fs/quota_v2.c:440:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2246: FILE: fs/quota_v2.c:489:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2256: FILE: fs/quota_v2.c:539:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2265: FILE: fs/quota_v2.c:576:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2274: FILE: fs/quota_v2.c:615:
+	filp = dqh_dqopt(dquot->dq_dqh)->files[type];
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2278: FILE: fs/quota_v2.c:618:
+	if (!filp || !dquot->dq_dqh) {	/* Invalidated quota? */
 	     ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2295: FILE: fs/super.c:283:
+   ^I    ^I/* quick hack to make dqhash id unique, sufficient for now */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2295: FILE: fs/super.c:283:
+   ^I    ^I/* quick hack to make dqhash id unique, sufficient for now */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2295: FILE: fs/super.c:283:
+   ^I    ^I/* quick hack to make dqhash id unique, sufficient for now */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2305: FILE: fs/super.c:298:
+    ^Idestroy_dqhash(s->s_dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2305: FILE: fs/super.c:298:
+    ^Idestroy_dqhash(s->s_dqh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2305: FILE: fs/super.c:298:
+    ^Idestroy_dqhash(s->s_dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2358: FILE: include/linux/fs.h:761:
+^Istruct dqhash^I    ^I*s_dqh;^I    ^I/* Diskquota hash */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2369: FILE: include/linux/mount.h:32:
+    ^Istruct dqhash *mnt_dqh;     ^I/* Diskquota hash for mount */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2369: FILE: include/linux/mount.h:32:
+    ^Istruct dqhash *mnt_dqh;     ^I/* Diskquota hash for mount */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2369: FILE: include/linux/mount.h:32:
+    ^Istruct dqhash *mnt_dqh;     ^I/* Diskquota hash for mount */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2404: FILE: include/linux/quota.h:237:
+	int (*check_quota_file)(struct dqhash *, int);	/* Detect whether file is in our format */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2404: FILE: include/linux/quota.h:237:
+	int (*check_quota_file)(struct dqhash *, int);	/* Detect whether file is in our format */

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#2405: FILE: include/linux/quota.h:238:
+	int (*read_file_info)(struct dqhash *, int);	/* Read main info about file - called on quotaon() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2405: FILE: include/linux/quota.h:238:
+	int (*read_file_info)(struct dqhash *, int);	/* Read main info about file - called on quotaon() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2405: FILE: include/linux/quota.h:238:
+	int (*read_file_info)(struct dqhash *, int);	/* Read main info about file - called on quotaon() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2406: FILE: include/linux/quota.h:239:
+	int (*write_file_info)(struct dqhash *, int);	/* Write main info about file */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2406: FILE: include/linux/quota.h:239:
+	int (*write_file_info)(struct dqhash *, int);	/* Write main info about file */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2407: FILE: include/linux/quota.h:240:
+	int (*free_file_info)(struct dqhash *, int);	/* Called on quotaoff() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2407: FILE: include/linux/quota.h:240:
+	int (*free_file_info)(struct dqhash *, int);	/* Called on quotaoff() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dquot *' should also have an identifier name
#2408: FILE: include/linux/quota.h:241:
+	int (*read_dqblk)(struct dquot *);		/* Read structure for one user */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#2409: FILE: include/linux/quota.h:242:
+	int (*commit_dqblk)(struct dquot *);	    	/* Write (or delete) structure for one user */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2409: FILE: include/linux/quota.h:242:
+^Iint (*commit_dqblk)(struct dquot *);^I    ^I/* Write (or delete) structure for one user */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dquot *' should also have an identifier name
#2409: FILE: include/linux/quota.h:242:
+	int (*commit_dqblk)(struct dquot *);	    	/* Write (or delete) structure for one user */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2428: FILE: include/linux/quota.h:259:
+	int (*quota_on)(struct dqhash *, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2428: FILE: include/linux/quota.h:259:
+	int (*quota_on)(struct dqhash *, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2428: FILE: include/linux/quota.h:259:
+	int (*quota_on)(struct dqhash *, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2428: FILE: include/linux/quota.h:259:
+	int (*quota_on)(struct dqhash *, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2429: FILE: include/linux/quota.h:260:
+	int (*quota_off)(struct dqhash *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2429: FILE: include/linux/quota.h:260:
+	int (*quota_off)(struct dqhash *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2430: FILE: include/linux/quota.h:261:
+	int (*quota_sync)(struct dqhash *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2430: FILE: include/linux/quota.h:261:
+	int (*quota_sync)(struct dqhash *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2431: FILE: include/linux/quota.h:262:
+	int (*get_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2431: FILE: include/linux/quota.h:262:
+	int (*get_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct if_dqinfo *' should also have an identifier name
#2431: FILE: include/linux/quota.h:262:
+	int (*get_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2432: FILE: include/linux/quota.h:263:
+	int (*set_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2432: FILE: include/linux/quota.h:263:
+	int (*set_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct if_dqinfo *' should also have an identifier name
#2432: FILE: include/linux/quota.h:263:
+	int (*set_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2433: FILE: include/linux/quota.h:264:
+	int (*get_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2433: FILE: include/linux/quota.h:264:
+	int (*get_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#2433: FILE: include/linux/quota.h:264:
+	int (*get_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct if_dqblk *' should also have an identifier name
#2433: FILE: include/linux/quota.h:264:
+	int (*get_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2434: FILE: include/linux/quota.h:265:
+	int (*set_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2434: FILE: include/linux/quota.h:265:
+	int (*set_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#2434: FILE: include/linux/quota.h:265:
+	int (*set_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct if_dqblk *' should also have an identifier name
#2434: FILE: include/linux/quota.h:265:
+	int (*set_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2435: FILE: include/linux/quota.h:266:
+	int (*get_xstate)(struct dqhash *, struct fs_quota_stat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_quota_stat *' should also have an identifier name
#2435: FILE: include/linux/quota.h:266:
+	int (*get_xstate)(struct dqhash *, struct fs_quota_stat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2436: FILE: include/linux/quota.h:267:
+	int (*set_xstate)(struct dqhash *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2436: FILE: include/linux/quota.h:267:
+	int (*set_xstate)(struct dqhash *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2436: FILE: include/linux/quota.h:267:
+	int (*set_xstate)(struct dqhash *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2437: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2437: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#2437: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_disk_quota *' should also have an identifier name
#2437: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2438: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2438: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#2438: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_disk_quota *' should also have an identifier name
#2438: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hash' - possible side-effects?
#2459: FILE: include/linux/quota.h:305:
+#define dqh_any_quota_enabled(hash) (is_enabled(dqh_dqopt(hash), USRQUOTA)  \
+    	| is_enabled(dqh_dqopt(hash), GRPQUOTA))

ERROR:CODE_INDENT: code indent should use tabs where possible
#2460: FILE: include/linux/quota.h:306:
+    ^I| is_enabled(dqh_dqopt(hash), GRPQUOTA))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2460: FILE: include/linux/quota.h:306:
+    ^I| is_enabled(dqh_dqopt(hash), GRPQUOTA))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2460: FILE: include/linux/quota.h:306:
+    ^I| is_enabled(dqh_dqopt(hash), GRPQUOTA))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2475: FILE: include/linux/quota.h:320:
+    ^Istruct super_block *dqh_sb; ^I/* super block if applicable */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2475: FILE: include/linux/quota.h:320:
+    ^Istruct super_block *dqh_sb; ^I/* super block if applicable */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2475: FILE: include/linux/quota.h:320:
+    ^Istruct super_block *dqh_sb; ^I/* super block if applicable */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2476: FILE: include/linux/quota.h:321:
+    ^Istruct list_head dqh_hash[NR_DQHASH];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2476: FILE: include/linux/quota.h:321:
+    ^Istruct list_head dqh_hash[NR_DQHASH];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2476: FILE: include/linux/quota.h:321:
+    ^Istruct list_head dqh_hash[NR_DQHASH];$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2479: FILE: include/linux/quota.h:324:
+struct dqhash *new_dqhash(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#2480: FILE: include/linux/quota.h:325:
+void destroy_dqhash(struct dqhash *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2481: FILE: include/linux/quota.h:326:
+struct dqhash *find_dqhash(unsigned int);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2485: FILE: include/linux/quota.h:330:
+    ^Idq->dq_flags |= DQ_MOD;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2485: FILE: include/linux/quota.h:330:
+    ^Idq->dq_flags |= DQ_MOD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2485: FILE: include/linux/quota.h:330:
+    ^Idq->dq_flags |= DQ_MOD;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2500: FILE: include/linux/quotaops.h:24:
+extern void sync_dquots_dqh(struct dqhash *hash, int type);

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#2532: FILE: include/linux/quotaops.h:59:
+		inode->i_dqh->dqh_qop->drop(inode);	/* Ops must be set when there's any quota... */

WARNING:INLINE: plain inline is preferred over __inline__
#2613: FILE: include/linux/quotaops.h:167:
+static __inline__ int DQUOT_OFF(struct dqhash *hash)

ERROR:SPACING: space required before the open parenthesis '('
#2638: FILE: include/linux/quotaops.h:189:
+#define DQUOT_SYNC_DQH(hash)			do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 121 warnings, 13 checks, 2324 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
