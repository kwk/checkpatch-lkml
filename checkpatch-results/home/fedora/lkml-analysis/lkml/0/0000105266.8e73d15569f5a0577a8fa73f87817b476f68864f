WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
serial8250_console_setup() never gets invoked when CONFIG_PRINTK is not set, 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#ifdef CONFIG_PRINTK

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#60: FILE: kernel/printk.c:123:
read+

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: kernel/printk.c:629:
+       char name[sizeof(console_cmdline[0].name)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: kernel/printk.c:630:
+       char *s, *options;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: kernel/printk.c:631:
+       int idx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: kernel/printk.c:634:
+        *      Decode str into name, index, options.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: kernel/printk.c:635:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: kernel/printk.c:636:
+       if (str[0] >= '0' && str[0] <= '9') {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#120: FILE: kernel/printk.c:636:
+       if (str[0] >= '0' && str[0] <= '9') {
+               strcpy(name, "ttyS");

CHECK:BRACES: braces {} should be used on all arms of this statement
#120: FILE: kernel/printk.c:636:
+       if (str[0] >= '0' && str[0] <= '9') {
[...]
+       } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: kernel/printk.c:637:
+               strcpy(name, "ttyS");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: kernel/printk.c:637:
+               strcpy(name, "ttyS");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: kernel/printk.c:638:
+               strncpy(name + 4, str, sizeof(name) - 5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: kernel/printk.c:638:
+               strncpy(name + 4, str, sizeof(name) - 5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: kernel/printk.c:639:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#123: FILE: kernel/printk.c:639:
+       } else
+               strncpy(name, str, sizeof(name) - 1);

CHECK:BRACES: Unbalanced braces around else statement
#123: FILE: kernel/printk.c:639:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: kernel/printk.c:640:
+               strncpy(name, str, sizeof(name) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: kernel/printk.c:640:
+               strncpy(name, str, sizeof(name) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: kernel/printk.c:641:
+       name[sizeof(name) - 1] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: kernel/printk.c:642:
+       if ((options = strchr(str, ',')) != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#126: FILE: kernel/printk.c:642:
+       if ((options = strchr(str, ',')) != NULL)
+               *(options++) = 0;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#126: FILE: kernel/printk.c:642:
+       if ((options = strchr(str, ',')) != NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: kernel/printk.c:643:
+               *(options++) = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: kernel/printk.c:643:
+               *(options++) = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: kernel/printk.c:645:
+       if (!strcmp(str, "ttya"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#129: FILE: kernel/printk.c:645:
+       if (!strcmp(str, "ttya"))
+               strcpy(name, "ttyS0");

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: kernel/printk.c:646:
+               strcpy(name, "ttyS0");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: kernel/printk.c:646:
+               strcpy(name, "ttyS0");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: kernel/printk.c:647:
+       if (!strcmp(str, "ttyb"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#131: FILE: kernel/printk.c:647:
+       if (!strcmp(str, "ttyb"))
+               strcpy(name, "ttyS1");

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: kernel/printk.c:648:
+               strcpy(name, "ttyS1");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: kernel/printk.c:648:
+               strcpy(name, "ttyS1");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: kernel/printk.c:650:
+       for (s = name; *s; s++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#134: FILE: kernel/printk.c:650:
+       for (s = name; *s; s++)
+               if ((*s >= '0' && *s <= '9') || *s == ',')

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: kernel/printk.c:651:
+               if ((*s >= '0' && *s <= '9') || *s == ',')$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: kernel/printk.c:651:
+               if ((*s >= '0' && *s <= '9') || *s == ',')$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#135: FILE: kernel/printk.c:651:
+               if ((*s >= '0' && *s <= '9') || *s == ',')
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: kernel/printk.c:652:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: kernel/printk.c:652:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: kernel/printk.c:653:
+       idx = simple_strtoul(s, NULL, 10);$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#137: FILE: kernel/printk.c:653:
+       idx = simple_strtoul(s, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: kernel/printk.c:654:
+       *s = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: kernel/printk.c:656:
+       add_preferred_console(name, idx, options);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: kernel/printk.c:657:
+       return 1;$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#144: FILE: kernel/printk.c:660:
+__setup("console=", console_setup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105266.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 32 warnings, 3 checks, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105266.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
