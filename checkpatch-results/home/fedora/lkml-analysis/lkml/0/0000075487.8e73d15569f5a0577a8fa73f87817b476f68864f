WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#177: 
####################################################################

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#573: 
####################################################################

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#595: FILE: arch/i386/kernel/smp.c:148:
+		cfg = (cfg&~APIC_VECTOR_MASK)|APIC_DM_NMI;
 		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#595: FILE: arch/i386/kernel/smp.c:148:
+		cfg = (cfg&~APIC_VECTOR_MASK)|APIC_DM_NMI;
 		                             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#597: FILE: arch/i386/kernel/smp.c:150:
+		printk("%s: cpu %d cfg 0x%x\n", __FUNCTION__, smp_processor_id(), cfg);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#597: FILE: arch/i386/kernel/smp.c:150:
+		printk("%s: cpu %d cfg 0x%x\n", __FUNCTION__, smp_processor_id(), cfg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#607: FILE: arch/i386/kernel/smp.c:231:
+				cfg = (cfg&~APIC_VECTOR_MASK)|APIC_DM_NMI;
 				          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#607: FILE: arch/i386/kernel/smp.c:231:
+				cfg = (cfg&~APIC_VECTOR_MASK)|APIC_DM_NMI;
 				                             ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#609: FILE: arch/i386/kernel/smp.c:233:
+				printk("%s: cpu %d cfg 0x%lx\n", __FUNCTION__, smp_processor_id(), cfg);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#609: FILE: arch/i386/kernel/smp.c:233:
+				printk("%s: cpu %d cfg 0x%lx\n", __FUNCTION__, smp_processor_id(), cfg);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#609: FILE: arch/i386/kernel/smp.c:233:
+				printk("%s: cpu %d cfg 0x%lx\n", __FUNCTION__, smp_processor_id(), cfg);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#620: FILE: arch/i386/kernel/smp.c:579:
+	printk("%s: ipi %d\n", __FUNCTION__, ipi);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#620: FILE: arch/i386/kernel/smp.c:579:
+	printk("%s: ipi %d\n", __FUNCTION__, ipi);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#653: FILE: arch/i386/kernel/traps.c:730:
+		printk("%s: cpu %d\n", __FUNCTION__, smp_processor_id());

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#653: FILE: arch/i386/kernel/traps.c:730:
+		printk("%s: cpu %d\n", __FUNCTION__, smp_processor_id());

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#662: FILE: arch/i386/kernel/traps.c:745:
+fastcall void do_ipi_20(struct pt_regs * regs, long error_code)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#664: FILE: arch/i386/kernel/traps.c:747:
+	printk("%s: cpu %d\n", __FUNCTION__, raw_smp_processor_id());

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#664: FILE: arch/i386/kernel/traps.c:747:
+	printk("%s: cpu %d\n", __FUNCTION__, raw_smp_processor_id());

ERROR:SPACING: space required after that ',' (ctx:VxO)
#674: FILE: arch/i386/kernel/traps.c:1187:
+	set_trap_gate(20,&ipi_20);
 	                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#674: FILE: arch/i386/kernel/traps.c:1187:
+	set_trap_gate(20,&ipi_20);
 	                 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#696: FILE: kernel/test_nmi.c:1:
+#include <linux/config.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#703: FILE: kernel/test_nmi.c:8:
+extern void kaos_send_IPI_allbutself(int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#703: FILE: kernel/test_nmi.c:8:
+extern void kaos_send_IPI_allbutself(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#704: FILE: kernel/test_nmi.c:9:
+extern int kaos_expect_nmi;

WARNING:LINE_SPACING: Missing a blank line after declarations
#710: FILE: kernel/test_nmi.c:15:
+	int cpu = get_cpu();
+	kaos_expect_nmi = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#711: FILE: kernel/test_nmi.c:16:
+	printk("%s: 1 cpu %d\n", __FUNCTION__, cpu);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#711: FILE: kernel/test_nmi.c:16:
+	printk("%s: 1 cpu %d\n", __FUNCTION__, cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#714: FILE: kernel/test_nmi.c:19:
+	printk("%s: 2 cpu %d\n", __FUNCTION__, cpu);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#714: FILE: kernel/test_nmi.c:19:
+	printk("%s: 2 cpu %d\n", __FUNCTION__, cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#717: FILE: kernel/test_nmi.c:22:
+	printk("%s: 3 cpu %d\n", __FUNCTION__, cpu);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#717: FILE: kernel/test_nmi.c:22:
+	printk("%s: 3 cpu %d\n", __FUNCTION__, cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#721: FILE: kernel/test_nmi.c:26:
+	printk("%s: 4 cpu %d\n", __FUNCTION__, cpu);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#721: FILE: kernel/test_nmi.c:26:
+	printk("%s: 4 cpu %d\n", __FUNCTION__, cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075487.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 26 warnings, 4 checks, 144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075487.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
