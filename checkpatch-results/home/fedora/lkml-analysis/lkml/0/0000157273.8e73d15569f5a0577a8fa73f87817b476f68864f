WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
OEM information during boot. Parsing the table in fact is causing problems, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#45: FILE: arch/i386/mach-es7000/es7000.h:107:
+extern int parse_unisys_oem (char *oemptr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#45: FILE: arch/i386/mach-es7000/es7000.h:107:
+extern int parse_unisys_oem (char *oemptr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#46: FILE: arch/i386/mach-es7000/es7000.h:108:
+extern int find_unisys_acpi_oem_table(unsigned long *oem_addr);

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void setup_unisys() should probably be void setup_unisys(void)
#47: FILE: arch/i386/mach-es7000/es7000.h:109:
+extern void setup_unisys ();

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#47: FILE: arch/i386/mach-es7000/es7000.h:109:
+extern void setup_unisys ();

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#47: FILE: arch/i386/mach-es7000/es7000.h:109:
+extern void setup_unisys ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#58: FILE: arch/i386/mach-es7000/es7000plat.c:79:
+setup_unisys ()

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#80: FILE: arch/i386/mach-es7000/es7000plat.c:100:
+parse_unisys_oem (char *oemptr)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#89: FILE: arch/i386/mach-es7000/es7000plat.c:115:
+	for (i=0; i <= 6; i++) {
 	      ^

CHECK:BRACES: Unbalanced braces around else statement
#120: FILE: arch/i386/mach-es7000/es7000plat.c:155:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:17:
+extern int parse_unisys_oem (char *oemptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#163: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:17:
+extern int parse_unisys_oem (char *oemptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:18:
+extern int find_unisys_acpi_oem_table(unsigned long *oem_addr);

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void setup_unisys() should probably be void setup_unisys(void)
#165: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:19:
+extern void setup_unisys();

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:19:
+extern void setup_unisys();

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int es7000_check_dsdt() should probably be int es7000_check_dsdt(void)
#179: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:33:
+static inline int es7000_check_dsdt()

WARNING:LINE_SPACING: Missing a blank line after declarations
#182: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:36:
+	struct acpi_table_header *header = NULL;
+	if(!acpi_get_table_header_early(ACPI_DSDT, &header))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:36:
+	if(!acpi_get_table_header_early(ACPI_DSDT, &header))

CHECK:BRACES: braces {} should be used on all arms of this statement
#197: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:48:
+		if (es7000_check_dsdt())
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#199: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:50:
+			return parse_unisys_oem((char *)oem_addr);
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#199: FILE: include/asm-i386/mach-es7000/mach_mpparse.h:50:
+		else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000157273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 9 checks, 154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000157273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
