WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#85: 
diff -Nuar linux-2.6.11.org/drivers/serial/jsm/jsm_driver.c linux-2.6.11.new/drivers/serial/jsm/jsm_driver.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: drivers/serial/jsm/jsm_driver.c:1:
+/************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: drivers/serial/jsm/jsm_driver.c:10:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: drivers/serial/jsm/jsm_driver.c:12:
+ * but WITHOUT ANY WARRANTY, EXPRESS OR IMPLIED; without even the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/serial/jsm/jsm_driver.c:13:
+ * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/serial/jsm/jsm_driver.c:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/serial/jsm/jsm_driver.c:16:
+ * You should have received a copy of the GNU General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: drivers/serial/jsm/jsm_driver.c:17:
+ * along with this program; if not, write to the Free Software $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: drivers/serial/jsm/jsm_driver.c:17:
+ * along with this program; if not, write to the Free Software $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: drivers/serial/jsm/jsm_driver.c:36:
+#define NR_PORTS^I32 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/serial/jsm/jsm_driver.c:37:
+#define JSM_MINOR_START^I0 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: drivers/serial/jsm/jsm_driver.c:42:
+^I.dev_name^I= "ttyn", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/serial/jsm/jsm_driver.c:44:
+^I.minor^I^I= JSM_MINOR_START, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: drivers/serial/jsm/jsm_driver.c:64:
+	{ PCI_DEVICE (PCI_VENDOR_ID_DIGI, PCI_DEVICE_ID_NEO_2DB9),	0,	0,	0 },

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: drivers/serial/jsm/jsm_driver.c:65:
+	{ PCI_DEVICE (PCI_VENDOR_ID_DIGI, PCI_DEVICE_ID_NEO_2DB9PRI),	0,	0,	1 },

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: drivers/serial/jsm/jsm_driver.c:66:
+	{ PCI_DEVICE (PCI_VENDOR_ID_DIGI, PCI_DEVICE_ID_NEO_2RJ45),	0,	0,	2 },

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: drivers/serial/jsm/jsm_driver.c:67:
+	{ PCI_DEVICE (PCI_VENDOR_ID_DIGI, PCI_DEVICE_ID_NEO_2RJ45PRI),	0,	0,	3 },

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Ids>
#160: FILE: drivers/serial/jsm/jsm_driver.c:72:
+static struct board_id jsm_Ids[] = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#180: FILE: drivers/serial/jsm/jsm_driver.c:92:
+		rc = request_irq(brd->irq, brd->bd_ops->intr, SA_INTERRUPT|SA_SHIRQ, "JSM", brd);
 		                                                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#183: FILE: drivers/serial/jsm/jsm_driver.c:95:
+			printk(KERN_WARNING "Failed to hook IRQ %d\n",brd->irq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#183: FILE: drivers/serial/jsm/jsm_driver.c:95:
+			printk(KERN_WARNING "Failed to hook IRQ %d\n",brd->irq);
 			                                             ^

CHECK:BRACES: Unbalanced braces around else statement
#187: FILE: drivers/serial/jsm/jsm_driver.c:99:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/serial/jsm/jsm_driver.c:101:
+			jsm_printk(INIT, INFO, &brd->pci_dev,
+				"Requested and received usage of IRQ %d\n", brd->irq);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*brd)...) over kmalloc(sizeof(struct jsm_board)...)
#210: FILE: drivers/serial/jsm/jsm_driver.c:122:
+	brd = kmalloc(sizeof(struct jsm_board), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#212: FILE: drivers/serial/jsm/jsm_driver.c:124:
+	if (!brd) {
+		dev_err(&pdev->dev, "memory allocation for board structure failed\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: drivers/serial/jsm/jsm_driver.c:131:
+^I^Icur_board_entry = $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/serial/jsm/jsm_driver.c:133:
+			list_entry(tmp, struct jsm_board,
+				jsm_board_entry);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#222: FILE: drivers/serial/jsm/jsm_driver.c:134:
+		if (cur_board_entry->boardnum != adapter_count) {
+			break;
+		}

ERROR:SPACING: space required before the open parenthesis '('
#252: FILE: drivers/serial/jsm/jsm_driver.c:164:
+	switch(brd->pci_dev->device) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#253: FILE: drivers/serial/jsm/jsm_driver.c:165:
+	switch(brd->pci_dev->device) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: drivers/serial/jsm/jsm_driver.c:173:
+^I^I * No need to enable global interrupts or anything. $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: drivers/serial/jsm/jsm_driver.c:178:
+		jsm_printk(INIT, INFO, &brd->pci_dev,
+			"jsm_found_board - NEO adapter\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_found_board', this function's name, in a string
#266: FILE: drivers/serial/jsm/jsm_driver.c:178:
+			"jsm_found_board - NEO adapter\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/serial/jsm/jsm_driver.c:197:
+		jsm_printk(INIT, INFO, &brd->pci_dev,
+			"remapped mem: 0x%p\n", brd->re_map_membase);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#330: FILE: drivers/serial/jsm/jsm_driver.c:242:
+	dev_info(&pdev->dev, "board %d: %s (rev %d), irq %d\n",adapter_count, brd->name, brd->rev, brd->irq);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#330: FILE: drivers/serial/jsm/jsm_driver.c:242:
+	dev_info(&pdev->dev, "board %d: %s (rev %d), irq %d\n",adapter_count, brd->name, brd->rev, brd->irq);
 	                                                      ^

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#340: FILE: drivers/serial/jsm/jsm_driver.c:252:
+	if (!brd->flipbuf) {
+		dev_err(&pdev->dev, "memory allocation for flipbuf failed\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#370: FILE: drivers/serial/jsm/jsm_driver.c:282:
+	if ((rc = pci_request_regions(pdev, "jsm"))) {
+	dev_err(&pdev->dev, "pci_request_region FAILED\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#370: FILE: drivers/serial/jsm/jsm_driver.c:282:
+	if ((rc = pci_request_regions(pdev, "jsm"))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#376: FILE: drivers/serial/jsm/jsm_driver.c:288:
+	if ((rc = jsm_found_board(pdev, ent->driver_data))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/serial/jsm/jsm_driver.c:292:
+^I ^Ireturn rc;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: drivers/serial/jsm/jsm_driver.c:292:
+^I ^Ireturn rc;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#385: FILE: drivers/serial/jsm/jsm_driver.c:297:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#402: FILE: drivers/serial/jsm/jsm_driver.c:314:
+			if (brd->channels[i]->ch_rqueue)
+				kfree(brd->channels[i]->ch_rqueue);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#404: FILE: drivers/serial/jsm/jsm_driver.c:316:
+			if (brd->channels[i]->ch_equeue)
+				kfree(brd->channels[i]->ch_equeue);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#406: FILE: drivers/serial/jsm/jsm_driver.c:318:
+			if (brd->channels[i]->ch_wqueue)
+				kfree(brd->channels[i]->ch_wqueue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: drivers/serial/jsm/jsm_driver.c:338:
+		brd = list_entry(tmp, struct jsm_board,
+					jsm_board_entry);

ERROR:SPACING: space prohibited after that open parenthesis '('
#427: FILE: drivers/serial/jsm/jsm_driver.c:339:
+		if ( brd != NULL && brd->pci_dev == dev) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "brd"
#427: FILE: drivers/serial/jsm/jsm_driver.c:339:
+		if ( brd != NULL && brd->pci_dev == dev) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:RETURN_VOID: void function return statements are not generally useful
#436: FILE: drivers/serial/jsm/jsm_driver.c:348:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#454: FILE: drivers/serial/jsm/jsm_driver.c:366:
+	printk(KERN_INFO "%s, Digi International Part Number %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: drivers/serial/jsm/jsm_driver.c:367:
+	printk(KERN_INFO "%s, Digi International Part Number %s\n",
+			JSM_VERSION, JSM_VERSION);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#462: FILE: drivers/serial/jsm/jsm_driver.c:374:
+	if (rc < 0) {
+		return rc;
+	}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199127.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 20 warnings, 13 checks, 404 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199127.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
