WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -ruNp 607-atomic-copy.patch-old/kernel/power/suspend2_core/atomic_copy.c 607-atomic-copy.patch-new/kernel/power/suspend2_core/atomic_copy.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#31: FILE: kernel/power/suspend2_core/atomic_copy.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: kernel/power/suspend2_core/atomic_copy.c:23:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#74: FILE: kernel/power/suspend2_core/atomic_copy.c:44:
+volatile static int state1 __nosavedata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#74: FILE: kernel/power/suspend2_core/atomic_copy.c:44:
+volatile static int state1 __nosavedata = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#75: FILE: kernel/power/suspend2_core/atomic_copy.c:45:
+volatile static int state2 __nosavedata = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#75: FILE: kernel/power/suspend2_core/atomic_copy.c:45:
+volatile static int state2 __nosavedata = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#76: FILE: kernel/power/suspend2_core/atomic_copy.c:46:
+volatile static int state3 __nosavedata = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#76: FILE: kernel/power/suspend2_core/atomic_copy.c:46:
+volatile static int state3 __nosavedata = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#77: FILE: kernel/power/suspend2_core/atomic_copy.c:47:
+volatile static int io_speed_save[2][2] __nosavedata;

WARNING:MEMORY_BARRIER: memory barrier without comment
#115: FILE: kernel/power/suspend2_core/atomic_copy.c:85:
+	mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: kernel/power/suspend2_core/atomic_copy.c:92:
+ * Key Assumptions : Will be able to read back secondary pagedir (if $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: kernel/power/suspend2_core/atomic_copy.c:122:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: kernel/power/suspend2_core/atomic_copy.c:126:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#171: FILE: kernel/power/suspend2_core/atomic_copy.c:141:
+	mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: kernel/power/suspend2_core/atomic_copy.c:155:
+ *                   clean up and exit. The state on exiting this routine $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#190: FILE: kernel/power/suspend2_core/atomic_copy.c:160:
+extern void suspend_power_down(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#211: FILE: kernel/power/suspend2_core/atomic_copy.c:181:
+		printk(KERN_EMERG name_suspend

WARNING:MEMORY_BARRIER: memory barrier without comment
#214: FILE: kernel/power/suspend2_core/atomic_copy.c:184:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#223: FILE: kernel/power/suspend2_core/atomic_copy.c:193:
+	unsigned long * origpage;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: kernel/power/suspend2_core/atomic_copy.c:194:
+	unsigned long * copypage;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: kernel/power/suspend2_core/atomic_copy.c:202:
+^I$

CHECK:SPACING: No space is necessary after a cast
#234: FILE: kernel/power/suspend2_core/atomic_copy.c:204:
+		origpage = (unsigned long *) __va(origoffset << PAGE_SHIFT);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#235: FILE: kernel/power/suspend2_core/atomic_copy.c:205:
+		copypage = (unsigned long *) __va(copyoffset << PAGE_SHIFT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: kernel/power/suspend2_core/atomic_copy.c:206:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: kernel/power/suspend2_core/atomic_copy.c:208:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: kernel/power/suspend2_core/atomic_copy.c:213:
+^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: kernel/power/suspend2_core/atomic_copy.c:224:
+	unsigned long * origpage;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#255: FILE: kernel/power/suspend2_core/atomic_copy.c:225:
+	unsigned long * copypage;

CHECK:SPACING: No space is necessary after a cast
#258: FILE: kernel/power/suspend2_core/atomic_copy.c:228:
+		origpage = (unsigned long *) kmap_atomic(pfn_to_page(origoffset), KM_USER1);

CHECK:SPACING: No space is necessary after a cast
#259: FILE: kernel/power/suspend2_core/atomic_copy.c:229:
+		copypage = (unsigned long *) (lowmem_page_address(pfn_to_page(copyoffset)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: kernel/power/suspend2_core/atomic_copy.c:234:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#275: FILE: kernel/power/suspend2_core/atomic_copy.c:245:
+	if (!resume) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#280: FILE: kernel/power/suspend2_core/atomic_copy.c:250:
+		suspend2_save_processor_context();	/* We need to capture registers and memory at "same time" */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#282: FILE: kernel/power/suspend2_core/atomic_copy.c:252:
+		suspend2_suspend_2();		/* If everything goes okay, this function does not return */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: kernel/power/suspend2_core/atomic_copy.c:255:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: kernel/power/suspend2_core/atomic_copy.c:260:
+^I^Iio_speed_save[loop/2][loop%2] = $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#290: FILE: kernel/power/suspend2_core/atomic_copy.c:260:
+		io_speed_save[loop/2][loop%2] = 
 		                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#290: FILE: kernel/power/suspend2_core/atomic_copy.c:260:
+		io_speed_save[loop/2][loop%2] = 
 		                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#291: FILE: kernel/power/suspend2_core/atomic_copy.c:261:
+			suspend_io_time[loop/2][loop%2];
 			                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#291: FILE: kernel/power/suspend2_core/atomic_copy.c:261:
+			suspend_io_time[loop/2][loop%2];
 			                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: kernel/power/suspend2_core/atomic_copy.c:273:
+ * with 4MB page tables. That's why we require have_pse.  $

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#305: FILE: kernel/power/suspend2_core/atomic_copy.c:275:
+ * Critical section here: noone should touch saved memory after
                           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: kernel/power/suspend2_core/atomic_copy.c:286:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#320: FILE: kernel/power/suspend2_core/atomic_copy.c:290:
+	BUG_ON(!irqs_disabled());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: kernel/power/suspend2_core/atomic_copy.c:291:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#323: FILE: kernel/power/suspend2_core/atomic_copy.c:293:
+	 * from suspend time. Let's copy back those remaining Highmem pages. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#327: FILE: kernel/power/suspend2_core/atomic_copy.c:297:
+	BUG_ON(!irqs_disabled());

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#338: FILE: kernel/power/suspend2_core/atomic_copy.c:308:
+		suspend_io_time[loop/2][loop%2] =
 		                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#338: FILE: kernel/power/suspend2_core/atomic_copy.c:308:
+		suspend_io_time[loop/2][loop%2] =
 		                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#339: FILE: kernel/power/suspend2_core/atomic_copy.c:309:
+			io_speed_save[loop/2][loop%2];
 			                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#339: FILE: kernel/power/suspend2_core/atomic_copy.c:309:
+			io_speed_save[loop/2][loop%2];
 			                          ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: kernel/power/suspend2_core/atomic_copy.c:317:
+ * ^I^Ionce did) because we can't be sure what side effects it has. On$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: kernel/power/suspend2_core/atomic_copy.c:318:
+ * ^I^Imy old Duron, with 3DNOW, kernel_fpu_begin increments preempt$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#349: FILE: kernel/power/suspend2_core/atomic_copy.c:319:
+ * ^I^Icount, making our preempt count at resume time 4 instead of 3.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: kernel/power/suspend2_core/atomic_copy.c:320:
+ * ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#350: FILE: kernel/power/suspend2_core/atomic_copy.c:320:
+ * ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#351: FILE: kernel/power/suspend2_core/atomic_copy.c:321:
+ * ^I^IWe don't want to call kmap_atomic unconditionally because it has$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#352: FILE: kernel/power/suspend2_core/atomic_copy.c:322:
+ * ^I^Ithe side effect of incrementing the preempt count, which will$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#353: FILE: kernel/power/suspend2_core/atomic_copy.c:323:
+ * ^I^Ileave it one too high post resume (the page containing the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: kernel/power/suspend2_core/atomic_copy.c:324:
+ * ^I^Ipreempt count will be copied after its incremented. This is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: kernel/power/suspend2_core/atomic_copy.c:325:
+ * ^I^Iessentially the same problem.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#363: FILE: kernel/power/suspend2_core/atomic_copy.c:333:
+		unsigned long * origvirt, *copyvirt;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: kernel/power/suspend2_core/atomic_copy.c:334:
+		struct page * origpage;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: kernel/power/suspend2_core/atomic_copy.c:341:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#372: FILE: kernel/power/suspend2_core/atomic_copy.c:342:
+		copyvirt = (unsigned long *) page_address(pfn_to_page(dest_index));

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: kernel/power/suspend2_core/atomic_copy.c:344:
+^I       ^Iif (PageHighMem(origpage))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#374: FILE: kernel/power/suspend2_core/atomic_copy.c:344:
+^I       ^Iif (PageHighMem(origpage))$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: kernel/power/suspend2_core/atomic_copy.c:353:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#384: FILE: kernel/power/suspend2_core/atomic_copy.c:354:
+		
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#403: FILE: kernel/power/suspend2_core/atomic_copy.c:373:
+		struct page * origpage, * copypage;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#403: FILE: kernel/power/suspend2_core/atomic_copy.c:373:
+		struct page * origpage, * copypage;
 		                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: kernel/power/suspend2_core/atomic_copy.c:380:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: kernel/power/suspend2_core/atomic_copy.c:381:
+^I       ^Iif (!PageHighMem(origpage)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: kernel/power/suspend2_core/atomic_copy.c:381:
+^I       ^Iif (!PageHighMem(origpage)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!orig_was_mapped'
#413: FILE: kernel/power/suspend2_core/atomic_copy.c:383:
+			if ((!orig_was_mapped) &&
+			    (!test_suspend_state(SUSPEND_NOW_RESUMING)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!copy_was_mapped'
#419: FILE: kernel/power/suspend2_core/atomic_copy.c:389:
+		if ((!copy_was_mapped) &&
+		    (!test_suspend_state(SUSPEND_NOW_RESUMING)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#433: FILE: kernel/power/suspend2_core/atomic_copy.c:403:
+	int i;
+	for (i = 0; i < max_mapnr; i++) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#434: FILE: kernel/power/suspend2_core/atomic_copy.c:404:
+		struct page * page = pfn_to_page(i);

WARNING:LINE_SPACING: Missing a blank line after declarations
#435: FILE: kernel/power/suspend2_core/atomic_copy.c:405:
+		struct page * page = pfn_to_page(i);
+		if (PageUnmap(page))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: kernel/power/suspend2_core/atomic_copy.c:420:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: kernel/power/suspend2_core/atomic_copy.c:422:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: kernel/power/suspend2_core/atomic_copy.c:424:
+	suspend2_prepare_status(0, 0,
+		"Copying original kernel back");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: kernel/power/suspend2_core/atomic_copy.c:425:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#458: FILE: kernel/power/suspend2_core/atomic_copy.c:428:
+	BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: kernel/power/suspend2_core/atomic_copy.c:429:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#463: FILE: kernel/power/suspend2_core/atomic_copy.c:433:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#468: FILE: kernel/power/suspend2_core/atomic_copy.c:438:
+	struct page * this_page, * next_page;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#468: FILE: kernel/power/suspend2_core/atomic_copy.c:438:
+	struct page * this_page, * next_page;
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: kernel/power/suspend2_core/atomic_copy.c:439:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#472: FILE: kernel/power/suspend2_core/atomic_copy.c:442:
+	 * copy-back thread is non-conflicting */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#474: FILE: kernel/power/suspend2_core/atomic_copy.c:444:
+		struct page * page = virt_to_page(next);

WARNING:LINE_SPACING: Missing a blank line after declarations
#475: FILE: kernel/power/suspend2_core/atomic_copy.c:445:
+		struct page * page = virt_to_page(next);
+		list_add(&page->lru, &non_conflicting_pages);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#484: FILE: kernel/power/suspend2_core/atomic_copy.c:454:
+	BUG_ON((kernel_thread(__suspend_atomic_restore, 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: kernel/power/suspend2_core/atomic_copy.c:455:
+	BUG_ON((kernel_thread(__suspend_atomic_restore, 0,
+			CLONE_KERNEL) < 0));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: kernel/power/suspend2_core/atomic_copy.c:458:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: kernel/power/suspend2_core/atomic_copy.c:460:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#491: FILE: kernel/power/suspend2_core/atomic_copy.c:461:
+	while(1) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#500: FILE: kernel/power/suspend2_core/atomic_copy.h:1:
+extern inline void move_stack_to_nonconflicing_area(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#501: FILE: kernel/power/suspend2_core/atomic_copy.h:2:
+extern int save_image_part1(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#502: FILE: kernel/power/suspend2_core/atomic_copy.h:3:
+extern void suspend_atomic_restore(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 35 warnings, 23 checks, 468 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
