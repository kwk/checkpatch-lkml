WARNING:TYPO_SPELLING: 'tyes' may be misspelled - perhaps 'types'?
#36: 
more uniform with the dir and nod tyes.
                                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
diff -uNr linux-2.6.8/usr/gen_init_cpio.c linux-2.6.8-cpio_list/usr/gen_init_cpio.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: usr/gen_init_cpio.c:1:
+#define _GNU_SOURCE

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: usr/gen_init_cpio.c:96:
+static int cpio_mkdir(const char *name, unsigned int mode,
 		       uid_t uid, gid_t gid)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#130: FILE: usr/gen_init_cpio.c:130:
+	if (4 != sscanf(line, "%" str(PATH_MAX) "s %o %d %d", name, &mode, &uid, &gid)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: usr/gen_init_cpio.c:140:
+static int cpio_mknod(const char *name, unsigned int mode,
+		       uid_t uid, gid_t gid, char dev_type,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#162: FILE: usr/gen_init_cpio.c:183:
+	if (7 != sscanf(line, "%" str(PATH_MAX) "s %o %d %d %c %u %u",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: usr/gen_init_cpio.c:184:
+	if (7 != sscanf(line, "%" str(PATH_MAX) "s %o %d %d %c %u %u",
+			 name, &mode, &uid, &gid, &dev_type, &maj, &min)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: usr/gen_init_cpio.c:195:
+static int cpio_mkfile(const char *name, const char *location,
 			unsigned int mode, uid_t uid, gid_t gid)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: usr/gen_init_cpio.c:207:
+	retval = stat (location, &buf);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: usr/gen_init_cpio.c:209:
+		fprintf (stderr, "File %s could not be located\n", location);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: usr/gen_init_cpio.c:213:
+	file = open (location, O_RDONLY);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: usr/gen_init_cpio.c:215:
+		fprintf (stderr, "File %s could not be opened for reading\n", location);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: usr/gen_init_cpio.c:227:
+		fprintf (stderr, "Can not read %s file\n", location);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#226: FILE: usr/gen_init_cpio.c:245:
+		(unsigned)strlen(name) + 1,/* namesize */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#248: FILE: usr/gen_init_cpio.c:258:
+	if (filebuf) free(filebuf);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#249: FILE: usr/gen_init_cpio.c:259:
+	if (file >= 0) close(file);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#262: FILE: usr/gen_init_cpio.c:272:
+	if (5 != sscanf(line, "%" str(PATH_MAX) "s %" str(PATH_MAX) "s %o %d %d", name, location, &mode, &uid, &gid)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#262: FILE: usr/gen_init_cpio.c:272:
+	if (5 != sscanf(line, "%" str(PATH_MAX) "s %" str(PATH_MAX) "s %o %d %d", name, location, &mode, &uid, &gid)) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#279: FILE: usr/gen_init_cpio.c:289:
+		"file <name> <location> <mode> <uid> <gid> \n"

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#329: FILE: usr/gen_init_cpio.c:335:
+	if (2 != argc) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#334: FILE: usr/gen_init_cpio.c:340:
+	if (! (cpio_list = fopen(argv[1], "r"))) {
 	    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#334: FILE: usr/gen_init_cpio.c:340:
+	if (! (cpio_list = fopen(argv[1], "r"))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#351: FILE: usr/gen_init_cpio.c:352:
+		if (! (type = strtok(line, " \t"))) {
 		    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#351: FILE: usr/gen_init_cpio.c:352:
+		if (! (type = strtok(line, " \t"))) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#358: FILE: usr/gen_init_cpio.c:359:
+		if (! (args = strtok(NULL, "\n"))) {
 		    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#358: FILE: usr/gen_init_cpio.c:359:
+		if (! (args = strtok(NULL, "\n"))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#367: FILE: usr/gen_init_cpio.c:368:
+			int rc;
+			if (! strcmp(line, file_type_table[type_idx].type)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#367: FILE: usr/gen_init_cpio.c:368:
+			if (! strcmp(line, file_type_table[type_idx].type)) {
 			    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#368: FILE: usr/gen_init_cpio.c:369:
+				if ((rc = file_type_table[type_idx].handler(args))) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#376: FILE: usr/gen_init_cpio.c:377:
+		if (NULL == file_type_table[type_idx].type) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#383: FILE: usr/gen_init_cpio.c:384:
+	if (line) free(line);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000249003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 17 warnings, 4 checks, 329 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000249003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
