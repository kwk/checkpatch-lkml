WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> You need to wrap this with a read_lock(&tasklist_lock) to be safe, I think.

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: kernel/sys.c:1749:
+        int res;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: kernel/sys.c:1749:
+        int res;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: kernel/sys.c:1750:
+        if (who != RUSAGE_SELF && who != RUSAGE_CHILDREN) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#55: FILE: kernel/sys.c:1750:
+        int res;
+        if (who != RUSAGE_SELF && who != RUSAGE_CHILDREN) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: kernel/sys.c:1750:
+        if (who != RUSAGE_SELF && who != RUSAGE_CHILDREN) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: kernel/sys.c:1751:
+                struct task_struct* tsk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: kernel/sys.c:1751:
+                struct task_struct* tsk;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#56: FILE: kernel/sys.c:1751:
+                struct task_struct* tsk;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: kernel/sys.c:1752:
+                read_lock(&tasklist_lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#57: FILE: kernel/sys.c:1752:
+                struct task_struct* tsk;
+                read_lock(&tasklist_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: kernel/sys.c:1752:
+                read_lock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: kernel/sys.c:1753:
+                tsk = find_task_by_pid(who);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: kernel/sys.c:1753:
+                tsk = find_task_by_pid(who);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: kernel/sys.c:1754:
+                if (tsk == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: kernel/sys.c:1754:
+                if (tsk == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tsk"
#59: FILE: kernel/sys.c:1754:
+                if (tsk == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: kernel/sys.c:1755:
+                        read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: kernel/sys.c:1755:
+                        read_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: kernel/sys.c:1756:
+                        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: kernel/sys.c:1756:
+                        return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: kernel/sys.c:1757:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: kernel/sys.c:1757:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: kernel/sys.c:1758:
+                res = getrusage(tsk, RUSAGE_SELF, ru);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: kernel/sys.c:1758:
+                res = getrusage(tsk, RUSAGE_SELF, ru);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: kernel/sys.c:1759:
+                read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: kernel/sys.c:1759:
+                read_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: kernel/sys.c:1760:
+                return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: kernel/sys.c:1760:
+                return res;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: kernel/sys.c:1761:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: kernel/sys.c:1761:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: kernel/sys.c:1762:
+                res = getrusage(current, who, ru);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: kernel/sys.c:1762:
+                res = getrusage(current, who, ru);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: kernel/sys.c:1763:
+                return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: kernel/sys.c:1763:
+                return res;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: kernel/sys.c:1764:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: kernel/sys.c:1764:
+        }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135731.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 19 warnings, 1 checks, 25 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135731.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
