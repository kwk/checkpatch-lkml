WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#42: FILE: drivers/net/Kconfig:2199:
+config TSI108_ETH
+	   tristate "Tundra TSI108 gigabit Ethernet support"
+	   depends on TSI108_BRIDGE
+	   help
+	     This driver supports Tundra TSI108 gigabit Ethernet ports.
+	     To compile this driver as a module, choose M here: the module
+	     will be called tsi108_eth.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#66: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: drivers/net/tsi108_eth.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: drivers/net/tsi108_eth.c:2:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#72: FILE: drivers/net/tsi108_eth.c:2:
+/*******************************************************************************
+  

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: drivers/net/tsi108_eth.c:4:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/net/tsi108_eth.c:5:
+  This program is free software; you can redistribute it and/or modify it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: drivers/net/tsi108_eth.c:6:
+  under the terms of the GNU General Public License as published by the Free $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: drivers/net/tsi108_eth.c:7:
+  Software Foundation; either version 2 of the License, or (at your option) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: drivers/net/tsi108_eth.c:9:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: drivers/net/tsi108_eth.c:10:
+  This program is distributed in the hope that it will be useful, but WITHOUT $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: drivers/net/tsi108_eth.c:11:
+  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/net/tsi108_eth.c:12:
+  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: drivers/net/tsi108_eth.c:14:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/net/tsi108_eth.c:16:
+  this program; if not, write to the Free Software Foundation, Inc., 59 $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#86: FILE: drivers/net/tsi108_eth.c:16:
+  this program; if not, write to the Free Software Foundation, Inc., 59 $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/net/tsi108_eth.c:21:
+/* This driver is based on the driver code originally developed^I$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#118: FILE: drivers/net/tsi108_eth.c:48:
+#include <asm/io.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: drivers/net/tsi108_eth.c:60:
+#define DBG(fmt...) do { printk(fmt); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#130: FILE: drivers/net/tsi108_eth.c:60:
+#define DBG(fmt...) do { printk(fmt); } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#130: FILE: drivers/net/tsi108_eth.c:60:
+#define DBG(fmt...) do { printk(fmt); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required before the open parenthesis '('
#132: FILE: drivers/net/tsi108_eth.c:62:
+#define DBG(fmt...) do { } while(0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#135: FILE: drivers/net/tsi108_eth.c:65:
+typedef struct net_device net_device;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#136: FILE: drivers/net/tsi108_eth.c:66:
+typedef struct sk_buff sk_buff;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#153: FILE: drivers/net/tsi108_eth.c:83:
+#define CHECK_PHY_INTERVAL (HZ/2)
                               ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#158: FILE: drivers/net/tsi108_eth.c:88:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#159: FILE: drivers/net/tsi108_eth.c:89:
+	volatile u32 regs;	/* Base of normal regs */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#160: FILE: drivers/net/tsi108_eth.c:90:
+	volatile u32 phyregs;	/* Base of register bank used for PHY access */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: drivers/net/tsi108_eth.c:101:
+				 * interrupt condition that has been cleared */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#179: FILE: drivers/net/tsi108_eth.c:109:
+	 * explicitly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#187: FILE: drivers/net/tsi108_eth.c:117:
+	 * yet been configured). */

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#195: FILE: drivers/net/tsi108_eth.c:125:
+	sk_buff *txskbs[TSI108_TXRING_LEN];
 	        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#196: FILE: drivers/net/tsi108_eth.c:126:
+	sk_buff *rxskbs[TSI108_RXRING_LEN];
 	        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#241: FILE: drivers/net/tsi108_eth.c:171:
+static void dump_eth_one(net_device * dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#245: FILE: drivers/net/tsi108_eth.c:175:
+	printk("Dumping %s...\n", dev->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#246: FILE: drivers/net/tsi108_eth.c:176:
+	printk("intstat %x intmask %x phy_ok %d"

WARNING:SPLIT_STRING: quoted string split across lines
#247: FILE: drivers/net/tsi108_eth.c:177:
+	printk("intstat %x intmask %x phy_ok %d"
+	       " link %d speed %d duplex %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#252: FILE: drivers/net/tsi108_eth.c:182:
+	printk("TX: head %d, tail %d, free %d, stat %x, estat %x, err %x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#258: FILE: drivers/net/tsi108_eth.c:188:
+	printk("RX: head %d, tail %d, free %d, stat %x,"

WARNING:SPLIT_STRING: quoted string split across lines
#259: FILE: drivers/net/tsi108_eth.c:189:
+	printk("RX: head %d, tail %d, free %d, stat %x,"
+	       " estat %x, err %x, pending %d\n\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: drivers/net/tsi108_eth.c:203:
+static inline u16 tsi108_read_mii(tsi108_prv_data * data, int reg, int *status)

WARNING:MEMORY_BARRIER: memory barrier without comment
#281: FILE: drivers/net/tsi108_eth.c:211:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#283: FILE: drivers/net/tsi108_eth.c:213:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#285: FILE: drivers/net/tsi108_eth.c:215:
+	mb();

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#290: FILE: drivers/net/tsi108_eth.c:220:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#308: FILE: drivers/net/tsi108_eth.c:238:
+static inline void tsi108_write_mii(tsi108_prv_data * data, int reg, u16 val)

WARNING:MEMORY_BARRIER: memory barrier without comment
#313: FILE: drivers/net/tsi108_eth.c:243:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#315: FILE: drivers/net/tsi108_eth.c:245:
+	mb();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#316: FILE: drivers/net/tsi108_eth.c:246:
+	while (TSI108_ETH_READ_PHYREG(TSI108_MAC_MII_IND) &
+	       TSI108_MAC_MII_IND_BUSY) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited before semicolon
#317: FILE: drivers/net/tsi108_eth.c:247:
+	       TSI108_MAC_MII_IND_BUSY) ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#320: FILE: drivers/net/tsi108_eth.c:250:
+static inline void tsi108_write_tbi(tsi108_prv_data * data, int reg, u16 val)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#322: FILE: drivers/net/tsi108_eth.c:252:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#326: FILE: drivers/net/tsi108_eth.c:256:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#329: FILE: drivers/net/tsi108_eth.c:259:
+	mb();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#330: FILE: drivers/net/tsi108_eth.c:260:
+	while (TSI108_ETH_READ_REG(TSI108_MAC_MII_IND) &
+	       TSI108_MAC_MII_IND_BUSY) ;

WARNING:SPACING: space prohibited before semicolon
#331: FILE: drivers/net/tsi108_eth.c:261:
+	       TSI108_MAC_MII_IND_BUSY) ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#334: FILE: drivers/net/tsi108_eth.c:264:
+static void tsi108_check_phy(net_device * dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#357: FILE: drivers/net/tsi108_eth.c:287:
+			printk(KERN_NOTICE "%s : link is down\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#408: FILE: drivers/net/tsi108_eth.c:338:
+				printk(KERN_ERR "PHY reported invalid speed,"

WARNING:MEMORY_BARRIER: memory barrier without comment
#432: FILE: drivers/net/tsi108_eth.c:362:
+			mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#434: FILE: drivers/net/tsi108_eth.c:364:
+			mb();

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#437: FILE: drivers/net/tsi108_eth.c:367:
+
+	}

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#447: FILE: drivers/net/tsi108_eth.c:377:
+		if (netif_queue_stopped(dev)
+		    && is_valid_ether_addr(dev->dev_addr) && data->txfree)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#452: FILE: drivers/net/tsi108_eth.c:382:
+		printk("%s : link is up: %dMb %s-duplex\n",

WARNING:INDENTED_LABEL: labels should not be indented
#458: FILE: drivers/net/tsi108_eth.c:388:
+      out:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#470: FILE: drivers/net/tsi108_eth.c:400:
+static void tsi108_stat_carry(net_device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#550: FILE: drivers/net/tsi108_eth.c:480:
+tsi108_read_stat(tsi108_prv_data * data, int reg, int carry_bit,

WARNING:INDENTED_LABEL: labels should not be indented
#561: FILE: drivers/net/tsi108_eth.c:491:
+      again:

WARNING:MEMORY_BARRIER: memory barrier without comment
#564: FILE: drivers/net/tsi108_eth.c:494:
+	rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#574: FILE: drivers/net/tsi108_eth.c:504:
+		mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#582: FILE: drivers/net/tsi108_eth.c:512:
+static struct net_device_stats *tsi108_get_stats(net_device * dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#587: FILE: drivers/net/tsi108_eth.c:517:
+	tsi108_prv_data *data = netdev_priv(dev);
+	spin_lock_irq(&data->misclock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#692: FILE: drivers/net/tsi108_eth.c:622:
+static void tsi108_restart_rx(tsi108_prv_data * data, net_device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#692: FILE: drivers/net/tsi108_eth.c:622:
+static void tsi108_restart_rx(tsi108_prv_data * data, net_device * dev)

WARNING:MEMORY_BARRIER: memory barrier without comment
#697: FILE: drivers/net/tsi108_eth.c:627:
+	wmb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#702: FILE: drivers/net/tsi108_eth.c:632:
+static void tsi108_restart_tx(tsi108_prv_data * data)

WARNING:MEMORY_BARRIER: memory barrier without comment
#707: FILE: drivers/net/tsi108_eth.c:637:
+	wmb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#715: FILE: drivers/net/tsi108_eth.c:645:
+static void tsi108_check_for_completed_tx(net_device * dev)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#731: FILE: drivers/net/tsi108_eth.c:661:
+			printk("%s: bad tx packet, misc %x\n",

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#744: FILE: drivers/net/tsi108_eth.c:674:
+	if (release) {
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#746: FILE: drivers/net/tsi108_eth.c:676:
+		if (netif_queue_stopped(dev)
+		    && is_valid_ether_addr(dev->dev_addr) && data->link_up)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#751: FILE: drivers/net/tsi108_eth.c:681:
+static int tsi108_send_packet(sk_buff * skb, net_device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#751: FILE: drivers/net/tsi108_eth.c:681:
+static int tsi108_send_packet(sk_buff * skb, net_device * dev)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#762: FILE: drivers/net/tsi108_eth.c:692:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#769: FILE: drivers/net/tsi108_eth.c:699:
+		printk(KERN_ERR "%s: Transmit while PHY is down!\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#772: FILE: drivers/net/tsi108_eth.c:702:
+		printk(KERN_ERR "%s: Transmit while link is down!\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#782: FILE: drivers/net/tsi108_eth.c:712:
+			printk(KERN_ERR "%s: Transmit with full tx ring!\n",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#787: FILE: drivers/net/tsi108_eth.c:717:
+	if (data->txfree - frags < MAX_SKB_FRAGS + 1) {
+		netif_stop_queue(dev);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: drivers/net/tsi108_eth.c:731:
+^I^I * link, the tx interrupts are kept to a reasonable level. $

WARNING:LINE_SPACING: Missing a blank line after declarations
#832: FILE: drivers/net/tsi108_eth.c:762:
+			int i;
+			printk("%s: Tx Frame contents (%d)\n", dev->name,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#832: FILE: drivers/net/tsi108_eth.c:762:
+			printk("%s: Tx Frame contents (%d)\n", dev->name,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#835: FILE: drivers/net/tsi108_eth.c:765:
+				printk(" %2.2x", skb->data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#836: FILE: drivers/net/tsi108_eth.c:766:
+			printk(".\n");

WARNING:MEMORY_BARRIER: memory barrier without comment
#840: FILE: drivers/net/tsi108_eth.c:770:
+		mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#860: FILE: drivers/net/tsi108_eth.c:790:
+static int tsi108_check_for_completed_rx(net_device * dev, int budget)

WARNING:LINE_SPACING: Missing a blank line after declarations
#893: FILE: drivers/net/tsi108_eth.c:823:
+			int i;
+			printk("%s: Rx Frame contents (%d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#893: FILE: drivers/net/tsi108_eth.c:823:
+			printk("%s: Rx Frame contents (%d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#896: FILE: drivers/net/tsi108_eth.c:826:
+				printk(" %2.2x", skb->data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#897: FILE: drivers/net/tsi108_eth.c:827:
+			printk(".\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#911: FILE: drivers/net/tsi108_eth.c:841:
+static int tsi108_refill_rx(net_device * dev, int budget)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#920: FILE: drivers/net/tsi108_eth.c:850:
+		data->rxskbs[rx] = skb = dev_alloc_skb(TSI108_RXBUF_SIZE + 2);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:MEMORY_BARRIER: memory barrier without comment
#934: FILE: drivers/net/tsi108_eth.c:864:
+		mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#942: FILE: drivers/net/tsi108_eth.c:872:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#951: FILE: drivers/net/tsi108_eth.c:881:
+static int tsi108_poll(net_device * dev, int *budget)

WARNING:LINE_SPACING: Missing a blank line after declarations
#985: FILE: drivers/net/tsi108_eth.c:915:
+		u32 err = TSI108_ETH_READ_REG(TSI108_EC_RXERR);
+		TSI108_ETH_WRITE_REG(TSI108_EC_RXERR, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#989: FILE: drivers/net/tsi108_eth.c:919:
+				printk(KERN_DEBUG "%s: RX error %x\n",

WARNING:MEMORY_BARRIER: memory barrier without comment
#1021: FILE: drivers/net/tsi108_eth.c:951:
+		mb();

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1025: FILE: drivers/net/tsi108_eth.c:955:
+		return 0;
+	} else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1032: FILE: drivers/net/tsi108_eth.c:962:
+static void tsi108_rx_int(net_device * dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1039: FILE: drivers/net/tsi108_eth.c:969:
+^I * unmasked them but not cleared LINK_STATE_SCHED).  $

WARNING:MEMORY_BARRIER: memory barrier without comment
#1058: FILE: drivers/net/tsi108_eth.c:988:
+		mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1086: FILE: drivers/net/tsi108_eth.c:1016:
+			mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1098: FILE: drivers/net/tsi108_eth.c:1028:
+static void tsi108_check_rxring(net_device * dev)

WARNING:TYPO_SPELLING: 'caling' may be misspelled - perhaps 'calling'?
#1102: FILE: drivers/net/tsi108_eth.c:1032:
+	/* A poll is scheduled, as opposed to caling tsi108_refill_rx 
 	                                      ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1102: FILE: drivers/net/tsi108_eth.c:1032:
+^I/* A poll is scheduled, as opposed to caling tsi108_refill_rx $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1111: FILE: drivers/net/tsi108_eth.c:1041:
+static void tsi108_tx_int(net_device * dev)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1116: FILE: drivers/net/tsi108_eth.c:1046:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1118: FILE: drivers/net/tsi108_eth.c:1048:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1121: FILE: drivers/net/tsi108_eth.c:1051:
+	mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#1124: FILE: drivers/net/tsi108_eth.c:1054:
+		u32 err = TSI108_ETH_READ_REG(TSI108_EC_TXERR);
+		TSI108_ETH_WRITE_REG(TSI108_EC_TXERR, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1127: FILE: drivers/net/tsi108_eth.c:1057:
+			printk(KERN_ERR "%s: TX error %x\n", dev->name, err);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1137: FILE: drivers/net/tsi108_eth.c:1067:
+static irqreturn_t tsi108_irq_one(net_device * dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1157: FILE: drivers/net/tsi108_eth.c:1087:
+			printk(KERN_DEBUG "%s: SFN error\n", dev->name);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'IRQ_TSI108_GIGE0 != irq'
#1171: FILE: drivers/net/tsi108_eth.c:1101:
+	if ((IRQ_TSI108_GIGE0 != irq) && (IRQ_TSI108_GIGE1 != irq))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'IRQ_TSI108_GIGE1 != irq'
#1171: FILE: drivers/net/tsi108_eth.c:1101:
+	if ((IRQ_TSI108_GIGE0 != irq) && (IRQ_TSI108_GIGE1 != irq))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1171: FILE: drivers/net/tsi108_eth.c:1101:
+	if ((IRQ_TSI108_GIGE0 != irq) && (IRQ_TSI108_GIGE1 != irq))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1177: FILE: drivers/net/tsi108_eth.c:1107:
+static void tsi108_stop_ethernet(net_device * dev)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1187: FILE: drivers/net/tsi108_eth.c:1117:
+	while (TSI108_ETH_READ_REG(TSI108_EC_TXSTAT) &
+	       TSI108_EC_TXSTAT_ACTIVE) ;

WARNING:SPACING: space prohibited before semicolon
#1188: FILE: drivers/net/tsi108_eth.c:1118:
+	       TSI108_EC_TXSTAT_ACTIVE) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1189: FILE: drivers/net/tsi108_eth.c:1119:
+	while (TSI108_ETH_READ_REG(TSI108_EC_RXSTAT) &
+	       TSI108_EC_RXSTAT_ACTIVE) ;

WARNING:SPACING: space prohibited before semicolon
#1190: FILE: drivers/net/tsi108_eth.c:1120:
+	       TSI108_EC_RXSTAT_ACTIVE) ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1193: FILE: drivers/net/tsi108_eth.c:1123:
+static void tsi108_reset_ether(tsi108_prv_data * data)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1196: FILE: drivers/net/tsi108_eth.c:1126:
+	udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1200: FILE: drivers/net/tsi108_eth.c:1130:
+	udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1206: FILE: drivers/net/tsi108_eth.c:1136:
+	udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1212: FILE: drivers/net/tsi108_eth.c:1142:
+	udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1220: FILE: drivers/net/tsi108_eth.c:1150:
+	udelay(100);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1231: FILE: drivers/net/tsi108_eth.c:1161:
+static int tsi108_get_mac(net_device * dev)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1247: FILE: drivers/net/tsi108_eth.c:1177:
+		if (0x8 == data->phy)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1269: FILE: drivers/net/tsi108_eth.c:1199:
+		printk("KERN_ERR: word1: %08x, word2: %08x\n", word1, word2);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1276: FILE: drivers/net/tsi108_eth.c:1206:
+static int tsi108_set_mac(net_device * dev, void *addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1308: FILE: drivers/net/tsi108_eth.c:1238:
+static void tsi108_set_rx_mode(net_device * dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1324: FILE: drivers/net/tsi108_eth.c:1254:
+		struct dev_mc_list *mc = dev->mc_list;
+		rxcfg |= TSI108_EC_RXCFG_MFE | TSI108_EC_RXCFG_MC_HASH;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1337: FILE: drivers/net/tsi108_eth.c:1267:
+				printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#1339: FILE: drivers/net/tsi108_eth.c:1269:
+				       "%s: got multicast address of length %d "
+				       "instead of 6.\n", dev->name,

WARNING:MEMORY_BARRIER: memory barrier without comment
#1355: FILE: drivers/net/tsi108_eth.c:1285:
+			mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1358: FILE: drivers/net/tsi108_eth.c:1288:
+			mb();

WARNING:INDENTED_LABEL: labels should not be indented
#1362: FILE: drivers/net/tsi108_eth.c:1292:
+      out:

WARNING:MEMORY_BARRIER: memory barrier without comment
#1363: FILE: drivers/net/tsi108_eth.c:1293:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1367: FILE: drivers/net/tsi108_eth.c:1297:
+static void tsi108_init_phy(net_device * dev)

CHECK:CAMELCASE: Avoid CamelCase: <phyVal>
#1371: FILE: drivers/net/tsi108_eth.c:1301:
+	u16 phyVal = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:MEMORY_BARRIER: memory barrier without comment
#1376: FILE: drivers/net/tsi108_eth.c:1306:
+	mb();

WARNING:SPACING: space prohibited before semicolon
#1377: FILE: drivers/net/tsi108_eth.c:1307:
+	while (tsi108_read_mii(data, PHY_CTRL, NULL) & PHY_CTRL_RESET) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1377: FILE: drivers/net/tsi108_eth.c:1307:
+	while (tsi108_read_mii(data, PHY_CTRL, NULL) & PHY_CTRL_RESET) ;

WARNING:MEMORY_BARRIER: memory barrier without comment
#1383: FILE: drivers/net/tsi108_eth.c:1313:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1389: FILE: drivers/net/tsi108_eth.c:1319:
+	mb();

WARNING:SPACING: space prohibited before semicolon
#1390: FILE: drivers/net/tsi108_eth.c:1320:
+	while (tsi108_read_mii(data, PHY_CTRL, NULL) & PHY_CTRL_AUTONEG_START) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1390: FILE: drivers/net/tsi108_eth.c:1320:
+	while (tsi108_read_mii(data, PHY_CTRL, NULL) & PHY_CTRL_AUTONEG_START) ;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1414: FILE: drivers/net/tsi108_eth.c:1344:
+	printk(KERN_DEBUG "PHY_STAT reg contains %08x\n", phyVal);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1436: FILE: drivers/net/tsi108_eth.c:1366:
+	printk(KERN_DEBUG "Inside tsi108_open()!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tsi108_open', this function's name, in a string
#1436: FILE: drivers/net/tsi108_eth.c:1366:
+	printk(KERN_DEBUG "Inside tsi108_open()!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1440: FILE: drivers/net/tsi108_eth.c:1370:
+		printk(KERN_ERR "tsi108_eth%d: Could not allocate IRQ%d.\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1443: FILE: drivers/net/tsi108_eth.c:1373:
+		return i;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1445: FILE: drivers/net/tsi108_eth.c:1375:
+		printk(KERN_NOTICE

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tsi108_open', this function's name, in a string
#1446: FILE: drivers/net/tsi108_eth.c:1376:
+		       "tsi108_open : Port %d Assigned IRQ %d to %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1453: FILE: drivers/net/tsi108_eth.c:1383:
+		printk(KERN_DEBUG

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1456: FILE: drivers/net/tsi108_eth.c:1386:
+		return -ENOMEM;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1463: FILE: drivers/net/tsi108_eth.c:1393:
+		printk(KERN_DEBUG

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1467: FILE: drivers/net/tsi108_eth.c:1397:
+		return -ENOMEM;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1490: FILE: drivers/net/tsi108_eth.c:1420:
+			printk(KERN_WARNING

WARNING:MEMORY_BARRIER: memory barrier without comment
#1529: FILE: drivers/net/tsi108_eth.c:1459:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1543: FILE: drivers/net/tsi108_eth.c:1473:
+static int tsi108_close(net_device * dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1551: FILE: drivers/net/tsi108_eth.c:1481:
+	printk(KERN_DEBUG "Inside tsi108_ifdown!\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1563: FILE: drivers/net/tsi108_eth.c:1493:
+		struct sk_buff *skb;
+		skb = data->txskbs[tx];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1594: FILE: drivers/net/tsi108_eth.c:1524:
+static void tsi108_init_mac(net_device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1655: FILE: drivers/net/tsi108_eth.c:1585:
+static int tsi108_ioctl(net_device * dev, struct ifreq *rq, int cmd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1689: FILE: drivers/net/tsi108_eth.c:1619:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1690: FILE: drivers/net/tsi108_eth.c:1620:
+	einfo = ( hw_info *) pdev->dev.platform_data;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1690: FILE: drivers/net/tsi108_eth.c:1620:
+	einfo = ( hw_info *) pdev->dev.platform_data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1691: FILE: drivers/net/tsi108_eth.c:1621:
+^I$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1692: FILE: drivers/net/tsi108_eth.c:1622:
+	if (NULL == einfo) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1693: FILE: drivers/net/tsi108_eth.c:1623:
+		printk(KERN_ERR "tsi-eth %d: Missing additional data!\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1702: FILE: drivers/net/tsi108_eth.c:1632:
+		printk("tsi108_eth: Could not allocate a device structure\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1706: FILE: drivers/net/tsi108_eth.c:1636:
+	printk("tsi108_eth%d: probe...\n", pdev->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1711: FILE: drivers/net/tsi108_eth.c:1641:
+	DBG("tsi108_eth%d: regs:phyresgs:phy:irq_num=0x%x:0x%x:0x%x:0x%x\n",
+			pdev->id, einfo->regs, einfo->phyregs,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1715: FILE: drivers/net/tsi108_eth.c:1645:
+^Idata->phyregs = (u32)ioremap(einfo->phyregs, 0x400); ^I/*FIX ME */$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1750: FILE: drivers/net/tsi108_eth.c:1680:
+		printk(KERN_ERR "%s: Invalid MAC address.  Please correct.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1760: FILE: drivers/net/tsi108_eth.c:1690:
+	printk(KERN_INFO "%s: Tsi108 Gigabit Ethernet, MAC: "

WARNING:SPLIT_STRING: quoted string split across lines
#1761: FILE: drivers/net/tsi108_eth.c:1691:
+	printk(KERN_INFO "%s: Tsi108 Gigabit Ethernet, MAC: "
+	       "%02x:%02x:%02x:%02x:%02x:%02x\n", dev->name,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1775: FILE: drivers/net/tsi108_eth.c:1705:
+ * Thus, we have to do it using a timer. $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1792: FILE: drivers/net/tsi108_eth.c:1722:
+	int ret;
+	ret = platform_driver_register (&tsi_eth_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1792: FILE: drivers/net/tsi108_eth.c:1722:
+	ret = platform_driver_register (&tsi_eth_driver);

ERROR:SPACING: space required before the open brace '{'
#1793: FILE: drivers/net/tsi108_eth.c:1723:
+	if (ret < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1794: FILE: drivers/net/tsi108_eth.c:1724:
+		printk("tsi108_ether_init: error initializing ethernet "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tsi108_ether_init', this function's name, in a string
#1794: FILE: drivers/net/tsi108_eth.c:1724:
+		printk("tsi108_ether_init: error initializing ethernet "

WARNING:SPLIT_STRING: quoted string split across lines
#1795: FILE: drivers/net/tsi108_eth.c:1725:
+		printk("tsi108_ether_init: error initializing ethernet "
+		       "device\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1805: FILE: drivers/net/tsi108_eth.c:1735:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1812: FILE: drivers/net/tsi108_eth.c:1742:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1815: FILE: drivers/net/tsi108_eth.c:1745:
+}
+static void tsi108_ether_exit(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1832: FILE: drivers/net/tsi108_eth.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1847: FILE: drivers/net/tsi108_eth.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1848: FILE: drivers/net/tsi108_eth.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1853: FILE: drivers/net/tsi108_eth.h:22:
+/*
+ * net/tsi108_eth.h - definitions for Tsi108 GIGE network controller.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1862: FILE: drivers/net/tsi108_eth.h:31:
+#define TSI108_ETH_WRITE_REG(offset, val) \
+	out_be32((volatile u32 *)(data->regs + offset), val)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1863: FILE: drivers/net/tsi108_eth.h:32:
+	out_be32((volatile u32 *)(data->regs + offset), val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1865: FILE: drivers/net/tsi108_eth.h:34:
+#define TSI108_ETH_READ_REG(offset) \
+	in_be32((volatile u32 *)(data->regs + offset))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1866: FILE: drivers/net/tsi108_eth.h:35:
+	in_be32((volatile u32 *)(data->regs + offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1868: FILE: drivers/net/tsi108_eth.h:37:
+#define TSI108_ETH_WRITE_PHYREG(offset, val) \
+	out_be32((volatile u32 *)(data->phyregs + offset), val)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1869: FILE: drivers/net/tsi108_eth.h:38:
+	out_be32((volatile u32 *)(data->phyregs + offset), val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#1871: FILE: drivers/net/tsi108_eth.h:40:
+#define TSI108_ETH_READ_PHYREG(offset) \
+	in_be32((volatile u32 *)(data->phyregs + offset))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1872: FILE: drivers/net/tsi108_eth.h:41:
+	in_be32((volatile u32 *)(data->phyregs + offset))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1875: FILE: drivers/net/tsi108_eth.h:44:
+/*
+ * PHY Configuration Options

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1884: FILE: drivers/net/tsi108_eth.h:53:
+/*
+ * TSI108 GIGE port registers

CHECK:BIT_MACRO: Prefer using the BIT macro
#1892: FILE: drivers/net/tsi108_eth.h:61:
+#define TSI108_MAC_CFG1_SOFTRST		(1 << 31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1893: FILE: drivers/net/tsi108_eth.h:62:
+#define TSI108_MAC_CFG1_LOOPBACK	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1894: FILE: drivers/net/tsi108_eth.h:63:
+#define TSI108_MAC_CFG1_RXEN		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1895: FILE: drivers/net/tsi108_eth.h:64:
+#define TSI108_MAC_CFG1_TXEN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1900: FILE: drivers/net/tsi108_eth.h:69:
+#define TSI108_MAC_CFG2_NOGIG		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1902: FILE: drivers/net/tsi108_eth.h:71:
+#define TSI108_MAC_CFG2_PADCRC		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1903: FILE: drivers/net/tsi108_eth.h:72:
+#define TSI108_MAC_CFG2_FULLDUPLEX	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1907: FILE: drivers/net/tsi108_eth.h:76:
+#define TSI108_MAC_MII_MGMT_RST		(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1910: FILE: drivers/net/tsi108_eth.h:79:
+#define TSI108_MAC_MII_CMD_READ		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1920: FILE: drivers/net/tsi108_eth.h:89:
+#define TSI108_MAC_MII_IND_NOTVALID	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1921: FILE: drivers/net/tsi108_eth.h:90:
+#define TSI108_MAC_MII_IND_SCANNING	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1922: FILE: drivers/net/tsi108_eth.h:91:
+#define TSI108_MAC_MII_IND_BUSY		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1925: FILE: drivers/net/tsi108_eth.h:94:
+#define TSI108_MAC_IFCTRL_PHYMODE	(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1931: FILE: drivers/net/tsi108_eth.h:100:
+#define TSI108_STAT_RXBYTES_CARRY	(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1934: FILE: drivers/net/tsi108_eth.h:103:
+#define TSI108_STAT_RXPKTS_CARRY	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1937: FILE: drivers/net/tsi108_eth.h:106:
+#define TSI108_STAT_RXFCS_CARRY		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1940: FILE: drivers/net/tsi108_eth.h:109:
+#define TSI108_STAT_RXMCAST_CARRY	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1943: FILE: drivers/net/tsi108_eth.h:112:
+#define TSI108_STAT_RXALIGN_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1946: FILE: drivers/net/tsi108_eth.h:115:
+#define TSI108_STAT_RXLENGTH_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1949: FILE: drivers/net/tsi108_eth.h:118:
+#define TSI108_STAT_RXRUNT_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1952: FILE: drivers/net/tsi108_eth.h:121:
+#define TSI108_STAT_RXJUMBO_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1955: FILE: drivers/net/tsi108_eth.h:124:
+#define TSI108_STAT_RXFRAG_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1958: FILE: drivers/net/tsi108_eth.h:127:
+#define TSI108_STAT_RXJABBER_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1961: FILE: drivers/net/tsi108_eth.h:130:
+#define TSI108_STAT_RXDROP_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1964: FILE: drivers/net/tsi108_eth.h:133:
+#define TSI108_STAT_TXBYTES_CARRY	(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1967: FILE: drivers/net/tsi108_eth.h:136:
+#define TSI108_STAT_TXPKTS_CARRY	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1970: FILE: drivers/net/tsi108_eth.h:139:
+#define TSI108_STAT_TXEXDEF_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1973: FILE: drivers/net/tsi108_eth.h:142:
+#define TSI108_STAT_TXEXCOL_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1976: FILE: drivers/net/tsi108_eth.h:145:
+#define TSI108_STAT_TXTCOL_CARRY	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1979: FILE: drivers/net/tsi108_eth.h:148:
+#define TSI108_STAT_TXPAUSEDROP_CARRY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1982: FILE: drivers/net/tsi108_eth.h:151:
+#define TSI108_STAT_CARRY1_RXBYTES	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1983: FILE: drivers/net/tsi108_eth.h:152:
+#define TSI108_STAT_CARRY1_RXPKTS	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1984: FILE: drivers/net/tsi108_eth.h:153:
+#define TSI108_STAT_CARRY1_RXFCS	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1985: FILE: drivers/net/tsi108_eth.h:154:
+#define TSI108_STAT_CARRY1_RXMCAST	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1986: FILE: drivers/net/tsi108_eth.h:155:
+#define TSI108_STAT_CARRY1_RXALIGN	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1987: FILE: drivers/net/tsi108_eth.h:156:
+#define TSI108_STAT_CARRY1_RXLENGTH	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1988: FILE: drivers/net/tsi108_eth.h:157:
+#define TSI108_STAT_CARRY1_RXRUNT	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1989: FILE: drivers/net/tsi108_eth.h:158:
+#define TSI108_STAT_CARRY1_RXJUMBO	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1990: FILE: drivers/net/tsi108_eth.h:159:
+#define TSI108_STAT_CARRY1_RXFRAG	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1991: FILE: drivers/net/tsi108_eth.h:160:
+#define TSI108_STAT_CARRY1_RXJABBER	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1992: FILE: drivers/net/tsi108_eth.h:161:
+#define TSI108_STAT_CARRY1_RXDROP	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1995: FILE: drivers/net/tsi108_eth.h:164:
+#define TSI108_STAT_CARRY2_TXBYTES	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1996: FILE: drivers/net/tsi108_eth.h:165:
+#define TSI108_STAT_CARRY2_TXPKTS	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1997: FILE: drivers/net/tsi108_eth.h:166:
+#define TSI108_STAT_CARRY2_TXEXDEF	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1998: FILE: drivers/net/tsi108_eth.h:167:
+#define TSI108_STAT_CARRY2_TXEXCOL	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1999: FILE: drivers/net/tsi108_eth.h:168:
+#define TSI108_STAT_CARRY2_TXTCOL	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2000: FILE: drivers/net/tsi108_eth.h:169:
+#define TSI108_STAT_CARRY2_TXPAUSE	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2006: FILE: drivers/net/tsi108_eth.h:175:
+#define TSI108_EC_PORTCTRL_STATRST	(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2007: FILE: drivers/net/tsi108_eth.h:176:
+#define TSI108_EC_PORTCTRL_STATEN	(1 << 28)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2008: FILE: drivers/net/tsi108_eth.h:177:
+#define TSI108_EC_PORTCTRL_NOGIG	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2009: FILE: drivers/net/tsi108_eth.h:178:
+#define TSI108_EC_PORTCTRL_HALFDUPLEX	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2014: FILE: drivers/net/tsi108_eth.h:183:
+#define TSI108_INT_ANY			(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2015: FILE: drivers/net/tsi108_eth.h:184:
+#define TSI108_INT_SFN			(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2016: FILE: drivers/net/tsi108_eth.h:185:
+#define TSI108_INT_RXIDLE		(1 << 29)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2017: FILE: drivers/net/tsi108_eth.h:186:
+#define TSI108_INT_RXABORT		(1 << 28)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2018: FILE: drivers/net/tsi108_eth.h:187:
+#define TSI108_INT_RXERROR		(1 << 27)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2019: FILE: drivers/net/tsi108_eth.h:188:
+#define TSI108_INT_RXOVERRUN		(1 << 26)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2020: FILE: drivers/net/tsi108_eth.h:189:
+#define TSI108_INT_RXTHRESH		(1 << 25)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2021: FILE: drivers/net/tsi108_eth.h:190:
+#define TSI108_INT_RXWAIT		(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2022: FILE: drivers/net/tsi108_eth.h:191:
+#define TSI108_INT_RXQUEUE0		(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2023: FILE: drivers/net/tsi108_eth.h:192:
+#define TSI108_INT_STATCARRY		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2024: FILE: drivers/net/tsi108_eth.h:193:
+#define TSI108_INT_TXIDLE		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2025: FILE: drivers/net/tsi108_eth.h:194:
+#define TSI108_INT_TXABORT		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2026: FILE: drivers/net/tsi108_eth.h:195:
+#define TSI108_INT_TXERROR		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2027: FILE: drivers/net/tsi108_eth.h:196:
+#define TSI108_INT_TXUNDERRUN		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2028: FILE: drivers/net/tsi108_eth.h:197:
+#define TSI108_INT_TXTHRESH		(1 <<  9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2029: FILE: drivers/net/tsi108_eth.h:198:
+#define TSI108_INT_TXWAIT		(1 <<  8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2030: FILE: drivers/net/tsi108_eth.h:199:
+#define TSI108_INT_TXQUEUE0		(1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2033: FILE: drivers/net/tsi108_eth.h:202:
+#define TSI108_EC_TXCFG_RST		(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2036: FILE: drivers/net/tsi108_eth.h:205:
+#define TSI108_EC_TXCTRL_IDLEINT	(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2037: FILE: drivers/net/tsi108_eth.h:206:
+#define TSI108_EC_TXCTRL_ABORT		(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2038: FILE: drivers/net/tsi108_eth.h:207:
+#define TSI108_EC_TXCTRL_GO		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2039: FILE: drivers/net/tsi108_eth.h:208:
+#define TSI108_EC_TXCTRL_QUEUE0		(1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2042: FILE: drivers/net/tsi108_eth.h:211:
+#define TSI108_EC_TXSTAT_ACTIVE		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2043: FILE: drivers/net/tsi108_eth.h:212:
+#define TSI108_EC_TXSTAT_QUEUE0		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2046: FILE: drivers/net/tsi108_eth.h:215:
+#define TSI108_EC_TXESTAT_Q0_ERR	(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2047: FILE: drivers/net/tsi108_eth.h:216:
+#define TSI108_EC_TXESTAT_Q0_DESCINT	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2048: FILE: drivers/net/tsi108_eth.h:217:
+#define TSI108_EC_TXESTAT_Q0_EOF	(1 <<  8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2049: FILE: drivers/net/tsi108_eth.h:218:
+#define TSI108_EC_TXESTAT_Q0_EOQ	(1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2054: FILE: drivers/net/tsi108_eth.h:223:
+#define TSI108_EC_TXQ_CFG_DESC_INT	(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2055: FILE: drivers/net/tsi108_eth.h:224:
+#define TSI108_EC_TXQ_CFG_EOQ_OWN_INT	(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2056: FILE: drivers/net/tsi108_eth.h:225:
+#define TSI108_EC_TXQ_CFG_WSWP		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2057: FILE: drivers/net/tsi108_eth.h:226:
+#define TSI108_EC_TXQ_CFG_BSWP		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2062: FILE: drivers/net/tsi108_eth.h:231:
+#define TSI108_EC_TXQ_BUFCFG_BURST32	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2065: FILE: drivers/net/tsi108_eth.h:234:
+#define TSI108_EC_TXQ_BUFCFG_WSWP	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2066: FILE: drivers/net/tsi108_eth.h:235:
+#define TSI108_EC_TXQ_BUFCFG_BSWP	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2072: FILE: drivers/net/tsi108_eth.h:241:
+#define TSI108_EC_TXQ_PTRHIGH_VALID	(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2079: FILE: drivers/net/tsi108_eth.h:248:
+#define TSI108_EC_RXCFG_RST		(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2082: FILE: drivers/net/tsi108_eth.h:251:
+#define TSI108_EC_RXSTAT_ACTIVE		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2083: FILE: drivers/net/tsi108_eth.h:252:
+#define TSI108_EC_RXSTAT_QUEUE0		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2086: FILE: drivers/net/tsi108_eth.h:255:
+#define TSI108_EC_RXESTAT_Q0_ERR	(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2087: FILE: drivers/net/tsi108_eth.h:256:
+#define TSI108_EC_RXESTAT_Q0_DESCINT	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2088: FILE: drivers/net/tsi108_eth.h:257:
+#define TSI108_EC_RXESTAT_Q0_EOF	(1 <<  8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2089: FILE: drivers/net/tsi108_eth.h:258:
+#define TSI108_EC_RXESTAT_Q0_EOQ	(1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2092: FILE: drivers/net/tsi108_eth.h:261:
+#define TSI108_EC_HASHADDR_AUTOINC	(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2093: FILE: drivers/net/tsi108_eth.h:262:
+#define TSI108_EC_HASHADDR_DO1STREAD	(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2095: FILE: drivers/net/tsi108_eth.h:264:
+#define TSI108_EC_HASHADDR_MCAST	(1 <<  4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2102: FILE: drivers/net/tsi108_eth.h:271:
+#define TSI108_EC_RXQ_PTRHIGH_VALID	(1 << 31)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2105: FILE: drivers/net/tsi108_eth.h:274:
+#define TSI108_EC_RXCFG_SE		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2107: FILE: drivers/net/tsi108_eth.h:276:
+#define TSI108_EC_RXCFG_UFE		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2109: FILE: drivers/net/tsi108_eth.h:278:
+#define TSI108_EC_RXCFG_MFE		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2111: FILE: drivers/net/tsi108_eth.h:280:
+#define TSI108_EC_RXCFG_BFE		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2112: FILE: drivers/net/tsi108_eth.h:281:
+#define TSI108_EC_RXCFG_UC_HASH		(1 <<  9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2113: FILE: drivers/net/tsi108_eth.h:282:
+#define TSI108_EC_RXCFG_MC_HASH		(1 <<  8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2116: FILE: drivers/net/tsi108_eth.h:285:
+#define TSI108_EC_RXQ_CFG_DESC_INT	(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2117: FILE: drivers/net/tsi108_eth.h:286:
+#define TSI108_EC_RXQ_CFG_EOQ_OWN_INT	(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2118: FILE: drivers/net/tsi108_eth.h:287:
+#define TSI108_EC_RXQ_CFG_WSWP		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2119: FILE: drivers/net/tsi108_eth.h:288:
+#define TSI108_EC_RXQ_CFG_BSWP		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2124: FILE: drivers/net/tsi108_eth.h:293:
+#define TSI108_EC_RXQ_BUFCFG_BURST32	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2127: FILE: drivers/net/tsi108_eth.h:296:
+#define TSI108_EC_RXQ_BUFCFG_WSWP	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2128: FILE: drivers/net/tsi108_eth.h:297:
+#define TSI108_EC_RXQ_BUFCFG_BSWP	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2132: FILE: drivers/net/tsi108_eth.h:301:
+#define TSI108_EC_RXCTRL_ABORT		(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2133: FILE: drivers/net/tsi108_eth.h:302:
+#define TSI108_EC_RXCTRL_GO		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2134: FILE: drivers/net/tsi108_eth.h:303:
+#define TSI108_EC_RXCTRL_QUEUE0		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2139: FILE: drivers/net/tsi108_eth.h:308:
+#define PHY_CTRL_RESET			(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2140: FILE: drivers/net/tsi108_eth.h:309:
+#define PHY_CTRL_AUTONEG_EN		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2141: FILE: drivers/net/tsi108_eth.h:310:
+#define PHY_CTRL_POWERDOWN		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2142: FILE: drivers/net/tsi108_eth.h:311:
+#define PHY_CTRL_AUTONEG_START		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2145: FILE: drivers/net/tsi108_eth.h:314:
+#define PHY_STAT_LINKUP			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2152: FILE: drivers/net/tsi108_eth.h:321:
+#define PHY_SUM_STAT_SPEED_100		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2154: FILE: drivers/net/tsi108_eth.h:323:
+#define PHY_SUM_STAT_FULLDUPLEX		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2172: FILE: drivers/net/tsi108_eth.h:341:
+#define PHY_SUM_STAT_10T_HD		(1 << 8)	/* 10BASE-T Half-Duplex */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2178: FILE: drivers/net/tsi108_eth.h:347:
+#define TSI108_TX_EOF	(1 << 0)	/* End of frame; last fragment of packet */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2179: FILE: drivers/net/tsi108_eth.h:348:
+#define TSI108_TX_SOF	(1 << 1)	/* Start of frame; first frag. of packet */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2180: FILE: drivers/net/tsi108_eth.h:349:
+#define TSI108_TX_VLAN	(1 << 2)	/* Per-frame VLAN: enables VLAN override */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2181: FILE: drivers/net/tsi108_eth.h:350:
+#define TSI108_TX_HUGE	(1 << 3)	/* Huge frame enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2182: FILE: drivers/net/tsi108_eth.h:351:
+#define TSI108_TX_PAD	(1 << 4)	/* Pad the packet if too short */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2183: FILE: drivers/net/tsi108_eth.h:352:
+#define TSI108_TX_CRC	(1 << 5)	/* Generate CRC for this packet */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2184: FILE: drivers/net/tsi108_eth.h:353:
+#define TSI108_TX_INT	(1 << 14)	/* Generate an IRQ after frag. processed */

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#2186: FILE: drivers/net/tsi108_eth.h:355:
+#define TSI108_TX_COL	(1 << 20)	/* Set if a collision occured */
                      	         	                      ^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2186: FILE: drivers/net/tsi108_eth.h:355:
+#define TSI108_TX_COL	(1 << 20)	/* Set if a collision occured */

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#2187: FILE: drivers/net/tsi108_eth.h:356:
+#define TSI108_TX_LCOL	(1 << 24)	/* Set if a late collision occured */
                       	         	                           ^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2187: FILE: drivers/net/tsi108_eth.h:356:
+#define TSI108_TX_LCOL	(1 << 24)	/* Set if a late collision occured */

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#2188: FILE: drivers/net/tsi108_eth.h:357:
+#define TSI108_TX_UNDER	(1 << 25)	/* Set if a FIFO underrun occured */
                        	         	                          ^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2188: FILE: drivers/net/tsi108_eth.h:357:
+#define TSI108_TX_UNDER	(1 << 25)	/* Set if a FIFO underrun occured */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2189: FILE: drivers/net/tsi108_eth.h:358:
+#define TSI108_TX_RLIM	(1 << 26)	/* Set if the retry limit was reached */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2190: FILE: drivers/net/tsi108_eth.h:359:
+#define TSI108_TX_OK	(1 << 30)	/* Set if the frame TX was successful */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2191: FILE: drivers/net/tsi108_eth.h:360:
+#define TSI108_TX_OWN	(1 << 31)	/* Set if the device owns the descriptor */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2194: FILE: drivers/net/tsi108_eth.h:363:
+typedef struct {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(32) over __attribute__((aligned(32)))
#2204: FILE: drivers/net/tsi108_eth.h:373:
+} __attribute__ ((aligned(32))) tx_desc;

CHECK:BIT_MACRO: Prefer using the BIT macro
#2206: FILE: drivers/net/tsi108_eth.h:375:
+#define TSI108_RX_EOF	(1 << 0)	/* End of frame; last fragment of packet */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2207: FILE: drivers/net/tsi108_eth.h:376:
+#define TSI108_RX_SOF	(1 << 1)	/* Start of frame; first frag. of packet */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2208: FILE: drivers/net/tsi108_eth.h:377:
+#define TSI108_RX_VLAN	(1 << 2)	/* Set on SOF if packet has a VLAN */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2209: FILE: drivers/net/tsi108_eth.h:378:
+#define TSI108_RX_FTYPE	(1 << 3)	/* Length/Type field is type, not length */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2210: FILE: drivers/net/tsi108_eth.h:379:
+#define TSI108_RX_RUNT	(1 << 4)/* Packet is less than minimum size */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2211: FILE: drivers/net/tsi108_eth.h:380:
+#define TSI108_RX_HASH	(1 << 7)/* Hash table match */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2212: FILE: drivers/net/tsi108_eth.h:381:
+#define TSI108_RX_BAD	(1 << 8)	/* Bad frame */

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#2213: FILE: drivers/net/tsi108_eth.h:382:
+#define TSI108_RX_OVER	(1 << 9)	/* FIFO overrun occured */
                       	        	                ^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2213: FILE: drivers/net/tsi108_eth.h:382:
+#define TSI108_RX_OVER	(1 << 9)	/* FIFO overrun occured */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2214: FILE: drivers/net/tsi108_eth.h:383:
+#define TSI108_RX_TRUNC	(1 << 11)	/* Packet truncated due to excess length */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2215: FILE: drivers/net/tsi108_eth.h:384:
+#define TSI108_RX_CRC	(1 << 12)	/* Packet had a CRC error */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2216: FILE: drivers/net/tsi108_eth.h:385:
+#define TSI108_RX_INT	(1 << 13)	/* Generate an IRQ after frag. processed */

CHECK:BIT_MACRO: Prefer using the BIT macro
#2217: FILE: drivers/net/tsi108_eth.h:386:
+#define TSI108_RX_OWN	(1 << 15)	/* Set if the device owns the descriptor */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2219: FILE: drivers/net/tsi108_eth.h:388:
+typedef struct {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(32) over __attribute__((aligned(32)))
#2230: FILE: drivers/net/tsi108_eth.h:399:
+} __attribute__ ((aligned(32))) rx_desc;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067021.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 63 errors, 133 warnings, 172 checks, 2177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067021.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
