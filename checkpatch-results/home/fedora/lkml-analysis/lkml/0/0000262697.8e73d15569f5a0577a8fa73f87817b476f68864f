ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: fs/dcache.c:980:
+^Ihlist_for_each_rcu(node, head) { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: include/linux/list.h:426:
+        ^Ipos = rcu_dereference(pos->next), prefetch(pos->next))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: include/linux/list.h:426:
+        ^Ipos = rcu_dereference(pos->next), prefetch(pos->next))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: include/linux/list.h:426:
+        ^Ipos = rcu_dereference(pos->next), prefetch(pos->next))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: include/linux/list.h:430:
+        ^Ipos = rcu_dereference(pos->next))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: include/linux/list.h:430:
+        ^Ipos = rcu_dereference(pos->next))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: include/linux/list.h:430:
+        ^Ipos = rcu_dereference(pos->next))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: include/linux/list.h:461:
+^I     pos = rcu_dereference(list_entry(pos->member.next, ^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: include/linux/list.h:478:
+        ^I(pos) = rcu_dereference((pos)->next), prefetch((pos)->next))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#173: FILE: include/linux/list.h:478:
+        ^I(pos) = rcu_dereference((pos)->next), prefetch((pos)->next))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: include/linux/list.h:478:
+        ^I(pos) = rcu_dereference((pos)->next), prefetch((pos)->next))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#197: FILE: include/linux/list.h:631:
+#define hlist_for_each_rcu(pos, head) \
+	for ((pos) = (head)->first; pos && ({ prefetch((pos)->next); 1; }); \
+		(pos) = rcu_dereference((pos)->next))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: ipc/util.c:518:
+^I * smp_rmb() has effect on all CPUs.  rcu_dereference() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: net/decnet/dn_route.c:1177:
+^I^Ifor(rt = rcu_dereference(dn_rt_hash_table[hash].chain); rt; $

ERROR:SPACING: space required before the open parenthesis '('
#343: FILE: net/decnet/dn_route.c:1177:
+		for(rt = rcu_dereference(dn_rt_hash_table[hash].chain); rt; 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#354: FILE: net/decnet/dn_route.c:1456:
+	for(rt = rcu_dereference(dn_rt_hash_table[hash].chain); rt != NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rt"
#354: FILE: net/decnet/dn_route.c:1456:
+	for(rt = rcu_dereference(dn_rt_hash_table[hash].chain); rt != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: net/decnet/dn_route.c:1650:
+^I^Ifor(rt = rcu_dereference(dn_rt_hash_table[h].chain), idx = 0; $

ERROR:SPACING: space required before the open parenthesis '('
#365: FILE: net/decnet/dn_route.c:1650:
+		for(rt = rcu_dereference(dn_rt_hash_table[h].chain), idx = 0; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: net/decnet/dn_route.c:1651:
+^I^I^Irt; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#403: FILE: net/ipv4/ip_input.c:234:
+		if ((ipprot = rcu_dereference(inet_protos[hash])) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: net/ipv4/route.c:2232:
+^Ifor (rth = rcu_dereference(rt_hash_table[hash].chain); rth; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#503: FILE: net/ipv6/ip6_input.c:170:
+	if ((ipprot = rcu_dereference(inet6_protos[hash])) != NULL) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262697.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 7 warnings, 2 checks, 370 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262697.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
