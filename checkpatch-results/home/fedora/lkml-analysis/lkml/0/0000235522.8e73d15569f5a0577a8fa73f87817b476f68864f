WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#161: FILE: kernel/scheduler.c:577:
+EXPORT_SYMBOL(cond_resched);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: kernel/scheduler.c:587:
+int cond_resched_lock(spinlock_t * lock)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#191: FILE: kernel/scheduler.c:607:
+EXPORT_SYMBOL(cond_resched_lock);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#195: FILE: kernel/scheduler.c:611:
+	BUG_ON(!in_softirq());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#206: FILE: kernel/scheduler.c:622:
+EXPORT_SYMBOL(cond_resched_softirq);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 0 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
