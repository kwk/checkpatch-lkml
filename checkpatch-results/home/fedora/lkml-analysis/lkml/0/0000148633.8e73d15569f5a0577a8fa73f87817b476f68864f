ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/scsi/sata_mv.c:91:
+^IMV_6XXX_FLAGS^I^I= (MV_FLAG_IRQ_COALESCE | $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#237: FILE: drivers/scsi/sata_mv.c:248:
+	unsigned		req_producer;		/* cp of req_in_ptr */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#238: FILE: drivers/scsi/sata_mv.c:249:
+	unsigned		rsp_consumer;		/* cp of rsp_out_ptr */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: drivers/scsi/sata_mv.c:344:
+^I^I.host_flags^I= (MV_COMMON_FLAGS | MV_6XXX_FLAGS | $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#417: FILE: drivers/scsi/sata_mv.c:428:
+static void mv_dump_mem(void __iomem *start, unsigned bytes)

WARNING:LINE_SPACING: Missing a blank line after declarations
#421: FILE: drivers/scsi/sata_mv.c:432:
+	int b, w;
+	for (b = 0; b < bytes; ) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#424: FILE: drivers/scsi/sata_mv.c:435:
+			printk("%08x ",readl(start + b));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: drivers/scsi/sata_mv.c:435:
+			printk("%08x ",readl(start + b));
 			              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#427: FILE: drivers/scsi/sata_mv.c:438:
+		printk("\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#431: FILE: drivers/scsi/sata_mv.c:442:
+}
+static void mv_dump_pci_cfg(struct pci_dev *pdev, unsigned bytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#431: FILE: drivers/scsi/sata_mv.c:442:
+static void mv_dump_pci_cfg(struct pci_dev *pdev, unsigned bytes)

WARNING:LINE_SPACING: Missing a blank line after declarations
#436: FILE: drivers/scsi/sata_mv.c:447:
+	u32 dw;
+	for (b = 0; b < bytes; ) {

CHECK:SPACING: No space is necessary after a cast
#439: FILE: drivers/scsi/sata_mv.c:450:
+			(void) pci_read_config_dword(pdev,b,&dw);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#439: FILE: drivers/scsi/sata_mv.c:450:
+			(void) pci_read_config_dword(pdev,b,&dw);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#439: FILE: drivers/scsi/sata_mv.c:450:
+			(void) pci_read_config_dword(pdev,b,&dw);
 			                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#439: FILE: drivers/scsi/sata_mv.c:450:
+			(void) pci_read_config_dword(pdev,b,&dw);
 			                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#440: FILE: drivers/scsi/sata_mv.c:451:
+			printk("%08x ",dw);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: drivers/scsi/sata_mv.c:451:
+			printk("%08x ",dw);
 			              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#443: FILE: drivers/scsi/sata_mv.c:454:
+		printk("\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#447: FILE: drivers/scsi/sata_mv.c:458:
+}
+static void mv_dump_all_regs(void __iomem *mmio_base, int port,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: drivers/scsi/sata_mv.c:462:
+^Ivoid __iomem *hc_base = mv_hc_base(mmio_base, $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#456: FILE: drivers/scsi/sata_mv.c:467:
+	if (0 > port) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#457: FILE: drivers/scsi/sata_mv.c:468:
+		start_hc = start_port = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#463: FILE: drivers/scsi/sata_mv.c:474:
+		num_ports = num_hcs = 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: drivers/scsi/sata_mv.c:476:
+^IVPRINTK("All registers for port(s) %u-%u:\n", start_port, $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#468: FILE: drivers/scsi/sata_mv.c:479:
+	if (NULL != pdev) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#473: FILE: drivers/scsi/sata_mv.c:484:
+	mv_dump_mem(mmio_base+0xc00, 0x3c);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#474: FILE: drivers/scsi/sata_mv.c:485:
+	mv_dump_mem(mmio_base+0xd00, 0x34);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#475: FILE: drivers/scsi/sata_mv.c:486:
+	mv_dump_mem(mmio_base+0xf00, 0x4);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#476: FILE: drivers/scsi/sata_mv.c:487:
+	mv_dump_mem(mmio_base+0x1d00, 0x6c);
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#484: FILE: drivers/scsi/sata_mv.c:495:
+		VPRINTK("EDMA regs (port %i):\n",p);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#486: FILE: drivers/scsi/sata_mv.c:497:
+		VPRINTK("SATA regs (port %i):\n",p);
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#487: FILE: drivers/scsi/sata_mv.c:498:
+		mv_dump_mem(port_base+0x300, 0x60);
 		                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#525: FILE: drivers/scsi/sata_mv.c:564:
+		printk(KERN_ERR DRV_NAME ": PCI master won't flush\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#536: FILE: drivers/scsi/sata_mv.c:578:
+		printk(KERN_ERR DRV_NAME ": can't set global reset\n");

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#542: FILE: drivers/scsi/sata_mv.c:583:
+	/* clear reset and *reenable the PCI master* (not mentioned in spec) */
 	                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#554: FILE: drivers/scsi/sata_mv.c:592:
+		printk(KERN_ERR DRV_NAME ": can't clear global reset\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#569: FILE: drivers/scsi/sata_mv.c:604:
+	if (hpriv->hp_flags & MV_HP_FLAG_MSI) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#587: FILE: drivers/scsi/sata_mv.c:622:
+	if (!pp) {
+		return -ENOMEM;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: drivers/scsi/sata_mv.c:627:
+^Imem = dma_alloc_coherent(dev, MV_PORT_PRIV_DMA_SZ, &mem_dma, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: drivers/scsi/sata_mv.c:635:
+^I/* First item in chunk of DMA memory: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: drivers/scsi/sata_mv.c:643:
+^I/* Second item: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: drivers/scsi/sata_mv.c:657:
+^Iwritelfl(EDMA_CFG_Q_DEPTH | EDMA_CFG_RD_BRST_EXT | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: drivers/scsi/sata_mv.c:661:
+^Iwritelfl(pp->crqb_dma & EDMA_REQ_Q_BASE_LO_MASK, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: drivers/scsi/sata_mv.c:668:
+^Iwritelfl(pp->crpb_dma & EDMA_RSP_Q_BASE_LO_MASK, $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#636: FILE: drivers/scsi/sata_mv.c:671:
+	pp->req_producer = pp->rsp_consumer = 0;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#675: FILE: drivers/scsi/sata_mv.c:710:
+	if (0 < qc->n_elem) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#675: FILE: drivers/scsi/sata_mv.c:710:
+	if (0 < qc->n_elem) {
+		pp->sg_tbl[qc->n_elem - 1].flags_size |= EPRD_FLAG_END_OF_TBL;
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#680: FILE: drivers/scsi/sata_mv.c:715:
+static inline unsigned mv_inc_q_index(unsigned *index)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#680: FILE: drivers/scsi/sata_mv.c:715:
+static inline unsigned mv_inc_q_index(unsigned *index)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#686: FILE: drivers/scsi/sata_mv.c:721:
+static inline void mv_crqb_pack_cmd(u16 *cmdw, u8 data, u8 addr, unsigned last)

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: drivers/scsi/sata_mv.c:735:
+ ^Iif (ATA_PROT_DMA != qc->tf.protocol) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#700: FILE: drivers/scsi/sata_mv.c:735:
+ ^Iif (ATA_PROT_DMA != qc->tf.protocol) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/scsi/sata_mv.c:735:
+ ^Iif (ATA_PROT_DMA != qc->tf.protocol) {$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#700: FILE: drivers/scsi/sata_mv.c:735:
+ 	if (ATA_PROT_DMA != qc->tf.protocol) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#700: FILE: drivers/scsi/sata_mv.c:735:
+ 	if (ATA_PROT_DMA != qc->tf.protocol) {
+		return;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: drivers/scsi/sata_mv.c:740:
+^Iassert(((readl(mv_ap_base(qc->ap) + EDMA_REQ_Q_IN_PTR_OFS) >> $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#711: FILE: drivers/scsi/sata_mv.c:746:
+	if (!(qc->tf.flags & ATA_TFLAG_WRITE)) {
+		flags |= CRQB_FLAG_READ;
+	}

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#714: FILE: drivers/scsi/sata_mv.c:749:
+	assert(MV_MAX_Q_DEPTH > qc->tag);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: drivers/scsi/sata_mv.c:752:
+^Ipp->crqb[pp->req_producer].sg_addr = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: drivers/scsi/sata_mv.c:754:
+^Ipp->crqb[pp->req_producer].sg_addr_hi = $

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#726: FILE: drivers/scsi/sata_mv.c:761:
+	/* Sadly, the CRQB cannot accomodate all registers--there are
 	                          ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#742: FILE: drivers/scsi/sata_mv.c:777:
+^I^Imv_crqb_pack_cmd(cw++, tf->hob_feature, ATA_REG_FEATURE, 0); $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#755: FILE: drivers/scsi/sata_mv.c:790:
+		BUG_ON(tf->command);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BRACES: braces {} are not necessary for single statement blocks
#768: FILE: drivers/scsi/sata_mv.c:803:
+	if (!(qc->flags & ATA_QCFLAG_DMAMAP)) {
+		return;
+	}

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#780: FILE: drivers/scsi/sata_mv.c:815:
+	if (ATA_PROT_DMA != qc->tf.protocol) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#796: FILE: drivers/scsi/sata_mv.c:831:
+^I       ((readl(port_mmio + EDMA_REQ_Q_OUT_PTR_OFS) >> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: drivers/scsi/sata_mv.c:859:
+^Iassert(((out_ptr >> EDMA_RSP_Q_PTR_SHIFT) & MV_MAX_Q_DEPTH_MASK) == $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#829: FILE: drivers/scsi/sata_mv.c:864:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: drivers/scsi/sata_mv.c:866:
+^Iassert(((readl(port_mmio + EDMA_RSP_Q_IN_PTR_OFS) >> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: drivers/scsi/sata_mv.c:867:
+^I^I EDMA_RSP_Q_PTR_SHIFT) & MV_MAX_Q_DEPTH_MASK) == $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#959: FILE: drivers/scsi/sata_mv.c:1002:
+		printk(KERN_ERR DRV_NAME ": PCI ERROR; PCI IRQ cause=0x%08x\n",

CHECK:SPACING: No space is necessary after a cast
#975: FILE: drivers/scsi/sata_mv.c:1018:
+	return readb((void __iomem *) ap->ioaddr.error_addr);

WARNING:SPLIT_STRING: quoted string split across lines
#1016: FILE: drivers/scsi/sata_mv.c:1044:
+	VPRINTK("S-regs after ATA_RST: SStat 0x%08x SErr 0x%08x "
+		"SCtrl 0x%08x\n", mv_scr_read(ap, SCR_STATUS),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1034: FILE: drivers/scsi/sata_mv.c:1059:
+	VPRINTK("S-regs after PHY wake: SStat 0x%08x SErr 0x%08x "
+		"SCtrl 0x%08x\n", mv_scr_read(ap, SCR_STATUS),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1040: FILE: drivers/scsi/sata_mv.c:1065:
+		printk(KERN_INFO "ata%u: no device found (phy stat %08x)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1071: FILE: drivers/scsi/sata_mv.c:1091:
+^Imv_dump_all_regs(mv_ap_base(ap), ap->port_no, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1081: FILE: drivers/scsi/sata_mv.c:1101:
+		printk(KERN_ERR "ata%u: BUG: timeout without command\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1085: FILE: drivers/scsi/sata_mv.c:1105:
+^I ^I * function from inside the ->eh_strategy_handler() thread.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1085: FILE: drivers/scsi/sata_mv.c:1105:
+^I ^I * function from inside the ->eh_strategy_handler() thread.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1086: FILE: drivers/scsi/sata_mv.c:1106:
+^I ^I * libata is the only user of ->eh_strategy_handler() in$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1086: FILE: drivers/scsi/sata_mv.c:1106:
+^I ^I * libata is the only user of ->eh_strategy_handler() in$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1087: FILE: drivers/scsi/sata_mv.c:1107:
+^I ^I * any kernel, so the default scsi_done() assumes it is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1087: FILE: drivers/scsi/sata_mv.c:1107:
+^I ^I * any kernel, so the default scsi_done() assumes it is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1088: FILE: drivers/scsi/sata_mv.c:1108:
+^I ^I * not being called from the SCSI EH.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1088: FILE: drivers/scsi/sata_mv.c:1108:
+^I ^I * not being called from the SCSI EH.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1089: FILE: drivers/scsi/sata_mv.c:1109:
+^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1089: FILE: drivers/scsi/sata_mv.c:1109:
+^I ^I */$

CHECK:SPACING: No space is necessary after a cast
#1098: FILE: drivers/scsi/sata_mv.c:1118:
+	unsigned long shd_base = (unsigned long) port_mmio + SHD_BLK_OFS;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1099: FILE: drivers/scsi/sata_mv.c:1119:
+	unsigned serr_ofs;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1101: FILE: drivers/scsi/sata_mv.c:1121:
+^I/* PIO related setup $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: drivers/scsi/sata_mv.c:1124:
+^Iport->error_addr = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1111: FILE: drivers/scsi/sata_mv.c:1131:
+^Iport->status_addr = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1114: FILE: drivers/scsi/sata_mv.c:1134:
+	port->altstatus_addr = port->ctl_addr = shd_base + SHD_CTL_AST_OFS;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1143: FILE: drivers/scsi/sata_mv.c:1159:
+^Iif ((MV_FLAG_GLBL_SFT_RST & probe_ent->host_flags) && $

WARNING:SPLIT_STRING: quoted string split across lines
#1163: FILE: drivers/scsi/sata_mv.c:1177:
+		VPRINTK("HC%i: HC config=0x%08x HC IRQ cause "
+			"(before clear)=0x%08x\n", hc,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1213: FILE: drivers/scsi/sata_mv.c:1223:
+^Iprintk(KERN_INFO DRV_NAME $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1213: FILE: drivers/scsi/sata_mv.c:1223:
+	printk(KERN_INFO DRV_NAME 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: drivers/scsi/sata_mv.c:1225:
+^I       pci_name(pdev), (unsigned)MV_MAX_Q_DEPTH, probe_ent->n_ports, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1215: FILE: drivers/scsi/sata_mv.c:1225:
+	       pci_name(pdev), (unsigned)MV_MAX_Q_DEPTH, probe_ent->n_ports, 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1232: FILE: drivers/scsi/sata_mv.c:1239:
+		printk(KERN_INFO DRV_NAME " version " DRV_VERSION "\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1279: FILE: drivers/scsi/sata_mv.c:1294:
+	if (pci_enable_msi(pdev) == 0) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1301: FILE: drivers/scsi/sata_mv.c:1312:
+	if (MV_HP_FLAG_MSI & hpriv->hp_flags) {
[...]
+	} else {
[...]

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148633.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 50 warnings, 14 checks, 1240 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148633.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
