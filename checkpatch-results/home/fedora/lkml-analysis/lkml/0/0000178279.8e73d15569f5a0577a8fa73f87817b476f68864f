WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
2)get_kprobe_inst(slot..)->> Retrives the instruction for a given slot from the bundle 

WARNING:TYPO_SPELLING: 'Retrives' may be misspelled - perhaps 'Retrieves'?
#31: 
2)get_kprobe_inst(slot..)->> Retrives the instruction for a given slot from the bundle 
                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: arch/ia64/kernel/kprobes.c:107:
+static void update_kprobe_inst_flag(uint template, uint  slot, uint major_opcode,
+	unsigned long kprobe_inst, struct kprobe *p)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#77: FILE: arch/ia64/kernel/kprobes.c:113:
+		switch (major_opcode) {
+		  case INDIRECT_CALL_OPCODE:
[...]
+		  case IP_RELATIVE_PREDICT_OPCODE:
+		  case IP_RELATIVE_BRANCH_OPCODE:
[...]
+		  case IP_RELATIVE_CALL_OPCODE:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TABSTOP: Statements should start on a tabstop
#78: FILE: arch/ia64/kernel/kprobes.c:114:
+		  case INDIRECT_CALL_OPCODE:

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: arch/ia64/kernel/kprobes.c:115:
+^I ^I^Ip->ainsn.inst_flag |= INST_FLAG_FIX_BRANCH_REG;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#79: FILE: arch/ia64/kernel/kprobes.c:115:
+^I ^I^Ip->ainsn.inst_flag |= INST_FLAG_FIX_BRANCH_REG;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: arch/ia64/kernel/kprobes.c:116:
+ ^I^I^Ip->ainsn.target_br_reg = ((kprobe_inst >> 6) & 0x7);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: arch/ia64/kernel/kprobes.c:116:
+ ^I^I^Ip->ainsn.target_br_reg = ((kprobe_inst >> 6) & 0x7);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: arch/ia64/kernel/kprobes.c:116:
+ ^I^I^Ip->ainsn.target_br_reg = ((kprobe_inst >> 6) & 0x7);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: arch/ia64/kernel/kprobes.c:117:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: arch/ia64/kernel/kprobes.c:117:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: arch/ia64/kernel/kprobes.c:117:
+ ^I^I^Ibreak;$

WARNING:TABSTOP: Statements should start on a tabstop
#82: FILE: arch/ia64/kernel/kprobes.c:118:
+		  case IP_RELATIVE_PREDICT_OPCODE:

WARNING:TABSTOP: Statements should start on a tabstop
#83: FILE: arch/ia64/kernel/kprobes.c:119:
+		  case IP_RELATIVE_BRANCH_OPCODE:

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: arch/ia64/kernel/kprobes.c:121:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: arch/ia64/kernel/kprobes.c:121:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/ia64/kernel/kprobes.c:121:
+ ^I^I^Ibreak;$

WARNING:TABSTOP: Statements should start on a tabstop
#86: FILE: arch/ia64/kernel/kprobes.c:122:
+		  case IP_RELATIVE_CALL_OPCODE:

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: arch/ia64/kernel/kprobes.c:123:
+ ^I^I^Ip->ainsn.inst_flag |= INST_FLAG_FIX_RELATIVE_IP_ADDR;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: arch/ia64/kernel/kprobes.c:123:
+ ^I^I^Ip->ainsn.inst_flag |= INST_FLAG_FIX_RELATIVE_IP_ADDR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/ia64/kernel/kprobes.c:123:
+ ^I^I^Ip->ainsn.inst_flag |= INST_FLAG_FIX_RELATIVE_IP_ADDR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: arch/ia64/kernel/kprobes.c:124:
+ ^I^I^Ip->ainsn.inst_flag |= INST_FLAG_FIX_BRANCH_REG;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: arch/ia64/kernel/kprobes.c:124:
+ ^I^I^Ip->ainsn.inst_flag |= INST_FLAG_FIX_BRANCH_REG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: arch/ia64/kernel/kprobes.c:124:
+ ^I^I^Ip->ainsn.inst_flag |= INST_FLAG_FIX_BRANCH_REG;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: arch/ia64/kernel/kprobes.c:125:
+ ^I^I^Ip->ainsn.target_br_reg = ((kprobe_inst >> 6) & 0x7);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: arch/ia64/kernel/kprobes.c:125:
+ ^I^I^Ip->ainsn.target_br_reg = ((kprobe_inst >> 6) & 0x7);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/ia64/kernel/kprobes.c:125:
+ ^I^I^Ip->ainsn.target_br_reg = ((kprobe_inst >> 6) & 0x7);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: arch/ia64/kernel/kprobes.c:126:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: arch/ia64/kernel/kprobes.c:126:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/ia64/kernel/kprobes.c:126:
+ ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: arch/ia64/kernel/kprobes.c:128:
+ ^I} else if (bundle_encoding[template][slot] == X) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: arch/ia64/kernel/kprobes.c:128:
+ ^I} else if (bundle_encoding[template][slot] == X) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/ia64/kernel/kprobes.c:128:
+ ^I} else if (bundle_encoding[template][slot] == X) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#93: FILE: arch/ia64/kernel/kprobes.c:129:
+		switch (major_opcode) {
+		  case LONG_CALL_OPCODE:

WARNING:TABSTOP: Statements should start on a tabstop
#94: FILE: arch/ia64/kernel/kprobes.c:130:
+		  case LONG_CALL_OPCODE:

WARNING:TABSTOP: Statements should start on a tabstop
#97: FILE: arch/ia64/kernel/kprobes.c:133:
+		  break;

WARNING:RETURN_VOID: void function return statements are not generally useful
#101: FILE: arch/ia64/kernel/kprobes.c:137:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: arch/ia64/kernel/kprobes.c:139:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: arch/ia64/kernel/kprobes.c:144:
+static void prepare_break_inst(uint template, uint  slot, uint major_opcode,
+	unsigned long kprobe_inst, struct kprobe *p)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#123: FILE: arch/ia64/kernel/kprobes.c:155:
+	switch (slot) {
+	  case 0:
[...]
+	  case 1:
[...]
+	  case 2:

WARNING:TABSTOP: Statements should start on a tabstop
#124: FILE: arch/ia64/kernel/kprobes.c:156:
+	  case 0:

WARNING:TABSTOP: Statements should start on a tabstop
#127: FILE: arch/ia64/kernel/kprobes.c:159:
+	  case 1:

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#129: FILE: arch/ia64/kernel/kprobes.c:161:
+		bundle->quad1.slot1_p1 = break_inst >> (64-46);
 		                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#131: FILE: arch/ia64/kernel/kprobes.c:163:
+	  case 2:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: arch/ia64/kernel/kprobes.c:168:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: arch/ia64/kernel/kprobes.c:170:
+^I * emulate the instruction properly after we $

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/ia64/kernel/kprobes.c:177:
+^I       ^Iunsigned long *kprobe_inst, uint *major_opcode)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: arch/ia64/kernel/kprobes.c:177:
+^I       ^Iunsigned long *kprobe_inst, uint *major_opcode)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: arch/ia64/kernel/kprobes.c:177:
+static inline void get_kprobe_inst(bundle_t *bundle, uint slot,
+	       	unsigned long *kprobe_inst, uint *major_opcode)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#156: FILE: arch/ia64/kernel/kprobes.c:184:
 	switch (slot) {
+	  case 0:
[...]
+	  case 1:
[...]
+	  case 2:

WARNING:TABSTOP: Statements should start on a tabstop
#161: FILE: arch/ia64/kernel/kprobes.c:185:
+	  case 0:

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: arch/ia64/kernel/kprobes.c:186:
+ ^I^I*major_opcode = (bundle->quad0.slot0 >> SLOT0_OPCODE_SHIFT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: arch/ia64/kernel/kprobes.c:186:
+ ^I^I*major_opcode = (bundle->quad0.slot0 >> SLOT0_OPCODE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/ia64/kernel/kprobes.c:186:
+ ^I^I*major_opcode = (bundle->quad0.slot0 >> SLOT0_OPCODE_SHIFT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/ia64/kernel/kprobes.c:187:
+ ^I^I*kprobe_inst = bundle->quad0.slot0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: arch/ia64/kernel/kprobes.c:187:
+ ^I^I*kprobe_inst = bundle->quad0.slot0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/ia64/kernel/kprobes.c:187:
+ ^I^I*kprobe_inst = bundle->quad0.slot0;$

WARNING:TABSTOP: Statements should start on a tabstop
#171: FILE: arch/ia64/kernel/kprobes.c:189:
+	  case 1:

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/ia64/kernel/kprobes.c:190:
+ ^I^I*major_opcode = (bundle->quad1.slot1_p1 >> SLOT1_p1_OPCODE_SHIFT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#172: FILE: arch/ia64/kernel/kprobes.c:190:
+ ^I^I*major_opcode = (bundle->quad1.slot1_p1 >> SLOT1_p1_OPCODE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/ia64/kernel/kprobes.c:190:
+ ^I^I*major_opcode = (bundle->quad1.slot1_p1 >> SLOT1_p1_OPCODE_SHIFT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/ia64/kernel/kprobes.c:191:
+  ^I^Ikprobe_inst_p0 = bundle->quad0.slot1_p0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#173: FILE: arch/ia64/kernel/kprobes.c:191:
+  ^I^Ikprobe_inst_p0 = bundle->quad0.slot1_p0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/ia64/kernel/kprobes.c:191:
+  ^I^Ikprobe_inst_p0 = bundle->quad0.slot1_p0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/ia64/kernel/kprobes.c:192:
+  ^I^Ikprobe_inst_p1 = bundle->quad1.slot1_p1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: arch/ia64/kernel/kprobes.c:192:
+  ^I^Ikprobe_inst_p1 = bundle->quad1.slot1_p1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/ia64/kernel/kprobes.c:192:
+  ^I^Ikprobe_inst_p1 = bundle->quad1.slot1_p1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/ia64/kernel/kprobes.c:193:
+  ^I^I*kprobe_inst = kprobe_inst_p0 | (kprobe_inst_p1 << (64-46));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: arch/ia64/kernel/kprobes.c:193:
+  ^I^I*kprobe_inst = kprobe_inst_p0 | (kprobe_inst_p1 << (64-46));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/ia64/kernel/kprobes.c:193:
+  ^I^I*kprobe_inst = kprobe_inst_p0 | (kprobe_inst_p1 << (64-46));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#175: FILE: arch/ia64/kernel/kprobes.c:193:
+  		*kprobe_inst = kprobe_inst_p0 | (kprobe_inst_p1 << (64-46));
   		                                                      ^

WARNING:TABSTOP: Statements should start on a tabstop
#181: FILE: arch/ia64/kernel/kprobes.c:195:
+	  case 2:

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/ia64/kernel/kprobes.c:196:
+ ^I^I*major_opcode = (bundle->quad1.slot2 >> SLOT2_OPCODE_SHIFT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: arch/ia64/kernel/kprobes.c:196:
+ ^I^I*major_opcode = (bundle->quad1.slot2 >> SLOT2_OPCODE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/ia64/kernel/kprobes.c:196:
+ ^I^I*major_opcode = (bundle->quad1.slot2 >> SLOT2_OPCODE_SHIFT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/ia64/kernel/kprobes.c:197:
+ ^I^I*kprobe_inst = bundle->quad1.slot2;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: arch/ia64/kernel/kprobes.c:197:
+ ^I^I*kprobe_inst = bundle->quad1.slot2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/ia64/kernel/kprobes.c:197:
+ ^I^I*kprobe_inst = bundle->quad1.slot2;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot > 2'
#223: FILE: arch/ia64/kernel/kprobes.c:204:
+	if ((slot > 2) || ((bundle_encoding[template][1] == L) && slot > 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bundle_encoding[template][1] == L'
#223: FILE: arch/ia64/kernel/kprobes.c:204:
+	if ((slot > 2) || ((bundle_encoding[template][1] == L) && slot > 1)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#224: FILE: arch/ia64/kernel/kprobes.c:205:
+		printk(KERN_WARNING "Attempting to insert unaligned kprobe at 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: arch/ia64/kernel/kprobes.c:206:
+		printk(KERN_WARNING "Attempting to insert unaligned kprobe at 0x%lx\n",
+				addr);

CHECK:SPACING: No space is necessary after a cast
#233: FILE: arch/ia64/kernel/kprobes.c:214:
+	unsigned long addr = (unsigned long) p->addr;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#235: FILE: arch/ia64/kernel/kprobes.c:216:
+	unsigned long kprobe_inst=0;
 	                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: arch/ia64/kernel/kprobes.c:223:
+ ^Itemplate = bundle->quad0.template;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: arch/ia64/kernel/kprobes.c:223:
+ ^Itemplate = bundle->quad0.template;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/ia64/kernel/kprobes.c:223:
+ ^Itemplate = bundle->quad0.template;$

ERROR:SPACING: space required before the open parenthesis '('
#244: FILE: arch/ia64/kernel/kprobes.c:225:
+	if(valid_kprobe_addr(template, slot, addr))

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: arch/ia64/kernel/kprobes.c:229:
+ ^Iif (slot == 1 && bundle_encoding[template][1] == L)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: arch/ia64/kernel/kprobes.c:229:
+ ^Iif (slot == 1 && bundle_encoding[template][1] == L)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/ia64/kernel/kprobes.c:229:
+ ^Iif (slot == 1 && bundle_encoding[template][1] == L)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: arch/ia64/kernel/kprobes.c:230:
+  ^I^Islot++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#249: FILE: arch/ia64/kernel/kprobes.c:230:
+  ^I^Islot++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: arch/ia64/kernel/kprobes.c:230:
+  ^I^Islot++;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178279.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 56 warnings, 9 checks, 218 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178279.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
