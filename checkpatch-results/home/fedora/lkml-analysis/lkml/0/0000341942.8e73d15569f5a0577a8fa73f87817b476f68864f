WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
--- archs/linux-2.6/include/linux/sched.h	2003-08-26 12:33:49.000000000 +1000

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#83: FILE: include/linux/sched.h:561:
+extern void FASTCALL(sched_fork(task_t * p));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/sched.h:561:
+extern void FASTCALL(sched_fork(task_t * p));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#203: FILE: kernel/sched.c:76:
+#define TASK_PREEMPTS_CURR(p, rq)			\
+	( (p)->prio < (rq)->curr->prio			\
+	 	|| ((p)->prio == (rq)->curr->prio	\
+			 && (p)->static_prio < (rq)->curr->static_prio) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rq' - possible side-effects?
#203: FILE: kernel/sched.c:76:
+#define TASK_PREEMPTS_CURR(p, rq)			\
+	( (p)->prio < (rq)->curr->prio			\
+	 	|| ((p)->prio == (rq)->curr->prio	\
+			 && (p)->static_prio < (rq)->curr->static_prio) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#204: FILE: kernel/sched.c:77:
+	( (p)->prio < (rq)->curr->prio			\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: kernel/sched.c:78:
+^I ^I|| ((p)->prio == (rq)->curr->prio^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: kernel/sched.c:78:
+^I ^I|| ((p)->prio == (rq)->curr->prio^I\$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#205: FILE: kernel/sched.c:78:
+	( (p)->prio < (rq)->curr->prio			\
+	 	|| ((p)->prio == (rq)->curr->prio	\

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#206: FILE: kernel/sched.c:79:
+	 	|| ((p)->prio == (rq)->curr->prio	\
+			 && (p)->static_prio < (rq)->curr->static_prio) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#206: FILE: kernel/sched.c:79:
+			 && (p)->static_prio < (rq)->curr->static_prio) )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#245: FILE: kernel/sched.c:258:
+		p->total_time = (r*p->total_time + MAX_SLEEP/2) / MAX_SLEEP;
 		                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#245: FILE: kernel/sched.c:258:
+		p->total_time = (r*p->total_time + MAX_SLEEP/2) / MAX_SLEEP;
 		                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#246: FILE: kernel/sched.c:259:
+		p->sleep_time = (r*p->sleep_time + MAX_SLEEP/2) / MAX_SLEEP;
 		                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#246: FILE: kernel/sched.c:259:
+		p->sleep_time = (r*p->sleep_time + MAX_SLEEP/2) / MAX_SLEEP;
 		                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: kernel/sched.c:281:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: kernel/sched.c:283:
+	idx = min(find_next_bit(rq->active->bitmap, MAX_PRIO, MAX_RT_PRIO),
+			find_next_bit(rq->expired->bitmap, MAX_PRIO, MAX_RT_PRIO));

WARNING:LINE_SPACING: Missing a blank line after declarations
#324: FILE: kernel/sched.c:333:
+	unsigned long sleep = jiffies - p->timestamp;
+	p->timestamp = jiffies;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#342: FILE: kernel/sched.c:340:
+		unsigned long boost = sleep / 2;
+		add_task_time(current, boost, 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: kernel/sched.c:344:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#365: FILE: kernel/sched.c:351:
+	if (rq->array_sequence != p->array_sequence) {
+		p->used_slice = 0;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: kernel/sched.c:359:
+		steal = min((unsigned int)sleep / 2,
+				(task_timeslice(p, rq) - p->used_slice) / 2);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#394: FILE: kernel/sched.c:416:
+ n*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#443: FILE: kernel/sched.c:548:
+	if (current->used_slice >= ts) {
[...]
+	} else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: kernel/sched.c:550:
+^I ^I * This case is rare, it happens when the parent has only$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: kernel/sched.c:550:
+^I ^I * This case is rare, it happens when the parent has only$

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: kernel/sched.c:551:
+^I ^I * a single jiffy left from its timeslice. Taking the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#446: FILE: kernel/sched.c:551:
+^I ^I * a single jiffy left from its timeslice. Taking the$

CHECK:BRACES: Unbalanced braces around else statement
#454: FILE: kernel/sched.c:559:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: kernel/sched.c:562:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#517: FILE: kernel/sched.c:612:
+		runqueue_t *rq;
+		rq = task_rq_lock(p, &flags);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#530: FILE: kernel/sched.c:618:
+		add_task_time(p->parent, (p->parent->sleep_avg - p->sleep_avg)/2, 0);
 		                                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: kernel/sched.c:619:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'delta <= cache_decay_ticks'
#565: FILE: kernel/sched.c:1041:
+	if (idle && (delta <= cache_decay_ticks))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#762: FILE: kernel/sched.c:1633:
+	 * it wont have any effect on scheduling until the task is
 	      ^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000341942.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 10 warnings, 15 checks, 732 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000341942.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
