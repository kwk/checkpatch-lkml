WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#94: FILE: drivers/i2c/i2c-core.c:1350:
+/* Get the first entry off the head of the queue and lock it there.
+   The entry is guaranteed to remain first in the list and the handler

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#95: FILE: drivers/i2c/i2c-core.c:1351:
+   not be called until i2c_entry_put() is called. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: drivers/i2c/i2c-core.c:1352:
+static struct i2c_op_q_entry *_i2c_entry_get(struct i2c_adapter * adap)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: drivers/i2c/i2c-core.c:1354:
+	struct i2c_op_q_entry * entry = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: drivers/i2c/i2c-core.c:1357:
+		struct list_head * link = adap->q.next;

WARNING:LINE_SPACING: Missing a blank line after declarations
#102: FILE: drivers/i2c/i2c-core.c:1358:
+		struct list_head * link = adap->q.next;
+		entry = list_entry(link, struct i2c_op_q_entry, link);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_i2c_entry_get', this function's name, in a string
#108: FILE: drivers/i2c/i2c-core.c:1364:
+	pr_debug("_i2c_entry_get %p %p\n", adap, entry);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#112: FILE: drivers/i2c/i2c-core.c:1368:
+struct i2c_op_q_entry *i2c_entry_get(struct i2c_adapter * adap)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: drivers/i2c/i2c-core.c:1371:
+	struct i2c_op_q_entry * entry;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#126: FILE: drivers/i2c/i2c-core.c:1382:
+	/* Nothing to do here, all handling is from the kref_put return
+	   code. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: drivers/i2c/i2c-core.c:1382:
+	   code. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#129: FILE: drivers/i2c/i2c-core.c:1385:
+void i2c_entry_put(struct i2c_adapter * adap,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: drivers/i2c/i2c-core.c:1386:
+		   struct i2c_op_q_entry * entry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: drivers/i2c/i2c-core.c:1389:
+	struct i2c_op_q_entry * new_entry;

CHECK:BRACES: braces {} should be used on all arms of this statement
#139: FILE: drivers/i2c/i2c-core.c:1395:
+	if (kref_put(&entry->usecount, i2c_op_release)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#156: FILE: drivers/i2c/i2c-core.c:1412:
+	} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'i2c_op_done', this function's name, in a string
#162: FILE: drivers/i2c/i2c-core.c:1418:
+	pr_debug("i2c_op_done: %p %p\n", adap, e);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#165: FILE: drivers/i2c/i2c-core.c:1421:
+		/* We are the lucky winner!  We get to clean up the
+		   entry. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#165: FILE: drivers/i2c/i2c-core.c:1421:
+		   entry. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#180: FILE: drivers/i2c/i2c-core.c:1440:
+EXPORT_SYMBOL(i2c_op_done);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: include/linux/i2c.h:194:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#215: FILE: include/linux/i2c.h:201:
+/* Called from an non-blocking interface to get the current working
+   entry.  Returns NULL if there is none.  This is primarily for

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#218: FILE: include/linux/i2c.h:204:
+   must call i2c_entry_put() on it. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#219: FILE: include/linux/i2c.h:205:
+struct i2c_op_q_entry *i2c_entry_get(struct i2c_adapter * adap);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: include/linux/i2c.h:206:
+void i2c_entry_put(struct i2c_adapter * adap,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: include/linux/i2c.h:207:
+		   struct i2c_op_q_entry * entry);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#224: FILE: include/linux/i2c.h:210:
+/* Called from an non-blocking interface to report that an operation
+   has completed.  Can be called from interrupt context. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#224: FILE: include/linux/i2c.h:210:
+   has completed.  Can be called from interrupt context. */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#236: FILE: include/linux/i2c.h:262:
+	spinlock_t q_lock;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 14 warnings, 3 checks, 178 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
