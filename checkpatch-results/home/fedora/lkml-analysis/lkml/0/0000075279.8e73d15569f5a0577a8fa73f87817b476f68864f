WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#22: 
Below is a 2.6.17-rc4-mm3 patch that fixes a problem where the OOM killer was

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#34: 
Signed-Off-By: David S. Peterson <dsp@llnl.gov>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#94: FILE: include/linux/swap.h:178:
+extern int out_of_memory(struct zonelist *zonelist, gfp_t gfp_mask, int order);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm"
#140: FILE: mm/oom_kill.c:268:
+	if (mm == NULL || mm == &init_mm) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#195: FILE: mm/oom_kill.c:332:
+	printk("oom-killer: gfp_mask=0x%x, order=%d\n", gfp_mask, order);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#237: FILE: mm/oom_kill.c:377:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: mm/page_alloc.c:996:
+static struct page * oom_alloc(gfp_t gfp_mask, unsigned int order,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: mm/page_alloc.c:997:
+static struct page * oom_alloc(gfp_t gfp_mask, unsigned int order,
+		struct zonelist *zonelist)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: mm/page_alloc.c:1018:
+	page = get_page_from_freelist(gfp_mask | __GFP_HARDWALL, order,
+				zonelist, ALLOC_WMARK_HIGH | ALLOC_CPUSET);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075279.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 4 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075279.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
