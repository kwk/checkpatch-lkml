WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -Nru linux-2.6.6/drivers/net/Kconfig linux-2.6.6-h8300/drivers/net/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#39: FILE: drivers/net/Kconfig:1831:
+config NE_H8300
+	bool "NE2000 compatible support for H8/300"
+	depends on H8300 && NET_ETHERNET
+	help
+	  Say Y here if you want to use the NE2000 compatible 
+	  controller on the Renesas H8/300 processor.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#43: FILE: drivers/net/Kconfig:1835:
+^I  Say Y here if you want to use the NE2000 compatible $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: drivers/net/ne-h8300.c:1:
+/* ne-h8300.c: A NE2000 clone on H8/300 driver for linux. */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#66: FILE: drivers/net/ne-h8300.c:3:
+/*
+    original ne.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#95: FILE: drivers/net/ne-h8300.c:32:
+#include <asm/io.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/net/ne-h8300.c:53:
+#define NE_CMD^I ^I0x00$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#117: FILE: drivers/net/ne-h8300.c:54:
+#define NE_DATAPORT	(ei_status.word16?0x20:0x10)	/* NatSemi-defined port window offset. */
                    	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#117: FILE: drivers/net/ne-h8300.c:54:
+#define NE_DATAPORT	(ei_status.word16?0x20:0x10)	/* NatSemi-defined port window offset. */
                    	                      ^

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#118: FILE: drivers/net/ne-h8300.c:55:
+#define NE_RESET	(ei_status.word16?0x3f:0x1f)	/* Issue a read to reset, a write to clear. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#118: FILE: drivers/net/ne-h8300.c:55:
+#define NE_RESET	(ei_status.word16?0x3f:0x1f)	/* Issue a read to reset, a write to clear. */
                 	                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#118: FILE: drivers/net/ne-h8300.c:55:
+#define NE_RESET	(ei_status.word16?0x3f:0x1f)	/* Issue a read to reset, a write to clear. */
                 	                      ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#119: FILE: drivers/net/ne-h8300.c:56:
+#define NE_IO_EXTENT	(ei_status.word16?0x40:0x20)
                     	                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#119: FILE: drivers/net/ne-h8300.c:56:
+#define NE_IO_EXTENT	(ei_status.word16?0x40:0x20)
                     	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/net/ne-h8300.c:68:
+static void ne_get_8390_hdr(struct net_device *dev, struct e8390_pkt_hdr *hdr,
+			  int ring_page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: drivers/net/ne-h8300.c:70:
+static void ne_block_input(struct net_device *dev, int count,
+			  struct sk_buff *skb, int ring_offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: drivers/net/ne-h8300.c:72:
+static void ne_block_output(struct net_device *dev, const int count,
+		const unsigned char *buf, const int start_page);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: drivers/net/ne-h8300.c:74:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#140: FILE: drivers/net/ne-h8300.c:77:
+static int __init init_reg_offset(struct net_device *dev,unsigned long base_addr)
                                                         ^

CHECK:SPACING: No space is necessary after a cast
#142: FILE: drivers/net/ne-h8300.c:79:
+	struct ei_device *ei_local = (struct ei_device *) netdev_priv(dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: drivers/net/ne-h8300.c:82:
+^I$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#146: FILE: drivers/net/ne-h8300.c:83:
+	bus_width = *(volatile unsigned char *)ABWCR;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#159: FILE: drivers/net/ne-h8300.c:96:
+static int __initdata h8300_ne_count = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after h8300_ne_count
#159: FILE: drivers/net/ne-h8300.c:96:
+static int __initdata h8300_ne_count = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after h8300_ne_base[]
#161: FILE: drivers/net/ne-h8300.c:98:
+static unsigned long __initdata h8300_ne_base[] = { 0x800600 };

WARNING:MISPLACED_INIT: __initdata should be placed after h8300_ne_base[]
#165: FILE: drivers/net/ne-h8300.c:102:
+static unsigned long __initdata h8300_ne_base[] = { 0x200000 };

CHECK:BRACES: braces {} should be used on all arms of this statement
#171: FILE: drivers/net/ne-h8300.c:108:
+	if (h8300_ne_count < (sizeof(h8300_ne_base) / sizeof(unsigned long))) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#176: FILE: drivers/net/ne-h8300.c:113:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#181: FILE: drivers/net/ne-h8300.c:118:
+/*  Probe for various non-shared-memory ethercards.
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: drivers/net/ne-h8300.c:136:
+	E2010-x starts at 0x100 and ends at 0xffff.  */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: drivers/net/ne-h8300.c:199:
+	static unsigned version_printed;

CHECK:SPACING: No space is necessary after a cast
#263: FILE: drivers/net/ne-h8300.c:200:
+	struct ei_device *ei_local = (struct ei_device *) netdev_priv(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: drivers/net/ne-h8300.c:215:
+		int regd;
+		outb_p(E8390_NODMA+E8390_PAGE1+E8390_STOP, ioaddr + E8390_CMD);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#278: FILE: drivers/net/ne-h8300.c:215:
+		outb_p(E8390_NODMA+E8390_PAGE1+E8390_STOP, ioaddr + E8390_CMD);
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#278: FILE: drivers/net/ne-h8300.c:215:
+		outb_p(E8390_NODMA+E8390_PAGE1+E8390_STOP, ioaddr + E8390_CMD);
 		                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#281: FILE: drivers/net/ne-h8300.c:218:
+		outb_p(E8390_NODMA+E8390_PAGE0, ioaddr + E8390_CMD);
 		                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#292: FILE: drivers/net/ne-h8300.c:229:
+		printk(KERN_INFO "%s", version1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#294: FILE: drivers/net/ne-h8300.c:231:
+	printk(KERN_INFO "NE*000 ethercard probe at %08x:", ioaddr);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#297: FILE: drivers/net/ne-h8300.c:234:
+	/* Read the 16 bytes of station address PROM.
+	   We must first initialize registers, similar to NS8390_init(eifdev, 0).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#299: FILE: drivers/net/ne-h8300.c:236:
+	   (I learned the hard way!). */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#302: FILE: drivers/net/ne-h8300.c:239:
+		struct {unsigned char value, offset; } program_seq[] =
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#303: FILE: drivers/net/ne-h8300.c:240:
+			{E8390_NODMA+E8390_PAGE0+E8390_STOP, E8390_CMD}, /* Select page 0*/
 			            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#303: FILE: drivers/net/ne-h8300.c:240:
+			{E8390_NODMA+E8390_PAGE0+E8390_STOP, E8390_CMD}, /* Select page 0*/
 			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#315: FILE: drivers/net/ne-h8300.c:252:
+			{E8390_RREAD+E8390_START, E8390_CMD},
 			            ^

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(program_seq)
#318: FILE: drivers/net/ne-h8300.c:255:
+		for (i = 0; i < sizeof(program_seq)/sizeof(program_seq[0]); i++)

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#318: FILE: drivers/net/ne-h8300.c:255:
+		for (i = 0; i < sizeof(program_seq)/sizeof(program_seq[0]); i++)
 		                                   ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#321: FILE: drivers/net/ne-h8300.c:258:
+
+	}

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#322: FILE: drivers/net/ne-h8300.c:259:
+	bus_width = *(volatile unsigned char *)ABWCR;

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: drivers/net/ne-h8300.c:262:
+	for(i = 0; i < 16 /*sizeof(SA_prom)*/; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: drivers/net/ne-h8300.c:269:
+^I$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#341: FILE: drivers/net/ne-h8300.c:278:
+	if (! dev->irq) {
 	    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#342: FILE: drivers/net/ne-h8300.c:279:
+		printk(" failed to detect IRQ line.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#348: FILE: drivers/net/ne-h8300.c:285:
+	/* Snarf the interrupt now.  There's no point in waiting since we cannot
+	   share and the board will usually be enabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#348: FILE: drivers/net/ne-h8300.c:285:
+	   share and the board will usually be enabled. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: drivers/net/ne-h8300.c:288:
+		printk (" unable to get IRQ %d (errno=%d).\n", dev->irq, ret);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: drivers/net/ne-h8300.c:288:
+		printk (" unable to get IRQ %d (errno=%d).\n", dev->irq, ret);

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: drivers/net/ne-h8300.c:294:
+	for(i = 0; i < ETHER_ADDR_LEN; i++) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#358: FILE: drivers/net/ne-h8300.c:295:
+		printk(" %2.2x", SA_prom[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#362: FILE: drivers/net/ne-h8300.c:299:
+	printk("\n%s: %s found at %#x, using IRQ %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/net/ne-h8300.c:300:
+	printk("\n%s: %s found at %#x, using IRQ %d.\n",
+		dev->name, name, ioaddr, dev->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#403: FILE: drivers/net/ne-h8300.c:340:
+		printk(KERN_DEBUG "%s: Shutting down ethercard.\n", dev->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#409: FILE: drivers/net/ne-h8300.c:346:
+/* Hard reset the card.  This used to pause for the same period that a
+   8390 reset command required, but that shouldn't be necessary. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#409: FILE: drivers/net/ne-h8300.c:346:
+   8390 reset command required, but that shouldn't be necessary. */

CHECK:SPACING: No space is necessary after a cast
#414: FILE: drivers/net/ne-h8300.c:351:
+	struct ei_device *ei_local = (struct ei_device *) netdev_priv(dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#417: FILE: drivers/net/ne-h8300.c:354:
+		printk(KERN_DEBUG "resetting the 8390 t=%ld...", jiffies);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#426: FILE: drivers/net/ne-h8300.c:363:
+	while ((inb_p(NE_BASE+EN0_ISR) & ENISR_RESET) == 0)
 	                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#427: FILE: drivers/net/ne-h8300.c:364:
+		if (jiffies - reset_start_time > 2*HZ/100) {
 		                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#427: FILE: drivers/net/ne-h8300.c:364:
+		if (jiffies - reset_start_time > 2*HZ/100) {
 		                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#428: FILE: drivers/net/ne-h8300.c:365:
+			printk(KERN_WARNING "%s: ne_reset_8390() did not complete.\n", dev->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_reset_8390', this function's name, in a string
#428: FILE: drivers/net/ne-h8300.c:365:
+			printk(KERN_WARNING "%s: ne_reset_8390() did not complete.\n", dev->name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#435: FILE: drivers/net/ne-h8300.c:372:
+/* Grab the 8390 specific header. Similar to the block_input routine, but
+   we don't need to be concerned with ring wrap as the header will be at

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#436: FILE: drivers/net/ne-h8300.c:373:
+   the start of a page, so we optimize accordingly. */

CHECK:SPACING: No space is necessary after a cast
#440: FILE: drivers/net/ne-h8300.c:377:
+	struct ei_device *ei_local = (struct ei_device *) netdev_priv(dev);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#443: FILE: drivers/net/ne-h8300.c:380:
+	if (ei_status.dmaing)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#445: FILE: drivers/net/ne-h8300.c:382:
+		printk(KERN_EMERG "%s: DMAing conflict in ne_get_8390_hdr "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_get_8390_hdr', this function's name, in a string
#445: FILE: drivers/net/ne-h8300.c:382:
+		printk(KERN_EMERG "%s: DMAing conflict in ne_get_8390_hdr "

WARNING:SPLIT_STRING: quoted string split across lines
#446: FILE: drivers/net/ne-h8300.c:383:
+		printk(KERN_EMERG "%s: DMAing conflict in ne_get_8390_hdr "
+			"[DMAstat:%d][irqlock:%d].\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#452: FILE: drivers/net/ne-h8300.c:389:
+	outb_p(E8390_NODMA+E8390_PAGE0+E8390_START, NE_BASE + NE_CMD);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#452: FILE: drivers/net/ne-h8300.c:389:
+	outb_p(E8390_NODMA+E8390_PAGE0+E8390_START, NE_BASE + NE_CMD);
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#457: FILE: drivers/net/ne-h8300.c:394:
+	outb_p(E8390_RREAD+E8390_START, NE_BASE + NE_CMD);
 	                  ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#459: FILE: drivers/net/ne-h8300.c:396:
+	if (ei_status.word16) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#462: FILE: drivers/net/ne-h8300.c:399:
+		unsigned short *p = (unsigned short *)hdr;
+		for (len = sizeof(struct e8390_pkt_hdr)>>1; len > 0; len--)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#462: FILE: drivers/net/ne-h8300.c:399:
+		for (len = sizeof(struct e8390_pkt_hdr)>>1; len > 0; len--)
 		                                       ^

CHECK:BRACES: Unbalanced braces around else statement
#464: FILE: drivers/net/ne-h8300.c:401:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#474: FILE: drivers/net/ne-h8300.c:411:
+/* Block input and output, similar to the Crynwr packet driver.  If you
+   are porting to a new ethercard, look at the packet driver source for hints.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#476: FILE: drivers/net/ne-h8300.c:413:
+   the packet out through the "remote DMA" dataport using outb. */

CHECK:SPACING: No space is necessary after a cast
#480: FILE: drivers/net/ne-h8300.c:417:
+	struct ei_device *ei_local = (struct ei_device *) netdev_priv(dev);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#487: FILE: drivers/net/ne-h8300.c:424:
+	if (ei_status.dmaing)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#489: FILE: drivers/net/ne-h8300.c:426:
+		printk(KERN_EMERG "%s: DMAing conflict in ne_block_input "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_block_input', this function's name, in a string
#489: FILE: drivers/net/ne-h8300.c:426:
+		printk(KERN_EMERG "%s: DMAing conflict in ne_block_input "

WARNING:SPLIT_STRING: quoted string split across lines
#490: FILE: drivers/net/ne-h8300.c:427:
+		printk(KERN_EMERG "%s: DMAing conflict in ne_block_input "
+			"[DMAstat:%d][irqlock:%d].\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#495: FILE: drivers/net/ne-h8300.c:432:
+	outb_p(E8390_NODMA+E8390_PAGE0+E8390_START, NE_BASE + NE_CMD);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#495: FILE: drivers/net/ne-h8300.c:432:
+	outb_p(E8390_NODMA+E8390_PAGE0+E8390_START, NE_BASE + NE_CMD);
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#500: FILE: drivers/net/ne-h8300.c:437:
+	outb_p(E8390_RREAD+E8390_START, NE_BASE + NE_CMD);
 	                  ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#501: FILE: drivers/net/ne-h8300.c:438:
+	if (ei_status.word16)
+	{

CHECK:BRACES: braces {} should be used on all arms of this statement
#501: FILE: drivers/net/ne-h8300.c:438:
+	if (ei_status.word16)
[...]
+	} else {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#505: FILE: drivers/net/ne-h8300.c:442:
+		unsigned short *p = (unsigned short *)buf;
+		for (len = count>>1; len > 0; len--)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#505: FILE: drivers/net/ne-h8300.c:442:
+		for (len = count>>1; len > 0; len--)
 		                ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#507: FILE: drivers/net/ne-h8300.c:444:
+		if (count & 0x01)
+		{

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#509: FILE: drivers/net/ne-h8300.c:446:
+			buf[count-1] = inb(NE_BASE + NE_DATAPORT);
 			         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#520: FILE: drivers/net/ne-h8300.c:457:
+	/* This was for the ALPHA version only, but enough people have
+	   been encountering problems so it is still here.  If you see

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#522: FILE: drivers/net/ne-h8300.c:459:
+	   or 2) have noise/speed problems with your bus. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#524: FILE: drivers/net/ne-h8300.c:461:
+	if (ei_debug > 1)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#528: FILE: drivers/net/ne-h8300.c:465:
+		int addr, tries = 20;
+		do {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#530: FILE: drivers/net/ne-h8300.c:467:
+			/* DON'T check for 'inb_p(EN0_ISR) & ENISR_RDC' here
+			   -- it's broken for Rx on some cards! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#530: FILE: drivers/net/ne-h8300.c:467:
+			   -- it's broken for Rx on some cards! */

WARNING:LINE_SPACING: Missing a blank line after declarations
#533: FILE: drivers/net/ne-h8300.c:470:
+			int low = inb_p(NE_BASE + EN0_RSARLO);
+			addr = (high << 8) + low;

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: drivers/net/ne-h8300.c:474:
+^I ^Iif (tries <= 0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: drivers/net/ne-h8300.c:474:
+^I ^Iif (tries <= 0)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#538: FILE: drivers/net/ne-h8300.c:475:
+			printk(KERN_WARNING "%s: RX transfer address mismatch,"

WARNING:SPLIT_STRING: quoted string split across lines
#539: FILE: drivers/net/ne-h8300.c:476:
+			printk(KERN_WARNING "%s: RX transfer address mismatch,"
+				"%#4.4x (expected) vs. %#4.4x (actual).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/net/ne-h8300.c:485:
+static void ne_block_output(struct net_device *dev, int count,
+		const unsigned char *buf, const int start_page)

CHECK:SPACING: No space is necessary after a cast
#550: FILE: drivers/net/ne-h8300.c:487:
+	struct ei_device *ei_local = (struct ei_device *) netdev_priv(dev);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#557: FILE: drivers/net/ne-h8300.c:494:
+	/* Round the count up for word writes.  Do we need to do this?
+	   What effect will an odd byte count have on the 8390?

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#558: FILE: drivers/net/ne-h8300.c:495:
+	   I should check someday. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#564: FILE: drivers/net/ne-h8300.c:501:
+	if (ei_status.dmaing)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#566: FILE: drivers/net/ne-h8300.c:503:
+		printk(KERN_EMERG "%s: DMAing conflict in ne_block_output."

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_block_output', this function's name, in a string
#566: FILE: drivers/net/ne-h8300.c:503:
+		printk(KERN_EMERG "%s: DMAing conflict in ne_block_output."

WARNING:SPLIT_STRING: quoted string split across lines
#567: FILE: drivers/net/ne-h8300.c:504:
+		printk(KERN_EMERG "%s: DMAing conflict in ne_block_output."
+			"[DMAstat:%d][irqlock:%d]\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#573: FILE: drivers/net/ne-h8300.c:510:
+	outb_p(E8390_PAGE0+E8390_START+E8390_NODMA, NE_BASE + NE_CMD);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#573: FILE: drivers/net/ne-h8300.c:510:
+	outb_p(E8390_PAGE0+E8390_START+E8390_NODMA, NE_BASE + NE_CMD);
 	                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#581: FILE: drivers/net/ne-h8300.c:518:
+	/* Handle the read-before-write bug the same way as the
+	   Crynwr packet driver -- the NatSemi method doesn't work.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#583: FILE: drivers/net/ne-h8300.c:520:
+	   problems with your NEx000 this is better than nothing! */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#589: FILE: drivers/net/ne-h8300.c:526:
+	outb_p(E8390_RREAD+E8390_START, NE_BASE + NE_CMD);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#602: FILE: drivers/net/ne-h8300.c:539:
+	outb_p(E8390_RWRITE+E8390_START, NE_BASE + NE_CMD);
 	                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#606: FILE: drivers/net/ne-h8300.c:543:
+		unsigned short *p = (unsigned short *)buf;
+		for (len = count>>1; len > 0; len--)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#606: FILE: drivers/net/ne-h8300.c:543:
+		for (len = count>>1; len > 0; len--)
 		                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#616: FILE: drivers/net/ne-h8300.c:553:
+	/* This was for the ALPHA version only, but enough people have
+	   been encountering problems so it is still here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#616: FILE: drivers/net/ne-h8300.c:553:
+	   been encountering problems so it is still here. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#618: FILE: drivers/net/ne-h8300.c:555:
+	if (ei_debug > 1)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#622: FILE: drivers/net/ne-h8300.c:559:
+		int addr, tries = 20;
+		do {

WARNING:LINE_SPACING: Missing a blank line after declarations
#625: FILE: drivers/net/ne-h8300.c:562:
+			int low = inb_p(NE_BASE + EN0_RSARLO);
+			addr = (high << 8) + low;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#630: FILE: drivers/net/ne-h8300.c:567:
+		if (tries <= 0)
+		{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#632: FILE: drivers/net/ne-h8300.c:569:
+			printk(KERN_WARNING "%s: Tx packet transfer address mismatch,"

WARNING:SPLIT_STRING: quoted string split across lines
#633: FILE: drivers/net/ne-h8300.c:570:
+			printk(KERN_WARNING "%s: Tx packet transfer address mismatch,"
+				"%#4.4x (expected) vs. %#4.4x (actual).\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#642: FILE: drivers/net/ne-h8300.c:579:
+		if (jiffies - dma_start > 2*HZ/100) {		/* 20ms */
 		                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#642: FILE: drivers/net/ne-h8300.c:579:
+		if (jiffies - dma_start > 2*HZ/100) {		/* 20ms */
 		                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#643: FILE: drivers/net/ne-h8300.c:580:
+			printk(KERN_WARNING "%s: timeout waiting for Tx RDC.\n", dev->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#645: FILE: drivers/net/ne-h8300.c:582:
+			NS8390_init(dev,1);
 			               ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#652: FILE: drivers/net/ne-h8300.c:589:
+	return;
+}

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#654: FILE: drivers/net/ne-h8300.c:591:
+
 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: drivers/net/ne-h8300.c:591:
+^L$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#654: FILE: drivers/net/ne-h8300.c:591:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#671: FILE: drivers/net/ne-h8300.c:608:
+/* This is set up so that no ISA autoprobe takes place. We can't guarantee
+that the ne2k probe is the last 8390 based probe to take place (as it

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#673: FILE: drivers/net/ne-h8300.c:610:
+ISA device autoprobes on a running machine are not recommended anyway. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#681: FILE: drivers/net/ne-h8300.c:618:
+		struct net_device *dev = alloc_ei_netdev();
+		if (!dev)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#697: FILE: drivers/net/ne-h8300.c:634:
+			printk(KERN_WARNING "ne.c: No NE*000 card found at i/o = %#x\n", io[this_dev]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#697: FILE: drivers/net/ne-h8300.c:634:
+			printk(KERN_WARNING "ne.c: No NE*000 card found at i/o = %#x\n", io[this_dev]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#699: FILE: drivers/net/ne-h8300.c:636:
+			printk(KERN_NOTICE "ne.c: You must supply \"io=0xNNN\" value(s) for ISA cards.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#713: FILE: drivers/net/ne-h8300.c:650:
+		struct net_device *dev = dev_ne[this_dev];
+		if (dev) {

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#721: FILE: drivers/net/ne-h8300.c:657:
diff -Nru linux-2.6.6/drivers/net/Space.c linux-2.6.6-h8300/drivers/net/Space.c

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: drivers/net/Space.c:195:
+    defined(CONFIG_NE_H8300)  /* ISA & PC-9800 CBUS (use ne2k-pci for PCI cards) */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282730.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 79 warnings, 52 checks, 698 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282730.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
