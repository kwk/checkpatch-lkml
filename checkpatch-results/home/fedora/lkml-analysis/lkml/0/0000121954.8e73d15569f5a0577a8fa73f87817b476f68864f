WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
> p->signal was protected by the tasklist_lock.  Thanks for pointing it out.

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#84: FILE: mips/kernel/irixsig.c:543:
+extern int getrusage_both(struct task_struct *, struct rusage __user *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#84: FILE: mips/kernel/irixsig.c:543:
+extern int getrusage_both(struct task_struct *, struct rusage __user *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rusage __user *' should also have an identifier name
#84: FILE: mips/kernel/irixsig.c:543:
+extern int getrusage_both(struct task_struct *, struct rusage __user *);

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#115: FILE: mips/kernel/sysirix.c:237:
+extern int getrusage_self(struct rusage __user *ru);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#116: FILE: mips/kernel/sysirix.c:238:
+extern int getrusage_children(struct rusage __user *ru);

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#144: FILE: exit.c:41:
+int getrusage_both(struct task_struct *, struct rusage __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#144: FILE: exit.c:41:
+int getrusage_both(struct task_struct *, struct rusage __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rusage __user *' should also have an identifier name
#144: FILE: exit.c:41:
+int getrusage_both(struct task_struct *, struct rusage __user *);

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: sys.c:1681:
+ * can be avoided if we are a single threaded process, since we are current; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#235: FILE: sys.c:1693:
+	memset((char *) &r, 0, sizeof (r));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#235: FILE: sys.c:1693:
+	struct rusage r;
+	memset((char *) &r, 0, sizeof (r));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: sys.c:1693:
+	memset((char *) &r, 0, sizeof (r));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: sys.c:1704:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: sys.c:1725:
+ * since we traverse the task TGID hash list.  However, we do not need to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: sys.c:1726:
+ * take the siglock even for the multithreaded case,  as the signal fields, $

CHECK:SPACING: No space is necessary after a cast
#339: FILE: sys.c:1746:
+	memset((char *) &r, 0, sizeof (r));

WARNING:LINE_SPACING: Missing a blank line after declarations
#339: FILE: sys.c:1746:
+	struct rusage r;
+	memset((char *) &r, 0, sizeof (r));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: sys.c:1746:
+	memset((char *) &r, 0, sizeof (r));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: sys.c:1788:
+ * wait_* routines, on the children. As even a single threaded process $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: sys.c:1789:
+ * we are waiting on can spawn another thread and exec, we cannot $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: sys.c:1791:
+ * We also need to take the siglock to protect the c* fields of the $

CHECK:SPACING: No space is necessary after a cast
#395: FILE: sys.c:1801:
+	memset((char *) &r, 0, sizeof (r));

WARNING:LINE_SPACING: Missing a blank line after declarations
#395: FILE: sys.c:1801:
+	struct task_struct *t;
+	memset((char *) &r, 0, sizeof (r));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: sys.c:1801:
+	memset((char *) &r, 0, sizeof (r));

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#444: FILE: sys.c:1846:
+	switch (who) {
+		case RUSAGE_SELF:
[...]
+		case RUSAGE_CHILDREN:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 19 warnings, 3 checks, 353 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
