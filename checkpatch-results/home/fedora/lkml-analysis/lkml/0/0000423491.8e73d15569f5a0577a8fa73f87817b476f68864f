WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#72: FILE: fs/aio.c:62:
+int async_poll(struct kiocb *iocb, int events);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#83: FILE: fs/aio.c:900:
+	unsigned events = iocb->aio_buf;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: fs/aio.c:902:
+^I/* Did the user set any bits they weren't supposed to? (The $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: fs/aio.c:907:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#133: FILE: fs/select.c:34:
+	struct file * filp;
 	              ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: fs/select.c:34:
+	struct file * filp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#146: FILE: fs/select.c:46:
+	((unsigned long)((table)->entry+1) > \
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#150: FILE: fs/select.c:50:
+typedef struct async_poll_table_struct {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: fs/select.c:51:
+^Ipoll_table^I^Ipt;^I^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#169: FILE: fs/select.c:73:
+void __poll_freewait(poll_table* pt, wait_queue_t *wait)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#183: FILE: fs/select.c:86:
+				remove_wait_queue(entry->wait_address,&entry->wait);
 				                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#183: FILE: fs/select.c:86:
+				remove_wait_queue(entry->wait_address,&entry->wait);
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#185: FILE: fs/select.c:88:
+				__remove_wait_queue(entry->wait_address,&entry->wait);
 				                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#185: FILE: fs/select.c:88:
+				__remove_wait_queue(entry->wait_address,&entry->wait);
 				                                        ^

CHECK:SPACING: No space is necessary after a cast
#192: FILE: fs/select.c:94:
+			free_page((unsigned long) old);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#198: FILE: fs/select.c:100:
+void poll_freewait(poll_table* pt)

WARNING:MEMORY_BARRIER: memory barrier without comment
#211: FILE: fs/select.c:113:
+	wmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#217: FILE: fs/select.c:119:
+			poll_table *p2 = xchg(&iocb->ki_data, NULL);
+			if (p2) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: fs/select.c:120:
+^I^I^I^Ipoll_freewait(p2); $

WARNING:MEMORY_BARRIER: memory barrier without comment
#224: FILE: fs/select.c:126:
+		wmb();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#228: FILE: fs/select.c:130:
+static int async_poll_waiter(wait_queue_t *wait, unsigned mode, int sync)

WARNING:LINE_SPACING: Missing a blank line after declarations
#240: FILE: fs/select.c:142:
+		poll_table *p2 = xchg(&iocb->ki_data, NULL);
+		if (p2) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: fs/select.c:143:
+^I^I^I__poll_freewait(p2, wait); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: fs/select.c:158:
+^I^Ipoll_freewait(p); $

WARNING:MEMORY_BARRIER: memory barrier without comment
#295: FILE: fs/select.c:197:
+	wmb();

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#300: FILE: fs/select.c:202:
+	iocb->ki_users ++;
 	               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: fs/select.c:210:
+^I^I/* Must be freed after aio_complete to synchronise with $

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: fs/select.c:649:
+                        sizeof(async_poll_table), 0, 0, NULL, NULL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: fs/select.c:649:
+	async_poll_table_cache = kmem_cache_create("async poll table",
+                        sizeof(async_poll_table), 0, 0, NULL, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: fs/select.c:649:
+                        sizeof(async_poll_table), 0, 0, NULL, NULL);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423491.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 11 warnings, 3 checks, 302 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423491.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
