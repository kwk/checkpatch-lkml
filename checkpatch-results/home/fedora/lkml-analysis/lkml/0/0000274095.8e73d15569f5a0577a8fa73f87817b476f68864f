WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#38: 
>be robust and compatible. It doesnt rely on any previous state (because
                              ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
diff -Nur linux-2.6.6.org/include/linux/interrupt.h linux-2.6.6/include/linux/interrupt.h

CHECK:LINE_SPACING: Please don't use multiple blank lines
#55: FILE: include/linux/interrupt.h:249:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#56: FILE: include/linux/interrupt.h:250:
+extern void diskdump_clear_tasklet(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#57: FILE: include/linux/interrupt.h:251:
+extern void diskdump_run_tasklet(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/timer.h:99:
+extern void diskdump_clear_timers(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#68: FILE: include/linux/timer.h:100:
+extern void diskdump_run_timers(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: include/linux/workqueue.h:87:
+extern void diskdump_clear_workqueue(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: include/linux/workqueue.h:88:
+extern void diskdump_run_workqueue(void);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#96: FILE: kernel/softirq.c:324:
+EXPORT_SYMBOL(diskdump_clear_tasklet);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: kernel/softirq.c:335:
+		struct tasklet_struct *t = list;
+		list = list->next;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#109: FILE: kernel/softirq.c:337:
+		if (!atomic_read(&t->count) &&
[...]
+				t->func(t->data);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#118: FILE: kernel/softirq.c:346:
+EXPORT_SYMBOL(diskdump_run_tasklet);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#160: FILE: kernel/timer.c:1311:
+EXPORT_SYMBOL(diskdump_clear_timers);

WARNING:LINE_SPACING: Missing a blank line after declarations
#165: FILE: kernel/timer.c:1316:
+	tvec_base_t *base = &__get_cpu_var(tvec_bases);
+	__run_timers(base);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#168: FILE: kernel/timer.c:1319:
+EXPORT_SYMBOL(diskdump_run_timers);

WARNING:SPACING: Unnecessary space before function pointer arguments
#201: FILE: kernel/workqueue.c:444:
+		void (*f) (void *) = work->func;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#217: FILE: kernel/workqueue.c:536:
+EXPORT_SYMBOL(diskdump_clear_workqueue);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#218: FILE: kernel/workqueue.c:537:
+EXPORT_SYMBOL(diskdump_run_workqueue);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274095.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 7 checks, 145 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274095.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
