ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#25: 
--- a/sound/isa/sb/sb16.c	Thu Apr  3 23:41:01 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#104: FILE: sound/isa/sb/sb16.c:160:
+static struct pnp_card_device_id snd_sb16_pnpids[] __devinitdata = {

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#228: FILE: sound/isa/sb/sb16.c:242:
+	{ .id = "CTLXXXX" , .devs = { { "CTL0031" }, { "CTL0021" } } },
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#229: FILE: sound/isa/sb/sb16.c:243:
+	{ .id = "CTLXXXX" , .devs = { { "CTL0041" }, { "CTL0021" } } },
 	                  ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#230: FILE: sound/isa/sb/sb16.c:244:
+	{ .id = "CTLXXXX" , .devs = { { "CTL0042" }, { "CTL0022" } } },
 	                  ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#231: FILE: sound/isa/sb/sb16.c:245:
+	{ .id = "CTLXXXX" , .devs = { { "CTL0044" }, { "CTL0023" } } },
 	                  ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#232: FILE: sound/isa/sb/sb16.c:246:
+	{ .id = "CTLXXXX" , .devs = { { "CTL0045" }, { "CTL0022" } } },
 	                  ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#248: FILE: sound/isa/sb/sb16.c:259:
+static int __devinit snd_card_sb16_pnp(int dev, struct snd_card_sb16 *acard,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: sound/isa/sb/sb16.c:264:
+	struct pnp_resource_table * cfg = kmalloc(GFP_ATOMIC, sizeof(struct pnp_resource_table));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: sound/isa/sb/sb16.c:267:
+^Iif (!cfg) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: sound/isa/sb/sb16.c:268:
+^I^Ireturn -ENOMEM; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: sound/isa/sb/sb16.c:270:
+^Iif (acard->dev == NULL) { $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acard->dev"
#275: FILE: sound/isa/sb/sb16.c:270:
+	if (acard->dev == NULL) { 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: sound/isa/sb/sb16.c:271:
+^I^Ikfree(cfg); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: sound/isa/sb/sb16.c:272:
+^I^Ireturn -ENODEV; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: sound/isa/sb/sb16.c:273:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: sound/isa/sb/sb16.c:280:
+^Ipnp_init_resource_table(cfg); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: sound/isa/sb/sb16.c:281:
+^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: sound/isa/sb/sb16.c:282:
+^I/* override resources */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: sound/isa/sb/sb16.c:296:
+^Iif ((pnp_manual_config_dev(pdev, cfg, 0)) < 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: sound/isa/sb/sb16.c:297:
+^I^Iprintk(KERN_ERR PFX "AUDIO the requested resources are invalid, using auto config\n"); $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#321: FILE: sound/isa/sb/sb16.c:297:
+		printk(KERN_ERR PFX "AUDIO the requested resources are invalid, using auto config\n"); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: sound/isa/sb/sb16.c:298:
+^Ierr = pnp_activate_dev(pdev); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: sound/isa/sb/sb16.c:299:
+^Iif (err < 0) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: sound/isa/sb/sb16.c:300:
+^I^Iprintk(KERN_ERR PFX "AUDIO pnp configure failure\n"); $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#324: FILE: sound/isa/sb/sb16.c:300:
+		printk(KERN_ERR PFX "AUDIO pnp configure failure\n"); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: sound/isa/sb/sb16.c:302:
+^I^Ireturn err; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: sound/isa/sb/sb16.c:303:
+^I} $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: sound/isa/sb/sb16.c:311:
+	snd_printdd("pnp SB16: port=0x%lx, mpu port=0x%lx, fm port=0x%lx\n",
 			port[dev], mpu_port[dev], fm_port[dev]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: sound/isa/sb/sb16.c:313:
+	snd_printdd("pnp SB16: dma1=%i, dma2=%i, irq=%i\n",
 			dma8[dev], dma16[dev], irq[dev]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#371: FILE: sound/isa/sb/sb16.c:317:
+	if (pdev != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: sound/isa/sb/sb16.c:318:
+^I^Ipnp_init_resource_table(cfg); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: sound/isa/sb/sb16.c:319:
+^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: sound/isa/sb/sb16.c:320:
+^I^I/* override resources */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: sound/isa/sb/sb16.c:327:
+^I^Iif ((pnp_manual_config_dev(pdev, cfg, 0)) < 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: sound/isa/sb/sb16.c:328:
+^I^I^Iprintk(KERN_ERR PFX "WaveTable the requested resources are invalid, using auto config\n"); $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#382: FILE: sound/isa/sb/sb16.c:328:
+			printk(KERN_ERR PFX "WaveTable the requested resources are invalid, using auto config\n"); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: sound/isa/sb/sb16.c:329:
+^I^Ierr = pnp_activate_dev(pdev); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: sound/isa/sb/sb16.c:330:
+^I^Iif (err < 0) { $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#384: FILE: sound/isa/sb/sb16.c:330:
+		if (err < 0) { 
+			goto __wt_error; 
+		} 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: sound/isa/sb/sb16.c:331:
+^I^I^Igoto __wt_error; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: sound/isa/sb/sb16.c:332:
+^I^I} $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#393: FILE: sound/isa/sb/sb16.c:339:
+			printk(KERN_ERR PFX "WaveTable pnp configure failure\n");

CHECK:SPACING: No space is necessary after a cast
#450: FILE: sound/isa/sb/sb16.c:372:
+	acard = (struct snd_card_sb16 *) card->private_data;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#452: FILE: sound/isa/sb/sb16.c:374:
+		if ((err = snd_card_sb16_pnp(dev, acard, pcard, pid))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#521: FILE: sound/isa/sb/sb16.c:562:
+static int __devinit snd_sb16_pnp_detect(struct pnp_card_link *card,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#544: FILE: sound/isa/sb/sb16.c:583:
+static void __devexit snd_sb16_pnp_remove(struct pnp_card_link * pcard)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#544: FILE: sound/isa/sb/sb16.c:583:
+static void __devexit snd_sb16_pnp_remove(struct pnp_card_link * pcard)

CHECK:SPACING: No space is necessary after a cast
#546: FILE: sound/isa/sb/sb16.c:585:
+	snd_card_t *card = (snd_card_t *) pnp_get_card_drvdata(pcard);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 9 warnings, 6 checks, 580 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
