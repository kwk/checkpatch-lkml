CHECK:CAMELCASE: Avoid CamelCase: <xDesc>
#88: FILE: arch/ppc64/kernel/LparData.c:44:
+	.xDesc = 0xc8a5d9c4,	/* "HvRD" ebcdic */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <xSize>
#89: FILE: arch/ppc64/kernel/LparData.c:45:
+	.xSize = sizeof(struct HvReleaseData),

CHECK:CAMELCASE: Avoid CamelCase: <HvReleaseData>
#89: FILE: arch/ppc64/kernel/LparData.c:45:
+	.xSize = sizeof(struct HvReleaseData),

CHECK:CAMELCASE: Avoid CamelCase: <xVpdAreasPtrOffset>
#90: FILE: arch/ppc64/kernel/LparData.c:46:
+	.xVpdAreasPtrOffset = offsetof(struct naca_struct, xItVpdAreas),

CHECK:CAMELCASE: Avoid CamelCase: <xItVpdAreas>
#90: FILE: arch/ppc64/kernel/LparData.c:46:
+	.xVpdAreasPtrOffset = offsetof(struct naca_struct, xItVpdAreas),

CHECK:CAMELCASE: Avoid CamelCase: <xSlicNacaAddr>
#91: FILE: arch/ppc64/kernel/LparData.c:47:
+	.xSlicNacaAddr = &naca,		/* 64-bit Naca address */

CHECK:CAMELCASE: Avoid CamelCase: <xMsNucDataOffset>
#92: FILE: arch/ppc64/kernel/LparData.c:48:
+	.xMsNucDataOffset = 0x6000,	/* offset of LparMap within loadarea (see head.S) */

CHECK:CAMELCASE: Avoid CamelCase: <xTagsMode>
#93: FILE: arch/ppc64/kernel/LparData.c:49:
+	.xTagsMode = 1,			/* tags inactive       */

CHECK:CAMELCASE: Avoid CamelCase: <xAddressSize>
#94: FILE: arch/ppc64/kernel/LparData.c:50:
+	.xAddressSize = 0,		/* 64 bit              */

CHECK:CAMELCASE: Avoid CamelCase: <xNoSharedProcs>
#95: FILE: arch/ppc64/kernel/LparData.c:51:
+	.xNoSharedProcs = 0,		/* shared processors   */

CHECK:CAMELCASE: Avoid CamelCase: <xNoHMT>
#96: FILE: arch/ppc64/kernel/LparData.c:52:
+	.xNoHMT = 0,			/* HMT allowed         */

CHECK:CAMELCASE: Avoid CamelCase: <xRsvd2>
#97: FILE: arch/ppc64/kernel/LparData.c:53:
+	.xRsvd2 = 6,			/* TEMP: This allows non-GA driver */

CHECK:CAMELCASE: Avoid CamelCase: <xVrmIndex>
#98: FILE: arch/ppc64/kernel/LparData.c:54:
+	.xVrmIndex = 4,			/* We are v5r2m0               */

CHECK:CAMELCASE: Avoid CamelCase: <xMinSupportedPlicVrmIndex>
#99: FILE: arch/ppc64/kernel/LparData.c:55:
+	.xMinSupportedPlicVrmIndex = 3,		/* v5r1m0 */

CHECK:CAMELCASE: Avoid CamelCase: <xMinCompatablePlicVrmIndex>
#100: FILE: arch/ppc64/kernel/LparData.c:56:
+	.xMinCompatablePlicVrmIndex = 3,	/* v5r1m0 */

CHECK:CAMELCASE: Avoid CamelCase: <xVrmName>
#101: FILE: arch/ppc64/kernel/LparData.c:57:
+	.xVrmName = { 0xd3, 0x89, 0x95, 0xa4,	/* "Linux 2.4.64" ebcdic */

CHECK:CAMELCASE: Avoid CamelCase: <xIntHdlrOffset>
#133: FILE: arch/ppc64/kernel/LparData.c:83:
+	.xIntHdlrOffset = 0x0300,	/* offset to int array */

CHECK:CAMELCASE: Avoid CamelCase: <xMaxIntHdlrEntries>
#134: FILE: arch/ppc64/kernel/LparData.c:84:
+	.xMaxIntHdlrEntries = 19,	/* # ents */

CHECK:CAMELCASE: Avoid CamelCase: <xPrimaryLpIndex>
#135: FILE: arch/ppc64/kernel/LparData.c:85:
+	.xPrimaryLpIndex = 0,		/* Part # of primary */

CHECK:CAMELCASE: Avoid CamelCase: <xServiceLpIndex>
#136: FILE: arch/ppc64/kernel/LparData.c:86:
+	.xServiceLpIndex = 0,		/* Part # of serv */

CHECK:CAMELCASE: Avoid CamelCase: <xLpIndex>
#137: FILE: arch/ppc64/kernel/LparData.c:87:
+	.xLpIndex = 0,			/* Part # of me */

CHECK:CAMELCASE: Avoid CamelCase: <xMaxLpQueues>
#138: FILE: arch/ppc64/kernel/LparData.c:88:
+	.xMaxLpQueues = 0,		/* # of LP queues */

CHECK:CAMELCASE: Avoid CamelCase: <xLpQueueOffset>
#139: FILE: arch/ppc64/kernel/LparData.c:89:
+	.xLpQueueOffset = 0x100,	/* offset of start of LP queues */

CHECK:CAMELCASE: Avoid CamelCase: <xPirEnvironMode>
#140: FILE: arch/ppc64/kernel/LparData.c:90:
+	.xPirEnvironMode = 0,		/* Piranha stuff */

CHECK:CAMELCASE: Avoid CamelCase: <xPirConsoleMode>
#141: FILE: arch/ppc64/kernel/LparData.c:91:
+	.xPirConsoleMode = 0,

CHECK:CAMELCASE: Avoid CamelCase: <xPirDasdMode>
#142: FILE: arch/ppc64/kernel/LparData.c:92:
+	.xPirDasdMode = 0,

CHECK:CAMELCASE: Avoid CamelCase: <xLparInstalled>
#143: FILE: arch/ppc64/kernel/LparData.c:93:
+	.xLparInstalled = 0,

CHECK:CAMELCASE: Avoid CamelCase: <xSysPartitioned>
#144: FILE: arch/ppc64/kernel/LparData.c:94:
+	.xSysPartitioned = 0,

CHECK:CAMELCASE: Avoid CamelCase: <xHwSyncedTBs>
#145: FILE: arch/ppc64/kernel/LparData.c:95:
+	.xHwSyncedTBs = 0,

CHECK:CAMELCASE: Avoid CamelCase: <xIntProcUtilHmt>
#146: FILE: arch/ppc64/kernel/LparData.c:96:
+	.xIntProcUtilHmt = 0,

CHECK:CAMELCASE: Avoid CamelCase: <xSpVpdFormat>
#147: FILE: arch/ppc64/kernel/LparData.c:97:
+	.xSpVpdFormat = 0,

CHECK:CAMELCASE: Avoid CamelCase: <xIntProcRatio>
#148: FILE: arch/ppc64/kernel/LparData.c:98:
+	.xIntProcRatio = 0,

CHECK:CAMELCASE: Avoid CamelCase: <xPlicVrmIndex>
#149: FILE: arch/ppc64/kernel/LparData.c:99:
+	.xPlicVrmIndex = 0,		/* VRM index of PLIC */

CHECK:CAMELCASE: Avoid CamelCase: <xMinSupportedSlicVrmInd>
#150: FILE: arch/ppc64/kernel/LparData.c:100:
+	.xMinSupportedSlicVrmInd = 0,	/* min supported SLIC */

CHECK:CAMELCASE: Avoid CamelCase: <xMinCompatableSlicVrmInd>
#151: FILE: arch/ppc64/kernel/LparData.c:101:
+	.xMinCompatableSlicVrmInd = 0,	/* min compat SLIC */

CHECK:CAMELCASE: Avoid CamelCase: <xLoadAreaAddr>
#152: FILE: arch/ppc64/kernel/LparData.c:102:
+	.xLoadAreaAddr = 0,		/* 64-bit addr of load area */

CHECK:CAMELCASE: Avoid CamelCase: <xLoadAreaChunks>
#153: FILE: arch/ppc64/kernel/LparData.c:103:
+	.xLoadAreaChunks = 0,		/* chunks for load area */

WARNING:TYPO_SPELLING: 'PASE' may be misspelled - perhaps 'PASS'?
#154: FILE: arch/ppc64/kernel/LparData.c:104:
+	.xPaseSysCallCRMask = 0,	/* PASE mask */
 	                        	   ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <xPaseSysCallCRMask>
#154: FILE: arch/ppc64/kernel/LparData.c:104:
+	.xPaseSysCallCRMask = 0,	/* PASE mask */

CHECK:CAMELCASE: Avoid CamelCase: <xSlicSegmentTablePtr>
#155: FILE: arch/ppc64/kernel/LparData.c:105:
+	.xSlicSegmentTablePtr = 0,	/* seg table */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: arch/ppc64/kernel/LparData.c:106:
+^I.xOldLpQueue = { 0 }, ^I^I/* Old LP Queue */$

CHECK:CAMELCASE: Avoid CamelCase: <xOldLpQueue>
#156: FILE: arch/ppc64/kernel/LparData.c:106:
+	.xOldLpQueue = { 0 }, 		/* Old LP Queue */

CHECK:CAMELCASE: Avoid CamelCase: <xInterruptHdlr>
#157: FILE: arch/ppc64/kernel/LparData.c:107:
+	.xInterruptHdlr = {

CHECK:CAMELCASE: Avoid CamelCase: <xFormat>
#170: FILE: arch/ppc64/kernel/LparData.c:162:
+	.xFormat = 1,

CHECK:CAMELCASE: Avoid CamelCase: <xSlicDesc>
#194: FILE: arch/ppc64/kernel/LparData.c:174:
+	.xSlicDesc = 0xc9a3e5c1,		/* "ItVA" */

CHECK:CAMELCASE: Avoid CamelCase: <xSlicSize>
#195: FILE: arch/ppc64/kernel/LparData.c:175:
+	.xSlicSize = sizeof(struct ItVpdAreas),

CHECK:CAMELCASE: Avoid CamelCase: <ItVpdAreas>
#195: FILE: arch/ppc64/kernel/LparData.c:175:
+	.xSlicSize = sizeof(struct ItVpdAreas),

CHECK:CAMELCASE: Avoid CamelCase: <xSlicVpdEntries>
#196: FILE: arch/ppc64/kernel/LparData.c:176:
+	.xSlicVpdEntries = ItVpdMaxEntries,	/* # VPD array entries */

CHECK:CAMELCASE: Avoid CamelCase: <ItVpdMaxEntries>
#196: FILE: arch/ppc64/kernel/LparData.c:176:
+	.xSlicVpdEntries = ItVpdMaxEntries,	/* # VPD array entries */

CHECK:CAMELCASE: Avoid CamelCase: <xSlicDmaEntries>
#197: FILE: arch/ppc64/kernel/LparData.c:177:
+	.xSlicDmaEntries = ItDmaMaxEntries,	/* # DMA array entries */

CHECK:CAMELCASE: Avoid CamelCase: <ItDmaMaxEntries>
#197: FILE: arch/ppc64/kernel/LparData.c:177:
+	.xSlicDmaEntries = ItDmaMaxEntries,	/* # DMA array entries */

CHECK:CAMELCASE: Avoid CamelCase: <xSlicMaxLogicalProcs>
#198: FILE: arch/ppc64/kernel/LparData.c:178:
+	.xSlicMaxLogicalProcs = NR_CPUS * 2,	/* Max logical procs */

CHECK:CAMELCASE: Avoid CamelCase: <xSlicMaxPhysicalProcs>
#199: FILE: arch/ppc64/kernel/LparData.c:179:
+	.xSlicMaxPhysicalProcs = maxPhysicalProcessors,	/* Max physical procs */

CHECK:CAMELCASE: Avoid CamelCase: <maxPhysicalProcessors>
#199: FILE: arch/ppc64/kernel/LparData.c:179:
+	.xSlicMaxPhysicalProcs = maxPhysicalProcessors,	/* Max physical procs */

CHECK:CAMELCASE: Avoid CamelCase: <xSlicDmaToksOffset>
#200: FILE: arch/ppc64/kernel/LparData.c:180:
+	.xSlicDmaToksOffset = offsetof(struct ItVpdAreas, xPlicDmaToks),

CHECK:CAMELCASE: Avoid CamelCase: <xPlicDmaToks>
#200: FILE: arch/ppc64/kernel/LparData.c:180:
+	.xSlicDmaToksOffset = offsetof(struct ItVpdAreas, xPlicDmaToks),

CHECK:CAMELCASE: Avoid CamelCase: <xSlicVpdAdrsOffset>
#201: FILE: arch/ppc64/kernel/LparData.c:181:
+	.xSlicVpdAdrsOffset = offsetof(struct ItVpdAreas, xSlicVpdAdrs),

CHECK:CAMELCASE: Avoid CamelCase: <xSlicVpdAdrs>
#201: FILE: arch/ppc64/kernel/LparData.c:181:
+	.xSlicVpdAdrsOffset = offsetof(struct ItVpdAreas, xSlicVpdAdrs),

CHECK:CAMELCASE: Avoid CamelCase: <xSlicDmaLensOffset>
#202: FILE: arch/ppc64/kernel/LparData.c:182:
+	.xSlicDmaLensOffset = offsetof(struct ItVpdAreas, xPlicDmaLens),

CHECK:CAMELCASE: Avoid CamelCase: <xPlicDmaLens>
#202: FILE: arch/ppc64/kernel/LparData.c:182:
+	.xSlicDmaLensOffset = offsetof(struct ItVpdAreas, xPlicDmaLens),

CHECK:CAMELCASE: Avoid CamelCase: <xSlicVpdLensOffset>
#203: FILE: arch/ppc64/kernel/LparData.c:183:
+	.xSlicVpdLensOffset = offsetof(struct ItVpdAreas, xSlicVpdLens),

CHECK:CAMELCASE: Avoid CamelCase: <xSlicVpdLens>
#203: FILE: arch/ppc64/kernel/LparData.c:183:
+	.xSlicVpdLensOffset = offsetof(struct ItVpdAreas, xSlicVpdLens),

CHECK:CAMELCASE: Avoid CamelCase: <xSlicMaxSlotLabels>
#204: FILE: arch/ppc64/kernel/LparData.c:184:
+	.xSlicMaxSlotLabels = 0,		/* max slot labels */

CHECK:CAMELCASE: Avoid CamelCase: <xSlicMaxLpQueues>
#205: FILE: arch/ppc64/kernel/LparData.c:185:
+	.xSlicMaxLpQueues = 1,			/* max LP queues */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219235.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 2 warnings, 62 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219235.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
