ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#83: FILE: drivers/net/irda/smsc-ircc2.c:38:
+ *     along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#84: FILE: drivers/net/irda/smsc-ircc2.c:39:
+ *     Foundation, Inc., 59 Temple Place, Suite 330, Boston,$

ERROR:SPACING: space required before the open parenthesis '('
#155: FILE: drivers/net/irda/smsc-ircc2.c:376:
+	if(err)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#194: FILE: drivers/net/irda/smsc-ircc2.c:452:
+	if(ircc_transceiver > 0  &&

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#252: FILE: drivers/net/irda/smsc-ircc2.c:625:
+	outb(((inb(iobase+IRCC_SCE_CFGA) & 0x87) | ir_mode),
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#257: FILE: drivers/net/irda/smsc-ircc2.c:629:
+	outb(((inb(iobase+IRCC_SCE_CFGB) & 0x3f) | IRCC_CFGB_MUX_COM),
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#347: FILE: drivers/net/irda/smsc-ircc2.c:805:
+	outb(UART_IER_THRI, iobase+UART_IER);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#396: FILE: drivers/net/irda/smsc-ircc2.c:900:
+	outb(((inb(fir_base+IRCC_SCE_CFGB) & 0x3f) | IRCC_CFGB_MUX_COM),
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#500: FILE: drivers/net/irda/smsc-ircc2.c:1030:
+	outb(0, iobase+UART_IER);
 	              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#563: FILE: drivers/net/irda/smsc-ircc2.c:1148:
+	outb(inb(iobase+IRCC_SCE_CFGB) & ~IRCC_CFGB_DMA_ENABLE,
 	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#614: FILE: drivers/net/irda/smsc-ircc2.c:1239:
+	outb(inb(iobase+IRCC_SCE_CFGB) & ~IRCC_CFGB_DMA_ENABLE,
 	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#626: FILE: drivers/net/irda/smsc-ircc2.c:1249:
+	outb(inb(iobase+IRCC_SCE_CFGB) & ~IRCC_CFGB_DMA_ENABLE,
 	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#635: FILE: drivers/net/irda/smsc-ircc2.c:1266:
+	outb(inb(iobase+IRCC_SCE_CFGB) | IRCC_CFGB_DMA_ENABLE |
 	               ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#703: FILE: drivers/net/irda/smsc-ircc2.c:1370:
+	/*
+	 * Receive all characters in Rx FIFO, unwrap and unstuff them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: drivers/net/irda/smsc-ircc2.c:1371:
+         * async_unwrap_char will deliver all found frames$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#717: FILE: drivers/net/irda/smsc-ircc2.c:1382:
+	} while (inb(iobase+UART_LSR) & UART_LSR_DR);
 	                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#726: FILE: drivers/net/irda/smsc-ircc2.c:1400:
+		printk(KERN_WARNING "%s: irq %d for unknown device.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#772: FILE: drivers/net/irda/smsc-ircc2.c:1480:
+		IRDA_DEBUG(4, "%s(), iir=%02x, lsr=%02x, iobase=%#x\n",
 			    __FUNCTION__, iir, lsr, iobase);

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: drivers/net/irda/smsc-ircc2.c:1505:
+^I        iir = inb(iobase + UART_IIR) & UART_IIR_ID;$

CHECK:SPACING: No space is necessary after a cast
#854: FILE: drivers/net/irda/smsc-ircc2.c:1613:
+	self = (struct smsc_ircc_cb *) dev->priv;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#881: FILE: drivers/net/irda/smsc-ircc2.c:1723:
+	IRDA_DEBUG(0, "%s(), releasing 0x%03x\n", __FUNCTION__,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#899: FILE: drivers/net/irda/smsc-ircc2.c:1766:
+	IRDA_ASSERT(self != NULL, return;);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#902: FILE: drivers/net/irda/smsc-ircc2.c:1768:
+	IRDA_ASSERT(dev != NULL, return;);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: drivers/net/irda/smsc-ircc2.c:1835:
+		actual = smsc_ircc_sir_write(iobase, self->io.fifo_size,
 				      self->tx_buff.data, self->tx_buff.len);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#935: FILE: drivers/net/irda/smsc-ircc2.c:1839:
 	} else {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#942: FILE: drivers/net/irda/smsc-ircc2.c:1843:
+		/*
+		 *  Now serial buffer is almost free & we can start

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#989: FILE: drivers/net/irda/smsc-ircc2.c:1927:
+	for(i=0; smsc_transceivers[i].name!=NULL; i++)
 	     ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#989: FILE: drivers/net/irda/smsc-ircc2.c:1927:
+	for(i=0; smsc_transceivers[i].name!=NULL; i++)
 	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#989: FILE: drivers/net/irda/smsc-ircc2.c:1927:
+	for(i=0; smsc_transceivers[i].name!=NULL; i++)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "smsc_transceivers[i].name"
#989: FILE: drivers/net/irda/smsc-ircc2.c:1927:
+	for(i=0; smsc_transceivers[i].name!=NULL; i++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1048: FILE: drivers/net/irda/smsc-ircc2.c:2019:
+				if(!smsc_superio_paged(fdc_chips_paged,cfg_base, type)) found++;
 				                                      ^

ERROR:SPACING: space required before the open parenthesis '('
#1048: FILE: drivers/net/irda/smsc-ircc2.c:2019:
+				if(!smsc_superio_paged(fdc_chips_paged,cfg_base, type)) found++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1048: FILE: drivers/net/irda/smsc-ircc2.c:2019:
+				if(!smsc_superio_paged(fdc_chips_paged,cfg_base, type)) found++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1059: FILE: drivers/net/irda/smsc-ircc2.c:2028:
+				if(!smsc_superio_paged(lpc_chips_paged,cfg_base,"LPC")) found++;
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1059: FILE: drivers/net/irda/smsc-ircc2.c:2028:
+				if(!smsc_superio_paged(lpc_chips_paged,cfg_base,"LPC")) found++;
 				                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#1059: FILE: drivers/net/irda/smsc-ircc2.c:2028:
+				if(!smsc_superio_paged(lpc_chips_paged,cfg_base,"LPC")) found++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1059: FILE: drivers/net/irda/smsc-ircc2.c:2028:
+				if(!smsc_superio_paged(lpc_chips_paged,cfg_base,"LPC")) found++;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1103: FILE: drivers/net/irda/smsc-ircc2.c:2080:
+			ret=0;
 			   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1142: FILE: drivers/net/irda/smsc-ircc2.c:2124:
+			ret=0;
 			   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1154: FILE: drivers/net/irda/smsc-ircc2.c:2148:
+	u8 devid,xdevid,rev;
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1154: FILE: drivers/net/irda/smsc-ircc2.c:2148:
+	u8 devid,xdevid,rev;
 	               ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1180: FILE: drivers/net/irda/smsc-ircc2.c:2195:
+	if (devid==xdevid)		/* protection against false positives */
 	         ^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1295: FILE: drivers/net/irda/smsc-ircc2.h:2:
+ * $Id: smsc-ircc2.h,v 1.12.2.1 2002/10/27 10:52:37 dip Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1330: FILE: drivers/net/irda/smsc-ircc2.h:29:
+ *     along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1331: FILE: drivers/net/irda/smsc-ircc2.h:30:
+ *     Foundation, Inc., 59 Temple Place, Suite 330, Boston,$

CHECK:CAMELCASE: Avoid CamelCase: <IRCC_ATC_nPROGREADY>
#1382: FILE: drivers/net/irda/smsc-ircc2.h:166:
+#define		IRCC_ATC_nPROGREADY		0x80

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181244.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 5 warnings, 18 checks, 1264 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181244.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
