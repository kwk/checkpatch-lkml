WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
IP address is stored, and subsequently made available (readable) by the pro=

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#75: FILE: fs/proc/base.c:141:
+	E(PROC_TGID_IPADDR,     "ipaddr",  S_IFREG|S_IRUSR),
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#75: FILE: fs/proc/base.c:141:
+	E(PROC_TGID_IPADDR,     "ipaddr",  S_IFREG|S_IRUSR),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#86: FILE: fs/proc/base.c:1427:
+			inode->i_fop =3D &proc_info_file_operations;
 			             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#86: FILE: fs/proc/base.c:1427:
+			inode->i_fop =3D &proc_info_file_operations;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#87: FILE: fs/proc/base.c:1428:
+			ei->op.proc_read =3D proc_pid_ipaddr;
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#103: FILE: fs/proc/internal.h:40:
+extern int proc_pid_ipaddr(struct task_struct*,char*);
                                               ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: fs/proc/internal.h:40:
+extern int proc_pid_ipaddr(struct task_struct*,char*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#105: FILE: fs/proc/internal.h:41:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: fs/proc/array.c:478:
+int proc_pid_ipaddr(struct task_struct *task, char * buffer)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#123: FILE: fs/proc/array.c:482:
+	len =3D sprintf(buffer, "%u.%u.%u.%u\n", NIPQUAD(task->curr_ip));
 	    ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#207: FILE: net/ipv4/tcp_ipv4.c:86:
+extern void net_del_task_from_ip_table(struct task_struct *p);

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: net/ipv4/tcp_ipv4.c:725:
+ ^I=09$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: net/ipv4/tcp_ipv4.c:725:
+ ^I=09$

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#217: FILE: net/ipv4/tcp_ipv4.c:725:
  		spin_unlock(&head->lock);
+ 	=09

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: net/ipv4/tcp_ipv4.c:725:
+ ^I=09$

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#217: FILE: net/ipv4/tcp_ipv4.c:725:
+ 	=09
  	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#220: FILE: net/ipv4/tcp_ipv4.c:728:
+		current->net_saddr =3D inet_sk(sk)->rcv_saddr;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#221: FILE: net/ipv4/tcp_ipv4.c:729:
+		current->net_daddr =3D inet_sk(sk)->daddr;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#222: FILE: net/ipv4/tcp_ipv4.c:730:
+		current->net_sport =3D inet_sk(sk)->sport;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#223: FILE: net/ipv4/tcp_ipv4.c:731:
+		current->net_dport =3D inet_sk(sk)->dport;
 		                   ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#248: FILE: kernel/exit.c:818:
 		acct_process(code);
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#248: FILE: kernel/exit.c:818:
+	=09
 	^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#260: FILE: net/proc_ipaddr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#271: FILE: net/proc_ipaddr.c:12:
+=20
 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: net/proc_ipaddr.c:25:
+struct task_struct *deleted_conn =3D (struct task_struct *)~0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#284: FILE: net/proc_ipaddr.c:25:
+struct task_struct *deleted_conn =3D (struct task_struct *)~0;
                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#285: FILE: net/proc_ipaddr.c:26:
+spinlock_t net_conn_table_lock =3D SPIN_LOCK_UNLOCKED;
                                ^

WARNING:INLINE: plain inline is preferred over __inline__
#287: FILE: net/proc_ipaddr.c:28:
+static __inline__ int

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#288: FILE: net/proc_ipaddr.c:29:
+conn_hash(__u32 saddr, __u32 daddr, __u16 sport, __u16 dport, unsigned int=
                                                                           ^

WARNING:INLINE: plain inline is preferred over __inline__
#294: FILE: net/proc_ipaddr.c:35:
+static __inline__ int

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#298: FILE: net/proc_ipaddr.c:39:
+	if (unlikely(task !=3D deleted_conn && task->net_saddr =3D=3D saddr &&
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#298: FILE: net/proc_ipaddr.c:39:
+	if (unlikely(task !=3D deleted_conn && task->net_saddr =3D=3D saddr &&
 	                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#298: FILE: net/proc_ipaddr.c:39:
+	if (unlikely(task !=3D deleted_conn && task->net_saddr =3D=3D saddr &&
 	                                                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#298: FILE: net/proc_ipaddr.c:39:
+	if (unlikely(task !=3D deleted_conn && task->net_saddr =3D=3D saddr &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#299: FILE: net/proc_ipaddr.c:40:
+		     task->net_daddr =3D=3D daddr && task->net_sport =3D=3D sport &&
 		                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#299: FILE: net/proc_ipaddr.c:40:
+		     task->net_daddr =3D=3D daddr && task->net_sport =3D=3D sport &&
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#299: FILE: net/proc_ipaddr.c:40:
+		     task->net_daddr =3D=3D daddr && task->net_sport =3D=3D sport &&
 		                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#299: FILE: net/proc_ipaddr.c:40:
+		     task->net_daddr =3D=3D daddr && task->net_sport =3D=3D sport &&
 		                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#300: FILE: net/proc_ipaddr.c:41:
+		     task->net_dport =3D=3D dport))
 		                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#300: FILE: net/proc_ipaddr.c:41:
+		     task->net_dport =3D=3D dport))
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#310: FILE: net/proc_ipaddr.c:51:
+	if (unlikely(net_conn_table =3D=3D NULL))
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#310: FILE: net/proc_ipaddr.c:51:
+	if (unlikely(net_conn_table =3D=3D NULL))
 	                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#310: FILE: net/proc_ipaddr.c:51:
+	if (unlikely(net_conn_table =3D=3D NULL))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#314: FILE: net/proc_ipaddr.c:55:
+		task =3D task->group_leader;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#316: FILE: net/proc_ipaddr.c:57:
+	index =3D conn_hash(task->net_saddr, task->net_daddr,
 	      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#322: FILE: net/proc_ipaddr.c:63:
+	while (net_conn_table[index] && net_conn_table[index] !=3D deleted_conn) =
 	                                                      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#322: FILE: net/proc_ipaddr.c:63:
+	while (net_conn_table[index] && net_conn_table[index] !=3D deleted_conn) =

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#324: FILE: net/proc_ipaddr.c:64:
+		index =3D (index + 1) % net_conn_table_size;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#324: FILE: net/proc_ipaddr.c:64:
+		index =3D (index + 1) % net_conn_table_size;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#327: FILE: net/proc_ipaddr.c:67:
+	net_conn_table[index] =3D task;
 	                      ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#332: FILE: net/proc_ipaddr.c:72:
+	return;
+}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#338: FILE: net/proc_ipaddr.c:78:
+	if (unlikely(net_conn_table =3D=3D NULL))
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#338: FILE: net/proc_ipaddr.c:78:
+	if (unlikely(net_conn_table =3D=3D NULL))
 	                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#338: FILE: net/proc_ipaddr.c:78:
+	if (unlikely(net_conn_table =3D=3D NULL))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#342: FILE: net/proc_ipaddr.c:82:
+		task =3D task->group_leader;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#344: FILE: net/proc_ipaddr.c:84:
+	index =3D conn_hash(task->net_saddr, task->net_daddr,
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: net/proc_ipaddr.c:89:
+	while (net_conn_table[index] && !conn_match(net_conn_table[index],
+		task->net_saddr, task->net_daddr, task->net_sport,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: net/proc_ipaddr.c:91:
+		index =3D (index + 1) % net_conn_table_size;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#351: FILE: net/proc_ipaddr.c:91:
+		index =3D (index + 1) % net_conn_table_size;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#356: FILE: net/proc_ipaddr.c:96:
+			net_conn_table[index] =3D deleted_conn;
 			                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#358: FILE: net/proc_ipaddr.c:98:
+			net_conn_table[index] =3D NULL;
 			                      ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#362: FILE: net/proc_ipaddr.c:102:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: net/proc_ipaddr.c:104:
+struct task_struct * net_lookup_task_ip_table(__u32 saddr, __u32 daddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: net/proc_ipaddr.c:105:
+struct task_struct * net_lookup_task_ip_table(__u32 saddr, __u32 daddr,
+					     __u16 sport, __u16 dport)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#369: FILE: net/proc_ipaddr.c:109:
+	if (unlikely(net_conn_table =3D=3D NULL))
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#369: FILE: net/proc_ipaddr.c:109:
+	if (unlikely(net_conn_table =3D=3D NULL))
 	                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#369: FILE: net/proc_ipaddr.c:109:
+	if (unlikely(net_conn_table =3D=3D NULL))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#372: FILE: net/proc_ipaddr.c:112:
+	index =3D conn_hash(saddr, daddr, sport, dport, net_conn_table_size);
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: net/proc_ipaddr.c:115:
+	while (net_conn_table[index] && !conn_match(net_conn_table[index],
+		saddr, daddr, sport, dport)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: net/proc_ipaddr.c:116:
+		index =3D (index + 1) % net_conn_table_size;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#376: FILE: net/proc_ipaddr.c:116:
+		index =3D (index + 1) % net_conn_table_size;
 		      ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#394: FILE: net/proc_ipaddr.c:134:
+	return;
+}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#402: FILE: net/proc_ipaddr.c:142:
+	const struct inet_sock *inet =3D inet_sk(sk);
 	                             ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#404: FILE: net/proc_ipaddr.c:144:
+	if (unlikely(sk->sk_protocol !=3D IPPROTO_TCP))
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#407: FILE: net/proc_ipaddr.c:147:
+	set =3D current;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#409: FILE: net/proc_ipaddr.c:149:
+		set =3D set->group_leader;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#412: FILE: net/proc_ipaddr.c:152:
+	p =3D net_lookup_task_ip_table(inet->daddr, inet->rcv_saddr,
 	  ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#414: FILE: net/proc_ipaddr.c:154:
+	if (unlikely(p !=3D NULL)) {
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#415: FILE: net/proc_ipaddr.c:155:
+		set->curr_ip =3D p->curr_ip;
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#416: FILE: net/proc_ipaddr.c:156:
+		set->used_accept =3D 1;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#423: FILE: net/proc_ipaddr.c:163:
+	set->curr_ip =3D inet->daddr;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#424: FILE: net/proc_ipaddr.c:164:
+	set->used_accept =3D 1;
 	                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200299.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 60 errors, 15 warnings, 8 checks, 342 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200299.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
