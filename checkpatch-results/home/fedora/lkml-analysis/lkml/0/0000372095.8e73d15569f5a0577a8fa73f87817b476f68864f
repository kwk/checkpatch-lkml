WARNING:TYPO_SPELLING: 'intresting' may be misspelled - perhaps 'interesting'?
#50: 
"CONFIG_COMPAT" to find the intresting places.  Comments welcome.
                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#59: 
diff -u linux-2.5.69/Documentation/scsi-changer.txt linux/Documentation/scsi-changer.txt

WARNING:TYPO_SPELLING: 'accessable' may be misspelled - perhaps 'accessible'?
#95: FILE: Documentation/scsi-changer.txt:33:
+  import/export   - the same as above, but is accessable from outside,
                                               ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'becauce' may be misspelled - perhaps 'because'?
#152: FILE: Documentation/scsi-changer.txt:90:
+look for LUN's other than 0 as default, becauce there are to many
                                         ^^^^^^^

WARNING:TYPO_SPELLING: 'alot' may be misspelled - perhaps 'a lot'?
#166: FILE: Documentation/scsi-changer.txt:104:
+CONFIG_SCSI_CONSTANTS=y improves the quality of the error messages alot
                                                                    ^^^^

WARNING:TYPO_SPELLING: 'becauce' may be misspelled - perhaps 'because'?
#171: FILE: Documentation/scsi-changer.txt:109:
+logfiles).  If you email me some question becauce of a problem with the
                                           ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: Documentation/scsi-changer.txt:183:
+-- $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#254: FILE: drivers/scsi/Kconfig:114:
+config CHR_DEV_SCH
+	tristate "SCSI media changer support"
+	depends on SCSI
+	---help---
+	  This is a driver for SCSI media changers.  Most common devices are
+	  tape libraries and MOD/CDROM jukeboxes.  *Real* jukeboxes, you
+	  don't need this for those tiny 6-slot cdrom changers.  Media
+	  changers are listed as "Type: Medium Changer" in /proc/scsi/scsi.
+	  If you have such hardware and want to use it with linux, say Y
+	  here.  Check <file:Documentation/scsi-changer.txt> for details.
+	
+	  If you want to compile this as a module ( = code which can be
+	  inserted in and removed from the running kernel whenever you want),
+	  say M here and read <file:Documentation/modules.txt> and
+	  <file:Documentation/scsi.txt>. The module will be called ch.o.
+	  If unsure, say N.
+	
+
 comment "Some SCSI devices (e.g. CD jukebox) support multiple LUNs"
 	depends on SCSI
 

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: drivers/scsi/Kconfig:124:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: drivers/scsi/Kconfig:130:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#290: FILE: drivers/scsi/ch.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#317: FILE: drivers/scsi/ch.c:28:
+#include <asm/uaccess.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#336: FILE: drivers/scsi/ch.c:47:
+MODULE_PARM(check_busy,"i");
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#337: FILE: drivers/scsi/ch.c:48:
+MODULE_PARM_DESC(check_busy, \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/scsi/ch.c:49:
+    "enable/disable busy check for data transfer elements (default: on)");$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#341: FILE: drivers/scsi/ch.c:52:
+MODULE_PARM(init,"i");
                 ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#342: FILE: drivers/scsi/ch.c:53:
+MODULE_PARM_DESC(init, \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/scsi/ch.c:54:
+    "initialize element status on driver load (default: on)");$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#346: FILE: drivers/scsi/ch.c:57:
+MODULE_PARM(timeout_move,"i");
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: drivers/scsi/ch.c:58:
+MODULE_PARM_DESC(timeout_move,"timeout for move commands "
                              ^

WARNING:SPLIT_STRING: quoted string split across lines
#348: FILE: drivers/scsi/ch.c:59:
+MODULE_PARM_DESC(timeout_move,"timeout for move commands "
+		 "(default: 300 seconds)");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#351: FILE: drivers/scsi/ch.c:62:
+MODULE_PARM(timeout_init,"i");
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#352: FILE: drivers/scsi/ch.c:63:
+MODULE_PARM_DESC(timeout_init,"timeout for INITIALIZE ELEMENT STATUS "
                              ^

WARNING:SPLIT_STRING: quoted string split across lines
#353: FILE: drivers/scsi/ch.c:64:
+MODULE_PARM_DESC(timeout_init,"timeout for INITIALIZE ELEMENT STATUS "
+		 "(default: 3600 seconds)");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: drivers/scsi/ch.c:67:
+MODULE_PARM(verbose,"i");
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#357: FILE: drivers/scsi/ch.c:68:
+MODULE_PARM_DESC(verbose,"be verbose (default: on)");
                         ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#359: FILE: drivers/scsi/ch.c:70:
+static int debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#360: FILE: drivers/scsi/ch.c:71:
+MODULE_PARM(debug,"i");
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#361: FILE: drivers/scsi/ch.c:72:
+MODULE_PARM_DESC(debug,"enable/disable debug messages, also prints more "
                       ^

WARNING:SPLIT_STRING: quoted string split across lines
#362: FILE: drivers/scsi/ch.c:73:
+MODULE_PARM_DESC(debug,"enable/disable debug messages, also prints more "
+		 "detailed sense codes on scsi errors (default: off)");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#364: FILE: drivers/scsi/ch.c:75:
+static int dt_id[CH_DT_MAX] = { [ 0 ... (CH_DT_MAX-1) ] = -1 };
                                                   ^

ERROR:SPACING: space prohibited after that open square bracket '['
#364: FILE: drivers/scsi/ch.c:75:
+static int dt_id[CH_DT_MAX] = { [ 0 ... (CH_DT_MAX-1) ] = -1 };

ERROR:SPACING: space prohibited before that close square bracket ']'
#364: FILE: drivers/scsi/ch.c:75:
+static int dt_id[CH_DT_MAX] = { [ 0 ... (CH_DT_MAX-1) ] = -1 };

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: drivers/scsi/ch.c:77:
+MODULE_PARM(dt_id,"1-" __MODULE_STRING(CH_DT_MAX) "i");
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: drivers/scsi/ch.c:78:
+MODULE_PARM(dt_lun,"1-" __MODULE_STRING(CH_DT_MAX) "i");
                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#370: FILE: drivers/scsi/ch.c:81:
+static int vendor_firsts[CH_TYPES-4];
                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#371: FILE: drivers/scsi/ch.c:82:
+static int vendor_counts[CH_TYPES-4];
                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#372: FILE: drivers/scsi/ch.c:83:
+static char *vendor_labels[CH_TYPES-4];
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#373: FILE: drivers/scsi/ch.c:84:
+MODULE_PARM(vendor_firsts,"1-4i");
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#374: FILE: drivers/scsi/ch.c:85:
+MODULE_PARM(vendor_counts,"1-4i");
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#375: FILE: drivers/scsi/ch.c:86:
+MODULE_PARM(vendor_labels,"1-4s");
                          ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#377: FILE: drivers/scsi/ch.c:88:
+#define dprintk(fmt, arg...)    if (debug) \
+        printk(KERN_DEBUG "%s: " fmt, ch->name, ##arg)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: drivers/scsi/ch.c:89:
+        printk(KERN_DEBUG "%s: " fmt, ch->name, ##arg)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/scsi/ch.c:89:
+        printk(KERN_DEBUG "%s: " fmt, ch->name, ##arg)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#378: FILE: drivers/scsi/ch.c:89:
+        printk(KERN_DEBUG "%s: " fmt, ch->name, ##arg)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#379: FILE: drivers/scsi/ch.c:90:
+#define vprintk(fmt, arg...)    if (verbose) \
+        printk(KERN_INFO "%s: " fmt, ch->name, ##arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/scsi/ch.c:91:
+        printk(KERN_INFO "%s: " fmt, ch->name, ##arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/scsi/ch.c:91:
+        printk(KERN_INFO "%s: " fmt, ch->name, ##arg)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#380: FILE: drivers/scsi/ch.c:91:
+        printk(KERN_INFO "%s: " fmt, ch->name, ##arg)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#386: FILE: drivers/scsi/ch.c:97:
+static int  ch_attach(Scsi_Device *);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#388: FILE: drivers/scsi/ch.c:99:
+static int  ch_open(struct inode * inode, struct file * filp);
                                                         ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/scsi/ch.c:99:
+static int  ch_open(struct inode * inode, struct file * filp);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/scsi/ch.c:99:
+static int  ch_open(struct inode * inode, struct file * filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#389: FILE: drivers/scsi/ch.c:100:
+static int  ch_release(struct inode * inode, struct file * filp);
                                                            ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: drivers/scsi/ch.c:100:
+static int  ch_release(struct inode * inode, struct file * filp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: drivers/scsi/ch.c:100:
+static int  ch_release(struct inode * inode, struct file * filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#390: FILE: drivers/scsi/ch.c:101:
+static int  ch_ioctl(struct inode * inode, struct file * filp,
                                                          ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: drivers/scsi/ch.c:101:
+static int  ch_ioctl(struct inode * inode, struct file * filp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: drivers/scsi/ch.c:101:
+static int  ch_ioctl(struct inode * inode, struct file * filp,

WARNING:NEW_TYPEDEFS: do not add new typedefs
#393: FILE: drivers/scsi/ch.c:104:
+typedef struct {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#397: FILE: drivers/scsi/ch.c:108:
+^IScsi_Device  ^I    *device;$

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device_Template>
#410: FILE: drivers/scsi/ch.c:121:
+struct Scsi_Device_Template ch_template =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#411: FILE: drivers/scsi/ch.c:122:
+struct Scsi_Device_Template ch_template =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#423: FILE: drivers/scsi/ch.c:134:
+static struct file_operations changer_fops =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#424: FILE: drivers/scsi/ch.c:135:
+static struct file_operations changer_fops =
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#438: FILE: drivers/scsi/ch.c:149:
+/* Just filled in what looks right. Hav'nt checked any standard paper for
+   these errno assignments, so they may be wrong... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#438: FILE: drivers/scsi/ch.c:149:
+   these errno assignments, so they may be wrong... */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: drivers/scsi/ch.c:155:
+	},{
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: drivers/scsi/ch.c:160:
+	},{
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: drivers/scsi/ch.c:165:
+	},{
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#459: FILE: drivers/scsi/ch.c:170:
+	},{
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#464: FILE: drivers/scsi/ch.c:175:
+	},{
 	 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: drivers/scsi/ch.c:176:
+^I        /* end of list */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#478: FILE: drivers/scsi/ch.c:189:
+};
+#define CHIOGSTATUS32  _IOW('c', 8,struct changer_element_status32)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: drivers/scsi/ch.c:189:
+#define CHIOGSTATUS32  _IOW('c', 8,struct changer_element_status32)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#503: FILE: drivers/scsi/ch.c:214:
+		err = register_ioctl32_conversion(ioctl32_cmds[i].cmd,NULL);
 		                                                     ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#509: FILE: drivers/scsi/ch.c:220:
+}
+static int ioctl32_unregister(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: drivers/scsi/ch.c:223:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#533: FILE: drivers/scsi/ch.c:244:
+	int i,errno = 0;
 	     ^

ERROR:SPACING: space prohibited after that open square bracket '['
#539: FILE: drivers/scsi/ch.c:250:
+			if (err[i].sense == sense_buffer[ 2] &&

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#553: FILE: drivers/scsi/ch.c:264:
+ch_request_done (Scsi_Cmnd * sc)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: drivers/scsi/ch.c:264:
+ch_request_done (Scsi_Cmnd * sc)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Cmnd>
#553: FILE: drivers/scsi/ch.c:264:
+ch_request_done (Scsi_Cmnd * sc)

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: drivers/scsi/ch.c:267:
+        if (sc->request->waiting != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: drivers/scsi/ch.c:267:
+        if (sc->request->waiting != NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sc->request->waiting"
#556: FILE: drivers/scsi/ch.c:267:
+        if (sc->request->waiting != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#562: FILE: drivers/scsi/ch.c:273:
+	   void *buffer, unsigned buflength)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Request>
#566: FILE: drivers/scsi/ch.c:277:
+	Scsi_Request *sr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: drivers/scsi/ch.c:278:
+^I$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#569: FILE: drivers/scsi/ch.c:280:
+	if (NULL == sr)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#575: FILE: drivers/scsi/ch.c:286:
+		dprintk("command: %s","");
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#587: FILE: drivers/scsi/ch.c:298:
+	dprintk("result: 0x%x\n",sr->sr_result);
 	                        ^

ERROR:SPACING: space required before the open parenthesis '('
#593: FILE: drivers/scsi/ch.c:304:
+		switch(sr->sr_sense_buffer[2] & 0xf) {

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#608: FILE: drivers/scsi/ch.c:319:
+find_device(struct Scsi_Host *host, u_char channel, u_char id, u_char lun)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#613: FILE: drivers/scsi/ch.c:324:
+	list_for_each(item,&host->my_devices) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#613: FILE: drivers/scsi/ch.c:324:
+	list_for_each(item,&host->my_devices) {
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: drivers/scsi/ch.c:338:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: drivers/scsi/ch.c:342:
+^I            ch->counts[i])$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#632: FILE: drivers/scsi/ch.c:343:
+			return i+1;
 			        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: drivers/scsi/ch.c:354:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#645: FILE: drivers/scsi/ch.c:356:
+	if(!buffer)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: drivers/scsi/ch.c:358:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: drivers/scsi/ch.c:360:
+	memset(cmd,0,sizeof(cmd));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: drivers/scsi/ch.c:360:
+	memset(cmd,0,sizeof(cmd));
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: drivers/scsi/ch.c:362:
+^Icmd[1] = (ch->device->lun << 5) | $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#653: FILE: drivers/scsi/ch.c:364:
+		ch_elem_to_typecode(ch,elem);
 		                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#658: FILE: drivers/scsi/ch.c:369:
+	if (0 == (result = ch_do_scsi(ch, cmd, buffer, 256))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#661: FILE: drivers/scsi/ch.c:372:
+				elem,(buffer[16] << 8) | buffer[17]);
 				    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: drivers/scsi/ch.c:376:
+		memcpy(data,buffer+16,16);
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#665: FILE: drivers/scsi/ch.c:376:
+		memcpy(data,buffer+16,16);
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#665: FILE: drivers/scsi/ch.c:376:
+		memcpy(data,buffer+16,16);
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: drivers/scsi/ch.c:380:
+			vprintk("device has no volume tag support%s\n","");
 			                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#672: FILE: drivers/scsi/ch.c:383:
+		dprintk("READ ELEMENT STATUS for element 0x%x failed\n",elem);
 		                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: drivers/scsi/ch.c:389:
+static int $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#684: FILE: drivers/scsi/ch.c:395:
+	vprintk("INITIALIZE ELEMENT STATUS, may take some time ...%s\n","");
 	                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#685: FILE: drivers/scsi/ch.c:396:
+	memset(cmd,0,sizeof(cmd));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#685: FILE: drivers/scsi/ch.c:396:
+	memset(cmd,0,sizeof(cmd));
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#689: FILE: drivers/scsi/ch.c:400:
+	vprintk("... finished%s\n","");
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#698: FILE: drivers/scsi/ch.c:409:
+	int     result,id,lun,i;
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#698: FILE: drivers/scsi/ch.c:409:
+	int     result,id,lun,i;
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#698: FILE: drivers/scsi/ch.c:409:
+	int     result,id,lun,i;
 	                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: drivers/scsi/ch.c:411:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#704: FILE: drivers/scsi/ch.c:415:
+	memset(buffer,0,512);
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#704: FILE: drivers/scsi/ch.c:415:
+	memset(buffer,0,512);
 	               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: drivers/scsi/ch.c:416:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#706: FILE: drivers/scsi/ch.c:417:
+	memset(cmd,0,sizeof(cmd));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#706: FILE: drivers/scsi/ch.c:417:
+	memset(cmd,0,sizeof(cmd));
 	            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#712: FILE: drivers/scsi/ch.c:423:
+	if (0 != result) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#713: FILE: drivers/scsi/ch.c:424:
+		cmd[1] |= (1<<3);
 		            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#716: FILE: drivers/scsi/ch.c:427:
+	if (0 == result) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#718: FILE: drivers/scsi/ch.c:429:
+			(buffer[buffer[3]+ 6] << 8) | buffer[buffer[3]+ 7];
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#718: FILE: drivers/scsi/ch.c:429:
+			(buffer[buffer[3]+ 6] << 8) | buffer[buffer[3]+ 7];
 			                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#720: FILE: drivers/scsi/ch.c:431:
+			(buffer[buffer[3]+ 8] << 8) | buffer[buffer[3]+ 9];
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#720: FILE: drivers/scsi/ch.c:431:
+			(buffer[buffer[3]+ 8] << 8) | buffer[buffer[3]+ 9];
 			                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#722: FILE: drivers/scsi/ch.c:433:
+			(buffer[buffer[3]+10] << 8) | buffer[buffer[3]+11];
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#722: FILE: drivers/scsi/ch.c:433:
+			(buffer[buffer[3]+10] << 8) | buffer[buffer[3]+11];
 			                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#724: FILE: drivers/scsi/ch.c:435:
+			(buffer[buffer[3]+12] << 8) | buffer[buffer[3]+13];
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#724: FILE: drivers/scsi/ch.c:435:
+			(buffer[buffer[3]+12] << 8) | buffer[buffer[3]+13];
 			                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#726: FILE: drivers/scsi/ch.c:437:
+			(buffer[buffer[3]+14] << 8) | buffer[buffer[3]+15];
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#726: FILE: drivers/scsi/ch.c:437:
+			(buffer[buffer[3]+14] << 8) | buffer[buffer[3]+15];
 			                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#728: FILE: drivers/scsi/ch.c:439:
+			(buffer[buffer[3]+16] << 8) | buffer[buffer[3]+17];
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#728: FILE: drivers/scsi/ch.c:439:
+			(buffer[buffer[3]+16] << 8) | buffer[buffer[3]+17];
 			                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#730: FILE: drivers/scsi/ch.c:441:
+			(buffer[buffer[3]+18] << 8) | buffer[buffer[3]+19];
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#730: FILE: drivers/scsi/ch.c:441:
+			(buffer[buffer[3]+18] << 8) | buffer[buffer[3]+19];
 			                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#732: FILE: drivers/scsi/ch.c:443:
+			(buffer[buffer[3]+20] << 8) | buffer[buffer[3]+21];
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#732: FILE: drivers/scsi/ch.c:443:
+			(buffer[buffer[3]+20] << 8) | buffer[buffer[3]+21];
 			                                              ^

WARNING:TYPO_SPELLING: 'assigment' may be misspelled - perhaps 'assignment'?
#746: FILE: drivers/scsi/ch.c:457:
+		vprintk("reading element address assigment page failed!%s\n",
 		                                 ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: drivers/scsi/ch.c:460:
+^I$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#752: FILE: drivers/scsi/ch.c:463:
+		if (0 == vendor_counts[i])

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#754: FILE: drivers/scsi/ch.c:465:
+		if (NULL == vendor_labels[i])

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#756: FILE: drivers/scsi/ch.c:467:
+		ch->firsts[CHET_V1+i] = vendor_firsts[i];
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#757: FILE: drivers/scsi/ch.c:468:
+		ch->counts[CHET_V1+i] = vendor_counts[i];
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#759: FILE: drivers/scsi/ch.c:470:
+			i+5,i+1,vendor_firsts[i],vendor_counts[i],
 			 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#759: FILE: drivers/scsi/ch.c:470:
+			i+5,i+1,vendor_firsts[i],vendor_counts[i],
 			   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#759: FILE: drivers/scsi/ch.c:470:
+			i+5,i+1,vendor_firsts[i],vendor_counts[i],
 			     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#759: FILE: drivers/scsi/ch.c:470:
+			i+5,i+1,vendor_firsts[i],vendor_counts[i],
 			       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#759: FILE: drivers/scsi/ch.c:470:
+			i+5,i+1,vendor_firsts[i],vendor_counts[i],
 			                        ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#765: FILE: drivers/scsi/ch.c:476:
+		kmalloc(ch->counts[CHET_DT]*sizeof(Scsi_Device*),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#765: FILE: drivers/scsi/ch.c:476:
+		kmalloc(ch->counts[CHET_DT]*sizeof(Scsi_Device*),
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#774: FILE: drivers/scsi/ch.c:485:
+				elem+ch->firsts[CHET_DT]);
 				    ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#775: FILE: drivers/scsi/ch.c:486:
+		} else if (0 != ch_read_element_status

ERROR:SPACING: space required after that ',' (ctx:VxV)
#776: FILE: drivers/scsi/ch.c:487:
+			   (ch,elem+ch->firsts[CHET_DT],data)) {
 			      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#776: FILE: drivers/scsi/ch.c:487:
+			   (ch,elem+ch->firsts[CHET_DT],data)) {
 			           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#776: FILE: drivers/scsi/ch.c:487:
+			   (ch,elem+ch->firsts[CHET_DT],data)) {
 			                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#778: FILE: drivers/scsi/ch.c:489:
+				elem+ch->firsts[CHET_DT]);
 				    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#780: FILE: drivers/scsi/ch.c:491:
+			vprintk("dt 0x%x: ",elem+ch->firsts[CHET_DT]);
 			                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#780: FILE: drivers/scsi/ch.c:491:
+			vprintk("dt 0x%x: ",elem+ch->firsts[CHET_DT]);
 			                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#783: FILE: drivers/scsi/ch.c:494:
+					printk("not this SCSI bus\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#787: FILE: drivers/scsi/ch.c:498:
+					printk("ID/LUN unknown\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#792: FILE: drivers/scsi/ch.c:503:
+				if (data[6] & 0x20) id  = data[7];

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#793: FILE: drivers/scsi/ch.c:504:
+				if (data[6] & 0x10) lun = data[6] & 7;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#798: FILE: drivers/scsi/ch.c:509:
+				printk("ID %i, LUN %i, ",id,lun);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#798: FILE: drivers/scsi/ch.c:509:
+				printk("ID %i, LUN %i, ",id,lun);
 				                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#798: FILE: drivers/scsi/ch.c:509:
+				printk("ID %i, LUN %i, ",id,lun);
 				                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#802: FILE: drivers/scsi/ch.c:513:
+					    id,lun);
 					      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#806: FILE: drivers/scsi/ch.c:517:
+					printk("Huh? device not found!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#809: FILE: drivers/scsi/ch.c:520:
+					printk("name: %8.8s %16.16s %4.4s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: drivers/scsi/ch.c:539:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#829: FILE: drivers/scsi/ch.c:540:
+	dprintk("position: 0x%x\n",elem);
 	                          ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#830: FILE: drivers/scsi/ch.c:541:
+	if (0 == trans)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#832: FILE: drivers/scsi/ch.c:543:
+	memset(cmd,0,sizeof(cmd));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#832: FILE: drivers/scsi/ch.c:543:
+	memset(cmd,0,sizeof(cmd));
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#840: FILE: drivers/scsi/ch.c:551:
+	return ch_do_scsi(ch, cmd, NULL,0);
 	                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: drivers/scsi/ch.c:558:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#848: FILE: drivers/scsi/ch.c:559:
+	dprintk("move: 0x%x => 0x%x\n",src,dest);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#848: FILE: drivers/scsi/ch.c:559:
+	dprintk("move: 0x%x => 0x%x\n",src,dest);
 	                                  ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#849: FILE: drivers/scsi/ch.c:560:
+	if (0 == trans)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#851: FILE: drivers/scsi/ch.c:562:
+	memset(cmd,0,sizeof(cmd));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#851: FILE: drivers/scsi/ch.c:562:
+	memset(cmd,0,sizeof(cmd));
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#861: FILE: drivers/scsi/ch.c:572:
+	return ch_do_scsi(ch, cmd, NULL,0);
 	                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#869: FILE: drivers/scsi/ch.c:580:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#871: FILE: drivers/scsi/ch.c:582:
+		src,dest1,dest2);
 		   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#871: FILE: drivers/scsi/ch.c:582:
+		src,dest1,dest2);
 		         ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#872: FILE: drivers/scsi/ch.c:583:
+	if (0 == trans)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: drivers/scsi/ch.c:585:
+	memset(cmd,0,sizeof(cmd));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: drivers/scsi/ch.c:585:
+	memset(cmd,0,sizeof(cmd));
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: drivers/scsi/ch.c:597:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#887: FILE: drivers/scsi/ch.c:598:
+	return ch_do_scsi(ch, cmd, NULL,0);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#917: FILE: drivers/scsi/ch.c:628:
+	memset(buffer,0,512);
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#917: FILE: drivers/scsi/ch.c:628:
+	memset(buffer,0,512);
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#923: FILE: drivers/scsi/ch.c:634:
+	memset(cmd,0,sizeof(cmd));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#923: FILE: drivers/scsi/ch.c:634:
+	memset(cmd,0,sizeof(cmd));
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#925: FILE: drivers/scsi/ch.c:636:
+^Icmd[1] = (ch->device->lun << 5) | $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#926: FILE: drivers/scsi/ch.c:637:
+		ch_elem_to_typecode(ch,elem);
 		                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#932: FILE: drivers/scsi/ch.c:643:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#935: FILE: drivers/scsi/ch.c:646:
+	memcpy(buffer,tag,32);
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#935: FILE: drivers/scsi/ch.c:646:
+	memcpy(buffer,tag,32);
 	                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#948: FILE: drivers/scsi/ch.c:659:
+^I$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#951: FILE: drivers/scsi/ch.c:662:
+		if (0 != ch_read_element_status

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#952: FILE: drivers/scsi/ch.c:663:
+		    (ch, ch->firsts[type]+i,data)) {
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#952: FILE: drivers/scsi/ch.c:663:
+		    (ch, ch->firsts[type]+i,data)) {
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#956: FILE: drivers/scsi/ch.c:667:
+		put_user(data[2], dest+i);
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#959: FILE: drivers/scsi/ch.c:670:
+				ch->firsts[type]+i,
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: drivers/scsi/ch.c:671:
+				(int)data[4],(int)data[5]);
 				            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#962: FILE: drivers/scsi/ch.c:673:
+			(ch, ch->firsts[type]+i,data);
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#962: FILE: drivers/scsi/ch.c:673:
+			(ch, ch->firsts[type]+i,data);
 			                       ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#963: FILE: drivers/scsi/ch.c:674:
+		if (0 != retval)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#991: FILE: drivers/scsi/ch.c:702:
+	list_for_each(item,&ch_devlist) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#991: FILE: drivers/scsi/ch.c:702:
+	list_for_each(item,&ch_devlist) {
 	                   ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#996: FILE: drivers/scsi/ch.c:707:
+	if (NULL == ch || scsi_device_get(ch->device)) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1027: FILE: drivers/scsi/ch.c:738:
+static int ch_ioctl(struct inode * inode, struct file * file,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1027: FILE: drivers/scsi/ch.c:738:
+static int ch_ioctl(struct inode * inode, struct file * file,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1032: FILE: drivers/scsi/ch.c:743:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1037: FILE: drivers/scsi/ch.c:748:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1043: FILE: drivers/scsi/ch.c:754:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#1044: FILE: drivers/scsi/ch.c:755:
+		if (copy_to_user((void *) arg, &params, sizeof(params)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1052: FILE: drivers/scsi/ch.c:763:
+		memset(&vparams,0,sizeof(vparams));
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1052: FILE: drivers/scsi/ch.c:763:
+		memset(&vparams,0,sizeof(vparams));
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1055: FILE: drivers/scsi/ch.c:766:
+			strncpy(vparams.cvp_label1,vendor_labels[0],16);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1055: FILE: drivers/scsi/ch.c:766:
+			strncpy(vparams.cvp_label1,vendor_labels[0],16);
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1059: FILE: drivers/scsi/ch.c:770:
+			strncpy(vparams.cvp_label2,vendor_labels[1],16);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1059: FILE: drivers/scsi/ch.c:770:
+			strncpy(vparams.cvp_label2,vendor_labels[1],16);
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: drivers/scsi/ch.c:774:
+			strncpy(vparams.cvp_label3,vendor_labels[2],16);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1063: FILE: drivers/scsi/ch.c:774:
+			strncpy(vparams.cvp_label3,vendor_labels[2],16);
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1067: FILE: drivers/scsi/ch.c:778:
+			strncpy(vparams.cvp_label4,vendor_labels[3],16);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1067: FILE: drivers/scsi/ch.c:778:
+			strncpy(vparams.cvp_label4,vendor_labels[3],16);
 			                                           ^

CHECK:SPACING: No space is necessary after a cast
#1069: FILE: drivers/scsi/ch.c:780:
+		if (copy_to_user((void *) arg, &vparams, sizeof(vparams)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1073: FILE: drivers/scsi/ch.c:784:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: drivers/scsi/ch.c:788:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1078: FILE: drivers/scsi/ch.c:789:
+		if (copy_from_user(&pos, (void*)arg, sizeof (pos)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1078: FILE: drivers/scsi/ch.c:789:
+		if (copy_from_user(&pos, (void*)arg, sizeof (pos)))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1081: FILE: drivers/scsi/ch.c:792:
+		if (0 != ch_checkrange(ch, pos.cp_type, pos.cp_unit)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1082: FILE: drivers/scsi/ch.c:793:
+			dprintk("CHIOPOSITION: invalid parameter%s\n","");
 			                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1086: FILE: drivers/scsi/ch.c:797:
+		retval = ch_position(ch,0,
 		                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1092: FILE: drivers/scsi/ch.c:803:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1097: FILE: drivers/scsi/ch.c:808:
+		if (copy_from_user(&mv, (void*)arg, sizeof (mv)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1097: FILE: drivers/scsi/ch.c:808:
+		if (copy_from_user(&mv, (void*)arg, sizeof (mv)))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1100: FILE: drivers/scsi/ch.c:811:
+		if (0 != ch_checkrange(ch, mv.cm_fromtype, mv.cm_fromunit) ||

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1101: FILE: drivers/scsi/ch.c:812:
+		    0 != ch_checkrange(ch, mv.cm_totype,   mv.cm_tounit  )) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1101: FILE: drivers/scsi/ch.c:812:
+		    0 != ch_checkrange(ch, mv.cm_totype,   mv.cm_tounit  )) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1102: FILE: drivers/scsi/ch.c:813:
+			dprintk("CHIOMOVE: invalid parameter%s\n","");
 			                                         ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1106: FILE: drivers/scsi/ch.c:817:
+		    ch_is_busy(ch, mv.cm_totype,   mv.cm_tounit  ))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: drivers/scsi/ch.c:819:
+^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1110: FILE: drivers/scsi/ch.c:821:
+		retval = ch_move(ch,0,
 		                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1121: FILE: drivers/scsi/ch.c:832:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1122: FILE: drivers/scsi/ch.c:833:
+		if (copy_from_user(&mv, (void*)arg, sizeof (mv)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1122: FILE: drivers/scsi/ch.c:833:
+		if (copy_from_user(&mv, (void*)arg, sizeof (mv)))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1125: FILE: drivers/scsi/ch.c:836:
+		if (0 != ch_checkrange(ch, mv.ce_srctype,  mv.ce_srcunit ) ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1125: FILE: drivers/scsi/ch.c:836:
+		if (0 != ch_checkrange(ch, mv.ce_srctype,  mv.ce_srcunit ) ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1126: FILE: drivers/scsi/ch.c:837:
+		    0 != ch_checkrange(ch, mv.ce_fdsttype, mv.ce_fdstunit) ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1127: FILE: drivers/scsi/ch.c:838:
+		    0 != ch_checkrange(ch, mv.ce_sdsttype, mv.ce_sdstunit)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1128: FILE: drivers/scsi/ch.c:839:
+			dprintk("CHIOEXCHANGE: invalid parameter%s\n","");
 			                                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1131: FILE: drivers/scsi/ch.c:842:
+		if (0 != ch_is_busy(ch, mv.ce_srctype,  mv.ce_srcunit ) ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1131: FILE: drivers/scsi/ch.c:842:
+		if (0 != ch_is_busy(ch, mv.ce_srctype,  mv.ce_srcunit ) ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1132: FILE: drivers/scsi/ch.c:843:
+		    0 != ch_is_busy(ch, mv.ce_fdsttype, mv.ce_fdstunit) ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1133: FILE: drivers/scsi/ch.c:844:
+		    0 != ch_is_busy(ch, mv.ce_sdsttype, mv.ce_sdstunit))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1135: FILE: drivers/scsi/ch.c:846:
+^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1138: FILE: drivers/scsi/ch.c:849:
+			(ch,0,
 			   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1150: FILE: drivers/scsi/ch.c:861:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1151: FILE: drivers/scsi/ch.c:862:
+		if (copy_from_user(&ces, (void*)arg, sizeof (ces)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1151: FILE: drivers/scsi/ch.c:862:
+		if (copy_from_user(&ces, (void*)arg, sizeof (ces)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1164: FILE: drivers/scsi/ch.c:875:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1165: FILE: drivers/scsi/ch.c:876:
+		if (copy_from_user(&ces32, (void*)arg, sizeof (ces32)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1165: FILE: drivers/scsi/ch.c:876:
+		if (copy_from_user(&ces32, (void*)arg, sizeof (ces32)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1174: FILE: drivers/scsi/ch.c:885:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1174: FILE: drivers/scsi/ch.c:885:
+    $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1181: FILE: drivers/scsi/ch.c:892:
+		int     result,i;
 		              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1182: FILE: drivers/scsi/ch.c:893:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1183: FILE: drivers/scsi/ch.c:894:
+		if (copy_from_user(&cge, (void*)arg, sizeof (cge)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1183: FILE: drivers/scsi/ch.c:894:
+		if (copy_from_user(&cge, (void*)arg, sizeof (cge)))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1186: FILE: drivers/scsi/ch.c:897:
+		if (0 != ch_checkrange(ch, cge.cge_type, cge.cge_unit))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1189: FILE: drivers/scsi/ch.c:900:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1194: FILE: drivers/scsi/ch.c:905:
+^I^I$

WARNING:INDENTED_LABEL: labels should not be indented
#1195: FILE: drivers/scsi/ch.c:906:
+	voltag_retry:

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1196: FILE: drivers/scsi/ch.c:907:
+		memset(cmd,0,sizeof(cmd));
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1196: FILE: drivers/scsi/ch.c:907:
+		memset(cmd,0,sizeof(cmd));
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1200: FILE: drivers/scsi/ch.c:911:
+			ch_elem_to_typecode(ch,elem);
 			                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1205: FILE: drivers/scsi/ch.c:916:
+^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1206: FILE: drivers/scsi/ch.c:917:
+		if (0 == (result = ch_do_scsi(ch, cmd, buffer, 256))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1209: FILE: drivers/scsi/ch.c:920:
+			if (buffer[18] & CESTATUS_EXCEPT) {
+				/* FIXME: fill cge_errno */
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1216: FILE: drivers/scsi/ch.c:927:
+				elem = (buffer[26]<<8) | buffer[27];
 				                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1221: FILE: drivers/scsi/ch.c:932:
+						cge.cge_srcunit = elem-ch->firsts[i];
 						                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1232: FILE: drivers/scsi/ch.c:943:
+				memcpy(cge.cge_pvoltag,buffer+28,36);
 				                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1232: FILE: drivers/scsi/ch.c:943:
+				memcpy(cge.cge_pvoltag,buffer+28,36);
 				                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1232: FILE: drivers/scsi/ch.c:943:
+				memcpy(cge.cge_pvoltag,buffer+28,36);
 				                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1236: FILE: drivers/scsi/ch.c:947:
+				memcpy(cge.cge_avoltag,buffer+64,36);
 				                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1236: FILE: drivers/scsi/ch.c:947:
+				memcpy(cge.cge_avoltag,buffer+64,36);
 				                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1236: FILE: drivers/scsi/ch.c:947:
+				memcpy(cge.cge_avoltag,buffer+64,36);
 				                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1240: FILE: drivers/scsi/ch.c:951:
+			vprintk("device has no volume tag support%s\n","");
 			                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1245: FILE: drivers/scsi/ch.c:956:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1246: FILE: drivers/scsi/ch.c:957:
+		if (copy_to_user((void*)arg, &cge, sizeof (cge)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1246: FILE: drivers/scsi/ch.c:957:
+		if (copy_to_user((void*)arg, &cge, sizeof (cge)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1258: FILE: drivers/scsi/ch.c:969:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1264: FILE: drivers/scsi/ch.c:975:
+		if (copy_from_user(&csv, (void*)arg, sizeof(csv)))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1267: FILE: drivers/scsi/ch.c:978:
+		if (0 != ch_checkrange(ch, csv.csv_type, csv.csv_unit)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1268: FILE: drivers/scsi/ch.c:979:
+			dprintk("CHIOSVOLTAG: invalid parameter%s\n","");
 			                                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1282: FILE: drivers/scsi/ch.c:993:
+		return scsi_ioctl(ch->device, cmd, (void*)arg);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1284: FILE: drivers/scsi/ch.c:995:
+
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1289: FILE: drivers/scsi/ch.c:1000:
+static int ch_attach(Scsi_Device * sd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1292: FILE: drivers/scsi/ch.c:1003:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1295: FILE: drivers/scsi/ch.c:1006:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1295: FILE: drivers/scsi/ch.c:1006:
+    $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1297: FILE: drivers/scsi/ch.c:1008:
+	if (NULL == ch)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1300: FILE: drivers/scsi/ch.c:1011:
+	memset(ch,0,sizeof(*ch));
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1300: FILE: drivers/scsi/ch.c:1011:
+	memset(ch,0,sizeof(*ch));
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1302: FILE: drivers/scsi/ch.c:1013:
+	sprintf(ch->name,"ch%d",ch->minor);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1302: FILE: drivers/scsi/ch.c:1013:
+	sprintf(ch->name,"ch%d",ch->minor);
 	                       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#1311: FILE: drivers/scsi/ch.c:1022:
+		       S_IFCHR | S_IRUGO | S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1314: FILE: drivers/scsi/ch.c:1025:
+	printk(KERN_INFO "Attached scsi changer %s "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1315: FILE: drivers/scsi/ch.c:1026:
+^I       "at scsi%d, channel %d, id %d, lun %d\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#1315: FILE: drivers/scsi/ch.c:1026:
+	printk(KERN_INFO "Attached scsi changer %s "
+	       "at scsi%d, channel %d, id %d, lun %d\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1317: FILE: drivers/scsi/ch.c:1028:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1319: FILE: drivers/scsi/ch.c:1030:
+	list_add_tail(&ch->list,&ch_devlist);
 	                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1319: FILE: drivers/scsi/ch.c:1030:
+	list_add_tail(&ch->list,&ch_devlist);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1332: FILE: drivers/scsi/ch.c:1043:
+	list_for_each(item,&ch_devlist) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1332: FILE: drivers/scsi/ch.c:1043:
+	list_for_each(item,&ch_devlist) {
 	                   ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1337: FILE: drivers/scsi/ch.c:1048:
+	BUG_ON(NULL == ch);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1337: FILE: drivers/scsi/ch.c:1048:
+	BUG_ON(NULL == ch);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1346: FILE: drivers/scsi/ch.c:1057:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1351: FILE: drivers/scsi/ch.c:1062:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1352: FILE: drivers/scsi/ch.c:1063:
+	printk(KERN_INFO "SCSI Media Changer driver v" VERSION

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1354: FILE: drivers/scsi/ch.c:1065:
+	rc = register_chrdev(MAJOR_NR,"ch",&changer_fops);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1354: FILE: drivers/scsi/ch.c:1065:
+	rc = register_chrdev(MAJOR_NR,"ch",&changer_fops);
 	                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1354: FILE: drivers/scsi/ch.c:1065:
+	rc = register_chrdev(MAJOR_NR,"ch",&changer_fops);
 	                                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1356: FILE: drivers/scsi/ch.c:1067:
+		printk("Unable to get major %d for SCSI-Changer\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1372: FILE: drivers/scsi/ch.c:1083:
+static void __exit exit_ch_module(void) $

CHECK:SPACING: No space is necessary after a cast
#1372: FILE: drivers/scsi/ch.c:1083:
+static void __exit exit_ch_module(void) 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1391: FILE: include/linux/chio.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1405: FILE: include/linux/chio.h:15:
+
+

WARNING:TYPO_SPELLING: 'specifing' may be misspelled - perhaps 'specifying'?
#1413: FILE: include/linux/chio.h:23:
+ *    accessing elements works by specifing type and unit of the element.
                                   ^^^^^^^^^

WARNING:TYPO_SPELLING: 'eample' may be misspelled - perhaps 'example'?
#1414: FILE: include/linux/chio.h:24:
+ *    for eample, storage elements are addressed with type = CHET_ST and
           ^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1425: FILE: include/linux/chio.h:35:
+};
+struct changer_vendor_params {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1437: FILE: include/linux/chio.h:47:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1444: FILE: include/linux/chio.h:54:
+^Iint cm_fromunit;^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1449: FILE: include/linux/chio.h:59:
+};
+#define CM_INVERT   1   /* flag: rotate media (for double-sided like MOD) */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1451: FILE: include/linux/chio.h:61:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1467: FILE: include/linux/chio.h:77:
+};
+#define CE_INVERT1   1

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1470: FILE: include/linux/chio.h:80:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1480: FILE: include/linux/chio.h:90:
+};
+#define CP_INVERT   1

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1482: FILE: include/linux/chio.h:92:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1491: FILE: include/linux/chio.h:101:
+};
+#define CESTATUS_FULL     0x01 /* full */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1498: FILE: include/linux/chio.h:108:
+
+

WARNING:TYPO_SPELLING: 'informtion' may be misspelled - perhaps 'information'?
#1501: FILE: include/linux/chio.h:111:
+ *    get more detailed status informtion for a single element
                                ^^^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1516: FILE: include/linux/chio.h:126:
+};
+/* flags */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1524: FILE: include/linux/chio.h:134:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1535: FILE: include/linux/chio.h:145:
+};
+#define CSV_PVOLTAG   0x01       /* primary volume tag */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1540: FILE: include/linux/chio.h:150:
+#define CHIOMOVE       _IOW('c', 1,struct changer_move)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1541: FILE: include/linux/chio.h:151:
+#define CHIOEXCHANGE   _IOW('c', 2,struct changer_exchange)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1542: FILE: include/linux/chio.h:152:
+#define CHIOPOSITION   _IOW('c', 3,struct changer_position)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1543: FILE: include/linux/chio.h:153:
+#define CHIOGPICKER    _IOR('c', 4,int)                        /* not impl. */
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1544: FILE: include/linux/chio.h:154:
+#define CHIOSPICKER    _IOW('c', 5,int)                        /* not impl. */
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1545: FILE: include/linux/chio.h:155:
+#define CHIOGPARAMS    _IOR('c', 6,struct changer_params)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1546: FILE: include/linux/chio.h:156:
+#define CHIOGSTATUS    _IOW('c', 8,struct changer_element_status)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1547: FILE: include/linux/chio.h:157:
+#define CHIOGELEM      _IOW('c',16,struct changer_get_element)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1547: FILE: include/linux/chio.h:157:
+#define CHIOGELEM      _IOW('c',16,struct changer_get_element)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1548: FILE: include/linux/chio.h:158:
+#define CHIOINITELEM   _IO('c',17)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1549: FILE: include/linux/chio.h:159:
+#define CHIOSVOLTAG    _IOW('c',18,struct changer_set_voltag)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1549: FILE: include/linux/chio.h:159:
+#define CHIOSVOLTAG    _IOW('c',18,struct changer_set_voltag)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1550: FILE: include/linux/chio.h:160:
+#define CHIOGVPARAMS   _IOR('c',19,struct changer_vendor_params)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1550: FILE: include/linux/chio.h:160:
+#define CHIOGVPARAMS   _IOR('c',19,struct changer_vendor_params)
                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000372095.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 220 errors, 84 warnings, 66 checks, 1508 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000372095.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
