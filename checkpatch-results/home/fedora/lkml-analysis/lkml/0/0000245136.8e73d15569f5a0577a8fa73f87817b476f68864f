ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: lib/reed_solomon/decode_rs.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: lib/reed_solomon/decode_rs.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#99: FILE: lib/reed_solomon/decode_rs.c:2:
+ * lib/reed_solomon/decode_rs.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: lib/reed_solomon/decode_rs.c:6:
+ *   $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#109: FILE: lib/reed_solomon/decode_rs.c:12:
+ * $Id: decode_rs.c,v 1.4 2004/10/01 21:44:39 gleixner Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:TYPO_SPELLING: 'witdh' may be misspelled - perhaps 'width'?
#113: FILE: lib/reed_solomon/decode_rs.c:16:
+/* Generic data witdh independend code which is included by the 
                 ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: lib/reed_solomon/decode_rs.c:16:
+/* Generic data witdh independend code which is included by the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: lib/reed_solomon/decode_rs.c:19:
+{ $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#119: FILE: lib/reed_solomon/decode_rs.c:22:
+	uint16_t u, q, tmp, num1, num2, den, discr_r, syn_error;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: lib/reed_solomon/decode_rs.c:24:
+^Iuint16_t lambda[NROOTS + 1], syn[NROOTS];^I$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#121: FILE: lib/reed_solomon/decode_rs.c:24:
+	uint16_t lambda[NROOTS + 1], syn[NROOTS];	

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#122: FILE: lib/reed_solomon/decode_rs.c:25:
+	uint16_t b[NROOTS + 1], t[NROOTS + 1], omega[NROOTS + 1];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#123: FILE: lib/reed_solomon/decode_rs.c:26:
+	uint16_t root[NROOTS], reg[NROOTS + 1], loc[NROOTS];

CHECK:SPACING: No space is necessary after a cast
#125: FILE: lib/reed_solomon/decode_rs.c:28:
+	uint16_t msk = (uint16_t) rs->nn;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#125: FILE: lib/reed_solomon/decode_rs.c:28:
+	uint16_t msk = (uint16_t) rs->nn;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: lib/reed_solomon/decode_rs.c:34:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: lib/reed_solomon/decode_rs.c:36:
+^Iif (s != NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s"
#133: FILE: lib/reed_solomon/decode_rs.c:36:
+	if (s != NULL) 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#138: FILE: lib/reed_solomon/decode_rs.c:41:
+		syn[i] = (((uint16_t) data[0]) ^ invmsk) & msk;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#142: FILE: lib/reed_solomon/decode_rs.c:45:
+			if (syn[i] == 0) {
[...]
+			} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#143: FILE: lib/reed_solomon/decode_rs.c:46:
+				syn[i] = (((uint16_t) data[j]) ^ invmsk) & msk;

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#145: FILE: lib/reed_solomon/decode_rs.c:48:
+				syn[i] = ((((uint16_t) data[j]) ^ invmsk) & msk) ^ ALPHA_TO[MODNN(INDEX_OF[syn[i]] + (FCR+i)*PRIM)];

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#145: FILE: lib/reed_solomon/decode_rs.c:48:
+				syn[i] = ((((uint16_t) data[j]) ^ invmsk) & msk) ^ ALPHA_TO[MODNN(INDEX_OF[syn[i]] + (FCR+i)*PRIM)];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#145: FILE: lib/reed_solomon/decode_rs.c:48:
+				syn[i] = ((((uint16_t) data[j]) ^ invmsk) & msk) ^ ALPHA_TO[MODNN(INDEX_OF[syn[i]] + (FCR+i)*PRIM)];
 				                                                                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#145: FILE: lib/reed_solomon/decode_rs.c:48:
+				syn[i] = ((((uint16_t) data[j]) ^ invmsk) & msk) ^ ALPHA_TO[MODNN(INDEX_OF[syn[i]] + (FCR+i)*PRIM)];
 				                                                                                            ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#152: FILE: lib/reed_solomon/decode_rs.c:55:
+			if (syn[i] == 0) {
[...]
+			} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#153: FILE: lib/reed_solomon/decode_rs.c:56:
+				syn[i] = ((uint16_t) par[j]) & msk;

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#155: FILE: lib/reed_solomon/decode_rs.c:58:
+				syn[i] = (((uint16_t) par[j]) & msk) ^ ALPHA_TO[MODNN(INDEX_OF[syn[i]] + (FCR+i)*PRIM)];

CHECK:SPACING: No space is necessary after a cast
#155: FILE: lib/reed_solomon/decode_rs.c:58:
+				syn[i] = (((uint16_t) par[j]) & msk) ^ ALPHA_TO[MODNN(INDEX_OF[syn[i]] + (FCR+i)*PRIM)];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: lib/reed_solomon/decode_rs.c:58:
+				syn[i] = (((uint16_t) par[j]) & msk) ^ ALPHA_TO[MODNN(INDEX_OF[syn[i]] + (FCR+i)*PRIM)];
 				                                                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#155: FILE: lib/reed_solomon/decode_rs.c:58:
+				syn[i] = (((uint16_t) par[j]) & msk) ^ ALPHA_TO[MODNN(INDEX_OF[syn[i]] + (FCR+i)*PRIM)];
 				                                                                                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: lib/reed_solomon/decode_rs.c:80:
+	memset (&lambda[1], 0, NROOTS * sizeof (lambda[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: lib/reed_solomon/decode_rs.c:80:
+	memset (&lambda[1], 0, NROOTS * sizeof (lambda[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: lib/reed_solomon/decode_rs.c:85:
+		lambda[1] = ALPHA_TO[MODNN (PRIM * (NN - 1 - eras_pos[0]))];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: lib/reed_solomon/decode_rs.c:87:
+			u = MODNN (PRIM * (NN - 1 - eras_pos[i]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: lib/reed_solomon/decode_rs.c:91:
+					lambda[j] ^= ALPHA_TO[MODNN (u + tmp)];

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lambda[i] != 0'
#206: FILE: lib/reed_solomon/decode_rs.c:109:
+			if ((lambda[i] != 0) && (s[r - i - 1] != A0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 's[r - i - 1] != A0'
#206: FILE: lib/reed_solomon/decode_rs.c:109:
+			if ((lambda[i] != 0) && (s[r - i - 1] != A0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#206: FILE: lib/reed_solomon/decode_rs.c:109:
+			if ((lambda[i] != 0) && (s[r - i - 1] != A0)) {
+				discr_r ^= ALPHA_TO[MODNN (INDEX_OF[lambda[i]] + s[r - i - 1])];
+			}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: lib/reed_solomon/decode_rs.c:110:
+				discr_r ^= ALPHA_TO[MODNN (INDEX_OF[lambda[i]] + s[r - i - 1])];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#213: FILE: lib/reed_solomon/decode_rs.c:116:
+			memmove (&b[1], b, NROOTS * sizeof (b[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#213: FILE: lib/reed_solomon/decode_rs.c:116:
+			memmove (&b[1], b, NROOTS * sizeof (b[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: lib/reed_solomon/decode_rs.c:123:
+					t[i + 1] = lambda[i + 1] ^ ALPHA_TO[MODNN (discr_r + b[i])];

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#231: FILE: lib/reed_solomon/decode_rs.c:134:
+					b[i] = (lambda[i] == 0) ? A0 : MODNN (INDEX_OF[lambda[i]] - discr_r + NN);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: lib/reed_solomon/decode_rs.c:134:
+					b[i] = (lambda[i] == 0) ? A0 : MODNN (INDEX_OF[lambda[i]] - discr_r + NN);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: lib/reed_solomon/decode_rs.c:137:
+				memmove (&b[1], b, NROOTS * sizeof (b[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: lib/reed_solomon/decode_rs.c:137:
+				memmove (&b[1], b, NROOTS * sizeof (b[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: lib/reed_solomon/decode_rs.c:140:
+			memcpy (lambda, t, (NROOTS + 1) * sizeof (t[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: lib/reed_solomon/decode_rs.c:140:
+			memcpy (lambda, t, (NROOTS + 1) * sizeof (t[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: lib/reed_solomon/decode_rs.c:152:
+	memcpy (&reg[1], &lambda[1], NROOTS * sizeof (reg[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: lib/reed_solomon/decode_rs.c:152:
+	memcpy (&reg[1], &lambda[1], NROOTS * sizeof (reg[0]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: lib/reed_solomon/decode_rs.c:154:
+	for (i = 1, k = IPRIM - 1; i <= NN; i++, k = MODNN (k + IPRIM)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: lib/reed_solomon/decode_rs.c:158:
+				reg[j] = MODNN (reg[j] + j);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 's[i - j] != A0'
#286: FILE: lib/reed_solomon/decode_rs.c:189:
+			if ((s[i - j] != A0) && (lambda[j] != A0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lambda[j] != A0'
#286: FILE: lib/reed_solomon/decode_rs.c:189:
+			if ((s[i - j] != A0) && (lambda[j] != A0))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: lib/reed_solomon/decode_rs.c:191:
+				    ALPHA_TO[MODNN (s[i - j] + lambda[j])];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: lib/reed_solomon/decode_rs.c:204:
+				num1 ^= ALPHA_TO[MODNN (omega[i] + i * root[j])];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: lib/reed_solomon/decode_rs.c:206:
+		num2 = ALPHA_TO[MODNN (root[j] * (FCR - 1) + NN)];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: lib/reed_solomon/decode_rs.c:210:
+		for (i = min (deg_lambda, NROOTS - 1) & ~1; i >= 0; i -= 2) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#309: FILE: lib/reed_solomon/decode_rs.c:212:
+				den ^= ALPHA_TO[MODNN (lambda[i + 1] + i * root[j])];

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#313: FILE: lib/reed_solomon/decode_rs.c:216:
+			uint16_t cor = ALPHA_TO[MODNN (INDEX_OF[num1] + INDEX_OF[num2] + NN - INDEX_OF[den])];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: lib/reed_solomon/decode_rs.c:216:
+			uint16_t cor = ALPHA_TO[MODNN (INDEX_OF[num1] + INDEX_OF[num2] + NN - INDEX_OF[den])];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#313: FILE: lib/reed_solomon/decode_rs.c:216:
+			uint16_t cor = ALPHA_TO[MODNN (INDEX_OF[num1] + INDEX_OF[num2] + NN - INDEX_OF[den])];

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#314: FILE: lib/reed_solomon/decode_rs.c:217:
+			/* Store the error correction pattern, if a correction buffer is available */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#318: FILE: lib/reed_solomon/decode_rs.c:221:
+				/* If a data buffer is given and the error is inside the message, correct it */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "eras_pos"
#326: FILE: lib/reed_solomon/decode_rs.c:229:
+	if (eras_pos != NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#332: FILE: lib/reed_solomon/decode_rs.c:235:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: lib/reed_solomon/encode_rs.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#337: FILE: lib/reed_solomon/encode_rs.c:1:
+/* 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#338: FILE: lib/reed_solomon/encode_rs.c:2:
+ * lib/reed_solomon/encode_rs.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: lib/reed_solomon/encode_rs.c:6:
+ *   $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#348: FILE: lib/reed_solomon/encode_rs.c:12:
+ * $Id: encode_rs.c,v 1.2 2004/09/19 12:09:40 gleixner Exp $

WARNING:TYPO_SPELLING: 'witdh' may be misspelled - perhaps 'width'?
#352: FILE: lib/reed_solomon/encode_rs.c:16:
+/* Generic data witdh independend code which is included by the 
                 ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: lib/reed_solomon/encode_rs.c:16:
+/* Generic data witdh independend code which is included by the $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#358: FILE: lib/reed_solomon/encode_rs.c:22:
+	uint16_t feedback;

CHECK:SPACING: No space is necessary after a cast
#359: FILE: lib/reed_solomon/encode_rs.c:23:
+	uint16_t msk = (uint16_t) NN;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#359: FILE: lib/reed_solomon/encode_rs.c:23:
+	uint16_t msk = (uint16_t) NN;

CHECK:SPACING: No space is necessary after a cast
#367: FILE: lib/reed_solomon/encode_rs.c:31:
+		feedback = INDEX_OF[((((uint16_t) data[i])^invmsk) & msk) ^ par[0]];

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#367: FILE: lib/reed_solomon/encode_rs.c:31:
+		feedback = INDEX_OF[((((uint16_t) data[i])^invmsk) & msk) ^ par[0]];
 		                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: lib/reed_solomon/encode_rs.c:33:
+^I^Iif (feedback != A0) {^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#371: FILE: lib/reed_solomon/encode_rs.c:35:
+				par[j] ^= ALPHA_TO[MODNN (feedback + GENPOLY[NROOTS - j])];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#374: FILE: lib/reed_solomon/encode_rs.c:38:
+		memmove (&par[0], &par[1], sizeof (uint16_t) * (NROOTS - 1));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#374: FILE: lib/reed_solomon/encode_rs.c:38:
+		memmove (&par[0], &par[1], sizeof (uint16_t) * (NROOTS - 1));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: lib/reed_solomon/encode_rs.c:40:
+			par[NROOTS - 1] = ALPHA_TO[MODNN (feedback + GENPOLY[0])];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: lib/reed_solomon/Makefile:2:
+# This is a modified version of reed solomon lib, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: lib/reed_solomon/reed_solomon.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#396: FILE: lib/reed_solomon/reed_solomon.c:1:
+/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: lib/reed_solomon/reed_solomon.c:6:
+ *   $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#407: FILE: lib/reed_solomon/reed_solomon.c:12:
+ * $Id: rslib.c,v 1.3 2004/10/01 21:44:39 gleixner Exp $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: lib/reed_solomon/reed_solomon.c:19:
+ *^I$

WARNING:TYPO_SPELLING: 'neccecary' may be misspelled - perhaps 'necessary'?
#423: FILE: lib/reed_solomon/reed_solomon.c:28:
+ * Usually a module / driver should initialize the neccecary 
                                                    ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: lib/reed_solomon/reed_solomon.c:28:
+ * Usually a module / driver should initialize the neccecary $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: lib/reed_solomon/reed_solomon.c:31:
+ * The encoding puts the calculated syndrome into a given syndrom $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: lib/reed_solomon/reed_solomon.c:32:
+ * buffer. $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#445: FILE: lib/reed_solomon/reed_solomon.c:50:
+static LIST_HEAD (rslist);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: lib/reed_solomon/reed_solomon.c:54:
+/** $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#461: FILE: lib/reed_solomon/reed_solomon.c:66:
+static struct rs_control *rs_init (int symsize, int gfpoly, int fcr, int prim, int nroots)

CHECK:SPACING: No space is necessary after a cast
#467: FILE: lib/reed_solomon/reed_solomon.c:72:
+	rs = (struct rs_control *) kmalloc (sizeof (struct rs_control), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: lib/reed_solomon/reed_solomon.c:72:
+	rs = (struct rs_control *) kmalloc (sizeof (struct rs_control), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: lib/reed_solomon/reed_solomon.c:72:
+	rs = (struct rs_control *) kmalloc (sizeof (struct rs_control), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#467: FILE: lib/reed_solomon/reed_solomon.c:72:
+	rs = (struct rs_control *) kmalloc (sizeof (struct rs_control), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rs)...) over kmalloc(sizeof (struct rs_control)...)
#467: FILE: lib/reed_solomon/reed_solomon.c:72:
+	rs = (struct rs_control *) kmalloc (sizeof (struct rs_control), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rs"
#468: FILE: lib/reed_solomon/reed_solomon.c:73:
+	if (rs == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#481: FILE: lib/reed_solomon/reed_solomon.c:86:
+	rs->alpha_to = (uint16_t *) kmalloc (sizeof (uint16_t) * (rs->nn + 1), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#481: FILE: lib/reed_solomon/reed_solomon.c:86:
+	rs->alpha_to = (uint16_t *) kmalloc (sizeof (uint16_t) * (rs->nn + 1), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#481: FILE: lib/reed_solomon/reed_solomon.c:86:
+	rs->alpha_to = (uint16_t *) kmalloc (sizeof (uint16_t) * (rs->nn + 1), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rs->alpha_to"
#482: FILE: lib/reed_solomon/reed_solomon.c:87:
+	if (rs->alpha_to == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: lib/reed_solomon/reed_solomon.c:90:
+	rs->index_of = (uint16_t *) kmalloc (sizeof (uint16_t) * (rs->nn + 1), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: lib/reed_solomon/reed_solomon.c:90:
+	rs->index_of = (uint16_t *) kmalloc (sizeof (uint16_t) * (rs->nn + 1), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#485: FILE: lib/reed_solomon/reed_solomon.c:90:
+	rs->index_of = (uint16_t *) kmalloc (sizeof (uint16_t) * (rs->nn + 1), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rs->index_of"
#486: FILE: lib/reed_solomon/reed_solomon.c:91:
+	if (rs->index_of == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#489: FILE: lib/reed_solomon/reed_solomon.c:94:
+	rs->genpoly = (uint16_t *) kmalloc (sizeof (uint16_t) * (rs->nroots + 1), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#489: FILE: lib/reed_solomon/reed_solomon.c:94:
+	rs->genpoly = (uint16_t *) kmalloc (sizeof (uint16_t) * (rs->nroots + 1), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#489: FILE: lib/reed_solomon/reed_solomon.c:94:
+	rs->genpoly = (uint16_t *) kmalloc (sizeof (uint16_t) * (rs->nroots + 1), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rs->genpoly"
#490: FILE: lib/reed_solomon/reed_solomon.c:95:
+	if (rs->genpoly == NULL)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#510: FILE: lib/reed_solomon/reed_solomon.c:115:
+	for (iprim = 1; (iprim % prim) != 0; iprim += rs->nn);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#522: FILE: lib/reed_solomon/reed_solomon.c:127:
+				rs->genpoly[j] = rs->genpoly[j -1] ^ rs->alpha_to[(rs->index_of[rs->genpoly[j]] + root) % rs->nn];

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#522: FILE: lib/reed_solomon/reed_solomon.c:127:
+				rs->genpoly[j] = rs->genpoly[j -1] ^ rs->alpha_to[(rs->index_of[rs->genpoly[j]] + root) % rs->nn];
 				                               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#536: FILE: lib/reed_solomon/reed_solomon.c:141:
+	kfree (rs->genpoly);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#538: FILE: lib/reed_solomon/reed_solomon.c:143:
+	kfree (rs->index_of);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#540: FILE: lib/reed_solomon/reed_solomon.c:145:
+	kfree (rs->alpha_to);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#542: FILE: lib/reed_solomon/reed_solomon.c:147:
+	kfree (rs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#546: FILE: lib/reed_solomon/reed_solomon.c:151:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: lib/reed_solomon/reed_solomon.c:152:
+/** $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: lib/reed_solomon/reed_solomon.c:158:
+void free_rs (struct rs_control *rs)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: lib/reed_solomon/reed_solomon.c:160:
+	down (&rslistlock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#558: FILE: lib/reed_solomon/reed_solomon.c:163:
+		list_del (&rs->list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#559: FILE: lib/reed_solomon/reed_solomon.c:164:
+		kfree (rs->alpha_to);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#560: FILE: lib/reed_solomon/reed_solomon.c:165:
+		kfree (rs->index_of);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#561: FILE: lib/reed_solomon/reed_solomon.c:166:
+		kfree (rs->genpoly);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#562: FILE: lib/reed_solomon/reed_solomon.c:167:
+		kfree (rs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#564: FILE: lib/reed_solomon/reed_solomon.c:169:
+	up (&rslistlock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: lib/reed_solomon/reed_solomon.c:172:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: lib/reed_solomon/reed_solomon.c:179:
+ *  @fcr:  ^Ithe first consecutive root of the rs code generator polynomial $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#574: FILE: lib/reed_solomon/reed_solomon.c:179:
+ *  @fcr:  ^Ithe first consecutive root of the rs code generator polynomial $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#579: FILE: lib/reed_solomon/reed_solomon.c:184:
+struct rs_control *init_rs (int symsize, int gfpoly, int fcr, int prim, int nroots)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#587: FILE: lib/reed_solomon/reed_solomon.c:192:
+	if (fcr < 0 || fcr >= (1<<symsize))
 	                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: lib/reed_solomon/reed_solomon.c:193:
+    ^I^Ireturn NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#588: FILE: lib/reed_solomon/reed_solomon.c:193:
+    ^I^Ireturn NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: lib/reed_solomon/reed_solomon.c:193:
+    ^I^Ireturn NULL;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#589: FILE: lib/reed_solomon/reed_solomon.c:194:
+	if (prim <= 0 || prim >= (1<<symsize))
 	                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: lib/reed_solomon/reed_solomon.c:195:
+    ^I^Ireturn NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#590: FILE: lib/reed_solomon/reed_solomon.c:195:
+    ^I^Ireturn NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: lib/reed_solomon/reed_solomon.c:195:
+    ^I^Ireturn NULL;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#591: FILE: lib/reed_solomon/reed_solomon.c:196:
+	if (nroots < 0 || nroots >= (1<<symsize))
 	                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: lib/reed_solomon/reed_solomon.c:198:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#594: FILE: lib/reed_solomon/reed_solomon.c:199:
+	down (&rslistlock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#597: FILE: lib/reed_solomon/reed_solomon.c:202:
+	list_for_each (tmp, &rslist) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: lib/reed_solomon/reed_solomon.c:203:
+		rs = list_entry (tmp, struct rs_control, list);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: lib/reed_solomon/reed_solomon.c:209:
+^I^I^Icontinue;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: lib/reed_solomon/reed_solomon.c:211:
+^I^I^Icontinue;^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#615: FILE: lib/reed_solomon/reed_solomon.c:220:
+	rs = rs_init (symsize, gfpoly, fcr, prim, nroots);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#618: FILE: lib/reed_solomon/reed_solomon.c:223:
+		list_add (&rs->list, &rslist);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: lib/reed_solomon/reed_solomon.c:225:
+out:^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#621: FILE: lib/reed_solomon/reed_solomon.c:226:
+	up (&rslistlock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: lib/reed_solomon/reed_solomon.c:230:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: lib/reed_solomon/reed_solomon.c:235:
+ *  @len:^Idata length $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: lib/reed_solomon/reed_solomon.c:248:
+/** $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: lib/reed_solomon/reed_solomon.c:266:
+int decode_rs8 (struct rs_control *rs, uint8_t *data, uint16_t *par, int len,
+		 uint16_t *s, int no_eras, int *eras_pos, uint16_t invmsk, uint16_t *corr)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#661: FILE: lib/reed_solomon/reed_solomon.c:266:
+		 uint16_t *s, int no_eras, int *eras_pos, uint16_t invmsk, uint16_t *corr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: lib/reed_solomon/reed_solomon.c:276:
+ *  @len:^Idata length $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: lib/reed_solomon/reed_solomon.c:287:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: lib/reed_solomon/reed_solomon.c:297:
+ *  @invmsk:^Iinvert data mask (will be xored on data, not on parity!) $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#698: FILE: lib/reed_solomon/reed_solomon.c:303:
+		 uint16_t *s, int no_eras, int *eras_pos, uint16_t invmsk, uint16_t *corr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: lib/reed_solomon/reed_solomon.c:308:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: lib/reed_solomon/reed_solomon.c:313:
+ *  @len:^Idata length $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#713: FILE: lib/reed_solomon/reed_solomon.c:318:
+ *  we can't handle symbol size >= 16 bit as the polynominal arrays would $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#722: FILE: lib/reed_solomon/reed_solomon.c:327:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#736: FILE: lib/reed_solomon/reed_solomon.c:341:
+ *  we can't handle symbol size > 16 as the polynominal arrays would be to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: lib/reed_solomon/reed_solomon.c:342:
+ *  large and the computation would be extreme slow. The calling code must $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: lib/reed_solomon/reed_solomon.c:343:
+ *  take care of decoding of the syndrome result and the received parity $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#743: FILE: lib/reed_solomon/reed_solomon.c:348:
+		 uint16_t *s, int no_eras, int *eras_pos, uint16_t invmsk, uint16_t *corr)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#748: FILE: lib/reed_solomon/reed_solomon.c:353:
+EXPORT_SYMBOL(encode_rs8);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#749: FILE: lib/reed_solomon/reed_solomon.c:354:
+EXPORT_SYMBOL(encode_rs16);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#750: FILE: lib/reed_solomon/reed_solomon.c:355:
+EXPORT_SYMBOL(encode_rs32);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#751: FILE: lib/reed_solomon/reed_solomon.c:356:
+EXPORT_SYMBOL(decode_rs8);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#752: FILE: lib/reed_solomon/reed_solomon.c:357:
+EXPORT_SYMBOL(decode_rs16);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#753: FILE: lib/reed_solomon/reed_solomon.c:358:
+EXPORT_SYMBOL(decode_rs32);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#754: FILE: lib/reed_solomon/reed_solomon.c:359:
+EXPORT_SYMBOL(init_rs);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#755: FILE: lib/reed_solomon/reed_solomon.c:360:
+EXPORT_SYMBOL(free_rs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: include/linux/rslib.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#764: FILE: include/linux/rslib.h:1:
+/* 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#765: FILE: include/linux/rslib.h:2:
+ * include/linux/rslib.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: include/linux/rslib.h:6:
+ *   $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#775: FILE: include/linux/rslib.h:12:
+ * $Id: rslib.h,v 1.2 2004/10/01 21:43:50 gleixner Exp $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#787: FILE: include/linux/rslib.h:24:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: include/linux/rslib.h:26:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: include/linux/rslib.h:31:
+ * @genpoly:^IGenerator polynomial $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: include/linux/rslib.h:34:
+ * @prim:^IPrimitive element, index form $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: include/linux/rslib.h:35:
+ * @iprim:^Iprim-th root of 1, index form $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: include/linux/rslib.h:36:
+ * @gfpoly:^IThe primitive generator polynominal $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: include/linux/rslib.h:37:
+ * @users:^IUsers of this structure $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#802: FILE: include/linux/rslib.h:39:
+ * @list:	List entry for the rs control list
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#804: FILE: include/linux/rslib.h:41:
+^Iint ^I^Imm;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#805: FILE: include/linux/rslib.h:42:
+^Iint ^I^Inn;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#806: FILE: include/linux/rslib.h:43:
+	uint16_t	*alpha_to;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#807: FILE: include/linux/rslib.h:44:
+	uint16_t	*index_of;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#808: FILE: include/linux/rslib.h:45:
+	uint16_t	*genpoly;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#809: FILE: include/linux/rslib.h:46:
+^Iint ^I^Inroots;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#810: FILE: include/linux/rslib.h:47:
+^Iint ^I^Ifcr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#811: FILE: include/linux/rslib.h:48:
+^Iint ^I^Iprim;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#812: FILE: include/linux/rslib.h:49:
+^Iint ^I^Iiprim;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#820: FILE: include/linux/rslib.h:57:
+int decode_rs8 (struct rs_control *rs, uint8_t *data, uint16_t *par, int len, $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#821: FILE: include/linux/rslib.h:58:
+		uint16_t *s, int no_eras, int *eras_pos, uint16_t invmsk, uint16_t *corr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: include/linux/rslib.h:63:
+int decode_rs16 (struct rs_control *rs, uint16_t *data, uint16_t *par, int len,
+		uint16_t *s, int no_eras, int *eras_pos, uint16_t invmsk, uint16_t *corr);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#826: FILE: include/linux/rslib.h:63:
+		uint16_t *s, int no_eras, int *eras_pos, uint16_t invmsk, uint16_t *corr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: include/linux/rslib.h:68:
+int decode_rs32 (struct rs_control *rs, uint32_t *data, uint16_t *par, int len,
+		uint16_t *s, int no_eras, int *eras_pos, uint16_t invmsk, uint16_t *corr);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#831: FILE: include/linux/rslib.h:68:
+		uint16_t *s, int no_eras, int *eras_pos, uint16_t invmsk, uint16_t *corr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#834: FILE: include/linux/rslib.h:71:
+struct rs_control *init_rs (int symsize, int gfpoly, int fcr, int prim, int nroots);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#837: FILE: include/linux/rslib.h:74:
+void free_rs (struct rs_control *rs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#840: FILE: include/linux/rslib.h:77:
+static inline int modnn (struct rs_control *rs, int x)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#849: FILE: include/linux/rslib.h:86:
+#define MODNN(x) modnn(rs,x)
                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#852: FILE: include/linux/rslib.h:89:
+#define ALPHA_TO (rs->alpha_to) $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000245136.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 54 errors, 108 warnings, 51 checks, 767 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000245136.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
