WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
The page fault handler for anonymous pages can generate significant overhead

WARNING:TYPO_SPELLING: 'acccess' may be misspelled - perhaps 'access'?
#46: 
(assuming linear acccess by the application). If the prediction turns out to
                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#54: 
continous allocation the number of faults is reduced by a factor of 8.
^^^^^^^^^

WARNING:BAD_SIGN_OFF: Non-standard signature: 'Signed_off_by:' - perhaps 'Signed-off-by:'?
#60: 
Signed_off_by: Christoph Lameter <clameter@sgi.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#101: FILE: mm/memory.c:1456:
+	if (likely((vma->vm_flags & VM_RAND_READ) || current->anon_fault_next_addr != addr)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#114: FILE: mm/memory.c:1469:
+			order = current->anon_fault_order = sysctl_max_prealloc_order;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#125: FILE: mm/memory.c:1478:
+		if ((addr & PMD_MASK) != (end_addr & PMD_MASK))
+		end_addr &= PMD_MASK;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#151: FILE: mm/memory.c:1495:
+					return VM_FAULT_OOM;
+				else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: mm/memory.c:1502:
+			entry = maybe_mkwrite(pte_mkdirty(mk_pte(page,
+							vma->vm_page_prot)),

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#192: FILE: mm/memory.c:1532:
+			if (unlikely(!ptep_cmpxchg(vma, addr, page_table, orig_entry, entry)))
+			break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: mm/memory.c:1546:
+        return VM_FAULT_MINOR;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: mm/memory.c:1546:
+        return VM_FAULT_MINOR;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#241: FILE: kernel/sysctl.c:59:
+extern int sysctl_max_prealloc_order;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#257: FILE: kernel/sysctl.c:828:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#270: FILE: include/linux/sysctl.h:171:
+	VM_MAX_PREFAULT_ORDER=29, /* max prefault order during anonymous page faults */
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222401.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 10 warnings, 3 checks, 190 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222401.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
