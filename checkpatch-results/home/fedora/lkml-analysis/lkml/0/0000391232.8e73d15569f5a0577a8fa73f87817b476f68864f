WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#42: FILE: sound/isa/Kconfig:42:
+config SND_PC98_CS4232
+	tristate "NEC PC9800 CS4232 driver"
+	depends on SND
+	help
+	  Say 'Y' or 'M' to include support for NEC PC-9801/PC-9821 sound cards
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: sound/isa/cs423x/pc98.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#91: FILE: sound/isa/cs423x/pc98.c:19:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#92: FILE: sound/isa/cs423x/pc98.c:20:
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#121: FILE: sound/isa/cs423x/pc98.c:49:
+#if 0 /* NOT USED */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#144: FILE: sound/isa/cs423x/pc98.c:72:
+#if 0 /* NOT USED */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#171: FILE: sound/isa/cs423x/pc98.c:99:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: sound/isa/cs423x/pc98.c:109:
+#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: sound/isa/cs423x/pc98.c:109:
+#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
                                     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#181: FILE: sound/isa/cs423x/pc98.c:109:
+#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: sound/isa/cs423x/pc98.c:109:
+#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)
                                                         ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#181: FILE: sound/isa/cs423x/pc98.c:109:
+#define outp118(reg,data) outb((reg),0x148e);outb((data),0x148f)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:SPACING: space required after that ',' (ctx:VxV)
#182: FILE: sound/isa/cs423x/pc98.c:110:
+#define WAIT118 outb(0x00,0x5f)
                          ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#216: FILE: sound/isa/cs423x/pc98.c:144:
+	for (count = 0; count < 35000; count ++)
 	                                     ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#219: FILE: sound/isa/cs423x/pc98.c:147:
+	for (count = 0; count < 65000; count ++)
 	                                     ^

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#222: FILE: sound/isa/cs423x/pc98.c:150:
+	snd_printk(KERN_ERR IDENT ": MIDI daughter board initalize failed at stage1\n\n");
 	                                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#230: FILE: sound/isa/cs423x/pc98.c:158:
+	for (count = 0; count < sizeof(Data0485_99); count ++) {
 	                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_99>
#230: FILE: sound/isa/cs423x/pc98.c:158:
+	for (count = 0; count < sizeof(Data0485_99); count ++) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#239: FILE: sound/isa/cs423x/pc98.c:167:
+	for (count = 0; count < sizeof(Data0485_9E); count ++)
 	                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_9E>
#239: FILE: sound/isa/cs423x/pc98.c:167:
+	for (count = 0; count < sizeof(Data0485_9E); count ++)

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#247: FILE: sound/isa/cs423x/pc98.c:175:
+	for (count = 0; count < 2000; count ++)
 	                                    ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#254: FILE: sound/isa/cs423x/pc98.c:182:
+		for (count = 0; count < sizeof(Data0485_36); count ++)
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_36>
#254: FILE: sound/isa/cs423x/pc98.c:182:
+		for (count = 0; count < sizeof(Data0485_36); count ++)

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#257: FILE: sound/isa/cs423x/pc98.c:185:
+		for (count = 0; count < 1500; count ++)
 		                                    ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#262: FILE: sound/isa/cs423x/pc98.c:190:
+		for (count = 0; count < 1500; count ++)
 		                                    ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#270: FILE: sound/isa/cs423x/pc98.c:198:
+	for (count = 0; count < sizeof(Data0485_A9); count ++) {
 	                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_A9>
#270: FILE: sound/isa/cs423x/pc98.c:198:
+	for (count = 0; count < sizeof(Data0485_A9); count ++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#279: FILE: sound/isa/cs423x/pc98.c:207:
+	for (count = 0; count < sizeof(Data0485_0C); count ++) {
 	                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_0C>
#279: FILE: sound/isa/cs423x/pc98.c:207:
+	for (count = 0; count < sizeof(Data0485_0C); count ++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#288: FILE: sound/isa/cs423x/pc98.c:216:
+	for (count = 0; count < sizeof(Data0485_66); count ++) {
 	                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_66>
#288: FILE: sound/isa/cs423x/pc98.c:216:
+	for (count = 0; count < sizeof(Data0485_66); count ++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#297: FILE: sound/isa/cs423x/pc98.c:225:
+	for (count = 0; count < sizeof(Data0485_60); count ++) {
 	                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Data0485_60>
#297: FILE: sound/isa/cs423x/pc98.c:225:
+	for (count = 0; count < sizeof(Data0485_60); count ++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#305: FILE: sound/isa/cs423x/pc98.c:233:
+	for (count = 0; count < 35000; count ++)
 	                                     ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#308: FILE: sound/isa/cs423x/pc98.c:236:
+	for (count = 0; count < 65000; count ++)
 	                                     ^

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#311: FILE: sound/isa/cs423x/pc98.c:239:
+	snd_printk(KERN_ERR IDENT ": MIDI daughter board initalize failed at stage2\n");
 	                                                 ^^^^^^^^^

WARNING:TYPO_SPELLING: 'initalized' may be misspelled - perhaps 'initialized'?
#316: FILE: sound/isa/cs423x/pc98.c:244:
+	snd_printk(KERN_INFO IDENT ": MIDI daughter board initalized\n");
 	                                                  ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'CanBe' may be misspelled - perhaps 'Can be'?
#369: FILE: sound/isa/cs423x/pc98.c:297:
+		/* Set up CanBe control registers. */
 		          ^^^^^

WARNING:TYPO_SPELLING: 'CanBe' may be misspelled - perhaps 'Can be'?
#370: FILE: sound/isa/cs423x/pc98.c:298:
+		snd_printd(KERN_INFO "Setting up CanBe Sound System\n");
 		                                 ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: sound/isa/cs423x/pc98.c:308:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card"
#394: FILE: sound/isa/cs423x/pc98.c:322:
+	if (card == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#401: FILE: sound/isa/cs423x/pc98.c:329:
+	if ((err = pc98_cs4231_chip_init(dev)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#406: FILE: sound/isa/cs423x/pc98.c:334:
+	if ((err = snd_cs4231_create(card,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#418: FILE: sound/isa/cs423x/pc98.c:346:
+	if ((err = snd_cs4231_pcm(chip, 0, &pcm)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#422: FILE: sound/isa/cs423x/pc98.c:350:
+	if ((err = snd_cs4231_mixer(chip)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#427: FILE: sound/isa/cs423x/pc98.c:355:
+	if ((err = snd_cs4231_timer(chip, 0, NULL)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#441: FILE: sound/isa/cs423x/pc98.c:369:
+			printk(KERN_ERR IDENT ": OPL3 not detected\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#443: FILE: sound/isa/cs423x/pc98.c:371:
+			if ((err = snd_opl3_hwdep_new(opl3, 0, 1, NULL)) < 0) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#452: FILE: sound/isa/cs423x/pc98.c:380:
+		if (! err) {
 		    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#471: FILE: sound/isa/cs423x/pc98.c:399:
+	if ((err = snd_card_register(card)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#491: FILE: sound/isa/cs423x/pc98.c:419:
+		printk(KERN_ERR IDENT " soundcard not found or device busy\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#512: FILE: sound/isa/cs423x/pc98.c:440:
+/* format is: snd-pc98-cs4232=enable,index,id,port,
+			 mpu_port,fm_port,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#513: FILE: sound/isa/cs423x/pc98.c:441:
+			 irq,mpu_irq,dma1,dma2,pc98ii */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#517: FILE: sound/isa/cs423x/pc98.c:445:
+	static unsigned __initdata nr_dev = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after nr_dev
#517: FILE: sound/isa/cs423x/pc98.c:445:
+	static unsigned __initdata nr_dev = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:SPACING: space required after that ',' (ctx:VxO)
#521: FILE: sound/isa/cs423x/pc98.c:449:
+	(void)(get_option(&str,&enable[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#521: FILE: sound/isa/cs423x/pc98.c:449:
+	(void)(get_option(&str,&enable[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#522: FILE: sound/isa/cs423x/pc98.c:450:
+	       get_option(&str,&index[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#522: FILE: sound/isa/cs423x/pc98.c:450:
+	       get_option(&str,&index[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#523: FILE: sound/isa/cs423x/pc98.c:451:
+	       get_id(&str,&id[nr_dev]) == 2 &&
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#523: FILE: sound/isa/cs423x/pc98.c:451:
+	       get_id(&str,&id[nr_dev]) == 2 &&
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#524: FILE: sound/isa/cs423x/pc98.c:452:
+	       get_option(&str,(int *)&port[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#525: FILE: sound/isa/cs423x/pc98.c:453:
+	       get_option(&str,(int *)&mpu_port[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#526: FILE: sound/isa/cs423x/pc98.c:454:
+	       get_option(&str,(int *)&fm_port[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#527: FILE: sound/isa/cs423x/pc98.c:455:
+	       get_option(&str,&irq[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#527: FILE: sound/isa/cs423x/pc98.c:455:
+	       get_option(&str,&irq[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#528: FILE: sound/isa/cs423x/pc98.c:456:
+	       get_option(&str,&mpu_irq[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#528: FILE: sound/isa/cs423x/pc98.c:456:
+	       get_option(&str,&mpu_irq[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#529: FILE: sound/isa/cs423x/pc98.c:457:
+	       get_option(&str,&dma1[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#529: FILE: sound/isa/cs423x/pc98.c:457:
+	       get_option(&str,&dma1[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#530: FILE: sound/isa/cs423x/pc98.c:458:
+	       get_option(&str,&dma2[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#530: FILE: sound/isa/cs423x/pc98.c:458:
+	       get_option(&str,&dma2[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#531: FILE: sound/isa/cs423x/pc98.c:459:
+	       get_option(&str,&pc98ii[nr_dev]) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#531: FILE: sound/isa/cs423x/pc98.c:459:
+	       get_option(&str,&pc98ii[nr_dev]) == 2);
 	                       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#536: FILE: sound/isa/cs423x/pc98.c:464:
+__setup("snd-pc98-cs4232=", alsa_card_pc98_setup);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#543: FILE: sound/isa/cs423x/pc9801_118_magic.h:1:
+		static unsigned char	Data0485_A9[] = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#958: FILE: sound/isa/cs423x/sound_pc9800.h:1:
+#ifndef _SOUND_PC9800_H_

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#961: FILE: sound/isa/cs423x/sound_pc9800.h:4:
+#include <asm/io.h>

WARNING:TYPO_SPELLING: 'CanBe' may be misspelled - perhaps 'Can be'?
#976: FILE: sound/isa/cs423x/sound_pc9800.h:19:
+#define PC9800_SOUND_ID_118	0x8	/* PC-9801-118 and compatible(CanBe Internal, etc.) */
                            	   	                              ^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 50 errors, 18 warnings, 11 checks, 945 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
