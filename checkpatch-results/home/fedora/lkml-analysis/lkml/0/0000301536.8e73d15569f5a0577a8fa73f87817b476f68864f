WARNING:TYPO_SPELLING: 'depracated' may be misspelled - perhaps 'deprecated'?
#73: FILE: Documentation/IPMI.txt:49:
+depracated in favor of the SI interface.
 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#161: FILE: drivers/char/ipmi/ipmi_bt_sm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#186: FILE: drivers/char/ipmi/ipmi_bt_sm.c:26:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#187: FILE: drivers/char/ipmi/ipmi_bt_sm.c:27:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#187: FILE: drivers/char/ipmi/ipmi_bt_sm.c:27:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:INITIALISED_STATIC: do not initialise statics to 0x00
#196: FILE: drivers/char/ipmi/ipmi_bt_sm.c:36:
+static int bt_debug = 0x00;	/* Production value 0, see following flags */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#203: FILE: drivers/char/ipmi/ipmi_bt_sm.c:43:
+/* Typical "Get BT Capabilities" values are 2-3 retries, 5-10 seconds,
+   and 64 byte buffers.  However, one HP implementation wants 255 bytes of

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/char/ipmi/ipmi_bt_sm.c:44:
+   buffer (with a documented message of 160 bytes) so go for the max. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#206: FILE: drivers/char/ipmi/ipmi_bt_sm.c:46:
+   stage, the queue depth of BT is of no concern. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/char/ipmi/ipmi_bt_sm.c:72:
+        unsigned char^Iwrite_data[IPMI_MAX_MSG_LENGTH];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/char/ipmi/ipmi_bt_sm.c:72:
+        unsigned char^Iwrite_data[IPMI_MAX_MSG_LENGTH];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/char/ipmi/ipmi_bt_sm.c:73:
+        int^I^Iwrite_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/char/ipmi/ipmi_bt_sm.c:73:
+        int^I^Iwrite_count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/char/ipmi/ipmi_bt_sm.c:74:
+        unsigned char^Iread_data[IPMI_MAX_MSG_LENGTH];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/char/ipmi/ipmi_bt_sm.c:74:
+        unsigned char^Iread_data[IPMI_MAX_MSG_LENGTH];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/char/ipmi/ipmi_bt_sm.c:75:
+        int^I^Iread_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/char/ipmi/ipmi_bt_sm.c:75:
+        int^I^Iread_count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/char/ipmi/ipmi_bt_sm.c:76:
+        int^I^Itruncated;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/char/ipmi/ipmi_bt_sm.c:76:
+        int^I^Itruncated;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/char/ipmi/ipmi_bt_sm.c:77:
+        long^I^Itimeout;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/char/ipmi/ipmi_bt_sm.c:77:
+        long^I^Itimeout;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/char/ipmi/ipmi_bt_sm.c:78:
+        unsigned int^Ierror_retries;^I/* end of "common" fields */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/char/ipmi/ipmi_bt_sm.c:78:
+        unsigned int^Ierror_retries;^I/* end of "common" fields */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#252: FILE: drivers/char/ipmi/ipmi_bt_sm.c:92:
+/* Some bits are toggled on each write: write once to set it, once
+   more to clear it; writing a zero does nothing.  To absolutely

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: drivers/char/ipmi/ipmi_bt_sm.c:93:
+   clear it, check its state and write if set.  This avoids the "get $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: drivers/char/ipmi/ipmi_bt_sm.c:94:
+   current then use as mask" scheme to modify one bit.  Note that the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: drivers/char/ipmi/ipmi_bt_sm.c:95:
+   variable "bt" is hardcoded into these macros. */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#255: FILE: drivers/char/ipmi/ipmi_bt_sm.c:95:
+   variable "bt" is hardcoded into these macros. */ 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#267: FILE: drivers/char/ipmi/ipmi_bt_sm.c:107:
+/* Convenience routines for debugging.  These are not multi-open safe!
+   Note the macros have hardcoded variables in them. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: drivers/char/ipmi/ipmi_bt_sm.c:107:
+   Note the macros have hardcoded variables in them. */

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#271: FILE: drivers/char/ipmi/ipmi_bt_sm.c:111:
+	switch (state) {
+		case BT_STATE_IDLE:		return("IDLE");
+		case BT_STATE_XACTION_START:	return("XACTION");
+		case BT_STATE_WRITE_BYTES:	return("WR_BYTES");
+		case BT_STATE_WRITE_END:	return("WR_END");
+		case BT_STATE_WRITE_CONSUME:	return("WR_CONSUME");
+		case BT_STATE_B2H_WAIT:		return("B2H_WAIT");
+		case BT_STATE_READ_END:		return("RD_END");
+		case BT_STATE_RESET1:		return("RESET1");
+		case BT_STATE_RESET2:		return("RESET2");
+		case BT_STATE_RESET3:		return("RESET3");
+		case BT_STATE_RESTART:		return("RESTART");
+		case BT_STATE_HOSED:		return("HOSED");

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#272: FILE: drivers/char/ipmi/ipmi_bt_sm.c:112:
+		case BT_STATE_IDLE:		return("IDLE");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#273: FILE: drivers/char/ipmi/ipmi_bt_sm.c:113:
+		case BT_STATE_XACTION_START:	return("XACTION");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#274: FILE: drivers/char/ipmi/ipmi_bt_sm.c:114:
+		case BT_STATE_WRITE_BYTES:	return("WR_BYTES");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#275: FILE: drivers/char/ipmi/ipmi_bt_sm.c:115:
+		case BT_STATE_WRITE_END:	return("WR_END");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#276: FILE: drivers/char/ipmi/ipmi_bt_sm.c:116:
+		case BT_STATE_WRITE_CONSUME:	return("WR_CONSUME");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#277: FILE: drivers/char/ipmi/ipmi_bt_sm.c:117:
+		case BT_STATE_B2H_WAIT:		return("B2H_WAIT");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#278: FILE: drivers/char/ipmi/ipmi_bt_sm.c:118:
+		case BT_STATE_READ_END:		return("RD_END");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#279: FILE: drivers/char/ipmi/ipmi_bt_sm.c:119:
+		case BT_STATE_RESET1:		return("RESET1");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#280: FILE: drivers/char/ipmi/ipmi_bt_sm.c:120:
+		case BT_STATE_RESET2:		return("RESET2");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#281: FILE: drivers/char/ipmi/ipmi_bt_sm.c:121:
+		case BT_STATE_RESET3:		return("RESET3");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#282: FILE: drivers/char/ipmi/ipmi_bt_sm.c:122:
+		case BT_STATE_RESTART:		return("RESTART");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#283: FILE: drivers/char/ipmi/ipmi_bt_sm.c:123:
+		case BT_STATE_HOSED:		return("HOSED");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#287: FILE: drivers/char/ipmi/ipmi_bt_sm.c:127:
+}
+#define STATE2TXT state2txt(bt->state)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#292: FILE: drivers/char/ipmi/ipmi_bt_sm.c:132:
+	static char msg[40];
+	strcpy(msg, "[ ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#293: FILE: drivers/char/ipmi/ipmi_bt_sm.c:133:
+	if (status & BT_B_BUSY) strcat(msg, "B_BUSY ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#294: FILE: drivers/char/ipmi/ipmi_bt_sm.c:134:
+	if (status & BT_H_BUSY) strcat(msg, "H_BUSY ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#295: FILE: drivers/char/ipmi/ipmi_bt_sm.c:135:
+	if (status & BT_OEM0) strcat(msg, "OEM0 ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#296: FILE: drivers/char/ipmi/ipmi_bt_sm.c:136:
+	if (status & BT_SMS_ATN) strcat(msg, "SMS ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#297: FILE: drivers/char/ipmi/ipmi_bt_sm.c:137:
+	if (status & BT_B2H_ATN) strcat(msg, "B2H ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#298: FILE: drivers/char/ipmi/ipmi_bt_sm.c:138:
+	if (status & BT_H2B_ATN) strcat(msg, "H2B ");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#302: FILE: drivers/char/ipmi/ipmi_bt_sm.c:142:
+}
+#define STATUS2TXT status2txt(status)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: drivers/char/ipmi/ipmi_bt_sm.c:162:
+^I^I^I^Iunsigned char *data, $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size < 2'
#327: FILE: drivers/char/ipmi/ipmi_bt_sm.c:167:
+	if ((size < 2) || (size > IPMI_MAX_MSG_LENGTH)) return -1;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size > IPMI_MAX_MSG_LENGTH'
#327: FILE: drivers/char/ipmi/ipmi_bt_sm.c:167:
+	if ((size < 2) || (size > IPMI_MAX_MSG_LENGTH)) return -1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#327: FILE: drivers/char/ipmi/ipmi_bt_sm.c:167:
+	if ((size < 2) || (size > IPMI_MAX_MSG_LENGTH)) return -1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: drivers/char/ipmi/ipmi_bt_sm.c:168:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bt->state != BT_STATE_IDLE'
#329: FILE: drivers/char/ipmi/ipmi_bt_sm.c:169:
+	if ((bt->state != BT_STATE_IDLE) && (bt->state != BT_STATE_HOSED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bt->state != BT_STATE_HOSED'
#329: FILE: drivers/char/ipmi/ipmi_bt_sm.c:169:
+	if ((bt->state != BT_STATE_IDLE) && (bt->state != BT_STATE_HOSED))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: drivers/char/ipmi/ipmi_bt_sm.c:171:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: drivers/char/ipmi/ipmi_bt_sm.c:173:
+    ^I^Iprintk(KERN_WARNING "+++++++++++++++++++++++++++++++++++++\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#333: FILE: drivers/char/ipmi/ipmi_bt_sm.c:173:
+    ^I^Iprintk(KERN_WARNING "+++++++++++++++++++++++++++++++++++++\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/char/ipmi/ipmi_bt_sm.c:173:
+    ^I^Iprintk(KERN_WARNING "+++++++++++++++++++++++++++++++++++++\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#333: FILE: drivers/char/ipmi/ipmi_bt_sm.c:173:
+    		printk(KERN_WARNING "+++++++++++++++++++++++++++++++++++++\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#334: FILE: drivers/char/ipmi/ipmi_bt_sm.c:174:
+		printk(KERN_WARNING "BT: write seq=0x%02X:", bt->seq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#335: FILE: drivers/char/ipmi/ipmi_bt_sm.c:175:
+		for (i = 0; i < size; i ++) printk (" %02x", data[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#335: FILE: drivers/char/ipmi/ipmi_bt_sm.c:175:
+		for (i = 0; i < size; i ++) printk (" %02x", data[i]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#335: FILE: drivers/char/ipmi/ipmi_bt_sm.c:175:
+		for (i = 0; i < size; i ++) printk (" %02x", data[i]);
 		                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#335: FILE: drivers/char/ipmi/ipmi_bt_sm.c:175:
+		for (i = 0; i < size; i ++) printk (" %02x", data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#336: FILE: drivers/char/ipmi/ipmi_bt_sm.c:176:
+		printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: drivers/char/ipmi/ipmi_bt_sm.c:194:
+/* After the upper state machine has been told SI_SM_TRANSACTION_COMPLETE $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#355: FILE: drivers/char/ipmi/ipmi_bt_sm.c:195:
+/* After the upper state machine has been told SI_SM_TRANSACTION_COMPLETE 
+   it calls this.  Strip out the length and seq bytes. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#355: FILE: drivers/char/ipmi/ipmi_bt_sm.c:195:
+   it calls this.  Strip out the length and seq bytes. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/char/ipmi/ipmi_bt_sm.c:198:
+^I^I^I   unsigned char *data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: drivers/char/ipmi/ipmi_bt_sm.c:198:
+static int bt_get_result(struct si_sm_data *bt,
+			   unsigned char *data, 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#366: FILE: drivers/char/ipmi/ipmi_bt_sm.c:206:
+		printk(KERN_WARNING "BT results: bad msg_len = %d\n", msg_len);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#374: FILE: drivers/char/ipmi/ipmi_bt_sm.c:214:
+		if (length < msg_len) bt->truncated = 1;

CHECK:BRACES: braces {} should be used on all arms of this statement
#375: FILE: drivers/char/ipmi/ipmi_bt_sm.c:215:
+		if (bt->truncated) {	/* can be set in read_all_bytes() */
[...]
+		} else memcpy(data + 2, bt->read_data + 4, msg_len - 2);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#378: FILE: drivers/char/ipmi/ipmi_bt_sm.c:218:
+		} else memcpy(data + 2, bt->read_data + 4, msg_len - 2);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: drivers/char/ipmi/ipmi_bt_sm.c:219:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#381: FILE: drivers/char/ipmi/ipmi_bt_sm.c:221:
+			printk (KERN_WARNING "BT: res (raw)");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#381: FILE: drivers/char/ipmi/ipmi_bt_sm.c:221:
+			printk (KERN_WARNING "BT: res (raw)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#382: FILE: drivers/char/ipmi/ipmi_bt_sm.c:222:
+			for (i = 0; i < msg_len; i++) printk(" %02x", data[i]);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#382: FILE: drivers/char/ipmi/ipmi_bt_sm.c:222:
+			for (i = 0; i < msg_len; i++) printk(" %02x", data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#383: FILE: drivers/char/ipmi/ipmi_bt_sm.c:223:
+			printk ("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#383: FILE: drivers/char/ipmi/ipmi_bt_sm.c:223:
+			printk ("\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#395: FILE: drivers/char/ipmi/ipmi_bt_sm.c:235:
+	if (BT_STATUS & BT_H_BUSY) BT_CONTROL(BT_H_BUSY);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#396: FILE: drivers/char/ipmi/ipmi_bt_sm.c:236:
+	if (BT_STATUS & BT_B_BUSY) BT_CONTROL(BT_B_BUSY);

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: drivers/char/ipmi/ipmi_bt_sm.c:243:
+		int i;
+		BT_CONTROL(BT_H_BUSY);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#406: FILE: drivers/char/ipmi/ipmi_bt_sm.c:246:
+		for (i = 0; i < IPMI_MAX_MSG_LENGTH + 2; i++) BMC2HOST;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: drivers/char/ipmi/ipmi_bt_sm.c:257:
+    ^I^Iprintk(KERN_WARNING "BT: write %d bytes seq=0x%02X", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: drivers/char/ipmi/ipmi_bt_sm.c:257:
+    ^I^Iprintk(KERN_WARNING "BT: write %d bytes seq=0x%02X", $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#417: FILE: drivers/char/ipmi/ipmi_bt_sm.c:257:
+    ^I^Iprintk(KERN_WARNING "BT: write %d bytes seq=0x%02X", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/char/ipmi/ipmi_bt_sm.c:257:
+    ^I^Iprintk(KERN_WARNING "BT: write %d bytes seq=0x%02X", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#417: FILE: drivers/char/ipmi/ipmi_bt_sm.c:257:
+    		printk(KERN_WARNING "BT: write %d bytes seq=0x%02X", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: drivers/char/ipmi/ipmi_bt_sm.c:258:
+    		printk(KERN_WARNING "BT: write %d bytes seq=0x%02X", 
+			bt->write_count, bt->seq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: drivers/char/ipmi/ipmi_bt_sm.c:259:
+^I^Ifor (i = 0; i < bt->write_count; i++) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#420: FILE: drivers/char/ipmi/ipmi_bt_sm.c:260:
+			printk (" %02x", bt->write_data[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#420: FILE: drivers/char/ipmi/ipmi_bt_sm.c:260:
+			printk (" %02x", bt->write_data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#421: FILE: drivers/char/ipmi/ipmi_bt_sm.c:261:
+		printk ("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#421: FILE: drivers/char/ipmi/ipmi_bt_sm.c:261:
+		printk ("\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#423: FILE: drivers/char/ipmi/ipmi_bt_sm.c:263:
+	for (i = 0; i < bt->write_count; i++) HOST2BMC(bt->write_data[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: drivers/char/ipmi/ipmi_bt_sm.c:270:
+^Ibt->read_data[0] = BMC2HOST;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: drivers/char/ipmi/ipmi_bt_sm.c:272:
+^Iif (bt_debug & BT_DEBUG_MSG) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: drivers/char/ipmi/ipmi_bt_sm.c:273:
+    ^I^Iprintk(KERN_WARNING "BT: read %d bytes:", bt->read_count);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#433: FILE: drivers/char/ipmi/ipmi_bt_sm.c:273:
+    ^I^Iprintk(KERN_WARNING "BT: read %d bytes:", bt->read_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/char/ipmi/ipmi_bt_sm.c:273:
+    ^I^Iprintk(KERN_WARNING "BT: read %d bytes:", bt->read_count);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#433: FILE: drivers/char/ipmi/ipmi_bt_sm.c:273:
+    		printk(KERN_WARNING "BT: read %d bytes:", bt->read_count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: drivers/char/ipmi/ipmi_bt_sm.c:275:
+^I/* minimum: length, NetFn, Seq, Cmd, cCode == 5 total, or 4 more $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#436: FILE: drivers/char/ipmi/ipmi_bt_sm.c:276:
+	/* minimum: length, NetFn, Seq, Cmd, cCode == 5 total, or 4 more 
+	   following the length byte. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#436: FILE: drivers/char/ipmi/ipmi_bt_sm.c:276:
+	   following the length byte. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/char/ipmi/ipmi_bt_sm.c:278:
+^I^Iif (bt_debug & BT_DEBUG_MSG) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#439: FILE: drivers/char/ipmi/ipmi_bt_sm.c:279:
+			printk("bad length %d\n", bt->read_count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: drivers/char/ipmi/ipmi_bt_sm.c:283:
+^Ifor (i = 1; i <= bt->read_count; i++) bt->read_data[i] = BMC2HOST;^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#443: FILE: drivers/char/ipmi/ipmi_bt_sm.c:283:
+	for (i = 1; i <= bt->read_count; i++) bt->read_data[i] = BMC2HOST;	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: drivers/char/ipmi/ipmi_bt_sm.c:287:
+^I    ^Ifor (i = 0; i < bt->read_count; i++) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: drivers/char/ipmi/ipmi_bt_sm.c:287:
+^I    ^Ifor (i = 0; i < bt->read_count; i++) $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: drivers/char/ipmi/ipmi_bt_sm.c:287:
+^I    ^Ifor (i = 0; i < bt->read_count; i++) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#448: FILE: drivers/char/ipmi/ipmi_bt_sm.c:288:
+			printk (" %02x", bt->read_data[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#448: FILE: drivers/char/ipmi/ipmi_bt_sm.c:288:
+			printk (" %02x", bt->read_data[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: drivers/char/ipmi/ipmi_bt_sm.c:289:
+^I    ^Iprintk ("\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#449: FILE: drivers/char/ipmi/ipmi_bt_sm.c:289:
+^I    ^Iprintk ("\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#449: FILE: drivers/char/ipmi/ipmi_bt_sm.c:289:
+	    	printk ("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#449: FILE: drivers/char/ipmi/ipmi_bt_sm.c:289:
+	    	printk ("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#452: FILE: drivers/char/ipmi/ipmi_bt_sm.c:292:
+		printk(KERN_WARNING "BT: internal error: sequence mismatch\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#455: FILE: drivers/char/ipmi/ipmi_bt_sm.c:295:
+	if ((bt->read_data[3] == bt->write_data[3]) &&		/* Cmd */
[...]
+			return 1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bt->read_data[3] == bt->write_data[3]'
#455: FILE: drivers/char/ipmi/ipmi_bt_sm.c:295:
+	if ((bt->read_data[3] == bt->write_data[3]) &&		/* Cmd */
+        	(bt->read_data[2] == bt->write_data[2]) &&	/* Sequence */
+        	((bt->read_data[1] & 0xF8) == (bt->write_data[1] & 0xF8))) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bt->read_data[2] == bt->write_data[2]'
#455: FILE: drivers/char/ipmi/ipmi_bt_sm.c:295:
+	if ((bt->read_data[3] == bt->write_data[3]) &&		/* Cmd */
+        	(bt->read_data[2] == bt->write_data[2]) &&	/* Sequence */
+        	((bt->read_data[1] & 0xF8) == (bt->write_data[1] & 0xF8))) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: drivers/char/ipmi/ipmi_bt_sm.c:296:
+        ^I(bt->read_data[2] == bt->write_data[2]) &&^I/* Sequence */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#456: FILE: drivers/char/ipmi/ipmi_bt_sm.c:296:
+        ^I(bt->read_data[2] == bt->write_data[2]) &&^I/* Sequence */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/char/ipmi/ipmi_bt_sm.c:296:
+        ^I(bt->read_data[2] == bt->write_data[2]) &&^I/* Sequence */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/char/ipmi/ipmi_bt_sm.c:297:
+        ^I((bt->read_data[1] & 0xF8) == (bt->write_data[1] & 0xF8))) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: drivers/char/ipmi/ipmi_bt_sm.c:297:
+        ^I((bt->read_data[1] & 0xF8) == (bt->write_data[1] & 0xF8))) $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#457: FILE: drivers/char/ipmi/ipmi_bt_sm.c:297:
+        ^I((bt->read_data[1] & 0xF8) == (bt->write_data[1] & 0xF8))) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/char/ipmi/ipmi_bt_sm.c:297:
+        ^I((bt->read_data[1] & 0xF8) == (bt->write_data[1] & 0xF8))) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#460: FILE: drivers/char/ipmi/ipmi_bt_sm.c:300:
+	if (bt_debug & BT_DEBUG_MSG) printk(KERN_WARNING "BT: bad packet: "

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#460: FILE: drivers/char/ipmi/ipmi_bt_sm.c:300:
+	if (bt_debug & BT_DEBUG_MSG) printk(KERN_WARNING "BT: bad packet: "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: drivers/char/ipmi/ipmi_bt_sm.c:301:
+^I^I"want 0x(%02X, %02X, %02X) got (%02X, %02X, %02X)\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#461: FILE: drivers/char/ipmi/ipmi_bt_sm.c:301:
+	if (bt_debug & BT_DEBUG_MSG) printk(KERN_WARNING "BT: bad packet: "
+		"want 0x(%02X, %02X, %02X) got (%02X, %02X, %02X)\n", 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#471: FILE: drivers/char/ipmi/ipmi_bt_sm.c:311:
+	volatile unsigned char status;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#476: FILE: drivers/char/ipmi/ipmi_bt_sm.c:316:
+	printk(KERN_WARNING "BT: %s in %s %s ", reason, STATE2TXT, STATUS2TXT);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#480: FILE: drivers/char/ipmi/ipmi_bt_sm.c:320:
+		printk("retry limit (%d) exceeded\n", BT_RETRY_LIMIT);

CHECK:BRACES: braces {} should be used on all arms of this statement
#482: FILE: drivers/char/ipmi/ipmi_bt_sm.c:322:
+		if (!bt->nonzero_status)
[...]
+		else if (bt->seq == FIRST_SEQ + BT_RETRY_LIMIT) {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#483: FILE: drivers/char/ipmi/ipmi_bt_sm.c:323:
+			printk(KERN_ERR "IPMI: BT stuck, try power cycle\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#486: FILE: drivers/char/ipmi/ipmi_bt_sm.c:326:
+			printk(KERN_WARNING "IPMI: BT reset (takes 5 secs)\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: drivers/char/ipmi/ipmi_bt_sm.c:327:
+        ^I^Ibt->state = BT_STATE_RESET1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#487: FILE: drivers/char/ipmi/ipmi_bt_sm.c:327:
+        ^I^Ibt->state = BT_STATE_RESET1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/char/ipmi/ipmi_bt_sm.c:327:
+        ^I^Ibt->state = BT_STATE_RESET1;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bt->state == BT_STATE_B2H_WAIT'
#493: FILE: drivers/char/ipmi/ipmi_bt_sm.c:333:
+	if ((bt->state == BT_STATE_B2H_WAIT) && (status & BT_B2H_ATN)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: drivers/char/ipmi/ipmi_bt_sm.c:334:
+    ^I^Iprintk("retry B2H_WAIT\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#494: FILE: drivers/char/ipmi/ipmi_bt_sm.c:334:
+    ^I^Iprintk("retry B2H_WAIT\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/char/ipmi/ipmi_bt_sm.c:334:
+    ^I^Iprintk("retry B2H_WAIT\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#494: FILE: drivers/char/ipmi/ipmi_bt_sm.c:334:
+    		printk("retry B2H_WAIT\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: drivers/char/ipmi/ipmi_bt_sm.c:337:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/char/ipmi/ipmi_bt_sm.c:337:
+    $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#498: FILE: drivers/char/ipmi/ipmi_bt_sm.c:338:
+	printk("restart command\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#503: FILE: drivers/char/ipmi/ipmi_bt_sm.c:343:
+/* Check the status and (possibly) advance the BT state machine.  The
+   default return is SI_SM_CALL_WITH_DELAY. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#503: FILE: drivers/char/ipmi/ipmi_bt_sm.c:343:
+   default return is SI_SM_CALL_WITH_DELAY. */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#507: FILE: drivers/char/ipmi/ipmi_bt_sm.c:347:
+	volatile unsigned char status;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bt->state != bt->last_state'
#513: FILE: drivers/char/ipmi/ipmi_bt_sm.c:353:
+	if ((bt_debug & BT_DEBUG_STATES) && (bt->state != bt->last_state))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#514: FILE: drivers/char/ipmi/ipmi_bt_sm.c:354:
+		printk(KERN_WARNING "BT: %s %s TO=%ld - %ld \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#514: FILE: drivers/char/ipmi/ipmi_bt_sm.c:354:
+		printk(KERN_WARNING "BT: %s %s TO=%ld - %ld \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/char/ipmi/ipmi_bt_sm.c:355:
+		printk(KERN_WARNING "BT: %s %s TO=%ld - %ld \n",
+			STATE2TXT,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: drivers/char/ipmi/ipmi_bt_sm.c:356:
+^I^I^ISTATUS2TXT, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: drivers/char/ipmi/ipmi_bt_sm.c:357:
+^I^I^Ibt->timeout, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: drivers/char/ipmi/ipmi_bt_sm.c:360:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: drivers/char/ipmi/ipmi_bt_sm.c:360:
+  $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#521: FILE: drivers/char/ipmi/ipmi_bt_sm.c:361:
+	if (bt->state == BT_STATE_HOSED) return SI_SM_HOSED;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: drivers/char/ipmi/ipmi_bt_sm.c:362:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/char/ipmi/ipmi_bt_sm.c:362:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: drivers/char/ipmi/ipmi_bt_sm.c:365:
+^I^I/* Certain states, on error conditions, can lock up a CPU $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: drivers/char/ipmi/ipmi_bt_sm.c:366:
+^I^I   because they are effectively in an infinite loop with $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#526: FILE: drivers/char/ipmi/ipmi_bt_sm.c:366:
+		/* Certain states, on error conditions, can lock up a CPU 
+		   because they are effectively in an infinite loop with 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: drivers/char/ipmi/ipmi_bt_sm.c:367:
+^I^I   CALL_WITHOUT_DELAY (right back here with time == 0).  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#528: FILE: drivers/char/ipmi/ipmi_bt_sm.c:368:
+		   Prevent infinite lockup by ALWAYS decrementing timeout. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: drivers/char/ipmi/ipmi_bt_sm.c:370:
+    ^I/* FIXME: bt_event is sometimes called with time > BT_NORMAL_TIMEOUT$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#530: FILE: drivers/char/ipmi/ipmi_bt_sm.c:370:
+    ^I/* FIXME: bt_event is sometimes called with time > BT_NORMAL_TIMEOUT$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: drivers/char/ipmi/ipmi_bt_sm.c:370:
+    ^I/* FIXME: bt_event is sometimes called with time > BT_NORMAL_TIMEOUT$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: drivers/char/ipmi/ipmi_bt_sm.c:371:
+              (noticed in ipmi_smic_sm.c January 2004) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#531: FILE: drivers/char/ipmi/ipmi_bt_sm.c:371:
+    	/* FIXME: bt_event is sometimes called with time > BT_NORMAL_TIMEOUT
+              (noticed in ipmi_smic_sm.c January 2004) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#531: FILE: drivers/char/ipmi/ipmi_bt_sm.c:371:
+              (noticed in ipmi_smic_sm.c January 2004) */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'time <= 0'
#533: FILE: drivers/char/ipmi/ipmi_bt_sm.c:373:
+		if ((time <= 0) || (time >= BT_NORMAL_TIMEOUT)) time = 100;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'time >= BT_NORMAL_TIMEOUT'
#533: FILE: drivers/char/ipmi/ipmi_bt_sm.c:373:
+		if ((time <= 0) || (time >= BT_NORMAL_TIMEOUT)) time = 100;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#533: FILE: drivers/char/ipmi/ipmi_bt_sm.c:373:
+		if ((time <= 0) || (time >= BT_NORMAL_TIMEOUT)) time = 100;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bt->timeout < 0'
#535: FILE: drivers/char/ipmi/ipmi_bt_sm.c:375:
+		if ((bt->timeout < 0) && (bt->state < BT_STATE_RESET1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bt->state < BT_STATE_RESET1'
#535: FILE: drivers/char/ipmi/ipmi_bt_sm.c:375:
+		if ((bt->timeout < 0) && (bt->state < BT_STATE_RESET1)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#542: FILE: drivers/char/ipmi/ipmi_bt_sm.c:382:
+	switch (bt->state) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: drivers/char/ipmi/ipmi_bt_sm.c:383:
+    ^Icase BT_STATE_IDLE:^I/* check for asynchronous messages */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#543: FILE: drivers/char/ipmi/ipmi_bt_sm.c:383:
+    ^Icase BT_STATE_IDLE:^I/* check for asynchronous messages */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: drivers/char/ipmi/ipmi_bt_sm.c:383:
+    ^Icase BT_STATE_IDLE:^I/* check for asynchronous messages */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: drivers/char/ipmi/ipmi_bt_sm.c:391:
+^I^Iif (status & BT_H_BUSY) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: drivers/char/ipmi/ipmi_bt_sm.c:395:
+    ^I^Iif (status & BT_B2H_ATN) break;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#555: FILE: drivers/char/ipmi/ipmi_bt_sm.c:395:
+    ^I^Iif (status & BT_B2H_ATN) break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/char/ipmi/ipmi_bt_sm.c:395:
+    ^I^Iif (status & BT_B2H_ATN) break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#555: FILE: drivers/char/ipmi/ipmi_bt_sm.c:395:
+    		if (status & BT_B2H_ATN) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#560: FILE: drivers/char/ipmi/ipmi_bt_sm.c:400:
+		if (status & (BT_B_BUSY | BT_H2B_ATN)) break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: drivers/char/ipmi/ipmi_bt_sm.c:408:
+        ^Iif (status & (BT_H2B_ATN | BT_B_BUSY)) break;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#568: FILE: drivers/char/ipmi/ipmi_bt_sm.c:408:
+        ^Iif (status & (BT_H2B_ATN | BT_B_BUSY)) break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: drivers/char/ipmi/ipmi_bt_sm.c:408:
+        ^Iif (status & (BT_H2B_ATN | BT_B_BUSY)) break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#568: FILE: drivers/char/ipmi/ipmi_bt_sm.c:408:
+        	if (status & (BT_H2B_ATN | BT_B_BUSY)) break;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#570: FILE: drivers/char/ipmi/ipmi_bt_sm.c:410:
+		/* fall through with status */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: drivers/char/ipmi/ipmi_bt_sm.c:412:
+^I/* Stay in BT_STATE_B2H_WAIT until a packet matches.  However, spinning $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#573: FILE: drivers/char/ipmi/ipmi_bt_sm.c:413:
+^I   hard here, constantly reading status, seems to hold off the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#573: FILE: drivers/char/ipmi/ipmi_bt_sm.c:413:
+	/* Stay in BT_STATE_B2H_WAIT until a packet matches.  However, spinning 
+	   hard here, constantly reading status, seems to hold off the 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#574: FILE: drivers/char/ipmi/ipmi_bt_sm.c:414:
+	   generation of B2H_ATN so ALWAYS return CALL_WITH_DELAY. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: drivers/char/ipmi/ipmi_bt_sm.c:417:
+    ^I^Iif (!(status & BT_B2H_ATN)) break;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#577: FILE: drivers/char/ipmi/ipmi_bt_sm.c:417:
+    ^I^Iif (!(status & BT_B2H_ATN)) break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/char/ipmi/ipmi_bt_sm.c:417:
+    ^I^Iif (!(status & BT_B2H_ATN)) break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#577: FILE: drivers/char/ipmi/ipmi_bt_sm.c:417:
+    		if (!(status & BT_B2H_ATN)) break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: drivers/char/ipmi/ipmi_bt_sm.c:418:
+^I^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#580: FILE: drivers/char/ipmi/ipmi_bt_sm.c:420:
+		if (!(status & BT_H_BUSY)) BT_CONTROL(BT_H_BUSY); /* set */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#585: FILE: drivers/char/ipmi/ipmi_bt_sm.c:425:
+		if (!i) break;			/* Try this state again */

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: drivers/char/ipmi/ipmi_bt_sm.c:429:
+    ^Icase BT_STATE_READ_END:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#589: FILE: drivers/char/ipmi/ipmi_bt_sm.c:429:
+    ^Icase BT_STATE_READ_END:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/char/ipmi/ipmi_bt_sm.c:429:
+    ^Icase BT_STATE_READ_END:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: drivers/char/ipmi/ipmi_bt_sm.c:431:
+^I^I/* I could wait on BT_H_BUSY to go clear for a truly clean $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#592: FILE: drivers/char/ipmi/ipmi_bt_sm.c:432:
+		/* I could wait on BT_H_BUSY to go clear for a truly clean 
+		   exit.  However, this is already done in XACTION_START

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: drivers/char/ipmi/ipmi_bt_sm.c:433:
+^I^I   and the (possible) extra loop/status/possible wait affects $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#594: FILE: drivers/char/ipmi/ipmi_bt_sm.c:434:
+		   performance.  So, as long as it works, just ignore H_BUSY */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#598: FILE: drivers/char/ipmi/ipmi_bt_sm.c:438:
+		if (status & BT_H_BUSY) break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: drivers/char/ipmi/ipmi_bt_sm.c:445:
+    ^I^Ireset_flags(bt);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#605: FILE: drivers/char/ipmi/ipmi_bt_sm.c:445:
+    ^I^Ireset_flags(bt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: drivers/char/ipmi/ipmi_bt_sm.c:445:
+    ^I^Ireset_flags(bt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: drivers/char/ipmi/ipmi_bt_sm.c:446:
+    ^I^Ibt->timeout = BT_RESET_DELAY;;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#606: FILE: drivers/char/ipmi/ipmi_bt_sm.c:446:
+    ^I^Ibt->timeout = BT_RESET_DELAY;;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/char/ipmi/ipmi_bt_sm.c:446:
+    ^I^Ibt->timeout = BT_RESET_DELAY;;$

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#606: FILE: drivers/char/ipmi/ipmi_bt_sm.c:446:
+    		bt->timeout = BT_RESET_DELAY;;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: drivers/char/ipmi/ipmi_bt_sm.c:456:
+^I^IBT_CONTROL(BT_H2B_ATN);^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#621: FILE: drivers/char/ipmi/ipmi_bt_sm.c:461:
+		if (bt->timeout > 0) return SI_SM_CALL_WITH_DELAY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: drivers/char/ipmi/ipmi_bt_sm.c:476:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#636: FILE: drivers/char/ipmi/ipmi_bt_sm.c:476:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/char/ipmi/ipmi_bt_sm.c:476:
+  ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: drivers/char/ipmi/ipmi_bt_sm.c:477:
+  ^Ireturn SI_SM_CALL_WITH_DELAY;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#637: FILE: drivers/char/ipmi/ipmi_bt_sm.c:477:
+  ^Ireturn SI_SM_CALL_WITH_DELAY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: drivers/char/ipmi/ipmi_bt_sm.c:477:
+  ^Ireturn SI_SM_CALL_WITH_DELAY;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#642: FILE: drivers/char/ipmi/ipmi_bt_sm.c:482:
+^I/* It's impossible for the BT status and interrupt registers to be $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#643: FILE: drivers/char/ipmi/ipmi_bt_sm.c:483:
+	/* It's impossible for the BT status and interrupt registers to be 
+	   all 1's, (assuming a properly functioning, self-initialized BMC)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#645: FILE: drivers/char/ipmi/ipmi_bt_sm.c:485:
+	   test that first.  The calling routine uses negative logic. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'BT_STATUS == 0xFF'
#647: FILE: drivers/char/ipmi/ipmi_bt_sm.c:487:
+	if ((BT_STATUS == 0xFF) && (BT_INTMASK_R == 0xFF)) return 1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'BT_INTMASK_R == 0xFF'
#647: FILE: drivers/char/ipmi/ipmi_bt_sm.c:487:
+	if ((BT_STATUS == 0xFF) && (BT_INTMASK_R == 0xFF)) return 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#647: FILE: drivers/char/ipmi/ipmi_bt_sm.c:487:
+	if ((BT_STATUS == 0xFF) && (BT_INTMASK_R == 0xFF)) return 1;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#662: FILE: drivers/char/ipmi/ipmi_bt_sm.c:502:
+struct si_sm_handlers bt_smi_handlers =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#676: FILE: drivers/char/ipmi/ipmi_si.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#706: FILE: drivers/char/ipmi/ipmi_si.c:31:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#707: FILE: drivers/char/ipmi/ipmi_si.c:32:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: drivers/char/ipmi/ipmi_si.c:57:
+#  define get_arch_cycles(a) quick_update_jiffies_sub(a) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#738: FILE: drivers/char/ipmi/ipmi_si.c:63:
+	while (t->sub_expires >= arch_cycles_per_jiffy)
+	{

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#748: FILE: drivers/char/ipmi/ipmi_si.c:73:
+#include <asm/io.h>

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#760: FILE: drivers/char/ipmi/ipmi_si.c:85:
+#define SI_USEC_PER_JIFFY	(1000000/HZ)
                          	        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#761: FILE: drivers/char/ipmi/ipmi_si.c:86:
+#define SI_TIMEOUT_JIFFIES	(SI_TIMEOUT_TIME_USEC/SI_USEC_PER_JIFFY)
                           	                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: drivers/char/ipmi/ipmi_si.c:88:
+                                       short timeout */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#763: FILE: drivers/char/ipmi/ipmi_si.c:88:
+#define SI_SHORT_TIMEOUT_USEC  250 /* .25ms when the SM request a
+                                       short timeout */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#763: FILE: drivers/char/ipmi/ipmi_si.c:88:
+                                       short timeout */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: drivers/char/ipmi/ipmi_si.c:103:
+    SI_KCS, SI_SMIC, SI_BT$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#782: FILE: drivers/char/ipmi/ipmi_si.c:107:
+struct smi_info
+{

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#787: FILE: drivers/char/ipmi/ipmi_si.c:112:
+	spinlock_t             si_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#788: FILE: drivers/char/ipmi/ipmi_si.c:113:
+	spinlock_t             msg_lock;

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: drivers/char/ipmi/ipmi_si.c:120:
+           IPMI */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#795: FILE: drivers/char/ipmi/ipmi_si.c:120:
+	/* Used to handle the various types of I/O that can occur with
+           IPMI */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#795: FILE: drivers/char/ipmi/ipmi_si.c:120:
+           IPMI */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#804: FILE: drivers/char/ipmi/ipmi_si.c:129:
+	/* Flags from the last GET_MSG_FLAGS command, used when an ATTN
+	   is set to hold the flags until we are done handling everything

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#805: FILE: drivers/char/ipmi/ipmi_si.c:130:
+	   from the flags. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#812: FILE: drivers/char/ipmi/ipmi_si.c:137:
+	/* If set to true, this will request events the next time the
+	   state machine is idle. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#812: FILE: drivers/char/ipmi/ipmi_si.c:137:
+	   state machine is idle. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#816: FILE: drivers/char/ipmi/ipmi_si.c:141:
+	/* If true, run the state machine to completion on every send
+	   call.  Generally used after a panic to make sure stuff goes

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#817: FILE: drivers/char/ipmi/ipmi_si.c:142:
+	   out. */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#833: FILE: drivers/char/ipmi/ipmi_si.c:158:
+	volatile int        stop_operation;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#834: FILE: drivers/char/ipmi/ipmi_si.c:159:
+	volatile int        timer_stopped;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#837: FILE: drivers/char/ipmi/ipmi_si.c:162:
+	/* The driver will disable interrupts when it gets into a
+	   situation where it cannot handle messages due to lack of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#839: FILE: drivers/char/ipmi/ipmi_si.c:164:
+	   interrupts. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: drivers/char/ipmi/ipmi_si.c:195:
+           released. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#870: FILE: drivers/char/ipmi/ipmi_si.c:195:
+	/* Deliver the message to the upper layer with the lock
+           released. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#870: FILE: drivers/char/ipmi/ipmi_si.c:195:
+           released. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#871: FILE: drivers/char/ipmi/ipmi_si.c:196:
+	spin_unlock(&(smi_info->si_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#873: FILE: drivers/char/ipmi/ipmi_si.c:198:
+	spin_lock(&(smi_info->si_lock));

WARNING:TYPO_SPELLING: 'reponse' may be misspelled - perhaps 'response'?
#880: FILE: drivers/char/ipmi/ipmi_si.c:205:
+	/* Make it a reponse */
 	             ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#885: FILE: drivers/char/ipmi/ipmi_si.c:210:
+^I^I^I$

WARNING:TYPO_SPELLING: 'aleady' may be misspelled - perhaps 'already'?
#898: FILE: drivers/char/ipmi/ipmi_si.c:223:
+	/* No need to save flags, we aleady have interrupts off and we
 	                             ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#899: FILE: drivers/char/ipmi/ipmi_si.c:224:
+	/* No need to save flags, we aleady have interrupts off and we
+	   already hold the SMI lock. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#899: FILE: drivers/char/ipmi/ipmi_si.c:224:
+	   already hold the SMI lock. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->msg_lock
#900: FILE: drivers/char/ipmi/ipmi_si.c:225:
+	spin_lock(&(smi_info->msg_lock));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#901: FILE: drivers/char/ipmi/ipmi_si.c:226:
+^I$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#903: FILE: drivers/char/ipmi/ipmi_si.c:228:
+	if (! list_empty(&(smi_info->hp_xmit_msgs))) {
 	    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->hp_xmit_msgs
#903: FILE: drivers/char/ipmi/ipmi_si.c:228:
+	if (! list_empty(&(smi_info->hp_xmit_msgs))) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#903: FILE: drivers/char/ipmi/ipmi_si.c:228:
+	if (! list_empty(&(smi_info->hp_xmit_msgs))) {
[...]
+	} else if (! list_empty(&(smi_info->xmit_msgs))) {
[...]

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#905: FILE: drivers/char/ipmi/ipmi_si.c:230:
+	} else if (! list_empty(&(smi_info->xmit_msgs))) {
 	           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->xmit_msgs
#905: FILE: drivers/char/ipmi/ipmi_si.c:230:
+	} else if (! list_empty(&(smi_info->xmit_msgs))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#921: FILE: drivers/char/ipmi/ipmi_si.c:246:
+		printk("**Start2: %d.%9.9d\n", t.tv_sec, t.tv_usec);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#923: FILE: drivers/char/ipmi/ipmi_si.c:248:
+		err = smi_info->handlers->start_transaction(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#927: FILE: drivers/char/ipmi/ipmi_si.c:252:
+		if (err) {
+			return_hosed_msg(smi_info);
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->msg_lock
#933: FILE: drivers/char/ipmi/ipmi_si.c:258:
+	spin_unlock(&(smi_info->msg_lock));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#943: FILE: drivers/char/ipmi/ipmi_si.c:268:
+	/* If we are enabling interrupts, we have to tell the
+	   BMC to use them. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#943: FILE: drivers/char/ipmi/ipmi_si.c:268:
+	   BMC to use them. */

WARNING:TYPO_SPELLING: 'situtaion' may be misspelled - perhaps 'situation'?
#964: FILE: drivers/char/ipmi/ipmi_si.c:289:
+/* When we have a situtaion where we run out of memory and cannot
                   ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#965: FILE: drivers/char/ipmi/ipmi_si.c:290:
+/* When we have a situtaion where we run out of memory and cannot
+   allocate messages, we just leave them in the BMC and run the system

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#967: FILE: drivers/char/ipmi/ipmi_si.c:292:
+   memory, we will re-enable the interrupt. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smi_info->irq'
#970: FILE: drivers/char/ipmi/ipmi_si.c:295:
+	if ((smi_info->irq) && (!smi_info->interrupt_disabled)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!smi_info->interrupt_disabled'
#970: FILE: drivers/char/ipmi/ipmi_si.c:295:
+	if ((smi_info->irq) && (!smi_info->interrupt_disabled)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smi_info->irq'
#978: FILE: drivers/char/ipmi/ipmi_si.c:303:
+	if ((smi_info->irq) && (smi_info->interrupt_disabled)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smi_info->interrupt_disabled'
#978: FILE: drivers/char/ipmi/ipmi_si.c:303:
+	if ((smi_info->irq) && (smi_info->interrupt_disabled)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#994: FILE: drivers/char/ipmi/ipmi_si.c:319:
+		spin_unlock(&(smi_info->si_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#996: FILE: drivers/char/ipmi/ipmi_si.c:321:
+		spin_lock(&(smi_info->si_lock));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1011: FILE: drivers/char/ipmi/ipmi_si.c:336:
+		smi_info->handlers->start_transaction(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1030: FILE: drivers/char/ipmi/ipmi_si.c:355:
+		smi_info->handlers->start_transaction(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1047: FILE: drivers/char/ipmi/ipmi_si.c:372:
+	printk("**Done: %d.%9.9d\n", t.tv_sec, t.tv_usec);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: drivers/char/ipmi/ipmi_si.c:378:
+^I^I^I$

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1055: FILE: drivers/char/ipmi/ipmi_si.c:380:
+		smi_info->curr_msg->rsp_size
+			= smi_info->handlers->get_result(

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1055: FILE: drivers/char/ipmi/ipmi_si.c:380:
+			= smi_info->handlers->get_result(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: drivers/char/ipmi/ipmi_si.c:384:
+^I^I$

WARNING:TYPO_SPELLING: 'becase' may be misspelled - perhaps 'because'?
#1060: FILE: drivers/char/ipmi/ipmi_si.c:385:
+		/* Do this here becase deliver_recv_msg() releases the
 		                ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1061: FILE: drivers/char/ipmi/ipmi_si.c:386:
+		/* Do this here becase deliver_recv_msg() releases the
+		   lock, and a new message can be put in during the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1062: FILE: drivers/char/ipmi/ipmi_si.c:387:
+		   time the lock is released. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1067: FILE: drivers/char/ipmi/ipmi_si.c:392:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1077: FILE: drivers/char/ipmi/ipmi_si.c:402:
+			/* Error fetching flags, just give up for
+			   now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1077: FILE: drivers/char/ipmi/ipmi_si.c:402:
+			   now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1081: FILE: drivers/char/ipmi/ipmi_si.c:406:
+			/* Hmm, no flags.  That's technically illegal, but
+			   don't use uninitialized data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1081: FILE: drivers/char/ipmi/ipmi_si.c:406:
+			   don't use uninitialized data. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1099: FILE: drivers/char/ipmi/ipmi_si.c:424:
+			printk(KERN_WARNING

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1113: FILE: drivers/char/ipmi/ipmi_si.c:438:
+		smi_info->curr_msg->rsp_size
+			= smi_info->handlers->get_result(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1113: FILE: drivers/char/ipmi/ipmi_si.c:438:
+			= smi_info->handlers->get_result(

WARNING:TYPO_SPELLING: 'becase' may be misspelled - perhaps 'because'?
#1118: FILE: drivers/char/ipmi/ipmi_si.c:443:
+		/* Do this here becase deliver_recv_msg() releases the
 		                ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1119: FILE: drivers/char/ipmi/ipmi_si.c:444:
+		/* Do this here becase deliver_recv_msg() releases the
+		   lock, and a new message can be put in during the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1120: FILE: drivers/char/ipmi/ipmi_si.c:445:
+		   time the lock is released. */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1143: FILE: drivers/char/ipmi/ipmi_si.c:468:
+		smi_info->curr_msg->rsp_size
+			= smi_info->handlers->get_result(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1143: FILE: drivers/char/ipmi/ipmi_si.c:468:
+			= smi_info->handlers->get_result(

WARNING:TYPO_SPELLING: 'becase' may be misspelled - perhaps 'because'?
#1148: FILE: drivers/char/ipmi/ipmi_si.c:473:
+		/* Do this here becase deliver_recv_msg() releases the
 		                ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1149: FILE: drivers/char/ipmi/ipmi_si.c:474:
+		/* Do this here becase deliver_recv_msg() releases the
+		   lock, and a new message can be put in during the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1150: FILE: drivers/char/ipmi/ipmi_si.c:475:
+		   time the lock is released. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1177: FILE: drivers/char/ipmi/ipmi_si.c:502:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1179: FILE: drivers/char/ipmi/ipmi_si.c:504:
+			       "ipmi_si: Could not enable interrupts"
+			       ", failed get, using polled mode.\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1185: FILE: drivers/char/ipmi/ipmi_si.c:510:
+			smi_info->handlers->start_transaction(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1199: FILE: drivers/char/ipmi/ipmi_si.c:524:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1201: FILE: drivers/char/ipmi/ipmi_si.c:526:
+			       "ipmi_si: Could not enable interrupts"
+			       ", failed set, using polled mode.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1210: FILE: drivers/char/ipmi/ipmi_si.c:535:
+/* Called on timeouts and events.  Timeouts should pass the elapsed
+   time, interrupts should pass in zero. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1210: FILE: drivers/char/ipmi/ipmi_si.c:535:
+   time, interrupts should pass in zero. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1218: FILE: drivers/char/ipmi/ipmi_si.c:543:
+	/* There used to be a loop here that waited a little while
+	   (around 25us) before giving up.  That turned out to be

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1222: FILE: drivers/char/ipmi/ipmi_si.c:547:
+	   happened or it needs a delay. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1225: FILE: drivers/char/ipmi/ipmi_si.c:550:
+	while (si_sm_result == SI_SM_CALL_WITHOUT_DELAY)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1230: FILE: drivers/char/ipmi/ipmi_si.c:555:
+	if (si_sm_result == SI_SM_TRANSACTION_COMPLETE)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1239: FILE: drivers/char/ipmi/ipmi_si.c:564:
+	else if (si_sm_result == SI_SM_HOSED)
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1239: FILE: drivers/char/ipmi/ipmi_si.c:564:
+	}
+	else if (si_sm_result == SI_SM_HOSED)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "smi_info->curr_msg"
#1245: FILE: drivers/char/ipmi/ipmi_si.c:570:
+		if (smi_info->curr_msg != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#1247: FILE: drivers/char/ipmi/ipmi_si.c:572:
+                           a response to send to the upper layer to$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1247: FILE: drivers/char/ipmi/ipmi_si.c:572:
+			/* If we were handling a user message, format
+                           a response to send to the upper layer to

ERROR:CODE_INDENT: code indent should use tabs where possible
#1248: FILE: drivers/char/ipmi/ipmi_si.c:573:
+                           tell it about the error. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1248: FILE: drivers/char/ipmi/ipmi_si.c:573:
+                           tell it about the error. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1256: FILE: drivers/char/ipmi/ipmi_si.c:581:
+	if (si_sm_result == SI_SM_ATTN)
+	{

ERROR:CODE_INDENT: code indent should use tabs where possible
#1265: FILE: drivers/char/ipmi/ipmi_si.c:590:
+                   what's causing it.  It would be better to handle$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1265: FILE: drivers/char/ipmi/ipmi_si.c:590:
+		/* Got a attn, send down a get message flags to see
+                   what's causing it.  It would be better to handle

ERROR:CODE_INDENT: code indent should use tabs where possible
#1266: FILE: drivers/char/ipmi/ipmi_si.c:591:
+                   this in the upper layer, but due to the way$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1267: FILE: drivers/char/ipmi/ipmi_si.c:592:
+                   interrupts work with the SMI, that's not really$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1268: FILE: drivers/char/ipmi/ipmi_si.c:593:
+                   possible. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1268: FILE: drivers/char/ipmi/ipmi_si.c:593:
+                   possible. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1272: FILE: drivers/char/ipmi/ipmi_si.c:597:
+		smi_info->handlers->start_transaction(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: drivers/char/ipmi/ipmi_si.c:612:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: drivers/char/ipmi/ipmi_si.c:612:
+        }$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1289: FILE: drivers/char/ipmi/ipmi_si.c:614:
+	if ((si_sm_result == SI_SM_IDLE)
+	    && (atomic_read(&smi_info->req_events)))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'si_sm_result == SI_SM_IDLE'
#1289: FILE: drivers/char/ipmi/ipmi_si.c:614:
+	if ((si_sm_result == SI_SM_IDLE)
+	    && (atomic_read(&smi_info->req_events)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1290: FILE: drivers/char/ipmi/ipmi_si.c:615:
+	if ((si_sm_result == SI_SM_IDLE)
+	    && (atomic_read(&smi_info->req_events)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1293: FILE: drivers/char/ipmi/ipmi_si.c:618:
+		/* We are idle and the upper layer requested that I fetch
+		   events, so do so. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1293: FILE: drivers/char/ipmi/ipmi_si.c:618:
+		   events, so do so. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1304: FILE: drivers/char/ipmi/ipmi_si.c:629:
+		smi_info->handlers->start_transaction(

CHECK:SPACING: No space is necessary after a cast
#1317: FILE: drivers/char/ipmi/ipmi_si.c:642:
+	struct smi_info   *smi_info = (struct smi_info *) send_info;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->msg_lock
#1324: FILE: drivers/char/ipmi/ipmi_si.c:649:
+	spin_lock_irqsave(&(smi_info->msg_lock), flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1327: FILE: drivers/char/ipmi/ipmi_si.c:652:
+	printk("**Enqueue: %d.%9.9d\n", t.tv_sec, t.tv_usec);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1332: FILE: drivers/char/ipmi/ipmi_si.c:657:
+		/* If we are running to completion, then throw it in
+		   the list and run transactions until everything is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1333: FILE: drivers/char/ipmi/ipmi_si.c:658:
+		   clear.  Priority doesn't matter here. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->link
#1334: FILE: drivers/char/ipmi/ipmi_si.c:659:
+		list_add_tail(&(msg->link), &(smi_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->xmit_msgs
#1334: FILE: drivers/char/ipmi/ipmi_si.c:659:
+		list_add_tail(&(msg->link), &(smi_info->xmit_msgs));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1337: FILE: drivers/char/ipmi/ipmi_si.c:662:
+		/* We have to release the msg lock and claim the smi
+		   lock in this case, because of race conditions. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1337: FILE: drivers/char/ipmi/ipmi_si.c:662:
+		   lock in this case, because of race conditions. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->msg_lock
#1338: FILE: drivers/char/ipmi/ipmi_si.c:663:
+		spin_unlock_irqrestore(&(smi_info->msg_lock), flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1340: FILE: drivers/char/ipmi/ipmi_si.c:665:
+		spin_lock_irqsave(&(smi_info->si_lock), flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1347: FILE: drivers/char/ipmi/ipmi_si.c:672:
+		spin_unlock_irqrestore(&(smi_info->si_lock), flags);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1349: FILE: drivers/char/ipmi/ipmi_si.c:674:
+		return;
+	} else {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1350: FILE: drivers/char/ipmi/ipmi_si.c:675:
+		if (priority > 0) {
[...]
+		} else {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->link
#1351: FILE: drivers/char/ipmi/ipmi_si.c:676:
+			list_add_tail(&(msg->link), &(smi_info->hp_xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->hp_xmit_msgs
#1351: FILE: drivers/char/ipmi/ipmi_si.c:676:
+			list_add_tail(&(msg->link), &(smi_info->hp_xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->link
#1353: FILE: drivers/char/ipmi/ipmi_si.c:678:
+			list_add_tail(&(msg->link), &(smi_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->xmit_msgs
#1353: FILE: drivers/char/ipmi/ipmi_si.c:678:
+			list_add_tail(&(msg->link), &(smi_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->msg_lock
#1356: FILE: drivers/char/ipmi/ipmi_si.c:681:
+	spin_unlock_irqrestore(&(smi_info->msg_lock), flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1358: FILE: drivers/char/ipmi/ipmi_si.c:683:
+	spin_lock_irqsave(&(smi_info->si_lock), flags);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1359: FILE: drivers/char/ipmi/ipmi_si.c:684:
+	if ((smi_info->si_state == SI_NORMAL)
+	    && (smi_info->curr_msg == NULL))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smi_info->si_state == SI_NORMAL'
#1359: FILE: drivers/char/ipmi/ipmi_si.c:684:
+	if ((smi_info->si_state == SI_NORMAL)
+	    && (smi_info->curr_msg == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smi_info->curr_msg == NULL'
#1359: FILE: drivers/char/ipmi/ipmi_si.c:684:
+	if ((smi_info->si_state == SI_NORMAL)
+	    && (smi_info->curr_msg == NULL))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1360: FILE: drivers/char/ipmi/ipmi_si.c:685:
+	if ((smi_info->si_state == SI_NORMAL)
+	    && (smi_info->curr_msg == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smi_info->curr_msg"
#1360: FILE: drivers/char/ipmi/ipmi_si.c:685:
+	    && (smi_info->curr_msg == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1365: FILE: drivers/char/ipmi/ipmi_si.c:690:
+	spin_unlock_irqrestore(&(smi_info->si_lock), flags);

CHECK:SPACING: No space is necessary after a cast
#1370: FILE: drivers/char/ipmi/ipmi_si.c:695:
+	struct smi_info   *smi_info = (struct smi_info *) send_info;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1374: FILE: drivers/char/ipmi/ipmi_si.c:699:
+	spin_lock_irqsave(&(smi_info->si_lock), flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1386: FILE: drivers/char/ipmi/ipmi_si.c:711:
+	spin_unlock_irqrestore(&(smi_info->si_lock), flags);

CHECK:SPACING: No space is necessary after a cast
#1391: FILE: drivers/char/ipmi/ipmi_si.c:716:
+	struct smi_info *smi_info = (struct smi_info *) send_info;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1396: FILE: drivers/char/ipmi/ipmi_si.c:721:
+static int initialized = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_timer
#1405: FILE: drivers/char/ipmi/ipmi_si.c:730:
+	if (del_timer(&(smi_info->si_timer))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1407: FILE: drivers/char/ipmi/ipmi_si.c:732:
+		/* If we don't delete the timer, then it will go off
+		   immediately, anyway.  So we only process if we

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1408: FILE: drivers/char/ipmi/ipmi_si.c:733:
+		   actually delete the timer. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1411: FILE: drivers/char/ipmi/ipmi_si.c:736:
+                   here. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1411: FILE: drivers/char/ipmi/ipmi_si.c:736:
+		/* We already have irqsave on, so no need for it
+                   here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1411: FILE: drivers/char/ipmi/ipmi_si.c:736:
+                   here. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_timer
#1419: FILE: drivers/char/ipmi/ipmi_si.c:744:
+		add_timer(&(smi_info->si_timer));

CHECK:SPACING: No space is necessary after a cast
#1429: FILE: drivers/char/ipmi/ipmi_si.c:754:
+	struct smi_info   *smi_info = (struct smi_info *) data;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1443: FILE: drivers/char/ipmi/ipmi_si.c:768:
+	spin_lock_irqsave(&(smi_info->si_lock), flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1446: FILE: drivers/char/ipmi/ipmi_si.c:771:
+	printk("**Timer: %d.%9.9d\n", t.tv_sec, t.tv_usec);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1453: FILE: drivers/char/ipmi/ipmi_si.c:778:
+	spin_unlock_irqrestore(&(smi_info->si_lock), flags);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1457: FILE: drivers/char/ipmi/ipmi_si.c:782:
+	if ((smi_info->irq) && (! smi_info->interrupt_disabled)) {
 	                        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smi_info->irq'
#1457: FILE: drivers/char/ipmi/ipmi_si.c:782:
+	if ((smi_info->irq) && (! smi_info->interrupt_disabled)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '! smi_info->interrupt_disabled'
#1457: FILE: drivers/char/ipmi/ipmi_si.c:782:
+	if ((smi_info->irq) && (! smi_info->interrupt_disabled)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1467: FILE: drivers/char/ipmi/ipmi_si.c:792:
+           the timer timeout. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1467: FILE: drivers/char/ipmi/ipmi_si.c:792:
+	/* If the state machine asks for a short delay, then shorten
+           the timer timeout. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1467: FILE: drivers/char/ipmi/ipmi_si.c:792:
+           the timer timeout. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1474: FILE: drivers/char/ipmi/ipmi_si.c:799:
+                smi_info->si_timer.expires = jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1474: FILE: drivers/char/ipmi/ipmi_si.c:799:
+                smi_info->si_timer.expires = jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1475: FILE: drivers/char/ipmi/ipmi_si.c:800:
+                smi_info->si_timer.sub_expires$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1475: FILE: drivers/char/ipmi/ipmi_si.c:800:
+                smi_info->si_timer.sub_expires$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1476: FILE: drivers/char/ipmi/ipmi_si.c:801:
+                        = get_arch_cycles(smi_info->si_timer.expires);$

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1476: FILE: drivers/char/ipmi/ipmi_si.c:801:
+                smi_info->si_timer.sub_expires
+                        = get_arch_cycles(smi_info->si_timer.expires);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1476: FILE: drivers/char/ipmi/ipmi_si.c:801:
+                        = get_arch_cycles(smi_info->si_timer.expires);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1477: FILE: drivers/char/ipmi/ipmi_si.c:802:
+                read_unlock(&xtime_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1477: FILE: drivers/char/ipmi/ipmi_si.c:802:
+                read_unlock(&xtime_lock);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_timer
#1493: FILE: drivers/char/ipmi/ipmi_si.c:818:
+	add_timer(&(smi_info->si_timer));

CHECK:SPACING: No space is necessary after a cast
#1498: FILE: drivers/char/ipmi/ipmi_si.c:823:
+	struct smi_info *smi_info = (struct smi_info *) data;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1504: FILE: drivers/char/ipmi/ipmi_si.c:829:
+	spin_lock_irqsave(&(smi_info->si_lock), flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1515: FILE: drivers/char/ipmi/ipmi_si.c:840:
+	printk("**Interrupt: %d.%9.9d\n", t.tv_sec, t.tv_usec);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1519: FILE: drivers/char/ipmi/ipmi_si.c:844:
+	spin_unlock_irqrestore(&(smi_info->si_lock), flags);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1524: FILE: drivers/char/ipmi/ipmi_si.c:849:
+static struct ipmi_smi_handlers handlers =
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1532: FILE: drivers/char/ipmi/ipmi_si.c:857:
+/* There can be 4 IO ports passed in (with or without IRQs), 4 addresses,
+   a default IO port, and 1 ACPI/SPMI address.  That sets SI_MAX_DRIVERS */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1532: FILE: drivers/char/ipmi/ipmi_si.c:857:
+   a default IO port, and 1 ACPI/SPMI address.  That sets SI_MAX_DRIVERS */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1537: FILE: drivers/char/ipmi/ipmi_si.c:862:
+static struct smi_info *smi_infos[SI_MAX_DRIVERS] =
+{ NULL, NULL, NULL, NULL };

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1551: FILE: drivers/char/ipmi/ipmi_si.c:876:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1558: FILE: drivers/char/ipmi/ipmi_si.c:883:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1570: FILE: drivers/char/ipmi/ipmi_si.c:895:
+		if (si_type[i] != NULL) {
[...]
+		else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "si_type[i]"
#1570: FILE: drivers/char/ipmi/ipmi_si.c:895:
+		if (si_type[i] != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1571: FILE: drivers/char/ipmi/ipmi_si.c:896:
+^I^I^Iif ((addr_space == IPMI_MEM_ADDR_SPACE && $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1577: FILE: drivers/char/ipmi/ipmi_si.c:902:
+		}
+		else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1580: FILE: drivers/char/ipmi/ipmi_si.c:905:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1584: FILE: drivers/char/ipmi/ipmi_si.c:909:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: drivers/char/ipmi/ipmi_si.c:909:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1598: FILE: drivers/char/ipmi/ipmi_si.c:923:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1600: FILE: drivers/char/ipmi/ipmi_si.c:925:
+		       "ipmi_si: %s unable to claim interrupt %d,"
+		       " running polled\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1604: FILE: drivers/char/ipmi/ipmi_si.c:929:
+		printk("  Using irq %d\n", info->irq);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1622: FILE: drivers/char/ipmi/ipmi_si.c:947:
+	return inb((*addr)+offset);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1630: FILE: drivers/char/ipmi/ipmi_si.c:955:
+	outb(b, (*addr)+offset);
 	               ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#1640: FILE: drivers/char/ipmi/ipmi_si.c:965:
+	if (request_region(*addr, info->io_size, DEVICE_NAME) == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1649: FILE: drivers/char/ipmi/ipmi_si.c:974:
+^Iif (addr && (*addr)) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1650: FILE: drivers/char/ipmi/ipmi_si.c:975:
+		release_region (*addr, info->io_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1667: FILE: drivers/char/ipmi/ipmi_si.c:992:
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (1)\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1667: FILE: drivers/char/ipmi/ipmi_si.c:992:
+	if (!info) {
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (1)\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around si_ports[intf_num]
#1676: FILE: drivers/char/ipmi/ipmi_si.c:1001:
+	info->io.info = &(si_ports[intf_num]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1682: FILE: drivers/char/ipmi/ipmi_si.c:1007:
+	printk("ipmi_si: Trying \"%s\" at I/O port 0x%x\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1689: FILE: drivers/char/ipmi/ipmi_si.c:1014:
+	return readb((io->addr)+offset);
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1695: FILE: drivers/char/ipmi/ipmi_si.c:1020:
+	writeb(b, (io->addr)+offset);
 	                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_mem_region"
#1705: FILE: drivers/char/ipmi/ipmi_si.c:1030:
+	if (request_mem_region(*addr, info->io_size, DEVICE_NAME) == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->io.addr"
#1709: FILE: drivers/char/ipmi/ipmi_si.c:1034:
+	if (info->io.addr == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1740: FILE: drivers/char/ipmi/ipmi_si.c:1065:
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (2)\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1740: FILE: drivers/char/ipmi/ipmi_si.c:1065:
+	if (!info) {
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (2)\n");

CHECK:SPACING: No space is necessary after a cast
#1749: FILE: drivers/char/ipmi/ipmi_si.c:1074:
+	info->io.info = (void *) si_addrs[intf_num];

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1755: FILE: drivers/char/ipmi/ipmi_si.c:1080:
+	printk("ipmi_si: Trying \"%s\" at memory address 0x%lx\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1760: FILE: drivers/char/ipmi/ipmi_si.c:1085:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1766: FILE: drivers/char/ipmi/ipmi_si.c:1091:
+/* Once we get an ACPI failure, we don't try any more, because we go
+   through the tables sequentially.  Once we don't find a table, there

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1767: FILE: drivers/char/ipmi/ipmi_si.c:1092:
+   are no more. */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1768: FILE: drivers/char/ipmi/ipmi_si.c:1093:
+static int acpi_failure = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1779: FILE: drivers/char/ipmi/ipmi_si.c:1104:
+	spin_lock_irqsave(&(smi_info->si_lock), flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1790: FILE: drivers/char/ipmi/ipmi_si.c:1115:
+	printk("**ACPI_GPE: %d.%9.9d\n", t.tv_sec, t.tv_usec);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#1794: FILE: drivers/char/ipmi/ipmi_si.c:1119:
+	spin_unlock_irqrestore(&(smi_info->si_lock), flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1811: FILE: drivers/char/ipmi/ipmi_si.c:1136:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1813: FILE: drivers/char/ipmi/ipmi_si.c:1138:
+		       "ipmi_si: %s unable to claim ACPI GPE %d,"
+		       " running polled\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1817: FILE: drivers/char/ipmi/ipmi_si.c:1142:
+		return -EINVAL;
+	} else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1818: FILE: drivers/char/ipmi/ipmi_si.c:1143:
+		printk("  Using ACPI GPE %d\n", info->irq);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1822: FILE: drivers/char/ipmi/ipmi_si.c:1147:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <SPMITable>
#1836: FILE: drivers/char/ipmi/ipmi_si.c:1161:
+struct SPMITable {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Signature>
#1837: FILE: drivers/char/ipmi/ipmi_si.c:1162:
+	s8	Signature[4];

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#1838: FILE: drivers/char/ipmi/ipmi_si.c:1163:
+	u32	Length;

CHECK:CAMELCASE: Avoid CamelCase: <Revision>
#1839: FILE: drivers/char/ipmi/ipmi_si.c:1164:
+	u8	Revision;

CHECK:CAMELCASE: Avoid CamelCase: <Checksum>
#1840: FILE: drivers/char/ipmi/ipmi_si.c:1165:
+	u8	Checksum;

CHECK:CAMELCASE: Avoid CamelCase: <OEMTableID>
#1842: FILE: drivers/char/ipmi/ipmi_si.c:1167:
+	s8	OEMTableID[8];

CHECK:CAMELCASE: Avoid CamelCase: <OEMRevision>
#1843: FILE: drivers/char/ipmi/ipmi_si.c:1168:
+	s8	OEMRevision[4];

CHECK:CAMELCASE: Avoid CamelCase: <CreatorID>
#1844: FILE: drivers/char/ipmi/ipmi_si.c:1169:
+	s8	CreatorID[4];

CHECK:CAMELCASE: Avoid CamelCase: <CreatorRevision>
#1845: FILE: drivers/char/ipmi/ipmi_si.c:1170:
+	s8	CreatorRevision[4];

CHECK:CAMELCASE: Avoid CamelCase: <InterfaceType>
#1846: FILE: drivers/char/ipmi/ipmi_si.c:1171:
+	u8	InterfaceType;

CHECK:CAMELCASE: Avoid CamelCase: <IPMIlegacy>
#1847: FILE: drivers/char/ipmi/ipmi_si.c:1172:
+	u8	IPMIlegacy;

CHECK:CAMELCASE: Avoid CamelCase: <SpecificationRevision>
#1848: FILE: drivers/char/ipmi/ipmi_si.c:1173:
+	s16	SpecificationRevision;

CHECK:CAMELCASE: Avoid CamelCase: <InterruptType>
#1854: FILE: drivers/char/ipmi/ipmi_si.c:1179:
+	u8	InterruptType;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1857: FILE: drivers/char/ipmi/ipmi_si.c:1182:
+           interrupt in the GPEx_STS register. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1857: FILE: drivers/char/ipmi/ipmi_si.c:1182:
+	/* If bit 0 of InterruptType is set, then this is the SCI
+           interrupt in the GPEx_STS register. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1857: FILE: drivers/char/ipmi/ipmi_si.c:1182:
+           interrupt in the GPEx_STS register. */

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#1860: FILE: drivers/char/ipmi/ipmi_si.c:1185:
+	s16	Reserved;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1863: FILE: drivers/char/ipmi/ipmi_si.c:1188:
+           APIC/SAPIC interrupt. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1863: FILE: drivers/char/ipmi/ipmi_si.c:1188:
+	/* If bit 1 of InterruptType is set, then this is the I/O
+           APIC/SAPIC interrupt. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1863: FILE: drivers/char/ipmi/ipmi_si.c:1188:
+           APIC/SAPIC interrupt. */

CHECK:CAMELCASE: Avoid CamelCase: <GlobalSystemInterrupt>
#1864: FILE: drivers/char/ipmi/ipmi_si.c:1189:
+	u32	GlobalSystemInterrupt;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1880: FILE: drivers/char/ipmi/ipmi_si.c:1205:
+^Iu8 ^I^I addr_space;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1885: FILE: drivers/char/ipmi/ipmi_si.c:1210:
+	status = acpi_get_firmware_table("SPMI", intf_num+1,
 	                                                 ^

CHECK:SPACING: No space is necessary after a cast
#1887: FILE: drivers/char/ipmi/ipmi_si.c:1212:
+					 (struct acpi_table_header **) &spmi);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1893: FILE: drivers/char/ipmi/ipmi_si.c:1218:
+	if (spmi->IPMIlegacy != 1) {
+	    printk(KERN_INFO "IPMI: Bad SPMI legacy %d\n", spmi->IPMIlegacy);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1894: FILE: drivers/char/ipmi/ipmi_si.c:1219:
+	    printk(KERN_INFO "IPMI: Bad SPMI legacy %d\n", spmi->IPMIlegacy);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1895: FILE: drivers/char/ipmi/ipmi_si.c:1220:
+  ^I    return -ENODEV;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1895: FILE: drivers/char/ipmi/ipmi_si.c:1220:
+  ^I    return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1895: FILE: drivers/char/ipmi/ipmi_si.c:1220:
+  ^I    return -ENODEV;$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1906: FILE: drivers/char/ipmi/ipmi_si.c:1231:
+	switch (spmi->InterfaceType)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1921: FILE: drivers/char/ipmi/ipmi_si.c:1246:
+		printk(KERN_INFO "ipmi_si: Unknown ACPI/SPMI SI type %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1922: FILE: drivers/char/ipmi/ipmi_si.c:1247:
+		printk(KERN_INFO "ipmi_si: Unknown ACPI/SPMI SI type %d\n",
+			spmi->InterfaceType);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1924: FILE: drivers/char/ipmi/ipmi_si.c:1249:
+^I} $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1928: FILE: drivers/char/ipmi/ipmi_si.c:1253:
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (3)\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1928: FILE: drivers/char/ipmi/ipmi_si.c:1253:
+	if (!info) {
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (3)\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around si_addrs[intf_num]
#1956: FILE: drivers/char/ipmi/ipmi_si.c:1281:
+		info->io.info = &(si_addrs[intf_num]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around si_ports[intf_num]
#1964: FILE: drivers/char/ipmi/ipmi_si.c:1289:
+		info->io.info = &(si_ports[intf_num]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1967: FILE: drivers/char/ipmi/ipmi_si.c:1292:
+		printk("ipmi_si: Unknown ACPI I/O Address type\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1973: FILE: drivers/char/ipmi/ipmi_si.c:1298:
+	printk("ipmi_si: ACPI/SPMI specifies \"%s\" %s SI @ 0x%lx\n",

CHECK:SPACING: No space is necessary after a cast
#1974: FILE: drivers/char/ipmi/ipmi_si.c:1299:
+	       si_type[intf_num], io_type, (unsigned long) spmi->addr.address);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1981: FILE: drivers/char/ipmi/ipmi_si.c:1306:
+typedef struct dmi_ipmi_data

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1982: FILE: drivers/char/ipmi/ipmi_si.c:1307:
+typedef struct dmi_ipmi_data
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1983: FILE: drivers/char/ipmi/ipmi_si.c:1308:
+^Iu8   ^I^Itype;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1984: FILE: drivers/char/ipmi/ipmi_si.c:1309:
+^Iu8   ^I^Iaddr_space;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1986: FILE: drivers/char/ipmi/ipmi_si.c:1311:
+^Iu8   ^I^Iirq;$

ERROR:SPACING: space required after that close brace '}'
#1987: FILE: drivers/char/ipmi/ipmi_si.c:1312:
+}dmi_ipmi_data_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1989: FILE: drivers/char/ipmi/ipmi_si.c:1314:
+typedef struct dmi_header

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1990: FILE: drivers/char/ipmi/ipmi_si.c:1315:
+typedef struct dmi_header
+{

ERROR:SPACING: space required after that close brace '}'
#1994: FILE: drivers/char/ipmi/ipmi_si.c:1319:
+}dmi_header_t;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1999: FILE: drivers/char/ipmi/ipmi_si.c:1324:
+^Iunsigned long  ^Ibase_addr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2000: FILE: drivers/char/ipmi/ipmi_si.c:1325:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2002: FILE: drivers/char/ipmi/ipmi_si.c:1327:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2003: FILE: drivers/char/ipmi/ipmi_si.c:1328:
+	memcpy(&base_addr,&data[0x08],sizeof(unsigned long));
 	                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2003: FILE: drivers/char/ipmi/ipmi_si.c:1328:
+	memcpy(&base_addr,&data[0x08],sizeof(unsigned long));
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2003: FILE: drivers/char/ipmi/ipmi_si.c:1328:
+	memcpy(&base_addr,&data[0x08],sizeof(unsigned long));
 	                             ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2009: FILE: drivers/char/ipmi/ipmi_si.c:1334:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#2009: FILE: drivers/char/ipmi/ipmi_si.c:1334:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2013: FILE: drivers/char/ipmi/ipmi_si.c:1338:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2016: FILE: drivers/char/ipmi/ipmi_si.c:1341:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#2017: FILE: drivers/char/ipmi/ipmi_si.c:1342:
+	if (is_new_interface(-1, ipmi_data->addr_space,ipmi_data->base_addr))
+	    return 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2017: FILE: drivers/char/ipmi/ipmi_si.c:1342:
+	if (is_new_interface(-1, ipmi_data->addr_space,ipmi_data->base_addr))
 	                                              ^

WARNING:TABSTOP: Statements should start on a tabstop
#2018: FILE: drivers/char/ipmi/ipmi_si.c:1343:
+	    return 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2019: FILE: drivers/char/ipmi/ipmi_si.c:1344:
+^I    $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2020: FILE: drivers/char/ipmi/ipmi_si.c:1345:
+	memset(ipmi_data,0,sizeof(dmi_ipmi_data_t));
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2020: FILE: drivers/char/ipmi/ipmi_si.c:1345:
+	memset(ipmi_data,0,sizeof(dmi_ipmi_data_t));
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2021: FILE: drivers/char/ipmi/ipmi_si.c:1346:
+^I    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2025: FILE: drivers/char/ipmi/ipmi_si.c:1350:
+static int dmi_table(u32 base, int len, int num, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2026: FILE: drivers/char/ipmi/ipmi_si.c:1351:
+static int dmi_table(u32 base, int len, int num, 
+	dmi_ipmi_data_t *ipmi_data)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2028: FILE: drivers/char/ipmi/ipmi_si.c:1353:
+^Iu8 ^I^I  *buf;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2030: FILE: drivers/char/ipmi/ipmi_si.c:1355:
+^Iu8 ^I^I  *data;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2031: FILE: drivers/char/ipmi/ipmi_si.c:1356:
+^Iint ^I^I  i=1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2031: FILE: drivers/char/ipmi/ipmi_si.c:1356:
+	int 		  i=1;
 	    		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#2032: FILE: drivers/char/ipmi/ipmi_si.c:1357:
+	int		  status=-1;
 	   		        ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#2032: FILE: drivers/char/ipmi/ipmi_si.c:1357:
+	int		  status=-1;
 	   		         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2035: FILE: drivers/char/ipmi/ipmi_si.c:1360:
+	if(buf==NULL)
 	      ^

ERROR:SPACING: space required before the open parenthesis '('
#2035: FILE: drivers/char/ipmi/ipmi_si.c:1360:
+	if(buf==NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#2035: FILE: drivers/char/ipmi/ipmi_si.c:1360:
+	if(buf==NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2040: FILE: drivers/char/ipmi/ipmi_si.c:1365:
+	while(i<num && (data - buf) < len)
+	{        

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2040: FILE: drivers/char/ipmi/ipmi_si.c:1365:
+	while(i<num && (data - buf) < len)
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#2040: FILE: drivers/char/ipmi/ipmi_si.c:1365:
+	while(i<num && (data - buf) < len)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2041: FILE: drivers/char/ipmi/ipmi_si.c:1366:
+^I{        $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2042: FILE: drivers/char/ipmi/ipmi_si.c:1367:
+		dm=(dmi_header_t *)data;
 		  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2044: FILE: drivers/char/ipmi/ipmi_si.c:1369:
+		if((data-buf+dm->length) >= len)
 		        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2044: FILE: drivers/char/ipmi/ipmi_si.c:1369:
+		if((data-buf+dm->length) >= len)
 		            ^

ERROR:SPACING: space required before the open parenthesis '('
#2044: FILE: drivers/char/ipmi/ipmi_si.c:1369:
+		if((data-buf+dm->length) >= len)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2045: FILE: drivers/char/ipmi/ipmi_si.c:1370:
+        ^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2045: FILE: drivers/char/ipmi/ipmi_si.c:1370:
+        ^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2045: FILE: drivers/char/ipmi/ipmi_si.c:1370:
+        ^I^Ibreak;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2046: FILE: drivers/char/ipmi/ipmi_si.c:1371:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2046: FILE: drivers/char/ipmi/ipmi_si.c:1371:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2053: FILE: drivers/char/ipmi/ipmi_si.c:1378:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2053: FILE: drivers/char/ipmi/ipmi_si.c:1378:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2054: FILE: drivers/char/ipmi/ipmi_si.c:1379:
+^I        data+=dm->length;$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#2054: FILE: drivers/char/ipmi/ipmi_si.c:1379:
+	        data+=dm->length;
 	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2055: FILE: drivers/char/ipmi/ipmi_si.c:1380:
+		while((data-buf) < len && (*data || data[1]))
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#2055: FILE: drivers/char/ipmi/ipmi_si.c:1380:
+		while((data-buf) < len && (*data || data[1]))

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#2057: FILE: drivers/char/ipmi/ipmi_si.c:1382:
+		data+=2;
 		    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2061: FILE: drivers/char/ipmi/ipmi_si.c:1386:
+^I$

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#2065: FILE: drivers/char/ipmi/ipmi_si.c:1390:
+inline static int dmi_checksum(u8 *buf)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2067: FILE: drivers/char/ipmi/ipmi_si.c:1392:
+	u8   sum=0;
 	        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2069: FILE: drivers/char/ipmi/ipmi_si.c:1394:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2070: FILE: drivers/char/ipmi/ipmi_si.c:1395:
+	for(a=0; a<15; a++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2070: FILE: drivers/char/ipmi/ipmi_si.c:1395:
+	for(a=0; a<15; a++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#2070: FILE: drivers/char/ipmi/ipmi_si.c:1395:
+	for(a=0; a<15; a++)

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#2071: FILE: drivers/char/ipmi/ipmi_si.c:1396:
+		sum+=buf[a];
 		   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2072: FILE: drivers/char/ipmi/ipmi_si.c:1397:
+	return (sum==0);
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2078: FILE: drivers/char/ipmi/ipmi_si.c:1403:
+	u32  fp=0xF0000;
 	       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2083: FILE: drivers/char/ipmi/ipmi_si.c:1408:
+ ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2083: FILE: drivers/char/ipmi/ipmi_si.c:1408:
+ ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2083: FILE: drivers/char/ipmi/ipmi_si.c:1408:
+ ^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2084: FILE: drivers/char/ipmi/ipmi_si.c:1409:
+	while(fp < 0xFFFFF)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#2084: FILE: drivers/char/ipmi/ipmi_si.c:1409:
+	while(fp < 0xFFFFF)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2087: FILE: drivers/char/ipmi/ipmi_si.c:1412:
+		if(memcmp(buf, "_DMI_", 5)==0 && dmi_checksum(buf))
+		{

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2087: FILE: drivers/char/ipmi/ipmi_si.c:1412:
+		if(memcmp(buf, "_DMI_", 5)==0 && dmi_checksum(buf))
 		                          ^

ERROR:SPACING: space required before the open parenthesis '('
#2087: FILE: drivers/char/ipmi/ipmi_si.c:1412:
+		if(memcmp(buf, "_DMI_", 5)==0 && dmi_checksum(buf))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2089: FILE: drivers/char/ipmi/ipmi_si.c:1414:
+			u16 num=buf[13]<<8|buf[12];
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2089: FILE: drivers/char/ipmi/ipmi_si.c:1414:
+			u16 num=buf[13]<<8|buf[12];
 			               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2089: FILE: drivers/char/ipmi/ipmi_si.c:1414:
+			u16 num=buf[13]<<8|buf[12];
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2090: FILE: drivers/char/ipmi/ipmi_si.c:1415:
+			u16 len=buf[7]<<8|buf[6];
 			       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2090: FILE: drivers/char/ipmi/ipmi_si.c:1415:
+			u16 len=buf[7]<<8|buf[6];
 			              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2090: FILE: drivers/char/ipmi/ipmi_si.c:1415:
+			u16 len=buf[7]<<8|buf[6];
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2091: FILE: drivers/char/ipmi/ipmi_si.c:1416:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2091: FILE: drivers/char/ipmi/ipmi_si.c:1416:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2091: FILE: drivers/char/ipmi/ipmi_si.c:1416:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2091: FILE: drivers/char/ipmi/ipmi_si.c:1416:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2091: FILE: drivers/char/ipmi/ipmi_si.c:1416:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2091: FILE: drivers/char/ipmi/ipmi_si.c:1416:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2091: FILE: drivers/char/ipmi/ipmi_si.c:1416:
+			u32 base=buf[11]<<24|buf[10]<<16|buf[9]<<8|buf[8];
 			                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#2093: FILE: drivers/char/ipmi/ipmi_si.c:1418:
+			if(dmi_table(base, len, num, ipmi_data) == 0)

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#2096: FILE: drivers/char/ipmi/ipmi_si.c:1421:
+		fp+=16;
 		  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2098: FILE: drivers/char/ipmi/ipmi_si.c:1423:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2113: FILE: drivers/char/ipmi/ipmi_si.c:1438:
+^I$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2114: FILE: drivers/char/ipmi/ipmi_si.c:1439:
+	switch(ipmi_data.type) {
+		case 0x01: /* KCS */
[...]
+		case 0x02: /* SMIC */
[...]
+		case 0x03: /* BT */
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#2114: FILE: drivers/char/ipmi/ipmi_si.c:1439:
+	switch(ipmi_data.type) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2125: FILE: drivers/char/ipmi/ipmi_si.c:1450:
+			printk("ipmi_si: Unknown SMBIOS SI type.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2128: FILE: drivers/char/ipmi/ipmi_si.c:1453:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2131: FILE: drivers/char/ipmi/ipmi_si.c:1456:
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (4)\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2131: FILE: drivers/char/ipmi/ipmi_si.c:1456:
+	if (!info) {
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (4)\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around si_addrs[intf_num]
#2143: FILE: drivers/char/ipmi/ipmi_si.c:1468:
+		info->io.info = &(si_addrs[intf_num]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around si_ports[intf_num]
#2151: FILE: drivers/char/ipmi/ipmi_si.c:1476:
+		info->io.info = &(si_ports[intf_num]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2154: FILE: drivers/char/ipmi/ipmi_si.c:1479:
+		printk("ipmi_si: Unknown SMBIOS I/O Address type.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2162: FILE: drivers/char/ipmi/ipmi_si.c:1487:
+	printk("ipmi_si: Found SMBIOS-specified state machine at %s"

WARNING:SPLIT_STRING: quoted string split across lines
#2163: FILE: drivers/char/ipmi/ipmi_si.c:1488:
+	printk("ipmi_si: Found SMBIOS-specified state machine at %s"
+	       " address 0x%lx\n",

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2177: FILE: drivers/char/ipmi/ipmi_si.c:1502:
+static int pci_smic_checked = 0;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2184: FILE: drivers/char/ipmi/ipmi_si.c:1509:
+^Iu16    ^I^I base_addr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2186: FILE: drivers/char/ipmi/ipmi_si.c:1511:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2191: FILE: drivers/char/ipmi/ipmi_si.c:1516:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2192: FILE: drivers/char/ipmi/ipmi_si.c:1517:
+	if ((pci_dev = pci_find_device(PCI_HP_VENDOR_ID, PCI_MMC_DEVICE_ID,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2195: FILE: drivers/char/ipmi/ipmi_si.c:1520:
+	else if ((pci_dev = pci_find_class(PCI_ERMC_CLASSCODE, NULL)) &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2200: FILE: drivers/char/ipmi/ipmi_si.c:1525:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2202: FILE: drivers/char/ipmi/ipmi_si.c:1527:
+	if (error)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2204: FILE: drivers/char/ipmi/ipmi_si.c:1529:
+		printk(KERN_ERR

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2209: FILE: drivers/char/ipmi/ipmi_si.c:1534:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2211: FILE: drivers/char/ipmi/ipmi_si.c:1536:
+	if (!(base_addr & 0x0001))
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2213: FILE: drivers/char/ipmi/ipmi_si.c:1538:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#2215: FILE: drivers/char/ipmi/ipmi_si.c:1540:
+		       "ipmi_si: memory mapped I/O not supported for PCI"
+		       " smic.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2218: FILE: drivers/char/ipmi/ipmi_si.c:1543:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2223: FILE: drivers/char/ipmi/ipmi_si.c:1548:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#2224: FILE: drivers/char/ipmi/ipmi_si.c:1549:
+	if (!is_new_interface(-1, IPMI_IO_ADDR_SPACE, base_addr))
+	    return -ENODEV;

WARNING:TABSTOP: Statements should start on a tabstop
#2225: FILE: drivers/char/ipmi/ipmi_si.c:1550:
+	    return -ENODEV;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2226: FILE: drivers/char/ipmi/ipmi_si.c:1551:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2229: FILE: drivers/char/ipmi/ipmi_si.c:1554:
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (5)\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2229: FILE: drivers/char/ipmi/ipmi_si.c:1554:
+	if (!info) {
+		printk(KERN_ERR "ipmi_si: Could not allocate SI data (5)\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2233: FILE: drivers/char/ipmi/ipmi_si.c:1558:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around si_ports[intf_num]
#2239: FILE: drivers/char/ipmi/ipmi_si.c:1564:
+	info->io.info = &(si_ports[intf_num]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2242: FILE: drivers/char/ipmi/ipmi_si.c:1567:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2246: FILE: drivers/char/ipmi/ipmi_si.c:1571:
+	printk("ipmi_si: Found PCI SMIC at I/O address 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2247: FILE: drivers/char/ipmi/ipmi_si.c:1572:
+	printk("ipmi_si: Found PCI SMIC at I/O address 0x%lx\n",
+		(long unsigned int) base_addr);

CHECK:SPACING: No space is necessary after a cast
#2247: FILE: drivers/char/ipmi/ipmi_si.c:1572:
+		(long unsigned int) base_addr);

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#2247: FILE: drivers/char/ipmi/ipmi_si.c:1572:
+		(long unsigned int) base_addr);

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#2247: FILE: drivers/char/ipmi/ipmi_si.c:1572:
+		(long unsigned int) base_addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2248: FILE: drivers/char/ipmi/ipmi_si.c:1573:
+^I$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2256: FILE: drivers/char/ipmi/ipmi_si.c:1581:
+	if (find_pci_smic(intf_num, new_info)==0)
 	                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2260: FILE: drivers/char/ipmi/ipmi_si.c:1585:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2260: FILE: drivers/char/ipmi/ipmi_si.c:1585:
+    $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2264: FILE: drivers/char/ipmi/ipmi_si.c:1589:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2273: FILE: drivers/char/ipmi/ipmi_si.c:1598:
+	/* Do a Get Device ID command, since it comes back with some
+	   useful info. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2273: FILE: drivers/char/ipmi/ipmi_si.c:1598:
+	   useful info. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2277: FILE: drivers/char/ipmi/ipmi_si.c:1602:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2279: FILE: drivers/char/ipmi/ipmi_si.c:1604:
+	for (;;)
+	{

CHECK:BRACES: braces {} should be used on all arms of this statement
#2281: FILE: drivers/char/ipmi/ipmi_si.c:1606:
+		if (smi_result == SI_SM_CALL_WITH_DELAY) {
[...]
+		else if (smi_result == SI_SM_CALL_WITHOUT_DELAY)
[...]
+		else
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2284: FILE: drivers/char/ipmi/ipmi_si.c:1609:
+			smi_result = smi_info->handlers->event(

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2287: FILE: drivers/char/ipmi/ipmi_si.c:1612:
+		else if (smi_result == SI_SM_CALL_WITHOUT_DELAY)
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2287: FILE: drivers/char/ipmi/ipmi_si.c:1612:
+		}
+		else if (smi_result == SI_SM_CALL_WITHOUT_DELAY)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2289: FILE: drivers/char/ipmi/ipmi_si.c:1614:
+			smi_result = smi_info->handlers->event(

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2292: FILE: drivers/char/ipmi/ipmi_si.c:1617:
+		}
+		else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2297: FILE: drivers/char/ipmi/ipmi_si.c:1622:
+		/* We couldn't get the state machine to run, so whatever's at
+		   the port is probably not an IPMI SMI interface. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2297: FILE: drivers/char/ipmi/ipmi_si.c:1622:
+		   the port is probably not an IPMI SMI interface. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2306: FILE: drivers/char/ipmi/ipmi_si.c:1631:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'resp[1] != IPMI_GET_DEVICE_ID_CMD'
#2307: FILE: drivers/char/ipmi/ipmi_si.c:1632:
+	if ((resp[1] != IPMI_GET_DEVICE_ID_CMD) || (resp[2] != 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'resp[2] != 0'
#2307: FILE: drivers/char/ipmi/ipmi_si.c:1632:
+	if ((resp[1] != IPMI_GET_DEVICE_ID_CMD) || (resp[2] != 0))

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2322: FILE: drivers/char/ipmi/ipmi_si.c:1647:
+extern struct si_sm_handlers smic_smi_handlers;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2323: FILE: drivers/char/ipmi/ipmi_si.c:1648:
+extern struct si_sm_handlers bt_smi_handlers;

CHECK:SPACING: No space is necessary after a cast
#2328: FILE: drivers/char/ipmi/ipmi_si.c:1653:
+	char            *out = (char *) page;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2331: FILE: drivers/char/ipmi/ipmi_si.c:1656:
+	switch (smi->si_type) {
+	    case SI_KCS:
[...]
+	    case SI_SMIC:
[...]
+	    case SI_BT:
[...]
+	    default:

WARNING:TABSTOP: Statements should start on a tabstop
#2332: FILE: drivers/char/ipmi/ipmi_si.c:1657:
+	    case SI_KCS:

WARNING:TABSTOP: Statements should start on a tabstop
#2334: FILE: drivers/char/ipmi/ipmi_si.c:1659:
+	    case SI_SMIC:

WARNING:TABSTOP: Statements should start on a tabstop
#2336: FILE: drivers/char/ipmi/ipmi_si.c:1661:
+	    case SI_BT:

WARNING:TABSTOP: Statements should start on a tabstop
#2338: FILE: drivers/char/ipmi/ipmi_si.c:1663:
+	    default:

CHECK:SPACING: No space is necessary after a cast
#2346: FILE: drivers/char/ipmi/ipmi_si.c:1671:
+	char            *out = (char *) page;

CHECK:SPACING: No space is necessary after a cast
#2376: FILE: drivers/char/ipmi/ipmi_si.c:1701:
+	return (out - ((char *) page));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2385: FILE: drivers/char/ipmi/ipmi_si.c:1710:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2390: FILE: drivers/char/ipmi/ipmi_si.c:1715:
+	if ((rv) && (si_trydefaults)) {
+		rv = try_init_acpi(intf_num, &new_smi);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2395: FILE: drivers/char/ipmi/ipmi_si.c:1720:
+	if ((rv) && (si_trydefaults)) {
+		rv = try_init_smbios(intf_num, &new_smi);
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#2397: FILE: drivers/char/ipmi/ipmi_si.c:1722:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2397: FILE: drivers/char/ipmi/ipmi_si.c:1722:
+        }$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2399: FILE: drivers/char/ipmi/ipmi_si.c:1724:
+	if ((rv) && (si_trydefaults)) {
+		rv = try_init_plug_and_play(intf_num, &new_smi);
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2403: FILE: drivers/char/ipmi/ipmi_si.c:1728:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!si_type[intf_num]"
#2419: FILE: drivers/char/ipmi/ipmi_si.c:1744:
+	if (si_type[intf_num] == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2420: FILE: drivers/char/ipmi/ipmi_si.c:1745:
+		if (si_trydefaults)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2422: FILE: drivers/char/ipmi/ipmi_si.c:1747:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2447: FILE: drivers/char/ipmi/ipmi_si.c:1772:
+		printk(" Could not allocate state machine memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2447: FILE: drivers/char/ipmi/ipmi_si.c:1772:
+	if (!new_smi->si_sm) {
+		printk(" Could not allocate state machine memory\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2457: FILE: drivers/char/ipmi/ipmi_si.c:1782:
+		printk(" Could not set up I/O space\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2460: FILE: drivers/char/ipmi/ipmi_si.c:1785:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_smi->si_lock
#2461: FILE: drivers/char/ipmi/ipmi_si.c:1786:
+	spin_lock_init(&(new_smi->si_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_smi->msg_lock
#2462: FILE: drivers/char/ipmi/ipmi_si.c:1787:
+	spin_lock_init(&(new_smi->msg_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_smi->count_lock
#2463: FILE: drivers/char/ipmi/ipmi_si.c:1788:
+	spin_lock_init(&(new_smi->count_lock));

ERROR:CODE_INDENT: code indent should use tabs where possible
#2472: FILE: drivers/char/ipmi/ipmi_si.c:1797:
+           don't have a SMI here. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2472: FILE: drivers/char/ipmi/ipmi_si.c:1797:
+	/* Attempt a get device id command.  If it fails, we probably
+           don't have a SMI here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2472: FILE: drivers/char/ipmi/ipmi_si.c:1797:
+           don't have a SMI here. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_smi->xmit_msgs
#2480: FILE: drivers/char/ipmi/ipmi_si.c:1805:
+	INIT_LIST_HEAD(&(new_smi->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_smi->hp_xmit_msgs
#2481: FILE: drivers/char/ipmi/ipmi_si.c:1806:
+	INIT_LIST_HEAD(&(new_smi->hp_xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_smi->intf
#2490: FILE: drivers/char/ipmi/ipmi_si.c:1815:
+			       &(new_smi->intf));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2492: FILE: drivers/char/ipmi/ipmi_si.c:1817:
+^I^Iprintk(KERN_ERR $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2492: FILE: drivers/char/ipmi/ipmi_si.c:1817:
+		printk(KERN_ERR 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2502: FILE: drivers/char/ipmi/ipmi_si.c:1827:
+^I^Iprintk(KERN_ERR $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2502: FILE: drivers/char/ipmi/ipmi_si.c:1827:
+		printk(KERN_ERR 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2512: FILE: drivers/char/ipmi/ipmi_si.c:1837:
+^I^Iprintk(KERN_ERR $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2512: FILE: drivers/char/ipmi/ipmi_si.c:1837:
+		printk(KERN_ERR 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_smi->si_timer
#2528: FILE: drivers/char/ipmi/ipmi_si.c:1853:
+	init_timer(&(new_smi->si_timer));

CHECK:SPACING: No space is necessary after a cast
#2529: FILE: drivers/char/ipmi/ipmi_si.c:1854:
+	new_smi->si_timer.data = (long) new_smi;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_smi->si_timer
#2533: FILE: drivers/char/ipmi/ipmi_si.c:1858:
+	add_timer(&(new_smi->si_timer));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2537: FILE: drivers/char/ipmi/ipmi_si.c:1862:
+	printk(" IPMI %s interface initialized\n", si_type[intf_num]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2565: FILE: drivers/char/ipmi/ipmi_si.c:1890:
+	printk(KERN_INFO "IPMI System Interface driver version "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2568: FILE: drivers/char/ipmi/ipmi_si.c:1893:
+		printk(", KCS version %s", kcs_smi_handlers.version);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2570: FILE: drivers/char/ipmi/ipmi_si.c:1895:
+		printk(", SMIC version %s", smic_smi_handlers.version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2572: FILE: drivers/char/ipmi/ipmi_si.c:1897:
+   ^I        printk(", BT version %s", bt_smi_handlers.version);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2572: FILE: drivers/char/ipmi/ipmi_si.c:1897:
+   ^I        printk(", BT version %s", bt_smi_handlers.version);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2572: FILE: drivers/char/ipmi/ipmi_si.c:1897:
+   ^I        printk(", BT version %s", bt_smi_handlers.version);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2572: FILE: drivers/char/ipmi/ipmi_si.c:1897:
+   	        printk(", BT version %s", bt_smi_handlers.version);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2573: FILE: drivers/char/ipmi/ipmi_si.c:1898:
+	printk("\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_infos[pos]
#2575: FILE: drivers/char/ipmi/ipmi_si.c:1900:
+	rv = init_one_smi(0, &(smi_infos[pos]));

ERROR:CODE_INDENT: code indent should use tabs where possible
#2578: FILE: drivers/char/ipmi/ipmi_si.c:1903:
+                   not set, then set it. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2578: FILE: drivers/char/ipmi/ipmi_si.c:1903:
+		/* If we are trying defaults and the initial port is
+                   not set, then set it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2578: FILE: drivers/char/ipmi/ipmi_si.c:1903:
+                   not set, then set it. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_infos[pos]
#2581: FILE: drivers/char/ipmi/ipmi_si.c:1906:
+		rv = init_one_smi(0, &(smi_infos[pos]));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_infos[pos]
#2586: FILE: drivers/char/ipmi/ipmi_si.c:1911:
+			rv = init_one_smi(0, &(smi_infos[pos]));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_infos[pos]
#2592: FILE: drivers/char/ipmi/ipmi_si.c:1917:
+			rv = init_one_smi(0, &(smi_infos[pos]));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2598: FILE: drivers/char/ipmi/ipmi_si.c:1923:
+	for (i=1; i < SI_MAX_PARMS; i++) {
 	      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_infos[pos]
#2599: FILE: drivers/char/ipmi/ipmi_si.c:1924:
+		rv = init_one_smi(i, &(smi_infos[pos]));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smi_infos[0]"
#2604: FILE: drivers/char/ipmi/ipmi_si.c:1929:
+	if (smi_infos[0] == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2605: FILE: drivers/char/ipmi/ipmi_si.c:1930:
+		printk("ipmi_si: Unable to find any System Interface(s)\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2607: FILE: drivers/char/ipmi/ipmi_si.c:1932:
+^I} $

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#2619: FILE: drivers/char/ipmi/ipmi_si.c:1944:
+	if (! to_clean)
 	    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2623: FILE: drivers/char/ipmi/ipmi_si.c:1948:
+	/* Tell the timer and interrupt handlers that we are shutting
+	   down. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2623: FILE: drivers/char/ipmi/ipmi_si.c:1948:
+	   down. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around to_clean->si_lock
#2624: FILE: drivers/char/ipmi/ipmi_si.c:1949:
+	spin_lock_irqsave(&(to_clean->si_lock), flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around to_clean->msg_lock
#2625: FILE: drivers/char/ipmi/ipmi_si.c:1950:
+	spin_lock(&(to_clean->msg_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around to_clean->msg_lock
#2631: FILE: drivers/char/ipmi/ipmi_si.c:1956:
+	spin_unlock(&(to_clean->msg_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around to_clean->si_lock
#2632: FILE: drivers/char/ipmi/ipmi_si.c:1957:
+	spin_unlock_irqrestore(&(to_clean->si_lock), flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2635: FILE: drivers/char/ipmi/ipmi_si.c:1960:
+	/* Wait until we know that we are out of any interrupt
+	   handlers might have been running before we freed the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2636: FILE: drivers/char/ipmi/ipmi_si.c:1961:
+	   interrupt. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2640: FILE: drivers/char/ipmi/ipmi_si.c:1965:
+	/* Wait for the timer to stop.  This avoids problems with race
+	   conditions removing the timer here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2640: FILE: drivers/char/ipmi/ipmi_si.c:1965:
+	   conditions removing the timer here. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2648: FILE: drivers/char/ipmi/ipmi_si.c:1973:
+^I^Iprintk(KERN_ERR $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2648: FILE: drivers/char/ipmi/ipmi_si.c:1973:
+		printk(KERN_ERR 

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2667: FILE: drivers/char/ipmi/ipmi_si.c:1992:
+	for (i=0; i<SI_MAX_DRIVERS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2667: FILE: drivers/char/ipmi/ipmi_si.c:1992:
+	for (i=0; i<SI_MAX_DRIVERS; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2667: FILE: drivers/char/ipmi/ipmi_si.c:1992:
+	for (i=0; i<SI_MAX_DRIVERS; i++) {
+		cleanup_one_si(smi_infos[i]);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2675: FILE: drivers/char/ipmi/ipmi_si.c:2000:
+   longs.  Since we need ulongs (64-bit physical addresses) parse the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2675: FILE: drivers/char/ipmi/ipmi_si.c:2000:
+/* Unfortunately, cmdline::get_options() only returns integers, not
+   longs.  Since we need ulongs (64-bit physical addresses) parse the 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2681: FILE: drivers/char/ipmi/ipmi_si.c:2006:
+   nodefaults^I^ISuppress trying the default IO port or ACPI address $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2683: FILE: drivers/char/ipmi/ipmi_si.c:2008:
+   For example, to pass one IO port with an IRQ, one address, and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2687: FILE: drivers/char/ipmi/ipmi_si.c:2012:
+   Remember, ipmi_si_setup() is passed the string after the equal sign. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2696: FILE: drivers/char/ipmi/ipmi_si.c:2021:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2704: FILE: drivers/char/ipmi/ipmi_si.c:2029:
+^I^I^I^Iprintk(KERN_INFO $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2704: FILE: drivers/char/ipmi/ipmi_si.c:2029:
+				printk(KERN_INFO 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2712: FILE: drivers/char/ipmi/ipmi_si.c:2037:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2716: FILE: drivers/char/ipmi/ipmi_si.c:2041:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2720: FILE: drivers/char/ipmi/ipmi_si.c:2045:
+^I^I$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2723: FILE: drivers/char/ipmi/ipmi_si.c:2048:
+			val = simple_strtoul(cur + 1,

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2731: FILE: drivers/char/ipmi/ipmi_si.c:2056:
+				val = simple_strtoul(colon + 1,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2740: FILE: drivers/char/ipmi/ipmi_si.c:2065:
+^I^I^Iprintk(KERN_INFO $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2740: FILE: drivers/char/ipmi/ipmi_si.c:2065:
+			printk(KERN_INFO 

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2749: FILE: drivers/char/ipmi/ipmi_si.c:2074:
+__setup("ipmi_si=", ipmi_si_setup);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2757: FILE: drivers/char/ipmi/ipmi_smic_sm.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2777: FILE: drivers/char/ipmi/ipmi_smic_sm.c:21:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2797: FILE: drivers/char/ipmi/ipmi_smic_sm.c:41:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2798: FILE: drivers/char/ipmi/ipmi_smic_sm.c:42:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2798: FILE: drivers/char/ipmi/ipmi_smic_sm.c:42:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2807: FILE: drivers/char/ipmi/ipmi_smic_sm.c:51:
+/* smic_debug is a bit-field $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2808: FILE: drivers/char/ipmi/ipmi_smic_sm.c:52:
+ *^ISMIC_DEBUG_ENABLE -^Iturned on for now $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2811: FILE: drivers/char/ipmi/ipmi_smic_sm.c:55:
+ *	SMIC_DEBUG_STATES -	state machine
+*/

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2856: FILE: drivers/char/ipmi/ipmi_smic_sm.c:100:
+struct si_sm_data
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#2859: FILE: drivers/char/ipmi/ipmi_smic_sm.c:103:
+        unsigned char^I write_data[MAX_SMIC_WRITE_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2859: FILE: drivers/char/ipmi/ipmi_smic_sm.c:103:
+        unsigned char^I write_data[MAX_SMIC_WRITE_SIZE];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2860: FILE: drivers/char/ipmi/ipmi_smic_sm.c:104:
+        int^I^I write_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2860: FILE: drivers/char/ipmi/ipmi_smic_sm.c:104:
+        int^I^I write_pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2861: FILE: drivers/char/ipmi/ipmi_smic_sm.c:105:
+        int^I^I write_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2861: FILE: drivers/char/ipmi/ipmi_smic_sm.c:105:
+        int^I^I write_count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2862: FILE: drivers/char/ipmi/ipmi_smic_sm.c:106:
+        int^I^I orig_write_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2862: FILE: drivers/char/ipmi/ipmi_smic_sm.c:106:
+        int^I^I orig_write_count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2863: FILE: drivers/char/ipmi/ipmi_smic_sm.c:107:
+        unsigned char^I read_data[MAX_SMIC_READ_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2863: FILE: drivers/char/ipmi/ipmi_smic_sm.c:107:
+        unsigned char^I read_data[MAX_SMIC_READ_SIZE];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2864: FILE: drivers/char/ipmi/ipmi_smic_sm.c:108:
+        int^I^I read_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2864: FILE: drivers/char/ipmi/ipmi_smic_sm.c:108:
+        int^I^I read_pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2865: FILE: drivers/char/ipmi/ipmi_smic_sm.c:109:
+        int^I^I truncated;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2865: FILE: drivers/char/ipmi/ipmi_smic_sm.c:109:
+        int^I^I truncated;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2866: FILE: drivers/char/ipmi/ipmi_smic_sm.c:110:
+        unsigned int^I error_retries;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2866: FILE: drivers/char/ipmi/ipmi_smic_sm.c:110:
+        unsigned int^I error_retries;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2867: FILE: drivers/char/ipmi/ipmi_smic_sm.c:111:
+        long^I^I smic_timeout;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2867: FILE: drivers/char/ipmi/ipmi_smic_sm.c:111:
+        long^I^I smic_timeout;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2870: FILE: drivers/char/ipmi/ipmi_smic_sm.c:114:
+static unsigned int init_smic_data (struct si_sm_data *smic,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size < 2'
#2892: FILE: drivers/char/ipmi/ipmi_smic_sm.c:136:
+	if ((size < 2) || (size > MAX_SMIC_WRITE_SIZE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size > MAX_SMIC_WRITE_SIZE'
#2892: FILE: drivers/char/ipmi/ipmi_smic_sm.c:136:
+	if ((size < 2) || (size > MAX_SMIC_WRITE_SIZE)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2892: FILE: drivers/char/ipmi/ipmi_smic_sm.c:136:
+	if ((size < 2) || (size > MAX_SMIC_WRITE_SIZE)) {
+		return -1;
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smic->state != SMIC_IDLE'
#2895: FILE: drivers/char/ipmi/ipmi_smic_sm.c:139:
+	if ((smic->state != SMIC_IDLE) && (smic->state != SMIC_HOSED)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smic->state != SMIC_HOSED'
#2895: FILE: drivers/char/ipmi/ipmi_smic_sm.c:139:
+	if ((smic->state != SMIC_IDLE) && (smic->state != SMIC_HOSED)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2895: FILE: drivers/char/ipmi/ipmi_smic_sm.c:139:
+	if ((smic->state != SMIC_IDLE) && (smic->state != SMIC_HOSED)) {
+		return -2;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2899: FILE: drivers/char/ipmi/ipmi_smic_sm.c:143:
+		printk(KERN_INFO "start_smic_transaction -");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_smic_transaction', this function's name, in a string
#2899: FILE: drivers/char/ipmi/ipmi_smic_sm.c:143:
+		printk(KERN_INFO "start_smic_transaction -");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#2900: FILE: drivers/char/ipmi/ipmi_smic_sm.c:144:
+		for (i = 0; i < size; i ++) {
 		                        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2900: FILE: drivers/char/ipmi/ipmi_smic_sm.c:144:
+		for (i = 0; i < size; i ++) {
+			printk (" %02x", (unsigned char) (data [i]));
+		}

CHECK:SPACING: No space is necessary after a cast
#2901: FILE: drivers/char/ipmi/ipmi_smic_sm.c:145:
+			printk (" %02x", (unsigned char) (data [i]));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2901: FILE: drivers/char/ipmi/ipmi_smic_sm.c:145:
+			printk (" %02x", (unsigned char) (data [i]));

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2901: FILE: drivers/char/ipmi/ipmi_smic_sm.c:145:
+			printk (" %02x", (unsigned char) (data [i]));

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2901: FILE: drivers/char/ipmi/ipmi_smic_sm.c:145:
+			printk (" %02x", (unsigned char) (data [i]));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2903: FILE: drivers/char/ipmi/ipmi_smic_sm.c:147:
+		printk ("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2903: FILE: drivers/char/ipmi/ipmi_smic_sm.c:147:
+		printk ("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2922: FILE: drivers/char/ipmi/ipmi_smic_sm.c:166:
+		printk (KERN_INFO "smic_get result -");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2922: FILE: drivers/char/ipmi/ipmi_smic_sm.c:166:
+		printk (KERN_INFO "smic_get result -");

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#2923: FILE: drivers/char/ipmi/ipmi_smic_sm.c:167:
+		for (i = 0; i < smic->read_pos; i ++) {
 		                                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2923: FILE: drivers/char/ipmi/ipmi_smic_sm.c:167:
+		for (i = 0; i < smic->read_pos; i ++) {
+			printk (" %02x", (smic->read_data [i]));
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2924: FILE: drivers/char/ipmi/ipmi_smic_sm.c:168:
+			printk (" %02x", (smic->read_data [i]));

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2924: FILE: drivers/char/ipmi/ipmi_smic_sm.c:168:
+			printk (" %02x", (smic->read_data [i]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2924: FILE: drivers/char/ipmi/ipmi_smic_sm.c:168:
+			printk (" %02x", (smic->read_data [i]));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2926: FILE: drivers/char/ipmi/ipmi_smic_sm.c:170:
+		printk ("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2926: FILE: drivers/char/ipmi/ipmi_smic_sm.c:170:
+		printk ("\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'length >= 3'
#2934: FILE: drivers/char/ipmi/ipmi_smic_sm.c:178:
+	if ((length >= 3) && (smic->read_pos < 3)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smic->read_pos < 3'
#2934: FILE: drivers/char/ipmi/ipmi_smic_sm.c:178:
+	if ((length >= 3) && (smic->read_pos < 3)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2972: FILE: drivers/char/ipmi/ipmi_smic_sm.c:216:
+static inline void write_si_sm_data (struct si_sm_data *smic,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2973: FILE: drivers/char/ipmi/ipmi_smic_sm.c:217:
+static inline void write_si_sm_data (struct si_sm_data *smic,
+				   unsigned char   data)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2983: FILE: drivers/char/ipmi/ipmi_smic_sm.c:227:
+			printk(KERN_WARNING

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2985: FILE: drivers/char/ipmi/ipmi_smic_sm.c:229:
+^I^I}^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3003: FILE: drivers/char/ipmi/ipmi_smic_sm.c:247:
+static inline void read_next_byte (struct si_sm_data *smic)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3006: FILE: drivers/char/ipmi/ipmi_smic_sm.c:250:
+		read_smic_data (smic);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3009: FILE: drivers/char/ipmi/ipmi_smic_sm.c:253:
+^I^Ismic->read_data[smic->read_pos] = read_smic_data(smic);^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3034: FILE: drivers/char/ipmi/ipmi_smic_sm.c:278:
+#define	SMIC_CC_SMS_GET_STATUS	(SMIC_CONTROL|SMIC_SMS|SMIC_GET_STATUS)
        	                      	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3034: FILE: drivers/char/ipmi/ipmi_smic_sm.c:278:
+#define	SMIC_CC_SMS_GET_STATUS	(SMIC_CONTROL|SMIC_SMS|SMIC_GET_STATUS)
        	                      	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3035: FILE: drivers/char/ipmi/ipmi_smic_sm.c:279:
+#define	SMIC_CC_SMS_WR_START	(SMIC_CONTROL|SMIC_SMS|SMIC_WR_START)
        	                    	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3035: FILE: drivers/char/ipmi/ipmi_smic_sm.c:279:
+#define	SMIC_CC_SMS_WR_START	(SMIC_CONTROL|SMIC_SMS|SMIC_WR_START)
        	                    	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3036: FILE: drivers/char/ipmi/ipmi_smic_sm.c:280:
+#define	SMIC_CC_SMS_WR_NEXT	(SMIC_CONTROL|SMIC_SMS|SMIC_WR_NEXT)
        	                   	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3036: FILE: drivers/char/ipmi/ipmi_smic_sm.c:280:
+#define	SMIC_CC_SMS_WR_NEXT	(SMIC_CONTROL|SMIC_SMS|SMIC_WR_NEXT)
        	                   	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3037: FILE: drivers/char/ipmi/ipmi_smic_sm.c:281:
+#define	SMIC_CC_SMS_WR_END	(SMIC_CONTROL|SMIC_SMS|SMIC_WR_END)
        	                  	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3037: FILE: drivers/char/ipmi/ipmi_smic_sm.c:281:
+#define	SMIC_CC_SMS_WR_END	(SMIC_CONTROL|SMIC_SMS|SMIC_WR_END)
        	                  	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3038: FILE: drivers/char/ipmi/ipmi_smic_sm.c:282:
+#define	SMIC_CC_SMS_RD_START	(SMIC_CONTROL|SMIC_SMS|SMIC_RD_START)
        	                    	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3038: FILE: drivers/char/ipmi/ipmi_smic_sm.c:282:
+#define	SMIC_CC_SMS_RD_START	(SMIC_CONTROL|SMIC_SMS|SMIC_RD_START)
        	                    	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3039: FILE: drivers/char/ipmi/ipmi_smic_sm.c:283:
+#define	SMIC_CC_SMS_RD_NEXT	(SMIC_CONTROL|SMIC_SMS|SMIC_RD_NEXT)
        	                   	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3039: FILE: drivers/char/ipmi/ipmi_smic_sm.c:283:
+#define	SMIC_CC_SMS_RD_NEXT	(SMIC_CONTROL|SMIC_SMS|SMIC_RD_NEXT)
        	                   	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3040: FILE: drivers/char/ipmi/ipmi_smic_sm.c:284:
+#define	SMIC_CC_SMS_RD_END	(SMIC_CONTROL|SMIC_SMS|SMIC_RD_END)
        	                  	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3040: FILE: drivers/char/ipmi/ipmi_smic_sm.c:284:
+#define	SMIC_CC_SMS_RD_END	(SMIC_CONTROL|SMIC_SMS|SMIC_RD_END)
        	                  	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3042: FILE: drivers/char/ipmi/ipmi_smic_sm.c:286:
+#define	SMIC_CC_SMM_GET_STATUS	(SMIC_CONTROL|SMIC_SMM|SMIC_GET_STATUS)
        	                      	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3042: FILE: drivers/char/ipmi/ipmi_smic_sm.c:286:
+#define	SMIC_CC_SMM_GET_STATUS	(SMIC_CONTROL|SMIC_SMM|SMIC_GET_STATUS)
        	                      	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3043: FILE: drivers/char/ipmi/ipmi_smic_sm.c:287:
+#define	SMIC_CC_SMM_WR_START	(SMIC_CONTROL|SMIC_SMM|SMIC_WR_START)
        	                    	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3043: FILE: drivers/char/ipmi/ipmi_smic_sm.c:287:
+#define	SMIC_CC_SMM_WR_START	(SMIC_CONTROL|SMIC_SMM|SMIC_WR_START)
        	                    	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3044: FILE: drivers/char/ipmi/ipmi_smic_sm.c:288:
+#define	SMIC_CC_SMM_WR_NEXT	(SMIC_CONTROL|SMIC_SMM|SMIC_WR_NEXT)
        	                   	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3044: FILE: drivers/char/ipmi/ipmi_smic_sm.c:288:
+#define	SMIC_CC_SMM_WR_NEXT	(SMIC_CONTROL|SMIC_SMM|SMIC_WR_NEXT)
        	                   	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3045: FILE: drivers/char/ipmi/ipmi_smic_sm.c:289:
+#define	SMIC_CC_SMM_WR_END	(SMIC_CONTROL|SMIC_SMM|SMIC_WR_END)
        	                  	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3045: FILE: drivers/char/ipmi/ipmi_smic_sm.c:289:
+#define	SMIC_CC_SMM_WR_END	(SMIC_CONTROL|SMIC_SMM|SMIC_WR_END)
        	                  	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3046: FILE: drivers/char/ipmi/ipmi_smic_sm.c:290:
+#define	SMIC_CC_SMM_RD_START	(SMIC_CONTROL|SMIC_SMM|SMIC_RD_START)
        	                    	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3046: FILE: drivers/char/ipmi/ipmi_smic_sm.c:290:
+#define	SMIC_CC_SMM_RD_START	(SMIC_CONTROL|SMIC_SMM|SMIC_RD_START)
        	                    	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3047: FILE: drivers/char/ipmi/ipmi_smic_sm.c:291:
+#define	SMIC_CC_SMM_RD_NEXT	(SMIC_CONTROL|SMIC_SMM|SMIC_RD_NEXT)
        	                   	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3047: FILE: drivers/char/ipmi/ipmi_smic_sm.c:291:
+#define	SMIC_CC_SMM_RD_NEXT	(SMIC_CONTROL|SMIC_SMM|SMIC_RD_NEXT)
        	                   	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3048: FILE: drivers/char/ipmi/ipmi_smic_sm.c:292:
+#define	SMIC_CC_SMM_RD_END	(SMIC_CONTROL|SMIC_SMM|SMIC_RD_END)
        	                  	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3048: FILE: drivers/char/ipmi/ipmi_smic_sm.c:292:
+#define	SMIC_CC_SMM_RD_END	(SMIC_CONTROL|SMIC_SMM|SMIC_RD_END)
        	                  	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3051: FILE: drivers/char/ipmi/ipmi_smic_sm.c:295:
+#define	SMIC_SC_SMS_READY	(SMIC_STATUS|SMIC_SMS|SMIC_READY)
        	                 	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3051: FILE: drivers/char/ipmi/ipmi_smic_sm.c:295:
+#define	SMIC_SC_SMS_READY	(SMIC_STATUS|SMIC_SMS|SMIC_READY)
        	                 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3052: FILE: drivers/char/ipmi/ipmi_smic_sm.c:296:
+#define	SMIC_SC_SMS_WR_START	(SMIC_STATUS|SMIC_SMS|SMIC_WR_START)
        	                    	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3052: FILE: drivers/char/ipmi/ipmi_smic_sm.c:296:
+#define	SMIC_SC_SMS_WR_START	(SMIC_STATUS|SMIC_SMS|SMIC_WR_START)
        	                    	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3053: FILE: drivers/char/ipmi/ipmi_smic_sm.c:297:
+#define	SMIC_SC_SMS_WR_NEXT	(SMIC_STATUS|SMIC_SMS|SMIC_WR_NEXT)
        	                   	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3053: FILE: drivers/char/ipmi/ipmi_smic_sm.c:297:
+#define	SMIC_SC_SMS_WR_NEXT	(SMIC_STATUS|SMIC_SMS|SMIC_WR_NEXT)
        	                   	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3054: FILE: drivers/char/ipmi/ipmi_smic_sm.c:298:
+#define	SMIC_SC_SMS_WR_END	(SMIC_STATUS|SMIC_SMS|SMIC_WR_END)
        	                  	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3054: FILE: drivers/char/ipmi/ipmi_smic_sm.c:298:
+#define	SMIC_SC_SMS_WR_END	(SMIC_STATUS|SMIC_SMS|SMIC_WR_END)
        	                  	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3055: FILE: drivers/char/ipmi/ipmi_smic_sm.c:299:
+#define	SMIC_SC_SMS_RD_START	(SMIC_STATUS|SMIC_SMS|SMIC_RD_START)
        	                    	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3055: FILE: drivers/char/ipmi/ipmi_smic_sm.c:299:
+#define	SMIC_SC_SMS_RD_START	(SMIC_STATUS|SMIC_SMS|SMIC_RD_START)
        	                    	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3056: FILE: drivers/char/ipmi/ipmi_smic_sm.c:300:
+#define	SMIC_SC_SMS_RD_NEXT	(SMIC_STATUS|SMIC_SMS|SMIC_RD_NEXT)
        	                   	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3056: FILE: drivers/char/ipmi/ipmi_smic_sm.c:300:
+#define	SMIC_SC_SMS_RD_NEXT	(SMIC_STATUS|SMIC_SMS|SMIC_RD_NEXT)
        	                   	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3057: FILE: drivers/char/ipmi/ipmi_smic_sm.c:301:
+#define	SMIC_SC_SMS_RD_END	(SMIC_STATUS|SMIC_SMS|SMIC_RD_END)
        	                  	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3057: FILE: drivers/char/ipmi/ipmi_smic_sm.c:301:
+#define	SMIC_SC_SMS_RD_END	(SMIC_STATUS|SMIC_SMS|SMIC_RD_END)
        	                  	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3059: FILE: drivers/char/ipmi/ipmi_smic_sm.c:303:
+#define	SMIC_SC_SMM_READY	(SMIC_STATUS|SMIC_SMM|SMIC_READY)
        	                 	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3059: FILE: drivers/char/ipmi/ipmi_smic_sm.c:303:
+#define	SMIC_SC_SMM_READY	(SMIC_STATUS|SMIC_SMM|SMIC_READY)
        	                 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3060: FILE: drivers/char/ipmi/ipmi_smic_sm.c:304:
+#define	SMIC_SC_SMM_WR_START	(SMIC_STATUS|SMIC_SMM|SMIC_WR_START)
        	                    	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3060: FILE: drivers/char/ipmi/ipmi_smic_sm.c:304:
+#define	SMIC_SC_SMM_WR_START	(SMIC_STATUS|SMIC_SMM|SMIC_WR_START)
        	                    	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3061: FILE: drivers/char/ipmi/ipmi_smic_sm.c:305:
+#define	SMIC_SC_SMM_WR_NEXT	(SMIC_STATUS|SMIC_SMM|SMIC_WR_NEXT)
        	                   	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3061: FILE: drivers/char/ipmi/ipmi_smic_sm.c:305:
+#define	SMIC_SC_SMM_WR_NEXT	(SMIC_STATUS|SMIC_SMM|SMIC_WR_NEXT)
        	                   	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3062: FILE: drivers/char/ipmi/ipmi_smic_sm.c:306:
+#define	SMIC_SC_SMM_WR_END	(SMIC_STATUS|SMIC_SMM|SMIC_WR_END)
        	                  	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3062: FILE: drivers/char/ipmi/ipmi_smic_sm.c:306:
+#define	SMIC_SC_SMM_WR_END	(SMIC_STATUS|SMIC_SMM|SMIC_WR_END)
        	                  	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3063: FILE: drivers/char/ipmi/ipmi_smic_sm.c:307:
+#define	SMIC_SC_SMM_RD_START	(SMIC_STATUS|SMIC_SMM|SMIC_RD_START)
        	                    	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3063: FILE: drivers/char/ipmi/ipmi_smic_sm.c:307:
+#define	SMIC_SC_SMM_RD_START	(SMIC_STATUS|SMIC_SMM|SMIC_RD_START)
        	                    	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3064: FILE: drivers/char/ipmi/ipmi_smic_sm.c:308:
+#define	SMIC_SC_SMM_RD_NEXT	(SMIC_STATUS|SMIC_SMM|SMIC_RD_NEXT)
        	                   	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3064: FILE: drivers/char/ipmi/ipmi_smic_sm.c:308:
+#define	SMIC_SC_SMM_RD_NEXT	(SMIC_STATUS|SMIC_SMM|SMIC_RD_NEXT)
        	                   	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3065: FILE: drivers/char/ipmi/ipmi_smic_sm.c:309:
+#define	SMIC_SC_SMM_RD_END	(SMIC_STATUS|SMIC_SMM|SMIC_RD_END)
        	                  	            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3065: FILE: drivers/char/ipmi/ipmi_smic_sm.c:309:
+#define	SMIC_SC_SMM_RD_END	(SMIC_STATUS|SMIC_SMM|SMIC_RD_END)
        	                  	                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3068: FILE: drivers/char/ipmi/ipmi_smic_sm.c:312:
+/* these are the control/status codes we actually use
+	SMIC_CC_SMS_GET_STATUS	0x40

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3085: FILE: drivers/char/ipmi/ipmi_smic_sm.c:329:
+static enum si_sm_result smic_event (struct si_sm_data *smic, long time)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3097: FILE: drivers/char/ipmi/ipmi_smic_sm.c:341:
+			printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smic_event', this function's name, in a string
#3098: FILE: drivers/char/ipmi/ipmi_smic_sm.c:342:
+			       "smic_event - smic->smic_timeout = %ld,"

WARNING:SPLIT_STRING: quoted string split across lines
#3099: FILE: drivers/char/ipmi/ipmi_smic_sm.c:343:
+			       "smic_event - smic->smic_timeout = %ld,"
+			       " time = %ld\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3115: FILE: drivers/char/ipmi/ipmi_smic_sm.c:359:
+	status = read_smic_status (smic);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3117: FILE: drivers/char/ipmi/ipmi_smic_sm.c:361:
+		printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smic_event', this function's name, in a string
#3118: FILE: drivers/char/ipmi/ipmi_smic_sm.c:362:
+		       "smic_event - state = %d, flags = 0x%02x,"

WARNING:SPLIT_STRING: quoted string split across lines
#3119: FILE: drivers/char/ipmi/ipmi_smic_sm.c:363:
+		       "smic_event - state = %d, flags = 0x%02x,"
+		       " status = 0x%02x\n",

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3125: FILE: drivers/char/ipmi/ipmi_smic_sm.c:369:
+		if (flags & (SMIC_SMI |
+			     SMIC_EVM_DATA_AVAIL | SMIC_SMS_DATA_AVAIL))
+		{

WARNING:SPLIT_STRING: quoted string split across lines
#3144: FILE: drivers/char/ipmi/ipmi_smic_sm.c:388:
+					     "state = SMIC_OP_OK,"
+					     " status != SMIC_SC_SMS_READY");

WARNING:SPLIT_STRING: quoted string split across lines
#3158: FILE: drivers/char/ipmi/ipmi_smic_sm.c:402:
+					     "state = SMIC_WRITE_START, "
+					     "status != SMIC_SC_SMS_WR_START");

ERROR:CODE_INDENT: code indent should use tabs where possible
#3162: FILE: drivers/char/ipmi/ipmi_smic_sm.c:406:
+                   TX_DATA_READY is set */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3162: FILE: drivers/char/ipmi/ipmi_smic_sm.c:406:
+		/* we must not issue WR_(NEXT|END) unless
+                   TX_DATA_READY is set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3162: FILE: drivers/char/ipmi/ipmi_smic_sm.c:406:
+                   TX_DATA_READY is set */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#3175: FILE: drivers/char/ipmi/ipmi_smic_sm.c:419:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#3175: FILE: drivers/char/ipmi/ipmi_smic_sm.c:419:
+		else {

WARNING:SPLIT_STRING: quoted string split across lines
#3184: FILE: drivers/char/ipmi/ipmi_smic_sm.c:428:
+					     "state = SMIC_WRITE_NEXT, "
+					     "status != SMIC_SC_SMS_WR_NEXT");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#3193: FILE: drivers/char/ipmi/ipmi_smic_sm.c:437:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#3193: FILE: drivers/char/ipmi/ipmi_smic_sm.c:437:
+			else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#3200: FILE: drivers/char/ipmi/ipmi_smic_sm.c:444:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#3200: FILE: drivers/char/ipmi/ipmi_smic_sm.c:444:
+		else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3207: FILE: drivers/char/ipmi/ipmi_smic_sm.c:451:
+			start_error_recovery (smic,

WARNING:SPLIT_STRING: quoted string split across lines
#3209: FILE: drivers/char/ipmi/ipmi_smic_sm.c:453:
+					      "state = SMIC_WRITE_END, "
+					      "status != SMIC_SC_SMS_WR_END");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3216: FILE: drivers/char/ipmi/ipmi_smic_sm.c:460:
+				printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#3221: FILE: drivers/char/ipmi/ipmi_smic_sm.c:465:
+					     "state = SMIC_WRITE_END, "
+					     "data != SUCCESS");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3223: FILE: drivers/char/ipmi/ipmi_smic_sm.c:467:
+			return SI_SM_CALL_WITH_DELAY;
+		} else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#3230: FILE: drivers/char/ipmi/ipmi_smic_sm.c:474:
+                   can continue */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3230: FILE: drivers/char/ipmi/ipmi_smic_sm.c:474:
+		/* we must wait for RX_DATA_READY to be set before we
+                   can continue */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3230: FILE: drivers/char/ipmi/ipmi_smic_sm.c:474:
+                   can continue */

WARNING:SPLIT_STRING: quoted string split across lines
#3244: FILE: drivers/char/ipmi/ipmi_smic_sm.c:488:
+					     "state = SMIC_READ_START, "
+					     "status != SMIC_SC_SMS_RD_START");

ERROR:CODE_INDENT: code indent should use tabs where possible
#3260: FILE: drivers/char/ipmi/ipmi_smic_sm.c:504:
+                   --> clean up */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3260: FILE: drivers/char/ipmi/ipmi_smic_sm.c:504:
+		/* smic tells us that this is the last byte to be read
+                   --> clean up */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3260: FILE: drivers/char/ipmi/ipmi_smic_sm.c:504:
+                   --> clean up */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3278: FILE: drivers/char/ipmi/ipmi_smic_sm.c:522:
+			start_error_recovery(

WARNING:SPLIT_STRING: quoted string split across lines
#3281: FILE: drivers/char/ipmi/ipmi_smic_sm.c:525:
+				"state = SMIC_READ_NEXT, "
+				"status != SMIC_SC_SMS_RD_(NEXT|END)");

WARNING:SPLIT_STRING: quoted string split across lines
#3290: FILE: drivers/char/ipmi/ipmi_smic_sm.c:534:
+					     "state = SMIC_READ_END, "
+					     "status != SMIC_SC_SMS_READY");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3297: FILE: drivers/char/ipmi/ipmi_smic_sm.c:541:
+				printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#3302: FILE: drivers/char/ipmi/ipmi_smic_sm.c:546:
+					     "state = SMIC_READ_END, "
+					     "data != SUCCESS");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3304: FILE: drivers/char/ipmi/ipmi_smic_sm.c:548:
+			return SI_SM_CALL_WITH_DELAY;
+		} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3315: FILE: drivers/char/ipmi/ipmi_smic_sm.c:559:
+			printk(KERN_WARNING "smic->state = %d\n", smic->state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3327: FILE: drivers/char/ipmi/ipmi_smic_sm.c:571:
+	/* It's impossible for the SMIC fnags register to be all 1's,
+	   (assuming a properly functioning, self-initialized BMC)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3329: FILE: drivers/char/ipmi/ipmi_smic_sm.c:573:
+	   test that first. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3331: FILE: drivers/char/ipmi/ipmi_smic_sm.c:575:
+^I^Ireturn 1; $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3346: FILE: drivers/char/ipmi/ipmi_smic_sm.c:590:
+struct si_sm_handlers smic_smi_handlers =
+{

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3363: FILE: drivers/char/ipmi/Kconfig:46:
+config IPMI_SI
+       tristate 'IPMI System Interface handler'
+       depends on IPMI_HANDLER
+       help
+         Provides a driver for System Interfaces (KCS, SMIC, BT).
+	 Currently, only KCS and SMIC are supported.  If
+	 you are using IPMI, you should probably say "y" here.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3401: FILE: drivers/char/ipmi/Makefile:18:
+^I$(LD) -r -o $@ $(ipmi_si_drv-objs) $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301536.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 299 errors, 373 warnings, 248 checks, 3319 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301536.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
