WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
- routine aio.c/io_readv_writev, which borrows heavily from do_readv_writev. 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: include/linux/aio_abi.h:44:
+^IIOCB_CMD_PREADV = 7, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: include/linux/aio_abi.h:71:
+       ^Iconst struct iovec^I*vec;           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: include/linux/aio_abi.h:71:
+       ^Iconst struct iovec^I*vec;           $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: include/linux/aio_abi.h:71:
+       ^Iconst struct iovec^I*vec;           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: include/linux/aio_abi.h:71:
+       ^Iconst struct iovec^I*vec;           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: include/linux/aio_abi.h:72:
+       ^I__s32^I^I^Inr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: include/linux/aio_abi.h:72:
+       ^I__s32^I^I^Inr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: include/linux/aio_abi.h:72:
+       ^I__s32^I^I^Inr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: include/linux/aio_abi.h:73:
+       ^I__s64^I^I^Ioffset;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: include/linux/aio_abi.h:73:
+       ^I__s64^I^I^Ioffset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: include/linux/aio_abi.h:73:
+       ^I__s64^I^I^Ioffset;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: include/linux/aio_abi.h:74:
+}; $

WARNING:SPACING: Unnecessary space before function pointer arguments
#113: FILE: include/linux/fs.h:766:
+	ssize_t (*aio_readv) (struct kiocb *, const struct iovec *, unsigned long , loff_t *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#113: FILE: include/linux/fs.h:766:
+	ssize_t (*aio_readv) (struct kiocb *, const struct iovec *, unsigned long , loff_t *);
 	                                                                          ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#113: FILE: include/linux/fs.h:766:
+	ssize_t (*aio_readv) (struct kiocb *, const struct iovec *, unsigned long , loff_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#113: FILE: include/linux/fs.h:766:
+	ssize_t (*aio_readv) (struct kiocb *, const struct iovec *, unsigned long , loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#113: FILE: include/linux/fs.h:766:
+	ssize_t (*aio_readv) (struct kiocb *, const struct iovec *, unsigned long , loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#113: FILE: include/linux/fs.h:766:
+	ssize_t (*aio_readv) (struct kiocb *, const struct iovec *, unsigned long , loff_t *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#114: FILE: include/linux/fs.h:767:
+	ssize_t (*aio_writev) (struct kiocb *, const struct iovec *, unsigned long, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#114: FILE: include/linux/fs.h:767:
+	ssize_t (*aio_writev) (struct kiocb *, const struct iovec *, unsigned long, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#114: FILE: include/linux/fs.h:767:
+	ssize_t (*aio_writev) (struct kiocb *, const struct iovec *, unsigned long, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#114: FILE: include/linux/fs.h:767:
+	ssize_t (*aio_writev) (struct kiocb *, const struct iovec *, unsigned long, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#114: FILE: include/linux/fs.h:767:
+	ssize_t (*aio_writev) (struct kiocb *, const struct iovec *, unsigned long, loff_t *);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'iocb' may be better as '(iocb)' to avoid precedence issues
#132: FILE: fs/aio.c:996:
+#define iov(iocb) iocb->u.v.vec

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'iocb' may be better as '(iocb)' to avoid precedence issues
#133: FILE: fs/aio.c:997:
+#define nr_segs(iocb) iocb->u.v.nr

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: fs/aio.c:999:
+static ssize_t io_readv_writev(int type, struct kiocb *req, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: fs/aio.c:1000:
+static ssize_t io_readv_writev(int type, struct kiocb *req, 
+	const struct iovec * vector, unsigned long nr_segs, loff_t pos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: fs/aio.c:1000:
+	const struct iovec * vector, unsigned long nr_segs, loff_t pos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#140: FILE: fs/aio.c:1004:
+	struct iovec *iov=iovstack;
 	                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr_segs > UIO_MAXIOV'
#156: FILE: fs/aio.c:1020:
+	if ((nr_segs > UIO_MAXIOV) || (nr_segs <= 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr_segs <= 0'
#156: FILE: fs/aio.c:1020:
+	if ((nr_segs > UIO_MAXIOV) || (nr_segs <= 0))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#161: FILE: fs/aio.c:1025:
+		iov = kmalloc(nr_segs*sizeof(struct iovec), GFP_KERNEL);
 		                     ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#161: FILE: fs/aio.c:1025:
+		iov = kmalloc(nr_segs*sizeof(struct iovec), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#166: FILE: fs/aio.c:1030:
+	if (copy_from_user(iov, vector, nr_segs*sizeof(*vector))) {
 	                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: fs/aio.c:1037:
+^I * We should -EINVAL if an element length is not >= 0 or if $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: fs/aio.c:1047:
+		void * base = iov[seg].iov_base;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: fs/aio.c:1055:
+^I^Iif (unlikely(!access_ok(type == IOCB_CMD_PREAD ?  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: fs/aio.c:1067:
+^Iret = locks_verify_area((type == IOCB_CMD_PREADV $

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: fs/aio.c:1073:
+ ^Iif (type == IOCB_CMD_PREADV)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: fs/aio.c:1073:
+ ^Iif (type == IOCB_CMD_PREADV)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: fs/aio.c:1073:
+ ^Iif (type == IOCB_CMD_PREADV)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: fs/aio.c:1075:
+^Ielse $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == IOCB_CMD_PREADV'
#217: FILE: fs/aio.c:1081:
+	if ((ret + (type == IOCB_CMD_PREADV)) > 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: fs/aio.c:1083:
+		dnotify_parent(file->f_dentry,
+			(type == IOCB_CMD_PREADV) ? DN_MODIFY : DN_ACCESS);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: fs/aio.c:1169:
+^I^I^Iret = io_readv_writev(IOCB_CMD_PREADV, req, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: fs/aio.c:1170:
+			ret = io_readv_writev(IOCB_CMD_PREADV, req, 
+				iov(iocb), nr_segs(iocb), iocb->aio_offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: fs/aio.c:1178:
+^I^I^Iret = io_readv_writev(IOCB_CMD_PWRITEV, req, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: fs/aio.c:1179:
+			ret = io_readv_writev(IOCB_CMD_PWRITEV, req, 
+				iov(iocb), nr_segs(iocb), iocb->aio_offset);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 20 warnings, 11 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
