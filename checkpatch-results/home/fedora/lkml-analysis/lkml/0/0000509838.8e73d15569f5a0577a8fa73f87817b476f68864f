ERROR:TRAILING_WHITESPACE: trailing whitespace
#46: FILE: devinet.c:23:
+ *^I^IMatthias Andree:^Iin devinet_ioctl, compare label and $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: devinet.c:427:
+        /* save original address for comparison */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: devinet.c:428:
+ ^Imemcpy(&sin_orig, sin, sizeof(*sin));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#67: FILE: devinet.c:428:
+ ^Imemcpy(&sin_orig, sin, sizeof(*sin));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: devinet.c:428:
+ ^Imemcpy(&sin_orig, sin, sizeof(*sin));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: devinet.c:429:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#91: FILE: devinet.c:493:
+			/* note: we only do this for a limited set of ioctls
+			   and only if the original address family was AF_INET.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#92: FILE: devinet.c:494:
+			   This is checked above. */

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#93: FILE: devinet.c:495:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#93: FILE: devinet.c:495:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#93: FILE: devinet.c:495:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			                                 ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#93: FILE: devinet.c:495:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#93: FILE: devinet.c:495:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			                                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#93: FILE: devinet.c:495:
+			for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next) {
 			                                                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sin_orig.sin_addr.s_addr == ifa->ifa_address'
#94: FILE: devinet.c:496:
+				if ((strcmp(ifr.ifr_name, ifa->ifa_label) == 0)
+				    && (sin_orig.sin_addr.s_addr == ifa->ifa_address)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#95: FILE: devinet.c:497:
+				if ((strcmp(ifr.ifr_name, ifa->ifa_label) == 0)
+				    && (sin_orig.sin_addr.s_addr == ifa->ifa_address)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: devinet.c:503:
+^I^I   4.3BSD-style and passed in junk so we fall back to $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#101: FILE: devinet.c:503:
+		/* we didn't get a match, maybe the application is
+		   4.3BSD-style and passed in junk so we fall back to 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#102: FILE: devinet.c:504:
+		   comparing just the label */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: devinet.c:505:
+^I^Iif (ifa == NULL) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#103: FILE: devinet.c:505:
+		if (ifa == NULL) 
[...]
 		for (ifap=&in_dev->ifa_list; (ifa=*ifap) != NULL; ifap=&ifa->ifa_next)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ifa"
#103: FILE: devinet.c:505:
+		if (ifa == NULL) 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000509838.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 7 warnings, 3 checks, 61 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000509838.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
