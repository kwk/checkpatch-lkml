WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -uNr -Xdontdiff ../master/linux-2.4.10-pre3/fs/freevxfs/vxfs_bmap.c linux/fs/freevxfs/vxfs_bmap.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#49: FILE: fs/freevxfs/vxfs_bmap.c:30:
+#ident "$Id: vxfs_bmap.c,v 1.23 2001/07/05 19:48:03 hch Exp hch $"

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#61: FILE: fs/freevxfs/vxfs_extern.h:33:
+#ident "$Id: vxfs_extern.h,v 1.21 2001/08/07 16:13:30 hch Exp hch $"

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#70: FILE: fs/freevxfs/vxfs_extern.h:58:
+extern struct inode *		vxfs_get_fake_inode(struct super_block *,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: fs/freevxfs/vxfs_extern.h:58:
+extern struct inode *		vxfs_get_fake_inode(struct super_block *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#70: FILE: fs/freevxfs/vxfs_extern.h:58:
+extern struct inode *		vxfs_get_fake_inode(struct super_block *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vxfs_inode_info *' should also have an identifier name
#70: FILE: fs/freevxfs/vxfs_extern.h:58:
+extern struct inode *		vxfs_get_fake_inode(struct super_block *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: fs/freevxfs/vxfs_extern.h:59:
+extern struct inode *		vxfs_get_fake_inode(struct super_block *,
 					struct vxfs_inode_info *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: fs/freevxfs/vxfs_extern.h:60:
+extern void			vxfs_put_fake_inode(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#72: FILE: fs/freevxfs/vxfs_extern.h:60:
+extern void			vxfs_put_fake_inode(struct inode *);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#84: FILE: fs/freevxfs/vxfs_fshead.c:30:
+#ident "$Id: vxfs_fshead.c,v 1.19 2001/08/07 16:14:10 hch Exp hch $"

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#93: FILE: fs/freevxfs/vxfs_fshead.c:127:
+	if (!(infp->vsi_fship = vxfs_get_fake_inode(sbp, vip))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#102: FILE: fs/freevxfs/vxfs_fshead.c:151:
+	if (!tip || ((infp->vsi_stilist = vxfs_get_fake_inode(sbp, tip)) == NULL)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#111: FILE: fs/freevxfs/vxfs_fshead.c:161:
+	if (!tip || ((infp->vsi_ilist = vxfs_get_fake_inode(sbp, tip)) == NULL)) {

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#123: FILE: fs/freevxfs/vxfs_inode.c:30:
+#ident "$Id: vxfs_inode.c,v 1.37 2001/08/07 16:13:30 hch Exp hch $"

WARNING:TYPO_SPELLING: 'asssociated' may be misspelled - perhaps 'associated'?
#170: FILE: fs/freevxfs/vxfs_inode.c:281:
+ *  vxfs_put_fake_inode frees all data asssociated with @ip.
                                        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#175: FILE: fs/freevxfs/vxfs_inode.c:286:
+	iput(ip);
 	^^^^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#190: FILE: fs/freevxfs/vxfs_olt.c:30:
+#ident "$Id: vxfs_olt.c,v 1.9 2001/08/07 16:14:45 hch Exp hch $"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: fs/freevxfs/vxfs_olt.c:89:
+	bp = bread(sbp->s_dev,
+			vxfs_oblock(sbp, infp->vsi_oltext, bsize), bsize);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#227: FILE: fs/freevxfs/vxfs_super.c:30:
+#ident "$Id: vxfs_super.c,v 1.26 2001/08/07 16:13:30 hch Exp hch $"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#273: FILE: fs/freevxfs/vxfs_super.c:171:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#283: FILE: fs/freevxfs/vxfs_super.c:180:
+			printk(KERN_NOTICE "vxfs: WRONG superblock magic\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#290: FILE: fs/freevxfs/vxfs_super.c:185:
+		printk(KERN_NOTICE "vxfs: unsupported VxFS version (%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#317: FILE: fs/freevxfs/vxfs_super.c:217:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#337: FILE: fs/freevxfs/vxfs_super.c:237:
+		printk(KERN_WARNING "vxfs: unable to get root dentry.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 17 warnings, 4 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
