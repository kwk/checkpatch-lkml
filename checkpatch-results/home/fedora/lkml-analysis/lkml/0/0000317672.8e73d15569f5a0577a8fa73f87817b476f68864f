WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
DVB: - complete revamp of the original driver: code beautification + linux coding sytle, full diseqc support, hardware filtering support, support for different card revisions and lots of other stuff. 

WARNING:TYPO_SPELLING: 'sytle' may be misspelled - perhaps 'style'?
#25: 
DVB: - complete revamp of the original driver: code beautification + linux coding sytle, full diseqc support, hardware filtering support, support for different card revisions and lots of other stuff. 
                                                                                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#37: FILE: drivers/media/dvb/b2c2/skystar2.c:8:
+ * FIX: FULL soft DiSEqC for skystar2 (FlexCopII rev 130) VP310 equipped $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#39: FILE: drivers/media/dvb/b2c2/skystar2.c:10:
+ * ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#39: FILE: drivers/media/dvb/b2c2/skystar2.c:10:
+ * ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#43: FILE: drivers/media/dvb/b2c2/skystar2.c:14:
+ *       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#44: FILE: drivers/media/dvb/b2c2/skystar2.c:15:
+ * Added hardware filtering support, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#66: FILE: drivers/media/dvb/b2c2/skystar2.c:56:
+#define dprintk(x...)	do { if (debug>=1) printk(x); } while (0)

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#66: FILE: drivers/media/dvb/b2c2/skystar2.c:56:
+#define dprintk(x...)	do { if (debug>=1) printk(x); } while (0)
                      	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#67: FILE: drivers/media/dvb/b2c2/skystar2.c:57:
+#define ddprintk(x...)	do { if (debug>=2) printk(x); } while (0)

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#67: FILE: drivers/media/dvb/b2c2/skystar2.c:57:
+#define ddprintk(x...)	do { if (debug>=2) printk(x); } while (0)
                       	              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#76: FILE: drivers/media/dvb/b2c2/skystar2.c:63:
+#define MAX_N_HW_FILTERS	(6+32)
                         	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: drivers/media/dvb/b2c2/skystar2.c:117:
+#define write_reg_dw(adapter,reg,value) writel(value, adapter->io_mem + reg)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: drivers/media/dvb/b2c2/skystar2.c:117:
+#define write_reg_dw(adapter,reg,value) writel(value, adapter->io_mem + reg)
                                 ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'adapter' may be better as '(adapter)' to avoid precedence issues
#142: FILE: drivers/media/dvb/b2c2/skystar2.c:117:
+#define write_reg_dw(adapter,reg,value) writel(value, adapter->io_mem + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#142: FILE: drivers/media/dvb/b2c2/skystar2.c:117:
+#define write_reg_dw(adapter,reg,value) writel(value, adapter->io_mem + reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: drivers/media/dvb/b2c2/skystar2.c:118:
+#define read_reg_dw(adapter,reg) readl(adapter->io_mem + reg)
                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'adapter' may be better as '(adapter)' to avoid precedence issues
#143: FILE: drivers/media/dvb/b2c2/skystar2.c:118:
+#define read_reg_dw(adapter,reg) readl(adapter->io_mem + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#143: FILE: drivers/media/dvb/b2c2/skystar2.c:118:
+#define read_reg_dw(adapter,reg) readl(adapter->io_mem + reg)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#203: FILE: drivers/media/dvb/b2c2/skystar2.c:158:
+static void i2c_main_setup(u32 device, u32 chip_addr, u8 op, u8 addr, u32 value, u32 len, u32 *command)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#212: FILE: drivers/media/dvb/b2c2/skystar2.c:168:
+static int flex_i2c_read4(struct adapter *adapter, u32 device, u32 chip_addr, u16 addr, u8 *buf, u8 len)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#237: FILE: drivers/media/dvb/b2c2/skystar2.c:193:
+static int flex_i2c_write4(struct adapter *adapter, u32 device, u32 chip_addr, u32 addr, u8 *buf, u8 len)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#269: FILE: drivers/media/dvb/b2c2/skystar2.c:229:
+	ddprintk("%s:\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#294: FILE: drivers/media/dvb/b2c2/skystar2.c:258:
+	ddprintk("%s:\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#313: FILE: drivers/media/dvb/b2c2/skystar2.c:289:
+	ddprintk("%s: %d messages to transfer\n", __FUNCTION__, num);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#315: FILE: drivers/media/dvb/b2c2/skystar2.c:291:
 		for (i = 0; i < num; i++) {
+		ddprintk("message %d: flags=0x%x, addr=0x%x, buf=0x%x, len=%d \n", i,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#319: FILE: drivers/media/dvb/b2c2/skystar2.c:292:
+		ddprintk("message %d: flags=0x%x, addr=0x%x, buf=0x%x, len=%d \n", i,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#325: FILE: drivers/media/dvb/b2c2/skystar2.c:296:
+		if ((msgs[i].addr != 0x0e) && (msgs[i].addr != 0x68) && (msgs[i].addr != 0x61)) {
 		up(&tmp->i2c_sem);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[i].addr != 0x0e'
#325: FILE: drivers/media/dvb/b2c2/skystar2.c:296:
+		if ((msgs[i].addr != 0x0e) && (msgs[i].addr != 0x68) && (msgs[i].addr != 0x61)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[i].addr != 0x68'
#325: FILE: drivers/media/dvb/b2c2/skystar2.c:296:
+		if ((msgs[i].addr != 0x0e) && (msgs[i].addr != 0x68) && (msgs[i].addr != 0x61)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[i].addr != 0x61'
#325: FILE: drivers/media/dvb/b2c2/skystar2.c:296:
+		if ((msgs[i].addr != 0x0e) && (msgs[i].addr != 0x68) && (msgs[i].addr != 0x61)) {

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#336: FILE: drivers/media/dvb/b2c2/skystar2.c:304:
+	if ((num == 2) && (msgs[0].flags == 0) && (msgs[1].flags == I2C_M_RD) && (msgs[0].buf != NULL) && (msgs[1].buf != NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num == 2'
#336: FILE: drivers/media/dvb/b2c2/skystar2.c:304:
+	if ((num == 2) && (msgs[0].flags == 0) && (msgs[1].flags == I2C_M_RD) && (msgs[0].buf != NULL) && (msgs[1].buf != NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[0].flags == 0'
#336: FILE: drivers/media/dvb/b2c2/skystar2.c:304:
+	if ((num == 2) && (msgs[0].flags == 0) && (msgs[1].flags == I2C_M_RD) && (msgs[0].buf != NULL) && (msgs[1].buf != NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[1].flags == I2C_M_RD'
#336: FILE: drivers/media/dvb/b2c2/skystar2.c:304:
+	if ((num == 2) && (msgs[0].flags == 0) && (msgs[1].flags == I2C_M_RD) && (msgs[0].buf != NULL) && (msgs[1].buf != NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[0].buf != NULL'
#336: FILE: drivers/media/dvb/b2c2/skystar2.c:304:
+	if ((num == 2) && (msgs[0].flags == 0) && (msgs[1].flags == I2C_M_RD) && (msgs[0].buf != NULL) && (msgs[1].buf != NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[1].buf != NULL'
#336: FILE: drivers/media/dvb/b2c2/skystar2.c:304:
+	if ((num == 2) && (msgs[0].flags == 0) && (msgs[1].flags == I2C_M_RD) && (msgs[0].buf != NULL) && (msgs[1].buf != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msgs[0].buf"
#336: FILE: drivers/media/dvb/b2c2/skystar2.c:304:
+	if ((num == 2) && (msgs[0].flags == 0) && (msgs[1].flags == I2C_M_RD) && (msgs[0].buf != NULL) && (msgs[1].buf != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msgs[1].buf"
#336: FILE: drivers/media/dvb/b2c2/skystar2.c:304:
+	if ((num == 2) && (msgs[0].flags == 0) && (msgs[1].flags == I2C_M_RD) && (msgs[0].buf != NULL) && (msgs[1].buf != NULL)) {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#339: FILE: drivers/media/dvb/b2c2/skystar2.c:306:
+		ret = flex_i2c_read(tmp, 0x10000000, msgs[0].addr, msgs[0].buf[0], msgs[1].buf, msgs[1].len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#350: FILE: drivers/media/dvb/b2c2/skystar2.c:311:
+			printk("%s: read error !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#350: FILE: drivers/media/dvb/b2c2/skystar2.c:311:
+			printk("%s: read error !\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#353: FILE: drivers/media/dvb/b2c2/skystar2.c:314:
+				printk("message %d: flags=0x%x, addr=0x%x, buf=0x%x, len=%d \n", i,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#353: FILE: drivers/media/dvb/b2c2/skystar2.c:314:
+				printk("message %d: flags=0x%x, addr=0x%x, buf=0x%x, len=%d \n", i,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[i].flags != 0'
#370: FILE: drivers/media/dvb/b2c2/skystar2.c:326:
+		if ((msgs[i].flags != 0) || (msgs[i].buf == NULL) || (msgs[i].len < 2))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[i].buf == NULL'
#370: FILE: drivers/media/dvb/b2c2/skystar2.c:326:
+		if ((msgs[i].flags != 0) || (msgs[i].buf == NULL) || (msgs[i].len < 2))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[i].len < 2'
#370: FILE: drivers/media/dvb/b2c2/skystar2.c:326:
+		if ((msgs[i].flags != 0) || (msgs[i].buf == NULL) || (msgs[i].len < 2))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msgs[i].buf"
#370: FILE: drivers/media/dvb/b2c2/skystar2.c:326:
+		if ((msgs[i].flags != 0) || (msgs[i].buf == NULL) || (msgs[i].len < 2))

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#373: FILE: drivers/media/dvb/b2c2/skystar2.c:329:
+		ret = flex_i2c_write(tmp, 0x10000000, msgs[i].addr, msgs[i].buf[0], &msgs[i].buf[1], msgs[i].len - 1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#379: FILE: drivers/media/dvb/b2c2/skystar2.c:334:
+			printk("%s: write error %i !\n", __FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#379: FILE: drivers/media/dvb/b2c2/skystar2.c:334:
+			printk("%s: write error %i !\n", __FUNCTION__, ret);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#381: FILE: drivers/media/dvb/b2c2/skystar2.c:336:
+			printk("message %d: flags=0x%x, addr=0x%x, buf[0]=0x%x, len=%d \n", i,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#381: FILE: drivers/media/dvb/b2c2/skystar2.c:336:
+			printk("message %d: flags=0x%x, addr=0x%x, buf[0]=0x%x, len=%d \n", i,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#395: FILE: drivers/media/dvb/b2c2/skystar2.c:345:
+	printk("%s: unknown command format !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#395: FILE: drivers/media/dvb/b2c2/skystar2.c:345:
+	printk("%s: unknown command format !\n", __FUNCTION__);

CHECK:CAMELCASE: Avoid CamelCase: <sram_writeChunk>
#575: FILE: drivers/media/dvb/b2c2/skystar2.c:504:
+static void sram_writeChunk(struct adapter *adapter, u32 addr, u8 *buf, u16 len)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BRACES: braces {} are not necessary for single statement blocks
#583: FILE: drivers/media/dvb/b2c2/skystar2.c:510:
+	if (adapter->dw_sram_type == 0x20000) {
+		bank = (addr & 0x18000) << 0x0d;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <sram_readChunk>
#601: FILE: drivers/media/dvb/b2c2/skystar2.c:524:
+static void sram_readChunk(struct adapter *adapter, u32 addr, u8 *buf, u16 len)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#609: FILE: drivers/media/dvb/b2c2/skystar2.c:530:
+	if (adapter->dw_sram_type == 0x20000) {
+		bank = (addr & 0x18000) << 0x0d;
 	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#637: FILE: drivers/media/dvb/b2c2/skystar2.c:554:
+		if ((addr >> 0x0f) != ((addr + len - 1) >> 0x0f)) {
+			length = (((addr >> 0x0f) + 1) << 0x0f) - addr;
 		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#661: FILE: drivers/media/dvb/b2c2/skystar2.c:576:
+		if ((addr >> 0x0f) != ((addr + len - 1) >> 0x0f)) {
+			length = (((addr >> 0x0f) + 1) << 0x0f) - addr;
 		}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#701: FILE: drivers/media/dvb/b2c2/skystar2.c:606:
+		ddprintk("%s: dw_sram_type = %x\n", __FUNCTION__, adapter->dw_sram_type);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#709: FILE: drivers/media/dvb/b2c2/skystar2.c:612:
+		ddprintk("%s: dw_sram_type = %x\n", __FUNCTION__, adapter->dw_sram_type);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#749: FILE: drivers/media/dvb/b2c2/skystar2.c:641:
+	dprintk("%s: wrote 0xa5, read 0x%2x\n", __FUNCTION__, tmp2);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#775: FILE: drivers/media/dvb/b2c2/skystar2.c:659:
+	dprintk("%s: wrote 0x5a, read 0x%2x\n", __FUNCTION__, tmp2);

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#962: FILE: drivers/media/dvb/b2c2/skystar2.c:810:
+static int eeprom_lrc_write(struct adapter *adapter, u32 addr, u32 len, u8 *wbuf, u8 *rbuf, int retries)

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1113: FILE: drivers/media/dvb/b2c2/skystar2.c:946:
+	dprintk("%s: id=%d op=%d\n", __FUNCTION__, id, op);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1116: FILE: drivers/media/dvb/b2c2/skystar2.c:949:
+		u32 mask = (0x00000001 << id);
+		write_reg_bitfield(adapter, 0x208, mask, op ? mask : 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1138: FILE: drivers/media/dvb/b2c2/skystar2.c:961:
+	dprintk("%s: id=%d  pid=%d\n", __FUNCTION__, id, pid);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1142: FILE: drivers/media/dvb/b2c2/skystar2.c:965:
+		dprintk("%s: id=%d  addr=%x %c  pid=%d\n", __FUNCTION__, id, adr, (id & 1) ? 'h' : 'l', pid);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1142: FILE: drivers/media/dvb/b2c2/skystar2.c:965:
+		int shift = (id & 1) ? 16 : 0;
+		dprintk("%s: id=%d  addr=%x %c  pid=%d\n", __FUNCTION__, id, adr, (id & 1) ? 'h' : 'l', pid);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1142: FILE: drivers/media/dvb/b2c2/skystar2.c:965:
+		dprintk("%s: id=%d  addr=%x %c  pid=%d\n", __FUNCTION__, id, adr, (id & 1) ? 'h' : 'l', pid);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1387: FILE: drivers/media/dvb/b2c2/skystar2.c:1053:
+/*
+static int pid_get_group_pid(struct adapter *adapter)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1421: FILE: drivers/media/dvb/b2c2/skystar2.c:1065:
+/*
+static void reset_hardware_pid_filter(struct adapter *adapter)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1470: FILE: drivers/media/dvb/b2c2/skystar2.c:1093:
+		dprintk("%s: setting filter %d to 0x1fff\n", __FUNCTION__, i);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1486: FILE: drivers/media/dvb/b2c2/skystar2.c:1104:
+	dprintk("%s:\n", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1490: FILE: drivers/media/dvb/b2c2/skystar2.c:1108:
+/*
+	filter_enable_mask_filter(adapter, 1);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1498: FILE: drivers/media/dvb/b2c2/skystar2.c:1114:
+	dprintk("%s:\n", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1502: FILE: drivers/media/dvb/b2c2/skystar2.c:1118:
+/*
+	filter_enable_mask_filter(adapter, 1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1541: FILE: drivers/media/dvb/b2c2/skystar2.c:1135:
+/* The specified PID has to be let through the
+   hw filters.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1545: FILE: drivers/media/dvb/b2c2/skystar2.c:1139:
+   Returns 1 on success, -1 on error */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1584: FILE: drivers/media/dvb/b2c2/skystar2.c:1153:
+			dprintk("%s: pid=%d searching slot=%d\n", __FUNCTION__, pid, i);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1586: FILE: drivers/media/dvb/b2c2/skystar2.c:1155:
+				dprintk("%s: pid=%d slot=%d\n", __FUNCTION__, pid, i);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1615: FILE: drivers/media/dvb/b2c2/skystar2.c:1164:
+	dprintk("%s: pid=%d whole_bandwidth\n", __FUNCTION__, pid);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1651: FILE: drivers/media/dvb/b2c2/skystar2.c:1174:
+	dprintk("%s: pid=%d\n", __FUNCTION__, pid);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1665: FILE: drivers/media/dvb/b2c2/skystar2.c:1182:
+			dprintk("%s: pid=%d searching slot=%d\n", __FUNCTION__, pid, i);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1667: FILE: drivers/media/dvb/b2c2/skystar2.c:1184:
+				dprintk("%s: pid=%d slot=%d\n", __FUNCTION__, pid, i);

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#1695: FILE: drivers/media/dvb/b2c2/skystar2.c:1192:
+	/* if we have not used a filter, this pid depended on whole bandwith */
 	                                                            ^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1696: FILE: drivers/media/dvb/b2c2/skystar2.c:1193:
+	dprintk("%s: pid=%d whole_bandwidth\n", __FUNCTION__, pid);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1706: FILE: drivers/media/dvb/b2c2/skystar2.c:1199:
+/* Adds a PID to the filters.
+   Adding a pid more than once is possible, we keep reference counts.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1708: FILE: drivers/media/dvb/b2c2/skystar2.c:1201:
+   Returns 1 on success, -1 on error */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1775: FILE: drivers/media/dvb/b2c2/skystar2.c:1246:
+				adapter->pid_list[i]=adapter->pid_list[adapter->pid_count];
 				                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1787: FILE: drivers/media/dvb/b2c2/skystar2.c:1257:
 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1836: FILE: drivers/media/dvb/b2c2/skystar2.c:1321:
+       the first 30 bits of register 0x00c contain the address of the second$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1864: FILE: drivers/media/dvb/b2c2/skystar2.c:1355:
+		subbuf1 = ((adapter->dmaq1.bus_addr + adapter->dmaq1.buffer_size / 2) & 0xfffffffc) | 1;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1883: FILE: drivers/media/dvb/b2c2/skystar2.c:1369:
+		dprintk("%s: counter = 0x%x\n", __FUNCTION__, adapter->dmaq1.bus_addr & 0xfffffffc);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1916: FILE: drivers/media/dvb/b2c2/skystar2.c:1395:
+		subbuf1 = ((adapter->dmaq2.bus_addr + adapter->dmaq2.buffer_size / 2) & 0xfffffffc) | 1;

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1974: FILE: drivers/media/dvb/b2c2/skystar2.c:1453:
+			write_reg_dw(adapter, 0x00c, (adapter->dmaq1.bus_addr + adapter->dmaq1.buffer_size / 2) | 1);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1987: FILE: drivers/media/dvb/b2c2/skystar2.c:1463:
+			write_reg_dw(adapter, 0x00c, (adapter->dmaq1.bus_addr + adapter->dmaq1.buffer_size / 2) | 1);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2015: FILE: drivers/media/dvb/b2c2/skystar2.c:1486:
+		dprintk("%s: stopping dma\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#2040: FILE: drivers/media/dvb/b2c2/skystar2.c:1506:
+			write_reg_dw(adapter, 0x00c, (adapter->dmaq1.bus_addr + adapter->dmaq1.buffer_size / 2) | 1);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#2105: FILE: drivers/media/dvb/b2c2/skystar2.c:1573:
 	if (dma_mask != 0) {
+			dma_start_stop(adapter, dma_mask, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n_cur_dma_counter < 0'
#2140: FILE: drivers/media/dvb/b2c2/skystar2.c:1594:
+	if ((n_cur_dma_counter < 0) || (n_cur_dma_counter > adapter->dmaq1.buffer_size)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n_cur_dma_counter > adapter->dmaq1.buffer_size'
#2140: FILE: drivers/media/dvb/b2c2/skystar2.c:1594:
+	if ((n_cur_dma_counter < 0) || (n_cur_dma_counter > adapter->dmaq1.buffer_size)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2150: FILE: drivers/media/dvb/b2c2/skystar2.c:1601:
+	if (adapter->dmaq1.tail <= n_cur_dma_counter) {
[...]
 	} else {
[...]

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#2156: FILE: drivers/media/dvb/b2c2/skystar2.c:1606:
+		n_num_new_bytes_transferred = (adapter->dmaq1.buffer_size - adapter->dmaq1.tail) + n_cur_dma_counter;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2162: FILE: drivers/media/dvb/b2c2/skystar2.c:1609:
+	ddprintk("%s: n_cur_dma_counter = %d\n", __FUNCTION__, n_cur_dma_counter);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2163: FILE: drivers/media/dvb/b2c2/skystar2.c:1610:
+	ddprintk("%s: dmaq1.tail        = %d\n", __FUNCTION__, adapter->dmaq1.tail);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2164: FILE: drivers/media/dvb/b2c2/skystar2.c:1611:
+	ddprintk("%s: bytes_transferred = %d\n", __FUNCTION__, n_num_new_bytes_transferred);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#2183: FILE: drivers/media/dvb/b2c2/skystar2.c:1624:
+			memcpy(gb_tmp_buffer + (adapter->dmaq1.buffer_size - adapter->dmaq1.tail), adapter->dmaq1.buffer,

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2211: FILE: drivers/media/dvb/b2c2/skystar2.c:1631:
+			dvb_dmx_swfilter_packets(dvbdmx, pb_dma_buf_cur_pos, dw_default_packet_size / 188);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2235: FILE: drivers/media/dvb/b2c2/skystar2.c:1654:
+	ddprintk("%s:\n", __FUNCTION__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2240: FILE: drivers/media/dvb/b2c2/skystar2.c:1658:
+	if (0 == ((value = read_reg_dw(tmp, 0x20c)) & 0x0f)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2271: FILE: drivers/media/dvb/b2c2/skystar2.c:1686:
+	adapter->dmaq1.buffer = pci_alloc_consistent(adapter->pdev, SIZE_OF_BUF_DMA1 + 0x80, &dma_addr);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#2287: FILE: drivers/media/dvb/b2c2/skystar2.c:1698:
+		ddprintk("%s: allocated dma buffer at 0x%p, length=%d\n", __FUNCTION__, adapter->dmaq1.buffer, SIZE_OF_BUF_DMA1);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2287: FILE: drivers/media/dvb/b2c2/skystar2.c:1698:
+		ddprintk("%s: allocated dma buffer at 0x%p, length=%d\n", __FUNCTION__, adapter->dmaq1.buffer, SIZE_OF_BUF_DMA1);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2296: FILE: drivers/media/dvb/b2c2/skystar2.c:1712:
+	adapter->dmaq2.buffer = pci_alloc_consistent(adapter->pdev, SIZE_OF_BUF_DMA2 + 0x80, &dma_addr);

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#2312: FILE: drivers/media/dvb/b2c2/skystar2.c:1724:
+		ddprintk("%s: allocated dma buffer at 0x%p, length=%d\n", __FUNCTION__, adapter->dmaq2.buffer, (int) SIZE_OF_BUF_DMA2);

CHECK:SPACING: No space is necessary after a cast
#2312: FILE: drivers/media/dvb/b2c2/skystar2.c:1724:
+		ddprintk("%s: allocated dma buffer at 0x%p, length=%d\n", __FUNCTION__, adapter->dmaq2.buffer, (int) SIZE_OF_BUF_DMA2);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2312: FILE: drivers/media/dvb/b2c2/skystar2.c:1724:
+		ddprintk("%s: allocated dma buffer at 0x%p, length=%d\n", __FUNCTION__, adapter->dmaq2.buffer, (int) SIZE_OF_BUF_DMA2);

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#2325: FILE: drivers/media/dvb/b2c2/skystar2.c:1735:
+		pci_free_consistent(adapter->pdev, SIZE_OF_BUF_DMA1 + 0x80, adapter->dmaq1.buffer, adapter->dmaq1.bus_addr);

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#2334: FILE: drivers/media/dvb/b2c2/skystar2.c:1745:
+		pci_free_consistent(adapter->pdev, SIZE_OF_BUF_DMA2 + 0x80, adapter->dmaq2.buffer, adapter->dmaq2.bus_addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2389: FILE: drivers/media/dvb/b2c2/skystar2.c:1829:
+^I// FlexCop IIb & III have 6+32 hw filters    $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2405: FILE: drivers/media/dvb/b2c2/skystar2.c:1845:
+	printk("%s: the chip has %i hardware filters", __FILE__, hw_filters);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2417: FILE: drivers/media/dvb/b2c2/skystar2.c:1857:
+		printk(", but only %d will be used because of module option", mod_option_hw_filters);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2417: FILE: drivers/media/dvb/b2c2/skystar2.c:1857:
+		printk(", but only %d will be used because of module option", mod_option_hw_filters);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2419: FILE: drivers/media/dvb/b2c2/skystar2.c:1859:
+	printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2497: FILE: drivers/media/dvb/b2c2/skystar2.c:1914:
+		printk("%s: FlexCopII(rev.130) chip found\n", __FILE__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2500: FILE: drivers/media/dvb/b2c2/skystar2.c:1917:
+		printk("%s: FlexCopIIB(rev.195) chip found\n", __FILE__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2503: FILE: drivers/media/dvb/b2c2/skystar2.c:1920:
+		printk("%s: FlexCopIII(rev.192) chip found\n", __FILE__);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#2506: FILE: drivers/media/dvb/b2c2/skystar2.c:1923:
+		printk("%s: The revision of the FlexCop chip on your card is %d\n", __FILE__, adapter->b2c2_revision);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2506: FILE: drivers/media/dvb/b2c2/skystar2.c:1923:
+		printk("%s: The revision of the FlexCop chip on your card is %d\n", __FILE__, adapter->b2c2_revision);

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#2507: FILE: drivers/media/dvb/b2c2/skystar2.c:1924:
+		printk("%s: This driver works only with FlexCopII(rev.130), FlexCopIIB(rev.195) and FlexCopIII(rev.192).\n", __FILE__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2507: FILE: drivers/media/dvb/b2c2/skystar2.c:1924:
+		printk("%s: This driver works only with FlexCopII(rev.130), FlexCopIIB(rev.195) and FlexCopIII(rev.192).\n", __FILE__);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#2542: FILE: drivers/media/dvb/b2c2/skystar2.c:1951:
+	dprintk("%s sram length = %d, sram type= %x\n", __FUNCTION__, sram_length(adapter), adapter->dw_sram_type);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2542: FILE: drivers/media/dvb/b2c2/skystar2.c:1951:
+	dprintk("%s sram length = %d, sram type= %x\n", __FUNCTION__, sram_length(adapter), adapter->dw_sram_type);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#2563: FILE: drivers/media/dvb/b2c2/skystar2.c:1964:
+		printk("%s MAC address = %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x \n", __FUNCTION__, adapter->mac_addr[0],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2563: FILE: drivers/media/dvb/b2c2/skystar2.c:1964:
+		printk("%s MAC address = %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x \n", __FUNCTION__, adapter->mac_addr[0],

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2563: FILE: drivers/media/dvb/b2c2/skystar2.c:1964:
+		printk("%s MAC address = %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x \n", __FUNCTION__, adapter->mac_addr[0],

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2563: FILE: drivers/media/dvb/b2c2/skystar2.c:1964:
+		printk("%s MAC address = %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x \n", __FUNCTION__, adapter->mac_addr[0],

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#2564: FILE: drivers/media/dvb/b2c2/skystar2.c:1965:
+		       adapter->mac_addr[1], adapter->mac_addr[2], adapter->mac_addr[3], adapter->mac_addr[4], adapter->mac_addr[5],

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2691: FILE: drivers/media/dvb/b2c2/skystar2.c:2090:
 
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2692: FILE: drivers/media/dvb/b2c2/skystar2.c:2091:
+static void diseqc_send_byte(struct adapter *adapter, int data)
 		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#2732: FILE: drivers/media/dvb/b2c2/skystar2.c:2118:
+		if (burst)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2734: FILE: drivers/media/dvb/b2c2/skystar2.c:2120:
+		else {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2736: FILE: drivers/media/dvb/b2c2/skystar2.c:2122:
+			udelay(12500);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:LONG_UDELAY: long udelay - prefer mdelay; see arch/arm/include/asm/delay.h
#2736: FILE: drivers/media/dvb/b2c2/skystar2.c:2122:
+			udelay(12500);

CHECK:SPACING: No space is necessary after a cast
#2752: FILE: drivers/media/dvb/b2c2/skystar2.c:2136:
+		switch ((fe_sec_tone_mode_t) arg) {

CHECK:SPACING: No space is necessary after a cast
#2776: FILE: drivers/media/dvb/b2c2/skystar2.c:2157:
+		send_diseqc_msg(adapter, 0, NULL, (unsigned long) arg);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2786: FILE: drivers/media/dvb/b2c2/skystar2.c:2167:
+static int flexcop_diseqc_ioctl(struct dvb_frontend *fe, unsigned int cmd, void *arg)
 		{

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2813: FILE: drivers/media/dvb/b2c2/skystar2.c:2187:
+			dprintk("%s: FE_SLEEP\n", __FUNCTION__);

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#2819: FILE: drivers/media/dvb/b2c2/skystar2.c:2191:
+			// return -EOPNOTSUPP, to make DVB core also send "FE_SLEEP" command to frontend.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2826: FILE: drivers/media/dvb/b2c2/skystar2.c:2197:
+			dprintk("%s: FE_SET_VOLTAGE\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#2828: FILE: drivers/media/dvb/b2c2/skystar2.c:2199:
+			switch ((fe_sec_voltage_t) arg) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2831: FILE: drivers/media/dvb/b2c2/skystar2.c:2202:
+				dprintk("%s: SEC_VOLTAGE_13, %x\n", __FUNCTION__, SEC_VOLTAGE_13);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2839: FILE: drivers/media/dvb/b2c2/skystar2.c:2210:
+				dprintk("%s: SEC_VOLTAGE_18, %x\n", __FUNCTION__, SEC_VOLTAGE_18);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2853: FILE: drivers/media/dvb/b2c2/skystar2.c:2222:
 
+

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#2908: FILE: drivers/media/dvb/b2c2/skystar2.c:2342:
+	{0x000013d0, 0x00002200, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000},	//FCIII

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317672.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 111 warnings, 33 checks, 2827 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317672.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
