WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
   NTFS: Rename {find,lookup}_attr() to ntfs_attr_{find,lookup}() as well as

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#38: 
   Signed-off-by: Anton Altaparmakov <aia21@cantab.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: fs/ntfs/aops.c:406:
+	if (unlikely(!ntfs_attr_lookup(ni->type, ni->name, ni->name_len,
 			CASE_SENSITIVE, 0, NULL, 0, ctx))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: fs/ntfs/aops.c:1126:
+	if (unlikely(!ntfs_attr_lookup(ni->type, ni->name, ni->name_len,
 			CASE_SENSITIVE, 0, NULL, 0, ctx))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: fs/ntfs/aops.c:1900:
+	if (unlikely(!ntfs_attr_lookup(ni->type, ni->name, ni->name_len,
 			CASE_SENSITIVE, 0, NULL, 0, ctx))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: fs/ntfs/attrib.c:970:
+	if (!ntfs_attr_lookup(ni->type, ni->name, ni->name_len, CASE_SENSITIVE,
+			vcn, NULL, 0, ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: fs/ntfs/attrib.c:1201:
+BOOL ntfs_attr_find(const ATTR_TYPES type, const ntfschar *name,
+		const u32 name_len, const IGNORE_CASE_BOOL ic,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: fs/ntfs/attrib.c:1460:
+static BOOL ntfs_external_attr_find(const ATTR_TYPES type,
+		const ntfschar *name, const u32 name_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: fs/ntfs/attrib.c:1730:
+BOOL ntfs_attr_lookup(const ATTR_TYPES type, const ntfschar *name,
 		const u32 name_len, const IGNORE_CASE_BOOL ic,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#356: FILE: fs/ntfs/attrib.h:84:
+extern BOOL ntfs_attr_find(const ATTR_TYPES type, const ntfschar *name,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: fs/ntfs/attrib.h:85:
+extern BOOL ntfs_attr_find(const ATTR_TYPES type, const ntfschar *name,
 		const u32 name_len, const IGNORE_CASE_BOOL ic, const u8 *val,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: fs/ntfs/attrib.h:89:
+BOOL ntfs_attr_lookup(const ATTR_TYPES type, const ntfschar *name,
 		const u32 name_len, const IGNORE_CASE_BOOL ic,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: fs/ntfs/dir.c:110:
+	if (!ntfs_attr_lookup(AT_INDEX_ROOT, I30, 4, CASE_SENSITIVE, 0, NULL,
+			0, ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: fs/ntfs/dir.c:659:
+	if (!ntfs_attr_lookup(AT_INDEX_ROOT, I30, 4, CASE_SENSITIVE, 0, NULL,
+			0, ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: fs/ntfs/dir.c:1187:
+	if (unlikely(!ntfs_attr_lookup(AT_INDEX_ROOT, I30, 4, CASE_SENSITIVE,
+			0, NULL, 0, ctx))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: fs/ntfs/index.c:172:
+	if (!ntfs_attr_lookup(AT_INDEX_ROOT, idx_ni->name, idx_ni->name_len,
 			CASE_SENSITIVE, 0, NULL, 0, actx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: fs/ntfs/inode.c:612:
+	if (!ntfs_attr_lookup(AT_STANDARD_INFORMATION, NULL, 0, 0, 0, NULL, 0,
 			ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: fs/ntfs/inode.c:738:
+		if (!ntfs_attr_lookup(AT_INDEX_ROOT, I30, 4, CASE_SENSITIVE, 0,
 				NULL, 0, ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: fs/ntfs/inode.c:854:
+		if (!ntfs_attr_lookup(AT_INDEX_ALLOCATION, I30, 4,
+				CASE_SENSITIVE, 0, NULL, 0, ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: fs/ntfs/inode.c:1173:
+	if (!ntfs_attr_lookup(ni->type, ni->name, ni->name_len, CASE_SENSITIVE,
+			0, NULL, 0, ctx))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: fs/ntfs/inode.c:1429:
+	if (!ntfs_attr_lookup(AT_INDEX_ROOT, ni->name, ni->name_len,
+			CASE_SENSITIVE, 0, NULL, 0, ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: fs/ntfs/inode.c:1510:
+	if (!ntfs_attr_lookup(AT_INDEX_ALLOCATION, ni->name, ni->name_len,
 			CASE_SENSITIVE, 0, NULL, 0, ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: fs/ntfs/inode.c:2351:
+	if (unlikely(!ntfs_attr_lookup(AT_STANDARD_INFORMATION, NULL, 0,
 			CASE_SENSITIVE, 0, NULL, 0, ctx))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: fs/ntfs/namei.c:209:
+			if (!ntfs_attr_lookup(AT_FILE_NAME, NULL, 0, 0, 0,
+					NULL, 0, ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: fs/ntfs/namei.c:389:
+	if (unlikely(!ntfs_attr_lookup(AT_FILE_NAME, NULL, 0, CASE_SENSITIVE,
+			0, NULL, 0, ctx))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: fs/ntfs/super.c:340:
+	if (!ntfs_attr_lookup(AT_VOLUME_INFORMATION, NULL, 0, 0, 0, NULL, 0,
+			ctx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: fs/ntfs/super.c:1437:
+	if (!ntfs_attr_lookup(AT_VOLUME_INFORMATION, NULL, 0, 0, 0, NULL, 0,
+			ctx) || ctx->attr->non_resident || ctx->attr->flags) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 2 warnings, 25 checks, 486 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
