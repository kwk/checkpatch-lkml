WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
variety of ELF to be used that permits the dynamic sections that comprise an

WARNING:TYPO_SPELLING: 'libaries' may be misspelled - perhaps 'libraries'?
#25: 
executable, its dynamic loader and its shared libaries and its stack and data
                                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'greated' may be misspelled - perhaps 'greater'?
#41: 
 (4) Allowing the arch greated control over how an executable is laid out in
                       ^^^^^^^

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#47: 
Signed-Off-By: dhowells@redhat.com

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: include/linux/elf-fdpic.h:1:
+/* elf-fdpic.h: FDPIC ELF load map

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Addr>
#108: FILE: include/linux/elf-fdpic.h:21:
+	Elf32_Addr	addr;		/* core address to which mapped */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Word>
#110: FILE: include/linux/elf-fdpic.h:23:
+	Elf32_Word	p_memsz;	/* allocation size recorded in file */

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Half>
#114: FILE: include/linux/elf-fdpic.h:27:
+	Elf32_Half	version;	/* version of these structures, just in case... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: include/linux/elf-fdpic.h:53:
+							 * displacement */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: include/linux/elf-fdpic.h:61:
+extern void elf_fdpic_arch_lay_out_mm(struct elf_fdpic_params *exec_params,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: include/linux/binfmts.h:77:
+extern int setup_arg_pages(struct linux_binprm * bprm,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#187: FILE: include/linux/binfmts.h:77:
+extern int setup_arg_pages(struct linux_binprm * bprm,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#221: FILE: fs/binfmt_elf_fdpic.c:1:
+/* binfmt_elf_fdpic.c: FDPIC ELF binary format

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#256: FILE: fs/binfmt_elf_fdpic.c:36:
+#include <asm/uaccess.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#260: FILE: fs/binfmt_elf_fdpic.c:40:
+typedef char *elf_caddr_t;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#265: FILE: fs/binfmt_elf_fdpic.c:45:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: fs/binfmt_elf_fdpic.c:46:
+#define kdebug(fmt, ...) printk("FDPIC "fmt"\n" ,##__VA_ARGS__ )

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#266: FILE: fs/binfmt_elf_fdpic.c:46:
+#define kdebug(fmt, ...) printk("FDPIC "fmt"\n" ,##__VA_ARGS__ )
                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:WxV)
#266: FILE: fs/binfmt_elf_fdpic.c:46:
+#define kdebug(fmt, ...) printk("FDPIC "fmt"\n" ,##__VA_ARGS__ )
                                                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#266: FILE: fs/binfmt_elf_fdpic.c:46:
+#define kdebug(fmt, ...) printk("FDPIC "fmt"\n" ,##__VA_ARGS__ )

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#266: FILE: fs/binfmt_elf_fdpic.c:46:
+#define kdebug(fmt, ...) printk("FDPIC "fmt"\n" ,##__VA_ARGS__ )

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: space required before the open parenthesis '('
#268: FILE: fs/binfmt_elf_fdpic.c:48:
+#define kdebug(fmt, ...) do {} while(0)

CHECK:SPACING: No space is necessary after a cast
#344: FILE: fs/binfmt_elf_fdpic.c:124:
+	retval = kernel_read(file, params->hdr.e_phoff, (char *) params->phdrs, size);

CHECK:SPACING: No space is necessary after a cast
#383: FILE: fs/binfmt_elf_fdpic.c:163:
+	exec_params.hdr = *(struct elfhdr *) bprm->buf;

CHECK:SPACING: No space is necessary after a cast
#410: FILE: fs/binfmt_elf_fdpic.c:190:
+			interpreter_name = (char *) kmalloc(phdr->p_filesz, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#410: FILE: fs/binfmt_elf_fdpic.c:190:
+			interpreter_name = (char *) kmalloc(phdr->p_filesz, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#439: FILE: fs/binfmt_elf_fdpic.c:219:
+			interp_params.hdr = *((struct elfhdr *) bprm->buf);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#450: FILE: fs/binfmt_elf_fdpic.c:230:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#498: FILE: fs/binfmt_elf_fdpic.c:278:
+	 * error_kill */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#540: FILE: fs/binfmt_elf_fdpic.c:320:
+			printk(KERN_ERR "Unable to load interpreter\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#553: FILE: fs/binfmt_elf_fdpic.c:333:
+	current->mm->brk = current->mm->start_brk = PAGE_ALIGN(current->mm->start_brk);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#571: FILE: fs/binfmt_elf_fdpic.c:351:
+	if (IS_ERR((void *) current->mm->start_brk)) {

CHECK:SPACING: No space is necessary after a cast
#580: FILE: fs/binfmt_elf_fdpic.c:360:
+		      ksize((char *) current->mm->start_brk),

CHECK:SPACING: No space is necessary after a cast
#584: FILE: fs/binfmt_elf_fdpic.c:364:
+		stack_size = ksize((char *) current->mm->start_brk);

CHECK:SPACING: No space is necessary after a cast
#598: FILE: fs/binfmt_elf_fdpic.c:378:
+	kdebug("- start_code  %lx",	(long) current->mm->start_code);

CHECK:SPACING: No space is necessary after a cast
#599: FILE: fs/binfmt_elf_fdpic.c:379:
+	kdebug("- end_code    %lx",	(long) current->mm->end_code);

CHECK:SPACING: No space is necessary after a cast
#600: FILE: fs/binfmt_elf_fdpic.c:380:
+	kdebug("- start_data  %lx",	(long) current->mm->start_data);

CHECK:SPACING: No space is necessary after a cast
#601: FILE: fs/binfmt_elf_fdpic.c:381:
+	kdebug("- end_data    %lx",	(long) current->mm->end_data);

CHECK:SPACING: No space is necessary after a cast
#602: FILE: fs/binfmt_elf_fdpic.c:382:
+	kdebug("- start_brk   %lx",	(long) current->mm->start_brk);

CHECK:SPACING: No space is necessary after a cast
#603: FILE: fs/binfmt_elf_fdpic.c:383:
+	kdebug("- brk         %lx",	(long) current->mm->brk);

CHECK:SPACING: No space is necessary after a cast
#605: FILE: fs/binfmt_elf_fdpic.c:385:
+	kdebug("- end_brk     %lx",	(long) current->mm->end_brk);

CHECK:SPACING: No space is necessary after a cast
#607: FILE: fs/binfmt_elf_fdpic.c:387:
+	kdebug("- start_stack %lx",	(long) current->mm->start_stack);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#630: FILE: fs/binfmt_elf_fdpic.c:410:
+			ptrace_notify ((PTRACE_EVENT_EXEC << 8) | SIGTRAP);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#643: FILE: fs/binfmt_elf_fdpic.c:423:
+	if (interpreter_name)
+		kfree(interpreter_name);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#645: FILE: fs/binfmt_elf_fdpic.c:425:
+	if (exec_params.phdrs)
+		kfree(exec_params.phdrs);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#647: FILE: fs/binfmt_elf_fdpic.c:427:
+	if (exec_params.loadmap)
+		kfree(exec_params.loadmap);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#649: FILE: fs/binfmt_elf_fdpic.c:429:
+	if (interp_params.phdrs)
+		kfree(interp_params.phdrs);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#651: FILE: fs/binfmt_elf_fdpic.c:431:
+	if (interp_params.loadmap)
+		kfree(interp_params.loadmap);

CHECK:SPACING: No space is necessary after a cast
#702: FILE: fs/binfmt_elf_fdpic.c:482:
+	u_platform = (char *) sp;

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#704: FILE: fs/binfmt_elf_fdpic.c:484:
+#if defined(__i386__) && defined(CONFIG_SMP)

Architecture specific defines should be avoided wherever
possible.

CHECK:SPACING: No space is necessary after a cast
#726: FILE: fs/binfmt_elf_fdpic.c:506:
+	if (copy_to_user((void *) sp, exec_params->loadmap, len) != 0)

CHECK:SPACING: No space is necessary after a cast
#729: FILE: fs/binfmt_elf_fdpic.c:509:
+	current->mm->context.exec_fdpic_loadmap = (unsigned long) sp;

CHECK:SPACING: No space is necessary after a cast
#737: FILE: fs/binfmt_elf_fdpic.c:517:
+		if (copy_to_user((void *) sp, interp_params->loadmap, len) != 0)

CHECK:SPACING: No space is necessary after a cast
#740: FILE: fs/binfmt_elf_fdpic.c:520:
+		current->mm->context.interp_fdpic_loadmap = (unsigned long) sp;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#761: FILE: fs/binfmt_elf_fdpic.c:541:
+#define NEW_AUX_ENT(nr, id, val)						\
+	do {									\
+		struct { unsigned long _id, _val; } *ent = (void *) csp;	\
+		__put_user((id), &ent[nr]._id);					\
+		__put_user((val), &ent[nr]._val);				\
+	} while (0)

CHECK:SPACING: No space is necessary after a cast
#763: FILE: fs/binfmt_elf_fdpic.c:543:
+		struct { unsigned long _id, _val; } *ent = (void *) csp;	\

CHECK:SPACING: No space is necessary after a cast
#772: FILE: fs/binfmt_elf_fdpic.c:552:
+		NEW_AUX_ENT(0, AT_PLATFORM, (elf_addr_t)(unsigned long) u_platform);

ERROR:SPACING: space prohibited after that open parenthesis '('
#776: FILE: fs/binfmt_elf_fdpic.c:556:
+	NEW_AUX_ENT( 0, AT_HWCAP,		hwcap);

ERROR:SPACING: space prohibited after that open parenthesis '('
#777: FILE: fs/binfmt_elf_fdpic.c:557:
+	NEW_AUX_ENT( 1, AT_PAGESZ,		PAGE_SIZE);

ERROR:SPACING: space prohibited after that open parenthesis '('
#778: FILE: fs/binfmt_elf_fdpic.c:558:
+	NEW_AUX_ENT( 2, AT_CLKTCK,		CLOCKS_PER_SEC);

ERROR:SPACING: space prohibited after that open parenthesis '('
#779: FILE: fs/binfmt_elf_fdpic.c:559:
+	NEW_AUX_ENT( 3, AT_PHDR,		exec_params->ph_addr);

ERROR:SPACING: space prohibited after that open parenthesis '('
#780: FILE: fs/binfmt_elf_fdpic.c:560:
+	NEW_AUX_ENT( 4, AT_PHENT,		sizeof(struct elf_phdr));

ERROR:SPACING: space prohibited after that open parenthesis '('
#781: FILE: fs/binfmt_elf_fdpic.c:561:
+	NEW_AUX_ENT( 5, AT_PHNUM,		exec_params->hdr.e_phnum);

ERROR:SPACING: space prohibited after that open parenthesis '('
#782: FILE: fs/binfmt_elf_fdpic.c:562:
+	NEW_AUX_ENT( 6,	AT_BASE,		interp_params->elfhdr_addr);

ERROR:SPACING: space prohibited after that open parenthesis '('
#783: FILE: fs/binfmt_elf_fdpic.c:563:
+	NEW_AUX_ENT( 7, AT_FLAGS,		0);

ERROR:SPACING: space prohibited after that open parenthesis '('
#784: FILE: fs/binfmt_elf_fdpic.c:564:
+	NEW_AUX_ENT( 8, AT_ENTRY,		exec_params->entry_addr);

CHECK:SPACING: No space is necessary after a cast
#785: FILE: fs/binfmt_elf_fdpic.c:565:
+	NEW_AUX_ENT( 9, AT_UID,			(elf_addr_t) current->uid);

ERROR:SPACING: space prohibited after that open parenthesis '('
#785: FILE: fs/binfmt_elf_fdpic.c:565:
+	NEW_AUX_ENT( 9, AT_UID,			(elf_addr_t) current->uid);

CHECK:SPACING: No space is necessary after a cast
#786: FILE: fs/binfmt_elf_fdpic.c:566:
+	NEW_AUX_ENT(10, AT_EUID,		(elf_addr_t) current->euid);

CHECK:SPACING: No space is necessary after a cast
#787: FILE: fs/binfmt_elf_fdpic.c:567:
+	NEW_AUX_ENT(11, AT_GID,			(elf_addr_t) current->gid);

CHECK:SPACING: No space is necessary after a cast
#788: FILE: fs/binfmt_elf_fdpic.c:568:
+	NEW_AUX_ENT(12, AT_EGID,		(elf_addr_t) current->egid);

CHECK:SPACING: No space is necessary after a cast
#800: FILE: fs/binfmt_elf_fdpic.c:580:
+	envp = (elf_caddr_t *) csp;

CHECK:SPACING: No space is necessary after a cast
#802: FILE: fs/binfmt_elf_fdpic.c:582:
+	argv = (elf_caddr_t *) csp;

CHECK:SPACING: No space is necessary after a cast
#806: FILE: fs/binfmt_elf_fdpic.c:586:
+	__put_user(bprm->argc, (unsigned long *) csp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#809: FILE: fs/binfmt_elf_fdpic.c:589:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#818: FILE: fs/binfmt_elf_fdpic.c:598:
+	p = (char *) current->mm->arg_start;

CHECK:SPACING: No space is necessary after a cast
#820: FILE: fs/binfmt_elf_fdpic.c:600:
+		__put_user((elf_caddr_t) p, argv++);

CHECK:SPACING: No space is necessary after a cast
#827: FILE: fs/binfmt_elf_fdpic.c:607:
+	current->mm->arg_end = (unsigned long) p;

CHECK:SPACING: No space is necessary after a cast
#830: FILE: fs/binfmt_elf_fdpic.c:610:
+	current->mm->env_start = (unsigned long) p;

CHECK:SPACING: No space is necessary after a cast
#832: FILE: fs/binfmt_elf_fdpic.c:612:
+		__put_user((elf_caddr_t)(unsigned long) p, envp++);

CHECK:SPACING: No space is necessary after a cast
#839: FILE: fs/binfmt_elf_fdpic.c:619:
+	current->mm->env_end = (unsigned long) p;

CHECK:SPACING: No space is necessary after a cast
#841: FILE: fs/binfmt_elf_fdpic.c:621:
+	mm->start_stack = (unsigned long) sp;

CHECK:SPACING: No space is necessary after a cast
#863: FILE: fs/binfmt_elf_fdpic.c:643:
+		if (copy_to_user((void *) sp, src, PAGE_SIZE) != 0)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#900: FILE: fs/binfmt_elf_fdpic.c:680:
+	unsigned nloads, tmp;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#959: FILE: fs/binfmt_elf_fdpic.c:739:
+	stop = params->hdr.e_phoff + params->hdr.e_phnum * sizeof (struct elf_phdr);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#997: FILE: fs/binfmt_elf_fdpic.c:777:
+				 * the last item is a NULL entry */

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Dyn>
#999: FILE: fs/binfmt_elf_fdpic.c:779:
+				    phdr->p_memsz % sizeof(Elf32_Dyn) != 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1053: FILE: fs/binfmt_elf_fdpic.c:833:
+	printk("ELF FDPIC %s with invalid DYNAMIC section (inode=%lu)\n",

CHECK:SPACING: No space is necessary after a cast
#1092: FILE: fs/binfmt_elf_fdpic.c:872:
+	if (IS_ERR((void *) maddr))

CHECK:SPACING: No space is necessary after a cast
#1093: FILE: fs/binfmt_elf_fdpic.c:873:
+		return (int) maddr;

CHECK:SPACING: No space is necessary after a cast
#1110: FILE: fs/binfmt_elf_fdpic.c:890:
+		ret = file->f_op->read(file, (void *) seg->addr, phdr->p_filesz, &fpos);

CHECK:SPACING: No space is necessary after a cast
#1120: FILE: fs/binfmt_elf_fdpic.c:900:
+			clear_user((void *) (seg->addr + phdr->p_filesz),

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1128: FILE: fs/binfmt_elf_fdpic.c:908:
+			}
+			else if (!mm->start_data) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1180: FILE: fs/binfmt_elf_fdpic.c:960:
+		if (phdr->p_flags & PF_R) prot |= PROT_READ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1181: FILE: fs/binfmt_elf_fdpic.c:961:
+		if (phdr->p_flags & PF_W) prot |= PROT_WRITE;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1182: FILE: fs/binfmt_elf_fdpic.c:962:
+		if (phdr->p_flags & PF_X) prot |= PROT_EXEC;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1207: FILE: fs/binfmt_elf_fdpic.c:987:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#1207: FILE: fs/binfmt_elf_fdpic.c:987:
+			else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1218: FILE: fs/binfmt_elf_fdpic.c:998:
+			BUG();

CHECK:SPACING: No space is necessary after a cast
#1232: FILE: fs/binfmt_elf_fdpic.c:1012:
+		if (IS_ERR((void *) maddr))

CHECK:SPACING: No space is necessary after a cast
#1233: FILE: fs/binfmt_elf_fdpic.c:1013:
+			return (int) maddr;

CHECK:SPACING: No space is necessary after a cast
#1249: FILE: fs/binfmt_elf_fdpic.c:1029:
+			clear_user((void *) maddr, disp);

WARNING:SPLIT_STRING: quoted string split across lines
#1271: FILE: fs/binfmt_elf_fdpic.c:1051:
+			kdebug("mmap[%d] <anon>"
+			       " ad=%lx sz=%lx pr=%x fl=%x of=0 --> %08lx",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#1281: FILE: fs/binfmt_elf_fdpic.c:1061:
+			clear_user((void *) maddr + phdr->p_filesz, excess1);

CHECK:SPACING: No space is necessary after a cast
#1288: FILE: fs/binfmt_elf_fdpic.c:1068:
+			clear_user((void *) maddr + phdr->p_filesz, excess);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1297: FILE: fs/binfmt_elf_fdpic.c:1077:
+			}
+			else if (!mm->start_data) {

CHECK:SPACING: No space is necessary after a cast
#1351: FILE: fs/exec.c:397:
+	arg_size = stack_top - (PAGE_MASK & (unsigned long) mm->arg_start);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 27 warnings, 59 checks, 1285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
