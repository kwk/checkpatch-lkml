WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#90: 
diff -urP -I \$Id:.*Exp \$ -X /usr/src/patch.exclude linux-2.5.52-bk4-core/arch/i386/Kconfig linux/arch/i386/Kconfig

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#104: FILE: arch/i386/Kconfig:333:
+	  timer expires that is not on a 1/HZ tick boundry.  If no such
 	                                           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: arch/i386/Kconfig:345:
+^Ihelp $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: arch/i386/Kconfig:351:
+ $

WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#144: FILE: arch/i386/Kconfig:373:
+	  If your system has power managment code active these changes
 	                           ^^^^^^^^^

WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#147: FILE: arch/i386/Kconfig:376:
+	  management outside of the power managment kernel code, this is
 	                                  ^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#168: FILE: arch/i386/Kconfig:397:
+config HIGH_RES_TIMER_ACPI_PM
+	bool "ACPI-pm-timer"
+	

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: arch/i386/Kconfig:399:
+^I$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#171: FILE: arch/i386/Kconfig:400:
+config HIGH_RES_TIMER_TSC
+	bool "Time-stamp-counter/TSC"
+	depends on X86_TSC
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#175: FILE: arch/i386/Kconfig:404:
+config HIGH_RES_TIMER_PIT
+	bool "Programable-interrupt-timer/PIT"
+	  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: arch/i386/Kconfig:406:
+^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: arch/i386/Kconfig:407:
+endchoice^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: arch/i386/kernel/time.c:32:
+/* 2002-8-13 George Anzinger  Modified for High res timers: $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#307: FILE: arch/i386/kernel/time.c:34:
+ *                            Copyright (C) 2002 MontaVista Software
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#324: FILE: arch/i386/kernel/time.c:79:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/i386/kernel/time.c:114:
+                /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: arch/i386/kernel/time.c:115:
+                 * FIX ME***** Due to adjtime and such$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/i386/kernel/time.c:116:
+                 * this should be changed to actually update$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/i386/kernel/time.c:117:
+                 * wall time using the proper routine.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/i386/kernel/time.c:118:
+                 * Otherwise we run the risk of time moving$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/i386/kernel/time.c:119:
+                 * backward due to different interpretations$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: arch/i386/kernel/time.c:120:
+                 * of the jiffie.  I.e jiffie != 1/HZ$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: arch/i386/kernel/time.c:121:
+                 * (but it is close).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: arch/i386/kernel/time.c:122:
+                 */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: arch/i386/kernel/time.c:264:
+        /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: arch/i386/kernel/time.c:264:
+        /* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: arch/i386/kernel/time.c:265:
+         * This is dumb for two reasons.  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/i386/kernel/time.c:265:
+         * This is dumb for two reasons.  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: arch/i386/kernel/time.c:266:
+         * 1.) it is based on wall time which has not yet been updated.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: arch/i386/kernel/time.c:267:
+         * 2.) it is checked each tick for something that happens each$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: arch/i386/kernel/time.c:268:
+         *     10 min.  Why not use a timer for it?  Much lower overhead,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/i386/kernel/time.c:269:
+         *     in fact, zero if STA_UNSYNC is set.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: arch/i386/kernel/time.c:270:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: arch/i386/kernel/time.c:271:
+        /*$

CHECK:SPACING: No space is necessary after a cast
#403: FILE: arch/i386/kernel/time.c:278:
+	    (xtime.tv_nsec ) >= 500000000 - ((unsigned) tick_nsec) / 2 &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#403: FILE: arch/i386/kernel/time.c:278:
+	    (xtime.tv_nsec ) >= 500000000 - ((unsigned) tick_nsec) / 2 &&

ERROR:SPACING: space prohibited before that close parenthesis ')'
#403: FILE: arch/i386/kernel/time.c:278:
+	    (xtime.tv_nsec ) >= 500000000 - ((unsigned) tick_nsec) / 2 &&

CHECK:SPACING: No space is necessary after a cast
#404: FILE: arch/i386/kernel/time.c:279:
+	    (xtime.tv_nsec ) <= 500000000 + ((unsigned) tick_nsec) / 2) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#404: FILE: arch/i386/kernel/time.c:279:
+	    (xtime.tv_nsec ) <= 500000000 + ((unsigned) tick_nsec) / 2) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#404: FILE: arch/i386/kernel/time.c:279:
+	    (xtime.tv_nsec ) <= 500000000 + ((unsigned) tick_nsec) / 2) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: arch/i386/kernel/time.c:283:
+                        /* do it again in 60 s */^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/i386/kernel/time.c:283:
+                        /* do it again in 60 s */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: arch/i386/kernel/time.c:284:
+^I^I^Ilast_rtc_update = xtime.tv_sec - 600; $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#446: FILE: arch/i386/kernel/time.c:313:
 }
+#ifdef CONFIG_HIGH_RES_TIMERS

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: arch/i386/kernel/time.c:325:
+ * with the chip MOST of the time. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: arch/i386/kernel/time.c:326:
+ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#462: FILE: arch/i386/kernel/time.c:329:
+int _schedule_next_int(unsigned long jiffie_f,long sub_jiffie_in, int always)
                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: arch/i386/kernel/time.c:331:
+        long sub_jiff_offset; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: arch/i386/kernel/time.c:331:
+        long sub_jiff_offset; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/i386/kernel/time.c:331:
+        long sub_jiff_offset; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#465: FILE: arch/i386/kernel/time.c:332:
+	int * last_was_long = &__last_was_long;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#466: FILE: arch/i386/kernel/time.c:333:
+	int * last_was_long = &__last_was_long;
+	if ((sub_jiffie_in == -1) && *last_was_long) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#466: FILE: arch/i386/kernel/time.c:333:
+	if ((sub_jiffie_in == -1) && *last_was_long) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: arch/i386/kernel/time.c:334:
+        /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/i386/kernel/time.c:334:
+        /* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: arch/i386/kernel/time.c:335:
+         * First figure where we are in time. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: arch/i386/kernel/time.c:335:
+         * First figure where we are in time. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: arch/i386/kernel/time.c:336:
+         * A note on locking.  We are under the timerlist_lock here.  This$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: arch/i386/kernel/time.c:337:
+         * means that interrupts are off already, so don't use irq versions.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: arch/i386/kernel/time.c:338:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: arch/i386/kernel/time.c:339:
+        IF_SMP( read_lock(&xtime_lock));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: arch/i386/kernel/time.c:339:
+        IF_SMP( read_lock(&xtime_lock));$

ERROR:SPACING: space prohibited after that open parenthesis '('
#472: FILE: arch/i386/kernel/time.c:339:
+        IF_SMP( read_lock(&xtime_lock));

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: arch/i386/kernel/time.c:341:
+        sub_jiff_offset = quick_update_jiffies_sub(jiffie_f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: arch/i386/kernel/time.c:341:
+        sub_jiff_offset = quick_update_jiffies_sub(jiffie_f);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: arch/i386/kernel/time.c:343:
+        IF_SMP( read_unlock(&xtime_lock));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: arch/i386/kernel/time.c:343:
+        IF_SMP( read_unlock(&xtime_lock));$

ERROR:SPACING: space prohibited after that open parenthesis '('
#476: FILE: arch/i386/kernel/time.c:343:
+        IF_SMP( read_unlock(&xtime_lock));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#478: FILE: arch/i386/kernel/time.c:345:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: arch/i386/kernel/time.c:346:
+        if (( *last_was_long = (sub_jiffie_in == -1 ))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: arch/i386/kernel/time.c:346:
+        if (( *last_was_long = (sub_jiffie_in == -1 ))) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#479: FILE: arch/i386/kernel/time.c:346:
+        if (( *last_was_long = (sub_jiffie_in == -1 ))) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#479: FILE: arch/i386/kernel/time.c:346:
+        if (( *last_was_long = (sub_jiffie_in == -1 ))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#479: FILE: arch/i386/kernel/time.c:346:
+        if (( *last_was_long = (sub_jiffie_in == -1 ))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#479: FILE: arch/i386/kernel/time.c:346:
+        if (( *last_was_long = (sub_jiffie_in == -1 ))) {
[...]
+        }else{
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#480: FILE: arch/i386/kernel/time.c:347:
+        if (( *last_was_long = (sub_jiffie_in == -1 ))) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: arch/i386/kernel/time.c:348:
+                sub_jiff_offset = cycles_per_jiffies - sub_jiff_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: arch/i386/kernel/time.c:348:
+                sub_jiff_offset = cycles_per_jiffies - sub_jiff_offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: arch/i386/kernel/time.c:349:
+        }else{$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: arch/i386/kernel/time.c:349:
+        }else{$

ERROR:SPACING: space required before the open brace '{'
#482: FILE: arch/i386/kernel/time.c:349:
+        }else{

ERROR:SPACING: space required after that close brace '}'
#482: FILE: arch/i386/kernel/time.c:349:
+        }else{

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: arch/i386/kernel/time.c:351:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: arch/i386/kernel/time.c:351:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: arch/i386/kernel/time.c:352:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: arch/i386/kernel/time.c:353:
+         * If time is already passed, just return saying so.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: arch/i386/kernel/time.c:354:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: arch/i386/kernel/time.c:355:
+        if (! always && (sub_jiff_offset < 0)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: arch/i386/kernel/time.c:355:
+        if (! always && (sub_jiff_offset < 0)){$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#488: FILE: arch/i386/kernel/time.c:355:
+        if (! always && (sub_jiff_offset < 0)){
             ^

ERROR:SPACING: space required before the open brace '{'
#488: FILE: arch/i386/kernel/time.c:355:
+        if (! always && (sub_jiff_offset < 0)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sub_jiff_offset < 0'
#488: FILE: arch/i386/kernel/time.c:355:
+        if (! always && (sub_jiff_offset < 0)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: arch/i386/kernel/time.c:356:
+                *last_was_long = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/i386/kernel/time.c:356:
+                *last_was_long = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: arch/i386/kernel/time.c:357:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: arch/i386/kernel/time.c:357:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: arch/i386/kernel/time.c:358:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: arch/i386/kernel/time.c:358:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: arch/i386/kernel/time.c:359:
+        reload_timer_chip(sub_jiff_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: arch/i386/kernel/time.c:359:
+        reload_timer_chip(sub_jiff_offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: arch/i386/kernel/time.c:360:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: arch/i386/kernel/time.c:360:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: arch/i386/kernel/time.c:427:
+        IF_HIGH_RES(tick_nsec = NSEC_PER_SEC / HZ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/i386/kernel/time.c:427:
+        IF_HIGH_RES(tick_nsec = NSEC_PER_SEC / HZ);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#522: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#525: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:4:
+ *              $Revision: 49 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#548: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:27:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#549: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:28:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:32:
+ * ACPI hardware package.  We know there is one if ACPI is available at all $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:33:
+ * as it is part of the basic ACPI hardware set. $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:56:
+#define STRNCMP(d,s,n)  strncmp((d), (s), (NATIVE_INT)(n))
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:56:
+#define STRNCMP(d,s,n)  strncmp((d), (s), (NATIVE_INT)(n))
                    ^

CHECK:SPACING: No space is necessary after a cast
#603: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:82:
+		limit = (u8 *) buffer + length;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#605: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:84:
+		for (rover = buffer; rover < limit; rover++) {
+			sum = (u8) (sum + *rover);
+		}

CHECK:SPACING: No space is necessary after a cast
#606: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:85:
+			sum = (u8) (sum + *rover);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#626: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:105:
+hrt_acpi_scan_memory_for_rsdp(u8 * start_address, u32 length)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#636: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:115:
+	     offset += RSDP_SCAN_STEP, mem_rover += RSDP_SCAN_STEP) {
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#640: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:119:
+			    RSDP_SIG, sizeof (RSDP_SIG) - 1) == 0 &&

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#645: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:124:
+			return (mem_rover);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:137:
+ * PARAMETERS: $

CHECK:SPACING: No space is necessary after a cast
#688: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:167:
+	    hrt_acpi_scan_memory_for_rsdp((u8 *) __va(LO_RSDP_WINDOW_BASE),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:172:
+^I^I * 2) Search upper memory: $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#718: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:197:
+		printk("ACPI: System description tables not found\n");

CHECK:SPACING: No space is necessary after a cast
#729: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:208:
+		    (XSDT_DESCRIPTOR_REV2 *) __va(rsdp->xsdt_physical_address);

CHECK:SPACING: No space is necessary after a cast
#731: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:210:
+		    (fadt_descriptor_rev2 *) __va(xsdt->table_offset_entry[0]);

CHECK:SPACING: No space is necessary after a cast
#734: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:213:
+		    (RSDT_DESCRIPTOR_REV2 *) __va(rsdp->rsdt_physical_address);

CHECK:SPACING: No space is necessary after a cast
#736: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:215:
+		    (fadt_descriptor_rev2 *) __va(rsdt->table_offset_entry[0]);

CHECK:SPACING: No space is necessary after a cast
#741: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:220:
+	if (STRNCMP((NATIVE_CHAR *) fadt->header.signature,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#742: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:221:
+		    FADT_SIG, sizeof (FADT_SIG) - 1) == 0 &&

CHECK:SPACING: No space is necessary after a cast
#743: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:222:
+	    hrt_acpi_checksum((NATIVE_CHAR *) fadt, fadt->header.length) == 0) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#748: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:227:
+		if (rsdp->revision == 2) {
[...]
+		} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#749: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:228:
+			return (u32) fadt->Xpm_tmr_blk.address;

CHECK:CAMELCASE: Avoid CamelCase: <Xpm_tmr_blk>
#749: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:228:
+			return (u32) fadt->Xpm_tmr_blk.address;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#751: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:230:
+			return (u32) fadt->V1_pm_tmr_blk;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#754: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:233:
+	printk("ACPI: Signature or checksum failed on FADT\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#761: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:240:
+			    u32 flags, acpi_table_header ** table_pointer);
 			                                 ^

ERROR:SPACING: space prohibited after that '*' (ctx:OxW)
#761: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:240:
+			    u32 flags, acpi_table_header ** table_pointer);
 			                                  ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#763: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:242:
+extern fadt_descriptor_rev2 acpi_fadt;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#772: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:251:
+					(acpi_table_header **) & fadt);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#772: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:251:
+					(acpi_table_header **) & fadt);
 					                       ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#774: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:253:
+	if (!fadt || !fadt->header.signature[0]) {
+		printk("ACPI: Could not find the ACPI pm timer.");
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#775: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:254:
+		printk("ACPI: Could not find the ACPI pm timer.");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#778: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:257:
+	if (fadt->header.revision == 2) {
[...]
+	} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#779: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:258:
+		return (u32) fadt->Xpm_tmr_blk.address;

CHECK:SPACING: No space is necessary after a cast
#781: FILE: arch/i386/kernel/timers/high-res-tbxfroot.c:260:
+		return (u32) fadt->V1_pm_tmr_blk;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#789: FILE: arch/i386/kernel/timers/hrtimer_pit.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#802: FILE: arch/i386/kernel/timers/hrtimer_pit.c:14:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#804: FILE: arch/i386/kernel/timers/hrtimer_pit.c:16:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: arch/i386/kernel/timers/hrtimer_pit.c:27:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#816: FILE: arch/i386/kernel/timers/hrtimer_pit.c:28:
+         * We are under the xtime_lock here.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: arch/i386/kernel/timers/hrtimer_pit.c:29:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: arch/i386/kernel/timers/hrtimer_pit.c:30:
+        long tmp = quick_get_cpuctr();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: arch/i386/kernel/timers/hrtimer_pit.c:30:
+        long tmp = quick_get_cpuctr();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#819: FILE: arch/i386/kernel/timers/hrtimer_pit.c:31:
+        long rtn = arch_cycles_to_usec(tmp + sub_jiffie());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: arch/i386/kernel/timers/hrtimer_pit.c:31:
+        long rtn = arch_cycles_to_usec(tmp + sub_jiffie());$

WARNING:RETURN_VOID: void function return statements are not generally useful
#826: FILE: arch/i386/kernel/timers/hrtimer_pit.c:38:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#828: FILE: arch/i386/kernel/timers/hrtimer_pit.c:40:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#829: FILE: arch/i386/kernel/timers/hrtimer_pit.c:41:
+/* ------ Calibrate the TSC ------- $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#839: FILE: arch/i386/kernel/timers/hrtimer_pit.c:51:
+#define CALIBRATE_LATCH	(((CAL_JIFS * CLOCK_TICK_RATE) + HZ/2)/HZ)
                        	                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#839: FILE: arch/i386/kernel/timers/hrtimer_pit.c:51:
+#define CALIBRATE_LATCH	(((CAL_JIFS * CLOCK_TICK_RATE) + HZ/2)/HZ)
                        	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#840: FILE: arch/i386/kernel/timers/hrtimer_pit.c:52:
+#define CALIBRATE_TIME	((CAL_JIFS * USEC_PER_SEC)/HZ)
                       	                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#841: FILE: arch/i386/kernel/timers/hrtimer_pit.c:53:
+#define CALIBRATE_TIME_NSEC (CAL_JIFS * (NSEC_PER_SEC/HZ))
                                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#843: FILE: arch/i386/kernel/timers/hrtimer_pit.c:55:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#865: FILE: arch/i386/kernel/timers/hrtimer_pit.c:77:
+		rdtsc(startlow,starthigh);
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#870: FILE: arch/i386/kernel/timers/hrtimer_pit.c:82:
+		rdtsc(endlow,endhigh);
 		            ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#879: FILE: arch/i386/kernel/timers/hrtimer_pit.c:91:
+			:"=a" (endlow), "=d" (endhigh)
 			^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#880: FILE: arch/i386/kernel/timers/hrtimer_pit.c:92:
+			:"g" (startlow), "g" (starthigh),
 			^

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: arch/i386/kernel/timers/hrtimer_pit.c:103:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: arch/i386/kernel/timers/hrtimer_pit.c:104:
+                 * endlow at this point is CAL_JIFS * arch clocks$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#893: FILE: arch/i386/kernel/timers/hrtimer_pit.c:105:
+                 * per jiffie.  Set up the value for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: arch/i386/kernel/timers/hrtimer_pit.c:105:
+                 * per jiffie.  Set up the value for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#894: FILE: arch/i386/kernel/timers/hrtimer_pit.c:106:
+                 * high_res use. Note: keep the whole$

ERROR:CODE_INDENT: code indent should use tabs where possible
#895: FILE: arch/i386/kernel/timers/hrtimer_pit.c:107:
+                 * value for now, we will do$

ERROR:CODE_INDENT: code indent should use tabs where possible
#896: FILE: arch/i386/kernel/timers/hrtimer_pit.c:108:
+                 * the divide later (want that precision).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#897: FILE: arch/i386/kernel/timers/hrtimer_pit.c:109:
+                 */$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#900: FILE: arch/i386/kernel/timers/hrtimer_pit.c:112:
+			:"=a" (endlow), "=d" (endhigh)
 			^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#901: FILE: arch/i386/kernel/timers/hrtimer_pit.c:113:
+			:"r" (endlow), "0" (0), "1" (CALIBRATE_TIME));
 			^

ERROR:CODE_INDENT: code indent should use tabs where possible
#912: FILE: arch/i386/kernel/timers/hrtimer_pit.c:124:
+        printk("******************** TSC calibrate failed!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: arch/i386/kernel/timers/hrtimer_pit.c:124:
+        printk("******************** TSC calibrate failed!\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#912: FILE: arch/i386/kernel/timers/hrtimer_pit.c:124:
+        printk("******************** TSC calibrate failed!\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#916: FILE: arch/i386/kernel/timers/hrtimer_pit.c:128:
+
+

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kgdb.h> instead of <asm/kgdb.h>
#918: FILE: arch/i386/kernel/timers/hrtimer_pit.c:130:
+#include <asm/kgdb.h>

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#922: FILE: arch/i386/kernel/timers/hrtimer_pit.c:134:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#925: FILE: arch/i386/kernel/timers/hrtimer_pit.c:137:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#933: FILE: arch/i386/kernel/timers/hrtimer_pit.c:145:
+		unsigned long tsc_quotient = calibrate_tsc();
+		if(tsc_quotient){

ERROR:SPACING: space required before the open brace '{'
#933: FILE: arch/i386/kernel/timers/hrtimer_pit.c:145:
+		if(tsc_quotient){

ERROR:SPACING: space required before the open parenthesis '('
#933: FILE: arch/i386/kernel/timers/hrtimer_pit.c:145:
+		if(tsc_quotient){

ERROR:SPACING: space prohibited after that open parenthesis '('
#935: FILE: arch/i386/kernel/timers/hrtimer_pit.c:147:
+			cpu_khz = div_sc32( 1000, tsc_quotient);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: arch/i386/kernel/timers/hrtimer_pit.c:148:
+^I^I^I{^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: arch/i386/kernel/timers/hrtimer_pit.c:149:
+^I^I^I^Iprintk("Detected %lu.%03lu MHz processor.\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#937: FILE: arch/i386/kernel/timers/hrtimer_pit.c:149:
+				printk("Detected %lu.%03lu MHz processor.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#951: FILE: arch/i386/kernel/timers/hrtimer_pit.c:163:
+^I.mark_offset =^Ihigh_res_mark_offset_pit, $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#958: FILE: arch/i386/kernel/timers/hrtimer_pm.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#971: FILE: arch/i386/kernel/timers/hrtimer_pm.c:14:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#973: FILE: arch/i386/kernel/timers/hrtimer_pm.c:16:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: arch/i386/kernel/timers/hrtimer_pm.c:27:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: arch/i386/kernel/timers/hrtimer_pm.c:28:
+         * We are under the xtime_lock here.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: arch/i386/kernel/timers/hrtimer_pm.c:29:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: arch/i386/kernel/timers/hrtimer_pm.c:30:
+        long tmp = quick_get_cpuctr();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: arch/i386/kernel/timers/hrtimer_pm.c:30:
+        long tmp = quick_get_cpuctr();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: arch/i386/kernel/timers/hrtimer_pm.c:31:
+        long rtn = arch_cycles_to_usec(tmp + sub_jiffie());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: arch/i386/kernel/timers/hrtimer_pm.c:31:
+        long rtn = arch_cycles_to_usec(tmp + sub_jiffie());$

WARNING:RETURN_VOID: void function return statements are not generally useful
#995: FILE: arch/i386/kernel/timers/hrtimer_pm.c:38:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#997: FILE: arch/i386/kernel/timers/hrtimer_pm.c:40:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: arch/i386/kernel/timers/hrtimer_pm.c:41:
+/* ------ Calibrate the TSC ------- $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1008: FILE: arch/i386/kernel/timers/hrtimer_pm.c:51:
+#define CALIBRATE_LATCH	(((CAL_JIFS * CLOCK_TICK_RATE) + HZ/2)/HZ)
                        	                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1008: FILE: arch/i386/kernel/timers/hrtimer_pm.c:51:
+#define CALIBRATE_LATCH	(((CAL_JIFS * CLOCK_TICK_RATE) + HZ/2)/HZ)
                        	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1009: FILE: arch/i386/kernel/timers/hrtimer_pm.c:52:
+#define CALIBRATE_TIME	((CAL_JIFS * USEC_PER_SEC)/HZ)
                       	                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1010: FILE: arch/i386/kernel/timers/hrtimer_pm.c:53:
+#define CALIBRATE_TIME_NSEC (CAL_JIFS * (NSEC_PER_SEC/HZ))
                                                      ^

WARNING:MISPLACED_INIT: __initdata should be placed after tsc_cycles_per_5_jiffies
#1012: FILE: arch/i386/kernel/timers/hrtimer_pm.c:55:
+static __initdata unsigned long tsc_cycles_per_5_jiffies;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1035: FILE: arch/i386/kernel/timers/hrtimer_pm.c:78:
+		rdtsc(startlow,starthigh);
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1040: FILE: arch/i386/kernel/timers/hrtimer_pm.c:83:
+		rdtsc(endlow,endhigh);
 		            ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1049: FILE: arch/i386/kernel/timers/hrtimer_pm.c:92:
+			:"=a" (endlow), "=d" (endhigh)
 			^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1050: FILE: arch/i386/kernel/timers/hrtimer_pm.c:93:
+			:"g" (startlow), "g" (starthigh),
 			^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1061: FILE: arch/i386/kernel/timers/hrtimer_pm.c:104:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1062: FILE: arch/i386/kernel/timers/hrtimer_pm.c:105:
+                 * endlow at this point is CAL_JIFS * arch clocks$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1063: FILE: arch/i386/kernel/timers/hrtimer_pm.c:106:
+                 * per jiffie.  Set up the value for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1063: FILE: arch/i386/kernel/timers/hrtimer_pm.c:106:
+                 * per jiffie.  Set up the value for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1064: FILE: arch/i386/kernel/timers/hrtimer_pm.c:107:
+                 * high_res use. Note: keep the whole$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1065: FILE: arch/i386/kernel/timers/hrtimer_pm.c:108:
+                 * value for now, we will do$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1066: FILE: arch/i386/kernel/timers/hrtimer_pm.c:109:
+                 * the divide later (want that precision).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1067: FILE: arch/i386/kernel/timers/hrtimer_pm.c:110:
+                 */$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1070: FILE: arch/i386/kernel/timers/hrtimer_pm.c:113:
+			:"=a" (endlow), "=d" (endhigh)
 			^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1071: FILE: arch/i386/kernel/timers/hrtimer_pm.c:114:
+			:"r" (endlow), "0" (0), "1" (CALIBRATE_TIME));
 			^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1082: FILE: arch/i386/kernel/timers/hrtimer_pm.c:125:
+        printk("******************** TSC calibrate failed!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1082: FILE: arch/i386/kernel/timers/hrtimer_pm.c:125:
+        printk("******************** TSC calibrate failed!\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1082: FILE: arch/i386/kernel/timers/hrtimer_pm.c:125:
+        printk("******************** TSC calibrate failed!\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1086: FILE: arch/i386/kernel/timers/hrtimer_pm.c:129:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1089: FILE: arch/i386/kernel/timers/hrtimer_pm.c:132:
+        long now,end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1089: FILE: arch/i386/kernel/timers/hrtimer_pm.c:132:
+        long now,end;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1089: FILE: arch/i386/kernel/timers/hrtimer_pm.c:132:
+        long now,end;
                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1090: FILE: arch/i386/kernel/timers/hrtimer_pm.c:133:
+        rdtscl(end);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1090: FILE: arch/i386/kernel/timers/hrtimer_pm.c:133:
+        long now,end;
+        rdtscl(end);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1090: FILE: arch/i386/kernel/timers/hrtimer_pm.c:133:
+        rdtscl(end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1091: FILE: arch/i386/kernel/timers/hrtimer_pm.c:134:
+        end += (usec * tsc_cycles_per_5_jiffies) / (USEC_PER_JIFFIES * 5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1091: FILE: arch/i386/kernel/timers/hrtimer_pm.c:134:
+        end += (usec * tsc_cycles_per_5_jiffies) / (USEC_PER_JIFFIES * 5);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1092: FILE: arch/i386/kernel/timers/hrtimer_pm.c:135:
+        do {rdtscl(now);} while((end - now) > 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1092: FILE: arch/i386/kernel/timers/hrtimer_pm.c:135:
+        do {rdtscl(now);} while((end - now) > 0);$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1092: FILE: arch/i386/kernel/timers/hrtimer_pm.c:135:
+        do {rdtscl(now);} while((end - now) > 0);
                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1092: FILE: arch/i386/kernel/timers/hrtimer_pm.c:135:
+        do {rdtscl(now);} while((end - now) > 0);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1094: FILE: arch/i386/kernel/timers/hrtimer_pm.c:137:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1096: FILE: arch/i386/kernel/timers/hrtimer_pm.c:139:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1100: FILE: arch/i386/kernel/timers/hrtimer_pm.c:143:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1101: FILE: arch/i386/kernel/timers/hrtimer_pm.c:144:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1109: FILE: arch/i386/kernel/timers/hrtimer_pm.c:152:
+		unsigned long tsc_quotient = calibrate_tsc();
+		if(tsc_quotient){

ERROR:SPACING: space required before the open brace '{'
#1109: FILE: arch/i386/kernel/timers/hrtimer_pm.c:152:
+		if(tsc_quotient){

ERROR:SPACING: space required before the open parenthesis '('
#1109: FILE: arch/i386/kernel/timers/hrtimer_pm.c:152:
+		if(tsc_quotient){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1111: FILE: arch/i386/kernel/timers/hrtimer_pm.c:154:
+			cpu_khz = div_sc32( 1000, tsc_quotient);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1112: FILE: arch/i386/kernel/timers/hrtimer_pm.c:155:
+^I^I^I{^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1113: FILE: arch/i386/kernel/timers/hrtimer_pm.c:156:
+^I^I^I^Iprintk("Detected %lu.%03lu MHz processor.\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1113: FILE: arch/i386/kernel/timers/hrtimer_pm.c:156:
+				printk("Detected %lu.%03lu MHz processor.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1119: FILE: arch/i386/kernel/timers/hrtimer_pm.c:162:
+        acpi_pm_tmr_address = hrt_get_acpi_pm_ptr(); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1119: FILE: arch/i386/kernel/timers/hrtimer_pm.c:162:
+        acpi_pm_tmr_address = hrt_get_acpi_pm_ptr(); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1119: FILE: arch/i386/kernel/timers/hrtimer_pm.c:162:
+        acpi_pm_tmr_address = hrt_get_acpi_pm_ptr(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1120: FILE: arch/i386/kernel/timers/hrtimer_pm.c:163:
+        if (!acpi_pm_tmr_address){                    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1120: FILE: arch/i386/kernel/timers/hrtimer_pm.c:163:
+        if (!acpi_pm_tmr_address){                    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: arch/i386/kernel/timers/hrtimer_pm.c:163:
+        if (!acpi_pm_tmr_address){                    $

ERROR:SPACING: space required before the open brace '{'
#1120: FILE: arch/i386/kernel/timers/hrtimer_pm.c:163:
+        if (!acpi_pm_tmr_address){                    

ERROR:CODE_INDENT: code indent should use tabs where possible
#1121: FILE: arch/i386/kernel/timers/hrtimer_pm.c:164:
+                printk(message,default_pm_add);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1121: FILE: arch/i386/kernel/timers/hrtimer_pm.c:164:
+                printk(message,default_pm_add);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1121: FILE: arch/i386/kernel/timers/hrtimer_pm.c:164:
+                printk(message,default_pm_add);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1121: FILE: arch/i386/kernel/timers/hrtimer_pm.c:164:
+                printk(message,default_pm_add);
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1122: FILE: arch/i386/kernel/timers/hrtimer_pm.c:165:
+                if ( (acpi_pm_tmr_address = default_pm_add)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: arch/i386/kernel/timers/hrtimer_pm.c:165:
+                if ( (acpi_pm_tmr_address = default_pm_add)){$

ERROR:SPACING: space required before the open brace '{'
#1122: FILE: arch/i386/kernel/timers/hrtimer_pm.c:165:
+                if ( (acpi_pm_tmr_address = default_pm_add)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1122: FILE: arch/i386/kernel/timers/hrtimer_pm.c:165:
+                if ( (acpi_pm_tmr_address = default_pm_add)){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1122: FILE: arch/i386/kernel/timers/hrtimer_pm.c:165:
+                if ( (acpi_pm_tmr_address = default_pm_add)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1123: FILE: arch/i386/kernel/timers/hrtimer_pm.c:166:
+                        last_update +=  quick_get_cpuctr();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: arch/i386/kernel/timers/hrtimer_pm.c:166:
+                        last_update +=  quick_get_cpuctr();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1124: FILE: arch/i386/kernel/timers/hrtimer_pm.c:167:
+                        hrt_udelay(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1124: FILE: arch/i386/kernel/timers/hrtimer_pm.c:167:
+                        hrt_udelay(4);$

ERROR:SPACING: space required before the open brace '{'
#1125: FILE: arch/i386/kernel/timers/hrtimer_pm.c:168:
+			if (!quick_get_cpuctr()){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1126: FILE: arch/i386/kernel/timers/hrtimer_pm.c:169:
+                                printk("High-res-timers: No ACPI pm timer found at %d.\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1126: FILE: arch/i386/kernel/timers/hrtimer_pm.c:169:
+                                printk("High-res-timers: No ACPI pm timer found at %d.\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1126: FILE: arch/i386/kernel/timers/hrtimer_pm.c:169:
+                                printk("High-res-timers: No ACPI pm timer found at %d.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1127: FILE: arch/i386/kernel/timers/hrtimer_pm.c:170:
+                                       acpi_pm_tmr_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: arch/i386/kernel/timers/hrtimer_pm.c:170:
+                                       acpi_pm_tmr_address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1128: FILE: arch/i386/kernel/timers/hrtimer_pm.c:171:
+                                acpi_pm_tmr_address = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: arch/i386/kernel/timers/hrtimer_pm.c:171:
+                                acpi_pm_tmr_address = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1129: FILE: arch/i386/kernel/timers/hrtimer_pm.c:172:
+                        } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1129: FILE: arch/i386/kernel/timers/hrtimer_pm.c:172:
+                        } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: arch/i386/kernel/timers/hrtimer_pm.c:172:
+                        } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1130: FILE: arch/i386/kernel/timers/hrtimer_pm.c:173:
+                } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1130: FILE: arch/i386/kernel/timers/hrtimer_pm.c:173:
+                } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: arch/i386/kernel/timers/hrtimer_pm.c:173:
+                } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1131: FILE: arch/i386/kernel/timers/hrtimer_pm.c:174:
+        }else{$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1131: FILE: arch/i386/kernel/timers/hrtimer_pm.c:174:
+        }else{$

ERROR:SPACING: space required before the open brace '{'
#1131: FILE: arch/i386/kernel/timers/hrtimer_pm.c:174:
+        }else{

ERROR:SPACING: space required after that close brace '}'
#1131: FILE: arch/i386/kernel/timers/hrtimer_pm.c:174:
+        }else{

ERROR:CODE_INDENT: code indent should use tabs where possible
#1132: FILE: arch/i386/kernel/timers/hrtimer_pm.c:175:
+                if (default_pm_add != acpi_pm_tmr_address) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: arch/i386/kernel/timers/hrtimer_pm.c:175:
+                if (default_pm_add != acpi_pm_tmr_address) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1132: FILE: arch/i386/kernel/timers/hrtimer_pm.c:175:
+                if (default_pm_add != acpi_pm_tmr_address) {
+                        printk("High-res-timers: Ignoring supplied default ACPI pm timer address.\n"); 
+                }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1133: FILE: arch/i386/kernel/timers/hrtimer_pm.c:176:
+                        printk("High-res-timers: Ignoring supplied default ACPI pm timer address.\n"); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1133: FILE: arch/i386/kernel/timers/hrtimer_pm.c:176:
+                        printk("High-res-timers: Ignoring supplied default ACPI pm timer address.\n"); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: arch/i386/kernel/timers/hrtimer_pm.c:176:
+                        printk("High-res-timers: Ignoring supplied default ACPI pm timer address.\n"); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1133: FILE: arch/i386/kernel/timers/hrtimer_pm.c:176:
+                        printk("High-res-timers: Ignoring supplied default ACPI pm timer address.\n"); 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1134: FILE: arch/i386/kernel/timers/hrtimer_pm.c:177:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1134: FILE: arch/i386/kernel/timers/hrtimer_pm.c:177:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1135: FILE: arch/i386/kernel/timers/hrtimer_pm.c:178:
+                last_update +=  quick_get_cpuctr();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1135: FILE: arch/i386/kernel/timers/hrtimer_pm.c:178:
+                last_update +=  quick_get_cpuctr();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1136: FILE: arch/i386/kernel/timers/hrtimer_pm.c:179:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1136: FILE: arch/i386/kernel/timers/hrtimer_pm.c:179:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1137: FILE: arch/i386/kernel/timers/hrtimer_pm.c:180:
+        if (!acpi_pm_tmr_address){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1137: FILE: arch/i386/kernel/timers/hrtimer_pm.c:180:
+        if (!acpi_pm_tmr_address){$

ERROR:SPACING: space required before the open brace '{'
#1137: FILE: arch/i386/kernel/timers/hrtimer_pm.c:180:
+        if (!acpi_pm_tmr_address){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1138: FILE: arch/i386/kernel/timers/hrtimer_pm.c:181:
+                printk(fail_message);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1138: FILE: arch/i386/kernel/timers/hrtimer_pm.c:181:
+                printk(fail_message);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1138: FILE: arch/i386/kernel/timers/hrtimer_pm.c:181:
+                printk(fail_message);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1140: FILE: arch/i386/kernel/timers/hrtimer_pm.c:183:
+        }else{$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1140: FILE: arch/i386/kernel/timers/hrtimer_pm.c:183:
+        }else{$

ERROR:SPACING: space required before the open brace '{'
#1140: FILE: arch/i386/kernel/timers/hrtimer_pm.c:183:
+        }else{

ERROR:SPACING: space required after that close brace '}'
#1140: FILE: arch/i386/kernel/timers/hrtimer_pm.c:183:
+        }else{

ERROR:CODE_INDENT: code indent should use tabs where possible
#1141: FILE: arch/i386/kernel/timers/hrtimer_pm.c:184:
+                printk("High-res-timers: Found ACPI pm timer at %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1141: FILE: arch/i386/kernel/timers/hrtimer_pm.c:184:
+                printk("High-res-timers: Found ACPI pm timer at %d\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1141: FILE: arch/i386/kernel/timers/hrtimer_pm.c:184:
+                printk("High-res-timers: Found ACPI pm timer at %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1142: FILE: arch/i386/kernel/timers/hrtimer_pm.c:185:
+                       acpi_pm_tmr_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: arch/i386/kernel/timers/hrtimer_pm.c:185:
+                       acpi_pm_tmr_address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1143: FILE: arch/i386/kernel/timers/hrtimer_pm.c:186:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: arch/i386/kernel/timers/hrtimer_pm.c:186:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1152: FILE: arch/i386/kernel/timers/hrtimer_pm.c:195:
+^I.mark_offset =^Ihigh_res_mark_offset_pm, $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1160: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#1173: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:14:
+#include <asm/io.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1176: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:17:
+extern spinlock_t i8253_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1178: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:19:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1185: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:26:
+extern unsigned long fast_gettimeoffset_quotient;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:30:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1190: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:31:
+         * We are under the xtime_lock here.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1191: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:32:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1192: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:33:
+        long tmp = quick_get_cpuctr();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1192: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:33:
+        long tmp = quick_get_cpuctr();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1193: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:34:
+        long rtn = arch_cycles_to_usec(tmp + sub_jiffie());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1193: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:34:
+        long rtn = arch_cycles_to_usec(tmp + sub_jiffie());$

WARNING:RETURN_VOID: void function return statements are not generally useful
#1200: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:41:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1202: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:43:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1203: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:44:
+/* ------ Calibrate the TSC ------- $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1213: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:54:
+#define CALIBRATE_LATCH	(((CAL_JIFS * CLOCK_TICK_RATE) + HZ/2)/HZ)
                        	                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1213: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:54:
+#define CALIBRATE_LATCH	(((CAL_JIFS * CLOCK_TICK_RATE) + HZ/2)/HZ)
                        	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1214: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:55:
+#define CALIBRATE_TIME	((CAL_JIFS * USEC_PER_SEC)/HZ)
                       	                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1215: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:56:
+#define CALIBRATE_TIME_NSEC (CAL_JIFS * (NSEC_PER_SEC/HZ))
                                                      ^

WARNING:MISPLACED_INIT: __initdata should be placed after tsc_cycles_per_5_jiffies
#1217: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:58:
+static __initdata unsigned long tsc_cycles_per_5_jiffies;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1240: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:81:
+		rdtsc(startlow,starthigh);
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1245: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:86:
+		rdtsc(endlow,endhigh);
 		            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1247: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:88:
+
+

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1255: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:96:
+			:"=a" (endlow), "=d" (endhigh)
 			^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1256: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:97:
+			:"g" (startlow), "g" (starthigh),
 			^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1267: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:108:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1268: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:109:
+                 * endlow at this point is CAL_JIFS * arch clocks$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1269: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:110:
+                 * per jiffie.  Set up the value for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1269: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:110:
+                 * per jiffie.  Set up the value for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1270: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:111:
+                 * high_res use. Note: keep the whole$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1271: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:112:
+                 * value for now, we will do$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1272: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:113:
+                 * the divide later (want that precision).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1273: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:114:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1274: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:115:
+                tsc_cycles_per_5_jiffies = endlow;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:115:
+                tsc_cycles_per_5_jiffies = endlow;$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1277: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:118:
+			:"=a" (endlow), "=d" (endhigh)
 			^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1278: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:119:
+			:"r" (endlow), "0" (0), "1" (CALIBRATE_TIME));
 			^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1289: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:130:
+        printk("******************** TSC calibrate failed!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:130:
+        printk("******************** TSC calibrate failed!\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1289: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:130:
+        printk("******************** TSC calibrate failed!\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1293: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:134:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1298: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:139:
+time_cpufreq_notifier(struct notifier_block *nb, unsigned long val,
+		       void *data)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq->old < freq->new'
#1306: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:147:
+	if((val == CPUFREQ_PRECHANGE && (freq->old < freq->new)) ||
+	   (val == CPUFREQ_POSTCHANGE && (freq->old > freq->new))){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq->old > freq->new'
#1306: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:147:
+	if((val == CPUFREQ_PRECHANGE && (freq->old < freq->new)) ||
+	   (val == CPUFREQ_POSTCHANGE && (freq->old > freq->new))){

ERROR:SPACING: space required before the open parenthesis '('
#1306: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:147:
+	if((val == CPUFREQ_PRECHANGE && (freq->old < freq->new)) ||

ERROR:SPACING: space required before the open brace '{'
#1307: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:148:
+	   (val == CPUFREQ_POSTCHANGE && (freq->old > freq->new))){

ERROR:SPACING: space required before the open brace '{'
#1308: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:149:
+		if((freq->cpu == CPUFREQ_ALL_CPUS) || (freq->cpu == 0)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq->cpu == CPUFREQ_ALL_CPUS'
#1308: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:149:
+		if((freq->cpu == CPUFREQ_ALL_CPUS) || (freq->cpu == 0)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq->cpu == 0'
#1308: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:149:
+		if((freq->cpu == CPUFREQ_ALL_CPUS) || (freq->cpu == 0)){

ERROR:SPACING: space required before the open parenthesis '('
#1308: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:149:
+		if((freq->cpu == CPUFREQ_ALL_CPUS) || (freq->cpu == 0)){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1309: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:150:
+		if((freq->cpu == CPUFREQ_ALL_CPUS) || (freq->cpu == 0)){
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1312: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:153:
+^I^I        arch_to_usec = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1312: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:153:
+^I^I        arch_to_usec = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1313: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:154:
+^I^I^I^Ifast_gettimeoffset_quotient = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1314: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:155:
+^I^I^I^Icpufreq_scale(fast_gettimeoffset_quotient, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1316: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:157:
+^I^I^Iarch_to_latch = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1317: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:158:
+^I^I^I^Icpufreq_scale(arch_to_latch, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1320: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:161:
+^I^I^I^Icpufreq_scale(arch_to_nsec, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1323: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:164:
+^I^I^I^Icpufreq_scale(nsec_to_arch, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1326: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:167:
+^I^I^I^Icpufreq_scale(usec_to_arch, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1329: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:170:
+^I^I^I^Icpufreq_scale(cycles_per_jiffies, $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1332: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:173:
+		for (i=0; i<NR_CPUS; i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1332: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:173:
+		for (i=0; i<NR_CPUS; i++)
 		           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1332: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:173:
+		for (i=0; i<NR_CPUS; i++)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq->cpu == CPUFREQ_ALL_CPUS'
#1333: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:174:
+			if ((freq->cpu == CPUFREQ_ALL_CPUS) || (freq->cpu == i))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq->cpu == i'
#1333: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:174:
+			if ((freq->cpu == CPUFREQ_ALL_CPUS) || (freq->cpu == i))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:175:
+^I^I^I^Icpu_data[i].loops_per_jiffy = $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1335: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:176:
+					cpufreq_scale(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1336: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:177:
+^I^I^I^I^I^Icpu_data[i].loops_per_jiffy, $

WARNING:INDENTED_LABEL: labels should not be indented
#1344: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:185:
+	notifier_call:	time_cpufreq_notifier

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1348: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:189:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1365: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:206:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1365: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:206:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1365: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:206:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1366: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:207:
+ ^I *^IFirstly we have to do a CPU check for chips with$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1366: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:207:
+ ^I *^IFirstly we have to do a CPU check for chips with$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1367: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:208:
+ ^I * ^Ia potentially buggy TSC. At this point we haven't run$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1367: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:208:
+ ^I * ^Ia potentially buggy TSC. At this point we haven't run$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1368: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:209:
+ ^I *^Ithe ident/bugs checks so we must run this hook as it$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1368: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:209:
+ ^I *^Ithe ident/bugs checks so we must run this hook as it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1369: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:210:
+ ^I *^Imay turn off the TSC flag.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1369: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:210:
+ ^I *^Imay turn off the TSC flag.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1370: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:211:
+ ^I *$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1370: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:211:
+ ^I *$

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#1371: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:212:
+ 	 *	NOTE: this doesnt yet handle SMP 486 machines where only
  	  	           ^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1371: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:212:
+ ^I *^INOTE: this doesnt yet handle SMP 486 machines where only$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1371: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:212:
+ ^I *^INOTE: this doesnt yet handle SMP 486 machines where only$

WARNING:TYPO_SPELLING: 'Thats' may be misspelled - perhaps 'That's'?
#1372: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:213:
+ 	 *	some CPU's have a TSC. Thats never worked and nobody has
  	  	                       ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1372: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:213:
+ ^I *^Isome CPU's have a TSC. Thats never worked and nobody has$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1372: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:213:
+ ^I *^Isome CPU's have a TSC. Thats never worked and nobody has$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1373: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:214:
+ ^I *^Imoaned if you have the only one in the world - you fix it!$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1373: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:214:
+ ^I *^Imoaned if you have the only one in the world - you fix it!$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1374: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:215:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1374: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:215:
+ ^I */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1375: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:216:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1375: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:216:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1376: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:217:
+ ^Idodgy_tsc();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1376: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:217:
+ ^Idodgy_tsc();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1376: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:217:
+ ^Idodgy_tsc();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1377: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:218:
+ ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1377: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:218:
+ ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1377: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:218:
+ ^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1380: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:221:
+		unsigned long tsc_quotient = calibrate_tsc();
+		if (tsc_quotient) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1388: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:229:
+                        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:230:
+                         * Kick off the high res timers$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1390: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:231:
+                         */$

WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#1392: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:233:
+			 * The init_hrtimers macro is in the choosen
 			                                     ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1397: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:238:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1397: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:238:
+ $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1398: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:239:
+			arch_to_latch = div_ll_X_l(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1413: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:254:
+						CALIBRATE_TIME );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1415: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:256:
+^I^I^Icycles_per_jiffies = tsc_cycles_per_5_jiffies / $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1416: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:257:
+^I^I^I^ICAL_JIFS;  $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1425: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:266:
+			cpu_khz = div_sc32( 1000, tsc_quotient);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1426: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:267:
+^I^I^I{^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1427: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:268:
+^I^I^I^Iprintk("Detected %lu.%03lu MHz processor.\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1427: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:268:
+				printk("Detected %lu.%03lu MHz processor.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1445: FILE: arch/i386/kernel/timers/hrtimer_tsc.c:286:
+^I.mark_offset =^Ihigh_res_mark_offset_tsc, $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1464: FILE: arch/i386/kernel/timers/timer.c:11:
+extern struct timer_opts hrtimer_tsc;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1465: FILE: arch/i386/kernel/timers/timer.c:12:
+extern struct timer_opts hrtimer_pm;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1466: FILE: arch/i386/kernel/timers/timer.c:13:
+extern struct timer_opts hrtimer_pit;

ERROR:SPACING: exactly one space required after that #elif
#1473: FILE: arch/i386/kernel/timers/timer.c:20:
+#elif  CONFIG_HIGH_RES_TIMER_TSC

ERROR:SPACING: exactly one space required after that #elif
#1475: FILE: arch/i386/kernel/timers/timer.c:22:
+#elif  CONFIG_HIGH_RES_TIMER_PIT

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1505: FILE: arch/i386/kernel/timers/timer_tsc.c:29:
+extern unsigned long fast_gettimeoffset_quotient;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1516: FILE: arch/i386/mach-generic/do_timer.h:19:
+        IF_HIGH_RES($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: arch/i386/mach-generic/do_timer.h:19:
+        IF_HIGH_RES($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1516: FILE: arch/i386/mach-generic/do_timer.h:19:
+        IF_HIGH_RES(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1517: FILE: arch/i386/mach-generic/do_timer.h:20:
+                if (!(new_jiffie() & 1))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: arch/i386/mach-generic/do_timer.h:20:
+                if (!(new_jiffie() & 1))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1518: FILE: arch/i386/mach-generic/do_timer.h:21:
+                        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: arch/i386/mach-generic/do_timer.h:21:
+                        return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1519: FILE: arch/i386/mach-generic/do_timer.h:22:
+                jiffies_intr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: arch/i386/mach-generic/do_timer.h:22:
+                jiffies_intr = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1520: FILE: arch/i386/mach-generic/do_timer.h:23:
+                )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1520: FILE: arch/i386/mach-generic/do_timer.h:23:
+                )$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1528: FILE: include/asm-i386/hrtime-M386.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1530: FILE: include/asm-i386/hrtime-M386.h:3:
+ * File: include/asm-i386/hrtime-M386.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1542: FILE: include/asm-i386/hrtime-M386.h:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1549: FILE: include/asm-i386/hrtime-M386.h:22:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1551: FILE: include/asm-i386/hrtime-M386.h:24:
+ *    http://hegel.ittc.ukans.edu/projects/utime/ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1557: FILE: include/asm-i386/hrtime-M386.h:30:
+/* $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1567: FILE: include/asm-i386/hrtime-M386.h:40:
+#define timer_latch_reset(x) _timer_latch_reset = x

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1590: FILE: include/asm-i386/hrtime-M386.h:63:
+#define cf_arch_to_usec (SC_n(HR_SCALE_ARCH_USEC,1000000)/ \
                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxE)
#1590: FILE: include/asm-i386/hrtime-M386.h:63:
+#define cf_arch_to_usec (SC_n(HR_SCALE_ARCH_USEC,1000000)/ \
                                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1591: FILE: include/asm-i386/hrtime-M386.h:64:
+                           (long long)CLOCK_TICK_RATE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: include/asm-i386/hrtime-M386.h:64:
+                           (long long)CLOCK_TICK_RATE)$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1596: FILE: include/asm-i386/hrtime-M386.h:69:
+	return (mpy_sc_n(HR_SCALE_ARCH_USEC, update, arch_to_usec));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1598: FILE: include/asm-i386/hrtime-M386.h:71:
+}
+#define cf_arch_to_nsec (SC_n(HR_SCALE_ARCH_NSEC,1000000000)/ \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1598: FILE: include/asm-i386/hrtime-M386.h:71:
+#define cf_arch_to_nsec (SC_n(HR_SCALE_ARCH_NSEC,1000000000)/ \
                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxE)
#1598: FILE: include/asm-i386/hrtime-M386.h:71:
+#define cf_arch_to_nsec (SC_n(HR_SCALE_ARCH_NSEC,1000000000)/ \
                                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1599: FILE: include/asm-i386/hrtime-M386.h:72:
+                           (long long)CLOCK_TICK_RATE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1599: FILE: include/asm-i386/hrtime-M386.h:72:
+                           (long long)CLOCK_TICK_RATE)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1606: FILE: include/asm-i386/hrtime-M386.h:79:
+/* $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1606: FILE: include/asm-i386/hrtime-M386.h:79:
+}
+/* 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1609: FILE: include/asm-i386/hrtime-M386.h:82:
+#define cf_usec_to_arch (SC_n( HR_SCALE_USEC_ARCH,CLOCK_TICK_RATE)/ \
                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxE)
#1609: FILE: include/asm-i386/hrtime-M386.h:82:
+#define cf_usec_to_arch (SC_n( HR_SCALE_USEC_ARCH,CLOCK_TICK_RATE)/ \
                                                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1609: FILE: include/asm-i386/hrtime-M386.h:82:
+#define cf_usec_to_arch (SC_n( HR_SCALE_USEC_ARCH,CLOCK_TICK_RATE)/ \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1610: FILE: include/asm-i386/hrtime-M386.h:83:
+                                            (long long)1000000)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1610: FILE: include/asm-i386/hrtime-M386.h:83:
+                                            (long long)1000000)$

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(long long)1000000' could be '1000000LL'
#1610: FILE: include/asm-i386/hrtime-M386.h:83:
+                                            (long long)1000000)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1616: FILE: include/asm-i386/hrtime-M386.h:89:
+}
+#define cf_nsec_to_arch (SC_n( HR_SCALE_NSEC_ARCH,CLOCK_TICK_RATE)/ \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1616: FILE: include/asm-i386/hrtime-M386.h:89:
+#define cf_nsec_to_arch (SC_n( HR_SCALE_NSEC_ARCH,CLOCK_TICK_RATE)/ \
                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxE)
#1616: FILE: include/asm-i386/hrtime-M386.h:89:
+#define cf_nsec_to_arch (SC_n( HR_SCALE_NSEC_ARCH,CLOCK_TICK_RATE)/ \
                                                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1616: FILE: include/asm-i386/hrtime-M386.h:89:
+#define cf_nsec_to_arch (SC_n( HR_SCALE_NSEC_ARCH,CLOCK_TICK_RATE)/ \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1617: FILE: include/asm-i386/hrtime-M386.h:90:
+                                            (long long)1000000000)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1617: FILE: include/asm-i386/hrtime-M386.h:90:
+                                            (long long)1000000000)$

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(long long)1000000000' could be '1000000000LL'
#1617: FILE: include/asm-i386/hrtime-M386.h:90:
+                                            (long long)1000000000)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1621: FILE: include/asm-i386/hrtime-M386.h:94:
+	return (mpy_sc32(nsec, nsec_to_arch));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1623: FILE: include/asm-i386/hrtime-M386.h:96:
+}
+#ifndef CONFIG_SMP

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1639: FILE: include/asm-i386/hrtime-M386.h:112:
+#define compute_latch(APIC_clocks_jiffie) arch_to_latch = div_sc_n(   \
+                                                    HR_SCALE_ARCH_LATCH,   \
+				                    APIC_clocks_jiffie,   \
+				                    cycles_per_jiffies);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1639: FILE: include/asm-i386/hrtime-M386.h:112:
+#define compute_latch(APIC_clocks_jiffie) arch_to_latch = div_sc_n(   \
+                                                    HR_SCALE_ARCH_LATCH,   \
+				                    APIC_clocks_jiffie,   \
+				                    cycles_per_jiffies);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#1640: FILE: include/asm-i386/hrtime-M386.h:113:
+                                                    HR_SCALE_ARCH_LATCH,   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1640: FILE: include/asm-i386/hrtime-M386.h:113:
+                                                    HR_SCALE_ARCH_LATCH,   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1641: FILE: include/asm-i386/hrtime-M386.h:114:
+^I^I^I^I                    APIC_clocks_jiffie,   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1642: FILE: include/asm-i386/hrtime-M386.h:115:
+^I^I^I^I                    cycles_per_jiffies);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1646: FILE: include/asm-i386/hrtime-M386.h:119:
+	return (mpy_sc_n(HR_SCALE_ARCH_LATCH, update, arch_to_latch));

WARNING:TYPO_SPELLING: 'occurance' may be misspelled - perhaps 'occurrence'?
#1658: FILE: include/asm-i386/hrtime-M386.h:131:
+ * and time.)  We will take the occurance of an interrupt since last time
                                 ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1659: FILE: include/asm-i386/hrtime-M386.h:132:
+ * to indicate that the counter has reset.  This will work for the $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1684: FILE: include/asm-i386/hrtime-M386.h:157:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1698: FILE: include/asm-i386/hrtime-M386.h:171:
+^I * If the new count is greater than $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1699: FILE: include/asm-i386/hrtime-M386.h:172:
+^I * the last one (base_c0) the chip has just rolled and an $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1706: FILE: include/asm-i386/hrtime-M386.h:179:
+	if (rtn < base_c0_offset) {
+		rtn += _timer_latch_reset;
+	}

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1715: FILE: include/asm-i386/hrtime-M386.h:188:
+int base_c0 = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1716: FILE: include/asm-i386/hrtime-M386.h:189:
+int base_c0_offset = 0;

WARNING:INDENTED_LABEL: labels should not be indented
#1718: FILE: include/asm-i386/hrtime-M386.h:191:
+	_cycles_per_jiffies:(LATCH),

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1719: FILE: include/asm-i386/hrtime-M386.h:192:
+	_nsec_to_arch:cf_nsec_to_arch,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#1719: FILE: include/asm-i386/hrtime-M386.h:192:
+	_nsec_to_arch:cf_nsec_to_arch,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1720: FILE: include/asm-i386/hrtime-M386.h:193:
+	_usec_to_arch:cf_usec_to_arch,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#1720: FILE: include/asm-i386/hrtime-M386.h:193:
+	_usec_to_arch:cf_usec_to_arch,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1721: FILE: include/asm-i386/hrtime-M386.h:194:
+	_arch_to_nsec:cf_arch_to_nsec,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#1721: FILE: include/asm-i386/hrtime-M386.h:194:
+	_arch_to_nsec:cf_arch_to_nsec,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1722: FILE: include/asm-i386/hrtime-M386.h:195:
+	_arch_to_usec:cf_arch_to_usec,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#1722: FILE: include/asm-i386/hrtime-M386.h:195:
+	_arch_to_usec:cf_arch_to_usec,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1723: FILE: include/asm-i386/hrtime-M386.h:196:
+	_arch_to_latch:1
 	              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1725: FILE: include/asm-i386/hrtime-M386.h:198:
+};
+EXTERN int _timer_latch_reset = LATCH;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1727: FILE: include/asm-i386/hrtime-M386.h:200:
+#define set_last_timer_cc() (void)(1)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1758: FILE: include/asm-i386/hrtime-M386.h:231:
+	if (new_latch_value < TIMER_DELTA) {
+		new_latch_value = TIMER_DELTA;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1784: FILE: include/asm-i386/hrtime-M386.h:257:
+	if (base_c0 < 0) {
+		base_c0 += _timer_latch_reset;
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#1789: FILE: include/asm-i386/hrtime-M386.h:262:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1804: FILE: include/asm-i386/hrtime-M586.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1820: FILE: include/asm-i386/hrtime-M586.h:17:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1825: FILE: include/asm-i386/hrtime-M586.h:22:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1827: FILE: include/asm-i386/hrtime-M586.h:24:
+ *    http://hegel.ittc.ukans.edu/projects/utime/ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1830: FILE: include/asm-i386/hrtime-M586.h:27:
+/* $

WARNING:INDENTED_LABEL: labels should not be indented
#1845: FILE: include/asm-i386/hrtime-M586.h:42:
+	_cycles_per_jiffies:LATCH

WARNING:LINE_SPACING: Missing a blank line after declarations
#1872: FILE: include/asm-i386/hrtime-M586.h:69:
+	unsigned long old = last_update;
+	rdtscl(last_update);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1875: FILE: include/asm-i386/hrtime-M586.h:72:
+}
+extern inline unsigned long

WARNING:LINE_SPACING: Missing a blank line after declarations
#1879: FILE: include/asm-i386/hrtime-M586.h:76:
+	unsigned long value;
+	rdtscl(value);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1882: FILE: include/asm-i386/hrtime-M586.h:79:
+}
+#define arch_hrtime_init(x) (x)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1886: FILE: include/asm-i386/hrtime-M586.h:83:
+/* $

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1887: FILE: include/asm-i386/hrtime-M586.h:84:
+ * We use various scaling.  The sc32 scales by 2**32, sc_n by the first parm.
                                                                         ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1894: FILE: include/asm-i386/hrtime-M586.h:91:
+ * 50GHz with HZ set to 100.  For now we are cool and the scale of 24 works for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1895: FILE: include/asm-i386/hrtime-M586.h:92:
+ * the nano second to arch from 2MHz to 40+GHz.  $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1902: FILE: include/asm-i386/hrtime-M586.h:99:
+	return (mpy_sc32(update, arch_to_usec));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1904: FILE: include/asm-i386/hrtime-M586.h:101:
+}
+/*

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1910: FILE: include/asm-i386/hrtime-M586.h:107:
+	return (mpy_sc32(update, arch_to_latch));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1912: FILE: include/asm-i386/hrtime-M586.h:109:
+}
+#define compute_latch(APIC_clocks_jiffie) arch_to_latch = \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1912: FILE: include/asm-i386/hrtime-M586.h:109:
+#define compute_latch(APIC_clocks_jiffie) arch_to_latch = \
+                                             div_sc32(APIC_clocks_jiffie, \
+				                      cycles_per_jiffies);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1912: FILE: include/asm-i386/hrtime-M586.h:109:
+#define compute_latch(APIC_clocks_jiffie) arch_to_latch = \
+                                             div_sc32(APIC_clocks_jiffie, \
+				                      cycles_per_jiffies);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1913: FILE: include/asm-i386/hrtime-M586.h:110:
+                                             div_sc32(APIC_clocks_jiffie, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1913: FILE: include/asm-i386/hrtime-M586.h:110:
+                                             div_sc32(APIC_clocks_jiffie, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1914: FILE: include/asm-i386/hrtime-M586.h:111:
+^I^I^I^I                      cycles_per_jiffies);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1921: FILE: include/asm-i386/hrtime-M586.h:118:
+/* $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1921: FILE: include/asm-i386/hrtime-M586.h:118:
+}
+/* 

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1929: FILE: include/asm-i386/hrtime-M586.h:126:
+}
+extern inline int

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1939: FILE: include/asm-i386/hrtime-M586.h:136:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1948: FILE: include/asm-i386/hrtime-M586.h:145:
+^I * We are starting with tsc_cycles_per_5_jiffies set to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1949: FILE: include/asm-i386/hrtime-M586.h:146:
+^I * 5 times the actual value (as set by $

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1952: FILE: include/asm-i386/hrtime-M586.h:149:
+#define init_hrtimers() \
+        arch_to_usec = fast_gettimeoffset_quotient; \
+ \
+        arch_to_latch = div_ll_X_l(mpy_l_X_l_ll(fast_gettimeoffset_quotient, \
+                                                CLOCK_TICK_RATE),           \
+                                   (USEC_PER_SEC));          \
+\
+        arch_to_nsec = div_sc_n(HR_TIME_SCALE_NSEC, \
+                               CALIBRATE_TIME * NSEC_PER_USEC, \
+                               tsc_cycles_per_5_jiffies); \
+ \
+        nsec_to_arch = div_sc_n(HR_TIME_SCALE_NSEC, \
+                                tsc_cycles_per_5_jiffies, \
+                                CALIBRATE_TIME * NSEC_PER_USEC); \
+        usec_to_arch = div_sc_n(HR_TIME_SCALE_USEC, \
+                                tsc_cycles_per_5_jiffies, \
+                                CALIBRATE_TIME ); \
+        cycles_per_jiffies = tsc_cycles_per_5_jiffies / CAL_JIFS;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1952: FILE: include/asm-i386/hrtime-M586.h:149:
+#define init_hrtimers() \
+        arch_to_usec = fast_gettimeoffset_quotient; \
+ \
+        arch_to_latch = div_ll_X_l(mpy_l_X_l_ll(fast_gettimeoffset_quotient, \
+                                                CLOCK_TICK_RATE),           \
+                                   (USEC_PER_SEC));          \
+\
+        arch_to_nsec = div_sc_n(HR_TIME_SCALE_NSEC, \
+                               CALIBRATE_TIME * NSEC_PER_USEC, \
+                               tsc_cycles_per_5_jiffies); \
+ \
+        nsec_to_arch = div_sc_n(HR_TIME_SCALE_NSEC, \
+                                tsc_cycles_per_5_jiffies, \
+                                CALIBRATE_TIME * NSEC_PER_USEC); \
+        usec_to_arch = div_sc_n(HR_TIME_SCALE_USEC, \
+                                tsc_cycles_per_5_jiffies, \
+                                CALIBRATE_TIME ); \
+        cycles_per_jiffies = tsc_cycles_per_5_jiffies / CAL_JIFS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1953: FILE: include/asm-i386/hrtime-M586.h:150:
+        arch_to_usec = fast_gettimeoffset_quotient; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1953: FILE: include/asm-i386/hrtime-M586.h:150:
+        arch_to_usec = fast_gettimeoffset_quotient; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1954: FILE: include/asm-i386/hrtime-M586.h:151:
+ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1955: FILE: include/asm-i386/hrtime-M586.h:152:
+        arch_to_latch = div_ll_X_l(mpy_l_X_l_ll(fast_gettimeoffset_quotient, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1955: FILE: include/asm-i386/hrtime-M586.h:152:
+        arch_to_latch = div_ll_X_l(mpy_l_X_l_ll(fast_gettimeoffset_quotient, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1956: FILE: include/asm-i386/hrtime-M586.h:153:
+                                                CLOCK_TICK_RATE),           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1956: FILE: include/asm-i386/hrtime-M586.h:153:
+                                                CLOCK_TICK_RATE),           \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1957: FILE: include/asm-i386/hrtime-M586.h:154:
+                                   (USEC_PER_SEC));          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1957: FILE: include/asm-i386/hrtime-M586.h:154:
+                                   (USEC_PER_SEC));          \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1959: FILE: include/asm-i386/hrtime-M586.h:156:
+        arch_to_nsec = div_sc_n(HR_TIME_SCALE_NSEC, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1959: FILE: include/asm-i386/hrtime-M586.h:156:
+        arch_to_nsec = div_sc_n(HR_TIME_SCALE_NSEC, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1960: FILE: include/asm-i386/hrtime-M586.h:157:
+                               CALIBRATE_TIME * NSEC_PER_USEC, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1960: FILE: include/asm-i386/hrtime-M586.h:157:
+                               CALIBRATE_TIME * NSEC_PER_USEC, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1961: FILE: include/asm-i386/hrtime-M586.h:158:
+                               tsc_cycles_per_5_jiffies); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1961: FILE: include/asm-i386/hrtime-M586.h:158:
+                               tsc_cycles_per_5_jiffies); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1962: FILE: include/asm-i386/hrtime-M586.h:159:
+ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1963: FILE: include/asm-i386/hrtime-M586.h:160:
+        nsec_to_arch = div_sc_n(HR_TIME_SCALE_NSEC, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1963: FILE: include/asm-i386/hrtime-M586.h:160:
+        nsec_to_arch = div_sc_n(HR_TIME_SCALE_NSEC, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1964: FILE: include/asm-i386/hrtime-M586.h:161:
+                                tsc_cycles_per_5_jiffies, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1964: FILE: include/asm-i386/hrtime-M586.h:161:
+                                tsc_cycles_per_5_jiffies, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1965: FILE: include/asm-i386/hrtime-M586.h:162:
+                                CALIBRATE_TIME * NSEC_PER_USEC); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1965: FILE: include/asm-i386/hrtime-M586.h:162:
+                                CALIBRATE_TIME * NSEC_PER_USEC); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1966: FILE: include/asm-i386/hrtime-M586.h:163:
+        usec_to_arch = div_sc_n(HR_TIME_SCALE_USEC, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1966: FILE: include/asm-i386/hrtime-M586.h:163:
+        usec_to_arch = div_sc_n(HR_TIME_SCALE_USEC, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1967: FILE: include/asm-i386/hrtime-M586.h:164:
+                                tsc_cycles_per_5_jiffies, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1967: FILE: include/asm-i386/hrtime-M586.h:164:
+                                tsc_cycles_per_5_jiffies, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1968: FILE: include/asm-i386/hrtime-M586.h:165:
+                                CALIBRATE_TIME ); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1968: FILE: include/asm-i386/hrtime-M586.h:165:
+                                CALIBRATE_TIME ); \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1968: FILE: include/asm-i386/hrtime-M586.h:165:
+                                CALIBRATE_TIME ); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1969: FILE: include/asm-i386/hrtime-M586.h:166:
+        cycles_per_jiffies = tsc_cycles_per_5_jiffies / CAL_JIFS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1969: FILE: include/asm-i386/hrtime-M586.h:166:
+        cycles_per_jiffies = tsc_cycles_per_5_jiffies / CAL_JIFS;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1978: FILE: include/asm-i386/hrtime-Macpi.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1980: FILE: include/asm-i386/hrtime-Macpi.h:3:
+ * File: include/asm-i386/hrtime-Macpi.h $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1980: FILE: include/asm-i386/hrtime-Macpi.h:3:
+ * File: include/asm-i386/hrtime-Macpi.h 

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1988: FILE: include/asm-i386/hrtime-Macpi.h:11:
+#include <asm/io.h>

CHECK:CAMELCASE: Avoid CamelCase: <_ASM_HRTIME_Macpi_H>
#1989: FILE: include/asm-i386/hrtime-Macpi.h:12:
+#ifndef _ASM_HRTIME_Macpi_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2004: FILE: include/asm-i386/hrtime-Macpi.h:27:
+extern void set_last_timer_cc(void);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2023: FILE: include/asm-i386/hrtime-Macpi.h:46:
+}
+extern inline unsigned long

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2028: FILE: include/asm-i386/hrtime-Macpi.h:51:
+}
+#define arch_hrtime_init(x) (x)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2030: FILE: include/asm-i386/hrtime-Macpi.h:53:
+/* $

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2031: FILE: include/asm-i386/hrtime-Macpi.h:54:
+ * We use various scaling.  The sc32 scales by 2**32, sc_n by the first parm.
                                                                         ^^^^

ERROR:SPACING: exactly one space required after that #ifndef
#2042: FILE: include/asm-i386/hrtime-Macpi.h:65:
+#ifndef  PM_TIMER_FREQUENCY

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2047: FILE: include/asm-i386/hrtime-Macpi.h:70:
+#define cf_arch_to_usec (SC_32(100000000)/(long long)PM_TIMER_FREQUENCY_x_100)
                                          ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2051: FILE: include/asm-i386/hrtime-Macpi.h:74:
+	return (mpy_sc32(update, arch_to_usec));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2053: FILE: include/asm-i386/hrtime-Macpi.h:76:
+/* $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2053: FILE: include/asm-i386/hrtime-Macpi.h:76:
+}
+/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2054: FILE: include/asm-i386/hrtime-Macpi.h:77:
+ * Note: In the SMP case this value will be overwritten when the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2056: FILE: include/asm-i386/hrtime-Macpi.h:79:
+ * If the system is not SMP, the PIT is the ticker and this is the $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2059: FILE: include/asm-i386/hrtime-Macpi.h:82:
+#define cf_arch_to_latch SC_32(CLOCK_TICK_RATE)/(long long)(CLOCK_TICK_RATE * 3)
                                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2059: FILE: include/asm-i386/hrtime-Macpi.h:82:
+#define cf_arch_to_latch SC_32(CLOCK_TICK_RATE)/(long long)(CLOCK_TICK_RATE * 3)

WARNING:TYPO_SPELLING: 'cyrstal' may be misspelled - perhaps 'crystal'?
#2065: FILE: include/asm-i386/hrtime-Macpi.h:88:
+ * are on the same cyrstal so will be EXACTLY 1/3.
                    ^^^^^^^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2070: FILE: include/asm-i386/hrtime-Macpi.h:93:
+	return (mpy_sc32(update, arch_to_latch));

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2080: FILE: include/asm-i386/hrtime-Macpi.h:103:
+#define compute_latch(APIC_clocks_jiffie) arch_to_latch = div_sc_n(   \
+                                                    HR_SCALE_ARCH_LATCH,   \
+				                    APIC_clocks_jiffie,   \
+				                    cycles_per_jiffies);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2080: FILE: include/asm-i386/hrtime-Macpi.h:103:
+#define compute_latch(APIC_clocks_jiffie) arch_to_latch = div_sc_n(   \
+                                                    HR_SCALE_ARCH_LATCH,   \
+				                    APIC_clocks_jiffie,   \
+				                    cycles_per_jiffies);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2081: FILE: include/asm-i386/hrtime-Macpi.h:104:
+                                                    HR_SCALE_ARCH_LATCH,   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2081: FILE: include/asm-i386/hrtime-Macpi.h:104:
+                                                    HR_SCALE_ARCH_LATCH,   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2082: FILE: include/asm-i386/hrtime-Macpi.h:105:
+^I^I^I^I                    APIC_clocks_jiffie,   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2083: FILE: include/asm-i386/hrtime-Macpi.h:106:
+^I^I^I^I                    cycles_per_jiffies);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2087: FILE: include/asm-i386/hrtime-Macpi.h:110:
+	return (mpy_sc_n(HR_SCALE_ARCH_LATCH, update, arch_to_latch));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2092: FILE: include/asm-i386/hrtime-Macpi.h:115:
+#define cf_arch_to_nsec (SC_n(HR_SCALE_ARCH_NSEC,100000000000LL)/ \
                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxE)
#2092: FILE: include/asm-i386/hrtime-Macpi.h:115:
+#define cf_arch_to_nsec (SC_n(HR_SCALE_ARCH_NSEC,100000000000LL)/ \
                                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2093: FILE: include/asm-i386/hrtime-Macpi.h:116:
+                           (long long)PM_TIMER_FREQUENCY_x_100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2093: FILE: include/asm-i386/hrtime-Macpi.h:116:
+                           (long long)PM_TIMER_FREQUENCY_x_100)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2100: FILE: include/asm-i386/hrtime-Macpi.h:123:
+/* $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2100: FILE: include/asm-i386/hrtime-Macpi.h:123:
+}
+/* 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2103: FILE: include/asm-i386/hrtime-Macpi.h:126:
+#define cf_usec_to_arch (SC_n( HR_SCALE_USEC_ARCH,PM_TIMER_FREQUENCY_x_100)/ \
                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxE)
#2103: FILE: include/asm-i386/hrtime-Macpi.h:126:
+#define cf_usec_to_arch (SC_n( HR_SCALE_USEC_ARCH,PM_TIMER_FREQUENCY_x_100)/ \
                                                                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2103: FILE: include/asm-i386/hrtime-Macpi.h:126:
+#define cf_usec_to_arch (SC_n( HR_SCALE_USEC_ARCH,PM_TIMER_FREQUENCY_x_100)/ \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2104: FILE: include/asm-i386/hrtime-Macpi.h:127:
+                                            (long long)100000000)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2104: FILE: include/asm-i386/hrtime-Macpi.h:127:
+                                            (long long)100000000)$

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(long long)100000000' could be '100000000LL'
#2104: FILE: include/asm-i386/hrtime-Macpi.h:127:
+                                            (long long)100000000)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2110: FILE: include/asm-i386/hrtime-Macpi.h:133:
+}
+#define cf_nsec_to_arch (SC_n( HR_SCALE_NSEC_ARCH,PM_TIMER_FREQUENCY)/ \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2110: FILE: include/asm-i386/hrtime-Macpi.h:133:
+#define cf_nsec_to_arch (SC_n( HR_SCALE_NSEC_ARCH,PM_TIMER_FREQUENCY)/ \
                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxE)
#2110: FILE: include/asm-i386/hrtime-Macpi.h:133:
+#define cf_nsec_to_arch (SC_n( HR_SCALE_NSEC_ARCH,PM_TIMER_FREQUENCY)/ \
                                                                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2110: FILE: include/asm-i386/hrtime-Macpi.h:133:
+#define cf_nsec_to_arch (SC_n( HR_SCALE_NSEC_ARCH,PM_TIMER_FREQUENCY)/ \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2111: FILE: include/asm-i386/hrtime-Macpi.h:134:
+                                            (long long)1000000000)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2111: FILE: include/asm-i386/hrtime-Macpi.h:134:
+                                            (long long)1000000000)$

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(long long)1000000000' could be '1000000000LL'
#2111: FILE: include/asm-i386/hrtime-Macpi.h:134:
+                                            (long long)1000000000)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2118: FILE: include/asm-i386/hrtime-Macpi.h:141:
+extern int hrt_get_acpi_pm_ptr(void);

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#2123: FILE: include/asm-i386/hrtime-Macpi.h:146:
+#include <asm/io.h>

WARNING:INDENTED_LABEL: labels should not be indented
#2125: FILE: include/asm-i386/hrtime-Macpi.h:148:
+	_cycles_per_jiffies:((PM_TIMER_FREQUENCY + HZ / 2) / HZ),

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2126: FILE: include/asm-i386/hrtime-Macpi.h:149:
+	_nsec_to_arch:cf_nsec_to_arch,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#2126: FILE: include/asm-i386/hrtime-Macpi.h:149:
+	_nsec_to_arch:cf_nsec_to_arch,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2127: FILE: include/asm-i386/hrtime-Macpi.h:150:
+	_usec_to_arch:cf_usec_to_arch,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#2127: FILE: include/asm-i386/hrtime-Macpi.h:150:
+	_usec_to_arch:cf_usec_to_arch,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2128: FILE: include/asm-i386/hrtime-Macpi.h:151:
+	_arch_to_nsec:cf_arch_to_nsec,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#2128: FILE: include/asm-i386/hrtime-Macpi.h:151:
+	_arch_to_nsec:cf_arch_to_nsec,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2129: FILE: include/asm-i386/hrtime-Macpi.h:152:
+	_arch_to_usec:cf_arch_to_usec,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#2129: FILE: include/asm-i386/hrtime-Macpi.h:152:
+	_arch_to_usec:cf_arch_to_usec,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2130: FILE: include/asm-i386/hrtime-Macpi.h:153:
+	_arch_to_latch:cf_arch_to_latch
 	              ^

WARNING:INDENTED_LABEL: labels should not be indented
#2130: FILE: include/asm-i386/hrtime-Macpi.h:153:
+	_arch_to_latch:cf_arch_to_latch

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2132: FILE: include/asm-i386/hrtime-Macpi.h:155:
+};
+int acpi_pm_tmr_address;

WARNING:REPEATED_WORD: Possible repeated word: 'has'
#2142: FILE: include/asm-i386/hrtime-Macpi.h:165:
+ * Here we have a local udelay for our init use only.  The system delay has
+ * has not yet been calibrated when we use this, however, we do know

ERROR:SPACING: space prohibited after that open parenthesis '('
#2146: FILE: include/asm-i386/hrtime-Macpi.h:169:
+#if defined( CONFIG_HIGH_RES_TIMER_ACPI_PM_ADD) && CONFIG_HIGH_RES_TIMER_ACPI_PM_ADD > 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#2152: FILE: include/asm-i386/hrtime-Macpi.h:175:
+        "High-res-timers: ACPI pm timer not found(%d) and no backup."\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2152: FILE: include/asm-i386/hrtime-Macpi.h:175:
+        "High-res-timers: ACPI pm timer not found(%d) and no backup."\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2153: FILE: include/asm-i386/hrtime-Macpi.h:176:
+        "\nCheck BIOS settings or supply a backup.  See configure documentation.\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2153: FILE: include/asm-i386/hrtime-Macpi.h:176:
+        "\nCheck BIOS settings or supply a backup.  See configure documentation.\n"$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2172: FILE: include/asm-i386/hrtime.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2174: FILE: include/asm-i386/hrtime.h:3:
+ * File: include/asm-i386/hrtime.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2175: FILE: include/asm-i386/hrtime.h:4:
+ * Copyright (C) 1999 by the University of Kansas Center for Research, Inc.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2186: FILE: include/asm-i386/hrtime.h:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2191: FILE: include/asm-i386/hrtime.h:20:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2193: FILE: include/asm-i386/hrtime.h:22:
+ *    http://hegel.ittc.ukans.edu/projects/utime/ $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#2206: FILE: include/asm-i386/hrtime.h:35:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#2208: FILE: include/asm-i386/hrtime.h:37:
+#include <asm/delay.h>

WARNING:INCLUDE_LINUX: Use #include <linux/smp.h> instead of <asm/smp.h>
#2209: FILE: include/asm-i386/hrtime.h:38:
+#include <asm/smp.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2212: FILE: include/asm-i386/hrtime.h:41:
+/*
+

WARNING:TYPO_SPELLING: 'programing' may be misspelled - perhaps 'programming'?
#2214: FILE: include/asm-i386/hrtime.h:43:
+ * 1/HZ interrupts.  This is done by programing the interrupt we want
                                      ^^^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'it'
#2215: FILE: include/asm-i386/hrtime.h:44:
+ * and, once it it loaded, (in the case of the PIT) dropping a 1/HZ

WARNING:REPEATED_WORD: Possible repeated word: 'The'
#2217: FILE: include/asm-i386/hrtime.h:46:
+ * such as programming a 1/HZ interval on interrupt.  The The PIT will

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2221: FILE: include/asm-i386/hrtime.h:50:
+ * If no sub 1/HZ ticks are needed AND we are aligned with the 1/HZ $

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#2222: FILE: include/asm-i386/hrtime.h:51:
+ * boundry, we don't need to touch the PIT.  Otherwise we do the above.
    ^^^^^^^

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#2227: FILE: include/asm-i386/hrtime.h:56:
+ *    the next 1/HZ interval (unless we drift away from the 1/HZ boundry).
                                                                  ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2231: FILE: include/asm-i386/hrtime.h:60:
+ * The high-res-timers option is set up to self configure with different $

WARNING:TYPO_SPELLING: 'certian' may be misspelled - perhaps 'certain'?
#2232: FILE: include/asm-i386/hrtime.h:61:
+ * platforms.  It is up to the platform to provide certian macros which
                                                    ^^^^^^^

WARNING:TYPO_SPELLING: 'seperated' may be misspelled - perhaps 'separated'?
#2237: FILE: include/asm-i386/hrtime.h:66:
+ * be seperated from the time keeping tick.  A tick can still be generated
       ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2244: FILE: include/asm-i386/hrtime.h:73:
+ * update_jiffies()  This macro is to compute the new value of jiffie and $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2249: FILE: include/asm-i386/hrtime.h:78:
+ * ^I(*(u64 *)&jiffies_64)++;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2256: FILE: include/asm-i386/hrtime.h:85:
+ * interrupt which may be more often than 1/HZ.  It is up to the code to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2269: FILE: include/asm-i386/hrtime.h:98:
+ * schedule_next_int(jiffie_f,sub_jiffie_v,always) is a macro that the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2270: FILE: include/asm-i386/hrtime.h:99:
+ *                                 platform should $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2271: FILE: include/asm-i386/hrtime.h:100:
+ *                                 provide that will set up the timer interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2273: FILE: include/asm-i386/hrtime.h:102:
+ *                                 defined by jiffie_f,sub_jiffie_v where the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2274: FILE: include/asm-i386/hrtime.h:103:
+ *                                 units are 1/HZ and the platform defined $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2275: FILE: include/asm-i386/hrtime.h:104:
+ *                                 sub_jiffie unit.  This function must $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2276: FILE: include/asm-i386/hrtime.h:105:
+ *                                 determine the actual current time and the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2277: FILE: include/asm-i386/hrtime.h:106:
+ *                                 requested offset and act accordingly.  A $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2278: FILE: include/asm-i386/hrtime.h:107:
+ *                                 sub_jiffie_v value of -1 should be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2279: FILE: include/asm-i386/hrtime.h:108:
+ *                                 understood to mean the next even jiffie $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2280: FILE: include/asm-i386/hrtime.h:109:
+ *                                 regardless of the jiffie_f value.  If $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2281: FILE: include/asm-i386/hrtime.h:110:
+ *                                 the current jiffie is not jiffie_f, it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2282: FILE: include/asm-i386/hrtime.h:111:
+ *                                 may be assumed that the requested time $

WARNING:TYPO_SPELLING: 'immeadiate' may be misspelled - perhaps 'immediate'?
#2283: FILE: include/asm-i386/hrtime.h:112:
+ *                                 has passed and an immeadiate interrupt 
                                                      ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2283: FILE: include/asm-i386/hrtime.h:112:
+ *                                 has passed and an immeadiate interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2284: FILE: include/asm-i386/hrtime.h:113:
+ *                                 should be taken.  If high-res-timers are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2285: FILE: include/asm-i386/hrtime.h:114:
+ *                                 not available, this macro should evaluate $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2305: FILE: include/asm-i386/hrtime.h:134:
+/*
+

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#2307: FILE: include/asm-i386/hrtime.h:136:
+ * on the 1/HZ boundry (assuming we don't need sub_jiffie interrupts) if
                ^^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2331: FILE: include/asm-i386/hrtime.h:160:
+#define USEC_PER_JIFFIES  (1000000/HZ)
                                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2346: FILE: include/asm-i386/hrtime.h:175:
+#define READ_CNT0(varr) {varr = inb(PIT0);varr += (inb(PIT0))<<8;}
                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2346: FILE: include/asm-i386/hrtime.h:175:
+#define READ_CNT0(varr) {varr = inb(PIT0);varr += (inb(PIT0))<<8;}
                                                              ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2346: FILE: include/asm-i386/hrtime.h:175:
+#define READ_CNT0(varr) {varr = inb(PIT0);varr += (inb(PIT0))<<8;}
                                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'varr' - possible side-effects?
#2346: FILE: include/asm-i386/hrtime.h:175:
+#define READ_CNT0(varr) {varr = inb(PIT0);varr += (inb(PIT0))<<8;}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2348: FILE: include/asm-i386/hrtime.h:177:
+#define LATCH_CNT0() { outb(PIT0_LATCH_COUNT,PIT_COMMAND); }
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2349: FILE: include/asm-i386/hrtime.h:178:
+#define LATCH_CNT0_AND_CNT1() { outb(PIT01_LATCH_COUNT,PIT_COMMAND); }
                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2351: FILE: include/asm-i386/hrtime.h:180:
+#define TO_LATCH(x) (((x)*LATCH)/USEC_PER_JIFFIES)
                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2351: FILE: include/asm-i386/hrtime.h:180:
+#define TO_LATCH(x) (((x)*LATCH)/USEC_PER_JIFFIES)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2354: FILE: include/asm-i386/hrtime.h:183:
+#define schedule_next_int(a,b,c)  _schedule_next_int(a,b,c)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2354: FILE: include/asm-i386/hrtime.h:183:
+#define schedule_next_int(a,b,c)  _schedule_next_int(a,b,c)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2354: FILE: include/asm-i386/hrtime.h:183:
+#define schedule_next_int(a,b,c)  _schedule_next_int(a,b,c)
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2354: FILE: include/asm-i386/hrtime.h:183:
+#define schedule_next_int(a,b,c)  _schedule_next_int(a,b,c)
                                                         ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2362: FILE: include/asm-i386/hrtime.h:191:
+extern volatile unsigned long jiffies;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2365: FILE: include/asm-i386/hrtime.h:194:
+extern int _schedule_next_int(unsigned long jiffie_f, long sub_jiffie_in,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2368: FILE: include/asm-i386/hrtime.h:197:
+extern unsigned int volatile latch_reload;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2371: FILE: include/asm-i386/hrtime.h:200:
+EXTERN long volatile _new_jiffie;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2373: FILE: include/asm-i386/hrtime.h:202:
+EXTERN unsigned long volatile last_update;

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2398: FILE: include/asm-i386/hrtime.h:227:
+#error "Need one of: CONFIG_HIGH_RES_TIMER_ACPI_PM CONFIG_HIGH_RES_TIMER_TSC CONFIG_HIGH_RES_TIMER_PIT"

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#2421: FILE: include/asm-i386/hrtime.h:250:
+	while ((unsigned long) _sub_jiffie > cycles_per_jiffies) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxW)
#2429: FILE: include/asm-i386/hrtime.h:258:
+#define SC_32_TO_USEC (SC_32(1000000)/ (long long)CLOCK_TICK_RATE)
                                      ^

WARNING:TYPO_SPELLING: 'occure' may be misspelled - perhaps 'occur'?
#2436: FILE: include/asm-i386/hrtime.h:265:
+	 * occure on exactly the requested time.  If we are not doing 
 	   ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2436: FILE: include/asm-i386/hrtime.h:265:
+^I * occure on exactly the requested time.  If we are not doing $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2438: FILE: include/asm-i386/hrtime.h:267:
+^I * beyond the 1/HZ, i.e. _sub_jiffie will have some small value. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2439: FILE: include/asm-i386/hrtime.h:268:
+^I * This value will drift AND may jump upward from time to time. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2440: FILE: include/asm-i386/hrtime.h:269:
+^I * The drift is due to not having precise tracking between the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2442: FILE: include/asm-i386/hrtime.h:271:
+^I * the jump is caused by interrupt delays, cache misses etc. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2443: FILE: include/asm-i386/hrtime.h:272:
+^I * We need to correct for the drift.  To correct all we need to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2444: FILE: include/asm-i386/hrtime.h:273:
+^I * do is to set "last_was_long" to zero and a new timer program $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2447: FILE: include/asm-i386/hrtime.h:276:
+^I * Detecting the need to do this correction is another issue. $

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#2450: FILE: include/asm-i386/hrtime.h:279:
+	 * interrupt should be on a 1/HZ boundry) we check the resulting 
 	                                 ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2450: FILE: include/asm-i386/hrtime.h:279:
+^I * interrupt should be on a 1/HZ boundry) we check the resulting $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2452: FILE: include/asm-i386/hrtime.h:281:
+^I * the correction.  (Note that drift that makes the value  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2454: FILE: include/asm-i386/hrtime.h:283:
+^I * _sub_jiffie <= some max at least once over a period of 1 second. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2458: FILE: include/asm-i386/hrtime.h:287:
+^I * The values we use for min_hz_sub_jiffie and max_hz_sub_jiffie $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2476: FILE: include/asm-i386/hrtime.h:305:
+	while (timer_discipline_diff > cycles_per_jiffies) {
+		timer_discipline_diff -= cycles_per_jiffies;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2509: FILE: include/asm-i386/hrtime.h:338:
+ * quick_update_jiffies_sub returns the sub_jiffie offset of $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2517: FILE: include/asm-i386/hrtime.h:346:
+#if defined (CONFIG_SMP) || defined(CONFIG_HIGH_RES_TIMER_PIT)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2537: FILE: include/asm-i386/hrtime.h:366:
+	unsigned long last_update_f;
+	do {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#2544: FILE: include/asm-i386/hrtime.h:373:
+	} while (*jiffies_f != jiffies || last_update_f != last_update);

CHECK:SPACING: No space is necessary after a cast
#2563: FILE: include/asm-i386/hrtime.h:392:
+	rtn = _sub_jiffie_f + (unsigned long) update;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2567: FILE: include/asm-i386/hrtime.h:396:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2568: FILE: include/asm-i386/hrtime.h:397:
+}
+#ifdef CONFIG_X86_LOCAL_APIC

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2571: FILE: include/asm-i386/hrtime.h:400:
+ * If we have a local APIC, we will use its counter to get the needed $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2576: FILE: include/asm-i386/hrtime.h:405:
+extern void __setup_APIC_LVTT(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2576: FILE: include/asm-i386/hrtime.h:405:
+extern void __setup_APIC_LVTT(unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2593: FILE: include/asm-i386/hrtime.h:422:
+^I * The profile counter may be set causing us to ignor (or $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2617: FILE: include/asm-i386/hrtime.h:446:
+	if (new_latch_value < TIMER_DELTA) {
+		new_latch_value = TIMER_DELTA;
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#2632: FILE: include/asm-i386/hrtime.h:461:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2648: FILE: include/asm-i386/hrtime.h:477:
+ * we get to the jiffies update code. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2666: FILE: include/asm-i386/hrtime.h:495:
+        { unsigned long end = jiffies + HZ + HZ; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2666: FILE: include/asm-i386/hrtime.h:495:
+        { unsigned long end = jiffies + HZ + HZ; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2667: FILE: include/asm-i386/hrtime.h:496:
+          int min_a =  cycles_per_jiffies, min_b =  cycles_per_jiffies;  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2667: FILE: include/asm-i386/hrtime.h:496:
+          int min_a =  cycles_per_jiffies, min_b =  cycles_per_jiffies;  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2668: FILE: include/asm-i386/hrtime.h:497:
+          long flags;                         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2668: FILE: include/asm-i386/hrtime.h:497:
+          long flags;                         \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2669: FILE: include/asm-i386/hrtime.h:498:
+          int * last_was_long = &_last_was_long[smp_processor_id()];   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2669: FILE: include/asm-i386/hrtime.h:498:
+          int * last_was_long = &_last_was_long[smp_processor_id()];   \$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2669: FILE: include/asm-i386/hrtime.h:498:
+          int * last_was_long = &_last_was_long[smp_processor_id()];   \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2670: FILE: include/asm-i386/hrtime.h:499:
+          while (time_before(jiffies,end)){ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2670: FILE: include/asm-i386/hrtime.h:499:
+          while (time_before(jiffies,end)){ \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 15)
#2670: FILE: include/asm-i386/hrtime.h:499:
+          while (time_before(jiffies,end)){ \
+               unsigned long f_jiffies = jiffies;     \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2670: FILE: include/asm-i386/hrtime.h:499:
+          while (time_before(jiffies,end)){ \
                                     ^

ERROR:SPACING: space required before the open brace '{'
#2670: FILE: include/asm-i386/hrtime.h:499:
+          while (time_before(jiffies,end)){ \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2671: FILE: include/asm-i386/hrtime.h:500:
+               unsigned long f_jiffies = jiffies;     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2671: FILE: include/asm-i386/hrtime.h:500:
+               unsigned long f_jiffies = jiffies;     \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2672: FILE: include/asm-i386/hrtime.h:501:
+               while (jiffies == f_jiffies); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2672: FILE: include/asm-i386/hrtime.h:501:
+               while (jiffies == f_jiffies); \$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2672: FILE: include/asm-i386/hrtime.h:501:
+               while (jiffies == f_jiffies); \

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#2672: FILE: include/asm-i386/hrtime.h:501:
+               while (jiffies == f_jiffies); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2673: FILE: include/asm-i386/hrtime.h:502:
+               *last_was_long = 0;            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2673: FILE: include/asm-i386/hrtime.h:502:
+               *last_was_long = 0;            \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2674: FILE: include/asm-i386/hrtime.h:503:
+               while (jiffies == f_jiffies + 1); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2674: FILE: include/asm-i386/hrtime.h:503:
+               while (jiffies == f_jiffies + 1); \$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2674: FILE: include/asm-i386/hrtime.h:503:
+               while (jiffies == f_jiffies + 1); \

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#2674: FILE: include/asm-i386/hrtime.h:503:
+               while (jiffies == f_jiffies + 1); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2675: FILE: include/asm-i386/hrtime.h:504:
+               read_lock_irqsave(&xtime_lock, flags); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2675: FILE: include/asm-i386/hrtime.h:504:
+               read_lock_irqsave(&xtime_lock, flags); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2676: FILE: include/asm-i386/hrtime.h:505:
+               if (  timer_discipline_diff < min_a) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2676: FILE: include/asm-i386/hrtime.h:505:
+               if (  timer_discipline_diff < min_a) \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 21)
#2676: FILE: include/asm-i386/hrtime.h:505:
+               if (  timer_discipline_diff < min_a) \
+                     min_a =   timer_discipline_diff; \

ERROR:SPACING: space prohibited after that open parenthesis '('
#2676: FILE: include/asm-i386/hrtime.h:505:
+               if (  timer_discipline_diff < min_a) \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2677: FILE: include/asm-i386/hrtime.h:506:
+                     min_a =   timer_discipline_diff; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2677: FILE: include/asm-i386/hrtime.h:506:
+                     min_a =   timer_discipline_diff; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2678: FILE: include/asm-i386/hrtime.h:507:
+               read_unlock_irqrestore(&xtime_lock, flags); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2678: FILE: include/asm-i386/hrtime.h:507:
+               read_unlock_irqrestore(&xtime_lock, flags); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2679: FILE: include/asm-i386/hrtime.h:508:
+               while (jiffies == f_jiffies + 2); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2679: FILE: include/asm-i386/hrtime.h:508:
+               while (jiffies == f_jiffies + 2); \$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2679: FILE: include/asm-i386/hrtime.h:508:
+               while (jiffies == f_jiffies + 2); \

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#2679: FILE: include/asm-i386/hrtime.h:508:
+               while (jiffies == f_jiffies + 2); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2680: FILE: include/asm-i386/hrtime.h:509:
+               read_lock_irqsave(&xtime_lock, flags); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2680: FILE: include/asm-i386/hrtime.h:509:
+               read_lock_irqsave(&xtime_lock, flags); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2681: FILE: include/asm-i386/hrtime.h:510:
+               if (  timer_discipline_diff < min_b) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2681: FILE: include/asm-i386/hrtime.h:510:
+               if (  timer_discipline_diff < min_b) \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 21)
#2681: FILE: include/asm-i386/hrtime.h:510:
+               if (  timer_discipline_diff < min_b) \
+                     min_b =   timer_discipline_diff; \

ERROR:SPACING: space prohibited after that open parenthesis '('
#2681: FILE: include/asm-i386/hrtime.h:510:
+               if (  timer_discipline_diff < min_b) \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2682: FILE: include/asm-i386/hrtime.h:511:
+                     min_b =   timer_discipline_diff; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2682: FILE: include/asm-i386/hrtime.h:511:
+                     min_b =   timer_discipline_diff; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2683: FILE: include/asm-i386/hrtime.h:512:
+               read_unlock_irqrestore(&xtime_lock, flags); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2683: FILE: include/asm-i386/hrtime.h:512:
+               read_unlock_irqrestore(&xtime_lock, flags); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2684: FILE: include/asm-i386/hrtime.h:513:
+          }                             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2684: FILE: include/asm-i386/hrtime.h:513:
+          }                             \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2685: FILE: include/asm-i386/hrtime.h:514:
+         min_hz_sub_jiffie = min_b -  nsec_to_arch_cycles(NANOSEC_SYNC_LIMIT);\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2685: FILE: include/asm-i386/hrtime.h:514:
+         min_hz_sub_jiffie = min_b -  nsec_to_arch_cycles(NANOSEC_SYNC_LIMIT);\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2686: FILE: include/asm-i386/hrtime.h:515:
+          if( min_hz_sub_jiffie < 0)  min_hz_sub_jiffie = 0; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2686: FILE: include/asm-i386/hrtime.h:515:
+          if( min_hz_sub_jiffie < 0)  min_hz_sub_jiffie = 0; \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#2686: FILE: include/asm-i386/hrtime.h:515:
+          if( min_hz_sub_jiffie < 0)  min_hz_sub_jiffie = 0; \

ERROR:SPACING: space required before the open parenthesis '('
#2686: FILE: include/asm-i386/hrtime.h:515:
+          if( min_hz_sub_jiffie < 0)  min_hz_sub_jiffie = 0; \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2686: FILE: include/asm-i386/hrtime.h:515:
+          if( min_hz_sub_jiffie < 0)  min_hz_sub_jiffie = 0; \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2687: FILE: include/asm-i386/hrtime.h:516:
+          max_hz_sub_jiffie = min_b +  nsec_to_arch_cycles(NANOSEC_SYNC_LIMIT);\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2687: FILE: include/asm-i386/hrtime.h:516:
+          max_hz_sub_jiffie = min_b +  nsec_to_arch_cycles(NANOSEC_SYNC_LIMIT);\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2688: FILE: include/asm-i386/hrtime.h:517:
+       timer_delta = arch_cycles_to_latch(usec_to_arch_cycles(TIMER_DELTA)); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2689: FILE: include/asm-i386/hrtime.h:518:
+       }$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2699: FILE: include/asm-i386/sc_math.h:1:
+#ifndef SC_MATH

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2707: FILE: include/asm-i386/sc_math.h:9:
+#define SC_32(x) ((long long)x<<32)
                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#2707: FILE: include/asm-i386/sc_math.h:9:
+#define SC_32(x) ((long long)x<<32)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2708: FILE: include/asm-i386/sc_math.h:10:
+#define SC_n(n,x) (((long long)x)<<n)
               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2708: FILE: include/asm-i386/sc_math.h:10:
+#define SC_n(n,x) (((long long)x)<<n)
                                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#2708: FILE: include/asm-i386/sc_math.h:10:
+#define SC_n(n,x) (((long long)x)<<n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2719: FILE: include/asm-i386/sc_math.h:21:
+      __asm__("imull %2":"=a"(a), "=d"(edx)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2719: FILE: include/asm-i386/sc_math.h:21:
+      __asm__("imull %2":"=a"(a), "=d"(edx)
                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2720: FILE: include/asm-i386/sc_math.h:22:
+      :^I"rm"(b), "0"(a));$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2723: FILE: include/asm-i386/sc_math.h:25:
+}
+/*

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#2730: FILE: include/asm-i386/sc_math.h:32:
+	long dum;
 	     ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#2731: FILE: include/asm-i386/sc_math.h:33:
+      __asm__("divl %2":"=a"(b), "=d"(dum)
                                       ^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2731: FILE: include/asm-i386/sc_math.h:33:
+      __asm__("divl %2":"=a"(b), "=d"(dum)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2731: FILE: include/asm-i386/sc_math.h:33:
+      __asm__("divl %2":"=a"(b), "=d"(dum)
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2732: FILE: include/asm-i386/sc_math.h:34:
+      :^I"r"(b), "0"(0), "1"(a));$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2736: FILE: include/asm-i386/sc_math.h:38:
+}
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2741: FILE: include/asm-i386/sc_math.h:43:
+#define mpy_ex24(a,b) mpy_sc_n(24,a,b)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2741: FILE: include/asm-i386/sc_math.h:43:
+#define mpy_ex24(a,b) mpy_sc_n(24,a,b)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2741: FILE: include/asm-i386/sc_math.h:43:
+#define mpy_ex24(a,b) mpy_sc_n(24,a,b)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2745: FILE: include/asm-i386/sc_math.h:47:
+#define div_ex24(a,b) div_sc_n(24,a,b)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2745: FILE: include/asm-i386/sc_math.h:47:
+#define div_ex24(a,b) div_sc_n(24,a,b)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2745: FILE: include/asm-i386/sc_math.h:47:
+#define div_ex24(a,b) div_sc_n(24,a,b)
                                    ^

WARNING:TYPO_SPELLING: 'signifigant' may be misspelled - perhaps 'significant'?
#2754: FILE: include/asm-i386/sc_math.h:56:
+ *     keeping more signifigant bits.
                     ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'repaced' may be misspelled - perhaps 'replaced'?
#2755: FILE: include/asm-i386/sc_math.h:57:
+ * B.) Often an in line div can be repaced with a mpy
                                    ^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2759: FILE: include/asm-i386/sc_math.h:61:
+#define mpy_sc_n(N,aa,bb) ({long edx,a=aa,b=bb; \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2759: FILE: include/asm-i386/sc_math.h:61:
+#define mpy_sc_n(N,aa,bb) ({long edx,a=aa,b=bb; \
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2759: FILE: include/asm-i386/sc_math.h:61:
+#define mpy_sc_n(N,aa,bb) ({long edx,a=aa,b=bb; \
                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2759: FILE: include/asm-i386/sc_math.h:61:
+#define mpy_sc_n(N,aa,bb) ({long edx,a=aa,b=bb; \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2759: FILE: include/asm-i386/sc_math.h:61:
+#define mpy_sc_n(N,aa,bb) ({long edx,a=aa,b=bb; \
                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2759: FILE: include/asm-i386/sc_math.h:61:
+#define mpy_sc_n(N,aa,bb) ({long edx,a=aa,b=bb; \
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2761: FILE: include/asm-i386/sc_math.h:63:
+                "shldl $(32-"MATH_STR(N)"),%0,%1"    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2761: FILE: include/asm-i386/sc_math.h:63:
+                "shldl $(32-"MATH_STR(N)"),%0,%1"    \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2761: FILE: include/asm-i386/sc_math.h:63:
+                "shldl $(32-"MATH_STR(N)"),%0,%1"    \

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#2762: FILE: include/asm-i386/sc_math.h:64:
+		:"=a" (a), "=d" (edx)\
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#2763: FILE: include/asm-i386/sc_math.h:65:
+		:"rm" (b),            \
 		^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2764: FILE: include/asm-i386/sc_math.h:66:
+		 "0" (a)); edx;})
 		              ^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#2766: FILE: include/asm-i386/sc_math.h:68:
+#define div_sc_n(N,aa,bb) ({long dum=aa,dum2,b=bb; \
                                  ^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2766: FILE: include/asm-i386/sc_math.h:68:
+#define div_sc_n(N,aa,bb) ({long dum=aa,dum2,b=bb; \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2766: FILE: include/asm-i386/sc_math.h:68:
+#define div_sc_n(N,aa,bb) ({long dum=aa,dum2,b=bb; \
                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2766: FILE: include/asm-i386/sc_math.h:68:
+#define div_sc_n(N,aa,bb) ({long dum=aa,dum2,b=bb; \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2766: FILE: include/asm-i386/sc_math.h:68:
+#define div_sc_n(N,aa,bb) ({long dum=aa,dum2,b=bb; \
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2766: FILE: include/asm-i386/sc_math.h:68:
+#define div_sc_n(N,aa,bb) ({long dum=aa,dum2,b=bb; \
                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2766: FILE: include/asm-i386/sc_math.h:68:
+#define div_sc_n(N,aa,bb) ({long dum=aa,dum2,b=bb; \
                                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'N' - possible side-effects?
#2766: FILE: include/asm-i386/sc_math.h:68:
+#define div_sc_n(N,aa,bb) ({long dum=aa,dum2,b=bb; \
+        __asm__("shrdl $(32-"MATH_STR(N)"),%4,%3\n\t"  \
+                "sarl $(32-"MATH_STR(N)"),%4\n\t"      \
+                "divl %2"              \
+                :"=a" (dum2), "=d" (dum)      \
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})

ERROR:CODE_INDENT: code indent should use tabs where possible
#2767: FILE: include/asm-i386/sc_math.h:69:
+        __asm__("shrdl $(32-"MATH_STR(N)"),%4,%3\n\t"  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2767: FILE: include/asm-i386/sc_math.h:69:
+        __asm__("shrdl $(32-"MATH_STR(N)"),%4,%3\n\t"  \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2767: FILE: include/asm-i386/sc_math.h:69:
+        __asm__("shrdl $(32-"MATH_STR(N)"),%4,%3\n\t"  \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2768: FILE: include/asm-i386/sc_math.h:70:
+                "sarl $(32-"MATH_STR(N)"),%4\n\t"      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2768: FILE: include/asm-i386/sc_math.h:70:
+                "sarl $(32-"MATH_STR(N)"),%4\n\t"      \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2768: FILE: include/asm-i386/sc_math.h:70:
+                "sarl $(32-"MATH_STR(N)"),%4\n\t"      \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2769: FILE: include/asm-i386/sc_math.h:71:
+                "divl %2"              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2769: FILE: include/asm-i386/sc_math.h:71:
+                "divl %2"              \$

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#2770: FILE: include/asm-i386/sc_math.h:72:
+                :"=a" (dum2), "=d" (dum)      \
                                     ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2770: FILE: include/asm-i386/sc_math.h:72:
+                :"=a" (dum2), "=d" (dum)      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2770: FILE: include/asm-i386/sc_math.h:72:
+                :"=a" (dum2), "=d" (dum)      \$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#2770: FILE: include/asm-i386/sc_math.h:72:
+                :"=a" (dum2), "=d" (dum)      \
                 ^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#2771: FILE: include/asm-i386/sc_math.h:73:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})
                                          ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2771: FILE: include/asm-i386/sc_math.h:73:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2771: FILE: include/asm-i386/sc_math.h:73:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#2771: FILE: include/asm-i386/sc_math.h:73:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})
                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2771: FILE: include/asm-i386/sc_math.h:73:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2779: FILE: include/asm-i386/sc_math.h:81:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem(a,b,c)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2779: FILE: include/asm-i386/sc_math.h:81:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem(a,b,c)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2779: FILE: include/asm-i386/sc_math.h:81:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem(a,b,c)
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2779: FILE: include/asm-i386/sc_math.h:81:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem(a,b,c)
                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2785: FILE: include/asm-i386/sc_math.h:87:
+      __asm__("divl %2":"=a"(dum2), "=d"(*rem)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2785: FILE: include/asm-i386/sc_math.h:87:
+      __asm__("divl %2":"=a"(dum2), "=d"(*rem)
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2786: FILE: include/asm-i386/sc_math.h:88:
+      :^I"rm"(div), "A"(divs));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2790: FILE: include/asm-i386/sc_math.h:92:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2791: FILE: include/asm-i386/sc_math.h:93:
+}
+/*

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#2797: FILE: include/asm-i386/sc_math.h:99:
+	long dum;
 	     ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#2798: FILE: include/asm-i386/sc_math.h:100:
+	return div_ll_X_l_rem(divs, div, &dum);
 	                                  ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2798: FILE: include/asm-i386/sc_math.h:100:
+	long dum;
+	return div_ll_X_l_rem(divs, div, &dum);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2800: FILE: include/asm-i386/sc_math.h:102:
+}
+/*

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2810: FILE: include/asm-i386/sc_math.h:112:
+      __asm__("divl %2":"=a"(dum2), "=d"(*rem)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2810: FILE: include/asm-i386/sc_math.h:112:
+      __asm__("divl %2":"=a"(dum2), "=d"(*rem)
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2811: FILE: include/asm-i386/sc_math.h:113:
+      :^I"rm"(div), "0"(divl), "1"(divh));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2815: FILE: include/asm-i386/sc_math.h:117:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2816: FILE: include/asm-i386/sc_math.h:118:
+}
+extern inline long long

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2820: FILE: include/asm-i386/sc_math.h:122:
+      __asm__("imull %1\n\t":"=A"(eax)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2820: FILE: include/asm-i386/sc_math.h:122:
+      __asm__("imull %1\n\t":"=A"(eax)
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2821: FILE: include/asm-i386/sc_math.h:123:
+      :^I"rm"(mpy2), "a"(mpy1));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2825: FILE: include/asm-i386/sc_math.h:127:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2826: FILE: include/asm-i386/sc_math.h:128:
+}
+extern inline long

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2830: FILE: include/asm-i386/sc_math.h:132:
+      __asm__("imull %2\n\t":"=a"(eax), "=d"(*hi)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2830: FILE: include/asm-i386/sc_math.h:132:
+      __asm__("imull %2\n\t":"=a"(eax), "=d"(*hi)
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2831: FILE: include/asm-i386/sc_math.h:133:
+      :^I"rm"(mpy2), "0"(mpy1));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2835: FILE: include/asm-i386/sc_math.h:137:
+
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000405612.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 455 errors, 290 warnings, 145 checks, 2665 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000405612.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
