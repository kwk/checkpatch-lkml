WARNING:TYPO_SPELLING: 'aswell' may be misspelled - perhaps 'as well'?
#32: 
start to use it aswell.
                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#62: FILE: fs/block_dev.c:186:
+static int blkdev_fsync(struct file *filp, struct dentry *dentry, int datasync)
                                      ^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#96: FILE: fs/block_dev.c:804:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#103: FILE: fs/block_dev.c:811:
+	error = path_lookup(path, LOOKUP_FOLLOW, &nd);
 	                                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#107: FILE: fs/block_dev.c:815:
+	inode = nd.dentry->d_inode;
 	        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#112: FILE: fs/block_dev.c:820:
+	if (nd.mnt->mnt_flags & MNT_NODEV)
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#120: FILE: fs/block_dev.c:828:
+	path_release(&nd);
 	              ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: fs/block_dev.c:843:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#141: FILE: fs/block_dev.c:849:
+	path_release(&nd);
 	              ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: fs/xfs/xfs_vfsops.c:400:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#389: FILE: fs/xfs/linux/xfs_super.h:87:
+extern int  xfs_blkdev_get (struct xfs_mount *, const char *,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#389: FILE: fs/xfs/linux/xfs_super.h:87:
+extern int  xfs_blkdev_get (struct xfs_mount *, const char *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xfs_mount *' should also have an identifier name
#389: FILE: fs/xfs/linux/xfs_super.h:87:
+extern int  xfs_blkdev_get (struct xfs_mount *, const char *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#389: FILE: fs/xfs/linux/xfs_super.h:87:
+extern int  xfs_blkdev_get (struct xfs_mount *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device **' should also have an identifier name
#389: FILE: fs/xfs/linux/xfs_super.h:87:
+extern int  xfs_blkdev_get (struct xfs_mount *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: fs/xfs/linux/xfs_super.h:88:
+extern int  xfs_blkdev_get (struct xfs_mount *, const char *,
+				struct block_device **);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#413: FILE: include/linux/fs.h:1110:
 }
+extern struct block_device *open_bdev_excl(const char *, int, int, void *);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: include/linux/fs.h:1110:
+extern struct block_device *open_bdev_excl(const char *, int, int, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#414: FILE: include/linux/fs.h:1111:
+extern void close_bdev_excl(struct block_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#414: FILE: include/linux/fs.h:1111:
+extern void close_bdev_excl(struct block_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#414: FILE: include/linux/fs.h:1111:
+extern void close_bdev_excl(struct block_device *, int);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#427: FILE: kernel/ksyms.c:206:
+EXPORT_SYMBOL(close_bdev_excl);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409763.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 15 warnings, 5 checks, 353 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409763.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
