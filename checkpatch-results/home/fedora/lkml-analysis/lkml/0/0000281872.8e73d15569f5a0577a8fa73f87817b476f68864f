WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -ruN linux-2.6.6-mm2/arch/x86_64/Kconfig linux-2.6.6-mm2.perfctr-2.7.2.x86_64/arch/x86_64/Kconfig

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: arch/x86_64/kernel/entry.S:564:
+ ^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#149: FILE: drivers/perfctr/x86_64.c:1:
+/* $Id: x86_64.c,v 1.27 2004/05/13 23:32:50 mikpe Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#149: FILE: drivers/perfctr/x86_64.c:1:
+/* $Id: x86_64.c,v 1.27 2004/05/13 23:32:50 mikpe Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#195: FILE: drivers/perfctr/x86_64.c:47:
+#define rdpmc_low(ctr,low) \
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#195: FILE: drivers/perfctr/x86_64.c:47:
+#define rdpmc_low(ctr,low) \
+	__asm__ __volatile__("rdpmc" : "=a"(low) : "c"(ctr) : "edx")

ERROR:SPACING: space required before the open parenthesis '('
#202: FILE: drivers/perfctr/x86_64.c:54:
+	for(i = 0; i < n; ++i)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#203: FILE: drivers/perfctr/x86_64.c:55:
+		wrmsr(base+i, 0, 0);
 		          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#237: FILE: drivers/perfctr/x86_64.c:89:
+	/* PREEMPT note: invoked via an interrupt gate, which
+	   masks interrupts. We're still on the originating CPU. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#237: FILE: drivers/perfctr/x86_64.c:89:
+	   masks interrupts. We're still on the originating CPU. */

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#266: FILE: drivers/perfctr/x86_64.c:118:
+	state->k1.isuspend_cpu = NR_CPUS;

ERROR:SPACING: space prohibited after that open parenthesis '('
#289: FILE: drivers/perfctr/x86_64.c:141:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#289: FILE: drivers/perfctr/x86_64.c:141:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#289: FILE: drivers/perfctr/x86_64.c:141:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#292: FILE: drivers/perfctr/x86_64.c:144:
+	for(i = 0; i < nrctrs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: drivers/perfctr/x86_64.c:146:
+		unsigned int pmc = state->pmc[i].map;
+		rdpmc_low(pmc, ctrs->pmc[i]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#304: FILE: drivers/perfctr/x86_64.c:156:
+	if( nrctrs < nractrs || nrctrs > 4 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#304: FILE: drivers/perfctr/x86_64.c:156:
+	if( nrctrs < nractrs || nrctrs > 4 )

ERROR:SPACING: space required before the open parenthesis '('
#304: FILE: drivers/perfctr/x86_64.c:156:
+	if( nrctrs < nractrs || nrctrs > 4 )

ERROR:SPACING: space required before the open parenthesis '('
#308: FILE: drivers/perfctr/x86_64.c:160:
+	for(i = 0; i < nrctrs; ++i) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#311: FILE: drivers/perfctr/x86_64.c:163:
+		if( pmc >= 4 || (pmc_mask & (1<<pmc)) )
 		                              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#311: FILE: drivers/perfctr/x86_64.c:163:
+		if( pmc >= 4 || (pmc_mask & (1<<pmc)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#311: FILE: drivers/perfctr/x86_64.c:163:
+		if( pmc >= 4 || (pmc_mask & (1<<pmc)) )

ERROR:SPACING: space required before the open parenthesis '('
#311: FILE: drivers/perfctr/x86_64.c:163:
+		if( pmc >= 4 || (pmc_mask & (1<<pmc)) )

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#313: FILE: drivers/perfctr/x86_64.c:165:
+		pmc_mask |= (1<<pmc);
 		              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#316: FILE: drivers/perfctr/x86_64.c:168:
+		if( evntsel & K8_EVNTSEL_RESERVED )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#316: FILE: drivers/perfctr/x86_64.c:168:
+		if( evntsel & K8_EVNTSEL_RESERVED )

ERROR:SPACING: space required before the open parenthesis '('
#316: FILE: drivers/perfctr/x86_64.c:168:
+		if( evntsel & K8_EVNTSEL_RESERVED )

ERROR:SPACING: space prohibited after that open parenthesis '('
#319: FILE: drivers/perfctr/x86_64.c:171:
+		if( !(evntsel & K8_EVNTSEL_ENABLE) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#319: FILE: drivers/perfctr/x86_64.c:171:
+		if( !(evntsel & K8_EVNTSEL_ENABLE) )

ERROR:SPACING: space required before the open parenthesis '('
#319: FILE: drivers/perfctr/x86_64.c:171:
+		if( !(evntsel & K8_EVNTSEL_ENABLE) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#322: FILE: drivers/perfctr/x86_64.c:174:
+		if( !(evntsel & K8_EVNTSEL_CPL) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#322: FILE: drivers/perfctr/x86_64.c:174:
+		if( !(evntsel & K8_EVNTSEL_CPL) )

ERROR:SPACING: space required before the open parenthesis '('
#322: FILE: drivers/perfctr/x86_64.c:174:
+		if( !(evntsel & K8_EVNTSEL_CPL) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#325: FILE: drivers/perfctr/x86_64.c:177:
+		if( evntsel & K8_EVNTSEL_INT ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#325: FILE: drivers/perfctr/x86_64.c:177:
+		if( evntsel & K8_EVNTSEL_INT ) {

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: drivers/perfctr/x86_64.c:177:
+		if( evntsel & K8_EVNTSEL_INT ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#326: FILE: drivers/perfctr/x86_64.c:178:
+			if( i < nractrs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#326: FILE: drivers/perfctr/x86_64.c:178:
+			if( i < nractrs )

ERROR:SPACING: space required before the open parenthesis '('
#326: FILE: drivers/perfctr/x86_64.c:178:
+			if( i < nractrs )

ERROR:SPACING: space prohibited after that open parenthesis '('
#329: FILE: drivers/perfctr/x86_64.c:181:
+			if( i >= nractrs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#329: FILE: drivers/perfctr/x86_64.c:181:
+			if( i >= nractrs )

ERROR:SPACING: space required before the open parenthesis '('
#329: FILE: drivers/perfctr/x86_64.c:181:
+			if( i >= nractrs )

ERROR:SPACING: space required before the open parenthesis '('
#347: FILE: drivers/perfctr/x86_64.c:199:
+	for(i = perfctr_cstatus_nractrs(cstatus); i < nrctrs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: drivers/perfctr/x86_64.c:201:
+		unsigned int pmc, now;
+		pmc = state->pmc[i].map;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#351: FILE: drivers/perfctr/x86_64.c:203:
+		wrmsr(MSR_K8_EVNTSEL0+pmc, 0, 0);
 		                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#368: FILE: drivers/perfctr/x86_64.c:220:
+	if( cache->k1.id == state->k1.id ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#368: FILE: drivers/perfctr/x86_64.c:220:
+	if( cache->k1.id == state->k1.id ) {

ERROR:SPACING: space required before the open parenthesis '('
#368: FILE: drivers/perfctr/x86_64.c:220:
+	if( cache->k1.id == state->k1.id ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#370: FILE: drivers/perfctr/x86_64.c:222:
+		if( is_isuspend_cpu(state, cpu) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#370: FILE: drivers/perfctr/x86_64.c:222:
+		if( is_isuspend_cpu(state, cpu) )

ERROR:SPACING: space required before the open parenthesis '('
#370: FILE: drivers/perfctr/x86_64.c:222:
+		if( is_isuspend_cpu(state, cpu) )

ERROR:SPACING: space required before the open parenthesis '('
#375: FILE: drivers/perfctr/x86_64.c:227:
+	for(i = perfctr_cstatus_nractrs(cstatus); i < nrctrs; ++i) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#378: FILE: drivers/perfctr/x86_64.c:230:
+		/* If the control wasn't ours we must disable the evntsels
+		   before reinitialising the counters, to prevent unexpected

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#379: FILE: drivers/perfctr/x86_64.c:231:
+		   counter increments and missed overflow interrupts. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#380: FILE: drivers/perfctr/x86_64.c:232:
+		if( cache->control.evntsel[pmc] ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#380: FILE: drivers/perfctr/x86_64.c:232:
+		if( cache->control.evntsel[pmc] ) {

ERROR:SPACING: space required before the open parenthesis '('
#380: FILE: drivers/perfctr/x86_64.c:232:
+		if( cache->control.evntsel[pmc] ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#382: FILE: drivers/perfctr/x86_64.c:234:
+			wrmsr(MSR_K8_EVNTSEL0+pmc, 0, 0);
 			                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#384: FILE: drivers/perfctr/x86_64.c:236:
+		wrmsr(MSR_K8_PERFCTR0+pmc, state->pmc[i].start, -1);
 		                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#395: FILE: drivers/perfctr/x86_64.c:247:
+	if( cache->k1.id == state->k1.id ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#395: FILE: drivers/perfctr/x86_64.c:247:
+	if( cache->k1.id == state->k1.id ) {

ERROR:SPACING: space required before the open parenthesis '('
#395: FILE: drivers/perfctr/x86_64.c:247:
+	if( cache->k1.id == state->k1.id ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#395: FILE: drivers/perfctr/x86_64.c:247:
+	if( cache->k1.id == state->k1.id ) {
+		return;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#399: FILE: drivers/perfctr/x86_64.c:251:
+	for(i = 0; i < nrctrs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#402: FILE: drivers/perfctr/x86_64.c:254:
+		unsigned int pmc = state->pmc[i].map;
+		if( evntsel != cache->control.evntsel[pmc] ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#402: FILE: drivers/perfctr/x86_64.c:254:
+		if( evntsel != cache->control.evntsel[pmc] ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#402: FILE: drivers/perfctr/x86_64.c:254:
+		if( evntsel != cache->control.evntsel[pmc] ) {

ERROR:SPACING: space required before the open parenthesis '('
#402: FILE: drivers/perfctr/x86_64.c:254:
+		if( evntsel != cache->control.evntsel[pmc] ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#404: FILE: drivers/perfctr/x86_64.c:256:
+			wrmsr(MSR_K8_EVNTSEL0+pmc, evntsel, 0);
 			                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#412: FILE: drivers/perfctr/x86_64.c:264:
+	clear_msr_range(MSR_K8_EVNTSEL0, 4+4);
 	                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#422: FILE: drivers/perfctr/x86_64.c:274:
+	if( state->control.nractrs || state->control.nrictrs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#422: FILE: drivers/perfctr/x86_64.c:274:
+	if( state->control.nractrs || state->control.nrictrs )

ERROR:SPACING: space required before the open parenthesis '('
#422: FILE: drivers/perfctr/x86_64.c:274:
+	if( state->control.nractrs || state->control.nrictrs )

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#436: FILE: drivers/perfctr/x86_64.c:288:
+/* Call perfctr_cpu_ireload() just before perfctr_cpu_resume() to
+   bypass internal caching and force a reload if the I-mode PMCs. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#436: FILE: drivers/perfctr/x86_64.c:288:
+   bypass internal caching and force a reload if the I-mode PMCs. */

ERROR:SPACING: space required before the open parenthesis '('
#455: FILE: drivers/perfctr/x86_64.c:307:
+	for(pmc_mask = 0; pmc < nrctrs; ++pmc) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#456: FILE: drivers/perfctr/x86_64.c:308:
+		if( (int)state->pmc[pmc].start >= 0 ) { /* XXX: ">" ? */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#456: FILE: drivers/perfctr/x86_64.c:308:
+		if( (int)state->pmc[pmc].start >= 0 ) { /* XXX: ">" ? */

ERROR:SPACING: space required before the open parenthesis '('
#456: FILE: drivers/perfctr/x86_64.c:308:
+		if( (int)state->pmc[pmc].start >= 0 ) { /* XXX: ">" ? */

ERROR:SPACING: space required before the open parenthesis '('
#471: FILE: drivers/perfctr/x86_64.c:323:
+	for(; i < nrctrs; ++i)

ERROR:SPACING: space prohibited after that open parenthesis '('
#472: FILE: drivers/perfctr/x86_64.c:324:
+		if( state->control.ireset[i] >= 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#472: FILE: drivers/perfctr/x86_64.c:324:
+		if( state->control.ireset[i] >= 0 )

ERROR:SPACING: space required before the open parenthesis '('
#472: FILE: drivers/perfctr/x86_64.c:324:
+		if( state->control.ireset[i] >= 0 )

ERROR:SPACING: space required before the open parenthesis '('
#483: FILE: drivers/perfctr/x86_64.c:335:
+	for(i = perfctr_cstatus_nractrs(cstatus); i < nrctrs; ++i)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#487: FILE: drivers/perfctr/x86_64.c:339:
+static int (*check_control)(struct perfctr_cpu_state*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#496: FILE: drivers/perfctr/x86_64.c:348:
+	if( !(perfctr_info.cpu_features & PERFCTR_FEATURE_PCINT)

ERROR:SPACING: space required before the open parenthesis '('
#496: FILE: drivers/perfctr/x86_64.c:348:
+	if( !(perfctr_info.cpu_features & PERFCTR_FEATURE_PCINT)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#497: FILE: drivers/perfctr/x86_64.c:349:
+	if( !(perfctr_info.cpu_features & PERFCTR_FEATURE_PCINT)
+	    && state->control.nrictrs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#497: FILE: drivers/perfctr/x86_64.c:349:
+	    && state->control.nrictrs )

ERROR:SPACING: space prohibited after that open parenthesis '('
#501: FILE: drivers/perfctr/x86_64.c:353:
+	if( err < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#501: FILE: drivers/perfctr/x86_64.c:353:
+	if( err < 0 )

ERROR:SPACING: space required before the open parenthesis '('
#501: FILE: drivers/perfctr/x86_64.c:353:
+	if( err < 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#504: FILE: drivers/perfctr/x86_64.c:356:
+	if( err < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#504: FILE: drivers/perfctr/x86_64.c:356:
+	if( err < 0 )

ERROR:SPACING: space required before the open parenthesis '('
#504: FILE: drivers/perfctr/x86_64.c:356:
+	if( err < 0 )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#518: FILE: drivers/perfctr/x86_64.c:370:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )
+	    perfctr_cpu_isuspend(state);

ERROR:SPACING: space prohibited after that open parenthesis '('
#518: FILE: drivers/perfctr/x86_64.c:370:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#518: FILE: drivers/perfctr/x86_64.c:370:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#518: FILE: drivers/perfctr/x86_64.c:370:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#522: FILE: drivers/perfctr/x86_64.c:374:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#522: FILE: drivers/perfctr/x86_64.c:374:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#522: FILE: drivers/perfctr/x86_64.c:374:
+	if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#525: FILE: drivers/perfctr/x86_64.c:377:
+	for(i = 0; i < nractrs; ++i)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#531: FILE: drivers/perfctr/x86_64.c:383:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )
+	    perfctr_cpu_iresume(state);

ERROR:SPACING: space prohibited after that open parenthesis '('
#531: FILE: drivers/perfctr/x86_64.c:383:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#531: FILE: drivers/perfctr/x86_64.c:383:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#531: FILE: drivers/perfctr/x86_64.c:383:
+	if( perfctr_cstatus_has_ictrs(state->cstatus) )

WARNING:LINE_SPACING: Missing a blank line after declarations
#538: FILE: drivers/perfctr/x86_64.c:390:
+		unsigned int i, cstatus, nrctrs;
+		perfctr_cpu_read_counters(state, &now);

ERROR:SPACING: space prohibited after that open parenthesis '('
#540: FILE: drivers/perfctr/x86_64.c:392:
+		if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#540: FILE: drivers/perfctr/x86_64.c:392:
+		if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#540: FILE: drivers/perfctr/x86_64.c:392:
+		if( perfctr_cstatus_has_tsc(cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#543: FILE: drivers/perfctr/x86_64.c:395:
+		for(i = 0; i < nrctrs; ++i)

ERROR:SPACING: space prohibited after that open parenthesis '('
#556: FILE: drivers/perfctr/x86_64.c:408:
+	if( perfctr_cstatus_has_tsc(cstatus) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#556: FILE: drivers/perfctr/x86_64.c:408:
+	if( perfctr_cstatus_has_tsc(cstatus) ) {

ERROR:SPACING: space required before the open parenthesis '('
#556: FILE: drivers/perfctr/x86_64.c:408:
+	if( perfctr_cstatus_has_tsc(cstatus) ) {

ERROR:SPACING: space required before the open parenthesis '('
#561: FILE: drivers/perfctr/x86_64.c:413:
+	for(i = 0; i < nractrs; ++i) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#584: FILE: drivers/perfctr/x86_64.c:436:
+	if( !cpu_has_tsc )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#584: FILE: drivers/perfctr/x86_64.c:436:
+	if( !cpu_has_tsc )

ERROR:SPACING: space required before the open parenthesis '('
#584: FILE: drivers/perfctr/x86_64.c:436:
+	if( !cpu_has_tsc )

ERROR:SPACING: space prohibited after that open parenthesis '('
#586: FILE: drivers/perfctr/x86_64.c:438:
+	if( boot_cpu_data.x86 != 15 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#586: FILE: drivers/perfctr/x86_64.c:438:
+	if( boot_cpu_data.x86 != 15 )

ERROR:SPACING: space required before the open parenthesis '('
#586: FILE: drivers/perfctr/x86_64.c:438:
+	if( boot_cpu_data.x86 != 15 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#588: FILE: drivers/perfctr/x86_64.c:440:
+	if( (boot_cpu_data.x86_model > 5) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_model > 5'
#588: FILE: drivers/perfctr/x86_64.c:440:
+	if( (boot_cpu_data.x86_model > 5) ||
+	    (boot_cpu_data.x86_model >= 4 && boot_cpu_data.x86_mask >= 8) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#588: FILE: drivers/perfctr/x86_64.c:440:
+	if( (boot_cpu_data.x86_model > 5) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: drivers/perfctr/x86_64.c:441:
+	if( (boot_cpu_data.x86_model > 5) ||
+	    (boot_cpu_data.x86_model >= 4 && boot_cpu_data.x86_mask >= 8) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#589: FILE: drivers/perfctr/x86_64.c:441:
+	    (boot_cpu_data.x86_model >= 4 && boot_cpu_data.x86_mask >= 8) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#598: FILE: drivers/perfctr/x86_64.c:450:
+	if( cpu_has_apic )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#598: FILE: drivers/perfctr/x86_64.c:450:
+	if( cpu_has_apic )

ERROR:SPACING: space required before the open parenthesis '('
#598: FILE: drivers/perfctr/x86_64.c:450:
+	if( cpu_has_apic )

WARNING:LINE_SPACING: Missing a blank line after declarations
#607: FILE: drivers/perfctr/x86_64.c:459:
+	static char generic_name[] __initdata = "Generic x86-64 with TSC";
+	if( !cpu_has_tsc )

ERROR:SPACING: space prohibited after that open parenthesis '('
#607: FILE: drivers/perfctr/x86_64.c:459:
+	if( !cpu_has_tsc )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#607: FILE: drivers/perfctr/x86_64.c:459:
+	if( !cpu_has_tsc )

ERROR:SPACING: space required before the open parenthesis '('
#607: FILE: drivers/perfctr/x86_64.c:459:
+	if( !cpu_has_tsc )

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#620: FILE: drivers/perfctr/x86_64.c:472:
+	/* PREEMPT note: when called via smp_call_function(),
+	   this is in IRQ context with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#620: FILE: drivers/perfctr/x86_64.c:472:
+	   this is in IRQ context with preemption disabled. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#622: FILE: drivers/perfctr/x86_64.c:474:
+	if( cpu_has_apic )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#622: FILE: drivers/perfctr/x86_64.c:474:
+	if( cpu_has_apic )

ERROR:SPACING: space required before the open parenthesis '('
#622: FILE: drivers/perfctr/x86_64.c:474:
+	if( cpu_has_apic )

ERROR:SPACING: space prohibited after that open parenthesis '('
#624: FILE: drivers/perfctr/x86_64.c:476:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#624: FILE: drivers/perfctr/x86_64.c:476:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

ERROR:SPACING: space required before the open parenthesis '('
#624: FILE: drivers/perfctr/x86_64.c:476:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#631: FILE: drivers/perfctr/x86_64.c:483:
+	/* PREEMPT note: when called via smp_call_function(),
+	   this is in IRQ context with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#631: FILE: drivers/perfctr/x86_64.c:483:
+	   this is in IRQ context with preemption disabled. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#633: FILE: drivers/perfctr/x86_64.c:485:
+	if( cpu_has_apic )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#633: FILE: drivers/perfctr/x86_64.c:485:
+	if( cpu_has_apic )

ERROR:SPACING: space required before the open parenthesis '('
#633: FILE: drivers/perfctr/x86_64.c:485:
+	if( cpu_has_apic )

ERROR:SPACING: space prohibited after that open parenthesis '('
#635: FILE: drivers/perfctr/x86_64.c:487:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#635: FILE: drivers/perfctr/x86_64.c:487:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

ERROR:SPACING: space required before the open parenthesis '('
#635: FILE: drivers/perfctr/x86_64.c:487:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#644: FILE: drivers/perfctr/x86_64.c:496:
+	printk("perfctr: PM suspend\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#650: FILE: drivers/perfctr/x86_64.c:502:
+	printk("perfctr: PM resume\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#680: FILE: drivers/perfctr/x86_64.c:532:
+	if( sysdev_class_register(&perfctr_sysclass) == 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#680: FILE: drivers/perfctr/x86_64.c:532:
+	if( sysdev_class_register(&perfctr_sysclass) == 0 )

ERROR:SPACING: space required before the open parenthesis '('
#680: FILE: drivers/perfctr/x86_64.c:532:
+	if( sysdev_class_register(&perfctr_sysclass) == 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#700: FILE: drivers/perfctr/x86_64.c:552:
+	if( reserve_lapic_nmi() >= 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#700: FILE: drivers/perfctr/x86_64.c:552:
+	if( reserve_lapic_nmi() >= 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#700: FILE: drivers/perfctr/x86_64.c:552:
+	if( reserve_lapic_nmi() >= 0 ) {

WARNING:SIZEOF_PARENTHESIS: sizeof per_cpu_cache should be sizeof(per_cpu_cache)
#718: FILE: drivers/perfctr/x86_64.c:570:
+	memset(per_cpu_cache, ~0, sizeof per_cpu_cache);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#728: FILE: drivers/perfctr/x86_64.c:580:
+	/* RDPMC and RDTSC are on by default. They will be disabled
+	   by the init procedures if necessary. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#728: FILE: drivers/perfctr/x86_64.c:580:
+	   by the init procedures if necessary. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#731: FILE: drivers/perfctr/x86_64.c:583:
+	switch( boot_cpu_data.x86_vendor ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#731: FILE: drivers/perfctr/x86_64.c:583:
+	switch( boot_cpu_data.x86_vendor ) {

ERROR:SPACING: space required before the open parenthesis '('
#731: FILE: drivers/perfctr/x86_64.c:583:
+	switch( boot_cpu_data.x86_vendor ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#736: FILE: drivers/perfctr/x86_64.c:588:
+	if( err ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#736: FILE: drivers/perfctr/x86_64.c:588:
+	if( err ) {

ERROR:SPACING: space required before the open parenthesis '('
#736: FILE: drivers/perfctr/x86_64.c:588:
+	if( err ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#738: FILE: drivers/perfctr/x86_64.c:590:
+		if( err )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#738: FILE: drivers/perfctr/x86_64.c:590:
+		if( err )

ERROR:SPACING: space required before the open parenthesis '('
#738: FILE: drivers/perfctr/x86_64.c:590:
+		if( err )

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#764: FILE: drivers/perfctr/x86_64.c:616:
+static const char *current_service = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space prohibited after that open parenthesis '('
#772: FILE: drivers/perfctr/x86_64.c:624:
+	if( ret )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#772: FILE: drivers/perfctr/x86_64.c:624:
+	if( ret )

ERROR:SPACING: space required before the open parenthesis '('
#772: FILE: drivers/perfctr/x86_64.c:624:
+	if( ret )

ERROR:SPACING: space prohibited after that open parenthesis '('
#775: FILE: drivers/perfctr/x86_64.c:627:
+	if( reserve_lapic_nmi() < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#775: FILE: drivers/perfctr/x86_64.c:627:
+	if( reserve_lapic_nmi() < 0 )

ERROR:SPACING: space required before the open parenthesis '('
#775: FILE: drivers/perfctr/x86_64.c:627:
+	if( reserve_lapic_nmi() < 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#778: FILE: drivers/perfctr/x86_64.c:630:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#778: FILE: drivers/perfctr/x86_64.c:630:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

ERROR:SPACING: space required before the open parenthesis '('
#778: FILE: drivers/perfctr/x86_64.c:630:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

ERROR:SPACING: space prohibited after that open parenthesis '('
#792: FILE: drivers/perfctr/x86_64.c:644:
+	if( service != current_service ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#792: FILE: drivers/perfctr/x86_64.c:644:
+	if( service != current_service ) {

ERROR:SPACING: space required before the open parenthesis '('
#792: FILE: drivers/perfctr/x86_64.c:644:
+	if( service != current_service ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#793: FILE: drivers/perfctr/x86_64.c:645:
+		printk(KERN_ERR "%s: attempt by %s to release while reserved by %s\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#794: FILE: drivers/perfctr/x86_64.c:646:
+		       __FUNCTION__, service, current_service);

ERROR:SPACING: space prohibited after that open parenthesis '('
#799: FILE: drivers/perfctr/x86_64.c:651:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#799: FILE: drivers/perfctr/x86_64.c:651:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

ERROR:SPACING: space required before the open parenthesis '('
#799: FILE: drivers/perfctr/x86_64.c:651:
+	if( perfctr_info.cpu_features & PERFCTR_FEATURE_RDPMC )

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#858: FILE: include/asm-x86_64/perfctr.h:1:
+/* $Id: perfctr.h,v 1.12 2004/05/12 21:28:27 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#858: FILE: include/asm-x86_64/perfctr.h:1:
+/* $Id: perfctr.h,v 1.12 2004/05/12 21:28:27 mikpe Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#897: FILE: include/asm-x86_64/perfctr.h:40:
+	/* The two tsc fields must be inlined. Placing them in a
+	   sub-struct causes unwanted internal padding on x86-64. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#897: FILE: include/asm-x86_64/perfctr.h:40:
+	   sub-struct causes unwanted internal padding on x86-64. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#911: FILE: include/asm-x86_64/perfctr.h:54:
+/* cstatus is a re-encoding of control.tsc_on/nractrs/nrictrs
+   which should have less overhead in most cases */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#911: FILE: include/asm-x86_64/perfctr.h:54:
+   which should have less overhead in most cases */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#917: FILE: include/asm-x86_64/perfctr.h:60:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#917: FILE: include/asm-x86_64/perfctr.h:60:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#917: FILE: include/asm-x86_64/perfctr.h:60:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#917: FILE: include/asm-x86_64/perfctr.h:60:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	                                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#957: FILE: include/asm-x86_64/perfctr.h:100:
+#define SI_PMC_OVF	(__SI_FAULT|'P')
                   	           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#971: FILE: include/asm-x86_64/perfctr.h:114:
+extern int perfctr_cpu_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#972: FILE: include/asm-x86_64/perfctr.h:115:
+extern void perfctr_cpu_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#978: FILE: include/asm-x86_64/perfctr.h:121:
+extern const char *perfctr_cpu_reserve(const char *service);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#979: FILE: include/asm-x86_64/perfctr.h:122:
+extern void perfctr_cpu_release(const char *service);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#982: FILE: include/asm-x86_64/perfctr.h:125:
+/* PRE: state has no running interrupt-mode counters.
+   Check that the new control data is valid.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#984: FILE: include/asm-x86_64/perfctr.h:127:
+   Returns a negative error code if the control data is invalid. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#985: FILE: include/asm-x86_64/perfctr.h:128:
+extern int perfctr_cpu_update_control(struct perfctr_cpu_state *state, int is_global);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#988: FILE: include/asm-x86_64/perfctr.h:131:
+/* Read a-mode counters. Subtract from start and accumulate into sums.
+   Must be called with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#988: FILE: include/asm-x86_64/perfctr.h:131:
+   Must be called with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#989: FILE: include/asm-x86_64/perfctr.h:132:
+extern void perfctr_cpu_suspend(struct perfctr_cpu_state *state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#992: FILE: include/asm-x86_64/perfctr.h:135:
+/* Write control registers. Read a-mode counters into start.
+   Must be called with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#992: FILE: include/asm-x86_64/perfctr.h:135:
+   Must be called with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#993: FILE: include/asm-x86_64/perfctr.h:136:
+extern void perfctr_cpu_resume(struct perfctr_cpu_state *state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#996: FILE: include/asm-x86_64/perfctr.h:139:
+/* Perform an efficient combined suspend/resume operation.
+   Must be called with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#996: FILE: include/asm-x86_64/perfctr.h:139:
+   Must be called with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#997: FILE: include/asm-x86_64/perfctr.h:140:
+extern void perfctr_cpu_sample(struct perfctr_cpu_state *state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1000: FILE: include/asm-x86_64/perfctr.h:143:
+/* The type of a perfctr overflow interrupt handler.
+   It will be called in IRQ context, with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1000: FILE: include/asm-x86_64/perfctr.h:143:
+   It will be called in IRQ context, with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1004: FILE: include/asm-x86_64/perfctr.h:147:
+/* CONFIG_X86_LOCAL_APIC is always defined on x86-64, so overflow
+   interrupt support is always included. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1004: FILE: include/asm-x86_64/perfctr.h:147:
+   interrupt support is always included. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1007: FILE: include/asm-x86_64/perfctr.h:150:
+extern void perfctr_cpu_set_ihandler(perfctr_ihandler_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'perfctr_ihandler_t' should also have an identifier name
#1007: FILE: include/asm-x86_64/perfctr.h:150:
+extern void perfctr_cpu_set_ihandler(perfctr_ihandler_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1008: FILE: include/asm-x86_64/perfctr.h:151:
+extern void perfctr_cpu_ireload(struct perfctr_cpu_state*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1008: FILE: include/asm-x86_64/perfctr.h:151:
+extern void perfctr_cpu_ireload(struct perfctr_cpu_state*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_cpu_state*' should also have an identifier name
#1008: FILE: include/asm-x86_64/perfctr.h:151:
+extern void perfctr_cpu_ireload(struct perfctr_cpu_state*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1009: FILE: include/asm-x86_64/perfctr.h:152:
+extern unsigned int perfctr_cpu_identify_overflow(struct perfctr_cpu_state*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1009: FILE: include/asm-x86_64/perfctr.h:152:
+extern unsigned int perfctr_cpu_identify_overflow(struct perfctr_cpu_state*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_cpu_state*' should also have an identifier name
#1009: FILE: include/asm-x86_64/perfctr.h:152:
+extern unsigned int perfctr_cpu_identify_overflow(struct perfctr_cpu_state*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1014: FILE: include/asm-x86_64/perfctr.h:157:
+extern void perfctr_interrupt(void);

ERROR:SPACING: space required before the open brace '{'
#1018: FILE: include/asm-x86_64/perfctr.h:161:
+#define perfctr_vector_init()	do{}while(0)

ERROR:SPACING: space required after that close brace '}'
#1018: FILE: include/asm-x86_64/perfctr.h:161:
+#define perfctr_vector_init()	do{}while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1018: FILE: include/asm-x86_64/perfctr.h:161:
+#define perfctr_vector_init()	do{}while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281872.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 154 errors, 50 warnings, 28 checks, 958 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281872.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
