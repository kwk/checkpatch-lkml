ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#58: 
--- a/arch/i386/kernel/setup.c	Thu Aug  8 17:04:51 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#223: FILE: arch/i386/kernel/setup.c:731:
+	highstart_pfn = highend_pfn = max_pfn;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#224: FILE: arch/i386/kernel/setup.c:732:
+	if (max_pfn > max_low_pfn) {
+		highstart_pfn = max_low_pfn;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#227: FILE: arch/i386/kernel/setup.c:735:
+	printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: arch/i386/kernel/setup.c:736:
+	printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",
+		pages_to_mb(highend_pfn - highstart_pfn));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#230: FILE: arch/i386/kernel/setup.c:738:
+	printk(KERN_NOTICE "%ldMB LOWMEM available.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: arch/i386/kernel/setup.c:739:
+	printk(KERN_NOTICE "%ldMB LOWMEM available.\n",
+			pages_to_mb(max_low_pfn));

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/i386/kernel/setup.c:860:
+ ^IROOT_DEV = ORIG_ROOT_DEV;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#309: FILE: arch/i386/kernel/setup.c:860:
+ ^IROOT_DEV = ORIG_ROOT_DEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: arch/i386/kernel/setup.c:860:
+ ^IROOT_DEV = ORIG_ROOT_DEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: arch/i386/kernel/setup.c:861:
+ ^Idrive_info = DRIVE_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#310: FILE: arch/i386/kernel/setup.c:861:
+ ^Idrive_info = DRIVE_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/i386/kernel/setup.c:861:
+ ^Idrive_info = DRIVE_INFO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/i386/kernel/setup.c:862:
+ ^Iscreen_info = SCREEN_INFO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#311: FILE: arch/i386/kernel/setup.c:862:
+ ^Iscreen_info = SCREEN_INFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/i386/kernel/setup.c:862:
+ ^Iscreen_info = SCREEN_INFO;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#314: FILE: arch/i386/kernel/setup.c:865:
+	printk("Video mode to be used for restore is %lx\n", saved_videomode);

ERROR:SPACING: space prohibited after that open parenthesis '('
#315: FILE: arch/i386/kernel/setup.c:866:
+	if( SYS_DESC_TABLE.length != 0 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#315: FILE: arch/i386/kernel/setup.c:866:
+	if( SYS_DESC_TABLE.length != 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#315: FILE: arch/i386/kernel/setup.c:866:
+	if( SYS_DESC_TABLE.length != 0 ) {

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#316: FILE: arch/i386/kernel/setup.c:867:
+		MCA_bus = SYS_DESC_TABLE.table[3] &0x2;
 		                                  ^

CHECK:SPACING: No space is necessary after a cast
#332: FILE: arch/i386/kernel/setup.c:883:
+	init_mm.start_code = (unsigned long) &_text;

CHECK:SPACING: No space is necessary after a cast
#333: FILE: arch/i386/kernel/setup.c:884:
+	init_mm.end_code = (unsigned long) &_etext;

CHECK:SPACING: No space is necessary after a cast
#334: FILE: arch/i386/kernel/setup.c:885:
+	init_mm.end_data = (unsigned long) &_edata;

CHECK:SPACING: No space is necessary after a cast
#335: FILE: arch/i386/kernel/setup.c:886:
+	init_mm.brk = (unsigned long) &_end;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#338: FILE: arch/i386/kernel/setup.c:889:
+	code_resource.end = virt_to_phys(&_etext)-1;
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#340: FILE: arch/i386/kernel/setup.c:891:
+	data_resource.end = virt_to_phys(&_edata)-1;
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#377: FILE: include/asm-i386/setup.h:9:
+#define PFN_UP(x)	(((x) + PAGE_SIZE-1) >> PAGE_SHIFT)
                  	                 ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#385: FILE: include/asm-i386/setup.h:17:
+#define MAX_NONPAE_PFN	(1 << 20)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440760.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 12 checks, 316 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440760.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
