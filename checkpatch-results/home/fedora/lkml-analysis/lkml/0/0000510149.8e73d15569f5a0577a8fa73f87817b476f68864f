WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#44: FILE: net/tcp.h:571:
+    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: net/tcp.h:571:
+    $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#54: FILE: net/tcp.h:775:
+extern void			tcp_connect_init(struct sock *sk);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#56: FILE: net/tcp.h:777:
+extern void			tcp_connect_send(struct sock *sk, struct sk_buff *skb);

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: ipv4/tcp_ipv4.c:165:
+static inline void tcp_bind_hash(struct sock *sk, struct tcp_bind_bucket *tb, unsigned short snum) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: ipv4/tcp_ipv4.c:166:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: ipv4/tcp_ipv4.c:167:
+^Isk->num = snum; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#69: FILE: ipv4/tcp_ipv4.c:168:
+	if ((sk->bind_next = tb->owners) != NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#73: FILE: ipv4/tcp_ipv4.c:172:
+	sk->prev = (struct sock *) tb;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: ipv4/tcp_ipv4.c:173:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: ipv4/tcp_ipv4.c:176:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: ipv4/tcp_ipv4.c:179:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#81: FILE: ipv4/tcp_ipv4.c:180:
+	for( ; sk2 != NULL; sk2 = sk2->bind_next) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sk2"
#81: FILE: ipv4/tcp_ipv4.c:180:
+	for( ; sk2 != NULL; sk2 = sk2->bind_next) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sk2->rcv_saddr == sk->rcv_saddr'
#87: FILE: ipv4/tcp_ipv4.c:186:
+				if (!sk2->rcv_saddr	||
+				    !sk->rcv_saddr	||
+				    (sk2->rcv_saddr == sk->rcv_saddr))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: ipv4/tcp_ipv4.c:193:
+^Ireturn (int) sk2; $

CHECK:SPACING: No space is necessary after a cast
#94: FILE: ipv4/tcp_ipv4.c:193:
+	return (int) sk2; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: ipv4/tcp_ipv4.c:194:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: ipv4/tcp_ipv4.c:250:
+^I^I^Iret = 1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: ipv4/tcp_ipv4.c:252:
+^I^I^I^Igoto fail_unlock; $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sk->prev"
#145: FILE: ipv4/tcp_ipv4.c:268:
+	if (sk->prev == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: ipv4/tcp_ipv4.c:269:
+^I^Itcp_bind_hash(sk, tb, snum); $

CHECK:SPACING: No space is necessary after a cast
#147: FILE: ipv4/tcp_ipv4.c:270:
+	BUG_TRAP(sk->prev == (struct sock *) tb);

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: ipv4/tcp_ipv4.c:271:
+ ^Iret = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: ipv4/tcp_ipv4.c:271:
+ ^Iret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: ipv4/tcp_ipv4.c:271:
+ ^Iret = 0;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: ipv4/tcp_ipv4.c:340:
+static __inline__ void __tcp_v4_hash(struct sock *sk,const int listen_possible)
                                                     ^

WARNING:INLINE: plain inline is preferred over __inline__
#157: FILE: ipv4/tcp_ipv4.c:340:
+static __inline__ void __tcp_v4_hash(struct sock *sk,const int listen_possible)

ERROR:SPACING: space required before the open parenthesis '('
#164: FILE: ipv4/tcp_ipv4.c:346:
+	if(listen_possible && sk->state == TCP_LISTEN) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: ipv4/tcp_ipv4.c:378:
+^Iif (!sk->pprev) $

WARNING:TYPO_SPELLING: 'ende' may be misspelled - perhaps 'end'?
#191: FILE: ipv4/tcp_ipv4.c:379:
+		goto ende; 
 		     ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: ipv4/tcp_ipv4.c:379:
+^I^Igoto ende; $

WARNING:TYPO_SPELLING: 'ende' may be misspelled - perhaps 'end'?
#201: FILE: ipv4/tcp_ipv4.c:400:
+ ende:
  ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: ipv4/tcp_ipv4.c:538:
+/* called with local bh disabled */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: ipv4/tcp_ipv4.c:624:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: ipv4/tcp_ipv4.c:626:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: ipv4/tcp_ipv4.c:633:
+^Iif (snum == 0) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: ipv4/tcp_ipv4.c:638:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: ipv4/tcp_ipv4.c:639:
+^I^Ilocal_bh_disable(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: ipv4/tcp_ipv4.c:640:
+^I^Ispin_lock(&tcp_portalloc_lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: ipv4/tcp_ipv4.c:642:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: ipv4/tcp_ipv4.c:643:
+^I^Ido {^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rover < low'
#289: FILE: ipv4/tcp_ipv4.c:645:
+			if ((rover < low) || (rover > high))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rover > high'
#289: FILE: ipv4/tcp_ipv4.c:645:
+			if ((rover < low) || (rover > high))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: ipv4/tcp_ipv4.c:648:
+^I^I^Ispin_lock(&head->lock);^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: ipv4/tcp_ipv4.c:649:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: ipv4/tcp_ipv4.c:652:
+^I^I^I * unique enough.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: ipv4/tcp_ipv4.c:655:
+^I^I^I^Iif (tb->port == rover) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: ipv4/tcp_ipv4.c:656:
+^I^I^I^I^Iif (!tb->owners) $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: ipv4/tcp_ipv4.c:660:
+					if (!tcp_v4_check_established(sk,rover))
 					                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: ipv4/tcp_ipv4.c:661:
+^I^I^I^I^I^Igoto ok; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: ipv4/tcp_ipv4.c:662:
+^I^I^I^I^Ifast_checkestab_failed++; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: ipv4/tcp_ipv4.c:662:
+^I^I^I^I^Ifast_checkestab_failed++; ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: ipv4/tcp_ipv4.c:663:
+^I^I^I^I^Igoto next_port; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: ipv4/tcp_ipv4.c:664:
+^I^I^I^I} ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#308: FILE: ipv4/tcp_ipv4.c:664:
+^I^I^I^I} ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: ipv4/tcp_ipv4.c:665:
+^I^I^I}^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: ipv4/tcp_ipv4.c:668:
+^I^I^Iif (!tb) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: ipv4/tcp_ipv4.c:669:
+^I^I^I^Ispin_unlock(&head->lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: ipv4/tcp_ipv4.c:672:
+^I^I^Igoto ok; $

WARNING:INDENTED_LABEL: labels should not be indented
#318: FILE: ipv4/tcp_ipv4.c:674:
+		next_port:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: ipv4/tcp_ipv4.c:677:
+^I^Itcp_port_rover = rover; ^I^I      $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: ipv4/tcp_ipv4.c:677:
+^I^Itcp_port_rover = rover; ^I^I      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: ipv4/tcp_ipv4.c:679:
+^I^Ispin_unlock(&tcp_portalloc_lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: ipv4/tcp_ipv4.c:680:
+^I^Ilocal_bh_enable(); $

WARNING:INDENTED_LABEL: labels should not be indented
#328: FILE: ipv4/tcp_ipv4.c:684:
+	ok:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: ipv4/tcp_ipv4.c:685:
+^I^I/* All locks still held and bhs disabled */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: ipv4/tcp_ipv4.c:686:
+^I^Itcp_port_rover = rover; ^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#330: FILE: ipv4/tcp_ipv4.c:686:
+^I^Itcp_port_rover = rover; ^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: ipv4/tcp_ipv4.c:687:
+^I^Itcp_bind_hash(sk, tb, rover);  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: ipv4/tcp_ipv4.c:688:
+^I^Isk->sport = htons(rover); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: ipv4/tcp_ipv4.c:689:
+^I^Ispin_unlock(&tcp_portalloc_lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: ipv4/tcp_ipv4.c:690:
+^I^I__tcp_v4_hash(sk, 0); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: ipv4/tcp_ipv4.c:691:
+^I^I/* fastreuse state of tb is never changed in connect */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: ipv4/tcp_ipv4.c:692:
+^I^Ispin_unlock(&head->lock); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: ipv4/tcp_ipv4.c:693:
+^I^Ilocal_bh_enable(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: ipv4/tcp_ipv4.c:694:
+^I^Ireturn 0; ^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#338: FILE: ipv4/tcp_ipv4.c:694:
+^I^Ireturn 0; ^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: ipv4/tcp_ipv4.c:696:
+^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#353: FILE: ipv4/tcp_ipv4.c:706:
+		int ret;
+		spin_unlock(&head->lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: ipv4/tcp_ipv4.c:709:
+^I^Ilocal_bh_enable(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: ipv4/tcp_ipv4.c:794:
+^I/* Initialise common fields */ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: ipv4/tcp_ipv4.c:801:
+	tcp_set_state(sk,TCP_SYN_SENT);
 	                ^

WARNING:TYPO_SPELLING: 'usin' may be misspelled - perhaps 'using'?
#398: FILE: ipv4/tcp_ipv4.c:802:
+	err = tcp_v4_hash_connect(sk, usin); 
 	                              ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: ipv4/tcp_ipv4.c:802:
+^Ierr = tcp_v4_hash_connect(sk, usin); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: ipv4/tcp_ipv4.c:803:
+^Iif (!err) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: ipv4/tcp_ipv4.c:804:
+^I^Istruct sk_buff *buff; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: ipv4/tcp_ipv4.c:808:
+^I^Iif (buff != NULL) { $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buff"
#404: FILE: ipv4/tcp_ipv4.c:808:
+		if (buff != NULL) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: ipv4/tcp_ipv4.c:809:
+^I^I^Itcp_connect_send(sk, buff); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: ipv4/tcp_ipv4.c:811:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: ipv4/tcp_ipv4.c:812:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: ipv4/tcp_ipv4.c:814:
+^Itcp_set_state(sk, TCP_CLOSE); $

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: ipv4/tcp_output.c:1160:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: ipv4/tcp_output.c:1163:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: ipv4/tcp_output.c:1212:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: ipv4/tcp_output.c:1214:
+{ $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sk->tp_pinfo.af_tcp
#480: FILE: ipv4/tcp_output.c:1215:
+	struct tcp_opt *tp = &(sk->tp_pinfo.af_tcp);

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: ipv6/tcp_ipv6.c:489:
+^I/* XXX */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: ipv6/tcp_ipv6.c:490:
+^Iif (sk->num == 0) { $

WARNING:LINE_SPACING: Missing a blank line after declarations
#522: FILE: ipv6/tcp_ipv6.c:492:
+		int err = tcp_v6_get_port(sk, sk->num);
+		if (err)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: ipv6/tcp_ipv6.c:494:
+^I^Isk->sport = htons(sk->num); ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#524: FILE: ipv6/tcp_ipv6.c:494:
+^I^Isk->sport = htons(sk->num); ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: ipv6/tcp_ipv6.c:495:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: ipv6/tcp_ipv6.c:496:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: ipv6/tcp_ipv6.c:680:
+^Itcp_set_state(sk, TCP_SYN_SENT); $

WARNING:TYPO_SPELLING: 'usin' may be misspelled - perhaps 'using'?
#559: FILE: ipv6/tcp_ipv6.c:681:
+	err = tcp_v6_hash_connect(sk, usin); 
 	                              ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: ipv6/tcp_ipv6.c:681:
+^Ierr = tcp_v6_hash_connect(sk, usin); $

WARNING:LINE_SPACING: Missing a blank line after declarations
#562: FILE: ipv6/tcp_ipv6.c:684:
+		struct sk_buff *buff;
+		err = -ENOBUFS;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: ipv6/tcp_ipv6.c:686:
+^I^Iif (buff != NULL) { $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buff"
#564: FILE: ipv6/tcp_ipv6.c:686:
+		if (buff != NULL) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: ipv6/tcp_ipv6.c:687:
+^I^I^Itcp_connect_send(sk, buff); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: ipv6/tcp_ipv6.c:689:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: ipv6/tcp_ipv6.c:693:
+^Itcp_set_state(sk, TCP_CLOSE); $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000510149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 82 errors, 23 warnings, 13 checks, 525 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000510149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
