WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
diff -ur modutils-2.4.8/depmod/depmod.c modutils-2.4.8-ieee1394/depmod/depmod.c

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#99: FILE: depmod/depmod.c:674:
+static void extract_ieee1394_device_id(struct obj_file *f, void *image, unsigned long m_size, MODULE *mod)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#102: FILE: depmod/depmod.c:677:
+	struct ieee1394_device_id ieee1394_device, *latest;
+	ElfW(Addr) ref_ieee1394, ref_ref_ieee1394;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ElfW>
#102: FILE: depmod/depmod.c:677:
+	ElfW(Addr) ref_ieee1394, ref_ref_ieee1394;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#102: FILE: depmod/depmod.c:677:
+	ElfW(Addr) ref_ieee1394, ref_ref_ieee1394;

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#104: FILE: depmod/depmod.c:679:
+	ref_ieee1394 = obj_symbol_final_value(f, obj_find_symbol(f, "__module_ieee1394_device_size"));

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#107: FILE: depmod/depmod.c:682:
+	memcpy(&ieee1394_device_size, (char *)image + ref_ieee1394 - f->baseaddr, sizeof(ieee1394_device_size));

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#108: FILE: depmod/depmod.c:683:
+	ref_ref_ieee1394 = obj_symbol_final_value(f, obj_find_symbol(f, "__module_ieee1394_device_table"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: depmod/depmod.c:690:
+		error("Unexpected value (%" tgt_long_fmt "d) in '%s' for ieee1394_device_size%s",
+		ieee1394_device_size, f->filename, has_kernel_changed);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#120: FILE: depmod/depmod.c:695:
+		memcpy(&ieee1394_device, (char *)image + ref_ieee1394 - f->baseaddr, ieee1394_device_size);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#124: FILE: depmod/depmod.c:699:
+		mod->ieee1394_device = xrealloc(mod->ieee1394_device, ++(mod->n_ieee1394_device)*sizeof(*(mod->ieee1394_device)));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#124: FILE: depmod/depmod.c:699:
+		mod->ieee1394_device = xrealloc(mod->ieee1394_device, ++(mod->n_ieee1394_device)*sizeof(*(mod->ieee1394_device)));
 		                                                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mod->ieee1394_device
#124: FILE: depmod/depmod.c:699:
+		mod->ieee1394_device = xrealloc(mod->ieee1394_device, ++(mod->n_ieee1394_device)*sizeof(*(mod->ieee1394_device)));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#125: FILE: depmod/depmod.c:700:
+		latest = mod->ieee1394_device + mod->n_ieee1394_device-1;
 		                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#154: FILE: depmod/depmod.c:1100:
+		ieee1394map = gen_file_open(gen_file+GEN_IEEE1394MAPFILE);
 		                                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: depmod/depmod.c:1287:
+		struct ieee1394_device_id *ieee1394_device = ptmod->ieee1394_device;
+		if (!ptmod->n_ieee1394_device)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: depmod/depmod.c:1290:
+^I^I^Ifprintf(ieee1394map, "%-20s 0x%08x  0x%06x  0x%06x 0x%06x     0x%06x\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513362.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 7 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513362.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
