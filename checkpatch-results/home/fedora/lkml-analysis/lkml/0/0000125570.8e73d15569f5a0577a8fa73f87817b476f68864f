CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ptr)...) over kmalloc(sizeof(struct zfcp_fsf_req_pool_element)...)
#100: FILE: drivers/s390/scsi/zfcp_aux.c:850:
+	void *ptr = kmalloc(sizeof(struct zfcp_fsf_req_pool_element), gfp_mask);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#101: FILE: drivers/s390/scsi/zfcp_aux.c:851:
+	void *ptr = kmalloc(sizeof(struct zfcp_fsf_req_pool_element), gfp_mask);
+	if (!ptr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: drivers/s390/scsi/zfcp_ext.h:207:
+extern int zfcp_adapter_statistic_register(struct zfcp_adapter *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_adapter *' should also have an identifier name
#257: FILE: drivers/s390/scsi/zfcp_ext.h:207:
+extern int zfcp_adapter_statistic_register(struct zfcp_adapter *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: drivers/s390/scsi/zfcp_ext.h:208:
+extern int zfcp_adapter_statistic_unregister(struct zfcp_adapter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_adapter *' should also have an identifier name
#258: FILE: drivers/s390/scsi/zfcp_ext.h:208:
+extern int zfcp_adapter_statistic_unregister(struct zfcp_adapter *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#259: FILE: drivers/s390/scsi/zfcp_ext.h:209:
+extern int zfcp_unit_statistic_register(struct zfcp_unit *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_unit *' should also have an identifier name
#259: FILE: drivers/s390/scsi/zfcp_ext.h:209:
+extern int zfcp_unit_statistic_register(struct zfcp_unit *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: drivers/s390/scsi/zfcp_ext.h:210:
+extern int zfcp_unit_statistic_unregister(struct zfcp_unit *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zfcp_unit *' should also have an identifier name
#260: FILE: drivers/s390/scsi/zfcp_ext.h:210:
+extern int zfcp_unit_statistic_unregister(struct zfcp_unit *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/s390/scsi/zfcp_fsf.c:3478:
+			statistic_inc(unit->stat_sizes_scsi_nomem,
+				       scsi_cmnd->request_bufflen);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: drivers/s390/scsi/zfcp_fsf.c:3481:
+			statistic_inc(unit->stat_sizes_scsi_nofit,
+				       scsi_cmnd->request_bufflen);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/s390/scsi/zfcp_fsf.c:3593:
+		statistic_inc(unit->stat_sizes_scsi_nofit,
+			       scsi_cmnd->request_bufflen);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: drivers/s390/scsi/zfcp_fsf.c:3606:
+		statistic_inc(unit->stat_pending_scsi_read,
+				atomic_inc_return(&unit->read_num));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/s390/scsi/zfcp_fsf.c:3609:
+		statistic_inc(unit->stat_pending_scsi_write,
+				atomic_inc_return(&unit->write_num));

WARNING:MISORDERED_TYPE: type 'long long unsigned' should be specified in [[un]signed] [short|int|long|long long] order
#329: FILE: drivers/s390/scsi/zfcp_fsf.c:4011:
+	long long unsigned latency;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/s390/scsi/zfcp_fsf.c:4019:
+		statistic_inc_nolock(unit->stat_sizes_scsi_write,
+				      zfcp_get_fcp_dl(fcp_cmnd_iu));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/s390/scsi/zfcp_fsf.c:4024:
+		statistic_inc_nolock(unit->stat_sizes_scsi_read,
+				      zfcp_get_fcp_dl(fcp_cmnd_iu));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/s390/scsi/zfcp_fsf.c:4029:
+		statistic_inc_nolock(unit->stat_sizes_scsi_nodata,
+				      zfcp_get_fcp_dl(fcp_cmnd_iu));

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/s390/scsi/zfcp_fsf.c:4657:
+        } else if (!zfcp_fsf_req_sbal_check(lock_flags, req_queue, 1)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/s390/scsi/zfcp_fsf.c:4657:
+        } else if (!zfcp_fsf_req_sbal_check(lock_flags, req_queue, 1)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: drivers/s390/scsi/zfcp_fsf.c:4827:
+	statistic_inc(adapter->stat_qdio_outb,
+			QDIO_MAX_BUFFERS_PER_Q -

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#408: FILE: drivers/s390/scsi/zfcp_qdio.c:666:
+			statistic_inc(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#410: FILE: drivers/s390/scsi/zfcp_qdio.c:668:
+				atomic_read(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: drivers/s390/scsi/zfcp_scsi.c:460:
+		statistic_inc(unit->stat_sizes_timedout_nodata,
+			       scpnt->request_bufflen);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#466: FILE: drivers/s390/scsi/zfcp_stat.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#468: FILE: drivers/s390/scsi/zfcp_stat.c:3:
+ * linux/drivers/s390/scsi/zfcp_stat.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#487: FILE: drivers/s390/scsi/zfcp_stat.c:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#488: FILE: drivers/s390/scsi/zfcp_stat.c:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#491: FILE: drivers/s390/scsi/zfcp_stat.c:26:
+#define ZFCP_STAT_REVISION "$Revision: 1.9 $"

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#554: FILE: drivers/s390/scsi/zfcp_stat.c:89:
+	sprintf(name, "zfcp-%s-0x%016Lx-0x%016Lx",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125570.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 11 warnings, 17 checks, 553 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125570.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
