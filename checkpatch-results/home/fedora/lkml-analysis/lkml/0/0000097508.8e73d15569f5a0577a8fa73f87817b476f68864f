CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'context' may be better as '(context)' to avoid precedence issues
#55: FILE: ipc/sem.c:82:
+#define sem_lock(context, id)		\
+	((struct sem_array*)ipc_lock(&context->ids,id))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#56: FILE: ipc/sem.c:83:
+	((struct sem_array*)ipc_lock(&context->ids,id))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#56: FILE: ipc/sem.c:83:
+	((struct sem_array*)ipc_lock(&context->ids,id))
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'context' may be better as '(context)' to avoid precedence issues
#59: FILE: ipc/sem.c:86:
+#define sem_rmid(context, id)		\
+	((struct sem_array*)ipc_rmid(&context->ids,id))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#60: FILE: ipc/sem.c:87:
+	((struct sem_array*)ipc_rmid(&context->ids,id))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#60: FILE: ipc/sem.c:87:
+	((struct sem_array*)ipc_rmid(&context->ids,id))
 	                                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'context' may be better as '(context)' to avoid precedence issues
#61: FILE: ipc/sem.c:88:
+#define sem_checkid(context, sma, semid)	\
+	ipc_checkid(&context->ids,&sma->sem_perm,semid)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sma' may be better as '(sma)' to avoid precedence issues
#61: FILE: ipc/sem.c:88:
+#define sem_checkid(context, sma, semid)	\
+	ipc_checkid(&context->ids,&sma->sem_perm,semid)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#62: FILE: ipc/sem.c:89:
+	ipc_checkid(&context->ids,&sma->sem_perm,semid)
 	                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#62: FILE: ipc/sem.c:89:
+	ipc_checkid(&context->ids,&sma->sem_perm,semid)
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: ipc/sem.c:89:
+	ipc_checkid(&context->ids,&sma->sem_perm,semid)
 	                                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'context' may be better as '(context)' to avoid precedence issues
#63: FILE: ipc/sem.c:90:
+#define sem_buildid(context, id, seq) \
+	ipc_buildid(&context->ids, id, seq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#68: FILE: ipc/sem.c:93:
+static int newary (struct ipc_sem_context *, key_t, int, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#69: FILE: ipc/sem.c:94:
+static void freeary (struct ipc_sem_context *, struct sem_array *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#80: FILE: ipc/sem.c:117:
+void __init sem_init (struct ipc_sem_context *context)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: ipc/sem.c:119:
+	ipc_init_ids(&context->ids,sc_semmni);
 	                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: ipc/sem.c:160:
+static int newary (struct ipc_sem_context *context,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#153: FILE: ipc/sem.c:222:
+	} else if ((id = ipc_findkey(&context->ids, key)) == -1) {  /* key not used */

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: ipc/sem.c:445:
+static void freeary (struct ipc_sem_context *context,

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: ipc/sem.c:506:
+^I^I         int semid, int semnum, int cmd, int version, union semun arg)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: ipc/sem.c:506:
+static int semctl_nolock(struct ipc_sem_context *context,
+		         int semid, int semnum, int cmd, int version, union semun arg)

ERROR:SPACING: space required before the open parenthesis '('
#253: FILE: ipc/sem.c:550:
+		if(semid >= context->ids.entries->size)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: ipc/sem.c:605:
+	if (sem_checkid(context, sma,semid))
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#428: FILE: ipc/sem.c:826:
+	if (sem_checkid(context, sma,semid)) {
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: ipc/sem.c:883:
+		err = semctl_nolock(context, semid,semnum,cmd,version,arg);
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: ipc/sem.c:883:
+		err = semctl_nolock(context, semid,semnum,cmd,version,arg);
 		                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: ipc/sem.c:883:
+		err = semctl_nolock(context, semid,semnum,cmd,version,arg);
 		                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: ipc/sem.c:883:
+		err = semctl_nolock(context, semid,semnum,cmd,version,arg);
 		                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#485: FILE: ipc/sem.c:893:
+		err = semctl_main(context, semid,semnum,cmd,version,arg);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#485: FILE: ipc/sem.c:893:
+		err = semctl_main(context, semid,semnum,cmd,version,arg);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#485: FILE: ipc/sem.c:893:
+		err = semctl_main(context, semid,semnum,cmd,version,arg);
 		                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#485: FILE: ipc/sem.c:893:
+		err = semctl_main(context, semid,semnum,cmd,version,arg);
 		                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: ipc/sem.c:898:
+		err = semctl_down(context, semid,semnum,cmd,version,arg);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: ipc/sem.c:898:
+		err = semctl_down(context, semid,semnum,cmd,version,arg);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: ipc/sem.c:898:
+		err = semctl_down(context, semid,semnum,cmd,version,arg);
 		                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: ipc/sem.c:898:
+		err = semctl_down(context, semid,semnum,cmd,version,arg);
 		                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: ipc/sem.c:1011:
+	if (sem_checkid(context, sma,semid)) {
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#590: FILE: ipc/sem.c:1124:
+	if (sem_checkid(context, sma,semid))
 	                            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#651: FILE: ipc/sem.c:1299:
+		BUG_ON(sem_checkid(context, sma,u->semid));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: ipc/sem.c:1299:
+		BUG_ON(sem_checkid(context, sma,u->semid));
 		                               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: ipc/util.h:52:
+void sem_init (struct ipc_sem_context *context);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#706: FILE: ipc/util.h:53:
+void msg_init (struct ipc_msg_context *context);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#707: FILE: ipc/util.h:54:
+void shm_init (void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000097508.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 9 warnings, 6 checks, 616 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000097508.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
