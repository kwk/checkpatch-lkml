WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#47: FILE: arch/ppc64/kernel/prom.c:1884:
+int __devinit prom_n_intr_cells(struct device_node *np)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: arch/ppc64/kernel/ras.c:73:
+static void request_ras_irqs(struct device_node *np, char *propname,
+			irqreturn_t (*handler)(int, void *, struct pt_regs *),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ireg"
#92: FILE: arch/ppc64/kernel/ras.c:80:
+	if (ireg == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#100: FILE: arch/ppc64/kernel/ras.c:88:
+			printk(KERN_ERR "Unable to allocate interrupt "

WARNING:SPLIT_STRING: quoted string split across lines
#101: FILE: arch/ppc64/kernel/ras.c:89:
+			printk(KERN_ERR "Unable to allocate interrupt "
+			       "number for %s\n", np->full_name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#105: FILE: arch/ppc64/kernel/ras.c:93:
+			printk(KERN_ERR "Unable to request interrupt %d for "

WARNING:SPLIT_STRING: quoted string split across lines
#106: FILE: arch/ppc64/kernel/ras.c:94:
+			printk(KERN_ERR "Unable to request interrupt %d for "
+			       "%s\n", irq_offset_up(virq), np->full_name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "np"
#143: FILE: arch/ppc64/kernel/ras.c:114:
+	if (np != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "np"
#169: FILE: arch/ppc64/kernel/ras.c:124:
+	if (np != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#229: FILE: arch/ppc64/kernel/ras.c:168:
+	printk(KERN_WARNING "EPOW <0x%lx 0x%x 0x%x>\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status == 0'
#270: FILE: arch/ppc64/kernel/ras.c:203:
+	if ((status == 0) && (rtas_elog->severity >= SEVERITY_ERROR_SYNC))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rtas_elog->severity >= SEVERITY_ERROR_SYNC'
#270: FILE: arch/ppc64/kernel/ras.c:203:
+	if ((status == 0) && (rtas_elog->severity >= SEVERITY_ERROR_SYNC))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#287: FILE: arch/ppc64/kernel/ras.c:214:
+		printk(KERN_EMERG "Error: Fatal hardware error <0x%lx 0x%x>\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#299: FILE: arch/ppc64/kernel/ras.c:227:
+		printk(KERN_WARNING

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#315: FILE: include/asm-ppc64/prom.h:272:
+extern int prom_n_intr_cells(struct device_node* np);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#315: FILE: include/asm-ppc64/prom.h:272:
+extern int prom_n_intr_cells(struct device_node* np);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 7 checks, 263 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
