WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#63: FILE: include/asm-ia64/pgtable.h:223:
+#define PAGE_INDEX_OFFSET 0xa000000000000000 /* IA64's mem_maps are mapped
+						in region 5 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#63: FILE: include/asm-ia64/pgtable.h:223:
+						in region 5 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#84: FILE: include/linux/mm.h:378:
+#define PAGEZONE_SIZE (1 << PAGEZONE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: include/linux/mm.h:388:
+	unsigned long out = (unsigned long)(page - (struct page *)PAGE_INDEX_OFFSET);
+	return out >> PAGEZONE_SHIFT;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open square bracket '['
#109: FILE: include/linux/mm.h:396:
+	return zone_table[ page_to_index(page)];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open square bracket '['
#152: FILE: mm/page_alloc.c:55:
+struct zone *zone_table[ (~PAGE_OFFSET + 1) >> (PAGEZONE_SHIFT + PAGE_SHIFT) ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#152: FILE: mm/page_alloc.c:55:
+struct zone *zone_table[ (~PAGE_OFFSET + 1) >> (PAGEZONE_SHIFT + PAGE_SHIFT) ];

WARNING:LINE_SPACING: Missing a blank line after declarations
#171: FILE: mm/page_alloc.c:1582:
+	struct zone **entry;
+	entry = &zone_table[page_to_index(lmem_map)];

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#179: FILE: mm/page_alloc.c:1590:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247354.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 4 warnings, 2 checks, 125 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247354.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
