WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#29: 
Signed-Off-By: Alasdair G Kergon <agk@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#37: FILE: drivers/md/Kconfig:236:
+config DM_MULTIPATH_EMC
+	tristate "EMC CX/AX multipath support (EXPERIMENTAL)"
+	depends on DM_MULTIPATH && BLK_DEV_DM && EXPERIMENTAL
+	---help---
+	  Multipath support for EMC CX/AX series hardware.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: drivers/md/dm-emc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#73: FILE: drivers/md/dm-emc.c:16:
+	spinlock_t lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#76: FILE: drivers/md/dm-emc.c:19:
+	 * or the long version (default for AX/CX CLARiiON arrays). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#77: FILE: drivers/md/dm-emc.c:20:
+	unsigned short_trespass;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#79: FILE: drivers/md/dm-emc.c:22:
+	 * switch-over. Default: Don't. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#80: FILE: drivers/md/dm-emc.c:23:
+	unsigned hr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: drivers/md/dm-emc.c:24:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: drivers/md/dm-emc.c:48:
+^I * $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#119: FILE: drivers/md/dm-emc.c:62:
+static struct bio *get_failover_bio(struct path *path, unsigned data_size)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_failover_bio', this function's name, in a string
#126: FILE: drivers/md/dm-emc.c:69:
+		DMERR("dm-emc: get_failover_bio: bio_alloc() failed.");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: drivers/md/dm-emc.c:72:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_failover_bio', this function's name, in a string
#138: FILE: drivers/md/dm-emc.c:81:
+		DMERR("dm-emc: get_failover_bio: alloc_page() failed.");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_failover_bio', this function's name, in a string
#144: FILE: drivers/md/dm-emc.c:87:
+		DMERR("dm-emc: get_failover_bio: alloc_page() failed.");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_failover_req', this function's name, in a string
#163: FILE: drivers/md/dm-emc.c:106:
+		DMERR("dm-emc: get_failover_req: blk_get_request failed");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: drivers/md/dm-emc.c:109:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#167: FILE: drivers/md/dm-emc.c:110:
+	rq->bio = rq->biotail = bio;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#173: FILE: drivers/md/dm-emc.c:116:
+	rq->buffer = rq->data = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: drivers/md/dm-emc.c:138:
+^Iunsigned char long_trespass_pg[] = { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/md/dm-emc.c:139:
+^I^I0, 0, 0, 0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/md/dm-emc.c:146:
+^Iunsigned char short_trespass_pg[] = { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/md/dm-emc.c:147:
+^I^I0, 0, 0, 0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/md/dm-emc.c:153:
+^Iunsigned data_size = h->short_trespass ? sizeof(short_trespass_pg) : $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#210: FILE: drivers/md/dm-emc.c:153:
+	unsigned data_size = h->short_trespass ? sizeof(short_trespass_pg) : 

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'emc_trespass_get', this function's name, in a string
#220: FILE: drivers/md/dm-emc.c:163:
+		DMERR("dm-emc: emc_trespass_get: no bio");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/md/dm-emc.c:166:
+^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#227: FILE: drivers/md/dm-emc.c:170:
+	if (h->short_trespass) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'emc_trespass_get', this function's name, in a string
#236: FILE: drivers/md/dm-emc.c:179:
+		DMERR("dm-emc: emc_trespass_get: no rq");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#250: FILE: drivers/md/dm-emc.c:193:
+static void emc_pg_init(struct hw_handler *hwh, unsigned bypassed,

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#259: FILE: drivers/md/dm-emc.c:202:
+	 * possibly send the fo cmnd), or we can also have the
 	                     ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'emc_pg_init', this function's name, in a string
#263: FILE: drivers/md/dm-emc.c:206:
+		DMINFO("dm-emc: emc_pg_init: no queue");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'emc_pg_init', this function's name, in a string
#270: FILE: drivers/md/dm-emc.c:213:
+		DMERR("dm-emc: emc_pg_init: no rq");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'emc_pg_init', this function's name, in a string
#274: FILE: drivers/md/dm-emc.c:217:
+	DMINFO("dm-emc: emc_pg_init: sending switch-over command");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#286: FILE: drivers/md/dm-emc.c:229:
+	if (h) {
+		h->lock = SPIN_LOCK_UNLOCKED;
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#293: FILE: drivers/md/dm-emc.c:236:
+static int emc_ctr(struct hw_handler *hwh, unsigned argc, char **argv)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#296: FILE: drivers/md/dm-emc.c:239:
+	unsigned hr, short_trespass;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: drivers/md/dm-emc.c:240:
+^I$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#305: FILE: drivers/md/dm-emc.c:248:
+		return -EINVAL;
+	} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/md/dm-emc.c:249:
+^I^Iif ((sscanf(argv[0], "%u", &short_trespass) != 1) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'short_trespass > 1'
#306: FILE: drivers/md/dm-emc.c:249:
+		if ((sscanf(argv[0], "%u", &short_trespass) != 1) 
+			|| (short_trespass > 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#306: FILE: drivers/md/dm-emc.c:249:
+		if ((sscanf(argv[0], "%u", &short_trespass) != 1) 
+			|| (short_trespass > 1)) {
+			DMWARN("dm-emc: invalid trespass mode selected");
+			return -EINVAL;
+		} 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#307: FILE: drivers/md/dm-emc.c:250:
+		if ((sscanf(argv[0], "%u", &short_trespass) != 1) 
+			|| (short_trespass > 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: drivers/md/dm-emc.c:253:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: drivers/md/dm-emc.c:254:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: drivers/md/dm-emc.c:255:
+^I^Iif ((sscanf(argv[1], "%u", &hr) != 1) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hr > 1'
#312: FILE: drivers/md/dm-emc.c:255:
+		if ((sscanf(argv[1], "%u", &hr) != 1) 
+			|| (hr > 1)) {

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#312: FILE: drivers/md/dm-emc.c:255:
+		if ((sscanf(argv[1], "%u", &hr) != 1) 
+			|| (hr > 1)) {
+			DMWARN("dm-emc: invalid honor reservation flag selected");
+			return -EINVAL;
+		} 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#313: FILE: drivers/md/dm-emc.c:256:
+		if ((sscanf(argv[1], "%u", &hr) != 1) 
+			|| (hr > 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/md/dm-emc.c:259:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: drivers/md/dm-emc.c:265:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: drivers/md/dm-emc.c:267:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/md/dm-emc.c:269:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#327: FILE: drivers/md/dm-emc.c:270:
+	if ((h->short_trespass = short_trespass))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: drivers/md/dm-emc.c:274:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#332: FILE: drivers/md/dm-emc.c:275:
+	if ((h->hr = hr))

CHECK:SPACING: No space is necessary after a cast
#342: FILE: drivers/md/dm-emc.c:285:
+	struct emc_handler *h = (struct emc_handler *) hwh->context;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#348: FILE: drivers/md/dm-emc.c:291:
+static unsigned emc_err(struct hw_handler *hwh, struct bio *bio)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#351: FILE: drivers/md/dm-emc.c:294:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: drivers/md/dm-emc.c:303:
+^I^I^I * $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#365: FILE: drivers/md/dm-emc.c:308:
+			 * inquiry in the end_io path. Ugh. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#372: FILE: drivers/md/dm-emc.c:315:
+			 * the default handler, but lets make sure.) */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/md/dm-emc.c:318:
+^I^I^I/* Unit Attention Code. This is the first IO $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#376: FILE: drivers/md/dm-emc.c:319:
+			 * to the new path, so just retry. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207544.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 32 warnings, 8 checks, 381 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207544.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
