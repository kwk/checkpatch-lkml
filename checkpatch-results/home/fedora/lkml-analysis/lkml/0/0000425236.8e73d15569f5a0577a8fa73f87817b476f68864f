WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#23: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#24: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#26: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
#	           ChangeSet	1.704   -> 1.705  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
#	 include/linux/ipc.h	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
#	           ipc/msg.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#	include/linux/security.h	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#	    security/dummy.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
#	security/capability.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
#	           ipc/sem.c	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
#	          ipc/util.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
#	           ipc/shm.c	1.17    -> 1.18   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# 02/10/08	sds@tislabs.com	1.705

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# [PATCH] Base set of LSM hooks for SysV IPC

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# The patch below adds the base set of LSM hooks for System V IPC to the

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# 2.5.41 kernel.  These hooks permit a security module to label

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# semaphore sets, message queues, and shared memory segments and to

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# perform security checks on these objects that parallel the existing

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# IPC access checks.  Additional LSM hooks for labeling and controlling

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# individual messages sent on a single message queue and for providing

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# fine-grained distinctions among IPC operations will be submitted

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# separately after this base set of LSM IPC hooks has been accepted.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#53: 
--- a/include/linux/ipc.h	Tue Oct  8 15:51:15 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: include/linux/security.h:833:
+	int (*ipc_permission) (struct kern_ipc_perm * ipcp, short flag);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#122: FILE: include/linux/security.h:833:
+	int (*ipc_permission) (struct kern_ipc_perm * ipcp, short flag);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#124: FILE: include/linux/security.h:835:
+	int (*msg_queue_alloc_security) (struct msg_queue * msq);

WARNING:SPACING: Unnecessary space before function pointer arguments
#124: FILE: include/linux/security.h:835:
+	int (*msg_queue_alloc_security) (struct msg_queue * msq);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: include/linux/security.h:836:
+	void (*msg_queue_free_security) (struct msg_queue * msq);

WARNING:SPACING: Unnecessary space before function pointer arguments
#125: FILE: include/linux/security.h:836:
+	void (*msg_queue_free_security) (struct msg_queue * msq);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: include/linux/security.h:838:
+	int (*shm_alloc_security) (struct shmid_kernel * shp);

WARNING:SPACING: Unnecessary space before function pointer arguments
#127: FILE: include/linux/security.h:838:
+	int (*shm_alloc_security) (struct shmid_kernel * shp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: include/linux/security.h:839:
+	void (*shm_free_security) (struct shmid_kernel * shp);

WARNING:SPACING: Unnecessary space before function pointer arguments
#128: FILE: include/linux/security.h:839:
+	void (*shm_free_security) (struct shmid_kernel * shp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: include/linux/security.h:841:
+	int (*sem_alloc_security) (struct sem_array * sma);

WARNING:SPACING: Unnecessary space before function pointer arguments
#130: FILE: include/linux/security.h:841:
+	int (*sem_alloc_security) (struct sem_array * sma);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: include/linux/security.h:842:
+	void (*sem_free_security) (struct sem_array * sma);

WARNING:SPACING: Unnecessary space before function pointer arguments
#131: FILE: include/linux/security.h:842:
+	void (*sem_free_security) (struct sem_array * sma);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: security/capability.c:682:
+static int cap_ipc_permission (struct kern_ipc_perm *ipcp, short flag)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: security/capability.c:687:
+static int cap_msg_queue_alloc_security (struct msg_queue *msq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: security/capability.c:692:
+static void cap_msg_queue_free_security (struct msg_queue *msq)

WARNING:RETURN_VOID: void function return statements are not generally useful
#304: FILE: security/capability.c:695:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: security/capability.c:697:
+static int cap_shm_alloc_security (struct shmid_kernel *shp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: security/capability.c:702:
+static void cap_shm_free_security (struct shmid_kernel *shp)

WARNING:RETURN_VOID: void function return statements are not generally useful
#314: FILE: security/capability.c:705:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#316: FILE: security/capability.c:707:
+static int cap_sem_alloc_security (struct sem_array *sma)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: security/capability.c:712:
+static void cap_sem_free_security (struct sem_array *sma)

WARNING:RETURN_VOID: void function return statements are not generally useful
#324: FILE: security/capability.c:715:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: security/capability.c:824:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: security/capability.c:827:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#354: FILE: security/dummy.c:496:
+static int dummy_ipc_permission (struct kern_ipc_perm *ipcp, short flag)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#359: FILE: security/dummy.c:501:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#360: FILE: security/dummy.c:502:
+static int dummy_msg_queue_alloc_security (struct msg_queue *msq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#365: FILE: security/dummy.c:507:
+static void dummy_msg_queue_free_security (struct msg_queue *msq)

WARNING:RETURN_VOID: void function return statements are not generally useful
#368: FILE: security/dummy.c:510:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: security/dummy.c:512:
+static int dummy_shm_alloc_security (struct shmid_kernel *shp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#375: FILE: security/dummy.c:517:
+static void dummy_shm_free_security (struct shmid_kernel *shp)

WARNING:RETURN_VOID: void function return statements are not generally useful
#378: FILE: security/dummy.c:520:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#380: FILE: security/dummy.c:522:
+static int dummy_sem_alloc_security (struct sem_array *sma)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: security/dummy.c:527:
+static void dummy_sem_free_security (struct sem_array *sma)

WARNING:RETURN_VOID: void function return statements are not generally useful
#388: FILE: security/dummy.c:530:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: security/dummy.c:636:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: security/dummy.c:639:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: security/dummy.c:642:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425236.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 57 warnings, 1 checks, 314 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425236.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
