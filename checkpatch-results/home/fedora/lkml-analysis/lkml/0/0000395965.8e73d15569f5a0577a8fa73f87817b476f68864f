WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#69: 
diff -ruN linux-original/include/linux/cpufreq.h linux/include/linux/cpufreq.h

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#81: FILE: include/linux/cpufreq.h:8:
+ * $Id: cpufreq.h,v 1.36 2003/01/20 17:31:48 db Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#91: FILE: include/linux/cpufreq.h:25:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#136: FILE: include/linux/cpufreq.h:124:
+	int	(*governor)	(struct cpufreq_policy *policy,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: include/linux/cpufreq.h:130:
+/* pass a target to the cpufreq driver $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#173: FILE: include/linux/cpufreq.h:156:
+	int	(*verify)	(struct cpufreq_policy *policy);

WARNING:SPACING: Unnecessary space before function pointer arguments
#177: FILE: include/linux/cpufreq.h:160:
+	int	(*setpolicy)	(struct cpufreq_policy *policy);

WARNING:SPACING: Unnecessary space before function pointer arguments
#178: FILE: include/linux/cpufreq.h:161:
+	int	(*target)	(struct cpufreq_policy *policy,

WARNING:SPACING: Unnecessary space before function pointer arguments
#184: FILE: include/linux/cpufreq.h:165:
+	int	(*init)		(struct cpufreq_policy *policy);

WARNING:SPACING: Unnecessary space before function pointer arguments
#185: FILE: include/linux/cpufreq.h:166:
+	int	(*exit)		(struct cpufreq_policy *policy);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#215: FILE: kernel/cpufreq.c:7:
+ *  $Id: cpufreq.c,v 1.59 2003/01/20 17:31:48 db Exp $

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#242: FILE: kernel/cpufreq.c:80:
+static int cpufreq_parse_governor (char *str_governor, unsigned int *policy, struct cpufreq_governor **governor)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: kernel/cpufreq.c:80:
+static int cpufreq_parse_governor (char *str_governor, unsigned int *policy, struct cpufreq_governor **governor)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: kernel/cpufreq.c:88:
+^I} else ^I{$

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: kernel/cpufreq.c:90:
+		struct cpufreq_governor *t;
+		down(&cpufreq_driver_sem);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#262: FILE: kernel/cpufreq.c:94:
+			if (!strnicmp(str_governor,t->name,CPUFREQ_NAME_LEN)) {
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#262: FILE: kernel/cpufreq.c:94:
+			if (!strnicmp(str_governor,t->name,CPUFREQ_NAME_LEN)) {
 			                                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#269: FILE: kernel/cpufreq.c:101:
+	out:

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#290: FILE: kernel/cpufreq.c:201:
+		strncpy(value2, cpufreq_driver->policy[to_cpu_nr(dev)].governor->name, CPUFREQ_NAME_LEN);

CHECK:SPACING: No space is necessary after a cast
#334: FILE: kernel/cpufreq.c:285:
+		if (i >= (ssize_t) ((PAGE_SIZE / sizeof(char)) - (CPUFREQ_NAME_LEN + 2)))

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_available_govs' to 'available_scaling_governors_show'
#351: FILE: kernel/cpufreq.c:321:
+static DEVICE_ATTR(available_scaling_governors, S_IRUGO, show_available_govs, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#351: FILE: kernel/cpufreq.c:321:
+static DEVICE_ATTR(available_scaling_governors, S_IRUGO, show_available_govs, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: kernel/cpufreq.c:354:
+^Imemcpy(&policy, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: kernel/cpufreq.c:355:
+^I       &cpufreq_driver->policy[cpu], $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: kernel/cpufreq.c:396:
+	device_create_file (dev, &dev_attr_available_scaling_governors);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: kernel/cpufreq.c:425:
+	device_remove_file (dev, &dev_attr_scaling_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#396: FILE: kernel/cpufreq.c:426:
+	device_remove_file (dev, &dev_attr_available_scaling_governors);

WARNING:LINE_SPACING: Missing a blank line after declarations
#447: FILE: kernel/cpufreq.c:1139:
+	unsigned int ret;
+	down(&cpufreq_driver_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#457: FILE: kernel/cpufreq.c:1149:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#466: FILE: kernel/cpufreq.c:1158:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: kernel/cpufreq.c:1165:
+^Icase CPUFREQ_POLICY_POWERSAVE: $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event == CPUFREQ_GOV_LIMITS'
#474: FILE: kernel/cpufreq.c:1166:
+		if ((event == CPUFREQ_GOV_LIMITS) || (event == CPUFREQ_GOV_START))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event == CPUFREQ_GOV_START'
#474: FILE: kernel/cpufreq.c:1166:
+		if ((event == CPUFREQ_GOV_LIMITS) || (event == CPUFREQ_GOV_START))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event == CPUFREQ_GOV_LIMITS'
#478: FILE: kernel/cpufreq.c:1170:
+		if ((event == CPUFREQ_GOV_LIMITS) || (event == CPUFREQ_GOV_START))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event == CPUFREQ_GOV_START'
#478: FILE: kernel/cpufreq.c:1170:
+		if ((event == CPUFREQ_GOV_LIMITS) || (event == CPUFREQ_GOV_START))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event == CPUFREQ_GOV_STOP'
#487: FILE: kernel/cpufreq.c:1179:
+		if ((event == CPUFREQ_GOV_STOP) ||
+			(ret && (event == CPUFREQ_GOV_START)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event == CPUFREQ_GOV_START'
#487: FILE: kernel/cpufreq.c:1179:
+		if ((event == CPUFREQ_GOV_STOP) ||
+			(ret && (event == CPUFREQ_GOV_START)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: kernel/cpufreq.c:1180:
+		if ((event == CPUFREQ_GOV_STOP) ||
+			(ret && (event == CPUFREQ_GOV_START)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: kernel/cpufreq.c:1189:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#501: FILE: kernel/cpufreq.c:1193:
+	int ret = 0;
+	down(&cpufreq_driver_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#508: FILE: kernel/cpufreq.c:1200:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#516: FILE: kernel/cpufreq.c:1208:
+	if (!strnicmp(governor->name,"powersave",CPUFREQ_NAME_LEN))
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#516: FILE: kernel/cpufreq.c:1208:
+	if (!strnicmp(governor->name,"powersave",CPUFREQ_NAME_LEN))
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: kernel/cpufreq.c:1210:
+	if (!strnicmp(governor->name,"performance",CPUFREQ_NAME_LEN))
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: kernel/cpufreq.c:1210:
+	if (!strnicmp(governor->name,"performance",CPUFREQ_NAME_LEN))
 	                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: kernel/cpufreq.c:1214:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#524: FILE: kernel/cpufreq.c:1216:
+		if (!strnicmp(governor->name,t->name,CPUFREQ_NAME_LEN)) {
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#524: FILE: kernel/cpufreq.c:1216:
+		if (!strnicmp(governor->name,t->name,CPUFREQ_NAME_LEN)) {
 		                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: kernel/cpufreq.c:1222:
+ ^Iup(&cpufreq_driver_sem);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#530: FILE: kernel/cpufreq.c:1222:
+ ^Iup(&cpufreq_driver_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: kernel/cpufreq.c:1222:
+ ^Iup(&cpufreq_driver_sem);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#536: FILE: kernel/cpufreq.c:1228:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: kernel/cpufreq.c:1232:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: kernel/cpufreq.c:1237:
+^I/* $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#550: FILE: kernel/cpufreq.c:1242:
+	for (i=0; i<NR_CPUS; i++)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#550: FILE: kernel/cpufreq.c:1242:
+	for (i=0; i<NR_CPUS; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#550: FILE: kernel/cpufreq.c:1242:
+	for (i=0; i<NR_CPUS; i++)
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#550: FILE: kernel/cpufreq.c:1242:
+	for (i=0; i<NR_CPUS; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: kernel/cpufreq.c:1244:
+^I^Iif (cpufreq_driver && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpufreq_driver->policy[i].policy == CPUFREQ_POLICY_GOVERNOR'
#552: FILE: kernel/cpufreq.c:1244:
+		if (cpufreq_driver && 
+		    (cpufreq_driver->policy[i].policy == CPUFREQ_POLICY_GOVERNOR) && 
+		    (cpufreq_driver->policy[i].governor == governor)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpufreq_driver->policy[i].governor == governor'
#552: FILE: kernel/cpufreq.c:1244:
+		if (cpufreq_driver && 
+		    (cpufreq_driver->policy[i].policy == CPUFREQ_POLICY_GOVERNOR) && 
+		    (cpufreq_driver->policy[i].governor == governor)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: kernel/cpufreq.c:1245:
+^I^I    (cpufreq_driver->policy[i].policy == CPUFREQ_POLICY_GOVERNOR) && $

WARNING:RETURN_VOID: void function return statements are not generally useful
#564: FILE: kernel/cpufreq.c:1256:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#567: FILE: kernel/cpufreq.c:1259:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: kernel/cpufreq.c:1280:
+^Imemcpy(policy, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: kernel/cpufreq.c:1281:
+^I       &cpufreq_driver->policy[cpu], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#587: FILE: kernel/cpufreq.c:1283:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'policy->cpu >= NR_CPUS'
#597: FILE: kernel/cpufreq.c:1302:
+	if (!cpufreq_driver || !policy ||
 	    (policy->cpu >= NR_CPUS) || (!cpu_online(policy->cpu))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: kernel/cpufreq.c:1308:
+^Imemcpy(&policy->cpuinfo, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: kernel/cpufreq.c:1309:
+^I       &cpufreq_driver->policy[policy->cpu].cpuinfo, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: kernel/cpufreq.c:1355:
+^I^Iif ((policy->policy != cpufreq_driver->policy[policy->cpu].policy) || $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'policy->policy != cpufreq_driver->policy[policy->cpu].policy'
#627: FILE: kernel/cpufreq.c:1355:
+		if ((policy->policy != cpufreq_driver->policy[policy->cpu].policy) || 
+		    ((policy->policy == CPUFREQ_POLICY_GOVERNOR) && (policy->governor != cpufreq_driver->policy[policy->cpu].governor))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'policy->policy == CPUFREQ_POLICY_GOVERNOR'
#627: FILE: kernel/cpufreq.c:1355:
+		if ((policy->policy != cpufreq_driver->policy[policy->cpu].policy) || 
+		    ((policy->policy == CPUFREQ_POLICY_GOVERNOR) && (policy->governor != cpufreq_driver->policy[policy->cpu].governor))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'policy->governor != cpufreq_driver->policy[policy->cpu].governor'
#627: FILE: kernel/cpufreq.c:1355:
+		if ((policy->policy != cpufreq_driver->policy[policy->cpu].policy) || 
+		    ((policy->policy == CPUFREQ_POLICY_GOVERNOR) && (policy->governor != cpufreq_driver->policy[policy->cpu].governor))) {

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#628: FILE: kernel/cpufreq.c:1356:
+		    ((policy->policy == CPUFREQ_POLICY_GOVERNOR) && (policy->governor != cpufreq_driver->policy[policy->cpu].governor))) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#630: FILE: kernel/cpufreq.c:1358:
+			struct cpufreq_governor *old_gov = cpufreq_driver->policy[policy->cpu].governor;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#663: FILE: kernel/cpufreq.c:1483:
+		memset(cpufreq_driver->policy, 0, NR_CPUS * sizeof(struct cpufreq_policy));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#710: FILE: kernel/cpufreq.c:1728:
+	for (i=0; (table[i].frequency != CPUFREQ_TABLE_END); i++) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#712: FILE: kernel/cpufreq.c:1730:
+		unsigned int freq = table[i].frequency;
+		if (freq == CPUFREQ_ENTRY_INVALID)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq < policy->min'
#714: FILE: kernel/cpufreq.c:1732:
+		if ((freq < policy->min) || (freq > policy->max))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq > policy->max'
#714: FILE: kernel/cpufreq.c:1732:
+		if ((freq < policy->min) || (freq > policy->max))

ERROR:SPACING: space required before the open parenthesis '('
#716: FILE: kernel/cpufreq.c:1734:
+		switch(relation) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#745: FILE: kernel/cpufreq.c:1763:
+	if (optimal.index > i) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#749: FILE: kernel/cpufreq.c:1767:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#751: FILE: kernel/cpufreq.c:1769:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395965.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 30 warnings, 25 checks, 649 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395965.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
