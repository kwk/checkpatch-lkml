WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#54: FILE: sound/sonicvibes.c:2514:
+	if ((ret=pci_enable_device(pcidev)))
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#54: FILE: sound/sonicvibes.c:2514:
+	if ((ret=pci_enable_device(pcidev)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#113: FILE: sound/sonicvibes.c:2627:
+	if ((ret=request_irq(s->irq,sv_interrupt,SA_SHIRQ,"S3 SonicVibes",s))) {
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: sound/sonicvibes.c:2627:
+	if ((ret=request_irq(s->irq,sv_interrupt,SA_SHIRQ,"S3 SonicVibes",s))) {
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: sound/sonicvibes.c:2627:
+	if ((ret=request_irq(s->irq,sv_interrupt,SA_SHIRQ,"S3 SonicVibes",s))) {
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: sound/sonicvibes.c:2627:
+	if ((ret=request_irq(s->irq,sv_interrupt,SA_SHIRQ,"S3 SonicVibes",s))) {
 	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: sound/sonicvibes.c:2627:
+	if ((ret=request_irq(s->irq,sv_interrupt,SA_SHIRQ,"S3 SonicVibes",s))) {
 	                                                                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#113: FILE: sound/sonicvibes.c:2627:
+	if ((ret=request_irq(s->irq,sv_interrupt,SA_SHIRQ,"S3 SonicVibes",s))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#121: FILE: sound/sonicvibes.c:2634:
+	if ((s->dev_audio = register_sound_dsp(&sv_audio_fops, -1)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#126: FILE: sound/sonicvibes.c:2638:
+	if ((s->dev_mixer = register_sound_mixer(&sv_mixer_fops, -1)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#131: FILE: sound/sonicvibes.c:2642:
+	if ((s->dev_midi = register_sound_midi(&sv_midi_fops, -1)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#136: FILE: sound/sonicvibes.c:2646:
+	if ((s->dev_dmfm = register_sound_special(&sv_dmfm_fops, 15 /* ?? */)) < 0) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#151: FILE: sound/sonicvibes.c:2698:
 static void __devinit sv_remove(struct pci_dev *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#157: FILE: sound/sonicvibes.c:2747:
+	printk(KERN_INFO "sv: version v0.30 time " __TIME__ " " __DATE__ "\n");

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#157: FILE: sound/sonicvibes.c:2747:
+	printk(KERN_INFO "sv: version v0.30 time " __TIME__ " " __DATE__ "\n");

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#157: FILE: sound/sonicvibes.c:2747:
+	printk(KERN_INFO "sv: version v0.30 time " __TIME__ " " __DATE__ "\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000534037.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 3 warnings, 0 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000534037.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
