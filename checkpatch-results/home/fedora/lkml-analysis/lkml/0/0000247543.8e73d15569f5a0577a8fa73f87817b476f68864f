WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#48: FILE: arch/m32r/kernel/ptrace.c:2:
+ * linux/arch/m32r/kernel/ptrace.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: arch/m32r/kernel/ptrace.c:48:
+        return (struct pt_regs *)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/m32r/kernel/ptrace.c:48:
+        return (struct pt_regs *)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: arch/m32r/kernel/ptrace.c:49:
+                ((unsigned long)task->thread_info + THREAD_SIZE$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/m32r/kernel/ptrace.c:49:
+                ((unsigned long)task->thread_info + THREAD_SIZE$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: arch/m32r/kernel/ptrace.c:50:
+                 - sizeof(struct pt_regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/m32r/kernel/ptrace.c:50:
+                 - sizeof(struct pt_regs));$

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#99: FILE: arch/m32r/kernel/ptrace.c:56:
+static inline unsigned long int

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: arch/m32r/kernel/ptrace.c:94:
+	struct user * dummy = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'off < 0'
#158: FILE: arch/m32r/kernel/ptrace.c:97:
+	if ((off & 3) || (off < 0) || (off > sizeof(struct user) - 3))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#164: FILE: arch/m32r/kernel/ptrace.c:103:
+		__asm__ __volatile__ (

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#165: FILE: arch/m32r/kernel/ptrace.c:104:
+			"mvfc	%0, cr5 \n\t"

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: arch/m32r/kernel/ptrace.c:105:
+^I ^I^I: "=r" (tmp)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: arch/m32r/kernel/ptrace.c:105:
+^I ^I^I: "=r" (tmp)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#171: FILE: arch/m32r/kernel/ptrace.c:110:
+			unsigned long psw;
+			psw = get_stack_long(tsk, PT_PSW);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: arch/m32r/kernel/ptrace.c:116:
+			unsigned long psw, bbpsw;
+			psw = get_stack_long(tsk, PT_PSW);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#187: FILE: arch/m32r/kernel/ptrace.c:126:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: arch/m32r/kernel/ptrace.c:127:
+^Idefault: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#199: FILE: arch/m32r/kernel/ptrace.c:138:
+			} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: arch/m32r/kernel/ptrace.c:156:
+	struct user * dummy = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: arch/m32r/kernel/ptrace.c:175:
+			unsigned long psw;
+			psw = get_stack_long(tsk, PT_PSW);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#244: FILE: arch/m32r/kernel/ptrace.c:183:
+		/* fall through */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#294: FILE: arch/m32r/kernel/ptrace.c:233:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: arch/m32r/kernel/ptrace.c:241:
+check_condition_src(unsigned long op, unsigned long regno1, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#432: FILE: arch/m32r/kernel/ptrace.c:624:
+	struct debug_trap *p = &child->thread.debug_trap;
+	p->nr_trap = 0;

CHECK:SPACING: No space is necessary after a cast
#596: FILE: arch/m32r/kernel/ptrace.c:654:
+			ret = put_user(tmp,(unsigned long __user *) data);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#596: FILE: arch/m32r/kernel/ptrace.c:654:
+			ret = put_user(tmp,(unsigned long __user *) data);
 			                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: arch/m32r/kernel/ptrace.c:663:
+^I^Iret = ptrace_read_user(child, addr, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#661: FILE: arch/m32r/kernel/ptrace.c:675:
+			if (request == PTRACE_POKETEXT) {
+				invalidate_cache();
 			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: arch/m32r/kernel/ptrace.c:694:
+^Icase PTRACE_CONT: $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#756: FILE: arch/m32r/kernel/ptrace.c:742:
+		if (access_process_vm(child, pc&~3, &insn, sizeof(insn), 0)
 		                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247543.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 14 warnings, 6 checks, 803 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247543.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
