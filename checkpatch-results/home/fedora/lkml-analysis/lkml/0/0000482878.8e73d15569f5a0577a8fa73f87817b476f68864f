WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#30: 
> > reason there is the serie thing in the kmaps). see the thread with Ingo
                        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#33: 
> > in short: the same task cannot get two entries from the same serie
                                                                 ^^^^^

WARNING:TYPO_SPELLING: 'taks' may be misspelled - perhaps 'task'?
#66: 
from the same mempool from the same taks or you can deadlock.
                                    ^^^^

WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#91: 
> serie, kmap_high accepts the existing page->virtual, no matter what
  ^^^^^

WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#92: 
> serie it belongs to.  So I think it is possible that though PAGETABLE2s
  ^^^^^

WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#102: 
serie) is on a certainly newly created kmap, so it cannot be the one
^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#146: 
> because the spinlock is held; but want to highlight that that one for

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: mm/vmscan.c:167:
+	pte_t * pte, * pte_orig;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#157: FILE: mm/vmscan.c:167:
+	pte_t * pte, * pte_orig;
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#166: FILE: mm/vmscan.c:178:
+	pte_orig = pte = pte_offset_atomic(dir, address);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000482878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 1 checks, 23 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000482878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
