CHECK:SPACING: No space is necessary after a cast
#37: FILE: fs/nfs/nfs3proc.c:698:
+	struct nfs_write_data *data = (struct nfs_write_data *) task->tk_calldata;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#55: FILE: fs/nfs/nfs3proc.c:716:
+	if (how & FLUSH_STABLE) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#60: FILE: fs/nfs/nfs3proc.c:721:
+	} else

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#136: FILE: fs/nfs/nfs3proc.c:814:
+	write_setup:	nfs3_proc_write_setup,
 	           ^

WARNING:INDENTED_LABEL: labels should not be indented
#136: FILE: fs/nfs/nfs3proc.c:814:
+	write_setup:	nfs3_proc_write_setup,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#137: FILE: fs/nfs/nfs3proc.c:815:
+	commit_setup:	nfs3_proc_commit_setup,
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#137: FILE: fs/nfs/nfs3proc.c:815:
+	commit_setup:	nfs3_proc_commit_setup,

CHECK:SPACING: No space is necessary after a cast
#148: FILE: fs/nfs/proc.c:518:
+	struct nfs_write_data *data = (struct nfs_write_data *) task->tk_calldata;

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: fs/nfs/proc.c:519:
+	struct nfs_write_data *data = (struct nfs_write_data *) task->tk_calldata;
+	nfs_writeback_done(task, data->u.v3.args.stable,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: fs/nfs/proc.c:564:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#204: FILE: fs/nfs/proc.c:592:
+	write_setup:	nfs_proc_write_setup,
 	           ^

WARNING:INDENTED_LABEL: labels should not be indented
#204: FILE: fs/nfs/proc.c:592:
+	write_setup:	nfs_proc_write_setup,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#205: FILE: fs/nfs/proc.c:593:
+	commit_setup:	nfs_proc_commit_setup,
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#205: FILE: fs/nfs/proc.c:593:
+	commit_setup:	nfs_proc_commit_setup,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#298: FILE: fs/nfs/write.c:859:
+	data->inode = inode = req->wb_inode;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#311: FILE: fs/nfs/write.c:864:
+	dprintk("NFS: %4d initiated write call (req %s/%Ld, %u bytes @ offset %Lu)\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#567: FILE: include/linux/nfs_fs.h:319:
+extern void nfs_writeback_done(struct rpc_task *task, int stable,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#569: FILE: include/linux/nfs_fs.h:321:
+extern void nfs_writedata_release(struct rpc_task *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#572: FILE: include/linux/nfs_fs.h:324:
+extern void nfs_commit_done(struct rpc_task *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_task *' should also have an identifier name
#572: FILE: include/linux/nfs_fs.h:324:
+extern void nfs_commit_done(struct rpc_task *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#610: FILE: include/linux/nfs_xdr.h:387:
+	void	(*write_setup)  (struct nfs_write_data *, unsigned int count, int how);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_write_data *' should also have an identifier name
#610: FILE: include/linux/nfs_xdr.h:387:
+	void	(*write_setup)  (struct nfs_write_data *, unsigned int count, int how);

WARNING:SPACING: Unnecessary space before function pointer arguments
#611: FILE: include/linux/nfs_xdr.h:388:
+	void	(*commit_setup) (struct nfs_write_data *, u64 start, u32 len, int how);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_write_data *' should also have an identifier name
#611: FILE: include/linux/nfs_xdr.h:388:
+	void	(*commit_setup) (struct nfs_write_data *, u64 start, u32 len, int how);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439362.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 12 warnings, 8 checks, 553 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439362.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
