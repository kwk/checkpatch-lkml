WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urpN -X dontdiff linux-2.6.0-test11/fs/relayfs/relay_locking.c linux-2.6.0-test11.cur/fs/relayfs/relay_locking.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#29: FILE: fs/relayfs/relay_locking.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#47: FILE: fs/relayfs/relay_locking.c:19:
+ *^I@finalizing: if true, don't start a new buffer $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#48: FILE: fs/relayfs/relay_locking.c:20:
+ *^I@resetting: if true, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: fs/relayfs/relay_locking.c:24:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: fs/relayfs/relay_locking.c:40:
+^I^I^Irchan->unused_bytes[rchan->buf_idx % rchan->n_bufs] = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: fs/relayfs/relay_locking.c:48:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#78: FILE: fs/relayfs/relay_locking.c:50:
+	if((write_buf(rchan) + rchan->buf_size >= chan_buf_end) || resetting)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#98: FILE: fs/relayfs/relay_locking.c:70:
+	if (resetting) {
[...]
+	} else if (!rchan->half_switch)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: fs/relayfs/relay_locking.c:80:
+^I$

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#110: FILE: fs/relayfs/relay_locking.c:82:
+		bytes_written = rchan->callbacks->buffer_start(rchan->id, cur_write_pos(rchan), rchan->buf_id, cur_time, cur_tsc, using_tsc(rchan));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: fs/relayfs/relay_locking.c:94:
+ *^I@interrupting: if this write is interrupting another, set to non-zero $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: fs/relayfs/relay_locking.c:98:
+ *^IThe err value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: fs/relayfs/relay_locking.c:127:
+^I^Iget_timestamp(&rchan->buf_start_time, $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#158: FILE: fs/relayfs/relay_locking.c:130:
+		bytes_written = rchan->callbacks->buffer_start(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: fs/relayfs/relay_locking.c:131:
+^I^I^Irchan->id, cur_write_pos(rchan), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: fs/relayfs/relay_locking.c:132:
+^I^I^Irchan->buf_id, rchan->buf_start_time, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: fs/relayfs/relay_locking.c:143:
+^I^Icur_write_pos(rchan) = in_progress_event_pos(rchan) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: fs/relayfs/relay_locking.c:144:
+^I^I^I+ in_progress_event_size(rchan) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: fs/relayfs/relay_locking.c:202:
+^I       u32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: fs/relayfs/relay_locking.c:203:
+^I       int deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: fs/relayfs/relay_locking.c:207:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: fs/relayfs/relay_locking.c:223:
+			u32 cur_bufno = cur_idx / rchan->buf_size;
+			from = rchan->buf + cur_bufno * rchan->buf_size;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: fs/relayfs/relay_locking.c:235:
+inline void $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#266: FILE: fs/relayfs/relay_locking.c:238:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: fs/relayfs/relay_locking.c:301:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: fs/relayfs/relay_locking.c:317:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: fs/relayfs/relay_locking.c:319:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: fs/relayfs/relay_locking.c:321:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#355: FILE: fs/relayfs/relay_locking.h:1:
+#ifndef _RELAY_LOCKING_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: fs/relayfs/relay_locking.h:6:
+^I^Iu32 slot_len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: fs/relayfs/relay_locking.h:12:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: fs/relayfs/relay_locking.h:15:
+^I       u32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: fs/relayfs/relay_locking.h:16:
+^I       int deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: fs/relayfs/relay_locking.h:19:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: fs/relayfs/relay_locking.h:22:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: fs/relayfs/relay_locking.h:25:
+extern u32 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: fs/relayfs/relay_locking.h:28:
+extern void $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#393: FILE: fs/relayfs/relay_lockless.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: fs/relayfs/relay_lockless.c:21:
+inline int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: fs/relayfs/relay_lockless.c:22:
+compare_and_store_volatile(volatile u32 *ptr, $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#414: FILE: fs/relayfs/relay_lockless.c:22:
+compare_and_store_volatile(volatile u32 *ptr, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: fs/relayfs/relay_lockless.c:40:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: fs/relayfs/relay_lockless.c:54:
+inline void $

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#455: FILE: fs/relayfs/relay_lockless.c:63:
+ *	atomic_sub_volatile - atomically substract val from the value at ptr.
   	                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: fs/relayfs/relay_lockless.c:67:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: fs/relayfs/relay_lockless.c:85:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: fs/relayfs/relay_lockless.c:88:
+^I^Iu32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: fs/relayfs/relay_lockless.c:89:
+^I^Iint deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: fs/relayfs/relay_lockless.c:93:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#495: FILE: fs/relayfs/relay_lockless.c:103:
+		u32 mask = offset_mask(rchan);
+		if (bulk_delivery(rchan)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: fs/relayfs/relay_lockless.c:113:
+ *^Iget_buffer_end - get the address of the end of buffer $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: fs/relayfs/relay_lockless.c:117:
+static inline char * $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#517: FILE: fs/relayfs/relay_lockless.c:125:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#529: FILE: fs/relayfs/relay_lockless.c:137:
+static inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#532: FILE: fs/relayfs/relay_lockless.c:140:
+^I^Iu32 size_lost, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: fs/relayfs/relay_lockless.c:142:
+^I^Iu32 *tsc, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#537: FILE: fs/relayfs/relay_lockless.c:145:
+	char* cur_write_pos;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#538: FILE: fs/relayfs/relay_lockless.c:146:
+	char* write_buf_end;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: fs/relayfs/relay_lockless.c:149:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: fs/relayfs/relay_lockless.c:153:
+^Ibytes_written = rchan->callbacks->buffer_end(rchan->id, cur_write_pos, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: fs/relayfs/relay_lockless.c:157:
+        bufno = RELAY_BUFNO_GET(end_idx, offset_bits(rchan));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: fs/relayfs/relay_lockless.c:157:
+        bufno = RELAY_BUFNO_GET(end_idx, offset_bits(rchan));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: fs/relayfs/relay_lockless.c:158:
+        atomic_add_volatile(&fill_count(rchan, bufno), size_lost);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: fs/relayfs/relay_lockless.c:158:
+        atomic_add_volatile(&fill_count(rchan, bufno), size_lost);$

CHECK:BRACES: braces {} should be used on all arms of this statement
#551: FILE: fs/relayfs/relay_lockless.c:159:
+	if (resetting) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#557: FILE: fs/relayfs/relay_lockless.c:165:
+	} else

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#570: FILE: fs/relayfs/relay_lockless.c:178:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: fs/relayfs/relay_lockless.c:187:
+^Ifinalize_buffer(rchan, idx(rchan) & idx_mask(rchan), size_lost, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: fs/relayfs/relay_lockless.c:200:
+ *^IThe return value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: fs/relayfs/relay_lockless.c:211:
+^I      u32 write_len, $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#612: FILE: fs/relayfs/relay_lockless.c:220:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#619: FILE: fs/relayfs/relay_lockless.c:227:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: fs/relayfs/relay_lockless.c:242:
+^I^Ifinalize_buffer(rchan, old_idx & idx_mask, size_lost, $

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#637: FILE: fs/relayfs/relay_lockless.c:245:
+		idx(rchan) = RELAY_BUF_OFFSET_CLEAR((old_idx & idx_mask), offset_mask(rchan)) + RELAY_BUF_SIZE(offset_bits) - 1;

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#669: FILE: fs/relayfs/relay_lockless.c:277:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: fs/relayfs/relay_lockless.c:283:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: fs/relayfs/relay_lockless.c:309:
+^Irchan->callbacks->buffer_start(rchan->id, cur_write_pos, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: fs/relayfs/relay_lockless.c:315:
+^I^Iatomic_set_volatile(&fill_count(rchan, new_buf_no), $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#733: FILE: fs/relayfs/relay_lockless.c:341:
+	unsigned long int flags;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#753: FILE: fs/relayfs/relay_lockless.c:361:
+		rchan->initialized = initializing = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset < slot_len'
#764: FILE: fs/relayfs/relay_lockless.c:372:
+		if ((offset < slot_len) && (offset > 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset > 0'
#764: FILE: fs/relayfs/relay_lockless.c:372:
+		if ((offset < slot_len) && (offset > 0)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#764: FILE: fs/relayfs/relay_lockless.c:372:
+		if ((offset < slot_len) && (offset > 0)) {
[...]
+		} else if (offset < slot_len) {
[...]
+		} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#765: FILE: fs/relayfs/relay_lockless.c:373:
+^I^I^Ireserved_idx = RELAY_BUF_OFFSET_CLEAR(new_idx $

CHECK:BRACES: Unbalanced braces around else statement
#772: FILE: fs/relayfs/relay_lockless.c:380:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: fs/relayfs/relay_lockless.c:388:
+^I^Icur_write_pos = rchan->buf $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#787: FILE: fs/relayfs/relay_lockless.c:395:
+^I^Irchan->callbacks->buffer_start(rchan->id, cur_write_pos, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: fs/relayfs/relay_lockless.c:422:
+ *^IThe err value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#823: FILE: fs/relayfs/relay_lockless.c:431:
+inline char * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#838: FILE: fs/relayfs/relay_lockless.c:446:
+^I^Ioffset = RELAY_BUF_OFFSET_GET(new_idx + rchan->end_reserve, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: fs/relayfs/relay_lockless.c:449:
+^I^I^Ireturn lockless_reserve_slow(rchan, slot_len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: fs/relayfs/relay_lockless.c:469:
+u32 $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#863: FILE: fs/relayfs/relay_lockless.c:471:
+lockless_get_offset(struct rchan *rchan,
+			u32 *max_offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#879: FILE: fs/relayfs/relay_lockless.c:487:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#881: FILE: fs/relayfs/relay_lockless.c:489:
+	/* Start first buffer at 0 - (end_reserve + 1) so that it
+	   gets initialized via buffer_start callback as well. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#881: FILE: fs/relayfs/relay_lockless.c:489:
+	   gets initialized via buffer_start callback as well. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#885: FILE: fs/relayfs/relay_lockless.c:493:
+^Iatomic_set(&fill_count(rchan, 0), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: fs/relayfs/relay_lockless.c:494:
+^I^I   (int)rchan->start_reserve + $

CHECK:BRACES: braces {} should be used on all arms of this statement
#911: FILE: fs/relayfs/relay_lockless.c:519:
+	if (compare_and_store_volatile(&idx(rchan), old_idx, 0)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#915: FILE: fs/relayfs/relay_lockless.c:523:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#919: FILE: fs/relayfs/relay_lockless.c:527:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#921: FILE: fs/relayfs/relay_lockless.c:529:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#923: FILE: fs/relayfs/relay_lockless.c:531:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#925: FILE: fs/relayfs/relay_lockless.c:533:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#927: FILE: fs/relayfs/relay_lockless.c:535:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#929: FILE: fs/relayfs/relay_lockless.c:537:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#935: FILE: fs/relayfs/relay_lockless.h:1:
+#ifndef _RELAY_LOCKLESS_H

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#943: FILE: fs/relayfs/relay_lockless.h:9:
+		 int * interrupting,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#944: FILE: fs/relayfs/relay_lockless.h:10:
+		 int * errcode);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: fs/relayfs/relay_lockless.h:12:
+extern void $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#948: FILE: fs/relayfs/relay_lockless.h:14:
+		char * from,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: fs/relayfs/relay_lockless.h:15:
+^I^Iu32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: fs/relayfs/relay_lockless.h:16:
+^I^Iint deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: fs/relayfs/relay_lockless.h:19:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#956: FILE: fs/relayfs/relay_lockless.h:22:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#959: FILE: fs/relayfs/relay_lockless.h:25:
+extern u32 $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#973: FILE: fs/relayfs/resize.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1005: FILE: fs/relayfs/resize.c:33:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page_array"
#1010: FILE: fs/relayfs/resize.c:38:
+	if (page_array == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1039: FILE: fs/relayfs/resize.c:67:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1057: FILE: fs/relayfs/resize.c:85:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1142: FILE: fs/relayfs/resize.c:170:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1145: FILE: fs/relayfs/resize.c:173:
+	if (rchan->resize_max && active_bufs == threshold) {
+		new_n_bufs = rchan->n_bufs * 2;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1152: FILE: fs/relayfs/resize.c:180:
+^I^I^I^I^I       rchan->buf_size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1174: FILE: fs/relayfs/resize.c:202:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1180: FILE: fs/relayfs/resize.c:208:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1201: FILE: fs/relayfs/resize.c:229:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1214: FILE: fs/relayfs/resize.c:242:
+^I^I^I^I^I       rchan->buf_size, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1234: FILE: fs/relayfs/resize.c:262:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1246: FILE: fs/relayfs/resize.c:274:
+	if (unlikely(rchan->expand_page_array))	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1246: FILE: fs/relayfs/resize.c:274:
+	if (unlikely(rchan->expand_page_array))	BUG();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1250: FILE: fs/relayfs/resize.c:278:
+	rchan->expand_page_array = alloc_page_array(new_pages_size,
+					    &rchan->expand_page_count, &err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan->expand_page_array"
#1251: FILE: fs/relayfs/resize.c:279:
+	if (rchan->expand_page_array == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: fs/relayfs/resize.c:283:
+^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1276: FILE: fs/relayfs/resize.c:304:
+	unsigned i;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1277: FILE: fs/relayfs/resize.c:305:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1279: FILE: fs/relayfs/resize.c:307:
+^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1299: FILE: fs/relayfs/resize.c:327:
+	unsigned slot = rchan->offset_change_count;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1300: FILE: fs/relayfs/resize.c:328:
+^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1320: FILE: fs/relayfs/resize.c:348:
+update_file_offset(struct rchan_reader *reader, unsigned change_idx)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'f_pos >= rchan->resize_offsets[change_idx].ge'
#1332: FILE: fs/relayfs/resize.c:360:
+	if ((f_pos >= rchan->resize_offsets[change_idx].ge) &&
+	    (f_pos <= rchan->resize_offsets[change_idx].le)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'f_pos <= rchan->resize_offsets[change_idx].le'
#1332: FILE: fs/relayfs/resize.c:360:
+	if ((f_pos >= rchan->resize_offsets[change_idx].ge) &&
+	    (f_pos <= rchan->resize_offsets[change_idx].le)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1355: FILE: fs/relayfs/resize.c:383:
+	unsigned i;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1356: FILE: fs/relayfs/resize.c:384:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1396: FILE: fs/relayfs/resize.c:424:
+	if (bufs_ready >= rchan->n_bufs) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1399: FILE: fs/relayfs/resize.c:427:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1411: FILE: fs/relayfs/resize.c:439:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1449: FILE: fs/relayfs/resize.c:477:
+^Iif (!rchan->resize_page_array || !rchan->shrink_page_array || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1452: FILE: fs/relayfs/resize.c:480:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1473: FILE: fs/relayfs/resize.c:501:
+static void $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1485: FILE: fs/relayfs/resize.c:513:
+		if (err) goto cleanup;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1488: FILE: fs/relayfs/resize.c:516:
+		BUG_ON(free_size <= 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1490: FILE: fs/relayfs/resize.c:518:
+		rchan->shrink_page_array = alloc_page_array(free_size,
+					    &rchan->shrink_page_count, &err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan->shrink_page_array"
#1491: FILE: fs/relayfs/resize.c:519:
+		if (rchan->shrink_page_array == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1500: FILE: fs/relayfs/resize.c:528:
+	rchan->resize_page_array = alloc_page_array(rchan->resize_alloc_size,
+					    &rchan->resize_page_count, &err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan->resize_page_array"
#1501: FILE: fs/relayfs/resize.c:529:
+	if (rchan->resize_page_array == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan->resize_buf"
#1515: FILE: fs/relayfs/resize.c:543:
+	if (rchan->resize_buf == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1517: FILE: fs/relayfs/resize.c:545:
+^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#1545: FILE: fs/relayfs/resize.c:573:
+	return;
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1560: FILE: fs/relayfs/resize.c:588:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1588: FILE: fs/relayfs/resize.c:616:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1591: FILE: fs/relayfs/resize.c:619:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1596: FILE: fs/relayfs/resize.c:624:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1615: FILE: fs/relayfs/resize.c:643:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1616: FILE: fs/relayfs/resize.c:644:
+	if (nbufs > rchan->n_bufs) {
[...]
+	} else if (nbufs < rchan->n_bufs) {
[...]
+	} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1638: FILE: fs/relayfs/resize.c:666:
+^I^I$

CHECK:BRACES: Unbalanced braces around else statement
#1644: FILE: fs/relayfs/resize.c:672:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1663: FILE: fs/relayfs/resize.c:691:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1666: FILE: fs/relayfs/resize.c:694:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1675: FILE: fs/relayfs/resize.c:703:
+	if (rchan->resizing) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1678: FILE: fs/relayfs/resize.c:706:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1689: FILE: fs/relayfs/resize.c:717:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1693: FILE: fs/relayfs/resize.c:721:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1694: FILE: fs/relayfs/resize.c:722:
+	if (async) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1697: FILE: fs/relayfs/resize.c:725:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1701: FILE: fs/relayfs/resize.c:729:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1726: FILE: fs/relayfs/resize.c:754:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1730: FILE: fs/relayfs/resize.c:758:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1734: FILE: fs/relayfs/resize.c:762:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1740: FILE: fs/relayfs/resize.c:768:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1774: FILE: fs/relayfs/resize.c:802:
+^I^I^I^Iatomic_set(&fill_count(rchan, i + newbufs), $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*free_buf)...) over kmalloc(sizeof(struct free_rchan_buf)...)
#1828: FILE: fs/relayfs/resize.c:856:
+	free_buf = kmalloc(sizeof(struct free_rchan_buf), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1829: FILE: fs/relayfs/resize.c:857:
+	if (!free_buf) {
+		return -ENOMEM;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1840: FILE: fs/relayfs/resize.c:868:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1866: FILE: fs/relayfs/resize.c:894:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan->resize_buf"
#1878: FILE: fs/relayfs/resize.c:906:
+	if (rchan->resize_buf == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1893: FILE: fs/relayfs/resize.c:921:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1913: FILE: fs/relayfs/resize.c:941:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1917: FILE: fs/relayfs/resize.c:945:
+	if (rchan == NULL)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1927: FILE: fs/relayfs/resize.c:955:
+EXPORT_SYMBOL(relay_realloc_buffer);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1928: FILE: fs/relayfs/resize.c:956:
+EXPORT_SYMBOL(relay_replace_buffer);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1934: FILE: fs/relayfs/resize.h:1:
+#ifndef _RELAY_RESIZE_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1937: FILE: fs/relayfs/resize.h:4:
+/* $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1944: FILE: fs/relayfs/resize.h:11:
+#define FIX_SIZE(x) (((x) - 1) & PAGE_MASK) + PAGE_SIZE

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1950: FILE: fs/relayfs/resize.h:17:
+#define RESIZE_THRESHOLD	3 / 4

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1956: FILE: fs/relayfs/resize.h:23:
+struct free_rchan_buf
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000321775.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 117 errors, 34 warnings, 46 checks, 1934 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000321775.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
