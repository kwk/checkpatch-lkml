WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#114: FILE: fs/file_table.c:110:
+	error = security_file_alloc(filp);
 	                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#117: FILE: fs/file_table.c:113:
+			error = filp->f_op->open(dentry->d_inode, filp);
 			                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#119: FILE: fs/file_table.c:115:
+				security_file_free(filp);
 				                   ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#126: FILE: fs/file_table.c:122:
+	struct inode * inode = file->f_dentry->d_inode;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: fs/super.c:624:
+ ^Ierror = security_sb_kern_mount(sb);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: fs/super.c:624:
+ ^Ierror = security_sb_kern_mount(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: fs/super.c:624:
+ ^Ierror = security_sb_kern_mount(sb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: fs/super.c:625:
+ ^Iif (error) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: fs/super.c:625:
+ ^Iif (error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: fs/super.c:625:
+ ^Iif (error) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: fs/super.c:626:
+ ^I^Iup_write(&sb->s_umount);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: fs/super.c:626:
+ ^I^Iup_write(&sb->s_umount);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: fs/super.c:626:
+ ^I^Iup_write(&sb->s_umount);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: fs/super.c:627:
+ ^I^Ideactivate_super(sb);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: fs/super.c:627:
+ ^I^Ideactivate_super(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: fs/super.c:627:
+ ^I^Ideactivate_super(sb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: fs/super.c:628:
+ ^I^Isb = ERR_PTR(error);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: fs/super.c:628:
+ ^I^Isb = ERR_PTR(error);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: fs/super.c:628:
+ ^I^Isb = ERR_PTR(error);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: fs/super.c:629:
+ ^I^Igoto out_mnt;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: fs/super.c:629:
+ ^I^Igoto out_mnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: fs/super.c:629:
+ ^I^Igoto out_mnt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: fs/super.c:630:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: fs/super.c:630:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: fs/super.c:630:
+ ^I}$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#209: FILE: fs/nfsd/vfs.c:494:
+	release_private_file(filp);
 	                     ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: include/linux/fs.h:496:
+extern void release_private_file(struct file *file);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: Unnecessary space before function pointer arguments
#242: FILE: include/linux/security.h:813:
+	int (*sb_kern_mount) (struct super_block *sb);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: include/linux/security.h:952:
+	void (*d_instantiate) (struct dentry * dentry, struct inode * inode);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: include/linux/security.h:952:
+	void (*d_instantiate) (struct dentry * dentry, struct inode * inode);

WARNING:SPACING: Unnecessary space before function pointer arguments
#259: FILE: include/linux/security.h:952:
+	void (*d_instantiate) (struct dentry * dentry, struct inode * inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: include/linux/security.h:1035:
+static inline int security_sb_kern_mount (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#269: FILE: include/linux/security.h:1037:
+	return security_ops->sb_kern_mount (sb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: include/linux/security.h:1543:
+static inline void security_d_instantiate (struct dentry *dentry, struct inode *inode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: include/linux/security.h:1545:
+	security_ops->d_instantiate (dentry, inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#312: FILE: include/linux/security.h:1643:
+static inline int security_sb_kern_mount (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#336: FILE: include/linux/security.h:2109:
+static inline void security_d_instantiate (struct dentry *dentry, struct inode *inode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: security/dummy.c:123:
+static int dummy_sb_kern_mount (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#383: FILE: security/dummy.c:610:
+static void dummy_d_instantiate (struct dentry *dentry, struct inode *inode)

WARNING:RETURN_VOID: void function return statements are not generally useful
#386: FILE: security/dummy.c:613:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#388: FILE: security/dummy.c:615:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000399765.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 29 warnings, 2 checks, 287 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000399765.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
