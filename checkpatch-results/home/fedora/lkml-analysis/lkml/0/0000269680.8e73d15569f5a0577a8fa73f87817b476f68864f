WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
flagged link_path_walk isw about to return. Fill in intents with necessary data

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#60: FILE: fs/namei.c:781:
+			err = inode->i_op->endparentlookup(nd);
 			                                   ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#73: FILE: fs/namei.c:1562:
+	intent_init(&nd.intent.open, IT_MKNOD);
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#74: FILE: fs/namei.c:1563:
+	nd.intent.open.create_mode = mode;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#75: FILE: fs/namei.c:1564:
+	nd.intent.open.create.dev = dev;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#77: FILE: fs/namei.c:1566:
+	error = path_lookup_it(tmp, LOOKUP_PARENT, &nd);
 	                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#80: FILE: fs/namei.c:1569:
+	if (nd.intent.open.flags & IT_STATUS_RAW)
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#99: FILE: fs/namei.c:1641:
+		intent_init(&nd.intent.open, IT_MKDIR);
 		             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#100: FILE: fs/namei.c:1642:
+		nd.intent.open.create_mode = mode;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#101: FILE: fs/namei.c:1643:
+		error = path_lookup_it(tmp, LOOKUP_PARENT, &nd);
 		                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#104: FILE: fs/namei.c:1646:
+		if (nd.intent.open.flags & IT_STATUS_RAW)
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#122: FILE: fs/namei.c:1743:
+	intent_init(&nd.intent.open, IT_RMDIR);
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#123: FILE: fs/namei.c:1744:
+	error = path_lookup_it(name, LOOKUP_PARENT, &nd);
 	                                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#126: FILE: fs/namei.c:1747:
+	if (nd.intent.open.flags & IT_STATUS_RAW)
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#136: FILE: fs/namei.c:1824:
+	intent_init(&nd.intent.open, IT_UNLINK);
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#137: FILE: fs/namei.c:1825:
+	error = path_lookup_it(name, LOOKUP_PARENT, &nd);
 	                                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#140: FILE: fs/namei.c:1828:
+	if (nd.intent.open.flags & IT_STATUS_RAW)
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#151: FILE: fs/namei.c:1902:
+		intent_init(&nd.intent.open, IT_SYMLINK);
 		             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#152: FILE: fs/namei.c:1903:
+		nd.intent.open.create.link = from;
 		^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#153: FILE: fs/namei.c:1904:
+		error = path_lookup_it(to, LOOKUP_PARENT, &nd);
 		                                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#156: FILE: fs/namei.c:1907:
+		if (nd.intent.open.flags & IT_STATUS_RAW)
 		    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#174: FILE: fs/namei.c:1988:
+	intent_init(&nd.intent.open, IT_LINK);
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#175: FILE: fs/namei.c:1989:
+	nd.intent.open.create.source_nd = &old_nd;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#176: FILE: fs/namei.c:1990:
+	error = path_lookup_it(to, LOOKUP_PARENT, &nd);
 	                                           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#179: FILE: fs/namei.c:1993:
+	if (nd.intent.open.flags & IT_STATUS_RAW)
 	    ^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#194: FILE: fs/namei.c:2180:
+	if (newnd.intent.open.flags & IT_STATUS_RAW) {
+		goto exit2;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#208: FILE: include/linux/namei.h:18:
+#define IT_RMDIR	(1<<8)
                 	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#208: FILE: include/linux/namei.h:18:
+#define IT_RMDIR	(1<<8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#209: FILE: include/linux/namei.h:19:
+#define IT_LINK		(1<<9)
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#209: FILE: include/linux/namei.h:19:
+#define IT_LINK		(1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#210: FILE: include/linux/namei.h:20:
+#define IT_RENAME	(1<<10)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#210: FILE: include/linux/namei.h:20:
+#define IT_RENAME	(1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#211: FILE: include/linux/namei.h:21:
+#define IT_MKDIR	(1<<11)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#211: FILE: include/linux/namei.h:21:
+#define IT_MKDIR	(1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#212: FILE: include/linux/namei.h:22:
+#define IT_MKNOD	(1<<12)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#212: FILE: include/linux/namei.h:22:
+#define IT_MKNOD	(1<<12)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#213: FILE: include/linux/namei.h:23:
+#define IT_SYMLINK	(1<<13)
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#213: FILE: include/linux/namei.h:23:
+#define IT_SYMLINK	(1<<13)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#217: FILE: include/linux/namei.h:26:
+#define IT_STATUS_RAW (1<<10)  /* Setting this in it_flags on exit from lookup
                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#217: FILE: include/linux/namei.h:26:
+#define IT_STATUS_RAW (1<<10)  /* Setting this in it_flags on exit from lookup

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: include/linux/namei.h:27:
+                                  means everything was done already and return$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#218: FILE: include/linux/namei.h:27:
+#define IT_STATUS_RAW (1<<10)  /* Setting this in it_flags on exit from lookup
+                                  means everything was done already and return

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: include/linux/namei.h:28:
+                                  value from lookup is in fact status of$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: include/linux/namei.h:29:
+                                  already performed operation */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#220: FILE: include/linux/namei.h:29:
+                                  already performed operation */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#229: FILE: include/linux/namei.h:38:
+		unsigned	dev;	/* For mknod */

WARNING:SPACING: Unnecessary space before function pointer arguments
#244: FILE: include/linux/fs.h:917:
+	int (*endparentlookup) (struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#244: FILE: include/linux/fs.h:917:
+	int (*endparentlookup) (struct nameidata *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 31 warnings, 14 checks, 187 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
