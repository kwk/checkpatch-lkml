WARNING:TYPO_SPELLING: 'litte' may be misspelled - perhaps 'little'?
#54: 
Investigated a litte bit in the kernel I detected there is a
               ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
Therefor I programed analog to sys_old_getrlimit the function sys_old_setrlimit

WARNING:TYPO_SPELLING: 'programed' may be misspelled - perhaps 'programmed'?
#62: 
Therefor I programed analog to sys_old_getrlimit the function sys_old_setrlimit
           ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: kernel/sys.c:1144:
+        struct rlimit new_rlim, *old_rlim;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: kernel/sys.c:1144:
+        struct rlimit new_rlim, *old_rlim;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: kernel/sys.c:1146:
+        if (resource >= RLIM_NLIMITS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/sys.c:1146:
+        if (resource >= RLIM_NLIMITS)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: kernel/sys.c:1147:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: kernel/sys.c:1147:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: kernel/sys.c:1148:
+        if(copy_from_user(&new_rlim, rlim, sizeof(*rlim)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/sys.c:1148:
+        if(copy_from_user(&new_rlim, rlim, sizeof(*rlim)))$

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: kernel/sys.c:1148:
+        if(copy_from_user(&new_rlim, rlim, sizeof(*rlim)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: kernel/sys.c:1149:
+                return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: kernel/sys.c:1149:
+                return -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: kernel/sys.c:1150:
+        old_rlim = current->rlim + resource;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: kernel/sys.c:1150:
+        old_rlim = current->rlim + resource;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: kernel/sys.c:1151:
+        if (((new_rlim.rlim_cur > old_rlim->rlim_max) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/sys.c:1151:
+        if (((new_rlim.rlim_cur > old_rlim->rlim_max) ||$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_rlim.rlim_cur > old_rlim->rlim_max'
#179: FILE: kernel/sys.c:1151:
+        if (((new_rlim.rlim_cur > old_rlim->rlim_max) ||
+             (new_rlim.rlim_max > old_rlim->rlim_max)) &&
+            !capable(CAP_SYS_RESOURCE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_rlim.rlim_max > old_rlim->rlim_max'
#179: FILE: kernel/sys.c:1151:
+        if (((new_rlim.rlim_cur > old_rlim->rlim_max) ||
+             (new_rlim.rlim_max > old_rlim->rlim_max)) &&
+            !capable(CAP_SYS_RESOURCE))

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: kernel/sys.c:1152:
+             (new_rlim.rlim_max > old_rlim->rlim_max)) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/sys.c:1152:
+             (new_rlim.rlim_max > old_rlim->rlim_max)) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: kernel/sys.c:1153:
+            !capable(CAP_SYS_RESOURCE))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: kernel/sys.c:1153:
+            !capable(CAP_SYS_RESOURCE))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: kernel/sys.c:1154:
+                return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: kernel/sys.c:1154:
+                return -EPERM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: kernel/sys.c:1155:
+        if (resource == RLIMIT_NOFILE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: kernel/sys.c:1155:
+        if (resource == RLIMIT_NOFILE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: kernel/sys.c:1156:
+                if (new_rlim.rlim_cur > NR_OPEN || new_rlim.rlim_max > NR_OPEN)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: kernel/sys.c:1156:
+                if (new_rlim.rlim_cur > NR_OPEN || new_rlim.rlim_max > NR_OPEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: kernel/sys.c:1157:
+                        return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: kernel/sys.c:1157:
+                        return -EPERM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: kernel/sys.c:1158:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: kernel/sys.c:1158:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: kernel/sys.c:1163:
+        *old_rlim = new_rlim;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: kernel/sys.c:1163:
+        *old_rlim = new_rlim;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: kernel/sys.c:1164:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: kernel/sys.c:1164:
+        return 0;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000501241.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 19 warnings, 2 checks, 95 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000501241.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
