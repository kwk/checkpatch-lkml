WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -urN linux-2.5.41/Documentation/s390/3270.ChangeLog linux-2.5.41-s390/Documentation/s390/3270.ChangeLog

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#99: FILE: drivers/s390/char/tuball.c:512:
+			if (tubp->tty_input) {
+				kfree(tubp->tty_input);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#119: FILE: drivers/s390/char/tubfs.c:243:
+		for (ip = tubp->wbuf; ip < tubp->wbuf+33; ip++) {
 		                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#145: FILE: drivers/s390/char/tubfs.c:376:
+	if (len == 0 || len > 65535) {
+		return -EINVAL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#155: FILE: drivers/s390/char/tubfs.c:383:
+	ip = idalp = kmalloc(33*sizeof(addr_t), GFP_ATOMIC|GFP_DMA);
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#155: FILE: drivers/s390/char/tubfs.c:383:
+	ip = idalp = kmalloc(33*sizeof(addr_t), GFP_ATOMIC|GFP_DMA);
 	                                                  ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#155: FILE: drivers/s390/char/tubfs.c:383:
+	ip = idalp = kmalloc(33*sizeof(addr_t), GFP_ATOMIC|GFP_DMA);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!idalp"
#156: FILE: drivers/s390/char/tubfs.c:384:
+	if (idalp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SIZEOF_PARENTHESIS: sizeof *idalp should be sizeof(*idalp)
#158: FILE: drivers/s390/char/tubfs.c:386:
+	memset(idalp, 0, 33 * sizeof *idalp);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#162: FILE: drivers/s390/char/tubfs.c:390:
+		size = count == len? piece: 0x800;
 		                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#162: FILE: drivers/s390/char/tubfs.c:390:
+		size = count == len? piece: 0x800;
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#163: FILE: drivers/s390/char/tubfs.c:391:
+		if ((kp = kmalloc(size, GFP_KERNEL|GFP_DMA)) == NULL) {
 		                                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#163: FILE: drivers/s390/char/tubfs.c:391:
+		if ((kp = kmalloc(size, GFP_KERNEL|GFP_DMA)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#173: FILE: drivers/s390/char/tubfs.c:399:
+	if ((rc = fs3270_wait(tubp, &flags)) != 0) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#227: FILE: drivers/s390/char/tubfs.c:437:
+	for (ip = idalp; ip < idalp+33; ip++) {
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#257: FILE: drivers/s390/char/tubfs.c:469:
+	ip = idalp = kmalloc(33*sizeof(addr_t), GFP_ATOMIC|GFP_DMA);
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#257: FILE: drivers/s390/char/tubfs.c:469:
+	ip = idalp = kmalloc(33*sizeof(addr_t), GFP_ATOMIC|GFP_DMA);
 	                                                  ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#257: FILE: drivers/s390/char/tubfs.c:469:
+	ip = idalp = kmalloc(33*sizeof(addr_t), GFP_ATOMIC|GFP_DMA);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!idalp"
#258: FILE: drivers/s390/char/tubfs.c:470:
+	if (idalp == NULL)

WARNING:SIZEOF_PARENTHESIS: sizeof *idalp should be sizeof(*idalp)
#260: FILE: drivers/s390/char/tubfs.c:472:
+	memset(idalp, 0, 33 * sizeof *idalp);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#266: FILE: drivers/s390/char/tubfs.c:478:
+		size = count == len? piece: 0x800;
 		                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#266: FILE: drivers/s390/char/tubfs.c:478:
+		size = count == len? piece: 0x800;
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#267: FILE: drivers/s390/char/tubfs.c:479:
+		if ((kb = kmalloc(size, GFP_KERNEL|GFP_DMA)) == NULL) {
 		                                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#267: FILE: drivers/s390/char/tubfs.c:479:
+		if ((kb = kmalloc(size, GFP_KERNEL|GFP_DMA)) == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#304: FILE: drivers/s390/char/tubfs.c:511:
+	for (ip = idalp; ip < idalp+33; ip++) {
 	                           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tubp->tty_input"
#375: FILE: drivers/s390/char/tubtty.c:221:
+	if (tubp->tty_input == NULL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#376: FILE: drivers/s390/char/tubtty.c:222:
+		tubp->tty_input = kmalloc(GEOM_INPLEN, GFP_KERNEL|GFP_DMA);
 		                                                 ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tubp->tty_input"
#385: FILE: drivers/s390/char/tubtty.c:806:
+	if (tubp->tty_input == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#396: FILE: drivers/s390/char/tubtty.c:825:
+	if ((in = tubp->tty_input) == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#443: FILE: drivers/s390/char/tubttybld.c:64:
+			printk(KERN_WARNING "tty3270_update_log_area esca "

WARNING:SPLIT_STRING: quoted string split across lines
#444: FILE: drivers/s390/char/tubttybld.c:65:
+			printk(KERN_WARNING "tty3270_update_log_area esca "
+			"character surprising:  %.2x\n", tubp->tty_esca[0]);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#487: FILE: drivers/s390/char/tubttybld.c:93:
+			*(*cpp)++ = tub_ascebc[(int)(c < ' '? ' ': c)];
 			                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#487: FILE: drivers/s390/char/tubttybld.c:93:
+			*(*cpp)++ = tub_ascebc[(int)(c < ' '? ' ': c)];
 			                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#564: FILE: drivers/s390/char/tubttybld.c:150:
+	char sabuf[NUMQUANT*3], *sap = sabuf, *cp;
 	                   ^

WARNING:SIZEOF_PARENTHESIS: sizeof tubp->tty_esca should be sizeof(tubp->tty_esca)
#577: FILE: drivers/s390/char/tubttybld.c:161:
+	while (tubp->tty_escx < sizeof tubp->tty_esca) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#578: FILE: drivers/s390/char/tubttybld.c:162:
+		if ((c = tty3270_next_char(tubp)) == -1)

ERROR:SPACING: space required before the open parenthesis '('
#581: FILE: drivers/s390/char/tubttybld.c:165:
+			switch(c) {

WARNING:SIZEOF_PARENTHESIS: sizeof tubp->tty_esca should be sizeof(tubp->tty_esca)
#604: FILE: drivers/s390/char/tubttybld.c:185:
+	if (tubp->tty_escx == sizeof tubp->tty_esca)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#696: FILE: drivers/s390/char/tubttybld.c:296:
+		if (quant[0]) quant[0]--;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#697: FILE: drivers/s390/char/tubttybld.c:297:
+		if (quant[1]) quant[1]--;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#702: FILE: drivers/s390/char/tubttybld.c:301:
+		if (quant[i] == 0) quant[i] = 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#707: FILE: drivers/s390/char/tubttybld.c:305:
+		if (quant[i] == 0) quant[i] = 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#711: FILE: drivers/s390/char/tubttybld.c:309:
+		if (quant[i] == 0) quant[i] = 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#731: FILE: drivers/s390/char/tubttybld.c:315:
+		if (quant[i] == 0) quant[i] = 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#737: FILE: drivers/s390/char/tubttybld.c:320:
+		if (quant[0]) quant[0]--;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#749: FILE: drivers/s390/char/tubttybld.c:332:
+		if (start <= 0) start = 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#750: FILE: drivers/s390/char/tubttybld.c:333:
+		if (start > GEOM_ROWS - 2) start = GEOM_ROWS - 2;

ERROR:SPACING: spaces required around that '?:' (ctx:VxW)
#758: FILE: drivers/s390/char/tubttybld.c:341:
+		end = start + (quant[0]?: 1);
 		                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#790: FILE: drivers/s390/char/tubttybld.c:368:
+		} else while (start++ < end) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#790: FILE: drivers/s390/char/tubttybld.c:368:
+		} else while (start++ < end) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 9 warnings, 17 checks, 784 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
