WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#35: 
Signed-Off-By: Alasdair G Kergon <agk@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: drivers/md/dm-round-robin.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#68: FILE: drivers/md/dm-round-robin.c:19:
+ *---------------------------------------------------------------*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#72: FILE: drivers/md/dm-round-robin.c:23:
+	unsigned repeat_count;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: drivers/md/dm-round-robin.c:30:
+	list_for_each_entry_safe (pi, next, paths, list) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#87: FILE: drivers/md/dm-round-robin.c:38:
+ *---------------------------------------------------------------*/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#108: FILE: drivers/md/dm-round-robin.c:59:
+static int rr_ctr(struct path_selector *ps, unsigned argc, char **argv)

CHECK:SPACING: No space is necessary after a cast
#122: FILE: drivers/md/dm-round-robin.c:73:
+	struct selector *s = (struct selector *) ps->context;

CHECK:BRACES: braces {} should be used on all arms of this statement
#136: FILE: drivers/md/dm-round-robin.c:87:
+	if (!path)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#138: FILE: drivers/md/dm-round-robin.c:89:
+	else {

ERROR:SPACING: space required before the open parenthesis '('
#139: FILE: drivers/md/dm-round-robin.c:90:
+		switch(type) {

CHECK:SPACING: No space is necessary after a cast
#159: FILE: drivers/md/dm-round-robin.c:110:
+	struct selector *s = (struct selector *) ps->context;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#161: FILE: drivers/md/dm-round-robin.c:112:
+	unsigned repeat_count = RR_MIN_IO;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'argc == 1'
#169: FILE: drivers/md/dm-round-robin.c:120:
+	if ((argc == 1) && (sscanf(argv[0], "%u", &repeat_count) != 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#169: FILE: drivers/md/dm-round-robin.c:120:
+	if ((argc == 1) && (sscanf(argv[0], "%u", &repeat_count) != 1)) {
+		*error = "round-robin ps: invalid repeat count";
+		return -EINVAL;
+	} 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/md/dm-round-robin.c:123:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#193: FILE: drivers/md/dm-round-robin.c:144:
+	struct selector *s = (struct selector *) ps->context;

CHECK:SPACING: No space is necessary after a cast
#201: FILE: drivers/md/dm-round-robin.c:152:
+	struct selector *s = (struct selector *) ps->context;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#210: FILE: drivers/md/dm-round-robin.c:161:
+				   unsigned *repeat_count)

CHECK:SPACING: No space is necessary after a cast
#212: FILE: drivers/md/dm-round-robin.c:163:
+	struct selector *s = (struct selector *) ps->context;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207548.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 10 warnings, 8 checks, 222 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207548.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
