WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urN linux-2.5.40/include/asm-s390/hardirq.h linux-2.5.40-s390/include/asm-s390/hardirq.h

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#78: FILE: include/asm-s390/hardirq.h:53:
+#define __MASK(x)	((1UL << (x))-1)
                  	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#88: FILE: include/asm-s390/hardirq.h:63:
+#define PREEMPT_OFFSET	(1UL << PREEMPT_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#89: FILE: include/asm-s390/hardirq.h:64:
+#define SOFTIRQ_OFFSET	(1UL << SOFTIRQ_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#90: FILE: include/asm-s390/hardirq.h:65:
+#define HARDIRQ_OFFSET	(1UL << HARDIRQ_SHIFT)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: include/asm-s390/hardirq.h:81:
+extern void do_call_softirq(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#153: FILE: include/asm-s390/hardirq.h:83:
+#define in_atomic()	(preempt_count() != 0)

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: include/asm-s390/hardirq.h:97:
+  extern void synchronize_irq(unsigned int irq);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: include/asm-s390/hardirq.h:97:
+  extern void synchronize_irq(unsigned int irq);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: include/asm-s390/hardirq.h:100:
+extern void show_stack(unsigned long * esp);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: include/asm-s390/hardirq.h:100:
+extern void show_stack(unsigned long * esp);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#249: FILE: include/asm-s390/kmap_types.h:1:
+#ifdef __KERNEL__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#328: FILE: include/asm-s390/rwsem.h:51:
+extern struct rw_semaphore *rwsem_down_read_failed(struct rw_semaphore *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#328: FILE: include/asm-s390/rwsem.h:51:
+extern struct rw_semaphore *rwsem_down_read_failed(struct rw_semaphore *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/asm-s390/rwsem.h:52:
+extern struct rw_semaphore *rwsem_down_write_failed(struct rw_semaphore *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#329: FILE: include/asm-s390/rwsem.h:52:
+extern struct rw_semaphore *rwsem_down_write_failed(struct rw_semaphore *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#331: FILE: include/asm-s390/rwsem.h:54:
+extern struct rw_semaphore *rwsem_downgrade_wake(struct rw_semaphore *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#331: FILE: include/asm-s390/rwsem.h:54:
+extern struct rw_semaphore *rwsem_downgrade_wake(struct rw_semaphore *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#332: FILE: include/asm-s390/rwsem.h:55:
+extern struct rw_semaphore *rwsem_downgrade_write(struct rw_semaphore *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#332: FILE: include/asm-s390/rwsem.h:55:
+extern struct rw_semaphore *rwsem_downgrade_write(struct rw_semaphore *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#346: FILE: include/asm-s390/rwsem.h:116:
+	__asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: include/asm-s390/rwsem.h:124:
+                : "=&d" (old), "=&d" (new)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: include/asm-s390/rwsem.h:124:
+                : "=&d" (old), "=&d" (new)$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#356: FILE: include/asm-s390/rwsem.h:126:
+		: "cc", "memory" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#374: FILE: include/asm-s390/rwsem.h:158:
+	__asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: include/asm-s390/rwsem.h:165:
+                : "=&d" (old)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: include/asm-s390/rwsem.h:165:
+                : "=&d" (old)$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#383: FILE: include/asm-s390/rwsem.h:167:
+		: "cc", "memory" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#402: FILE: include/asm-s390/rwsem.h:222:
+	__asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: include/asm-s390/rwsem.h:228:
+                : "=&d" (old), "=&d" (new)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: include/asm-s390/rwsem.h:228:
+                : "=&d" (old), "=&d" (new)$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#410: FILE: include/asm-s390/rwsem.h:230:
+		: "cc", "memory" );

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#444: FILE: include/asm-s390/smp.h:50:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#445: FILE: include/asm-s390/smp.h:51:
+#define cpu_possible(cpu) (cpu_possible_map & (1<<(cpu)))
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#538: FILE: include/asm-s390/system.h:112:
+#define cmpxchg(ptr,o,n)\
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#538: FILE: include/asm-s390/system.h:112:
+#define cmpxchg(ptr,o,n)\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#538: FILE: include/asm-s390/system.h:112:
+#define cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#539: FILE: include/asm-s390/system.h:113:
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#540: FILE: include/asm-s390/system.h:114:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#543: FILE: include/asm-s390/system.h:117:
+__cmpxchg(volatile void *ptr, unsigned long old, unsigned long new, int size)

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: include/asm-s390/system.h:122:
+        switch (size) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: include/asm-s390/system.h:122:
+        switch (size) {$

CHECK:SPACING: No space is necessary after a cast
#550: FILE: include/asm-s390/system.h:124:
+		addr = (unsigned long) ptr;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#553: FILE: include/asm-s390/system.h:127:
+		asm volatile(

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: include/asm-s390/system.h:130:
+                        "    lr  %1,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: include/asm-s390/system.h:130:
+                        "    lr  %1,%0\n"$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#568: FILE: include/asm-s390/system.h:142:
+			: "memory", "cc" );

CHECK:SPACING: No space is necessary after a cast
#571: FILE: include/asm-s390/system.h:145:
+		addr = (unsigned long) ptr;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#574: FILE: include/asm-s390/system.h:148:
+		asm volatile(

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: include/asm-s390/system.h:151:
+                        "    lr  %1,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: include/asm-s390/system.h:151:
+                        "    lr  %1,%0\n"$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#589: FILE: include/asm-s390/system.h:163:
+			: "memory", "cc" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#592: FILE: include/asm-s390/system.h:166:
+		asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#595: FILE: include/asm-s390/system.h:169:
+			: "memory", "cc" );

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: include/asm-s390/system.h:171:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: include/asm-s390/system.h:171:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: include/asm-s390/system.h:172:
+        return old;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: include/asm-s390/system.h:172:
+        return old;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: include/asm-s390/system.h:224:
+        !((flags >> 24) & 3);^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: include/asm-s390/system.h:224:
+        !((flags >> 24) & 3);^I^I\$

CHECK:SPACING: No space is necessary after a cast
#677: FILE: include/asm-s390x/bitops.h:818:
+	__w = generic_hweight32((unsigned int) __x);		\

CHECK:SPACING: No space is necessary after a cast
#678: FILE: include/asm-s390x/bitops.h:819:
+	__w += generic_hweight32((unsigned int) (__x>>32));	\

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#678: FILE: include/asm-s390x/bitops.h:819:
+	__w += generic_hweight32((unsigned int) (__x>>32));	\
 	                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#728: FILE: include/asm-s390x/hardirq.h:54:
+#define __MASK(x)	((1UL << (x))-1)
                  	             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#738: FILE: include/asm-s390x/hardirq.h:64:
+#define PREEMPT_OFFSET	(1UL << PREEMPT_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#739: FILE: include/asm-s390x/hardirq.h:65:
+#define SOFTIRQ_OFFSET	(1UL << SOFTIRQ_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#740: FILE: include/asm-s390x/hardirq.h:66:
+#define HARDIRQ_OFFSET	(1UL << HARDIRQ_SHIFT)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#797: FILE: include/asm-s390x/hardirq.h:82:
+extern void do_call_softirq(void);

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#800: FILE: include/asm-s390x/hardirq.h:84:
+#define in_atomic()	(preempt_count() != 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: include/asm-s390x/hardirq.h:98:
+  extern void synchronize_irq(unsigned int irq);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#815: FILE: include/asm-s390x/hardirq.h:98:
+  extern void synchronize_irq(unsigned int irq);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#818: FILE: include/asm-s390x/hardirq.h:101:
+extern void show_stack(unsigned long * esp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#818: FILE: include/asm-s390x/hardirq.h:101:
+extern void show_stack(unsigned long * esp);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#896: FILE: include/asm-s390x/kmap_types.h:1:
+#ifdef __KERNEL__

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#980: FILE: include/asm-s390x/rwsem.h:51:
+extern struct rw_semaphore *rwsem_down_read_failed(struct rw_semaphore *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#980: FILE: include/asm-s390x/rwsem.h:51:
+extern struct rw_semaphore *rwsem_down_read_failed(struct rw_semaphore *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#981: FILE: include/asm-s390x/rwsem.h:52:
+extern struct rw_semaphore *rwsem_down_write_failed(struct rw_semaphore *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#981: FILE: include/asm-s390x/rwsem.h:52:
+extern struct rw_semaphore *rwsem_down_write_failed(struct rw_semaphore *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#983: FILE: include/asm-s390x/rwsem.h:54:
+extern struct rw_semaphore *rwsem_downgrade_wake(struct rw_semaphore *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#983: FILE: include/asm-s390x/rwsem.h:54:
+extern struct rw_semaphore *rwsem_downgrade_wake(struct rw_semaphore *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#984: FILE: include/asm-s390x/rwsem.h:55:
+extern struct rw_semaphore *rwsem_downgrade_write(struct rw_semaphore *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#984: FILE: include/asm-s390x/rwsem.h:55:
+extern struct rw_semaphore *rwsem_downgrade_write(struct rw_semaphore *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#998: FILE: include/asm-s390x/rwsem.h:116:
+	__asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1006: FILE: include/asm-s390x/rwsem.h:124:
+                : "=&d" (old), "=&d" (new)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: include/asm-s390x/rwsem.h:124:
+                : "=&d" (old), "=&d" (new)$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1008: FILE: include/asm-s390x/rwsem.h:126:
+		: "cc", "memory" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1026: FILE: include/asm-s390x/rwsem.h:158:
+	__asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: include/asm-s390x/rwsem.h:165:
+                : "=&d" (old)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: include/asm-s390x/rwsem.h:165:
+                : "=&d" (old)$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1035: FILE: include/asm-s390x/rwsem.h:167:
+		: "cc", "memory" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1054: FILE: include/asm-s390x/rwsem.h:222:
+	__asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1060: FILE: include/asm-s390x/rwsem.h:228:
+                : "=&d" (old), "=&d" (new)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: include/asm-s390x/rwsem.h:228:
+                : "=&d" (old), "=&d" (new)$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1062: FILE: include/asm-s390x/rwsem.h:230:
+		: "cc", "memory" );

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1087: FILE: include/asm-s390x/smp.h:32:
+extern volatile unsigned long cpu_possible_map;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1096: FILE: include/asm-s390x/smp.h:50:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1097: FILE: include/asm-s390x/smp.h:51:
+#define cpu_possible(cpu) (cpu_possible_map & (1<<(cpu)))
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1200: FILE: include/asm-s390x/system.h:21:
+#define switch_to(prev,next,last) do {					     \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1200: FILE: include/asm-s390x/system.h:21:
+#define switch_to(prev,next,last) do {					     \
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prev' - possible side-effects?
#1200: FILE: include/asm-s390x/system.h:21:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'prev' may be better as '(prev)' to avoid precedence issues
#1200: FILE: include/asm-s390x/system.h:21:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'next' may be better as '(next)' to avoid precedence issues
#1200: FILE: include/asm-s390x/system.h:21:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1215: FILE: include/asm-s390x/system.h:125:
+#define cmpxchg(ptr,o,n)\
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1215: FILE: include/asm-s390x/system.h:125:
+#define cmpxchg(ptr,o,n)\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#1215: FILE: include/asm-s390x/system.h:125:
+#define cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1216: FILE: include/asm-s390x/system.h:126:
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1217: FILE: include/asm-s390x/system.h:127:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1220: FILE: include/asm-s390x/system.h:130:
+__cmpxchg(volatile void *ptr, unsigned long old, unsigned long new, int size)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1225: FILE: include/asm-s390x/system.h:135:
+        switch (size) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: include/asm-s390x/system.h:135:
+        switch (size) {$

CHECK:SPACING: No space is necessary after a cast
#1227: FILE: include/asm-s390x/system.h:137:
+		addr = (unsigned long) ptr;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1230: FILE: include/asm-s390x/system.h:140:
+		asm volatile(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1233: FILE: include/asm-s390x/system.h:143:
+                        "    lr  %1,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: include/asm-s390x/system.h:143:
+                        "    lr  %1,%0\n"$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1245: FILE: include/asm-s390x/system.h:155:
+			: "memory", "cc" );

CHECK:SPACING: No space is necessary after a cast
#1248: FILE: include/asm-s390x/system.h:158:
+		addr = (unsigned long) ptr;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1251: FILE: include/asm-s390x/system.h:161:
+		asm volatile(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1254: FILE: include/asm-s390x/system.h:164:
+                        "    lr  %1,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: include/asm-s390x/system.h:164:
+                        "    lr  %1,%0\n"$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1266: FILE: include/asm-s390x/system.h:176:
+			: "memory", "cc" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1269: FILE: include/asm-s390x/system.h:179:
+		asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1272: FILE: include/asm-s390x/system.h:182:
+			: "memory", "cc" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1275: FILE: include/asm-s390x/system.h:185:
+		asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1278: FILE: include/asm-s390x/system.h:188:
+			: "memory", "cc" );

ERROR:CODE_INDENT: code indent should use tabs where possible
#1280: FILE: include/asm-s390x/system.h:190:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: include/asm-s390x/system.h:190:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1281: FILE: include/asm-s390x/system.h:191:
+        return old;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1281: FILE: include/asm-s390x/system.h:191:
+        return old;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1296: FILE: include/asm-s390x/system.h:242:
+        !((flags >> 56) & 3);^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: include/asm-s390x/system.h:242:
+        !((flags >> 56) & 3);^I^I\$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 36 warnings, 51 checks, 1201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
