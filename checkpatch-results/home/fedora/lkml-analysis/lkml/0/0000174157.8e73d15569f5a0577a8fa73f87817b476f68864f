CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#64: FILE: drivers/i2c/chips/it87.c:243:
+static ssize_t show_in(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: drivers/i2c/chips/it87.c:253:
+static ssize_t show_in_min(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: drivers/i2c/chips/it87.c:263:
+static ssize_t show_in_max(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: drivers/i2c/chips/it87.c:273:
+static ssize_t set_in_min(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#112: FILE: drivers/i2c/chips/it87.c:289:
 }
+static ssize_t set_in_max(struct device *dev, struct device_attribute *attr,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: drivers/i2c/chips/it87.c:290:
+static ssize_t set_in_max(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#131: FILE: drivers/i2c/chips/it87.c:308:
+static SENSOR_DEVICE_ATTR(in##offset##_input, S_IRUGO,		\

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#159: FILE: drivers/i2c/chips/it87.c:312:
+static SENSOR_DEVICE_ATTR(in##offset##_min, S_IRUGO | S_IWUSR,	\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#161: FILE: drivers/i2c/chips/it87.c:314:
+static SENSOR_DEVICE_ATTR(in##offset##_max, S_IRUGO | S_IWUSR,	\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: drivers/i2c/chips/it87.c:337:
+static ssize_t show_temp(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#181: FILE: drivers/i2c/chips/it87.c:345:
 }
+static ssize_t show_temp_max(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/i2c/chips/it87.c:346:
+static ssize_t show_temp_max(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#191: FILE: drivers/i2c/chips/it87.c:354:
 }
+static ssize_t show_temp_min(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: drivers/i2c/chips/it87.c:355:
+static ssize_t show_temp_min(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#202: FILE: drivers/i2c/chips/it87.c:363:
 }
+static ssize_t set_temp_max(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/i2c/chips/it87.c:364:
+static ssize_t set_temp_max(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#217: FILE: drivers/i2c/chips/it87.c:379:
 }
+static ssize_t set_temp_min(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/i2c/chips/it87.c:380:
+static ssize_t set_temp_min(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#259: FILE: drivers/i2c/chips/it87.c:396:
+static SENSOR_DEVICE_ATTR(temp##offset##_input, S_IRUGO,		\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#261: FILE: drivers/i2c/chips/it87.c:398:
+static SENSOR_DEVICE_ATTR(temp##offset##_max, S_IRUGO | S_IWUSR,	\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#263: FILE: drivers/i2c/chips/it87.c:400:
+static SENSOR_DEVICE_ATTR(temp##offset##_min, S_IRUGO | S_IWUSR,	\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/i2c/chips/it87.c:408:
+static ssize_t show_sensor(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#286: FILE: drivers/i2c/chips/it87.c:422:
 }
+static ssize_t set_sensor(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: drivers/i2c/chips/it87.c:423:
+static ssize_t set_sensor(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#310: FILE: drivers/i2c/chips/it87.c:450:
+static SENSOR_DEVICE_ATTR(temp##offset##_type, S_IRUGO | S_IWUSR,	\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: drivers/i2c/chips/it87.c:459:
+static ssize_t show_fan(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#330: FILE: drivers/i2c/chips/it87.c:468:
 }
+static ssize_t show_fan_min(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/i2c/chips/it87.c:469:
+static ssize_t show_fan_min(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#341: FILE: drivers/i2c/chips/it87.c:478:
 }
+static ssize_t show_fan_div(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: drivers/i2c/chips/it87.c:479:
+static ssize_t show_fan_div(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#351: FILE: drivers/i2c/chips/it87.c:487:
 }
+static ssize_t show_pwm_enable(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/i2c/chips/it87.c:488:
+static ssize_t show_pwm_enable(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#361: FILE: drivers/i2c/chips/it87.c:496:
 }
+static ssize_t show_pwm(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: drivers/i2c/chips/it87.c:497:
+static ssize_t show_pwm(struct device *dev, struct device_attribute *attr,
+		char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#372: FILE: drivers/i2c/chips/it87.c:505:
 }
+static ssize_t set_fan_min(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: drivers/i2c/chips/it87.c:506:
+static ssize_t set_fan_min(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#387: FILE: drivers/i2c/chips/it87.c:521:
 }
+static ssize_t set_fan_div(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: drivers/i2c/chips/it87.c:522:
+static ssize_t set_fan_div(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#402: FILE: drivers/i2c/chips/it87.c:564:
 }
+static ssize_t set_pwm_enable(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: drivers/i2c/chips/it87.c:565:
+static ssize_t set_pwm_enable(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#417: FILE: drivers/i2c/chips/it87.c:598:
 }
+static ssize_t set_pwm(struct device *dev, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: drivers/i2c/chips/it87.c:599:
+static ssize_t set_pwm(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#458: FILE: drivers/i2c/chips/it87.c:619:
+#define show_fan_offset(offset)					\
+static SENSOR_DEVICE_ATTR(fan##offset##_input, S_IRUGO,		\
+		show_fan, NULL, offset - 1);			\
+static SENSOR_DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR, \
+		show_fan_min, set_fan_min, offset - 1);		\
+static SENSOR_DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR, \
+		show_fan_div, set_fan_div, offset - 1);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#458: FILE: drivers/i2c/chips/it87.c:619:
+#define show_fan_offset(offset)					\
+static SENSOR_DEVICE_ATTR(fan##offset##_input, S_IRUGO,		\
+		show_fan, NULL, offset - 1);			\
+static SENSOR_DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR, \
+		show_fan_min, set_fan_min, offset - 1);		\
+static SENSOR_DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR, \
+		show_fan_div, set_fan_div, offset - 1);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#458: FILE: drivers/i2c/chips/it87.c:619:
+#define show_fan_offset(offset)					\
+static SENSOR_DEVICE_ATTR(fan##offset##_input, S_IRUGO,		\
+		show_fan, NULL, offset - 1);			\
+static SENSOR_DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR, \
+		show_fan_min, set_fan_min, offset - 1);		\
+static SENSOR_DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR, \
+		show_fan_div, set_fan_div, offset - 1);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#458: FILE: drivers/i2c/chips/it87.c:619:
+#define show_fan_offset(offset)					\
+static SENSOR_DEVICE_ATTR(fan##offset##_input, S_IRUGO,		\
+		show_fan, NULL, offset - 1);			\
+static SENSOR_DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR, \
+		show_fan_min, set_fan_min, offset - 1);		\
+static SENSOR_DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR, \
+		show_fan_div, set_fan_div, offset - 1);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#459: FILE: drivers/i2c/chips/it87.c:620:
+static SENSOR_DEVICE_ATTR(fan##offset##_input, S_IRUGO,		\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#461: FILE: drivers/i2c/chips/it87.c:622:
+static SENSOR_DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#463: FILE: drivers/i2c/chips/it87.c:624:
+static SENSOR_DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#495: FILE: drivers/i2c/chips/it87.c:632:
+static SENSOR_DEVICE_ATTR(pwm##offset##_enable, S_IRUGO | S_IWUSR,	\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#497: FILE: drivers/i2c/chips/it87.c:634:
+static SENSOR_DEVICE_ATTR(pwm##offset, S_IRUGO | S_IWUSR,		\

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174157.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 13 warnings, 37 checks, 551 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174157.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
