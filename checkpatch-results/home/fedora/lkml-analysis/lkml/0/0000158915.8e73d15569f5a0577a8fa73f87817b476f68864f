ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: include/linux/security.h:1169:
+	int (*task_setprlimit) (struct task_struct * p, unsigned int resource,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#98: FILE: include/linux/security.h:1169:
+	int (*task_setprlimit) (struct task_struct * p, unsigned int resource,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#99: FILE: include/linux/security.h:1170:
+				struct rlimit * new_rlim);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: include/linux/security.h:1818:
+static inline int security_task_setprlimit (struct task_struct *p,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: include/linux/security.h:1822:
+	return security_ops->task_setprlimit (p, resource, new_rlim);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#131: FILE: kernel/sys.c:1571:
+	     new_rlim->rlim_cur <= cputime_to_secs(

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: kernel/sys.c:1574:
+		cputime_t cputime = secs_to_cputime(new_rlim->rlim_cur);
+		if (!holds_lock)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_rlim.rlim_max > old_rlim->rlim_max'
#212: FILE: kernel/sys.c:1702:
+		if ((new_rlim.rlim_max > old_rlim->rlim_max) &&
+		    !capable(CAP_SYS_RESOURCE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: security/dummy.c:551:
+static int dummy_task_setprlimit (struct task_struct *p, unsigned int resource,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158915.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 5 warnings, 2 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158915.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
