ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#72: FILE: drivers/net/hamradio/dmascc.c:256:
+static irqreturn_t scc_isr(int irq, void *dev_id, struct pt_regs * regs);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#95: FILE: drivers/net/hamradio/dmascc.c:948:
+static inline void tx_on(struct scc_priv *priv) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/net/hamradio/dmascc.c:949:
+  int i, n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/net/hamradio/dmascc.c:950:
+  unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/net/hamradio/dmascc.c:952:
+  if (priv->param.dma >= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#102: FILE: drivers/net/hamradio/dmascc.c:952:
+  if (priv->param.dma >= 0) {
+    n = (priv->chip == Z85230) ? 3 : 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/net/hamradio/dmascc.c:953:
+    n = (priv->chip == Z85230) ? 3 : 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/net/hamradio/dmascc.c:955:
+    flags = claim_dma_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/net/hamradio/dmascc.c:956:
+    set_dma_mode(priv->param.dma, DMA_MODE_WRITE);$

CHECK:SPACING: No space is necessary after a cast
#107: FILE: drivers/net/hamradio/dmascc.c:957:
+    set_dma_addr(priv->param.dma, (int) priv->tx_buf[priv->tx_tail]+n);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/net/hamradio/dmascc.c:957:
+    set_dma_addr(priv->param.dma, (int) priv->tx_buf[priv->tx_tail]+n);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: drivers/net/hamradio/dmascc.c:957:
+    set_dma_addr(priv->param.dma, (int) priv->tx_buf[priv->tx_tail]+n);
                                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/net/hamradio/dmascc.c:958:
+    set_dma_count(priv->param.dma, priv->tx_len[priv->tx_tail]-n);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#108: FILE: drivers/net/hamradio/dmascc.c:958:
+    set_dma_count(priv->param.dma, priv->tx_len[priv->tx_tail]-n);
                                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: drivers/net/hamradio/dmascc.c:959:
+    release_dma_lock(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: drivers/net/hamradio/dmascc.c:961:
+    write_scc(priv, R15, TxUIE);$

CHECK:CAMELCASE: Avoid CamelCase: <TxUIE>
#111: FILE: drivers/net/hamradio/dmascc.c:961:
+    write_scc(priv, R15, TxUIE);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/net/hamradio/dmascc.c:963:
+    if (priv->type == TYPE_TWIN)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#113: FILE: drivers/net/hamradio/dmascc.c:963:
+    if (priv->type == TYPE_TWIN)
+      outb((priv->param.dma == 1) ? TWIN_DMA_HDX_T1 : TWIN_DMA_HDX_T3,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/net/hamradio/dmascc.c:964:
+      outb((priv->param.dma == 1) ? TWIN_DMA_HDX_T1 : TWIN_DMA_HDX_T3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/net/hamradio/dmascc.c:966:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#116: FILE: drivers/net/hamradio/dmascc.c:966:
+    else
+      write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN | WT_RDY_ENAB);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/net/hamradio/dmascc.c:967:
+      write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN | WT_RDY_ENAB);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/net/hamradio/dmascc.c:969:
+    spin_lock_irqsave(priv->register_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/net/hamradio/dmascc.c:970:
+    for (i = 0; i < n; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#120: FILE: drivers/net/hamradio/dmascc.c:970:
+    for (i = 0; i < n; i++)
+      write_scc_data(priv, priv->tx_buf[priv->tx_tail][i], 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/net/hamradio/dmascc.c:971:
+      write_scc_data(priv, priv->tx_buf[priv->tx_tail][i], 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/net/hamradio/dmascc.c:972:
+    enable_dma(priv->param.dma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/net/hamradio/dmascc.c:973:
+    spin_unlock_irqrestore(priv->register_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/net/hamradio/dmascc.c:974:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#124: FILE: drivers/net/hamradio/dmascc.c:974:
+  } else {
+    write_scc(priv, R15, TxUIE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/net/hamradio/dmascc.c:975:
+    write_scc(priv, R15, TxUIE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/net/hamradio/dmascc.c:976:
+    write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN | TxINT_ENAB);$

CHECK:CAMELCASE: Avoid CamelCase: <TxINT_ENAB>
#126: FILE: drivers/net/hamradio/dmascc.c:976:
+    write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN | TxINT_ENAB);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/net/hamradio/dmascc.c:977:
+    tx_isr(priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/net/hamradio/dmascc.c:978:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/net/hamradio/dmascc.c:980:
+  if (priv->chip == Z8530) write_scc(priv, R0, RES_EOM_L);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#130: FILE: drivers/net/hamradio/dmascc.c:980:
+  if (priv->chip == Z8530) write_scc(priv, R0, RES_EOM_L);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#141: FILE: drivers/net/hamradio/dmascc.c:984:
+static inline void rx_on(struct scc_priv *priv) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/net/hamradio/dmascc.c:985:
+  unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/net/hamradio/dmascc.c:988:
+  while (read_scc(priv, R0) & Rx_CH_AV) read_scc_data(priv);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#158: FILE: drivers/net/hamradio/dmascc.c:988:
+  while (read_scc(priv, R0) & Rx_CH_AV) read_scc_data(priv);

CHECK:CAMELCASE: Avoid CamelCase: <Rx_CH_AV>
#158: FILE: drivers/net/hamradio/dmascc.c:988:
+  while (read_scc(priv, R0) & Rx_CH_AV) read_scc_data(priv);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/net/hamradio/dmascc.c:989:
+  priv->rx_over = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/net/hamradio/dmascc.c:990:
+  if (priv->param.dma >= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#160: FILE: drivers/net/hamradio/dmascc.c:990:
+  if (priv->param.dma >= 0) {
[...]
+    flags = claim_dma_lock();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/net/hamradio/dmascc.c:992:
+    flags = claim_dma_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/net/hamradio/dmascc.c:993:
+    set_dma_mode(priv->param.dma, DMA_MODE_READ);$

CHECK:SPACING: No space is necessary after a cast
#164: FILE: drivers/net/hamradio/dmascc.c:994:
+    set_dma_addr(priv->param.dma, (int) priv->rx_buf[priv->rx_head]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/net/hamradio/dmascc.c:994:
+    set_dma_addr(priv->param.dma, (int) priv->rx_buf[priv->rx_head]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/net/hamradio/dmascc.c:995:
+    set_dma_count(priv->param.dma, BUF_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/net/hamradio/dmascc.c:996:
+    release_dma_lock(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/net/hamradio/dmascc.c:997:
+    enable_dma(priv->param.dma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/net/hamradio/dmascc.c:999:
+    if (priv->type == TYPE_TWIN) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#169: FILE: drivers/net/hamradio/dmascc.c:999:
+    if (priv->type == TYPE_TWIN) {
+      outb((priv->param.dma == 1) ? TWIN_DMA_HDX_R1 : TWIN_DMA_HDX_R3,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/net/hamradio/dmascc.c:1000:
+      outb((priv->param.dma == 1) ? TWIN_DMA_HDX_R1 : TWIN_DMA_HDX_R3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/net/hamradio/dmascc.c:1004:
+    write_scc(priv, R1, EXT_INT_ENAB | INT_ERR_Rx |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/net/hamradio/dmascc.c:1006:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#179: FILE: drivers/net/hamradio/dmascc.c:1006:
+  } else {
[...]
+    priv->rx_ptr = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/net/hamradio/dmascc.c:1008:
+    priv->rx_ptr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/net/hamradio/dmascc.c:1010:
+    write_scc(priv, R1, EXT_INT_ENAB | INT_ALL_Rx | WT_RDY_RT |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/net/hamradio/dmascc.c:1012:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/net/hamradio/dmascc.c:1013:
+  write_scc(priv, R0, ERR_RES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/net/hamradio/dmascc.c:1014:
+  write_scc(priv, R3, RxENABLE | Rx8 | RxCRC_ENAB);$

CHECK:CAMELCASE: Avoid CamelCase: <RxENABLE>
#187: FILE: drivers/net/hamradio/dmascc.c:1014:
+  write_scc(priv, R3, RxENABLE | Rx8 | RxCRC_ENAB);

CHECK:CAMELCASE: Avoid CamelCase: <Rx8>
#187: FILE: drivers/net/hamradio/dmascc.c:1014:
+  write_scc(priv, R3, RxENABLE | Rx8 | RxCRC_ENAB);

CHECK:CAMELCASE: Avoid CamelCase: <RxCRC_ENAB>
#187: FILE: drivers/net/hamradio/dmascc.c:1014:
+  write_scc(priv, R3, RxENABLE | Rx8 | RxCRC_ENAB);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/net/hamradio/dmascc.c:1017:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#191: FILE: drivers/net/hamradio/dmascc.c:1018:
+static inline void rx_off(struct scc_priv *priv) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/net/hamradio/dmascc.c:1020:
+  write_scc(priv, R3, Rx8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/net/hamradio/dmascc.c:1022:
+  if (priv->param.dma >= 0 && priv->type == TYPE_TWIN)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#195: FILE: drivers/net/hamradio/dmascc.c:1022:
+  if (priv->param.dma >= 0 && priv->type == TYPE_TWIN)
+    outb(0, priv->card_base + TWIN_DMA_CFG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/net/hamradio/dmascc.c:1023:
+    outb(0, priv->card_base + TWIN_DMA_CFG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/net/hamradio/dmascc.c:1024:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#197: FILE: drivers/net/hamradio/dmascc.c:1024:
+  else
+    write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/net/hamradio/dmascc.c:1025:
+    write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/net/hamradio/dmascc.c:1027:
+  if (priv->param.dma >= 0) disable_dma(priv->param.dma);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: drivers/net/hamradio/dmascc.c:1027:
+  if (priv->param.dma >= 0) disable_dma(priv->param.dma);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: drivers/net/hamradio/dmascc.c:1030:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#204: FILE: drivers/net/hamradio/dmascc.c:1031:
+static void start_timer(struct scc_priv *priv, int t, int r15) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/net/hamradio/dmascc.c:1032:
+  unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/net/hamradio/dmascc.c:1034:
+  outb(priv->tmr_mode, priv->tmr_ctrl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/net/hamradio/dmascc.c:1035:
+  if (t == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#208: FILE: drivers/net/hamradio/dmascc.c:1035:
+  if (t == 0) {
+    tm_isr(priv);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/net/hamradio/dmascc.c:1036:
+    tm_isr(priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/net/hamradio/dmascc.c:1037:
+  } else if (t > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#210: FILE: drivers/net/hamradio/dmascc.c:1037:
+  } else if (t > 0) {
+    save_flags(flags);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/net/hamradio/dmascc.c:1038:
+    save_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/net/hamradio/dmascc.c:1039:
+    cli();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/net/hamradio/dmascc.c:1040:
+    outb(t & 0xFF, priv->tmr_cnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/net/hamradio/dmascc.c:1041:
+    outb((t >> 8) & 0xFF, priv->tmr_cnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/net/hamradio/dmascc.c:1042:
+    if (priv->type != TYPE_TWIN) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#215: FILE: drivers/net/hamradio/dmascc.c:1042:
+    if (priv->type != TYPE_TWIN) {
+      write_scc(priv, R15, r15 | CTSIE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/net/hamradio/dmascc.c:1043:
+      write_scc(priv, R15, r15 | CTSIE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/net/hamradio/dmascc.c:1044:
+      priv->rr0 |= CTS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/net/hamradio/dmascc.c:1045:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/net/hamradio/dmascc.c:1046:
+    restore_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/net/hamradio/dmascc.c:1047:
+  }$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#224: FILE: drivers/net/hamradio/dmascc.c:1051:
+static inline unsigned char random(void) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/net/hamradio/dmascc.c:1053:
+  rand = rand * 1664525L + 1013904223L;$

CHECK:SPACING: No space is necessary after a cast
#227: FILE: drivers/net/hamradio/dmascc.c:1054:
+  return (unsigned char) (rand >> 24);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/net/hamradio/dmascc.c:1054:
+  return (unsigned char) (rand >> 24);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#237: FILE: drivers/net/hamradio/dmascc.c:1085:
+static irqreturn_t scc_isr(int irq, void *dev_id, struct pt_regs * regs) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#237: FILE: drivers/net/hamradio/dmascc.c:1085:
+static irqreturn_t scc_isr(int irq, void *dev_id, struct pt_regs * regs) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/net/hamradio/dmascc.c:1086:
+  struct scc_info *info = dev_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/net/hamradio/dmascc.c:1088:
+  spin_lock(info->priv[0].register_lock);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#242: FILE: drivers/net/hamradio/dmascc.c:1090:
+  /* At this point interrupts are enabled, and the interrupt under service
+     is already acknowledged, but masked off.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#251: FILE: drivers/net/hamradio/dmascc.c:1099:
+     to be fetched/delivered immediately. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/net/hamradio/dmascc.c:1101:
+  if (info->priv[0].type == TYPE_TWIN) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#253: FILE: drivers/net/hamradio/dmascc.c:1101:
+  if (info->priv[0].type == TYPE_TWIN) {
+    int is, card_base = info->priv[0].card_base;

CHECK:BRACES: braces {} should be used on all arms of this statement
#253: FILE: drivers/net/hamradio/dmascc.c:1101:
+  if (info->priv[0].type == TYPE_TWIN) {
[...]
+  } else z8530_isr(info);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/net/hamradio/dmascc.c:1102:
+    int is, card_base = info->priv[0].card_base;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: drivers/net/hamradio/dmascc.c:1103:
+    int is, card_base = info->priv[0].card_base;
+    while ((is = ~inb(card_base + TWIN_INT_REG)) &

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/net/hamradio/dmascc.c:1103:
+    while ((is = ~inb(card_base + TWIN_INT_REG)) &$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#255: FILE: drivers/net/hamradio/dmascc.c:1103:
+    while ((is = ~inb(card_base + TWIN_INT_REG)) &
[...]
+      if (is & TWIN_SCC_MSK) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/net/hamradio/dmascc.c:1105:
+      if (is & TWIN_SCC_MSK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/net/hamradio/dmascc.c:1107:
+      } else if (is & TWIN_TMR1_MSK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/net/hamradio/dmascc.c:1110:
+      } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/net/hamradio/dmascc.c:1113:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/net/hamradio/dmascc.c:1114:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/net/hamradio/dmascc.c:1115:
+  } else z8530_isr(info);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#267: FILE: drivers/net/hamradio/dmascc.c:1115:
+  } else z8530_isr(info);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/net/hamradio/dmascc.c:1116:
+  spin_unlock(info->priv[0].register_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/net/hamradio/dmascc.c:1117:
+  return IRQ_HANDLED;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: drivers/net/hamradio/dmascc.c:1120:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 98 warnings, 15 checks, 215 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
