WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
as that makes the 64 bit updates correctly atomic on PAE, check the type of 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: arch/i386/mm/pageattr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#71: FILE: arch/i386/mm/pageattr.c:12:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#72: FILE: arch/i386/mm/pageattr.c:13:
+#include <asm/processor.h>

WARNING:TYPO_SPELLING: 'appropiate' may be misspelled - perhaps 'appropriate'?
#74: FILE: arch/i386/mm/pageattr.c:15:
+/* Should move most of this stuff into the appropiate includes */
                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#75: FILE: arch/i386/mm/pageattr.c:16:
+#define PAGE_LARGE (_PAGE_PSE|_PAGE_PRESENT)
                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#76: FILE: arch/i386/mm/pageattr.c:17:
+#define LARGE_PAGE_MASK (~(LARGE_PAGE_SIZE-1))
                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#86: FILE: arch/i386/mm/pageattr.c:27:
+	__pgprot(_KERNPG_TABLE & ~(_PAGE_GLOBAL|_PAGE_DIRTY))
 	                                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: arch/i386/mm/pageattr.c:48:
+		pmd_t *pmdp;
+		mm = list_entry(mm->mmlist.next, struct mm_struct, mmlist);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#117: FILE: arch/i386/mm/pageattr.c:58:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#123: FILE: arch/i386/mm/pageattr.c:64:
+	pte_t *base = (pte_t *) __get_free_page(GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: arch/i386/mm/pageattr.c:65:
+	pte_t *base = (pte_t *) __get_free_page(GFP_KERNEL);
+	if (!base)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: arch/i386/mm/pageattr.c:68:
+^IBUG_ON(atomic_read(&virt_to_page(base)->count) != 1); ^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: arch/i386/mm/pageattr.c:68:
+^IBUG_ON(atomic_read(&virt_to_page(base)->count) != 1); ^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#127: FILE: arch/i386/mm/pageattr.c:68:
+	BUG_ON(atomic_read(&virt_to_page(base)->count) != 1); 	

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#173: FILE: arch/i386/mm/pageattr.c:114:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#177: FILE: arch/i386/mm/pageattr.c:118:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: arch/i386/mm/pageattr.c:137:
+^I^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: arch/i386/mm/pageattr.c:148:
+^I^I/* just an ordinary page again - revert to standard mapping */^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#216: FILE: arch/i386/mm/pageattr.c:157:
+					    MAKE_GLOBAL(_KERNPG_TABLE|_PAGE_PSE)));
 					                             ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#227: FILE: arch/i386/mm/pageattr.c:168:
+	if (NULL != page_to_free)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#235: FILE: arch/i386/mm/pageattr.c:176:
+EXPORT_SYMBOL(change_page_attr);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/char/agp/agpgart_be.c:798:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#307: FILE: drivers/char/agp/agpgart_be.c:799:
+	
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: drivers/char/agp/agpgart_be.c:2762:
+^Iunsigned long p = agp_generic_alloc_page(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: drivers/char/agp/agpgart_be.c:2763:
+^Iif (!p) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#341: FILE: drivers/char/agp/agpgart_be.c:2763:
+	unsigned long p = agp_generic_alloc_page(); 
+	if (!p) 

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#413: FILE: drivers/char/drm-4.0/mga_dma.c:735:
+	change_page_attr(virt_to_page(dev_priv->real_status_page), __pgprot(__PAGE_KERNEL | _PAGE_PCD));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#455: FILE: include/asm-i386/pgtable.h:315:
+#define mk_pmd(page, prot)	__pmd(pte_val(mk_pte(page,prot)))
                           	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#456: FILE: include/asm-i386/pgtable.h:316:
+#define mk_pmd_phys(page, prot)	__pmd(pte_val(mk_pte_phys(page,prot)))
                                	                              ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#465: FILE: include/asm-i386/pgtable.h:353:
+int change_page_attr(struct page *, pgprot_t prot);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450261.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 15 warnings, 8 checks, 459 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450261.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
