WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#57: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2980:
+		return PTR_ERR(bdev);;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#63: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2986:
+		/* if the block device is a known scsi_device and
+		   device is not a partition */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#63: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:2986:
+		   device is not a partition */

CHECK:BRACES: braces {} should be used on all arms of this statement
#90: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3013:
+	if (bdev->bd_disk->flags & GENHD_FL_REMOVABLE) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#93: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3016:
+	} else

WARNING:BRACES: braces {} are not necessary for single statement blocks
#125: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3048:
+	while (atomic_read(&vdev->refcount)) {
+		msleep(REFCOUNT_TIMEOUT_MS);
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3066:
+	struct scsi_dev_node * sdevnode =

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_scsi_device', this function's name, in a string
#147: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3070:
+	dbg("add_scsi_device got %p, %d:%d:%d:%d, sdn=%p\n", sdev,

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rem_scsi_device', this function's name, in a string
#179: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3102:
+	warn("rem_scsi_device: Couldn't find scsi_device %p %d:%d:%d:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3103:
+	warn("rem_scsi_device: Couldn't find scsi_device %p %d:%d:%d:%d\n",
+		sdev, sdev->host->host_no, sdev->channel, sdev->id, sdev->lun);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#198: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3121:
+static void vscsi_target_release(struct kobject *kobj) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3123:
+		container_of(kobj,struct vdev,kobj);
 		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3123:
+		container_of(kobj,struct vdev,kobj);
 		                             ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#204: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3127:
+static void vscsi_bus_release(struct kobject *kobj) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#206: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3129:
+		container_of(kobj,struct vbus,kobj);
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#206: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3129:
+		container_of(kobj,struct vbus,kobj);
 		                             ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#210: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3133:
+static void set_num_targets(struct vbus* vbus, long value)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#213: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3136:
+		container_of(vbus->kobj.parent, struct device , kobj);
 		                                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#223: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3146:
+		int i;
+		for (i = cur_num_targets; i < value; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#224: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3147:
+			tmpdev = (struct vdev *)kmalloc(sizeof(struct vdev),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tmpdev)...) over kmalloc(sizeof(struct vdev)...)
#224: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3147:
+			tmpdev = (struct vdev *)kmalloc(sizeof(struct vdev),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#257: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3180:
+		int i;
+		for (i = cur_num_targets - 1; i >= value; i--)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#257: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3180:
+		for (i = cur_num_targets - 1; i >= value; i--)
+		{

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3211:
+		int i;
+		for (i = cur_num_buses; i < value; i++) {

CHECK:SPACING: No space is necessary after a cast
#289: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3212:
+			tmpbus = (struct vbus *) kmalloc(sizeof(struct vbus),

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#289: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3212:
+			tmpbus = (struct vbus *) kmalloc(sizeof(struct vbus),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tmpbus)...) over kmalloc(sizeof(struct vbus)...)
#289: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3212:
+			tmpbus = (struct vbus *) kmalloc(sizeof(struct vbus),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "adapter->vbus[i]"
#305: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3228:
+			if (adapter->vbus[i] != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#322: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3245:
+		int i, j, active_target;
+		for (i = cur_num_buses - 1; i >= value; i--) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3256:
+				err("Can't remove bus%d, target%d active\n",
+					i, active_target);

WARNING:SPACING: space prohibited before semicolon
#334: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3257:
+				return ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#357: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3280:
+static ssize_t vscsi_target_show(struct kobject * kobj,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#358: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3281:
+				 struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#358: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3281:
+				 struct attribute * attr, char * buf)

CHECK:BRACES: braces {} should be used on all arms of this statement
#370: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3293:
+	if (attr == &vscsi_target_device_attr)
[...]
+	else if (attr == &vscsi_target_active_attr)
[...]
+	else if (attr == &vscsi_target_ro_attr)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#376: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3299:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#378: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3301:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#386: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3309:
+static ssize_t vscsi_target_store(struct kobject * kobj,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#387: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3310:
+				  struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3311:
+				  const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#396: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3319:
+	long value = simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: braces {} should be used on all arms of this statement
#403: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3326:
+	if (attr == &vscsi_target_device_attr) {
[...]
+	} else if (attr == &vscsi_target_active_attr) {
[...]
+	} else if (attr == &vscsi_target_ro_attr)
[...]
+	else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#405: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3328:
+		int i;
+		spin_lock_irqsave(&adapter->lock, flags);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#406: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3329:
+		i  = strlcpy(vdev->device_name, buf, TARGET_MAX_NAME_LEN);

WARNING:LINE_SPACING: Missing a blank line after declarations
#414: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3337:
+			int rc;
+			if (!vdev->disabled) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#430: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3353:
+		BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#435: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3358:
+static struct attribute * vscsi_target_attrs[] = {

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#442: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3365:
+static struct sysfs_ops vscsi_target_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#453: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3376:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#456: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3379:
+static ssize_t vscsi_bus_show(struct kobject * kobj,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#457: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3380:
+			      struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#457: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3380:
+			      struct attribute * attr, char * buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#460: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3383:
+	struct vbus *vbus = container_of(kobj, struct vbus, kobj);
+	return sprintf(buf, "%d\n", atomic_read(&vbus->num_targets));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#463: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3386:
+static ssize_t vscsi_bus_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#463: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3386:
+static ssize_t vscsi_bus_store(struct kobject * kobj, struct attribute * attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3387:
+static ssize_t vscsi_bus_store(struct kobject * kobj, struct attribute * attr,
+const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#464: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3387:
+const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#467: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3390:
+	long value = simple_strtol(buf, NULL, 10);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3400:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#480: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3403:
+static struct attribute * vscsi_bus_attrs[] = {

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#485: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3408:
+static struct sysfs_ops vscsi_bus_ops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#496: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3419:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#498: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3421:
+static ssize_t vscsi_dev_bus_show(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#500: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3423:
+				  char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#508: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3431:
+static ssize_t vscsi_dev_sector_show(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#510: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3433:
+				     char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#518: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3441:
+static ssize_t vscsi_dev_bus_store(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#520: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3443:
+				   const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#522: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3445:
+	long value = simple_strtol(buf, NULL, 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#531: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3454:
+static ssize_t vscsi_dev_sector_store(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#533: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3456:
+				      const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#535: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3458:
+	long value = simple_strtol(buf, NULL, 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#547: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3470:
+static ssize_t vscsi_dev_debug_store(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#549: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3472:
+				     const char * buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#551: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3474:
+	long value = simple_strtol(buf, NULL, 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#557: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3480:
+static ssize_t vscsi_dev_debug_show(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#559: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3482:
+				    char * buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vscsi_dev_debug_show' to 'debug_show' 'vscsi_dev_debug_store' to 'debug_store'
#562: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3485:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vscsi_dev_bus_show' to 'num_buses_show' 'vscsi_dev_bus_store' to 'num_buses_store'
#565: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3488:
+static DEVICE_ATTR(num_buses, 0644, vscsi_dev_bus_show, vscsi_dev_bus_store);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vscsi_dev_sector_show' to 'max_sectors_show' 'vscsi_dev_sector_store' to 'max_sectors_store'
#566: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3489:
+static DEVICE_ATTR(max_sectors, 0644, vscsi_dev_sector_show,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#569: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3492:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#581: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3504:
+static struct attribute * vscsi_stats_attrs[] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#593: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3516:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#594: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3517:
+static ssize_t vscsi_stats_show(struct kobject * kobj,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#595: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3518:
+				struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#595: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3518:
+				struct attribute * attr, char * buf)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#597: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3520:
+	struct server_adapter *adapter= container_of(kobj,
 	                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#625: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3548:
+	BUG();

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#629: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3552:
+static struct sysfs_ops vscsi_stats_ops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#640: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3563:
+
+

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#657: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3633:
+	adapter->stats_kobj.ktype = & ktype_vscsi_stats;
 	                            ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#680: FILE: drivers/scsi/ibmvscsi/ibmvscsis.c:3660:
+				if (vdev && !vdev ->disabled)
 				                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153675.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 31 warnings, 18 checks, 682 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153675.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
