WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -ur -X exclude /opt/kernel/linux-2.5.2-pre7/drivers/block/Config.in linux/drivers/block/Config.in

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#79: FILE: drivers/block/elevator.c:151:
+		else if ((ret = elv_try_merge(__rq, bio)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#91: FILE: drivers/block/elevator.c:237:
+		BUG_ON(list_entry_rq(insert_here->next)->flags & REQ_STARTED);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#105: FILE: drivers/block/elevator.c:266:
+	printk("elv_linus: r/w sequence %d/%d\n", latency[READ],latency[WRITE]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: drivers/block/elevator.c:266:
+	printk("elv_linus: r/w sequence %d/%d\n", latency[READ],latency[WRITE]);
 	                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#116: FILE: drivers/block/elevator.c:336:
+extern int queue_nr_requests;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#122: FILE: drivers/block/elevator.c:342:
+	int creat = 0, i, re, we, rb;
 	    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#125: FILE: drivers/block/elevator.c:345:
+		elv_jens_entries = kmem_cache_create("elv_jens", sizeof(struct elv_jens_entry), 0, SLAB_HWCACHE_ALIGN, NULL, NULL);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#128: FILE: drivers/block/elevator.c:348:
+		creat = 1;
 		^^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*edat)...) over kmalloc(sizeof(struct elv_jens_data)...)
#131: FILE: drivers/block/elevator.c:351:
+	edat = kmalloc(sizeof(struct elv_jens_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#133: FILE: drivers/block/elevator.c:353:
+		if (creat)
 		    ^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#174: FILE: drivers/block/elevator.c:394:
+	BUG_ON(!list_empty(&edat->fifo_r));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#175: FILE: drivers/block/elevator.c:395:
+	BUG_ON(!list_empty(&edat->fifo_w));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#194: FILE: drivers/block/elevator.c:414:
+	if ((ret = elv_try_last_merge(q, req, bio)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#216: FILE: drivers/block/elevator.c:436:
+		if ((ret = elv_try_merge(__rq, bio))) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#244: FILE: drivers/block/elevator.c:464:
+	BUG_ON(list_empty(&edat->free_entry));

CHECK:BRACES: braces {} should be used on all arms of this statement
#273: FILE: drivers/block/elevator.c:493:
+	if (edat->fifo_count) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#277: FILE: drivers/block/elevator.c:497:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/block/elevator.c:526:
+^I */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#369: FILE: drivers/block/elevator.c:674:
+	elevator_merge_fn:		elevator_jens_merge,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#370: FILE: drivers/block/elevator.c:675:
+	elevator_merge_req_fn:		elevator_jens_merge_req,
 	                     ^

WARNING:INDENTED_LABEL: labels should not be indented
#370: FILE: drivers/block/elevator.c:675:
+	elevator_merge_req_fn:		elevator_jens_merge_req,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#371: FILE: drivers/block/elevator.c:676:
+	elevator_next_req_fn:		elevator_jens_next_request,
 	                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#371: FILE: drivers/block/elevator.c:676:
+	elevator_next_req_fn:		elevator_jens_next_request,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#372: FILE: drivers/block/elevator.c:677:
+	elevator_add_req_fn:		elevator_jens_add_request,
 	                   ^

WARNING:INDENTED_LABEL: labels should not be indented
#372: FILE: drivers/block/elevator.c:677:
+	elevator_add_req_fn:		elevator_jens_add_request,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#373: FILE: drivers/block/elevator.c:678:
+	elevator_remove_req_fn:		elevator_jens_remove_request,
 	                      ^

WARNING:INDENTED_LABEL: labels should not be indented
#373: FILE: drivers/block/elevator.c:678:
+	elevator_remove_req_fn:		elevator_jens_remove_request,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#374: FILE: drivers/block/elevator.c:679:
+	elevator_init_fn:		elevator_jens_init,
 	                ^

WARNING:INDENTED_LABEL: labels should not be indented
#374: FILE: drivers/block/elevator.c:679:
+	elevator_init_fn:		elevator_jens_init,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#375: FILE: drivers/block/elevator.c:680:
+	elevator_exit_fn:		elevator_jens_exit,
 	                ^

WARNING:INDENTED_LABEL: labels should not be indented
#375: FILE: drivers/block/elevator.c:680:
+	elevator_exit_fn:		elevator_jens_exit,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#410: FILE: drivers/block/ll_rw_blk.c:817:
+	if ((ret = elevator_init(q, &q->elevator, e))) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000487885.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 18 warnings, 3 checks, 444 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000487885.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
