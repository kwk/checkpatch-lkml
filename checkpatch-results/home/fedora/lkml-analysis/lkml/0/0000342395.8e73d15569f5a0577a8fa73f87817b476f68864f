WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#43: 
On looking thro the Call Trace dumped, I realized that this was occuring
                                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#98: 
diff -Naur linux-2.6.0-test4/arch/i386/kernel/traps.c linux-2.6.0-test4-hkvc/arch/i386/kernel/traps.c

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#113: FILE: arch/i386/kernel/traps.c:107:
+	count=0;
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#118: FILE: arch/i386/kernel/traps.c:111:
+			printk("+%08d [<%08lx>] ", count, addr);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#122: FILE: arch/i386/kernel/traps.c:115:
 		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#126: FILE: arch/i386/kernel/traps.c:118:
+	printk("+%08d \n", count);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#126: FILE: arch/i386/kernel/traps.c:118:
+	printk("+%08d \n", count);

CHECK:CAMELCASE: Avoid CamelCase: <tempMutex>
#196: FILE: drivers/scsi/scsi_error.c:716:
+	mutexks_t tempMutex = MUTEXKS_UNLOCKED(tempMutex);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#277: FILE: include/linux/mutexks.h:1:
+#ifndef _MUTEXKS_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#310: FILE: include/linux/mutexks.h:34:
+/*
+typedef union {

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#318: FILE: include/linux/mutexks.h:42:
+#define SPIN_LOCK_LOCKED (spinlock_t) { 0 SPINLOCK_MAGIC_INIT }

WARNING:NEW_TYPEDEFS: do not add new typedefs
#320: FILE: include/linux/mutexks.h:44:
+typedef spinlock_t mutexks_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#327: FILE: include/linux/mutexks.h:51:
+typedef struct semaphore mutexks_t;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#329: FILE: include/linux/mutexks.h:53:
+#define MUTEXKS_LOCKED(name) __SEMAPHORE_INITIALIZER(name,0)
                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#330: FILE: include/linux/mutexks.h:54:
+#define MUTEXKS_UNLOCKED(name) __SEMAPHORE_INITIALIZER(name,1)
                                                            ^

CHECK:CAMELCASE: Avoid CamelCase: <mutualExclusionOnlyFlag>
#346: FILE: include/linux/mutexks.h:70:
+extern int mutualExclusionOnlyFlag;

CHECK:CAMELCASE: Avoid CamelCase: <meOnlyFlag>
#348: FILE: include/linux/mutexks.h:72:
+inline void mutualexclusion(int meOnlyFlag);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#387: FILE: kernel/ksyms.c:626:
+EXPORT_SYMBOL(mutexks_unlock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#397: FILE: kernel/mutexks.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#398: FILE: kernel/mutexks.c:2:
+ * kernel/mutexks.c - True Mutual Exclusion in Kernel space

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#424: FILE: kernel/mutexks.c:28:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#435: FILE: kernel/mutexks.c:39:
+	spinlock_t *sl;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#437: FILE: kernel/mutexks.c:41:
+	sl = (spinlock_t*)me;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#443: FILE: kernel/mutexks.c:47:
+	spinlock_t *sl;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#445: FILE: kernel/mutexks.c:49:
+	sl = (spinlock_t*)me;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#455: FILE: kernel/mutexks.c:59:
+	sem = (struct semaphore*)me;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#463: FILE: kernel/mutexks.c:67:
+	sem = (struct semaphore*)me;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#489: FILE: kernel/mutexks.c:93:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: kernel/sched.c:1300:
+	if (likely(!(current->state & (TASK_DEAD | TASK_ZOMBIE)) &&
+			!(mutualExclusionOnlyFlag == MEONLY_ENABLE))) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000342395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 12 warnings, 8 checks, 383 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000342395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
