WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
Previous comments have been a great help in improving the code: I would greatly 

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#82: FILE: net/ipv4/Kconfig:584:
+config IP_UDPLITE
+	bool "The UDP-Lite Protocol (EXPERIMENTAL)"
+	depends on INET && EXPERIMENTAL
+        default n
+	---help---
+	  The UDP-Lite Protocol            <http://www.ietf.org/rfc/rfc3828.txt>
+
+	  UDP-Lite is  a Standards-Track IETF  transport protocol (RFC 3828). It
+	  features  a  variable-length checksum;  which allows partially damaged
+	  packets  to  be forwarded to media codecs, rather than being discarded
+	  due to invalid (UDP) checksum values. This can have advantages for the
+	  transport of multimedia (e.g. video/audio) over wireless networks.
+
+	  The protocol runs on both IPv4 and IPv6. The socket API resembles that
+	  of UDP. Applications must indicate their wish to utilise the partial
+	  checksum coverage feature by setting a socket option; UDP-Lite will
+	  otherwise run in (compatible) UDP mode.
+
+	  Detailed documentation in <file:Documentation/networking/udplite.txt>.
+
+	  If in doubt, say N.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#107: FILE: include/linux/udplite.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#148: FILE: include/linux/udplite.h:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#176: FILE: include/linux/udplite.h:70:
+	 *  UDP-Lite header when the socket is uncorked.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#191: FILE: include/linux/udplite.h:85:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#207: FILE: include/net/udplite.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: include/net/udplite.h:17:
+ *      ^INOTE: In UDP-Lite the checksum MUST always be computed, hence there is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: include/net/udplite.h:26:
+#include <net/udp.h>       ^I/* for UDP_HTABLE_SIZE and proc structures */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: include/net/udplite.h:28:
+ * ^IGlobal variables$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: include/net/udplite.h:30:
+extern struct proto ^I^Iudplite_prot;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#237: FILE: include/net/udplite.h:31:
+extern struct hlist_head ^Iudplite_hash[UDP_HTABLE_SIZE];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#238: FILE: include/net/udplite.h:32:
+extern rwlock_t ^I^Iudplite_hash_lock;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: include/net/udplite.h:33:
+extern int ^I^I^Iudplite_port_rover;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: include/net/udplite.h:45:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#258: FILE: include/net/udplite.h:52:
+};
+#define UDPLITE_SKB_CB(skb)	((struct udplite_skb_cb *)&((skb)->cb))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#260: FILE: include/net/udplite.h:54:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: include/net/udplite.h:56:
+ * ^IInlined functions shared between UDP-Litev4 and UDP-Litev6$

WARNING:TABSTOP: Statements should start on a tabstop
#272: FILE: include/net/udplite.h:66:
+	    if (inet_sk(sk)->num == num)

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#283: FILE: include/net/udplite.h:77:
+	if (! UDPLITE_SKB_CB(skb)->partial)
 	    ^

CHECK:SPACING: No space is necessary after a cast
#302: FILE: include/net/udplite.h:96:
+	return memcpy_fromiovecend(to, (struct iovec *) from, offset, len);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#305: FILE: include/net/udplite.h:99:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#307: FILE: include/net/udplite.h:101:
+ *  ^Inet/ipv4/udplite.c$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#309: FILE: include/net/udplite.h:103:
+extern void ^I    udplite4_register(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: include/net/udplite.h:103:
+extern void 	    udplite4_register(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#310: FILE: include/net/udplite.h:104:
+extern int ^I    udplite4_mib_init(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: include/net/udplite.h:104:
+extern int 	    udplite4_mib_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: include/net/udplite.h:105:
+extern unsigned int udplite_poll(struct file *file, struct socket *sock,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#312: FILE: include/net/udplite.h:106:
+				 poll_table * wait);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: include/net/udplite.h:107:
+extern int ^I    udplite_rcv(struct sk_buff *skb);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#313: FILE: include/net/udplite.h:107:
+extern int 	    udplite_rcv(struct sk_buff *skb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: include/net/udplite.h:108:
+extern void	    udplite_err(struct sk_buff *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#314: FILE: include/net/udplite.h:108:
+extern void	    udplite_err(struct sk_buff *, u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#314: FILE: include/net/udplite.h:108:
+extern void	    udplite_err(struct sk_buff *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#315: FILE: include/net/udplite.h:109:
+extern int	    udplite_disconnect(struct sock *sk, int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#316: FILE: include/net/udplite.h:110:
+extern int	    udplite_ioctl(struct sock *sk, int cmd, unsigned long arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#317: FILE: include/net/udplite.h:111:
+extern int	    udplite_sendmsg(struct kiocb *iocb, struct sock *sk,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: include/net/udplite.h:114:
+extern int	   udplite_proc_register(struct udp_seq_afinfo *afinfo);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: include/net/udplite.h:115:
+extern void ^I   udplite_proc_unregister(struct udp_seq_afinfo *afinfo);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#321: FILE: include/net/udplite.h:115:
+extern void 	   udplite_proc_unregister(struct udp_seq_afinfo *afinfo);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#323: FILE: include/net/udplite.h:117:
+extern int  ^I   udplite4_proc_init(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#323: FILE: include/net/udplite.h:117:
+extern int  	   udplite4_proc_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#324: FILE: include/net/udplite.h:118:
+extern void	   udplite4_proc_exit(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#327: FILE: include/net/udplite.h:121:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#331: FILE: include/net/udplite.h:125:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: include/net/udplite.h:127:
+extern void	    udplitev6_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#334: FILE: include/net/udplite.h:128:
+extern void	    udplitev6_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#336: FILE: include/net/udplite.h:130:
+extern int	    udplite6_proc_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#337: FILE: include/net/udplite.h:131:
+extern void	    udplite6_proc_exit(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#341: FILE: include/net/udplite.h:135:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#362: FILE: include/net/udplite.h:156:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#368: FILE: include/net/udplite.h:162:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#375: FILE: include/net/udplite.h:169:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#379: FILE: include/net/udplite.h:173:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: include/net/udplite.h:175:
+inline void ^I    ^Iudplite4_register(void)  { }$

CHECK:SPACING: No space is necessary after a cast
#382: FILE: include/net/udplite.h:176:
+#define                 udplite4_mib_init(void)  (1)

CHECK:SPACING: No space is necessary after a cast
#384: FILE: include/net/udplite.h:178:
+#define			udplite4_proc_init(void) (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#388: FILE: include/net/udplite.h:182:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#390: FILE: include/net/udplite.h:184:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

CHECK:SPACING: No space is necessary after a cast
#394: FILE: include/net/udplite.h:188:
+#define			udplite6_proc_init(void) (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#401: FILE: include/net/udplite.h:195:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: include/linux/in.h:47:
+  IPPROTO_UDPLITE = 136,^I/* UDP-Lite Protocol (RFC 3828)^I        */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#434: FILE: net/core/sock.c:483:
+			 * hence user must not enable this option.   */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#437: FILE: net/core/sock.c:486:
+			else
+ 			    sk->sk_no_check = valbool;

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: net/core/sock.c:487:
+ ^I^I^I    sk->sk_no_check = valbool;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#438: FILE: net/core/sock.c:487:
+ ^I^I^I    sk->sk_no_check = valbool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: net/core/sock.c:487:
+ ^I^I^I    sk->sk_no_check = valbool;$

WARNING:TYPO_SPELLING: 'lenghts' may be misspelled - perhaps 'lengths'?
#681: FILE: Documentation/networking/udplite.txt:236:
+  coverage lenghts are likely to be expected.
            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000057097.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 33 warnings, 32 checks, 677 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000057097.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
