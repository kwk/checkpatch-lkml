WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#59: 
--- /usr/tmp/TmpDir.24518-0/linux/linux/fs/binfmt_elf.c_1.42    Thu Dec 11 16:59:53 2003

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: linux/fs/binfmt_elf.c:1087:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: linux/fs/binfmt_elf.c:1088:
+               struct mm_struct *mm = current->mm;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: linux/fs/binfmt_elf.c:1088:
+               struct mm_struct *mm = current->mm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: linux/fs/binfmt_elf.c:1089:
+               char *cmdline, *environ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: linux/fs/binfmt_elf.c:1089:
+               char *cmdline, *environ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: linux/fs/binfmt_elf.c:1091:
+               cmdline = kmalloc(PAGE_SIZE,GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: linux/fs/binfmt_elf.c:1091:
+               cmdline = kmalloc(PAGE_SIZE,GFP_KERNEL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#78: FILE: linux/fs/binfmt_elf.c:1091:
+               cmdline = kmalloc(PAGE_SIZE,GFP_KERNEL);
                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: linux/fs/binfmt_elf.c:1092:
+               environ = kmalloc(PAGE_SIZE,GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: linux/fs/binfmt_elf.c:1092:
+               environ = kmalloc(PAGE_SIZE,GFP_KERNEL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: linux/fs/binfmt_elf.c:1092:
+               environ = kmalloc(PAGE_SIZE,GFP_KERNEL);
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: linux/fs/binfmt_elf.c:1094:
+               if (cmdline != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: linux/fs/binfmt_elf.c:1094:
+               if (cmdline != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#81: FILE: linux/fs/binfmt_elf.c:1094:
+               if (cmdline != NULL) {
+                       int res = 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cmdline"
#81: FILE: linux/fs/binfmt_elf.c:1094:
+               if (cmdline != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: linux/fs/binfmt_elf.c:1095:
+                       int res = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: linux/fs/binfmt_elf.c:1095:
+                       int res = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: linux/fs/binfmt_elf.c:1096:
+                       int len = mm->arg_end - mm->arg_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: linux/fs/binfmt_elf.c:1096:
+                       int len = mm->arg_end - mm->arg_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: linux/fs/binfmt_elf.c:1097:
+                       if (len > PAGE_SIZE)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: linux/fs/binfmt_elf.c:1097:
+                       int len = mm->arg_end - mm->arg_start;
+                       if (len > PAGE_SIZE)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: linux/fs/binfmt_elf.c:1097:
+                       if (len > PAGE_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#84: FILE: linux/fs/binfmt_elf.c:1097:
+                       if (len > PAGE_SIZE)
+                               len = PAGE_SIZE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: linux/fs/binfmt_elf.c:1098:
+                               len = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: linux/fs/binfmt_elf.c:1098:
+                               len = PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: linux/fs/binfmt_elf.c:1099:
+                       res = access_process_vm(current, mm->arg_start, cmdline, len, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: linux/fs/binfmt_elf.c:1099:
+                       res = access_process_vm(current, mm->arg_start, cmdline, len, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: linux/fs/binfmt_elf.c:1100:
+                       // If the nul at the end of args has been overwritten, then$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: linux/fs/binfmt_elf.c:1101:
+                       // assume application is using setproctitle(3).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: linux/fs/binfmt_elf.c:1102:
+                       if ( res > 0 && cmdline[res-1] != '\0' )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: linux/fs/binfmt_elf.c:1102:
+                       if ( res > 0 && cmdline[res-1] != '\0' )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#89: FILE: linux/fs/binfmt_elf.c:1102:
+                       if ( res > 0 && cmdline[res-1] != '\0' )
+                       {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#89: FILE: linux/fs/binfmt_elf.c:1102:
+                       if ( res > 0 && cmdline[res-1] != '\0' )
+                       {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#89: FILE: linux/fs/binfmt_elf.c:1102:
+                       if ( res > 0 && cmdline[res-1] != '\0' )
                                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#89: FILE: linux/fs/binfmt_elf.c:1102:
+                       if ( res > 0 && cmdline[res-1] != '\0' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#89: FILE: linux/fs/binfmt_elf.c:1102:
+                       if ( res > 0 && cmdline[res-1] != '\0' )

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: linux/fs/binfmt_elf.c:1103:
+                       {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: linux/fs/binfmt_elf.c:1103:
+                       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: linux/fs/binfmt_elf.c:1104:
+                               len = strnlen( cmdline, res );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: linux/fs/binfmt_elf.c:1104:
+                               len = strnlen( cmdline, res );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#91: FILE: linux/fs/binfmt_elf.c:1104:
+                               len = strnlen( cmdline, res );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#91: FILE: linux/fs/binfmt_elf.c:1104:
+                               len = strnlen( cmdline, res );

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: linux/fs/binfmt_elf.c:1105:
+                               if ( len < res )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: linux/fs/binfmt_elf.c:1105:
+                               if ( len < res )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#92: FILE: linux/fs/binfmt_elf.c:1105:
+                               if ( len < res )
+                               {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 35)
#92: FILE: linux/fs/binfmt_elf.c:1105:
+                               if ( len < res )
+                               {

ERROR:SPACING: space prohibited after that open parenthesis '('
#92: FILE: linux/fs/binfmt_elf.c:1105:
+                               if ( len < res )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#92: FILE: linux/fs/binfmt_elf.c:1105:
+                               if ( len < res )

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: linux/fs/binfmt_elf.c:1106:
+                               {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: linux/fs/binfmt_elf.c:1106:
+                               {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: linux/fs/binfmt_elf.c:1107:
+                                   res = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: linux/fs/binfmt_elf.c:1107:
+                                   res = len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: linux/fs/binfmt_elf.c:1108:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: linux/fs/binfmt_elf.c:1108:
+                               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: linux/fs/binfmt_elf.c:1109:
+                               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: linux/fs/binfmt_elf.c:1109:
+                               else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#96: FILE: linux/fs/binfmt_elf.c:1109:
+                               else
+                               {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#96: FILE: linux/fs/binfmt_elf.c:1109:
+                               else
+                               {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#96: FILE: linux/fs/binfmt_elf.c:1109:
+                               }
+                               else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: linux/fs/binfmt_elf.c:1110:
+                               {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: linux/fs/binfmt_elf.c:1110:
+                               {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: linux/fs/binfmt_elf.c:1111:
+                                       len = mm->env_end - mm->env_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: linux/fs/binfmt_elf.c:1111:
+                                       len = mm->env_end - mm->env_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: linux/fs/binfmt_elf.c:1112:
+                                       if (len > PAGE_SIZE - res)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: linux/fs/binfmt_elf.c:1112:
+                                       if (len > PAGE_SIZE - res)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (39, 47)
#99: FILE: linux/fs/binfmt_elf.c:1112:
+                                       if (len > PAGE_SIZE - res)
+                                               len = PAGE_SIZE - res;

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: linux/fs/binfmt_elf.c:1113:
+                                               len = PAGE_SIZE - res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: linux/fs/binfmt_elf.c:1113:
+                                               len = PAGE_SIZE - res;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: linux/fs/binfmt_elf.c:1114:
+                                       res += access_process_vm(current, mm->env_start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: linux/fs/binfmt_elf.c:1114:
+                                       res += access_process_vm(current, mm->env_start,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: linux/fs/binfmt_elf.c:1115:
+                                                       cmdline+res, len, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: linux/fs/binfmt_elf.c:1115:
+                                                       cmdline+res, len, 0);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#102: FILE: linux/fs/binfmt_elf.c:1115:
+                                                       cmdline+res, len, 0);
                                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: linux/fs/binfmt_elf.c:1116:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: linux/fs/binfmt_elf.c:1116:
+                               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: linux/fs/binfmt_elf.c:1117:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: linux/fs/binfmt_elf.c:1117:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: linux/fs/binfmt_elf.c:1118:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: linux/fs/binfmt_elf.c:1118:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: linux/fs/binfmt_elf.c:1120:
+               if (environ != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: linux/fs/binfmt_elf.c:1120:
+               if (environ != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#107: FILE: linux/fs/binfmt_elf.c:1120:
+               if (environ != NULL) {
+                       int len = mm->env_end - mm->env_start;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "environ"
#107: FILE: linux/fs/binfmt_elf.c:1120:
+               if (environ != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: linux/fs/binfmt_elf.c:1121:
+                       int len = mm->env_end - mm->env_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: linux/fs/binfmt_elf.c:1121:
+                       int len = mm->env_end - mm->env_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: linux/fs/binfmt_elf.c:1122:
+                       if (len > PAGE_SIZE)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#109: FILE: linux/fs/binfmt_elf.c:1122:
+                       int len = mm->env_end - mm->env_start;
+                       if (len > PAGE_SIZE)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: linux/fs/binfmt_elf.c:1122:
+                       if (len > PAGE_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#109: FILE: linux/fs/binfmt_elf.c:1122:
+                       if (len > PAGE_SIZE)
+                               len = PAGE_SIZE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: linux/fs/binfmt_elf.c:1123:
+                               len = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: linux/fs/binfmt_elf.c:1123:
+                               len = PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: linux/fs/binfmt_elf.c:1124:
+                       (void) access_process_vm(current, mm->env_start, environ, len, 0);$

CHECK:SPACING: No space is necessary after a cast
#111: FILE: linux/fs/binfmt_elf.c:1124:
+                       (void) access_process_vm(current, mm->env_start, environ, len, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: linux/fs/binfmt_elf.c:1124:
+                       (void) access_process_vm(current, mm->env_start, environ, len, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: linux/fs/binfmt_elf.c:1125:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: linux/fs/binfmt_elf.c:1125:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: linux/fs/binfmt_elf.c:1126:
+               spin_lock(&mm->environ_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: linux/fs/binfmt_elf.c:1126:
+               spin_lock(&mm->environ_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: linux/fs/binfmt_elf.c:1127:
+               mm->cmdline = cmdline;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: linux/fs/binfmt_elf.c:1127:
+               mm->cmdline = cmdline;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: linux/fs/binfmt_elf.c:1128:
+               mm->environ = environ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: linux/fs/binfmt_elf.c:1128:
+               mm->environ = environ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: linux/fs/binfmt_elf.c:1129:
+               spin_unlock(&mm->environ_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: linux/fs/binfmt_elf.c:1129:
+               spin_unlock(&mm->environ_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: linux/fs/binfmt_elf.c:1130:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: linux/fs/binfmt_elf.c:1135:
+       { /* Temporary kludge to prevent core dumps from tying up /proc */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: linux/fs/binfmt_elf.c:1136:
+               struct vm_area_struct *vma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: linux/fs/binfmt_elf.c:1136:
+               struct vm_area_struct *vma;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: linux/fs/binfmt_elf.c:1137:
+               unsigned long area_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: linux/fs/binfmt_elf.c:1137:
+               unsigned long area_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: linux/fs/binfmt_elf.c:1138:
+               struct mm_struct *mm = current->mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: linux/fs/binfmt_elf.c:1138:
+               struct mm_struct *mm = current->mm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: linux/fs/binfmt_elf.c:1140:
+               mm->vsize = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: linux/fs/binfmt_elf.c:1140:
+               mm->vsize = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: linux/fs/binfmt_elf.c:1142:
+               mm->resident = mm->rss;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: linux/fs/binfmt_elf.c:1142:
+               mm->resident = mm->rss;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: linux/fs/binfmt_elf.c:1143:
+               mm->share = mm->trs = mm->drs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: linux/fs/binfmt_elf.c:1143:
+               mm->share = mm->trs = mm->drs = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#130: FILE: linux/fs/binfmt_elf.c:1143:
+               mm->share = mm->trs = mm->drs = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: linux/fs/binfmt_elf.c:1144:
+               mm->data = mm->stack = mm->exec = mm->lib = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: linux/fs/binfmt_elf.c:1144:
+               mm->data = mm->stack = mm->exec = mm->lib = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#131: FILE: linux/fs/binfmt_elf.c:1144:
+               mm->data = mm->stack = mm->exec = mm->lib = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: linux/fs/binfmt_elf.c:1146:
+               vma = mm->mmap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: linux/fs/binfmt_elf.c:1146:
+               vma = mm->mmap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: linux/fs/binfmt_elf.c:1147:
+               while (vma) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: linux/fs/binfmt_elf.c:1147:
+               while (vma) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#134: FILE: linux/fs/binfmt_elf.c:1147:
+               while (vma) {
+                       area_size = vma->vm_end - vma->vm_start;

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: linux/fs/binfmt_elf.c:1148:
+                       area_size = vma->vm_end - vma->vm_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: linux/fs/binfmt_elf.c:1148:
+                       area_size = vma->vm_end - vma->vm_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: linux/fs/binfmt_elf.c:1150:
+                       mm->vsize += area_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: linux/fs/binfmt_elf.c:1150:
+                       mm->vsize += area_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: linux/fs/binfmt_elf.c:1152:
+                       if (!vma->vm_file) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: linux/fs/binfmt_elf.c:1152:
+                       if (!vma->vm_file) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#139: FILE: linux/fs/binfmt_elf.c:1152:
+                       if (!vma->vm_file) {
+                               mm->data += area_size;

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: linux/fs/binfmt_elf.c:1153:
+                               mm->data += area_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: linux/fs/binfmt_elf.c:1153:
+                               mm->data += area_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: linux/fs/binfmt_elf.c:1154:
+                               if (vma->vm_flags & VM_GROWSDOWN)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: linux/fs/binfmt_elf.c:1154:
+                               if (vma->vm_flags & VM_GROWSDOWN)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#141: FILE: linux/fs/binfmt_elf.c:1154:
+                               if (vma->vm_flags & VM_GROWSDOWN)
+                                       mm->stack += area_size;

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: linux/fs/binfmt_elf.c:1155:
+                                       mm->stack += area_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: linux/fs/binfmt_elf.c:1155:
+                                       mm->stack += area_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: linux/fs/binfmt_elf.c:1156:
+                       } else if (!vma->vm_flags & VM_WRITE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: linux/fs/binfmt_elf.c:1156:
+                       } else if (!vma->vm_flags & VM_WRITE) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#143: FILE: linux/fs/binfmt_elf.c:1156:
+                       } else if (!vma->vm_flags & VM_WRITE) {
+                               if (vma->vm_flags & VM_EXEC) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: linux/fs/binfmt_elf.c:1157:
+                               if (vma->vm_flags & VM_EXEC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: linux/fs/binfmt_elf.c:1157:
+                               if (vma->vm_flags & VM_EXEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#144: FILE: linux/fs/binfmt_elf.c:1157:
+                               if (vma->vm_flags & VM_EXEC) {
+                                       mm->exec += area_size;

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: linux/fs/binfmt_elf.c:1158:
+                                       mm->exec += area_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: linux/fs/binfmt_elf.c:1158:
+                                       mm->exec += area_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: linux/fs/binfmt_elf.c:1159:
+                                       if (!vma->vm_flags & VM_EXECUTABLE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: linux/fs/binfmt_elf.c:1159:
+                                       if (!vma->vm_flags & VM_EXECUTABLE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (39, 47)
#146: FILE: linux/fs/binfmt_elf.c:1159:
+                                       if (!vma->vm_flags & VM_EXECUTABLE)
+                                               mm->lib += area_size;

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: linux/fs/binfmt_elf.c:1160:
+                                               mm->lib += area_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: linux/fs/binfmt_elf.c:1160:
+                                               mm->lib += area_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: linux/fs/binfmt_elf.c:1161:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: linux/fs/binfmt_elf.c:1161:
+                               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: linux/fs/binfmt_elf.c:1162:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: linux/fs/binfmt_elf.c:1162:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: linux/fs/binfmt_elf.c:1163:
+                       if (is_vm_hugetlb_page(vma)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: linux/fs/binfmt_elf.c:1163:
+                       if (is_vm_hugetlb_page(vma)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#150: FILE: linux/fs/binfmt_elf.c:1163:
+                       if (is_vm_hugetlb_page(vma)) {
+                               if (!(vma->vm_flags & VM_DONTCOPY))

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: linux/fs/binfmt_elf.c:1164:
+                               if (!(vma->vm_flags & VM_DONTCOPY))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: linux/fs/binfmt_elf.c:1164:
+                               if (!(vma->vm_flags & VM_DONTCOPY))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#151: FILE: linux/fs/binfmt_elf.c:1164:
+                               if (!(vma->vm_flags & VM_DONTCOPY))
+                                       mm->share += area_size;

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: linux/fs/binfmt_elf.c:1165:
+                                       mm->share += area_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: linux/fs/binfmt_elf.c:1165:
+                                       mm->share += area_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: linux/fs/binfmt_elf.c:1166:
+                               continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: linux/fs/binfmt_elf.c:1166:
+                               continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: linux/fs/binfmt_elf.c:1167:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: linux/fs/binfmt_elf.c:1167:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: linux/fs/binfmt_elf.c:1168:
+                       if (vma->vm_flags & VM_SHARED || vma->vm_next_share)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: linux/fs/binfmt_elf.c:1168:
+                       if (vma->vm_flags & VM_SHARED || vma->vm_next_share)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#155: FILE: linux/fs/binfmt_elf.c:1168:
+                       if (vma->vm_flags & VM_SHARED || vma->vm_next_share)
+                               mm->share += area_size;

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: linux/fs/binfmt_elf.c:1169:
+                               mm->share += area_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: linux/fs/binfmt_elf.c:1169:
+                               mm->share += area_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: linux/fs/binfmt_elf.c:1170:
+                       if (vma->vm_flags & VM_EXECUTABLE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: linux/fs/binfmt_elf.c:1170:
+                       if (vma->vm_flags & VM_EXECUTABLE) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#157: FILE: linux/fs/binfmt_elf.c:1170:
+                       if (vma->vm_flags & VM_EXECUTABLE) {
+                               mm->trs += area_size;   /* text */

CHECK:BRACES: braces {} should be used on all arms of this statement
#157: FILE: linux/fs/binfmt_elf.c:1170:
+                       if (vma->vm_flags & VM_EXECUTABLE) {
[...]
+                       } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: linux/fs/binfmt_elf.c:1171:
+                               mm->trs += area_size;   /* text */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: linux/fs/binfmt_elf.c:1171:
+                               mm->trs += area_size;   /* text */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: linux/fs/binfmt_elf.c:1172:
+                               if ((mm->exe_mnt == NULL) && (vma->vm_file)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: linux/fs/binfmt_elf.c:1172:
+                               if ((mm->exe_mnt == NULL) && (vma->vm_file)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#159: FILE: linux/fs/binfmt_elf.c:1172:
+                               if ((mm->exe_mnt == NULL) && (vma->vm_file)) {
+                                       mm->exe_mnt = mntget(vma->vm_file->f_vfsmnt);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mm->exe_mnt == NULL'
#159: FILE: linux/fs/binfmt_elf.c:1172:
+                               if ((mm->exe_mnt == NULL) && (vma->vm_file)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vma->vm_file'
#159: FILE: linux/fs/binfmt_elf.c:1172:
+                               if ((mm->exe_mnt == NULL) && (vma->vm_file)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm->exe_mnt"
#159: FILE: linux/fs/binfmt_elf.c:1172:
+                               if ((mm->exe_mnt == NULL) && (vma->vm_file)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: linux/fs/binfmt_elf.c:1173:
+                                       mm->exe_mnt = mntget(vma->vm_file->f_vfsmnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: linux/fs/binfmt_elf.c:1173:
+                                       mm->exe_mnt = mntget(vma->vm_file->f_vfsmnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: linux/fs/binfmt_elf.c:1174:
+                                       mm->exe_dentry = dget(vma->vm_file->f_dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: linux/fs/binfmt_elf.c:1174:
+                                       mm->exe_dentry = dget(vma->vm_file->f_dentry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: linux/fs/binfmt_elf.c:1175:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: linux/fs/binfmt_elf.c:1175:
+                               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: linux/fs/binfmt_elf.c:1176:
+                       } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: linux/fs/binfmt_elf.c:1176:
+                       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#163: FILE: linux/fs/binfmt_elf.c:1176:
+                       } else
+                               mm->drs += area_size;

CHECK:BRACES: Unbalanced braces around else statement
#163: FILE: linux/fs/binfmt_elf.c:1176:
+                       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: linux/fs/binfmt_elf.c:1177:
+                               mm->drs += area_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: linux/fs/binfmt_elf.c:1177:
+                               mm->drs += area_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: linux/fs/binfmt_elf.c:1179:
+                       vma = vma->vm_next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: linux/fs/binfmt_elf.c:1179:
+                       vma = vma->vm_next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: linux/fs/binfmt_elf.c:1180:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: linux/fs/binfmt_elf.c:1180:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: linux/fs/binfmt_elf.c:1181:
+               mm->eip = KSTK_EIP(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: linux/fs/binfmt_elf.c:1181:
+               mm->eip = KSTK_EIP(current);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: linux/fs/binfmt_elf.c:1182:
+               mm->esp = KSTK_ESP(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: linux/fs/binfmt_elf.c:1182:
+               mm->esp = KSTK_ESP(current);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: linux/fs/binfmt_elf.c:1183:
+               atomic_inc(&mm->vsize_valid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: linux/fs/binfmt_elf.c:1183:
+               atomic_inc(&mm->vsize_valid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: linux/fs/binfmt_elf.c:1184:
+       } /* end kludge */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: linux/fs/binfmt_elf.c:1381:
+       spin_lock(&current->mm->environ_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: linux/fs/binfmt_elf.c:1382:
+       if (current->mm->cmdline != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#181: FILE: linux/fs/binfmt_elf.c:1382:
+       if (current->mm->cmdline != NULL) {
+               kfree(current->mm->cmdline);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current->mm->cmdline"
#181: FILE: linux/fs/binfmt_elf.c:1382:
+       if (current->mm->cmdline != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: linux/fs/binfmt_elf.c:1383:
+               kfree(current->mm->cmdline);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: linux/fs/binfmt_elf.c:1383:
+               kfree(current->mm->cmdline);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: linux/fs/binfmt_elf.c:1384:
+               current->mm->cmdline = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: linux/fs/binfmt_elf.c:1384:
+               current->mm->cmdline = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: linux/fs/binfmt_elf.c:1385:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: linux/fs/binfmt_elf.c:1386:
+       if (current->mm->environ != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#185: FILE: linux/fs/binfmt_elf.c:1386:
+       if (current->mm->environ != NULL) {
+               kfree(current->mm->environ);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current->mm->environ"
#185: FILE: linux/fs/binfmt_elf.c:1386:
+       if (current->mm->environ != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: linux/fs/binfmt_elf.c:1387:
+               kfree(current->mm->environ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: linux/fs/binfmt_elf.c:1387:
+               kfree(current->mm->environ);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: linux/fs/binfmt_elf.c:1388:
+               current->mm->environ = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: linux/fs/binfmt_elf.c:1388:
+               current->mm->environ = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: linux/fs/binfmt_elf.c:1389:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: linux/fs/binfmt_elf.c:1390:
+       spin_unlock(&current->mm->environ_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: linux/fs/binfmt_elf.c:1391:
+       atomic_dec(&current->mm->vsize_valid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: linux/fs/binfmt_elf.c:1392:
+       current->mm->exe_mnt = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: linux/fs/proc/array.c:186:
+       int got_lock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: linux/fs/proc/array.c:188:
+       while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#222: FILE: linux/fs/proc/array.c:188:
+       while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&
[...]
+       };

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: linux/fs/proc/array.c:189:
+               (atomic_read(&mm->vsize_valid) == 0)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: linux/fs/proc/array.c:189:
+       while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&
+               (atomic_read(&mm->vsize_valid) == 0)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: linux/fs/proc/array.c:189:
+               (atomic_read(&mm->vsize_valid) == 0)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: linux/fs/proc/array.c:190:
+       };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: linux/fs/proc/array.c:191:
+       if (got_lock != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#225: FILE: linux/fs/proc/array.c:191:
+       if (got_lock != 0) {
+               for (vma = mm->mmap; vma; vma = vma->vm_next) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: linux/fs/proc/array.c:192:
+               for (vma = mm->mmap; vma; vma = vma->vm_next) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: linux/fs/proc/array.c:192:
+               for (vma = mm->mmap; vma; vma = vma->vm_next) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#226: FILE: linux/fs/proc/array.c:192:
+               for (vma = mm->mmap; vma; vma = vma->vm_next) {
+                       unsigned long len = (vma->vm_end - vma->vm_start) >> 10;

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: linux/fs/proc/array.c:193:
+                       unsigned long len = (vma->vm_end - vma->vm_start) >> 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: linux/fs/proc/array.c:193:
+                       unsigned long len = (vma->vm_end - vma->vm_start) >> 10;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: linux/fs/proc/array.c:194:
+                       if (!vma->vm_file) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#228: FILE: linux/fs/proc/array.c:194:
+                       unsigned long len = (vma->vm_end - vma->vm_start) >> 10;
+                       if (!vma->vm_file) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: linux/fs/proc/array.c:194:
+                       if (!vma->vm_file) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#228: FILE: linux/fs/proc/array.c:194:
+                       if (!vma->vm_file) {
+                               data += len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: linux/fs/proc/array.c:195:
+                               data += len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: linux/fs/proc/array.c:195:
+                               data += len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: linux/fs/proc/array.c:196:
+                               if (vma->vm_flags & VM_GROWSDOWN)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: linux/fs/proc/array.c:196:
+                               if (vma->vm_flags & VM_GROWSDOWN)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#230: FILE: linux/fs/proc/array.c:196:
+                               if (vma->vm_flags & VM_GROWSDOWN)
+                                       stack += len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: linux/fs/proc/array.c:197:
+                                       stack += len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: linux/fs/proc/array.c:197:
+                                       stack += len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: linux/fs/proc/array.c:198:
+                               continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: linux/fs/proc/array.c:198:
+                               continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: linux/fs/proc/array.c:199:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: linux/fs/proc/array.c:199:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: linux/fs/proc/array.c:200:
+                       if (vma->vm_flags & VM_WRITE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: linux/fs/proc/array.c:200:
+                       if (vma->vm_flags & VM_WRITE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#234: FILE: linux/fs/proc/array.c:200:
+                       if (vma->vm_flags & VM_WRITE)
                                continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: linux/fs/proc/array.c:202:
+                       if (vma->vm_flags & VM_EXEC) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: linux/fs/proc/array.c:202:
+                       if (vma->vm_flags & VM_EXEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#237: FILE: linux/fs/proc/array.c:202:
+                       if (vma->vm_flags & VM_EXEC) {
+                               exec += len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: linux/fs/proc/array.c:203:
+                               exec += len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: linux/fs/proc/array.c:203:
+                               exec += len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: linux/fs/proc/array.c:204:
+                               if (vma->vm_flags & VM_EXECUTABLE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: linux/fs/proc/array.c:204:
+                               if (vma->vm_flags & VM_EXECUTABLE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#239: FILE: linux/fs/proc/array.c:204:
+                               if (vma->vm_flags & VM_EXECUTABLE)
+                                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: linux/fs/proc/array.c:205:
+                                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: linux/fs/proc/array.c:205:
+                                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: linux/fs/proc/array.c:206:
+                               lib += len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: linux/fs/proc/array.c:206:
+                               lib += len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: linux/fs/proc/array.c:207:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: linux/fs/proc/array.c:207:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: linux/fs/proc/array.c:209:
+               up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: linux/fs/proc/array.c:209:
+               up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: linux/fs/proc/array.c:210:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#245: FILE: linux/fs/proc/array.c:210:
+       } else {
+               data = mm->vsize >> 10;

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: linux/fs/proc/array.c:211:
+               data = mm->vsize >> 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: linux/fs/proc/array.c:211:
+               data = mm->vsize >> 10;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: linux/fs/proc/array.c:212:
+               stack = mm->stack >> 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: linux/fs/proc/array.c:212:
+               stack = mm->stack >> 10;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: linux/fs/proc/array.c:213:
+               exec = mm->exec >> 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: linux/fs/proc/array.c:213:
+               exec = mm->exec >> 10;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: linux/fs/proc/array.c:214:
+               lib = mm->lib >> 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: linux/fs/proc/array.c:214:
+               lib = mm->lib >> 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: linux/fs/proc/array.c:322:
+       int got_lock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: linux/fs/proc/array.c:337:
+               while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: linux/fs/proc/array.c:337:
+               while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 15)
#278: FILE: linux/fs/proc/array.c:337:
+               while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&
[...]
+               };

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: linux/fs/proc/array.c:338:
+                       (atomic_read(&mm->vsize_valid) == 0)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: linux/fs/proc/array.c:338:
+               while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&
+                       (atomic_read(&mm->vsize_valid) == 0)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: linux/fs/proc/array.c:338:
+                       (atomic_read(&mm->vsize_valid) == 0)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: linux/fs/proc/array.c:339:
+               };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: linux/fs/proc/array.c:339:
+               };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: linux/fs/proc/array.c:340:
+               if (got_lock != 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: linux/fs/proc/array.c:340:
+               if (got_lock != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#281: FILE: linux/fs/proc/array.c:340:
+               if (got_lock != 0) {
+                       vma = mm->mmap;

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: linux/fs/proc/array.c:341:
+                       vma = mm->mmap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: linux/fs/proc/array.c:341:
+                       vma = mm->mmap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: linux/fs/proc/array.c:342:
+                       while (vma) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: linux/fs/proc/array.c:342:
+                       while (vma) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#283: FILE: linux/fs/proc/array.c:342:
+                       while (vma) {
+                               vsize += vma->vm_end - vma->vm_start;

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: linux/fs/proc/array.c:343:
+                               vsize += vma->vm_end - vma->vm_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: linux/fs/proc/array.c:343:
+                               vsize += vma->vm_end - vma->vm_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: linux/fs/proc/array.c:344:
+                               vma = vma->vm_next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: linux/fs/proc/array.c:344:
+                               vma = vma->vm_next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: linux/fs/proc/array.c:345:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: linux/fs/proc/array.c:345:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: linux/fs/proc/array.c:346:
+                       eip = KSTK_EIP(task);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: linux/fs/proc/array.c:346:
+                       eip = KSTK_EIP(task);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: linux/fs/proc/array.c:347:
+                       esp = KSTK_ESP(task);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: linux/fs/proc/array.c:347:
+                       esp = KSTK_ESP(task);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: linux/fs/proc/array.c:348:
+                       up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: linux/fs/proc/array.c:348:
+                       up_read(&mm->mmap_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: linux/fs/proc/array.c:349:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: linux/fs/proc/array.c:349:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#290: FILE: linux/fs/proc/array.c:349:
+               } else {
+                       vsize = mm->vsize;

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: linux/fs/proc/array.c:350:
+                       vsize = mm->vsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: linux/fs/proc/array.c:350:
+                       vsize = mm->vsize;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: linux/fs/proc/array.c:351:
+                       eip = mm->eip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: linux/fs/proc/array.c:351:
+                       eip = mm->eip;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: linux/fs/proc/array.c:352:
+                       esp = mm->esp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: linux/fs/proc/array.c:352:
+                       esp = mm->esp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: linux/fs/proc/array.c:431:
+               int got_lock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: linux/fs/proc/array.c:431:
+               int got_lock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: linux/fs/proc/array.c:433:
+               while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: linux/fs/proc/array.c:433:
+               while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 15)
#316: FILE: linux/fs/proc/array.c:433:
+               while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&
[...]
+               };

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: linux/fs/proc/array.c:434:
+                       (atomic_read(&mm->vsize_valid) == 0)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: linux/fs/proc/array.c:434:
+               while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&
+                       (atomic_read(&mm->vsize_valid) == 0)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: linux/fs/proc/array.c:434:
+                       (atomic_read(&mm->vsize_valid) == 0)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: linux/fs/proc/array.c:435:
+               };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: linux/fs/proc/array.c:435:
+               };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: linux/fs/proc/array.c:436:
+               if (got_lock != 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: linux/fs/proc/array.c:436:
+               if (got_lock != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#319: FILE: linux/fs/proc/array.c:436:
+               if (got_lock != 0) {
+                       resident = mm->rss;

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: linux/fs/proc/array.c:437:
+                       resident = mm->rss;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: linux/fs/proc/array.c:437:
+                       resident = mm->rss;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: linux/fs/proc/array.c:439:
+                       for (vma = mm->mmap; vma; vma = vma->vm_next) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: linux/fs/proc/array.c:439:
+                       for (vma = mm->mmap; vma; vma = vma->vm_next) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#322: FILE: linux/fs/proc/array.c:439:
+                       for (vma = mm->mmap; vma; vma = vma->vm_next) {
+                               int pages = (vma->vm_end - vma->vm_start) >> PAGE_SHIFT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: linux/fs/proc/array.c:440:
+                               int pages = (vma->vm_end - vma->vm_start) >> PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: linux/fs/proc/array.c:440:
+                               int pages = (vma->vm_end - vma->vm_start) >> PAGE_SHIFT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: linux/fs/proc/array.c:442:
+                               size += pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: linux/fs/proc/array.c:442:
+                               size += pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: linux/fs/proc/array.c:443:
+                               if (is_vm_hugetlb_page(vma)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: linux/fs/proc/array.c:443:
+                               if (is_vm_hugetlb_page(vma)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#326: FILE: linux/fs/proc/array.c:443:
+                               if (is_vm_hugetlb_page(vma)) {
+                                       if (!(vma->vm_flags & VM_DONTCOPY))

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: linux/fs/proc/array.c:444:
+                                       if (!(vma->vm_flags & VM_DONTCOPY))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: linux/fs/proc/array.c:444:
+                                       if (!(vma->vm_flags & VM_DONTCOPY))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (39, 47)
#327: FILE: linux/fs/proc/array.c:444:
+                                       if (!(vma->vm_flags & VM_DONTCOPY))
+                                               share += pages;

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: linux/fs/proc/array.c:445:
+                                               share += pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: linux/fs/proc/array.c:445:
+                                               share += pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: linux/fs/proc/array.c:446:
+                                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: linux/fs/proc/array.c:446:
+                                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: linux/fs/proc/array.c:447:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: linux/fs/proc/array.c:447:
+                               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: linux/fs/proc/array.c:448:
+                               if (vma->vm_flags & VM_SHARED || vma->vm_next_share)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: linux/fs/proc/array.c:448:
+                               if (vma->vm_flags & VM_SHARED || vma->vm_next_share)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#331: FILE: linux/fs/proc/array.c:448:
+                               if (vma->vm_flags & VM_SHARED || vma->vm_next_share)
                                        share += pages;

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: linux/fs/proc/array.c:450:
+                               if (vma->vm_flags & VM_EXECUTABLE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: linux/fs/proc/array.c:450:
+                               if (vma->vm_flags & VM_EXECUTABLE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#334: FILE: linux/fs/proc/array.c:450:
+                               if (vma->vm_flags & VM_EXECUTABLE)
+                                       trs += pages;   /* text */

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: linux/fs/proc/array.c:451:
+                                       trs += pages;   /* text */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: linux/fs/proc/array.c:451:
+                                       trs += pages;   /* text */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: linux/fs/proc/array.c:452:
+                               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: linux/fs/proc/array.c:452:
+                               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#336: FILE: linux/fs/proc/array.c:452:
+                               else
+                                       drs += pages;

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: linux/fs/proc/array.c:453:
+                                       drs += pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: linux/fs/proc/array.c:453:
+                                       drs += pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: linux/fs/proc/array.c:455:
+                       up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: linux/fs/proc/array.c:455:
+                       up_read(&mm->mmap_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: linux/fs/proc/array.c:456:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: linux/fs/proc/array.c:456:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#346: FILE: linux/fs/proc/array.c:456:
+               } else {
+                       resident = mm->resident;

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: linux/fs/proc/array.c:457:
+                       resident = mm->resident;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: linux/fs/proc/array.c:457:
+                       resident = mm->resident;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: linux/fs/proc/array.c:458:
+                       size = mm->vsize >> 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: linux/fs/proc/array.c:458:
+                       size = mm->vsize >> 16;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: linux/fs/proc/array.c:459:
+                       share = mm->share >> 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: linux/fs/proc/array.c:459:
+                       share = mm->share >> 16;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: linux/fs/proc/array.c:460:
+                       trs = mm->trs >> 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: linux/fs/proc/array.c:460:
+                       trs = mm->trs >> 16;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: linux/fs/proc/array.c:461:
+                       drs = mm->drs >> 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: linux/fs/proc/array.c:461:
+                       drs = mm->drs >> 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: linux/fs/proc/base.c:61:
+       int got_lock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: linux/fs/proc/base.c:70:
+       while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#383: FILE: linux/fs/proc/base.c:70:
+       while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&
[...]
+       };

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: linux/fs/proc/base.c:71:
+               (atomic_read(&mm->vsize_valid) == 0)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: linux/fs/proc/base.c:71:
+       while (((got_lock = down_read_trylock(&mm->mmap_sem)) == 0) &&
+               (atomic_read(&mm->vsize_valid) == 0)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: linux/fs/proc/base.c:71:
+               (atomic_read(&mm->vsize_valid) == 0)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: linux/fs/proc/base.c:72:
+       };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: linux/fs/proc/base.c:73:
+       if (got_lock != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#386: FILE: linux/fs/proc/base.c:73:
+       if (got_lock != 0) {
+               vma = mm->mmap;

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: linux/fs/proc/base.c:74:
+               vma = mm->mmap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: linux/fs/proc/base.c:74:
+               vma = mm->mmap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: linux/fs/proc/base.c:75:
+               while (vma) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: linux/fs/proc/base.c:75:
+               while (vma) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#388: FILE: linux/fs/proc/base.c:75:
+               while (vma) {
+                       if ((vma->vm_flags & VM_EXECUTABLE) && 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: linux/fs/proc/base.c:76:
+                       if ((vma->vm_flags & VM_EXECUTABLE) && $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: linux/fs/proc/base.c:76:
+                       if ((vma->vm_flags & VM_EXECUTABLE) && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: linux/fs/proc/base.c:76:
+                       if ((vma->vm_flags & VM_EXECUTABLE) && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#389: FILE: linux/fs/proc/base.c:76:
+                       if ((vma->vm_flags & VM_EXECUTABLE) && 
[...]
+                               *mnt = mntget(vma->vm_file->f_vfsmnt);

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: linux/fs/proc/base.c:77:
+                           vma->vm_file) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: linux/fs/proc/base.c:77:
+                           vma->vm_file) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: linux/fs/proc/base.c:78:
+                               *mnt = mntget(vma->vm_file->f_vfsmnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: linux/fs/proc/base.c:78:
+                               *mnt = mntget(vma->vm_file->f_vfsmnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: linux/fs/proc/base.c:79:
+                               *dentry = dget(vma->vm_file->f_dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: linux/fs/proc/base.c:79:
+                               *dentry = dget(vma->vm_file->f_dentry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: linux/fs/proc/base.c:80:
+                               result = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: linux/fs/proc/base.c:80:
+                               result = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: linux/fs/proc/base.c:81:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: linux/fs/proc/base.c:81:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: linux/fs/proc/base.c:82:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: linux/fs/proc/base.c:82:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: linux/fs/proc/base.c:83:
+                       vma = vma->vm_next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: linux/fs/proc/base.c:83:
+                       vma = vma->vm_next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: linux/fs/proc/base.c:84:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: linux/fs/proc/base.c:84:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: linux/fs/proc/base.c:85:
+               up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: linux/fs/proc/base.c:85:
+               up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: linux/fs/proc/base.c:86:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#399: FILE: linux/fs/proc/base.c:86:
+       } else {
+               if (mm->exe_mnt != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: linux/fs/proc/base.c:87:
+               if (mm->exe_mnt != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: linux/fs/proc/base.c:87:
+               if (mm->exe_mnt != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#400: FILE: linux/fs/proc/base.c:87:
+               if (mm->exe_mnt != NULL) {
+                       *mnt = mm->exe_mnt;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mm->exe_mnt"
#400: FILE: linux/fs/proc/base.c:87:
+               if (mm->exe_mnt != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: linux/fs/proc/base.c:88:
+                       *mnt = mm->exe_mnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: linux/fs/proc/base.c:88:
+                       *mnt = mm->exe_mnt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: linux/fs/proc/base.c:89:
+                       *dentry = mm->exe_dentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: linux/fs/proc/base.c:89:
+                       *dentry = mm->exe_dentry;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#415: FILE: linux/fs/proc/base.c:181:
        if (mm) {
+               spin_lock(&mm->environ_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: linux/fs/proc/base.c:182:
+               spin_lock(&mm->environ_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: linux/fs/proc/base.c:182:
+               spin_lock(&mm->environ_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: linux/fs/proc/base.c:183:
+               if (mm->environ != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: linux/fs/proc/base.c:183:
+               if (mm->environ != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#423: FILE: linux/fs/proc/base.c:183:
+               if (mm->environ != NULL) {
+                       res = strnlen(mm->environ, PAGE_SIZE);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mm->environ"
#423: FILE: linux/fs/proc/base.c:183:
+               if (mm->environ != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: linux/fs/proc/base.c:184:
+                       res = strnlen(mm->environ, PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: linux/fs/proc/base.c:184:
+                       res = strnlen(mm->environ, PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: linux/fs/proc/base.c:185:
+                       memcpy(buffer, mm->environ, res);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: linux/fs/proc/base.c:185:
+                       memcpy(buffer, mm->environ, res);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: linux/fs/proc/base.c:186:
+                       spin_unlock(&mm->environ_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: linux/fs/proc/base.c:186:
+                       spin_unlock(&mm->environ_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: linux/fs/proc/base.c:187:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: linux/fs/proc/base.c:187:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#427: FILE: linux/fs/proc/base.c:187:
+               } else {
+                       int len = mm->env_end - mm->env_start;

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: linux/fs/proc/base.c:188:
+                       int len = mm->env_end - mm->env_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: linux/fs/proc/base.c:188:
+                       int len = mm->env_end - mm->env_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: linux/fs/proc/base.c:189:
+                       spin_unlock(&mm->environ_lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#429: FILE: linux/fs/proc/base.c:189:
+                       int len = mm->env_end - mm->env_start;
+                       spin_unlock(&mm->environ_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: linux/fs/proc/base.c:189:
+                       spin_unlock(&mm->environ_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: linux/fs/proc/base.c:190:
+                       if (len > PAGE_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: linux/fs/proc/base.c:190:
+                       if (len > PAGE_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#430: FILE: linux/fs/proc/base.c:190:
+                       if (len > PAGE_SIZE)
+                               len = PAGE_SIZE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: linux/fs/proc/base.c:191:
+                               len = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: linux/fs/proc/base.c:191:
+                               len = PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: linux/fs/proc/base.c:192:
+                       res = access_process_vm(task, mm->env_start, buffer, len, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: linux/fs/proc/base.c:192:
+                       res = access_process_vm(task, mm->env_start, buffer, len, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: linux/fs/proc/base.c:193:
+                       if (!may_ptrace_attach(task))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: linux/fs/proc/base.c:193:
+                       if (!may_ptrace_attach(task))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#433: FILE: linux/fs/proc/base.c:193:
+                       if (!may_ptrace_attach(task))
+                               res = -ESRCH;

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: linux/fs/proc/base.c:194:
+                               res = -ESRCH;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: linux/fs/proc/base.c:194:
+                               res = -ESRCH;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: linux/fs/proc/base.c:195:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: linux/fs/proc/base.c:195:
+               }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#442: FILE: linux/fs/proc/base.c:210:
        if (mm) {
+               spin_lock(&mm->environ_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: linux/fs/proc/base.c:211:
+               spin_lock(&mm->environ_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: linux/fs/proc/base.c:211:
+               spin_lock(&mm->environ_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: linux/fs/proc/base.c:212:
+               if (mm->cmdline != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: linux/fs/proc/base.c:212:
+               if (mm->cmdline != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#458: FILE: linux/fs/proc/base.c:212:
+               if (mm->cmdline != NULL) {
+                       res = strnlen(mm->cmdline, PAGE_SIZE);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mm->cmdline"
#458: FILE: linux/fs/proc/base.c:212:
+               if (mm->cmdline != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: linux/fs/proc/base.c:213:
+                       res = strnlen(mm->cmdline, PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: linux/fs/proc/base.c:213:
+                       res = strnlen(mm->cmdline, PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: linux/fs/proc/base.c:214:
+                       memcpy(buffer, mm->cmdline, res);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: linux/fs/proc/base.c:214:
+                       memcpy(buffer, mm->cmdline, res);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: linux/fs/proc/base.c:215:
+                       spin_unlock(&mm->environ_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: linux/fs/proc/base.c:215:
+                       spin_unlock(&mm->environ_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: linux/fs/proc/base.c:216:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: linux/fs/proc/base.c:216:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#462: FILE: linux/fs/proc/base.c:216:
+               } else {
+                       int len = mm->arg_end - mm->arg_start;

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: linux/fs/proc/base.c:217:
+                       int len = mm->arg_end - mm->arg_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: linux/fs/proc/base.c:217:
+                       int len = mm->arg_end - mm->arg_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: linux/fs/proc/base.c:218:
+                       spin_unlock(&mm->environ_lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#464: FILE: linux/fs/proc/base.c:218:
+                       int len = mm->arg_end - mm->arg_start;
+                       spin_unlock(&mm->environ_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: linux/fs/proc/base.c:218:
+                       spin_unlock(&mm->environ_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: linux/fs/proc/base.c:219:
+                       if (len > PAGE_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: linux/fs/proc/base.c:219:
+                       if (len > PAGE_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#465: FILE: linux/fs/proc/base.c:219:
+                       if (len > PAGE_SIZE)
+                               len = PAGE_SIZE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: linux/fs/proc/base.c:220:
+                               len = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: linux/fs/proc/base.c:220:
+                               len = PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: linux/fs/proc/base.c:221:
+                       res = access_process_vm(task, mm->arg_start, buffer, len, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: linux/fs/proc/base.c:221:
+                       res = access_process_vm(task, mm->arg_start, buffer, len, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: linux/fs/proc/base.c:222:
+                       // If the nul at the end of args has been overwritten, then$

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: linux/fs/proc/base.c:223:
+                       // assume application is using setproctitle(3).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: linux/fs/proc/base.c:224:
+                       if ( res > 0 && buffer[res-1] != '\0' )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: linux/fs/proc/base.c:224:
+                       if ( res > 0 && buffer[res-1] != '\0' )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#470: FILE: linux/fs/proc/base.c:224:
+                       if ( res > 0 && buffer[res-1] != '\0' )
                        {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#470: FILE: linux/fs/proc/base.c:224:
+                       if ( res > 0 && buffer[res-1] != '\0' )
                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#470: FILE: linux/fs/proc/base.c:224:
+                       if ( res > 0 && buffer[res-1] != '\0' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#470: FILE: linux/fs/proc/base.c:224:
+                       if ( res > 0 && buffer[res-1] != '\0' )

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: linux/fs/proc/base.c:226:
+                               len = strnlen( buffer, res );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: linux/fs/proc/base.c:226:
+                               len = strnlen( buffer, res );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#477: FILE: linux/fs/proc/base.c:226:
+                               len = strnlen( buffer, res );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#477: FILE: linux/fs/proc/base.c:226:
+                               len = strnlen( buffer, res );

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: linux/fs/proc/base.c:227:
+                               if ( len < res )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: linux/fs/proc/base.c:227:
+                               if ( len < res )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#478: FILE: linux/fs/proc/base.c:227:
+                               if ( len < res )
+                               {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 35)
#478: FILE: linux/fs/proc/base.c:227:
+                               if ( len < res )
+                               {

ERROR:SPACING: space prohibited after that open parenthesis '('
#478: FILE: linux/fs/proc/base.c:227:
+                               if ( len < res )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#478: FILE: linux/fs/proc/base.c:227:
+                               if ( len < res )

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: linux/fs/proc/base.c:228:
+                               {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: linux/fs/proc/base.c:228:
+                               {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: linux/fs/proc/base.c:229:
+                                   res = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: linux/fs/proc/base.c:229:
+                                   res = len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: linux/fs/proc/base.c:230:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: linux/fs/proc/base.c:230:
+                               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: linux/fs/proc/base.c:231:
+                               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: linux/fs/proc/base.c:231:
+                               else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#482: FILE: linux/fs/proc/base.c:231:
+                               else
+                               {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#482: FILE: linux/fs/proc/base.c:231:
+                               else
+                               {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#482: FILE: linux/fs/proc/base.c:231:
+                               }
+                               else

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: linux/fs/proc/base.c:232:
+                               {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: linux/fs/proc/base.c:232:
+                               {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: linux/fs/proc/base.c:233:
+                                       len = mm->env_end - mm->env_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: linux/fs/proc/base.c:233:
+                                       len = mm->env_end - mm->env_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: linux/fs/proc/base.c:234:
+                                       if (len > PAGE_SIZE - res)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: linux/fs/proc/base.c:234:
+                                       if (len > PAGE_SIZE - res)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (39, 47)
#485: FILE: linux/fs/proc/base.c:234:
+                                       if (len > PAGE_SIZE - res)
+                                               len = PAGE_SIZE - res;

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: linux/fs/proc/base.c:235:
+                                               len = PAGE_SIZE - res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: linux/fs/proc/base.c:235:
+                                               len = PAGE_SIZE - res;$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#487: FILE: linux/fs/proc/base.c:236:
+                                       res += access_process_vm(task, mm->env_start, buffer+res, len, 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: linux/fs/proc/base.c:236:
+                                       res += access_process_vm(task, mm->env_start, buffer+res, len, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: linux/fs/proc/base.c:236:
+                                       res += access_process_vm(task, mm->env_start, buffer+res, len, 0);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#487: FILE: linux/fs/proc/base.c:236:
+                                       res += access_process_vm(task, mm->env_start, buffer+res, len, 0);
                                                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: linux/fs/proc/base.c:237:
+                                       res = strnlen( buffer, res );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: linux/fs/proc/base.c:237:
+                                       res = strnlen( buffer, res );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#488: FILE: linux/fs/proc/base.c:237:
+                                       res = strnlen( buffer, res );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#488: FILE: linux/fs/proc/base.c:237:
+                                       res = strnlen( buffer, res );

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: linux/fs/proc/base.c:238:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: linux/fs/proc/base.c:238:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: linux/include/linux/sched.h:226:
+       atomic_t vsize_valid;                   /* following 5 are valid */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: linux/include/linux/sched.h:227:
+        unsigned long vsize, eip, esp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: linux/include/linux/sched.h:227:
+        unsigned long vsize, eip, esp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: linux/include/linux/sched.h:228:
+       unsigned long resident, share, trs, drs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: linux/include/linux/sched.h:229:
+       unsigned long data, stack, exec, lib;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: linux/include/linux/sched.h:230:
+       struct vfsmount *exe_mnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: linux/include/linux/sched.h:231:
+       struct dentry *exe_dentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: linux/include/linux/sched.h:232:
+       spinlock_t environ_lock;                /* protect environ and cmdline */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: linux/include/linux/sched.h:233:
+       char *environ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: linux/include/linux/sched.h:234:
+       char *cmdline;$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#520: FILE: linux/include/linux/sched.h:269:
+       vsize_valid:    ATOMIC_INIT(0),                 \
                   ^

WARNING:INDENTED_LABEL: labels should not be indented
#520: FILE: linux/include/linux/sched.h:269:
+       vsize_valid:    ATOMIC_INIT(0),                 \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#521: FILE: linux/include/linux/sched.h:270:
+       environ_lock:   SPIN_LOCK_UNLOCKED,             \
                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#521: FILE: linux/include/linux/sched.h:270:
+       environ_lock:   SPIN_LOCK_UNLOCKED,             \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#522: FILE: linux/include/linux/sched.h:271:
+       exe_mnt:        NULL,                           \
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#522: FILE: linux/include/linux/sched.h:271:
+       exe_mnt:        NULL,                           \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#523: FILE: linux/include/linux/sched.h:272:
+       environ:        NULL,                           \
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#523: FILE: linux/include/linux/sched.h:272:
+       environ:        NULL,                           \

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#524: FILE: linux/include/linux/sched.h:273:
+       cmdline:        NULL,                           \
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#524: FILE: linux/include/linux/sched.h:273:
+       cmdline:        NULL,                           \

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000319138.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 235 errors, 308 warnings, 23 checks, 432 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000319138.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
