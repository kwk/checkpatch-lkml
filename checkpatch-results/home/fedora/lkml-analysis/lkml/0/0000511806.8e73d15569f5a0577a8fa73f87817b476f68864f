WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
diff -u --recursive --new-file linux-2.4.10-rdplus/fs/lockd/clntproc.c linux-2.4.10-locks/fs/lockd/clntproc.c

CHECK:BRACES: braces {} should be used on all arms of this statement
#62: FILE: fs/lockd/clntproc.c:169:
+	if (IS_SETLK(cmd) || IS_SETLKW(cmd)) {
[...]
+	} else if (IS_GETLK(cmd))
[...]
-	} else if ((cmd == F_SETLK || cmd == F_SETLKW)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#63: FILE: fs/lockd/clntproc.c:170:
+		if (fl->fl_type != F_UNLCK) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#66: FILE: fs/lockd/clntproc.c:173:
+		} else

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#176: FILE: fs/locks.c:1372:
+	error = flock_to_posix_lock(filp, &file_lock, &flock);
 	                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#187: FILE: fs/locks.c:1462:
+	error = flock_to_posix_lock(filp, file_lock, &flock);
 	                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#198: FILE: fs/locks.c:1537:
+	error = flock64_to_posix_lock(filp, &file_lock, &flock);
 	                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#209: FILE: fs/locks.c:1615:
+	error = flock64_to_posix_lock(filp, file_lock, &flock);
 	                              ^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cmd' - possible side-effects?
#260: FILE: include/linux/fcntl.h:44:
+#define IS_GETLK(cmd)	(IS_GETLK32(cmd)  || IS_GETLK64(cmd))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cmd' - possible side-effects?
#261: FILE: include/linux/fcntl.h:45:
+#define IS_SETLK(cmd)	(IS_SETLK32(cmd)  || IS_SETLK64(cmd))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cmd' - possible side-effects?
#262: FILE: include/linux/fcntl.h:46:
+#define IS_SETLKW(cmd)	(IS_SETLKW32(cmd) || IS_SETLKW64(cmd))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000511806.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 6 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000511806.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
