WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#33: 
> interrupt that occured on an (probably) an x86_64 box when NMI support
                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#122: FILE: lib/Kconfig.debug:215:
+config KGDB_8250_NOMODULE
+	bool "KGDB: On generic serial port (8250)"
+	select KGDB_8250
+	help
+	  Uses generic serial port (8250) to communicate with the host
+	  GDB.  This is independent of the normal (SERIAL_8250) driver
+	  for this chipset.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#140: FILE: lib/Kconfig.debug:233:
+config KGDB_8250
+	tristate "KGDB: On generic serial port (8250)" if !KGDB_8250_NOMODULE
+	depends on m && KGDB_ONLY_MODULES
+	help
+	  Uses generic serial port (8250) to communicate with the host
+	  GDB.  This is independent of the normal (SERIAL_8250) driver
+	  for this chipset.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#193: FILE: drivers/serial/8250_kgdb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#220: FILE: drivers/serial/8250_kgdb.c:28:
+#include <asm/io.h>

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#235: FILE: drivers/serial/8250_kgdb.c:43:
+static struct kgdb_io local_kgdb_io_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'existant' may be misspelled - perhaps 'existent'?
#248: FILE: drivers/serial/8250_kgdb.c:56:
+/* Old-style serial definitions, if existant, and a counter. */
                                     ^^^^^^^^

WARNING:MISPLACED_INIT: __initdata should be placed after should_copy_rs_table
#250: FILE: drivers/serial/8250_kgdb.c:58:
+static int __initdata should_copy_rs_table = 1;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#273: FILE: drivers/serial/8250_kgdb.c:81:
+ * account our shifts, etc. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited before semicolon
#289: FILE: drivers/serial/8250_kgdb.c:97:
+	while (!(kgdb_ioread(UART_LSR) & UART_LSR_THRE)) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#289: FILE: drivers/serial/8250_kgdb.c:97:
+	while (!(kgdb_ioread(UART_LSR) & UART_LSR_THRE)) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/serial/8250_kgdb.c:160:
+		if (kgdb_io_ops.read_char != kgdb_get_debug_char &&
+				(kgdb_ioread(UART_LSR) & UART_LSR_DR))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#367: FILE: drivers/serial/8250_kgdb.c:175:
+	unsigned cval;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#402: FILE: drivers/serial/8250_kgdb.c:210:
+		/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:BRACES: braces {} should be used on all arms of this statement
#420: FILE: drivers/serial/8250_kgdb.c:228:
+		if (kgdb8250_baud == 115200) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#424: FILE: drivers/serial/8250_kgdb.c:232:
+		} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#492: FILE: drivers/serial/8250_kgdb.c:300:
+#if defined(CONFIG_SERIAL_8250) || defined (CONFIG_SERIAL_8250_MODULE)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#505: FILE: drivers/serial/8250_kgdb.c:313:
+		printk(KERN_ERR "KGDB failed to request the serial IRQ (%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#519: FILE: drivers/serial/8250_kgdb.c:327:
+		printk(KERN_ERR "kgdb8250: argument error, usage: "

WARNING:SPLIT_STRING: quoted string split across lines
#520: FILE: drivers/serial/8250_kgdb.c:328:
+		printk(KERN_ERR "kgdb8250: argument error, usage: "
+		       "kgdb8250=<io or mem>,<address>,<baud rate>" ",<irq>\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#520: FILE: drivers/serial/8250_kgdb.c:328:
+		       "kgdb8250=<io or mem>,<address>,<baud rate>" ",<irq>\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#534: FILE: drivers/serial/8250_kgdb.c:342:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: drivers/serial/8250_kgdb.c:350:
+			current_port->membase = ioremap(current_port->mapbase,
+						8 << current_port->regshift);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#557: FILE: drivers/serial/8250_kgdb.c:365:
+		printk(KERN_ERR "kgdb8250: init failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#568: FILE: drivers/serial/8250_kgdb.c:376:
+	printk(KERN_INFO "kgdb8250: debugging enabled\n");

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#578: FILE: drivers/serial/8250_kgdb.c:386:
+static struct kgdb_io local_kgdb_io_ops = {

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#580: FILE: drivers/serial/8250_kgdb.c:388:
+struct kgdb_io kgdb_io_ops = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#589: FILE: drivers/serial/8250_kgdb.c:397:
+ * ^Ikgdb8250_add_port - Define a serial port for use with KGDB$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#590: FILE: drivers/serial/8250_kgdb.c:398:
+ * ^I@i: The index of the port being added$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#591: FILE: drivers/serial/8250_kgdb.c:399:
+ * ^I@serial_req: The &struct uart_port describing the port$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#593: FILE: drivers/serial/8250_kgdb.c:401:
+ * ^IOn platforms where we must register the serial device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#594: FILE: drivers/serial/8250_kgdb.c:402:
+ * ^Idynamically, this is the best option if a platform also normally$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#595: FILE: drivers/serial/8250_kgdb.c:403:
+ * ^Icalls early_serial_setup().$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#607: FILE: drivers/serial/8250_kgdb.c:415:
+ * ^Ikgdb8250_add_platform_port - Define a serial port for use with KGDB$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#608: FILE: drivers/serial/8250_kgdb.c:416:
+ * ^I@i: The index of the port being added$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#609: FILE: drivers/serial/8250_kgdb.c:417:
+ * ^I@p: The &struct plat_serial8250_port describing the port$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#611: FILE: drivers/serial/8250_kgdb.c:419:
+ * ^IOn platforms where we must register the serial device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#612: FILE: drivers/serial/8250_kgdb.c:420:
+ * ^Idynamically, this is the best option if a platform normally$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#613: FILE: drivers/serial/8250_kgdb.c:421:
+ * ^Ihandles uart setup with an array of &struct plat_serial8250_port.$

CHECK:BRACES: braces {} should be used on all arms of this statement
#639: FILE: drivers/serial/8250_kgdb.c:447:
+	if (!strncmp(str, "io", 2)) {
[...]
+	} else if (!strncmp(str, "mmio", 4)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#645: FILE: drivers/serial/8250_kgdb.c:453:
+	} else

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#653: FILE: drivers/serial/8250_kgdb.c:461:
+		current_port->iobase = simple_strtoul(str, &str, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#656: FILE: drivers/serial/8250_kgdb.c:464:
+		    (unsigned char *)simple_strtoul(str, &str, 16);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#662: FILE: drivers/serial/8250_kgdb.c:470:
+	kgdb8250_baud = simple_strtoul(str, &str, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#670: FILE: drivers/serial/8250_kgdb.c:478:
+	current_port->irq = simple_strtoul(str, &str, 10);

WARNING:INDENTED_LABEL: labels should not be indented
#678: FILE: drivers/serial/8250_kgdb.c:486:
+      errout:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#679: FILE: drivers/serial/8250_kgdb.c:487:
+	printk(KERN_ERR "Invalid syntax for option kgdb8250=\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155194.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 39 warnings, 7 checks, 637 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155194.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
