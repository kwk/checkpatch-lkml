WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
inlined is a pretty much _development_ version of the Philips SPI controller support we're working with on some Philips ARM targets (PNX0106 and PNX4008, namely) based on spi_bitbang library from David Brownell. It's quite a notable thing that this buggy and in some way complicated SPI controller fits well in this bitbang framework! :)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#48: FILE: drivers/spi/Kconfig:98:
+config SPI_PNX
+	tristate "PNX SPI bus support"
+	depends on ARCH_PNX4008 && SPI_BITBANG
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#52: FILE: drivers/spi/Kconfig:102:
+config SPI_EEPROM
+	tristate "SPI EEPROM"
+	depends on SPI
+
 
 #
 # There are lots of SPI device types, with sensors and memory

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/spi/eeprom.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: drivers/spi/eeprom.c:18:
+static int spiee_read_block (struct device *d, void *block)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof cmd should be sizeof(cmd)
#104: FILE: drivers/spi/eeprom.c:25:
+			.len = sizeof cmd,

ERROR:SPACING: space prohibited after that open square bracket '['
#113: FILE: drivers/spi/eeprom.c:34:
+	cmd[ 0 ] = 0x03;

ERROR:SPACING: space prohibited before that close square bracket ']'
#113: FILE: drivers/spi/eeprom.c:34:
+	cmd[ 0 ] = 0x03;

ERROR:SPACING: space prohibited after that open square bracket '['
#114: FILE: drivers/spi/eeprom.c:35:
+	cmd[ 1 ] = 0x00;

ERROR:SPACING: space prohibited before that close square bracket ']'
#114: FILE: drivers/spi/eeprom.c:35:
+	cmd[ 1 ] = 0x00;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#121: FILE: drivers/spi/eeprom.c:42:
+}
+static ssize_t blk_show (struct device *d, struct device_attribute *attr, char *text )

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#121: FILE: drivers/spi/eeprom.c:42:
+static ssize_t blk_show (struct device *d, struct device_attribute *attr, char *text )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#121: FILE: drivers/spi/eeprom.c:42:
+static ssize_t blk_show (struct device *d, struct device_attribute *attr, char *text )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: drivers/spi/eeprom.c:44:
+	char *rdbuff = kmalloc (256, SLAB_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: drivers/spi/eeprom.c:45:
+	char line1[80],line2[80];
 	              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: drivers/spi/eeprom.c:49:
+	blen = spiee_read_block (d, rdbuff);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#135: FILE: drivers/spi/eeprom.c:56:
+		strcpy(line2, "" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#139: FILE: drivers/spi/eeprom.c:60:
+				sprintf(item2, " " );

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#142: FILE: drivers/spi/eeprom.c:63:
+				if (isprint(rdbuff[x])) {
[...]
+				} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#153: FILE: drivers/spi/eeprom.c:74:
+		strcat(text, "|  " );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#155: FILE: drivers/spi/eeprom.c:76:
+		strcat(text, "\n" );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: drivers/spi/eeprom.c:78:
+		bytes += (strlen (line1 ) + strlen(line2) + 4);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#157: FILE: drivers/spi/eeprom.c:78:
+		bytes += (strlen (line1 ) + strlen(line2) + 4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: drivers/spi/eeprom.c:81:
+	kfree (rdbuff);

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#163: FILE: drivers/spi/eeprom.c:84:
+}

The DEVICE_ATTR_RO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0444, name_show, NULL);

Note that the macro automatically appends _show to the named
attribute variable of the device for the show method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

ERROR:SPACING: space prohibited before that close parenthesis ')'
#165: FILE: drivers/spi/eeprom.c:86:
+static DEVICE_ATTR(blk, S_IRUGO, blk_show, NULL );

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#165: FILE: drivers/spi/eeprom.c:86:
+static DEVICE_ATTR(blk, S_IRUGO, blk_show, NULL );

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: drivers/spi/eeprom.c:88:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: drivers/spi/eeprom.c:114:
+	int rc = spi_register_driver(&eeprom_driver);
+	printk("%s: %d\n", __FUNCTION__, rc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: drivers/spi/eeprom.c:114:
+	printk("%s: %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#193: FILE: drivers/spi/eeprom.c:114:
+	printk("%s: %d\n", __FUNCTION__, rc);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#196: FILE: drivers/spi/eeprom.c:117:
+}
+static void __exit spi_eeprom_cleanup(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#212: FILE: drivers/spi/spi_pnx.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#236: FILE: drivers/spi/spi_pnx.c:25:
+#include <asm/io.h>

ERROR:SPACING: space prohibited after that open parenthesis '('
#240: FILE: drivers/spi/spi_pnx.c:29:
+#define lock_device( dev )	/* down( &dev->sem ); */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#240: FILE: drivers/spi/spi_pnx.c:29:
+#define lock_device( dev )	/* down( &dev->sem ); */

ERROR:SPACING: space prohibited after that open parenthesis '('
#241: FILE: drivers/spi/spi_pnx.c:30:
+#define unlock_device( dev )	/* up( &dev->sem );   */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#241: FILE: drivers/spi/spi_pnx.c:30:
+#define unlock_device( dev )	/* up( &dev->sem );   */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#243: FILE: drivers/spi/spi_pnx.c:32:
+void spipnx_dma_handler (int channel, int cause, void* context, struct pt_regs* pt_regs )

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#243: FILE: drivers/spi/spi_pnx.c:32:
+void spipnx_dma_handler (int channel, int cause, void* context, struct pt_regs* pt_regs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#243: FILE: drivers/spi/spi_pnx.c:32:
+void spipnx_dma_handler (int channel, int cause, void* context, struct pt_regs* pt_regs )

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#264: FILE: drivers/spi/spi_pnx.c:53:
+		/*
+		if (!request_mem_region

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#310: FILE: drivers/spi/spi_pnx.c:99:
+		/*
+		release_mem_region((unsigned long)dd->iostart,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#324: FILE: drivers/spi/spi_pnx.c:113:
+		printk(KERN_ERR

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#339: FILE: drivers/spi/spi_pnx.c:128:
+	u8* dat;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#343: FILE: drivers/spi/spi_pnx.c:132:
+	vhblas_spiregs* regs;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#356: FILE: drivers/spi/spi_pnx.c:145:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#361: FILE: drivers/spi/spi_pnx.c:150:
+	con |= (7<<9);
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#381: FILE: drivers/spi/spi_pnx.c:170:
+			void *dmasafe = NULL;
+			if (t->tx_dma)

CHECK:BRACES: braces {} should be used on all arms of this statement
#381: FILE: drivers/spi/spi_pnx.c:170:
+			if (t->tx_dma)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#383: FILE: drivers/spi/spi_pnx.c:172:
+			else {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#389: FILE: drivers/spi/spi_pnx.c:178:
+				params.dma_buffer = dma_map_single(dev->parent, dmasafe, len, DMA_TO_DEVICE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: drivers/spi/spi_pnx.c:185:
+			spipnx_setup_dma(dd->iostart, dd->slave_nr, dd->dma_channel,
+				 DMA_MODE_WRITE, &params, len);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#397: FILE: drivers/spi/spi_pnx.c:186:
+			init_completion (&dd->threshold);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: drivers/spi/spi_pnx.c:188:
+			wait_for_completion (&dd->threshold);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#402: FILE: drivers/spi/spi_pnx.c:191:
+				dma_unmap_single(dev->parent, params.dma_buffer, len, DMA_TO_DEVICE);

ERROR:SPACING: space required one side of that '++' (ctx:WxW)
#407: FILE: drivers/spi/spi_pnx.c:196:
+			for (i = 0; i < len ; i ++ ) {
 			                        ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#407: FILE: drivers/spi/spi_pnx.c:196:
+			for (i = 0; i < len ; i ++ ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: drivers/spi/spi_pnx.c:198:
+^I^I       ^I^I^Icontinue;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#409: FILE: drivers/spi/spi_pnx.c:198:
+^I^I       ^I^I^Icontinue;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#411: FILE: drivers/spi/spi_pnx.c:200:
+				dat ++;
 				    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#432: FILE: drivers/spi/spi_pnx.c:221:
+			if (t->rx_dma)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#434: FILE: drivers/spi/spi_pnx.c:223:
+			else {

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#440: FILE: drivers/spi/spi_pnx.c:229:
+				params.dma_buffer = dma_map_single(dev->parent, dmasafe, len - (FIFO_CHUNK_SIZE - 1), DMA_FROM_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/spi/spi_pnx.c:235:
+			spipnx_setup_dma(dd->iostart, dd->slave_nr, dd->dma_channel,
+				 DMA_MODE_READ, &params, len - (FIFO_CHUNK_SIZE - 1));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#447: FILE: drivers/spi/spi_pnx.c:236:
+			init_completion (&dd->threshold);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#449: FILE: drivers/spi/spi_pnx.c:238:
+			wait_for_completion (&dd->threshold);

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#453: FILE: drivers/spi/spi_pnx.c:242:
+				dma_unmap_single(dev->parent, params.dma_buffer, len - (FIFO_CHUNK_SIZE - 1), DMA_FROM_DEVICE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: drivers/spi/spi_pnx.c:249:
+               ^Istopped = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#460: FILE: drivers/spi/spi_pnx.c:249:
+               ^Istopped = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/spi/spi_pnx.c:249:
+               ^Istopped = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: drivers/spi/spi_pnx.c:250:
+                stat = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/spi/spi_pnx.c:250:
+                stat = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: drivers/spi/spi_pnx.c:251:
+       ^I        for(i = 0; i < len; ) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#462: FILE: drivers/spi/spi_pnx.c:251:
+       ^I        for(i = 0; i < len; ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/spi/spi_pnx.c:251:
+       ^I        for(i = 0; i < len; ) {$

ERROR:SPACING: space required before the open parenthesis '('
#462: FILE: drivers/spi/spi_pnx.c:251:
+       	        for(i = 0; i < len; ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#464: FILE: drivers/spi/spi_pnx.c:253:
+			unsigned long irq_flags;
+			local_irq_save(irq_flags);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#466: FILE: drivers/spi/spi_pnx.c:255:
+			stat = dd->spi_regs->stat;;

ERROR:SPACING: space required before the open parenthesis '('
#469: FILE: drivers/spi/spi_pnx.c:258:
+			if(fc == 0) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#474: FILE: drivers/spi/spi_pnx.c:263:
+			if((!(stat & SPI_STAT_SPI_BE)) && ((fc > 4) || (stopped ))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fc > 4'
#474: FILE: drivers/spi/spi_pnx.c:263:
+			if((!(stat & SPI_STAT_SPI_BE)) && ((fc > 4) || (stopped ))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#474: FILE: drivers/spi/spi_pnx.c:263:
+			if((!(stat & SPI_STAT_SPI_BE)) && ((fc > 4) || (stopped ))) {

ERROR:SPACING: spaces required around that '=' (ctx:OxW)
#475: FILE: drivers/spi/spi_pnx.c:264:
+				*dat++= c = dd->spi_regs->dat;
 				      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!stopped'
#478: FILE: drivers/spi/spi_pnx.c:267:
+			if((stat & SPI_STAT_SPI_BF) && (!stopped)) {

ERROR:SPACING: space required before the open parenthesis '('
#478: FILE: drivers/spi/spi_pnx.c:267:
+			if((stat & SPI_STAT_SPI_BF) && (!stopped)) {

ERROR:SPACING: spaces required around that '=' (ctx:OxW)
#479: FILE: drivers/spi/spi_pnx.c:268:
+				*dat++= c = dd->spi_regs->dat;
 				      ^

WARNING:TABSTOP: Statements should start on a tabstop
#483: FILE: drivers/spi/spi_pnx.c:272:
+		 }

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#501: FILE: drivers/spi/spi_pnx.c:290:
+	printk("spi probe called\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *data should be sizeof(*data)
#502: FILE: drivers/spi/spi_pnx.c:291:
+	master = spi_alloc_master(device, sizeof *data);

WARNING:SIZEOF_PARENTHESIS: sizeof *data should be sizeof(*data)
#518: FILE: drivers/spi/spi_pnx.c:307:
+	data = kzalloc(sizeof *data, GFP_KERNEL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#557: FILE: drivers/spi/spi_pnx.c:346:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#559: FILE: drivers/spi/spi_pnx.c:348:
+^I.name ^I^I= "spipnx",$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#582: FILE: include/asm-arm/arch-pnx4008/spi.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#583: FILE: include/asm-arm/arch-pnx4008/spi.h:2:
+ * include/asm-arm/arch-pnx4008/spi.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#617: FILE: include/asm-arm/arch-pnx4008/spi.h:36:
+#define SPI_ADR_OFFSET_DAT_MSK             0x0018	/*  W  - Data register for using mask mode */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#622: FILE: include/asm-arm/arch-pnx4008/spi.h:41:
+#define SPI_ADR_OFFSET_TIMER_STATUS_REG    0x0408	/* R;R/C - RxDepth and interrupt status register */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#632: FILE: include/asm-arm/arch-pnx4008/spi.h:51:
+#define SPI_CON_SPI_SHFT                   0x00100000	/* R/W - Data shifting enable in mask mode */

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#642: FILE: include/asm-arm/arch-pnx4008/spi.h:61:
+#define SPI_CON_SHIFT_OFF                  0x00002000	/* R/W - Inhibits generation of clock pulses on sck_spi pin */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#643: FILE: include/asm-arm/arch-pnx4008/spi.h:62:
+#define SPI_CON_BITNUM                     0x00001E00	/* R/W - No of bits to tx or rx in one block transfer */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#645: FILE: include/asm-arm/arch-pnx4008/spi.h:64:
+#define SPI_CON_MS                         0x00000080	/* R/W - Selection of master or slave mode */

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#656: FILE: include/asm-arm/arch-pnx4008/spi.h:75:
+#define SPI_FRM_SPIF                       0x0000FFFF	/* R/W - Number of frames to be transfered */
                                                      	                                ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#656: FILE: include/asm-arm/arch-pnx4008/spi.h:75:
+#define SPI_FRM_SPIF                       0x0000FFFF	/* R/W - Number of frames to be transfered */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#659: FILE: include/asm-arm/arch-pnx4008/spi.h:78:
+#define SPI_IER_SPI_INTCS                  0x00000004	/* R/W - SPI CS level change interrupt enable  */

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#667: FILE: include/asm-arm/arch-pnx4008/spi.h:86:
+#define SPI_STAT_SPI_CSL                   0x00000020	/* R/W - Indication of the edge on SPI_CS that caused an int.  */

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#668: FILE: include/asm-arm/arch-pnx4008/spi.h:87:
+#define SPI_STAT_SPI_CSS                   0x00000010	/* R/W - Level of SPI_CS has changed in slave mode */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#678: FILE: include/asm-arm/arch-pnx4008/spi.h:97:
+#define SPI_DAT_MSK_SPIDM                  0x0000FFFF	/*  W  - SPI data bits to send using the masking mode */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#681: FILE: include/asm-arm/arch-pnx4008/spi.h:100:
+#define SPI_MASK_SPIMSK                    0x0000FFFF	/* R/W - Masking bits used for validating data bits */

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#684: FILE: include/asm-arm/arch-pnx4008/spi.h:103:
+#define SPI_ADDR_SPIAD                     0x0000FFFF	/* R/W - Address bits to add to the data bits */

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#696: FILE: include/asm-arm/arch-pnx4008/spi.h:115:
+#define SPI_TIMER_STATUS_REG_FIFO_DEPTH    0x0000007F	/*  R  - FIFO depth value (for debug purpose) */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#705: FILE: include/asm-arm/arch-pnx4008/spi.h:124:
+#define SPIPNX_GLOBAL_SPI_ON ^ISPI_GLOBAL_SPI_ON$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#712: FILE: include/asm-arm/arch-pnx4008/spi.h:131:
+#define SPI_PNX4008_CLOCK_IN  ^I104000000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#713: FILE: include/asm-arm/arch-pnx4008/spi.h:132:
+#define SPI_PNX4008_CLOCK ^I2670000$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#714: FILE: include/asm-arm/arch-pnx4008/spi.h:133:
+#define SPIPNX_CLOCK ((((SPI_PNX4008_CLOCK_IN / SPI_PNX4008_CLOCK) - 2) / 2) & SPI_CON_RATE_MASK )

ERROR:SPACING: space prohibited after that open parenthesis '('
#715: FILE: include/asm-arm/arch-pnx4008/spi.h:134:
+#define SPIPNX_DATA_REG(s) ( (u32)(s) + SPIPNX_DATA )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#715: FILE: include/asm-arm/arch-pnx4008/spi.h:134:
+#define SPIPNX_DATA_REG(s) ( (u32)(s) + SPIPNX_DATA )

WARNING:NEW_TYPEDEFS: do not add new typedefs
#717: FILE: include/asm-arm/arch-pnx4008/spi.h:136:
+typedef volatile struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#717: FILE: include/asm-arm/arch-pnx4008/spi.h:136:
+typedef volatile struct {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#733: FILE: include/asm-arm/arch-pnx4008/spi.h:152:
+}
+vhblas_spiregs, *pvhblas_spiregs;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#737: FILE: include/asm-arm/arch-pnx4008/spi.h:156:
+static void spipnx_arch_set_clock_rate( int clock_khz, int ref_clock_khz, vhblas_spiregs* regs )

ERROR:SPACING: space prohibited after that open parenthesis '('
#737: FILE: include/asm-arm/arch-pnx4008/spi.h:156:
+static void spipnx_arch_set_clock_rate( int clock_khz, int ref_clock_khz, vhblas_spiregs* regs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#737: FILE: include/asm-arm/arch-pnx4008/spi.h:156:
+static void spipnx_arch_set_clock_rate( int clock_khz, int ref_clock_khz, vhblas_spiregs* regs )

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#741: FILE: include/asm-arm/arch-pnx4008/spi.h:160:
+	printk( "ref clock = %d, requested clock = %d\n", ref_clock_khz, clock_khz);

ERROR:SPACING: space prohibited after that open parenthesis '('
#741: FILE: include/asm-arm/arch-pnx4008/spi.h:160:
+	printk( "ref clock = %d, requested clock = %d\n", ref_clock_khz, clock_khz);

ERROR:SPACING: space required before the open parenthesis '('
#742: FILE: include/asm-arm/arch-pnx4008/spi.h:161:
+	if(!clock_khz)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#745: FILE: include/asm-arm/arch-pnx4008/spi.h:164:
+		spi_clock = (ref_clock_khz/1000) / (2*(clock_khz/1000) + 2);
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#745: FILE: include/asm-arm/arch-pnx4008/spi.h:164:
+		spi_clock = (ref_clock_khz/1000) / (2*(clock_khz/1000) + 2);
 		                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#745: FILE: include/asm-arm/arch-pnx4008/spi.h:164:
+		spi_clock = (ref_clock_khz/1000) / (2*(clock_khz/1000) + 2);
 		                                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#747: FILE: include/asm-arm/arch-pnx4008/spi.h:166:
+	printk("SPI clock = %x\n", spi_clock);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#753: FILE: include/asm-arm/arch-pnx4008/spi.h:172:
+	struct clk *div_clk= clk_get(0, "hclk_ck");
 	                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#755: FILE: include/asm-arm/arch-pnx4008/spi.h:174:
+	struct clk *arm_clk = clk_get(0, "ck_pll4");
+	if (!IS_ERR(arm_clk) && !IS_ERR(div_clk))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#756: FILE: include/asm-arm/arch-pnx4008/spi.h:175:
+		spipnx_arch_set_clock_rate(

WARNING:LINE_SPACING: Missing a blank line after declarations
#769: FILE: include/asm-arm/arch-pnx4008/spi.h:188:
+	struct clk *clk = (struct clk *)clk_data;
+	if (clk && !IS_ERR(clk)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#778: FILE: include/asm-arm/arch-pnx4008/spi.h:197:
+	struct clk *clk = (struct clk *)clk_data;
+	if (clk && !IS_ERR(clk)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#787: FILE: include/asm-arm/arch-pnx4008/spi.h:206:
+	struct clk *clk = clk_get(0, dev->id == 1 ? "spi0_ck" : "spi1_ck");
+	if (IS_ERR(clk))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#788: FILE: include/asm-arm/arch-pnx4008/spi.h:207:
+		printk("spi%d_ck pointer err\n", dev->id);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#792: FILE: include/asm-arm/arch-pnx4008/spi.h:211:
+static inline void spipnx_clk_free( void* clk )

ERROR:SPACING: space prohibited after that open parenthesis '('
#792: FILE: include/asm-arm/arch-pnx4008/spi.h:211:
+static inline void spipnx_clk_free( void* clk )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#792: FILE: include/asm-arm/arch-pnx4008/spi.h:211:
+static inline void spipnx_clk_free( void* clk )

ERROR:SPACING: space prohibited after that open parenthesis '('
#794: FILE: include/asm-arm/arch-pnx4008/spi.h:213:
+	clk_put( clk );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#794: FILE: include/asm-arm/arch-pnx4008/spi.h:213:
+	clk_put( clk );

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#799: FILE: include/asm-arm/arch-pnx4008/spi.h:218:
+	switch (spi->chip_select)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#802: FILE: include/asm-arm/arch-pnx4008/spi.h:221:
+		printk("setting pin %x to %d\n", GPO_02, !is_on);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#806: FILE: include/asm-arm/arch-pnx4008/spi.h:225:
+		printk( "setting pin %x to %d\n", GPIO_03, !is_on);

ERROR:SPACING: space prohibited after that open parenthesis '('
#806: FILE: include/asm-arm/arch-pnx4008/spi.h:225:
+		printk( "setting pin %x to %d\n", GPIO_03, !is_on);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#812: FILE: include/asm-arm/arch-pnx4008/spi.h:231:
+static inline int spipnx_request_dma(

ERROR:SPACING: space prohibited after that open parenthesis '('
#814: FILE: include/asm-arm/arch-pnx4008/spi.h:233:
+		void (*handler)( int, int, void*, struct pt_regs*),

WARNING:BRACES: braces {} are not necessary for single statement blocks
#824: FILE: include/asm-arm/arch-pnx4008/spi.h:243:
+	if (err >= 0) {
+		*dma_channel = err;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#833: FILE: include/asm-arm/arch-pnx4008/spi.h:252:
+	if (*dma_channel >= 0) {
+		pnx4008_free_channel(*dma_channel);
+	}

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#845: FILE: include/asm-arm/arch-pnx4008/spi.h:264:
+struct spipnx_dma_transfer_t
+{

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#851: FILE: include/asm-arm/arch-pnx4008/spi.h:270:
+static inline void spipnx_stop_dma(int dma_channel, void* dev_buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#863: FILE: include/asm-arm/arch-pnx4008/spi.h:282:
+static inline int spipnx_setup_dma(u32 iostart, int slave_nr, int dma_channel,
+				int mode, void* params, int len)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#863: FILE: include/asm-arm/arch-pnx4008/spi.h:282:
+				int mode, void* params, int len)

CHECK:SPACING: No space is necessary after a cast
#876: FILE: include/asm-arm/arch-pnx4008/spi.h:295:
+		cfg.src_addr = (u32) SPIPNX_DATA_REG(iostart);

CHECK:SPACING: No space is necessary after a cast
#884: FILE: include/asm-arm/arch-pnx4008/spi.h:303:
+		cfg.dest_addr = (u32) SPIPNX_DATA_REG(iostart);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#910: FILE: include/asm-arm/arch-pnx4008/spi.h:329:
+	if (0 > (err = pnx4008_dma_pack_config(&ch_cfg, &cfg.ch_cfg))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#910: FILE: include/asm-arm/arch-pnx4008/spi.h:329:
+	if (0 > (err = pnx4008_dma_pack_config(&ch_cfg, &cfg.ch_cfg))) {
+		goto out;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#913: FILE: include/asm-arm/arch-pnx4008/spi.h:332:
+	if (0 > (err = pnx4008_dma_pack_control(&ch_ctrl, &cfg.ch_ctrl))) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#914: FILE: include/asm-arm/arch-pnx4008/spi.h:333:
+		if ( err == -E2BIG ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#914: FILE: include/asm-arm/arch-pnx4008/spi.h:333:
+		if ( err == -E2BIG ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#915: FILE: include/asm-arm/arch-pnx4008/spi.h:334:
+			printk( KERN_DEBUG"buffer is too large, splitting\n" );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#915: FILE: include/asm-arm/arch-pnx4008/spi.h:334:
+			printk( KERN_DEBUG"buffer is too large, splitting\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#915: FILE: include/asm-arm/arch-pnx4008/spi.h:334:
+			printk( KERN_DEBUG"buffer is too large, splitting\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#915: FILE: include/asm-arm/arch-pnx4008/spi.h:334:
+			printk( KERN_DEBUG"buffer is too large, splitting\n" );

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#915: FILE: include/asm-arm/arch-pnx4008/spi.h:334:
+			printk( KERN_DEBUG"buffer is too large, splitting\n" );

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#931: FILE: include/asm-arm/arch-pnx4008/spi.h:350:
+	int se = id==0 ? SE_SPI1_DATAIN_INT : SE_SPI2_DATAIN_INT;
 	           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#941: FILE: include/asm-arm/arch-pnx4008/spi.h:360:
+	int se = id==0 ? SE_SPI1_DATAIN_INT : SE_SPI2_DATAIN_INT;
 	           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#957: FILE: drivers/spi/spi_pnx.h:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#979: FILE: drivers/spi/spi_pnx.h:23:
+	unsigned io_flags;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1002: FILE: drivers/spi/spi_pnx.h:46:
+	void (*control) (struct spi_device * dev, int code, u32 ctl);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1002: FILE: drivers/spi/spi_pnx.h:46:
+	void (*control) (struct spi_device * dev, int code, u32 ctl);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1009: FILE: drivers/spi/spi_pnx.h:53:
+#define SPIPNX_IS_READY( bus )  ( (bus)->state == SPIPNX_STATE_READY )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1009: FILE: drivers/spi/spi_pnx.h:53:
+#define SPIPNX_IS_READY( bus )  ( (bus)->state == SPIPNX_STATE_READY )

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122809.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 66 errors, 83 warnings, 24 checks, 947 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122809.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
