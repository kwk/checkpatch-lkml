WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -Naur orig~cpuflags/arch/i386/kernel/cpu/proc.c edited~cpuflags/arch/i386/kernel/cpu/proc.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: arch/i386/kernel/cpu/proc.c:7:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: arch/i386/kernel/cpu/proc.c:17:
+        "fpu", "vme", "de", "pse", "tsc", "msr", "pae", "mce",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: arch/i386/kernel/cpu/proc.c:17:
+        "fpu", "vme", "de", "pse", "tsc", "msr", "pae", "mce",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: arch/i386/kernel/cpu/proc.c:18:
+        "cx8", "apic", NULL, "sep", "mtrr", "pge", "mca", "cmov",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: arch/i386/kernel/cpu/proc.c:18:
+        "cx8", "apic", NULL, "sep", "mtrr", "pge", "mca", "cmov",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: arch/i386/kernel/cpu/proc.c:19:
+        "pat", "pse36", "pn", "clflush", NULL, "dts", "acpi", "mmx",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: arch/i386/kernel/cpu/proc.c:19:
+        "pat", "pse36", "pn", "clflush", NULL, "dts", "acpi", "mmx",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: arch/i386/kernel/cpu/proc.c:20:
+        "fxsr", "sse", "sse2", "ss", "ht", "tm", "ia64", "pbe",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: arch/i386/kernel/cpu/proc.c:20:
+        "fxsr", "sse", "sse2", "ss", "ht", "tm", "ia64", "pbe",$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#166: FILE: arch/i386/kernel/cpu/proc.c:147:
 };
+int show_cpuflags(char *page)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: arch/i386/kernel/cpu/proc.c:149:
+	int i,len=0;
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#168: FILE: arch/i386/kernel/cpu/proc.c:149:
+	int i,len=0;
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: arch/i386/kernel/cpu/proc.c:150:
+	int i,len=0;
+	for ( i = 0 ; i < 32*NCAPINTS ; i++ )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#169: FILE: arch/i386/kernel/cpu/proc.c:150:
+	for ( i = 0 ; i < 32*NCAPINTS ; i++ )
 	                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#169: FILE: arch/i386/kernel/cpu/proc.c:150:
+	for ( i = 0 ; i < 32*NCAPINTS ; i++ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#169: FILE: arch/i386/kernel/cpu/proc.c:150:
+	for ( i = 0 ; i < 32*NCAPINTS ; i++ )

ERROR:SPACING: space required before the open brace '{'
#170: FILE: arch/i386/kernel/cpu/proc.c:151:
+		if ( x86_cap_flags[i] != NULL ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#170: FILE: arch/i386/kernel/cpu/proc.c:151:
+		if ( x86_cap_flags[i] != NULL ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#170: FILE: arch/i386/kernel/cpu/proc.c:151:
+		if ( x86_cap_flags[i] != NULL ){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x86_cap_flags[i]"
#170: FILE: arch/i386/kernel/cpu/proc.c:151:
+		if ( x86_cap_flags[i] != NULL ){

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#171: FILE: arch/i386/kernel/cpu/proc.c:152:
+			if ( test_bit(i, cpu_data[0].x86_capability) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#171: FILE: arch/i386/kernel/cpu/proc.c:152:
+			if ( test_bit(i, cpu_data[0].x86_capability) )

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#172: FILE: arch/i386/kernel/cpu/proc.c:153:
+				len+=sprintf(page+len, "yes");
 				   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#172: FILE: arch/i386/kernel/cpu/proc.c:153:
+				len+=sprintf(page+len, "yes");
 				                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/i386/kernel/cpu/proc.c:154:
+^I^I^I  else  len+=sprintf(page+len, "no ");^I$

WARNING:TABSTOP: Statements should start on a tabstop
#173: FILE: arch/i386/kernel/cpu/proc.c:154:
+			  else  len+=sprintf(page+len, "no ");	

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#173: FILE: arch/i386/kernel/cpu/proc.c:154:
+			  else  len+=sprintf(page+len, "no ");	
 			           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#173: FILE: arch/i386/kernel/cpu/proc.c:154:
+			  else  len+=sprintf(page+len, "no ");	
 			                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#173: FILE: arch/i386/kernel/cpu/proc.c:154:
+			  else  len+=sprintf(page+len, "no ");	

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#174: FILE: arch/i386/kernel/cpu/proc.c:155:
+			len+=sprintf(page+len, " %s\n", x86_cap_flags[i]);
 			   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: arch/i386/kernel/cpu/proc.c:155:
+			len+=sprintf(page+len, " %s\n", x86_cap_flags[i]);
 			                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#185: FILE: fs/proc/proc_misc.c:69:
+extern int show_cpuflags (char *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#185: FILE: fs/proc/proc_misc.c:69:
+extern int show_cpuflags (char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#185: FILE: fs/proc/proc_misc.c:69:
+extern int show_cpuflags (char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: fs/proc/proc_misc.c:154:
+static int cpuflags_read_proc(char *page, char **start, off_t off,
+				 int count, int *eof, void *data)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#198: FILE: fs/proc/proc_misc.c:158:
+	len=show_cpuflags(page);
 	   ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#203: FILE: fs/proc/proc_misc.c:163:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271603.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 10 warnings, 8 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271603.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
