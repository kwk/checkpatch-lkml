WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
diff -urN -X /usr/share/dontdiff linux-2.6.6-rc3.vanlila/arch/i386/kernel/dmi_scan.c linux-2.6.6-rc3/arch/i386/kernel/dmi_scan.c

CHECK:CAMELCASE: Avoid CamelCase: <broken_acpi_Sx>
#226: FILE: arch/i386/kernel/dmi_scan.c:407:
+static __init int broken_acpi_Sx(struct dmi_system_id *d)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: arch/i386/kernel/dmi_scan.c:492:
+static __init __attribute__((unused)) int dmi_disable_acpi(struct dmi_system_id *d) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#297: FILE: arch/i386/kernel/dmi_scan.c:492:
+static __init __attribute__((unused)) int dmi_disable_acpi(struct dmi_system_id *d) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: arch/i386/kernel/dmi_scan.c:507:
+static __init __attribute__((unused)) int force_acpi_ht(struct dmi_system_id *d) $

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#306: FILE: arch/i386/kernel/dmi_scan.c:507:
+static __init __attribute__((unused)) int force_acpi_ht(struct dmi_system_id *d) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: arch/i386/kernel/dmi_scan.c:522:
+static __init int disable_acpi_pci(struct dmi_system_id *d) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#324: FILE: arch/i386/kernel/dmi_scan.c:540:
+static __initdata struct dmi_system_id dmi_blacklist[]={
                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISPLACED_INIT: __initdata should be placed after dmi_blacklist[]
#324: FILE: arch/i386/kernel/dmi_scan.c:540:
+static __initdata struct dmi_system_id dmi_blacklist[]={

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: arch/i386/kernel/dmi_scan.c:552:
+			DMI_MATCH(DMI_BIOS_VENDOR,"Phoenix Technologies LTD"),
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#345: FILE: arch/i386/kernel/dmi_scan.c:553:
+			DMI_MATCH(DMI_BIOS_VERSION,"A11")
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: arch/i386/kernel/dmi_scan.c:572:
+			DMI_MATCH(DMI_BIOS_VENDOR,"Intel Corp."),
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#377: FILE: arch/i386/kernel/dmi_scan.c:573:
+			DMI_MATCH(DMI_BIOS_VERSION,"A11")
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: arch/i386/kernel/dmi_scan.c:596:
+			DMI_MATCH(DMI_BIOS_VERSION,"4.06")
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#466: FILE: arch/i386/kernel/dmi_scan.c:630:
+			DMI_MATCH(DMI_BIOS_VENDOR,"SystemSoft"),
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#467: FILE: arch/i386/kernel/dmi_scan.c:631:
+			DMI_MATCH(DMI_BIOS_VERSION,"Version R2.08")
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: arch/i386/kernel/dmi_scan.c:636:
+			DMI_MATCH(DMI_BIOS_VENDOR,"Phoenix Technologies LTD"),
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: arch/i386/kernel/dmi_scan.c:637:
+			DMI_MATCH(DMI_BIOS_VERSION,"A11")
 			                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: arch/i386/kernel/dmi_scan.c:645:
+^I^I^IDMI_MATCH(DMI_BIOS_VERSION, "0AASNP05"), $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#667: FILE: arch/i386/kernel/dmi_scan.c:766:
+			DMI_MATCH(DMI_BIOS_VERSION,"SABR1"),
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#673: FILE: arch/i386/kernel/dmi_scan.c:770:
+			DMI_MATCH(DMI_BIOS_VERSION,"L440GX0.86B.0094.P10"),
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#679: FILE: arch/i386/kernel/dmi_scan.c:774:
+			DMI_MATCH(DMI_BIOS_VERSION,"L440GX0.86B.0115.P12"),
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#685: FILE: arch/i386/kernel/dmi_scan.c:778:
+			DMI_MATCH(DMI_BIOS_VERSION,"L440GX0.86B.0120.P12"),
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#691: FILE: arch/i386/kernel/dmi_scan.c:782:
+			DMI_MATCH(DMI_BIOS_VERSION,"L440GX0.86B.0125.P13"),
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#697: FILE: arch/i386/kernel/dmi_scan.c:786:
+			DMI_MATCH(DMI_BIOS_VERSION,"L440GX0.86B.0066.P07.9906041405"),
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#704: FILE: arch/i386/kernel/dmi_scan.c:791:
+			DMI_MATCH(DMI_BIOS_VERSION,"MMKT33AUS"),
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#717: FILE: arch/i386/kernel/dmi_scan.c:801:
+			DMI_MATCH(DMI_BIOS_VERSION,"ASUS K7V-RM ACPI BIOS Revision 1003A"),
 			                          ^

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#915: FILE: arch/i386/kernel/dmi_scan.c:959:
+ *	each successfull match. Returns the number of matches.
   	     ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#926: FILE: arch/i386/kernel/dmi_scan.c:969:
+			int s = d->matches[i].slot;
+			if (s == DMI_NONE)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#942: FILE: arch/i386/kernel/dmi_scan.c:985:
+EXPORT_SYMBOL(dmi_check_system);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#983: FILE: include/linux/dmi.h:1:
+#ifndef __DMI_H__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dmi_system_id *' should also have an identifier name
#1009: FILE: include/linux/dmi.h:27:
+	int (*callback)(struct dmi_system_id *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1014: FILE: include/linux/dmi.h:32:
+#define DMI_MATCH(a,b)	{ a, b }
                    ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1018: FILE: include/linux/dmi.h:36:
+extern int dmi_check_system(struct dmi_system_id *list);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 9 warnings, 2 checks, 957 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
