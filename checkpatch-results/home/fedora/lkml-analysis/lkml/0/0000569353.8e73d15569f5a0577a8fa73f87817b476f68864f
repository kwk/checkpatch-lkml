Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
Adam J. Richter     __     ______________   4880 Stevens Creek Blvd, Suite 104

WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#64: FILE: fs/partitions/Config.in:21:
+   tristate '  PC BIOS (MSDOS partition tables) support' CONFIG_MSDOS_PARTITION
                         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: fs/partitions/atari.c:37:
+atari_partition (struct gendisk *hd, kdev_t dev,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#221: FILE: fs/partitions/check.c:46:
+static struct partition_ops *part_ops = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#223: FILE: fs/partitions/check.c:48:
+#if defined CONFIG_BLK_DEV_LVM || defined CONFIG_BLK_DEV_LVM_MODULE

WARNING:SPACING: Unnecessary space before function pointer arguments
#225: FILE: fs/partitions/check.c:50:
+void (*lvm_hd_name_ptr) (char *, int) = NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ops"
#261: FILE: fs/partitions/check.c:287:
+	for (ops = part_ops; ops != NULL; ops = ops->next)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#277: FILE: fs/partitions/check.c:325:
+	static unsigned int disc_counter = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#278: FILE: fs/partitions/check.c:326:
+	static devfs_handle_t devfs_handle = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: fs/partitions/check.c:400:
+  ^Idown(&part_ops_mutex);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: fs/partitions/check.c:400:
+  ^Idown(&part_ops_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: fs/partitions/check.c:400:
+  ^Idown(&part_ops_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: fs/partitions/check.c:401:
+  ^Iops->next = part_ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: fs/partitions/check.c:401:
+  ^Iops->next = part_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: fs/partitions/check.c:401:
+  ^Iops->next = part_ops;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: fs/partitions/check.c:403:
+  ^Iup(&part_ops_mutex);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#291: FILE: fs/partitions/check.c:403:
+  ^Iup(&part_ops_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: fs/partitions/check.c:403:
+  ^Iup(&part_ops_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: fs/partitions/check.c:408:
+  ^Istruct partition_ops **tmp;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#296: FILE: fs/partitions/check.c:408:
+  ^Istruct partition_ops **tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/partitions/check.c:408:
+  ^Istruct partition_ops **tmp;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmp"
#298: FILE: fs/partitions/check.c:410:
+	for (tmp = &part_ops; *tmp != NULL; tmp = &(*tmp)->next) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: fs/partitions/check.c:412:
+^I^I  ^I*tmp = ops->next;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: fs/partitions/check.c:412:
+^I^I  ^I*tmp = ops->next;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#307: FILE: fs/partitions/check.c:419:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#317: FILE: fs/partitions/check.c:450:
+/* Warning: partition_setup must be called before the initialization
+   routines in the individual modules, so it must be linked before

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#318: FILE: fs/partitions/check.c:451:
+   them. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#327: FILE: fs/partitions/check.c:468:
+EXPORT_SYMBOL(add_gd_partition);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#328: FILE: fs/partitions/check.c:469:
+EXPORT_SYMBOL(warn_no_part);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#329: FILE: fs/partitions/check.c:470:
+EXPORT_SYMBOL(get_hardsect_size);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#330: FILE: fs/partitions/check.c:471:
+EXPORT_SYMBOL(register_partition_ops);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#331: FILE: fs/partitions/check.c:472:
+EXPORT_SYMBOL(unregister_partition_ops);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#893: FILE: fs/partitions/msdos_part.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#894: FILE: fs/partitions/msdos_part.c:2:
+ *  fs/partitions/msdos.c
                   ^^^^^

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#905: FILE: fs/partitions/msdos_part.c:13:
+ *  /dev/hda *must* have a "DOS" type 0x51 partition in the first slot (hda1).
          ^^^

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#927: FILE: fs/partitions/msdos_part.c:35:
+#include "msdos.h"
           ^^^^^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#942: FILE: fs/partitions/msdos_part.c:50:
+#define SYS_IND(p)	(get_unaligned(&p->sys_ind))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#943: FILE: fs/partitions/msdos_part.c:51:
+#define NR_SECTS(p)	({ __typeof__(p->nr_sects) __a =	\
+				get_unaligned(&p->nr_sects);	\
+				le32_to_cpu(__a); \
+			})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#948: FILE: fs/partitions/msdos_part.c:56:
+#define START_SECT(p)	({ __typeof__(p->start_sect) __a =	\
+				get_unaligned(&p->start_sect);	\
+				le32_to_cpu(__a); \
+			})

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#979: FILE: fs/partitions/msdos_part.c:87:
+	int loopct = 0;		/* number of links followed
+				   without finding a data partition */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#979: FILE: fs/partitions/msdos_part.c:87:
+				   without finding a data partition */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#991: FILE: fs/partitions/msdos_part.c:99:
+		if (!(bh = bread(dev,0,get_ptable_blocksize(dev))))
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#991: FILE: fs/partitions/msdos_part.c:99:
+		if (!(bh = bread(dev,0,get_ptable_blocksize(dev))))
 		                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#991: FILE: fs/partitions/msdos_part.c:99:
+		if (!(bh = bread(dev,0,get_ptable_blocksize(dev))))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#994: FILE: fs/partitions/msdos_part.c:102:
+		if ((*(__u16 *) (bh->b_data+510)) != cpu_to_le16(MSDOS_LABEL_MAGIC))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#994: FILE: fs/partitions/msdos_part.c:102:
+		if ((*(__u16 *) (bh->b_data+510)) != cpu_to_le16(MSDOS_LABEL_MAGIC))
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#997: FILE: fs/partitions/msdos_part.c:105:
+		p = (struct partition *) (0x1BE + bh->b_data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1010: FILE: fs/partitions/msdos_part.c:118:
+^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1013: FILE: fs/partitions/msdos_part.c:121:
+		for (i=0; i<4; i++, p++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1013: FILE: fs/partitions/msdos_part.c:121:
+		for (i=0; i<4; i++, p++) {
 		           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1018: FILE: fs/partitions/msdos_part.c:126:
+			/* Check the 3rd and 4th entries -
+			   these sometimes contain random garbage */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1018: FILE: fs/partitions/msdos_part.c:126:
+			   these sometimes contain random garbage */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1020: FILE: fs/partitions/msdos_part.c:128:
+			if (i >= 2
+				&& START_SECT(p) + NR_SECTS(p) > this_size

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1021: FILE: fs/partitions/msdos_part.c:129:
+				&& START_SECT(p) + NR_SECTS(p) > this_size
+				&& (this_sector + START_SECT(p) < first_sector ||

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1027: FILE: fs/partitions/msdos_part.c:135:
+					 this_sector+START_SECT(p)*sector_size,
 					            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1027: FILE: fs/partitions/msdos_part.c:135:
+					 this_sector+START_SECT(p)*sector_size,
 					                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1028: FILE: fs/partitions/msdos_part.c:136:
+					 NR_SECTS(p)*sector_size);
 					            ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#1030: FILE: fs/partitions/msdos_part.c:138:
+			if (SYS_IND(p) == LINUX_RAID_PARTITION) {
+			    md_autodetect_dev(MKDEV(hd->major,current_minor));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1030: FILE: fs/partitions/msdos_part.c:138:
+			if (SYS_IND(p) == LINUX_RAID_PARTITION) {
+			    md_autodetect_dev(MKDEV(hd->major,current_minor));
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1031: FILE: fs/partitions/msdos_part.c:139:
+			    md_autodetect_dev(MKDEV(hd->major,current_minor));
 			                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1051: FILE: fs/partitions/msdos_part.c:159:
+		for (i=0; i<4; i++, p++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1051: FILE: fs/partitions/msdos_part.c:159:
+		for (i=0; i<4; i++, p++)
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#1052: FILE: fs/partitions/msdos_part.c:160:
+			if(NR_SECTS(p) && is_extended_partition(p))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1072: FILE: fs/partitions/msdos_part.c:180:
+	kdev_t dev = MKDEV(hd->major, minor);
+	return bread(dev, blocknr, get_ptable_blocksize(dev));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1078: FILE: fs/partitions/msdos_part.c:186:
+/* james@bpgc.com: Solaris has a nasty indicator: 0x82 which also
+   indicates linux swap.  Be careful before believing this is Solaris. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1078: FILE: fs/partitions/msdos_part.c:186:
+   indicates linux swap.  Be careful before believing this is Solaris. */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1080: FILE: fs/partitions/msdos_part.c:188:
+static void
+solaris_x86_partition(struct gendisk *hd, int minor) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#1090: FILE: fs/partitions/msdos_part.c:198:
+	if(!(bh = get_partition_table_block(hd, minor, 0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1090: FILE: fs/partitions/msdos_part.c:198:
+	if(!(bh = get_partition_table_block(hd, minor, 0)))

ERROR:SPACING: space required before the open parenthesis '('
#1093: FILE: fs/partitions/msdos_part.c:201:
+	if(v->v_sanity != SOLARIS_X86_VTOC_SANE) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1097: FILE: fs/partitions/msdos_part.c:205:
+	printk(" %s: <solaris:", disk_name(hd, minor, buf));

ERROR:SPACING: space required before the open parenthesis '('
#1098: FILE: fs/partitions/msdos_part.c:206:
+	if(v->v_version != 1) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1099: FILE: fs/partitions/msdos_part.c:207:
+		printk("  cannot handle version %ld vtoc>\n", v->v_version);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1103: FILE: fs/partitions/msdos_part.c:211:
+	for(i=0; i<SOLARIS_X86_NUMSLICE; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1103: FILE: fs/partitions/msdos_part.c:211:
+	for(i=0; i<SOLARIS_X86_NUMSLICE; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#1103: FILE: fs/partitions/msdos_part.c:211:
+	for(i=0; i<SOLARIS_X86_NUMSLICE; i++) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1108: FILE: fs/partitions/msdos_part.c:216:
+		printk(" [s%d]", i);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1112: FILE: fs/partitions/msdos_part.c:220:
+		 * of the current partition */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1113: FILE: fs/partitions/msdos_part.c:221:
+		add_gd_partition(hd, current_minor, s->s_start+offset, s->s_size);
 		                                              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1117: FILE: fs/partitions/msdos_part.c:225:
+	printk(" >\n");

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1122: FILE: fs/partitions/msdos_part.c:230:
+static void
+check_and_add_bsd_partition(struct gendisk *hd,
+			    struct bsd_partition *bsd_p, int minor) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1132: FILE: fs/partitions/msdos_part.c:240:
+^I^I^Icontinue;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1134: FILE: fs/partitions/msdos_part.c:242:
+^I^Iif (lin_p->start_sect == bsd_p->p_offset && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1135: FILE: fs/partitions/msdos_part.c:243:
+^I^I^Ilin_p->nr_sects == bsd_p->p_size) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1135: FILE: fs/partitions/msdos_part.c:243:
+		if (lin_p->start_sect == bsd_p->p_offset && 
+			lin_p->nr_sects == bsd_p->p_size) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: fs/partitions/msdos_part.c:246:
+^I^Iif (lin_p->start_sect <= bsd_p->p_offset && lin_p->start_sect $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: fs/partitions/msdos_part.c:249:
+^I^I^Iprintk("w: %d %ld+%ld,%d+%d", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1141: FILE: fs/partitions/msdos_part.c:249:
+			printk("w: %d %ld+%ld,%d+%d", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1142: FILE: fs/partitions/msdos_part.c:250:
+^I^I^I^Ilin_p - hd->part, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1142: FILE: fs/partitions/msdos_part.c:250:
+			printk("w: %d %ld+%ld,%d+%d", 
+				lin_p - hd->part, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1143: FILE: fs/partitions/msdos_part.c:251:
+^I^I^I^Ilin_p->start_sect, lin_p->nr_sects, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1150: FILE: fs/partitions/msdos_part.c:258:
+		printk("???: %d %ld+%ld,%d+%d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1151: FILE: fs/partitions/msdos_part.c:259:
+		printk("???: %d %ld+%ld,%d+%d",
+			lin_p - hd->part, lin_p->start_sect, lin_p->nr_sects,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1154: FILE: fs/partitions/msdos_part.c:262:
+		printk("???");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1157: FILE: fs/partitions/msdos_part.c:265:
+^I   * up here $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1163: FILE: fs/partitions/msdos_part.c:271:
+/* $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1167: FILE: fs/partitions/msdos_part.c:275:
+static void bsd_disklabel_partition(struct gendisk *hd, int minor, int type) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1175: FILE: fs/partitions/msdos_part.c:283:
+	if (!(bh = get_partition_table_block(hd, minor, 0)))

CHECK:SPACING: No space is necessary after a cast
#1177: FILE: fs/partitions/msdos_part.c:285:
+	l = (struct bsd_disklabel *) (bh->b_data+512);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1177: FILE: fs/partitions/msdos_part.c:285:
+	l = (struct bsd_disklabel *) (bh->b_data+512);
 	                                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1182: FILE: fs/partitions/msdos_part.c:290:
+	printk(" %s:", disk_name(hd, minor, buf));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1183: FILE: fs/partitions/msdos_part.c:291:
+	printk((type == OPENBSD_PARTITION) ? " <openbsd:" :

ERROR:CODE_INDENT: code indent should use tabs where possible
#1187: FILE: fs/partitions/msdos_part.c:295:
+^I^I^I                              : BSD_MAXPARTITIONS);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1194: FILE: fs/partitions/msdos_part.c:302:
+^I^Iif (p->p_fstype != BSD_FS_UNUSED) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1201: FILE: fs/partitions/msdos_part.c:309:
+	printk(" >\n");

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1210: FILE: fs/partitions/msdos_part.c:318:
+static void unixware_partition(struct gendisk *hd, int minor) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1217: FILE: fs/partitions/msdos_part.c:325:
+	if (!(bh = get_partition_table_block(hd, minor, 14)))

CHECK:SPACING: No space is necessary after a cast
#1219: FILE: fs/partitions/msdos_part.c:327:
+	l = (struct unixware_disklabel *) (bh->b_data+512);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1219: FILE: fs/partitions/msdos_part.c:327:
+	l = (struct unixware_disklabel *) (bh->b_data+512);
 	                                             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1225: FILE: fs/partitions/msdos_part.c:333:
+	printk(" %s: <unixware:", disk_name(hd, minor, buf));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1241: FILE: fs/partitions/msdos_part.c:349:
+	printk(" >\n");

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1245: FILE: fs/partitions/msdos_part.c:353:
+static int
+msdos_partition(struct gendisk *hd, kdev_t dev,
+		    unsigned long first_sector, int first_part_minor) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1247: FILE: fs/partitions/msdos_part.c:355:
+msdos_partition(struct gendisk *hd, kdev_t dev,
+		    unsigned long first_sector, int first_part_minor) {

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1254: FILE: fs/partitions/msdos_part.c:362:
+#if defined(CONFIG_BLK_DEV_IDE) || defined(CONFIG_BLK_DEV_IDE_MODULE)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1259: FILE: fs/partitions/msdos_part.c:367:
+	if (!(bh = bread(dev,0,get_ptable_blocksize(dev)))) {
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1259: FILE: fs/partitions/msdos_part.c:367:
+	if (!(bh = bread(dev,0,get_ptable_blocksize(dev)))) {
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1259: FILE: fs/partitions/msdos_part.c:367:
+	if (!(bh = bread(dev,0,get_ptable_blocksize(dev)))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1260: FILE: fs/partitions/msdos_part.c:368:
+		if (warn_no_part) printk(" unable to read partition table\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1260: FILE: fs/partitions/msdos_part.c:368:
+		if (warn_no_part) printk(" unable to read partition table\n");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1264: FILE: fs/partitions/msdos_part.c:372:
+#if defined(CONFIG_BLK_DEV_IDE) || defined(CONFIG_BLK_DEV_IDE_MODULE)

CHECK:SPACING: No space is necessary after a cast
#1268: FILE: fs/partitions/msdos_part.c:376:
+	if (*(unsigned short *)  (0x1fe + data) != cpu_to_le16(MSDOS_LABEL_MAGIC)) {

CHECK:SPACING: No space is necessary after a cast
#1272: FILE: fs/partitions/msdos_part.c:380:
+	p = (struct partition *) (0x1be + data);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1274: FILE: fs/partitions/msdos_part.c:382:
+#if defined(CONFIG_BLK_DEV_IDE) || defined(CONFIG_BLK_DEV_IDE_MODULE)

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#1284: FILE: fs/partitions/msdos_part.c:392:
+		 * There is no need to do so, and Linux fdisk doesnt always
 		                                              ^^^^^^

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#1285: FILE: fs/partitions/msdos_part.c:393:
+		 * do this, and Windows NT on Alpha doesnt do this either,
 		                                    ^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1290: FILE: fs/partitions/msdos_part.c:398:
+			struct partition *q = &p[i];
+			if (NR_SECTS(q)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1306: FILE: fs/partitions/msdos_part.c:414:
+		} else if (SYS_IND(p) == DM6_PARTITION) {
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1316: FILE: fs/partitions/msdos_part.c:424:
+			   data[sig] == 0xAA && data[sig+1] == 0x55 &&
 			                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1317: FILE: fs/partitions/msdos_part.c:425:
+			   (data[sig+2] & 1)) {
 			            ^

CHECK:SPACING: No space is necessary after a cast
#1319: FILE: fs/partitions/msdos_part.c:427:
+			(void) ide_xlate_1024 (dev, 0, heads, " [DM6:MBR]");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1319: FILE: fs/partitions/msdos_part.c:427:
+			(void) ide_xlate_1024 (dev, 0, heads, " [DM6:MBR]");

CHECK:SPACING: No space is necessary after a cast
#1325: FILE: fs/partitions/msdos_part.c:433:
+			(void) ide_xlate_1024(dev, 0, heads, " [DM6:AUX]");

CHECK:SPACING: No space is necessary after a cast
#1327: FILE: fs/partitions/msdos_part.c:435:
+			(void) ide_xlate_1024(dev, 2, heads, " [PTBL]");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1333: FILE: fs/partitions/msdos_part.c:441:
+	/* Look for partitions in two passes:
+	   First find the primary partitions, and the DOS-type extended partitions.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1334: FILE: fs/partitions/msdos_part.c:442:
+	   On the second pass look inside *BSD and Unixware and Solaris partitions. */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1337: FILE: fs/partitions/msdos_part.c:445:
+	for (i=1 ; i<=4 ; minor++,i++,p++) {
 	      ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#1337: FILE: fs/partitions/msdos_part.c:445:
+	for (i=1 ; i<=4 ; minor++,i++,p++) {
 	            ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1337: FILE: fs/partitions/msdos_part.c:445:
+	for (i=1 ; i<=4 ; minor++,i++,p++) {
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1337: FILE: fs/partitions/msdos_part.c:445:
+	for (i=1 ; i<=4 ; minor++,i++,p++) {
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1340: FILE: fs/partitions/msdos_part.c:448:
+		add_gd_partition(hd, minor, first_sector+START_SECT(p)*sector_size,
 		                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1340: FILE: fs/partitions/msdos_part.c:448:
+		add_gd_partition(hd, minor, first_sector+START_SECT(p)*sector_size,
 		                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1341: FILE: fs/partitions/msdos_part.c:449:
+				 NR_SECTS(p)*sector_size);
 				            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1343: FILE: fs/partitions/msdos_part.c:451:
+		if (SYS_IND(p) == LINUX_RAID_PARTITION) {
+			md_autodetect_dev(MKDEV(hd->major,minor));
+		}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1344: FILE: fs/partitions/msdos_part.c:452:
+			md_autodetect_dev(MKDEV(hd->major,minor));
 			                                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1348: FILE: fs/partitions/msdos_part.c:456:
+			printk(" <");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1355: FILE: fs/partitions/msdos_part.c:463:
+^I^I^Ihd->sizes[minor] = hd->part[minor].nr_sects $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1356: FILE: fs/partitions/msdos_part.c:464:
+^I^I^I  ^I>> (BLOCK_SIZE_BITS - 9);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1356: FILE: fs/partitions/msdos_part.c:464:
+^I^I^I  ^I>> (BLOCK_SIZE_BITS - 9);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1358: FILE: fs/partitions/msdos_part.c:466:
+			printk(" >");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1360: FILE: fs/partitions/msdos_part.c:468:
+			/* prevent someone doing mkfs or mkswap on an
+			   extended partition, but leave room for LILO */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1360: FILE: fs/partitions/msdos_part.c:468:
+			   extended partition, but leave room for LILO */

CHECK:SPACING: No space is necessary after a cast
#1369: FILE: fs/partitions/msdos_part.c:477:
+	if (*(unsigned short *) (data+0xfc) == cpu_to_le16(MSDOS_LABEL_MAGIC)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1369: FILE: fs/partitions/msdos_part.c:477:
+	if (*(unsigned short *) (data+0xfc) == cpu_to_le16(MSDOS_LABEL_MAGIC)) {
 	                             ^

CHECK:SPACING: No space is necessary after a cast
#1370: FILE: fs/partitions/msdos_part.c:478:
+		p = (struct partition *) (0x1be + data);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1380: FILE: fs/partitions/msdos_part.c:488:
+	printk("\n");

CHECK:SPACING: No space is necessary after a cast
#1384: FILE: fs/partitions/msdos_part.c:492:
+	p = (struct partition *) (0x1be + data);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1385: FILE: fs/partitions/msdos_part.c:493:
+	for (i=1 ; i<=4 ; minor++,i++,p++) {
 	      ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#1385: FILE: fs/partitions/msdos_part.c:493:
+	for (i=1 ; i<=4 ; minor++,i++,p++) {
 	            ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1385: FILE: fs/partitions/msdos_part.c:493:
+	for (i=1 ; i<=4 ; minor++,i++,p++) {
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1385: FILE: fs/partitions/msdos_part.c:493:
+	for (i=1 ; i<=4 ; minor++,i++,p++) {
 	                             ^

ERROR:SPACING: space required before the open parenthesis '('
#1399: FILE: fs/partitions/msdos_part.c:507:
+		if(SYS_IND(p) == SOLARIS_X86_PARTITION)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1435: FILE: fs/partitions/partition_module.h:1:
+/* Copyright 2000 Yggdrasil Computing, Inc.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1436: FILE: fs/partitions/partition_module.h:2:
+/* Copyright 2000 Yggdrasil Computing, Inc.
+   Written by Adam J. Richter

WARNING:TYPO_SPELLING: 'Massachussetts' may be misspelled - perhaps ''?
#1440: FILE: fs/partitions/partition_module.h:6:
+   Software Foundation (Cambridge, Massachussetts, USA).
                                    ^^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1445: FILE: fs/partitions/partition_module.h:11:
+/*
+  This file should be #include'ed by each partition handling module,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1449: FILE: fs/partitions/partition_module.h:15:
+  ^I#define check_partition msdos_partition$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1449: FILE: fs/partitions/partition_module.h:15:
+  ^I#define check_partition msdos_partition$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1459: FILE: fs/partitions/partition_module.h:25:
+  ^Icheck_partition,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1459: FILE: fs/partitions/partition_module.h:25:
+  ^Icheck_partition,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1459: FILE: fs/partitions/partition_module.h:25:
+  ^Icheck_partition,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1473: FILE: fs/partitions/partition_module.h:39:
+  ^Iunregister_partition_ops(&ops);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1473: FILE: fs/partitions/partition_module.h:39:
+  ^Iunregister_partition_ops(&ops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1473: FILE: fs/partitions/partition_module.h:39:
+  ^Iunregister_partition_ops(&ops);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000569353.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 62 errors, 73 warnings, 38 checks, 910 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000569353.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
