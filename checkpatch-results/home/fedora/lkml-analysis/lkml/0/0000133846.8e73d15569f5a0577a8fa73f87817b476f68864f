WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
adds the hex values 0557 and 2008 to the device id table for the foo_driver.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#62: FILE: drivers/usb/core/driver.c:38:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#81: FILE: drivers/usb/core/driver.c:81:
+	u32 idVendor = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#82: FILE: drivers/usb/core/driver.c:82:
+	u32 idProduct = 0;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#109: FILE: drivers/usb/core/driver.c:109:
+static DRIVER_ATTR(new_id, S_IWUSR, NULL, store_new_id);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "usb_drv->probe"
#115: FILE: drivers/usb/core/driver.c:115:
+	if (usb_drv->probe != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#159: FILE: drivers/usb/core/driver.c:159:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!id"
#184: FILE: drivers/usb/core/driver.c:232:
+	if (id == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#199: FILE: drivers/usb/core/driver.c:247:
+	/* No need to test id->bcdDevice_lo != 0, since 0 is never
+	   greater than any unsigned number. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: drivers/usb/core/driver.c:247:
+	   greater than any unsigned number. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bcdDevice_lo > le16_to_cpu(dev->descriptor.bcdDevice)'
#200: FILE: drivers/usb/core/driver.c:248:
+	if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_LO) &&
+	    (id->bcdDevice_lo > le16_to_cpu(dev->descriptor.bcdDevice)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice_lo>
#201: FILE: drivers/usb/core/driver.c:249:
+	    (id->bcdDevice_lo > le16_to_cpu(dev->descriptor.bcdDevice)))

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice>
#201: FILE: drivers/usb/core/driver.c:249:
+	    (id->bcdDevice_lo > le16_to_cpu(dev->descriptor.bcdDevice)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bcdDevice_hi < le16_to_cpu(dev->descriptor.bcdDevice)'
#204: FILE: drivers/usb/core/driver.c:252:
+	if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_HI) &&
+	    (id->bcdDevice_hi < le16_to_cpu(dev->descriptor.bcdDevice)))

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice_hi>
#205: FILE: drivers/usb/core/driver.c:253:
+	    (id->bcdDevice_hi < le16_to_cpu(dev->descriptor.bcdDevice)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bDeviceClass != dev->descriptor.bDeviceClass'
#208: FILE: drivers/usb/core/driver.c:256:
+	if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_CLASS) &&
+	    (id->bDeviceClass != dev->descriptor.bDeviceClass))

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceClass>
#209: FILE: drivers/usb/core/driver.c:257:
+	    (id->bDeviceClass != dev->descriptor.bDeviceClass))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bDeviceSubClass!= dev->descriptor.bDeviceSubClass'
#212: FILE: drivers/usb/core/driver.c:260:
+	if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_SUBCLASS) &&
+	    (id->bDeviceSubClass!= dev->descriptor.bDeviceSubClass))

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#213: FILE: drivers/usb/core/driver.c:261:
+	    (id->bDeviceSubClass!= dev->descriptor.bDeviceSubClass))
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceSubClass>
#213: FILE: drivers/usb/core/driver.c:261:
+	    (id->bDeviceSubClass!= dev->descriptor.bDeviceSubClass))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bDeviceProtocol != dev->descriptor.bDeviceProtocol'
#216: FILE: drivers/usb/core/driver.c:264:
+	if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_PROTOCOL) &&
+	    (id->bDeviceProtocol != dev->descriptor.bDeviceProtocol))

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceProtocol>
#217: FILE: drivers/usb/core/driver.c:265:
+	    (id->bDeviceProtocol != dev->descriptor.bDeviceProtocol))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bInterfaceClass != intf->desc.bInterfaceClass'
#220: FILE: drivers/usb/core/driver.c:268:
+	if ((id->match_flags & USB_DEVICE_ID_MATCH_INT_CLASS) &&
+	    (id->bInterfaceClass != intf->desc.bInterfaceClass))

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#221: FILE: drivers/usb/core/driver.c:269:
+	    (id->bInterfaceClass != intf->desc.bInterfaceClass))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bInterfaceSubClass != intf->desc.bInterfaceSubClass'
#224: FILE: drivers/usb/core/driver.c:272:
+	if ((id->match_flags & USB_DEVICE_ID_MATCH_INT_SUBCLASS) &&
+	    (id->bInterfaceSubClass != intf->desc.bInterfaceSubClass))

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceSubClass>
#225: FILE: drivers/usb/core/driver.c:273:
+	    (id->bInterfaceSubClass != intf->desc.bInterfaceSubClass))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bInterfaceProtocol != intf->desc.bInterfaceProtocol'
#228: FILE: drivers/usb/core/driver.c:276:
+	if ((id->match_flags & USB_DEVICE_ID_MATCH_INT_PROTOCOL) &&
+	    (id->bInterfaceProtocol != intf->desc.bInterfaceProtocol))

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceProtocol>
#229: FILE: drivers/usb/core/driver.c:277:
+	    (id->bInterfaceProtocol != intf->desc.bInterfaceProtocol))

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#349: FILE: include/linux/usb.h:532:
+	spinlock_t lock;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133846.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 24 checks, 308 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133846.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
