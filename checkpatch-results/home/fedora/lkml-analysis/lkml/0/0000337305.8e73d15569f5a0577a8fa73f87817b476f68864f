WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
short of running sed on my patches or changing my own tree structure, I'm=20

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: linux/fs/proc/proc_misc.c:94:
+^I            per_cpu_nice_flips[NR_CPUS],$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#145: FILE: linux/fs/proc/proc_misc.c:94:
+	            per_cpu_nice_flips[NR_CPUS],

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: linux/fs/proc/proc_misc.c:95:
+^I            per_cpu_system_flips[NR_CPUS];$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#146: FILE: linux/fs/proc/proc_misc.c:95:
+	            per_cpu_system_flips[NR_CPUS];

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#158: FILE: linux/fs/proc/proc_misc.c:107:
+	f += (f ^ (v>>(BITS_PER_LONG-1))) & 1;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#158: FILE: linux/fs/proc/proc_misc.c:107:
+	f += (f ^ (v>>(BITS_PER_LONG-1))) & 1;
 	                            ^

CHECK:SPACING: No space is necessary after a cast
#159: FILE: linux/fs/proc/proc_misc.c:108:
+	return ((u64) f << (BITS_PER_LONG-1)) | v;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#159: FILE: linux/fs/proc/proc_misc.c:108:
+	return ((u64) f << (BITS_PER_LONG-1)) | v;
 	                                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around init_task.times.tms_utime
#162: FILE: linux/fs/proc/proc_misc.c:111:
+#define get_uidle_64()     get_64bits(&(init_task.times.tms_utime),\

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: linux/fs/proc/proc_misc.c:112:
+                                      &uidle_msb_flips)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: linux/fs/proc/proc_misc.c:112:
+                                      &uidle_msb_flips)$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around init_task.times.tms_stime
#164: FILE: linux/fs/proc/proc_misc.c:113:
+#define get_sidle_64()     get_64bits(&(init_task.times.tms_stime),\

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: linux/fs/proc/proc_misc.c:114:
+                                      &sidle_msb_flips)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: linux/fs/proc/proc_misc.c:114:
+                                      &sidle_msb_flips)$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around kstat.per_cpu_user[cpu]
#166: FILE: linux/fs/proc/proc_misc.c:115:
+#define get_user_64(cpu)   get_64bits(&(kstat.per_cpu_user[cpu]),\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#166: FILE: linux/fs/proc/proc_misc.c:115:
+#define get_user_64(cpu)   get_64bits(&(kstat.per_cpu_user[cpu]),\
+                                      &(per_cpu_user_flips[cpu]))

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: linux/fs/proc/proc_misc.c:116:
+                                      &(per_cpu_user_flips[cpu]))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: linux/fs/proc/proc_misc.c:116:
+                                      &(per_cpu_user_flips[cpu]))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around per_cpu_user_flips[cpu]
#167: FILE: linux/fs/proc/proc_misc.c:116:
+                                      &(per_cpu_user_flips[cpu]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around kstat.per_cpu_nice[cpu]
#168: FILE: linux/fs/proc/proc_misc.c:117:
+#define get_nice_64(cpu)   get_64bits(&(kstat.per_cpu_nice[cpu]),\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#168: FILE: linux/fs/proc/proc_misc.c:117:
+#define get_nice_64(cpu)   get_64bits(&(kstat.per_cpu_nice[cpu]),\
+                                      &(per_cpu_nice_flips[cpu]))

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: linux/fs/proc/proc_misc.c:118:
+                                      &(per_cpu_nice_flips[cpu]))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: linux/fs/proc/proc_misc.c:118:
+                                      &(per_cpu_nice_flips[cpu]))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around per_cpu_nice_flips[cpu]
#169: FILE: linux/fs/proc/proc_misc.c:118:
+                                      &(per_cpu_nice_flips[cpu]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around kstat.per_cpu_system[cpu]
#170: FILE: linux/fs/proc/proc_misc.c:119:
+#define get_system_64(cpu) get_64bits(&(kstat.per_cpu_system[cpu]),\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#170: FILE: linux/fs/proc/proc_misc.c:119:
+#define get_system_64(cpu) get_64bits(&(kstat.per_cpu_system[cpu]),\
+                                      &(per_cpu_system_flips[cpu]))

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: linux/fs/proc/proc_misc.c:120:
+                                      &(per_cpu_system_flips[cpu]))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: linux/fs/proc/proc_misc.c:120:
+                                      &(per_cpu_system_flips[cpu]))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around per_cpu_system_flips[cpu]
#171: FILE: linux/fs/proc/proc_misc.c:120:
+                                      &(per_cpu_system_flips[cpu]))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#183: FILE: linux/fs/proc/proc_misc.c:132:
+#define CHECK_WRAPS_INTERVAL (1ul << (BITS_PER_LONG-2))
                                                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#187: FILE: linux/fs/proc/proc_misc.c:136:
+	*flips += 1 & (*flips ^ (val>>(BITS_PER_LONG-1)));
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#187: FILE: linux/fs/proc/proc_misc.c:136:
+	*flips += 1 & (*flips ^ (val>>(BITS_PER_LONG-1)));
 	                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#198: FILE: linux/fs/proc/proc_misc.c:147:
+	for(i=0; i<NR_CPUS; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#198: FILE: linux/fs/proc/proc_misc.c:147:
+	for(i=0; i<NR_CPUS; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#198: FILE: linux/fs/proc/proc_misc.c:147:
+	for(i=0; i<NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#198: FILE: linux/fs/proc/proc_misc.c:147:
+	for(i=0; i<NR_CPUS; i++) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around per_cpu_user_flips[i]
#199: FILE: linux/fs/proc/proc_misc.c:148:
+		check_one(kstat.per_cpu_user[i], &(per_cpu_user_flips[i]));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around per_cpu_nice_flips[i]
#200: FILE: linux/fs/proc/proc_misc.c:149:
+		check_one(kstat.per_cpu_nice[i], &(per_cpu_nice_flips[i]));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around per_cpu_system_flips[i]
#201: FILE: linux/fs/proc/proc_misc.c:150:
+		check_one(kstat.per_cpu_system[i], &(per_cpu_system_flips[i]));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: linux/fs/proc/proc_misc.c:170:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: linux/fs/proc/proc_misc.c:170:
+ $

CHECK:SPACING: No space is necessary after a cast
#244: FILE: linux/fs/proc/proc_misc.c:213:
+	uptime_remainder = (unsigned long) do_div(uptime, HZ);

CHECK:SPACING: No space is necessary after a cast
#246: FILE: linux/fs/proc/proc_misc.c:215:
+	idle_remainder = (unsigned long) do_div(idle, HZ);

CHECK:SPACING: No space is necessary after a cast
#263: FILE: linux/fs/proc/proc_misc.c:219:
+		(unsigned long) uptime,

CHECK:SPACING: No space is necessary after a cast
#265: FILE: linux/fs/proc/proc_misc.c:221:
+		(unsigned long) idle,

CHECK:SPACING: No space is necessary after a cast
#273: FILE: linux/fs/proc/proc_misc.c:225:
+		(unsigned long) uptime,

CHECK:SPACING: No space is necessary after a cast
#275: FILE: linux/fs/proc/proc_misc.c:227:
+		(unsigned long) idle,

CHECK:SPACING: No space is necessary after a cast
#310: FILE: linux/fs/proc/proc_misc.c:412:
+			(unsigned long long) user,

CHECK:SPACING: No space is necessary after a cast
#311: FILE: linux/fs/proc/proc_misc.c:413:
+			(unsigned long long) nice,

CHECK:SPACING: No space is necessary after a cast
#312: FILE: linux/fs/proc/proc_misc.c:414:
+			(unsigned long long) system,

CHECK:SPACING: No space is necessary after a cast
#313: FILE: linux/fs/proc/proc_misc.c:415:
+			(unsigned long long) jif * smp_num_cpus

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: linux/fs/proc/proc_misc.c:416:
+^I^I^I                      - user - nice - system);$

CHECK:SPACING: No space is necessary after a cast
#329: FILE: linux/fs/proc/proc_misc.c:424:
+			(unsigned long long) user,

CHECK:SPACING: No space is necessary after a cast
#330: FILE: linux/fs/proc/proc_misc.c:425:
+			(unsigned long long) nice,

CHECK:SPACING: No space is necessary after a cast
#331: FILE: linux/fs/proc/proc_misc.c:426:
+			(unsigned long long) system,

CHECK:SPACING: No space is necessary after a cast
#332: FILE: linux/fs/proc/proc_misc.c:427:
+			(unsigned long long) jif - user - nice - system);

CHECK:SPACING: No space is necessary after a cast
#348: FILE: linux/fs/proc/proc_misc.c:471:
+		xtime.tv_sec - (unsigned long) jif,

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: linux/include/linux/kernel_stat.h:20:
+^I              per_cpu_nice[NR_CPUS],$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#369: FILE: linux/include/linux/kernel_stat.h:20:
+	              per_cpu_nice[NR_CPUS],

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: linux/include/linux/kernel_stat.h:21:
+^I              per_cpu_system[NR_CPUS];$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#370: FILE: linux/include/linux/kernel_stat.h:21:
+	              per_cpu_system[NR_CPUS];

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#392: FILE: linux/include/linux/sched.h:595:
+	extern u64 get_jiffies_64(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#401: FILE: linux/include/linux/sched.h:604:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#463: FILE: linux/kernel/acct.c:267:
+		return (1ul << (MANTSIZE + EXPSIZE)) - 1;
+	} else {

CHECK:SPACING: No space is necessary after a cast
#524: FILE: linux/kernel/info.c:27:
+	val.uptime = (unsigned long) uptime;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#536: FILE: linux/kernel/timer.c:72:
+static unsigned int volatile jiffies_msb_flips;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#563: FILE: linux/kernel/timer.c:693:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: linux/kernel/timer.c:704:
+^I$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#576: FILE: linux/kernel/timer.c:706:
+	f += (f ^ (j>>(BITS_PER_LONG-1))) & 1;
 	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#576: FILE: linux/kernel/timer.c:706:
+	f += (f ^ (j>>(BITS_PER_LONG-1))) & 1;
 	                            ^

CHECK:SPACING: No space is necessary after a cast
#577: FILE: linux/kernel/timer.c:707:
+	return ((u64) f << (BITS_PER_LONG-1)) | j;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#577: FILE: linux/kernel/timer.c:707:
+	return ((u64) f << (BITS_PER_LONG-1)) | j;
 	                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#590: FILE: linux/kernel/timer.c:720:
+#define CHECK_JIFFIESWRAP_INTERVAL (1ul << (BITS_PER_LONG-2))
                                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: linux/kernel/timer.c:727:
+^I                           ^ (jiffies>>(BITS_PER_LONG-1)));$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#597: FILE: linux/kernel/timer.c:727:
+	                           ^ (jiffies>>(BITS_PER_LONG-1)));
 	                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#597: FILE: linux/kernel/timer.c:727:
+	                           ^ (jiffies>>(BITS_PER_LONG-1)));
 	                                                     ^

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#597: FILE: linux/kernel/timer.c:727:
+	                           ^ (jiffies>>(BITS_PER_LONG-1)));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#616: FILE: linux/kernel/timer.c:746:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337305.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 15 warnings, 48 checks, 480 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337305.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
