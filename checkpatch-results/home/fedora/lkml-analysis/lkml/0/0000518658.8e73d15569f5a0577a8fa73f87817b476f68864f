ERROR:TRAILING_WHITESPACE: trailing whitespace
#36: FILE: drivers/sound/cmpci.c:79:
+ *^IFri May 25 2001 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#38: FILE: drivers/sound/cmpci.c:81:
+ *^I- speaker mixer support $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#233: FILE: drivers/sound/cmpci.c:194:
+static const unsigned sample_shift[]	= { 0, 1, 1, 2 };

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: drivers/sound/cmpci.c:229:
+        struct {^I^I^I^I/* mixer stuff */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/sound/cmpci.c:229:
+        struct {^I^I^I^I/* mixer stuff */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#296: FILE: drivers/sound/cmpci.c:251:
+		unsigned error;		/* over/underrun */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: drivers/sound/cmpci.c:253:
+^I^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#301: FILE: drivers/sound/cmpci.c:254:
+		unsigned fragsize;	/* redundant, but makes calculations easier */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: drivers/sound/cmpci.c:258:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: drivers/sound/cmpci.c:277:
+^Iint^Ichip_version;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: drivers/sound/cmpci.c:279:
+^Iint^Icurr_channels;^I^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#400: FILE: drivers/sound/cmpci.c:320:
+	unsigned exp=16,l=5,r=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#400: FILE: drivers/sound/cmpci.c:320:
+	unsigned exp=16,l=5,r=0;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#400: FILE: drivers/sound/cmpci.c:320:
+	unsigned exp=16,l=5,r=0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#400: FILE: drivers/sound/cmpci.c:320:
+	unsigned exp=16,l=5,r=0;
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#400: FILE: drivers/sound/cmpci.c:320:
+	unsigned exp=16,l=5,r=0;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#400: FILE: drivers/sound/cmpci.c:320:
+	unsigned exp=16,l=5,r=0;
 	                     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#401: FILE: drivers/sound/cmpci.c:321:
+	static const unsigned num[]={0x2,0x4,0x10,0x100,0x10000};

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#401: FILE: drivers/sound/cmpci.c:321:
+	static const unsigned num[]={0x2,0x4,0x10,0x100,0x10000};
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#401: FILE: drivers/sound/cmpci.c:321:
+	static const unsigned num[]={0x2,0x4,0x10,0x100,0x10000};
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#401: FILE: drivers/sound/cmpci.c:321:
+	static const unsigned num[]={0x2,0x4,0x10,0x100,0x10000};
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#401: FILE: drivers/sound/cmpci.c:321:
+	static const unsigned num[]={0x2,0x4,0x10,0x100,0x10000};
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#401: FILE: drivers/sound/cmpci.c:321:
+	static const unsigned num[]={0x2,0x4,0x10,0x100,0x10000};
 	                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#421: FILE: drivers/sound/cmpci.c:326:
+	while(l--) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#422: FILE: drivers/sound/cmpci.c:327:
+		if( x >= num[l] ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#422: FILE: drivers/sound/cmpci.c:327:
+		if( x >= num[l] ) {

ERROR:SPACING: space required before the open parenthesis '('
#422: FILE: drivers/sound/cmpci.c:327:
+		if( x >= num[l] ) {

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#423: FILE: drivers/sound/cmpci.c:328:
+			if(num[l]>2) x >>= exp;
 			         ^

ERROR:SPACING: space required before the open parenthesis '('
#423: FILE: drivers/sound/cmpci.c:328:
+			if(num[l]>2) x >>= exp;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#423: FILE: drivers/sound/cmpci.c:328:
+			if(num[l]>2) x >>= exp;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#424: FILE: drivers/sound/cmpci.c:329:
+			r+=exp;
 			 ^

ERROR:SPACING: spaces required around that '>>=' (ctx:VxV)
#426: FILE: drivers/sound/cmpci.c:331:
+		exp>>=1;
 		   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: drivers/sound/cmpci.c:422:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: drivers/sound/cmpci.c:968:
+^I^I^Iprintk(KERN_DEBUG "cmpci: DMA buffer crosses 64k boundary: busaddr 0x%lx  size %ld\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#541: FILE: drivers/sound/cmpci.c:968:
+			printk(KERN_DEBUG "cmpci: DMA buffer crosses 64k boundary: busaddr 0x%lx  size %ld\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: drivers/sound/cmpci.c:971:
+^I^I^Iprintk(KERN_DEBUG "cmpci: DMA buffer beyond 16MB: busaddr 0x%lx  size %ld\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#545: FILE: drivers/sound/cmpci.c:971:
+			printk(KERN_DEBUG "cmpci: DMA buffer beyond 16MB: busaddr 0x%lx  size %ld\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#679: FILE: drivers/sound/cmpci.c:1493:
+			printk(KERN_DEBUG "cmpci: dma timed out??\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#701: FILE: drivers/sound/cmpci.c:1537:
+				printk(KERN_DEBUG "cmpci: read: chip lockup? dmasz %u fragsz %u count %i hwptr %u swptr %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#723: FILE: drivers/sound/cmpci.c:1624:
+				printk(KERN_DEBUG "cmpci: write: chip lockup? dmasz %u fragsz %u count %i hwptr %u swptr %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#756: FILE: drivers/sound/cmpci.c:2520:
+				printk(KERN_DEBUG "cmpci: midi timed out??\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#824: FILE: drivers/sound/cmpci.c:2862:
+			printk(KERN_WARNING "cmpci: out of memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#824: FILE: drivers/sound/cmpci.c:2862:
 		if (!s) {
+			printk(KERN_WARNING "cmpci: out of memory\n");

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#844: FILE: drivers/sound/cmpci.c:2897:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iobase, s->iobase+CM_EXTENT_CODEC-1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#844: FILE: drivers/sound/cmpci.c:2897:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iobase, s->iobase+CM_EXTENT_CODEC-1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#844: FILE: drivers/sound/cmpci.c:2897:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iobase, s->iobase+CM_EXTENT_CODEC-1);
 			                                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#844: FILE: drivers/sound/cmpci.c:2897:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iobase, s->iobase+CM_EXTENT_CODEC-1);
 			                                                                                        ^

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#853: FILE: drivers/sound/cmpci.c:2905:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iomidi, s->iomidi+CM_EXTENT_MIDI-1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#853: FILE: drivers/sound/cmpci.c:2905:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iomidi, s->iomidi+CM_EXTENT_MIDI-1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#853: FILE: drivers/sound/cmpci.c:2905:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iomidi, s->iomidi+CM_EXTENT_MIDI-1);
 			                                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#853: FILE: drivers/sound/cmpci.c:2905:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iomidi, s->iomidi+CM_EXTENT_MIDI-1);
 			                                                                                       ^

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#862: FILE: drivers/sound/cmpci.c:2939:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iosynth, s->iosynth+CM_EXTENT_SYNTH-1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#862: FILE: drivers/sound/cmpci.c:2939:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iosynth, s->iosynth+CM_EXTENT_SYNTH-1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#862: FILE: drivers/sound/cmpci.c:2939:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iosynth, s->iosynth+CM_EXTENT_SYNTH-1);
 			                                                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#862: FILE: drivers/sound/cmpci.c:2939:
+			printk(KERN_ERR "cmpci: io ports %#x-%#x in use\n", s->iosynth, s->iosynth+CM_EXTENT_SYNTH-1);
 			                                                                                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#871: FILE: drivers/sound/cmpci.c:2981:
+			printk(KERN_ERR "cmpci: irq %u in use\n", s->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#875: FILE: drivers/sound/cmpci.c:2984:
+		printk(KERN_INFO "cmpci: found %s adapter at io %#06x irq %u\n",

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#885: FILE: drivers/sound/cmpci.c:3017:
 		if (pcidev->device == PCI_DEVICE_ID_CMEDIA_CM8738) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#889: FILE: drivers/sound/cmpci.c:3020:
+			printk(KERN_INFO "cmpci: chip version = 0%d\n", s->chip_version);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#896: FILE: drivers/sound/cmpci.c:3026:
+				printk(KERN_INFO "cmpci: Inverse SPDIF-in\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#905: FILE: drivers/sound/cmpci.c:3037:
+				printk(KERN_INFO "cmpci: Enable SPDIF loop\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#914: FILE: drivers/sound/cmpci.c:3078:
+		printk(KERN_ERR "cmpci: cannot register misc device\n");

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#927: FILE: drivers/sound/cmpci.c:3108:
+	printk(KERN_INFO "cmpci: version $Revision: 5.64 $ time " __TIME__ " " __DATE__ "\n");

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#927: FILE: drivers/sound/cmpci.c:3108:
+	printk(KERN_INFO "cmpci: version $Revision: 5.64 $ time " __TIME__ " " __DATE__ "\n");

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#927: FILE: drivers/sound/cmpci.c:3108:
+	printk(KERN_INFO "cmpci: version $Revision: 5.64 $ time " __TIME__ " " __DATE__ "\n");

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#927: FILE: drivers/sound/cmpci.c:3108:
+	printk(KERN_INFO "cmpci: version $Revision: 5.64 $ time " __TIME__ " " __DATE__ "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#948: FILE: drivers/sound/cmpci.c:3166:
+	printk(KERN_INFO "cmpci: unloading\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000518658.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 29 warnings, 7 checks, 902 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000518658.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
