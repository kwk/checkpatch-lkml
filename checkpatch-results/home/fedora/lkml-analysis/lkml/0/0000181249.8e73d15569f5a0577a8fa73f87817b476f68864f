WARNING:TYPO_SPELLING: 'noticable' may be misspelled - perhaps 'noticeable'?
#36: 
patch works around that bug.  This was most noticable when the root
                                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#69: FILE: arch/ppc64/kernel/mf.c:35:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#86: FILE: arch/ppc64/kernel/mf.c:700:
 }
+static int rtc_set_tm(int rc, u8 *ce_msg, struct rtc_time *tm)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#118: FILE: arch/ppc64/kernel/mf.c:714:
+	if ((ce_msg[2] =3D=3D 0xa9) ||
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#118: FILE: arch/ppc64/kernel/mf.c:714:
+	if ((ce_msg[2] =3D=3D 0xa9) ||
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#118: FILE: arch/ppc64/kernel/mf.c:714:
+	if ((ce_msg[2] =3D=3D 0xa9) ||

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#119: FILE: arch/ppc64/kernel/mf.c:715:
+	    (ce_msg[2] =3D=3D 0xaf)) {
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#119: FILE: arch/ppc64/kernel/mf.c:715:
+	    (ce_msg[2] =3D=3D 0xaf)) {
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#135: FILE: arch/ppc64/kernel/mf.c:755:
 }
+int mf_get_rtc(struct rtc_time *tm)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#144: FILE: arch/ppc64/kernel/mf.c:764:
+	ce_complete.handler =3D &get_rtc_time_complete;
 	                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#144: FILE: arch/ppc64/kernel/mf.c:764:
+	ce_complete.handler =3D &get_rtc_time_complete;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#145: FILE: arch/ppc64/kernel/mf.c:765:
+	ce_complete.token =3D &rtc_data;
 	                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#145: FILE: arch/ppc64/kernel/mf.c:765:
+	ce_complete.token =3D &rtc_data;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#146: FILE: arch/ppc64/kernel/mf.c:766:
+	rc =3D signal_ce_msg_simple(0x40, &ce_complete);
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#159: FILE: arch/ppc64/kernel/mf.c:779:
+static void get_boot_rtc_time_complete(void *token, struct ce_msg_data *ce=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#161: FILE: arch/ppc64/kernel/mf.c:780:
+static void get_boot_rtc_time_complete(void *token, struct ce_msg_data *ce=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#162: FILE: arch/ppc64/kernel/mf.c:781:
+	struct boot_rtc_time_data *rtc =3D token;
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#165: FILE: arch/ppc64/kernel/mf.c:784:
+	rtc->rc =3D 0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#166: FILE: arch/ppc64/kernel/mf.c:785:
+	rtc->busy =3D 0;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#177: FILE: arch/ppc64/kernel/mf.c:796:
+	rtc_data.busy =3D 1;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#178: FILE: arch/ppc64/kernel/mf.c:797:
+	ce_complete.handler =3D &get_boot_rtc_time_complete;
 	                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#178: FILE: arch/ppc64/kernel/mf.c:797:
+	ce_complete.handler =3D &get_boot_rtc_time_complete;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#179: FILE: arch/ppc64/kernel/mf.c:798:
+	ce_complete.token =3D &rtc_data;
 	                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#179: FILE: arch/ppc64/kernel/mf.c:798:
+	ce_complete.token =3D &rtc_data;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#180: FILE: arch/ppc64/kernel/mf.c:799:
+	rc =3D signal_ce_msg_simple(0x40, &ce_complete);
 	   ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#185: FILE: arch/ppc64/kernel/mf.c:804:
+		extern unsigned long lpevent_count;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#186: FILE: arch/ppc64/kernel/mf.c:805:
+		struct ItLpQueue *lpq =3D get_paca()->lpqueue_ptr;
 		                      ^

CHECK:CAMELCASE: Avoid CamelCase: <ItLpQueue>
#186: FILE: arch/ppc64/kernel/mf.c:805:
+		struct ItLpQueue *lpq =3D get_paca()->lpqueue_ptr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: arch/ppc64/kernel/mf.c:806:
+		struct ItLpQueue *lpq =3D get_paca()->lpqueue_ptr;
+		if (lpq && ItLpQueue_isLpIntPending(lpq))

CHECK:CAMELCASE: Avoid CamelCase: <ItLpQueue_isLpIntPending>
#187: FILE: arch/ppc64/kernel/mf.c:806:
+		if (lpq && ItLpQueue_isLpIntPending(lpq))

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#188: FILE: arch/ppc64/kernel/mf.c:807:
+			lpevent_count +=3D ItLpQueue_process(lpq, NULL);
 			              ^

CHECK:CAMELCASE: Avoid CamelCase: <ItLpQueue_process>
#188: FILE: arch/ppc64/kernel/mf.c:807:
+			lpevent_count +=3D ItLpQueue_process(lpq, NULL);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: include/asm-ppc64/iSeries/mf.h:54:
+extern int mf_get_boot_rtc(struct rtc_time *tm);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181249.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 3 warnings, 10 checks, 200 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181249.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
