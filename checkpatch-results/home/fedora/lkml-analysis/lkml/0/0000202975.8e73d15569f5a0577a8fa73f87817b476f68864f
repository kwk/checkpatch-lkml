WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#79: 
diff -uNp linux/include/linux/mmc/card.h linux-wbsd/include/linux/mmc/card.h

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#89: FILE: include/linux/mmc/card.h:39:
+#define SD_SCR_BUS_WIDTH_1	(1<<0)
                           	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#89: FILE: include/linux/mmc/card.h:39:
+#define SD_SCR_BUS_WIDTH_1	(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#90: FILE: include/linux/mmc/card.h:40:
+#define SD_SCR_BUS_WIDTH_4	(1<<2)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#90: FILE: include/linux/mmc/card.h:40:
+#define SD_SCR_BUS_WIDTH_4	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#100: FILE: include/linux/mmc/card.h:57:
+#define MMC_STATE_SDCARD	(1<<3)		/* is an SD card */
                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#100: FILE: include/linux/mmc/card.h:57:
+#define MMC_STATE_SDCARD	(1<<3)		/* is an SD card */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#101: FILE: include/linux/mmc/card.h:58:
+#define MMC_STATE_READONLY	(1<<4)		/* card is read-only */
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#101: FILE: include/linux/mmc/card.h:58:
+#define MMC_STATE_READONLY	(1<<4)		/* card is read-only */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: include/linux/mmc/host.h:77:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: include/linux/mmc/host.h:79:
+^I$

CHECK:BIT_MACRO: Prefer using the BIT macro
#152: FILE: include/linux/mmc/host.h:80:
+#define MMC_CAP_4_BIT_DATA	(1 << 0)	/* Can the host do 4 bit transfers */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: include/linux/mmc/host.h:92:
+^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#174: FILE: include/linux/mmc/mmc.h:40:
+#define MMC_RSP_R6	(MMC_RSP_SHORT|MMC_RSP_CRC)
                   	              ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#182: FILE: include/linux/mmc/mmc.h:92:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mmc_host *' should also have an identifier name
#182: FILE: include/linux/mmc/mmc.h:92:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#182: FILE: include/linux/mmc/mmc.h:92:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mmc_command *' should also have an identifier name
#182: FILE: include/linux/mmc/mmc.h:92:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#182: FILE: include/linux/mmc/mmc.h:92:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: include/linux/mmc/mmc.h:93:
+extern int mmc_wait_for_app_cmd(struct mmc_host *, unsigned int,
+	struct mmc_command *, int);

CHECK:BIT_MACRO: Prefer using the BIT macro
#212: FILE: include/linux/mmc/protocol.h:126:
+#define R1_APP_CMD		(1 << 5)	/* sr, c */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#220: FILE: include/linux/mmc/protocol.h:212:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/mmc/mmc.c:179:
+ ^I^I^I       completion$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: drivers/mmc/mmc.c:179:
+ ^I^I^I       completion$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: drivers/mmc/mmc.c:191:
+int mmc_wait_for_app_cmd(struct mmc_host *host, unsigned int rca,
+	struct mmc_command *cmd, int retries)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: drivers/mmc/mmc.c:195:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#266: FILE: drivers/mmc/mmc.c:198:
+	BUG_ON(host->card_busy == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host->card_busy"
#266: FILE: drivers/mmc/mmc.c:198:
+	BUG_ON(host->card_busy == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: drivers/mmc/mmc.c:199:
+	BUG_ON(retries < 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: drivers/mmc/mmc.c:200:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: drivers/mmc/mmc.c:202:
+^I$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#275: FILE: drivers/mmc/mmc.c:207:
+	for (i = 0;i <= retries;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#275: FILE: drivers/mmc/mmc.c:207:
+	for (i = 0;i <= retries;i++) {
 	                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/mmc/mmc.c:216:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: drivers/mmc/mmc.c:219:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/mmc/mmc.c:221:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: drivers/mmc/mmc.c:226:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: drivers/mmc/mmc.c:240:
+^I^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#317: FILE: drivers/mmc/mmc.c:249:
+EXPORT_SYMBOL(mmc_wait_for_app_cmd);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#353: FILE: drivers/mmc/mmc.c:323:
+	BUG_ON(host->card_busy == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host->card_busy"
#353: FILE: drivers/mmc/mmc.c:323:
+	BUG_ON(host->card_busy == NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: drivers/mmc/mmc.c:324:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: drivers/mmc/mmc.c:337:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: drivers/mmc/mmc.c:342:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/mmc/mmc.c:355:
+		if (mmc_card_sd(card) &&
+			(card->scr.bus_widths & SD_SCR_BUS_WIDTH_4)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: drivers/mmc/mmc.c:357:
+			struct mmc_command cmd;
+			cmd.opcode = SD_APP_SET_BUS_WIDTH;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: drivers/mmc/mmc.c:360:
+^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/mmc/mmc.c:362:
+			err = mmc_wait_for_app_cmd(host, card->rca, &cmd,
+				CMD_RETRIES);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: drivers/mmc/mmc.c:365:
+^I^I^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#474: FILE: drivers/mmc/mmc.c:471:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#474: FILE: drivers/mmc/mmc.c:471:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#513: FILE: drivers/mmc/mmc.c:510:
+			printk("%s: card has unknown MMCA version %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: drivers/mmc/mmc.c:511:
+			printk("%s: card has unknown MMCA version %d\n",
+				card->host->host_name, card->csd.mmca_vsn);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: drivers/mmc/mmc.c:526:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#529: FILE: drivers/mmc/mmc.c:530:
+			printk("%s: unrecognised CSD structure version %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/mmc/mmc.c:531:
+			printk("%s: unrecognised CSD structure version %d\n",
+				card->host->host_name, csd_struct);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: drivers/mmc/mmc.c:535:
+^I^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#561: FILE: drivers/mmc/mmc.c:552:
 	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#561: FILE: drivers/mmc/mmc.c:552:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#568: FILE: drivers/mmc/mmc.c:559:
+			printk("%s: unrecognised CSD structure version %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/mmc/mmc.c:560:
+			printk("%s: unrecognised CSD structure version %d\n",
+				card->host->host_name, csd_struct);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#617: FILE: drivers/mmc/mmc.c:593:
+	BUG_ON(!mmc_card_sd(card));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: drivers/mmc/mmc.c:594:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: drivers/mmc/mmc.c:597:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#624: FILE: drivers/mmc/mmc.c:600:
+		printk("%s: unrecognised SCR structure version %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: drivers/mmc/mmc.c:601:
+		printk("%s: unrecognised SCR structure version %d\n",
+			card->host->host_name, scr_struct);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: drivers/mmc/mmc.c:605:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: drivers/mmc/mmc.c:800:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: drivers/mmc/mmc.c:811:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: drivers/mmc/mmc.c:813:
+^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#708: FILE: drivers/mmc/mmc.c:815:
+				printk(KERN_WARNING "%s: host does not support "

WARNING:SPLIT_STRING: quoted string split across lines
#709: FILE: drivers/mmc/mmc.c:816:
+				printk(KERN_WARNING "%s: host does not support "
+					"reading read-only switch. assuming "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#710: FILE: drivers/mmc/mmc.c:817:
+					"reading read-only switch. assuming "
+					"write-enable.\n", host->host_name);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#712: FILE: drivers/mmc/mmc.c:819:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#712: FILE: drivers/mmc/mmc.c:819:
+			else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#717: FILE: drivers/mmc/mmc.c:824:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#717: FILE: drivers/mmc/mmc.c:824:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: drivers/mmc/mmc.c:868:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: drivers/mmc/mmc.c:874:
+^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#748: FILE: drivers/mmc/mmc.c:876:
+		if (card->state & (MMC_STATE_DEAD|MMC_STATE_PRESENT))
 		                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: drivers/mmc/mmc.c:880:
+^I^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#754: FILE: drivers/mmc/mmc.c:882:
+		if (err != MMC_ERR_NONE)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: drivers/mmc/mmc.c:887:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: drivers/mmc/mmc.c:889:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#765: FILE: drivers/mmc/mmc.c:893:
+^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err != MMC_ERR_NONE'
#767: FILE: drivers/mmc/mmc.c:895:
+		if ((err != MMC_ERR_NONE) || !(cmd.resp[0] & R1_APP_CMD)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#771: FILE: drivers/mmc/mmc.c:899:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#773: FILE: drivers/mmc/mmc.c:901:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#777: FILE: drivers/mmc/mmc.c:905:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#779: FILE: drivers/mmc/mmc.c:907:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#787: FILE: drivers/mmc/mmc.c:915:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: drivers/mmc/mmc.c:917:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: drivers/mmc/mmc.c:920:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#793: FILE: drivers/mmc/mmc.c:921:
+		sg_init_one(&sg, (u8*)card->raw_scr, 64);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: drivers/mmc/mmc.c:922:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: drivers/mmc/mmc.c:928:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#806: FILE: drivers/mmc/mmc.c:934:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#817: FILE: drivers/mmc/mmc.c:989:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: drivers/mmc/mmc.c:996:
+^I^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#829: FILE: drivers/mmc/mmc.c:1001:
 		if (err != MMC_ERR_NONE)
+		{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: drivers/mmc/mmc.c:1006:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: drivers/mmc/mmc.c:1075:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#869: FILE: drivers/mmc/mmc_block.c:98:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#871: FILE: drivers/mmc/mmc_block.c:100:
+		if ((filp->f_mode & FMODE_WRITE) &&
+			mmc_card_readonly(md->queue.card))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#889: FILE: drivers/mmc/mmc_block.c:452:
+	printk(KERN_INFO "%s: %s %s %dKiB %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#890: FILE: drivers/mmc/mmc_block.c:453:
+	printk(KERN_INFO "%s: %s %s %dKiB %s\n",
 		md->disk->disk_name, mmc_card_id(card), mmc_card_name(card),

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#893: FILE: drivers/mmc/mmc_block.c:455:
+		mmc_card_readonly(card)?"(ro)":"");
 		                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#893: FILE: drivers/mmc/mmc_block.c:455:
+		mmc_card_readonly(card)?"(ro)":"");
 		                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202975.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 55 errors, 20 warnings, 33 checks, 788 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202975.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
