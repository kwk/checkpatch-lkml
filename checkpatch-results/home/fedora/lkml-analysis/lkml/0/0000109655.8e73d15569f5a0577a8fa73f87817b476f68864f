WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#81: FILE: drivers/mmc/mmc.c:1119:
+static inline int blksz_bits(unsigned x)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#83: FILE: drivers/mmc/mmc.c:1121:
+	return fls(x-1);
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: drivers/mmc/mmc.c:1201:
+		if(err != MMC_ERR_INVALID)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#179: FILE: drivers/mmc/mmc.c:1217:
+		 * the status register, hiding the error condition */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#207: FILE: drivers/mmc/mmc.c:1245:
+EXPORT_SYMBOL(mmc_lock_unlock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#222: FILE: include/linux/mmc/card.h:121:
+extern int mmc_lock_unlock(struct mmc_card *card, struct key *key, int mode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#236: FILE: include/linux/mmc/protocol.h:249:
+#define MMC_LOCK_MODE_ERASE	(1<<3)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#236: FILE: include/linux/mmc/protocol.h:249:
+#define MMC_LOCK_MODE_ERASE	(1<<3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#237: FILE: include/linux/mmc/protocol.h:250:
+#define MMC_LOCK_MODE_UNLOCK	(0<<2)
                             	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#238: FILE: include/linux/mmc/protocol.h:251:
+#define MMC_LOCK_MODE_CLR_PWD	(1<<1)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#238: FILE: include/linux/mmc/protocol.h:251:
+#define MMC_LOCK_MODE_CLR_PWD	(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#239: FILE: include/linux/mmc/protocol.h:252:
+#define MMC_LOCK_MODE_SET_PWD	(1<<0)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#239: FILE: include/linux/mmc/protocol.h:252:
+#define MMC_LOCK_MODE_SET_PWD	(1<<0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109655.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 3 warnings, 9 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109655.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
