WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
diff -u -r linux.old/drivers/char/pc_keyb.c linux.new/drivers/char/pc_keyb.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: drivers/char/pc_keyb.c:1252:
+   exercise for the reader.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/char/pc_keyb.c:1253:
+^IAnd now it's done! LED and speaker morse code by Andrew Rodland $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: drivers/char/pc_keyb.c:1256:
+*/ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#69: FILE: drivers/char/pc_keyb.c:1266:
+^I077, 076, 074, 070, 060, 040, 041, 043, 047, 057 ^I /* 0-9 */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#72: FILE: drivers/char/pc_keyb.c:1269:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#74: FILE: drivers/char/pc_keyb.c:1271:
+#define DAHLEN 3 * DITLEN

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#75: FILE: drivers/char/pc_keyb.c:1272:
+#define SPACELEN 7 * DITLEN

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#79: FILE: drivers/char/pc_keyb.c:1276:
+static __inline__ void do_blink (int led) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: drivers/char/pc_keyb.c:1276:
+static __inline__ void do_blink (int led) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#79: FILE: drivers/char/pc_keyb.c:1276:
+static __inline__ void do_blink (int led) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#80: FILE: drivers/char/pc_keyb.c:1277:
+static __inline__ void do_blink (int led) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#81: FILE: drivers/char/pc_keyb.c:1278:
+		if (! blink_setting & 0x01)
 		    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/char/pc_keyb.c:1280:
+^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#95: FILE: drivers/char/pc_keyb.c:1291:
+void panic_blink(char * buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: drivers/char/pc_keyb.c:1292:
+{ $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#97: FILE: drivers/char/pc_keyb.c:1293:
+	static unsigned long next_jiffie = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#98: FILE: drivers/char/pc_keyb.c:1294:
+	static char * bufpos = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: drivers/char/pc_keyb.c:1294:
+	static char * bufpos = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#99: FILE: drivers/char/pc_keyb.c:1295:
+	static char morse = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/char/pc_keyb.c:1297:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: drivers/char/pc_keyb.c:1298:
+^Iif (!blink_setting) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#106: FILE: drivers/char/pc_keyb.c:1302:
+		buf="Panic lost?";
 		   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: drivers/char/pc_keyb.c:1304:
+
+

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#109: FILE: drivers/char/pc_keyb.c:1305:
+	if (jiffies >= next_jiffie || !bufpos) { //messy. fix.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/char/pc_keyb.c:1306:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/char/pc_keyb.c:1319:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#123: FILE: drivers/char/pc_keyb.c:1319:
+
+	

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#124: FILE: drivers/char/pc_keyb.c:1320:
+		if (morse <=1 ) { /* Many thanks for the clever scheme, horizon! */
 		          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#124: FILE: drivers/char/pc_keyb.c:1320:
+		if (morse <=1 ) { /* Many thanks for the clever scheme, horizon! */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/char/pc_keyb.c:1321:
+^I^I^Iif (!*bufpos) { /*Repeat the message */ $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#131: FILE: drivers/char/pc_keyb.c:1327:
+			next_jiffie = jiffies + 3*DITLEN;
 			                         ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#140: FILE: drivers/char/pc_keyb.c:1336:
+				switch (*bufpos) {
+					case '/': morse = 0051; break; /* -..-.  */
+					case '=': morse = 0061; break; /* -...-  */
+					case '.': morse = 0152; break; /* .-.-.- */
+					case '?': morse = 0114; break; /* ..--.. */
+					case ',': morse = 0163; break; /* --..-- */
+					case '-': morse = 0141; break; /* -....- */
+					case '\'':morse = 0136; break; /* .----. */
+					case '"': morse = 0122; break; /* .-..-. */
+					case ':': morse = 0107; break; /* ---... */

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#141: FILE: drivers/char/pc_keyb.c:1337:
+					case '/': morse = 0051; break; /* -..-.  */

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#142: FILE: drivers/char/pc_keyb.c:1338:
+					case '=': morse = 0061; break; /* -...-  */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#143: FILE: drivers/char/pc_keyb.c:1339:
+					case '.': morse = 0152; break; /* .-.-.- */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#144: FILE: drivers/char/pc_keyb.c:1340:
+					case '?': morse = 0114; break; /* ..--.. */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#145: FILE: drivers/char/pc_keyb.c:1341:
+					case ',': morse = 0163; break; /* --..-- */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#146: FILE: drivers/char/pc_keyb.c:1342:
+					case '-': morse = 0141; break; /* -....- */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#147: FILE: drivers/char/pc_keyb.c:1343:
+					case '\'':morse = 0136; break; /* .----. */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#148: FILE: drivers/char/pc_keyb.c:1344:
+					case '"': morse = 0122; break; /* .-..-. */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#149: FILE: drivers/char/pc_keyb.c:1345:
+					case ':': morse = 0107; break; /* ---... */

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#150: FILE: drivers/char/pc_keyb.c:1346:
+					default : /* Space */
 					        ^

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#151: FILE: drivers/char/pc_keyb.c:1347:
+								 next_jiffie += 4*DITLEN; /*For a total of 7*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#151: FILE: drivers/char/pc_keyb.c:1347:
+								 next_jiffie += 4*DITLEN; /*For a total of 7*/
 								                 ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#154: FILE: drivers/char/pc_keyb.c:1350:
+			bufpos ++;
 			       ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#166: FILE: drivers/char/pc_keyb.c:1362:
+			return;
+		} else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#182: FILE: drivers/char/pc_keyb.c:1378:
     if (get_option(&str,&par)) 
+	    blink_setting = par;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#197: FILE: kernel/panic.c:100:
+		extern void panic_blink(char * buf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: kernel/panic.c:101:
+^I^Ipanic_blink(buf); $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000446029.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 8 warnings, 6 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000446029.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
