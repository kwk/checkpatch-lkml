WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
  do not use wait_for_completion when in_interrupt() non-zero (use old wait-sche

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#65: 
--- a/drivers/ide/ide.c Sun Jun 23 17:08:19 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/ide/ide.c:559:
+                     unsigned long timeout, ata_expiry_t expiry)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/ide/ide.c:559:
+                     unsigned long timeout, ata_expiry_t expiry)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/ide/ide.c:561:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: drivers/ide/ide.c:562:
+       struct ata_channel *ch = drive->channel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/ide/ide.c:564:
+       spin_lock_irqsave(ch->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/ide/ide.c:566:
+       if (ch->handler != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#84: FILE: drivers/ide/ide.c:566:
+       if (ch->handler != NULL) {
+               printk("%s: ide_set_handler: handler not null; old=%p, new=%p, f

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch->handler"
#84: FILE: drivers/ide/ide.c:566:
+       if (ch->handler != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: drivers/ide/ide.c:567:
+               printk("%s: ide_set_handler: handler not null; old=%p, new=%p, f$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: drivers/ide/ide.c:567:
+               printk("%s: ide_set_handler: handler not null; old=%p, new=%p, f$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#85: FILE: drivers/ide/ide.c:567:
+               printk("%s: ide_set_handler: handler not null; old=%p, new=%p, f

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: drivers/ide/ide.c:568:
+                       drive->name, ch->handler, handler, __builtin_return_addr$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/ide/ide.c:568:
+                       drive->name, ch->handler, handler, __builtin_return_addr$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/ide/ide.c:569:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: drivers/ide/ide.c:570:
+       ch->handler = handler;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/ide/ide.c:571:
+       ch->expiry = expiry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/ide/ide.c:572:
+       ch->timer.expires = jiffies + timeout;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/ide/ide.c:573:
+       add_timer(&ch->timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/ide/ide.c:575:
+       spin_unlock_irqrestore(ch->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/ide/ide.c:580:
+       if (!ata_status(drive, READY_STAT, BAD_STAT))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: drivers/ide/ide.c:581:
+               return ata_error(drive, rq, __FUNCTION__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/ide/ide.c:581:
+               return ata_error(drive, rq, __FUNCTION__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/ide/ide.c:583:
+       return ide_stopped;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/ide/ide.c:600:
+               args.command_type = IDE_DRIVE_TASK_NO_DATA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/ide/ide.c:600:
+               args.command_type = IDE_DRIVE_TASK_NO_DATA;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: drivers/ide/ide.c:602:
+               ata_irq_enable(drive, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/ide/ide.c:602:
+               ata_irq_enable(drive, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: drivers/ide/ide.c:603:
+               ata_mask(drive);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/ide/ide.c:603:
+               ata_mask(drive);$

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#121: FILE: drivers/ide/ide.c:605:
+               if ((drive->id->command_set_2 & 0x0400) && (drive->id->cfs_enable_2 & 0x0400) && (drive->addressing == 1))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: drivers/ide/ide.c:605:
+               if ((drive->id->command_set_2 & 0x0400) && (drive->id->cfs_enable_2 & 0x0400) && (drive->addressing == 1))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/ide/ide.c:605:
+               if ((drive->id->command_set_2 & 0x0400) && (drive->id->cfs_enable_2 & 0x0400) && (drive->addressing == 1))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#121: FILE: drivers/ide/ide.c:605:
+               if ((drive->id->command_set_2 & 0x0400) && (drive->id->cfs_enable_2 & 0x0400) && (drive->addressing == 1))
+                       ata_out_regfile(drive, &args.hobfile);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->addressing == 1'
#121: FILE: drivers/ide/ide.c:605:
+               if ((drive->id->command_set_2 & 0x0400) && (drive->id->cfs_enable_2 & 0x0400) && (drive->addressing == 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: drivers/ide/ide.c:606:
+                       ata_out_regfile(drive, &args.hobfile);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/ide/ide.c:606:
+                       ata_out_regfile(drive, &args.hobfile);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: drivers/ide/ide.c:608:
+               ata_out_regfile(drive, &args.taskfile);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/ide/ide.c:608:
+               ata_out_regfile(drive, &args.taskfile);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: drivers/ide/ide.c:610:
+               {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/ide/ide.c:610:
+               {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/ide/ide.c:611:
+                       u8 HIHI = (drive->addressing) ? 0xE0 : 0xEF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/ide/ide.c:611:
+                       u8 HIHI = (drive->addressing) ? 0xE0 : 0xEF;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: drivers/ide/ide.c:612:
+                       OUT_BYTE((args.taskfile.device_head & HIHI) | drive->sel$

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: drivers/ide/ide.c:612:
+                       u8 HIHI = (drive->addressing) ? 0xE0 : 0xEF;
+                       OUT_BYTE((args.taskfile.device_head & HIHI) | drive->sel

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/ide/ide.c:612:
+                       OUT_BYTE((args.taskfile.device_head & HIHI) | drive->sel$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#129: FILE: drivers/ide/ide.c:612:
ect.all, IDE_SELECT_REG);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: drivers/ide/ide.c:613:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/ide/ide.c:613:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: drivers/ide/ide.c:615:
+               ide_set_handler(drive, recal_intr, WAIT_CMD, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/ide/ide.c:615:
+               ide_set_handler(drive, recal_intr, WAIT_CMD, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: drivers/ide/ide.c:616:
+               OUT_BYTE(args1->cmd, IDE_COMMAND_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/ide/ide.c:616:
+               OUT_BYTE(args1->cmd, IDE_COMMAND_REG);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000453607.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 34 warnings, 2 checks, 69 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000453607.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
