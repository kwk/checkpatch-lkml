WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#53: FILE: strip.c:512:
+	printk(KERN_INFO "%s: %-13s%s\n", strip_info->dev->name, msg, pkt_text);

CHECK:SPACING: No space is necessary after a cast
#119: FILE: strip.c:1093:
+	    *(MetricomAddress *) strip_info->dev->dev_addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <MetricomAddress>
#119: FILE: strip.c:1093:
+	    *(MetricomAddress *) strip_info->dev->dev_addr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#146: FILE: strip.c:1234:
+		*(MetricomAddress *) strip_info->dev->dev_addr =

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#239: FILE: strip.c:1552:
 	    && (long) jiffies - strip_info->gratuitous_arp >= 0
+	    && memcmp(strip_info->dev->dev_addr, zero_address.c,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#242: FILE: strip.c:1554:
 		      sizeof(zero_address))
+	    && arp_query(haddr.c, brd, strip_info->dev)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#245: FILE: strip.c:1556:
+		   strip_info->dev->name, strip_info->arp_interval / HZ); */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#259: FILE: strip.c:1567:
+				 strip_info->dev->dev_addr,	/* Source HW address is our HW address */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#260: FILE: strip.c:1568:
+				 strip_info->dev->dev_addr);	/* Target HW address is our HW address (redundant) */

CHECK:SPACING: No space is necessary after a cast
#305: FILE: strip.c:1812:
+			*(MetricomAddress *) strip_info->dev->dev_addr =

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#459: FILE: strip.c:2323:
 	if (!strip_info || strip_info->magic != STRIP_MAGIC
+	    || !netif_running(strip_info->dev))

CHECK:SPACING: No space is necessary after a cast
#508: FILE: strip.c:2418:
+		*(MetricomAddress *) strip_info->dev->dev_addr = *addr;

CHECK:SPACING: No space is necessary after a cast
#511: FILE: strip.c:2420:
+		*(MetricomAddress *) strip_info->dev->dev_addr =

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#529: FILE: strip.c:2593:
+	if (strip_info->dev)
+		kfree(strip_info->dev);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct net_device)...)
#546: FILE: strip.c:2619:
+	dev = kmalloc(sizeof(struct net_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#570: FILE: strip.c:2654:
+	strip_info->idle_timer.data = (long) dev;

CHECK:SPACING: No space is necessary after a cast
#581: FILE: strip.c:2660:
+	dev->priv = (void *) strip_info;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#619: FILE: strip.c:2730:
+	return (strip_info->dev->base_addr);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#646: FILE: strip.c:2779:
+		if(copy_to_user((void *) arg, strip_info->dev->name, strlen(strip_info->dev->name) + 1))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#646: FILE: strip.c:2779:
+		if(copy_to_user((void *) arg, strip_info->dev->name, strlen(strip_info->dev->name) + 1))

ERROR:SPACING: space required before the open parenthesis '('
#646: FILE: strip.c:2779:
+		if(copy_to_user((void *) arg, strip_info->dev->name, strlen(strip_info->dev->name) + 1))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000359347.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 6 warnings, 13 checks, 566 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000359347.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
