WARNING:TYPO_SPELLING: 'curent' may be misspelled - perhaps 'current'?
#40: 
> BTW here's my curent bigdiff. It already has some rather nice
                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
diff -ur linux-2.6.9-peval/kernel/power/disk.c linux-2.6.9-peval-hg/kernel/power/disk.c

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#61: FILE: kernel/power/disk.c:32:
+extern int write_page_caches(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#62: FILE: kernel/power/disk.c:33:
+extern int read_page_caches(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#70: FILE: kernel/power/disk.c:111:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: kernel/power/disk.c:154:
+^Iif (!resume) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#99: FILE: kernel/power/disk.c:155:
+		if ((error = write_page_caches())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <Finish>
#100: FILE: kernel/power/disk.c:156:
+			goto Finish;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#110: FILE: kernel/power/disk.c:187:
+	if ((error = prepare(0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#119: FILE: kernel/power/disk.c:244:
+	if ((error = prepare(1)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: kernel/power/swsusp.c:307:
+^I^Ipr_debug("data_write: %p %p %u\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: kernel/power/swsusp.c:308:
+^I^I^I^I(void *)(pagedir_nosave+i)->address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: kernel/power/swsusp.c:308:
+		pr_debug("data_write: %p %p %u\n", 
+				(void *)(pagedir_nosave+i)->address, 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: kernel/power/swsusp.c:308:
+				(void *)(pagedir_nosave+i)->address, 
 				                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#154: FILE: kernel/power/swsusp.c:309:
+				(void *)(pagedir_nosave+i)->orig_address,
 				                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: kernel/power/swsusp.c:310:
+				(pagedir_nosave+i)->swap_address);
 				               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: kernel/power/swsusp.c:519:
+ *^Ito allocate enough contiguous space to hold $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: kernel/power/swsusp.c:520:
+ *^I^I(%nr_copy_pages * sizeof(struct pbe)), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: kernel/power/swsusp.c:521:
+ *^Iwhich has the saved/orig locations of the page.. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: kernel/power/swsusp.c:523:
+ *^ISUSPEND_PD_PAGES() tells us how many pages we need to hold those $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: kernel/power/swsusp.c:526:
+ *^Iis 0x0000001e in hex. The last bit is the 5th, which is the order we $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: kernel/power/swsusp.c:530:
+ *^Iwe need to nr_copy_pages, and in case of an overflow, do the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: kernel/power/swsusp.c:531:
+ *^Icalculation again to update the number of pages needed. $

WARNING:TYPO_SPELLING: 'situtation' may be misspelled - perhaps 'situation'?
#185: FILE: kernel/power/swsusp.c:535:
+ *	to do, the more likely we are to fail in a low-memory situtation 
   	                                                      ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: kernel/power/swsusp.c:535:
+ *^Ito do, the more likely we are to fail in a low-memory situtation $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: kernel/power/swsusp.c:536:
+ *^I(though^Iwe're unlikely to get this far in such a case, since swsusp $

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: kernel/power/swsusp.c:551:
+	} while(diff);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: kernel/power/swsusp.c:563:
+		struct list_head * entry = zone->inactive_list.prev;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: kernel/power/swsusp.c:564:
+		struct list_head * entry = zone->inactive_list.prev;
+		while (entry != &zone->inactive_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#216: FILE: kernel/power/swsusp.c:566:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#217: FILE: kernel/power/swsusp.c:567:
+				struct page * page = list_entry(entry, struct page, lru);
+				inactive += fun(page, p);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: kernel/power/swsusp.c:568:
+^I^I^I} else { $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#219: FILE: kernel/power/swsusp.c:569:
+				inactive ++;
 				         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#225: FILE: kernel/power/swsusp.c:575:
+		struct list_head * entry = zone->active_list.prev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#226: FILE: kernel/power/swsusp.c:576:
+		struct list_head * entry = zone->active_list.prev;
+		while (entry != &zone->active_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#228: FILE: kernel/power/swsusp.c:578:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#229: FILE: kernel/power/swsusp.c:579:
+				struct page * page = list_entry(entry, struct page, lru);
+				active += fun(page, p);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#231: FILE: kernel/power/swsusp.c:581:
+				active ++;
 				       ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#253: FILE: kernel/power/swsusp.c:603:
+	BUG_ON(PageReserved(page) && PageNosave(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#255: FILE: kernel/power/swsusp.c:605:
+		printk("not valid page\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#259: FILE: kernel/power/swsusp.c:609:
+		printk("nosave\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#263: FILE: kernel/power/swsusp.c:613:
+		printk("[nosave]\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#267: FILE: kernel/power/swsusp.c:617:
+		printk("slab\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#268: FILE: kernel/power/swsusp.c:618:
+		return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#271: FILE: kernel/power/swsusp.c:621:
+		BUG_ON(!PagePcs(page));

CHECK:SPACING: No space is necessary after a cast
#272: FILE: kernel/power/swsusp.c:622:
+		(*pe)->address = (long) page_address(page);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#273: FILE: kernel/power/swsusp.c:623:
+		(*pe) ++;
 		      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: kernel/power/swsusp.c:624:
+^I} $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#277: FILE: kernel/power/swsusp.c:627:
+	return (1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: kernel/power/swsusp.c:632:
+^Ireturn foreach_zone_page(zone, setup_pcs_pe, pe);^I$

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#285: FILE: kernel/power/swsusp.c:635:
+static suspend_pagedir_t *pagedir_cache = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#286: FILE: kernel/power/swsusp.c:636:
+static int nr_copy_pcs = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#287: FILE: kernel/power/swsusp.c:637:
+static int pcs_order = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#310: FILE: kernel/power/swsusp.c:660:
+		if (!is_highmem(zone)) {
+			spin_unlock_irq(&zone->lru_lock);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#321: FILE: kernel/power/swsusp.c:671:
+		if (!is_highmem(zone)) {
+			spin_lock_irq(&zone->lru_lock);
+		}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#326: FILE: kernel/power/swsusp.c:676:
+}
+int bio_read_page(pgoff_t page_off, void * page);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: kernel/power/swsusp.c:676:
+int bio_read_page(pgoff_t page_off, void * page);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#330: FILE: kernel/power/swsusp.c:680:
+	struct pbe * p;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#335: FILE: kernel/power/swsusp.c:685:
+	printk( "Reading PageCaches from swap (%d pages)...     ", nr_copy_pcs);

ERROR:SPACING: space prohibited after that open parenthesis '('
#335: FILE: kernel/power/swsusp.c:685:
+	printk( "Reading PageCaches from swap (%d pages)...     ", nr_copy_pcs);

ERROR:SPACING: space required before the open parenthesis '('
#336: FILE: kernel/power/swsusp.c:686:
+	for(i = 0, p = pagedir_cache; i < nr_copy_pcs && !error; i++, p++) {

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#337: FILE: kernel/power/swsusp.c:687:
+		if (!(i%100))
 		       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#338: FILE: kernel/power/swsusp.c:688:
+			printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited after that open parenthesis '('
#338: FILE: kernel/power/swsusp.c:688:
+			printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#338: FILE: kernel/power/swsusp.c:688:
+			printk( "\b\b\b\b%3d%%", i / mod );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: kernel/power/swsusp.c:690:
+		error = bio_read_page(swp_offset(p->swap_address),
+				(void *)p->address);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: kernel/power/swsusp.c:692:
+^I^Ipr_debug("pcs_read: %p %p %u\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: kernel/power/swsusp.c:693:
+^I^I^I^I(void *)p->address, (void *)p->orig_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: kernel/power/swsusp.c:693:
+		pr_debug("pcs_read: %p %p %u\n", 
+				(void *)p->address, (void *)p->orig_address, 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#355: FILE: kernel/power/swsusp.c:705:
+	printk("\b\b\b\bdone\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#359: FILE: kernel/power/swsusp.c:709:
+	return (0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#368: FILE: kernel/power/swsusp.c:718:
+	printk( "Writing PageCaches to swap (%d pages)...     ", nr_copy_pcs);

ERROR:SPACING: space prohibited after that open parenthesis '('
#368: FILE: kernel/power/swsusp.c:718:
+	printk( "Writing PageCaches to swap (%d pages)...     ", nr_copy_pcs);

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#370: FILE: kernel/power/swsusp.c:720:
+		if (!(i%100))
 		       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#371: FILE: kernel/power/swsusp.c:721:
+			printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited after that open parenthesis '('
#371: FILE: kernel/power/swsusp.c:721:
+			printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#371: FILE: kernel/power/swsusp.c:721:
+			printk( "\b\b\b\b%3d%%", i / mod );

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#372: FILE: kernel/power/swsusp.c:722:
+		error = write_page((pagedir_cache+i)->address,
 		                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: kernel/power/swsusp.c:723:
+		error = write_page((pagedir_cache+i)->address,
+					  &((pagedir_cache+i)->swap_address));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#373: FILE: kernel/power/swsusp.c:723:
+					  &((pagedir_cache+i)->swap_address));
 					                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: kernel/power/swsusp.c:725:
+^I^Ipr_debug("pcs_write: %p %p %u\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcs_write', this function's name, in a string
#375: FILE: kernel/power/swsusp.c:725:
+		pr_debug("pcs_write: %p %p %u\n", 

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: kernel/power/swsusp.c:726:
+^I^I^I^I(void *)(pagedir_cache+i)->address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: kernel/power/swsusp.c:726:
+		pr_debug("pcs_write: %p %p %u\n", 
+				(void *)(pagedir_cache+i)->address, 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#376: FILE: kernel/power/swsusp.c:726:
+				(void *)(pagedir_cache+i)->address, 
 				                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#377: FILE: kernel/power/swsusp.c:727:
+				(void *)(pagedir_cache+i)->orig_address,
 				                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#378: FILE: kernel/power/swsusp.c:728:
+				(pagedir_cache+i)->swap_address);
 				              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#381: FILE: kernel/power/swsusp.c:731:
+	printk("\b\b\b\bdone\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#395: FILE: kernel/power/swsusp.c:745:
+		ClearPagePcs(mem_map+i);
 		                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#400: FILE: kernel/power/swsusp.c:750:
+		if (!is_highmem(zone)) {
+			nr_copy_pcs += count_pcs(zone, NULL);
+		}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#418: FILE: kernel/power/swsusp.c:768:
+		return (0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#420: FILE: kernel/power/swsusp.c:770:
+	printk("swsusp: Need to copy %u pcs\n", nr_copy_pcs);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#422: FILE: kernel/power/swsusp.c:772:
+	if ((error = swsusp_swap_check())) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#427: FILE: kernel/power/swsusp.c:777:
+	if ((error = alloc_pagedir_cache())) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#434: FILE: kernel/power/swsusp.c:784:
+	printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: kernel/power/swsusp.c:785:
+	printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",
+			nr_copy_pages, nr_copy_pcs);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#438: FILE: kernel/power/swsusp.c:788:
+		if (recal == 0) {
+			page_cache_unlock();
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#441: FILE: kernel/power/swsusp.c:791:
+		printk("#");

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#443: FILE: kernel/power/swsusp.c:793:
+		recal ++;
 		      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#451: FILE: kernel/power/swsusp.c:801:
+		printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: kernel/power/swsusp.c:802:
+		printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",
+				nr_copy_pages, nr_copy_pcs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#454: FILE: kernel/power/swsusp.c:804:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#457: FILE: kernel/power/swsusp.c:807:
+	printk("swsusp(2/2): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: kernel/power/swsusp.c:808:
+	printk("swsusp(2/2): Need to copy %u pages, %u pcs\n",
+			nr_copy_pages, nr_copy_pcs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#462: FILE: kernel/power/swsusp.c:812:
+		printk("swsusp_alloc failed, %d\n", error);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#468: FILE: kernel/power/swsusp.c:818:
+	printk("swsusp(final): Need to copy %u/%u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: kernel/power/swsusp.c:819:
+	printk("swsusp(final): Need to copy %u/%u pages, %u pcs\n",
+			nr_copy_pages, nr_copy_pages_check, nr_copy_pcs);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#475: FILE: kernel/power/swsusp.c:825:
+		if (!is_highmem(zone)) {
+			count_pcs(zone, &pe);
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: kernel/power/swsusp.c:830:
+^Iif (error) $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#483: FILE: kernel/power/swsusp.c:833:
+	return (0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#494: FILE: kernel/power/swsusp.c:871:
+		BUG_ON(zone->nr_inactive == 0 && zone->nr_active == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: kernel/power/swsusp.c:941:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#583: FILE: kernel/power/swsusp.c:1049:
+		printk("suspend: Allocating pagedir failed.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#588: FILE: kernel/power/swsusp.c:1053:
+		printk("suspend: Allocating image pages failed.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#626: FILE: kernel/power/swsusp.c:1145:
+	BUG_ON (nr_copy_pages_check != nr_copy_pages);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#626: FILE: kernel/power/swsusp.c:1145:
+	BUG_ON (nr_copy_pages_check != nr_copy_pages);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#636: FILE: kernel/power/swsusp.c:1284:
+static struct block_device * resume_bdev __nosavedata;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: kernel/power/swsusp.c:1433:
+^I^Ipr_debug("data_read: %p %p %u\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#646: FILE: kernel/power/swsusp.c:1434:
+^I^I^I^I(void *)p->address, (void *)p->orig_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: kernel/power/swsusp.c:1434:
+		pr_debug("data_read: %p %p %u\n", 
+				(void *)p->address, (void *)p->orig_address, 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 56 errors, 39 warnings, 25 checks, 576 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
