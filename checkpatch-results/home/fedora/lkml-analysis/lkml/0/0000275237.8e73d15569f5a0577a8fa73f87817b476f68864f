WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
That seems reasonable. gcc's optimiser should be able to render them the same.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: include/linux/fs.h:224:
+extern void __init inode_init(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#292: FILE: include/linux/fs.h:224:
+extern void __init inode_init(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#293: FILE: include/linux/fs.h:225:
+extern void __init inode_init_early(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: include/linux/fs.h:226:
+extern void __init mnt_init(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#294: FILE: include/linux/fs.h:226:
+extern void __init mnt_init(unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: include/linux/fs.h:227:
+extern void __init files_init(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#295: FILE: include/linux/fs.h:227:
+extern void __init files_init(unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#304: FILE: include/linux/fs.h:1204:
+extern void __init vfs_caches_init_early(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/linux/fs.h:1205:
+extern void __init vfs_caches_init(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#305: FILE: include/linux/fs.h:1205:
+extern void __init vfs_caches_init(unsigned long);

WARNING:LINE_SPACING: Missing a blank line after declarations
#319: FILE: include/linux/kernel.h:98:
+	int r = 0;
+	for (x >>= 1; x > 0; x >>= 1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#324: FILE: include/linux/kernel.h:103:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after nr_kernel_pages
#368: FILE: mm/page_alloc.c:58:
+static unsigned long __initdata nr_kernel_pages;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after nr_all_pages
#369: FILE: mm/page_alloc.c:59:
+static unsigned long __initdata nr_all_pages;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#413: FILE: mm/page_alloc.c:2028:
+	 * nearest power of 2 in size) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#435: FILE: mm/page_alloc.c:2050:
+		table = (void *) alloc_bootmem(size);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#442: FILE: mm/page_alloc.c:2057:
+	printk("%s hash table entries: %d (order: %d, %lu bytes)\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000275237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 10 warnings, 8 checks, 342 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000275237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
