WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#61: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#69: FILE: include/linux/poll.h:39:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#106: FILE: fs/select.c:50:
+static void __pollwait(struct file *filp, wait_queue_head_t *wait_address, poll_table *p);
                                     ^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#115: FILE: fs/select.c:59:
 }
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#130: FILE: fs/select.c:74:
+	while(pwq->nr > 0) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#133: FILE: fs/select.c:77:
+		remove_wait_queue(entry->wait_address,&entry->wait);
 		                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#133: FILE: fs/select.c:77:
+		remove_wait_queue(entry->wait_address,&entry->wait);
 		                                      ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#134: FILE: fs/select.c:78:
+		fput(entry->filp);
 		            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#149: FILE: fs/select.c:96:
+static void __pollwait(struct file *filp, wait_queue_head_t *wait_address, poll_table *_p)
                                     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: fs/select.c:100:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: fs/select.c:100:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: fs/select.c:101:
+ ^Iif(p->nr < POLL_TABLE_INTERNAL) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#164: FILE: fs/select.c:101:
+ ^Iif(p->nr < POLL_TABLE_INTERNAL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: fs/select.c:101:
+ ^Iif(p->nr < POLL_TABLE_INTERNAL) {$

ERROR:SPACING: space required before the open parenthesis '('
#164: FILE: fs/select.c:101:
+ 	if(p->nr < POLL_TABLE_INTERNAL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: fs/select.c:102:
+ ^I^Ientry = p->internal+p->nr++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#165: FILE: fs/select.c:102:
+ ^I^Ientry = p->internal+p->nr++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: fs/select.c:102:
+ ^I^Ientry = p->internal+p->nr++;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#165: FILE: fs/select.c:102:
+ 		entry = p->internal+p->nr++;
  		                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: fs/select.c:103:
+ ^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: fs/select.c:103:
+ ^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: fs/select.c:103:
+ ^I} else {$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: fs/select.c:121:
+		table->entry = entry+1;
 		                    ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#201: FILE: fs/select.c:125:
+	get_file(filp);
 	         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#202: FILE: fs/select.c:126:
+	entry->filp = filp;
 	       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#202: FILE: fs/select.c:126:
+	entry->filp = filp;
 	              ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#205: FILE: fs/select.c:129:
+	add_wait_queue(wait_address,&entry->wait);
 	                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#205: FILE: fs/select.c:129:
+	add_wait_queue(wait_address,&entry->wait);
 	                            ^

ERROR:SPACING: space required before the open parenthesis '('
#244: FILE: fs/select.c:268:
+	if(size <= SELECT_INLINE_BYTES)

ERROR:SPACING: space required before the open parenthesis '('
#253: FILE: fs/select.c:275:
+	if(bits != internal)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#262: FILE: fs/select.c:294:
+	char ibuf[6*SELECT_INLINE_BYTES];
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#319: FILE: fs/select.c:391:
+#define POLLFD_PER_PAGE  ((PAGE_SIZE-sizeof(struct poll_list)) / sizeof(struct pollfd))
                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: fs/select.c:426:
+static int do_poll(unsigned int nfds,  struct poll_list *list,
+			struct poll_wqueues *wait, long timeout)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: fs/select.c:433:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: fs/select.c:433:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#350: FILE: fs/select.c:438:
+		while(walk != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "walk"
#350: FILE: fs/select.c:438:
+		while(walk != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#351: FILE: fs/select.c:439:
+			do_pollfd( walk->len, walk->entries, &pt, &count);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#361: FILE: fs/select.c:454:
+#define INLINE_POLL_COUNT	((190+sizeof(struct pollfd))/sizeof(struct pollfd))
                          	     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#361: FILE: fs/select.c:454:
+#define INLINE_POLL_COUNT	((190+sizeof(struct pollfd))/sizeof(struct pollfd))
                          	                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: fs/select.c:458:
+ ^Iint fdcount, err;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#369: FILE: fs/select.c:458:
+ ^Iint fdcount, err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: fs/select.c:458:
+ ^Iint fdcount, err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: fs/select.c:459:
+ ^Iunsigned int i;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: fs/select.c:459:
+ ^Iunsigned int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: fs/select.c:459:
+ ^Iunsigned int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: fs/select.c:464:
+ ^Istruct poll_list *pollwalk;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#375: FILE: fs/select.c:464:
+ ^Istruct poll_list *pollwalk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: fs/select.c:464:
+ ^Istruct poll_list *pollwalk;$

ERROR:SPACING: space required before the open parenthesis '('
#388: FILE: fs/select.c:481:
+	if(nfds <= INLINE_POLL_COUNT)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#409: FILE: fs/select.c:488:
+	while(i!=0) {
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#409: FILE: fs/select.c:488:
+	while(i!=0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#411: FILE: fs/select.c:490:
+		struct poll_list *pp;
+		pp = kmalloc(sizeof(struct poll_list)+

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#411: FILE: fs/select.c:490:
+		pp = kmalloc(sizeof(struct poll_list)+
 		                                     ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pp)...) over kmalloc(sizeof(struct poll_list)...)
#411: FILE: fs/select.c:490:
+		pp = kmalloc(sizeof(struct poll_list)+

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: space preferred before that '*' (ctx:VxE)
#412: FILE: fs/select.c:491:
+				sizeof(struct pollfd)*
 				                     ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#413: FILE: fs/select.c:492:
+				(i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i),
 				  ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#413: FILE: fs/select.c:492:
+				(i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i),
 				                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#413: FILE: fs/select.c:492:
+				(i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i),
 				                                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#415: FILE: fs/select.c:494:
+		if(pp==NULL)
 		     ^

ERROR:SPACING: space required before the open parenthesis '('
#415: FILE: fs/select.c:494:
+		if(pp==NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pp"
#415: FILE: fs/select.c:494:
+		if(pp==NULL)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#423: FILE: fs/select.c:496:
+		pp->next=NULL;
 		        ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#424: FILE: fs/select.c:497:
+		pp->len = (i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i);
 		            ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#424: FILE: fs/select.c:497:
+		pp->len = (i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i);
 		                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#424: FILE: fs/select.c:497:
+		pp->len = (i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i);
 		                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: fs/select.c:501:
+^I^Iif (copy_from_user(pollwalk+1, ufds + nfds-i, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#428: FILE: fs/select.c:501:
+		if (copy_from_user(pollwalk+1, ufds + nfds-i, 
 		                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#428: FILE: fs/select.c:501:
+		if (copy_from_user(pollwalk+1, ufds + nfds-i, 
 		                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: fs/select.c:502:
+		if (copy_from_user(pollwalk+1, ufds + nfds-i, 
+				sizeof(struct pollfd)*pollwalk->len)) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#429: FILE: fs/select.c:502:
+				sizeof(struct pollfd)*pollwalk->len)) {
 				                     ^

ERROR:SPACING: space required before the open parenthesis '('
#459: FILE: fs/select.c:513:
+	while(pollwalk != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pollwalk"
#459: FILE: fs/select.c:513:
+	while(pollwalk != NULL) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#463: FILE: fs/select.c:517:
+		for (j=0; j < pollwalk->len; j++, ufds++) {
 		      ^

ERROR:SPACING: space required before the open parenthesis '('
#464: FILE: fs/select.c:518:
+			if(__put_user(fds[j].revents, &ufds->revents))

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: fs/select.c:522:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#468: FILE: fs/select.c:522:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: fs/select.c:522:
+  ^I}$

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#483: FILE: fs/select.c:528:
+	while(pollwalk!=NULL) {
 	              ^

ERROR:SPACING: space required before the open parenthesis '('
#483: FILE: fs/select.c:528:
+	while(pollwalk!=NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pollwalk"
#483: FILE: fs/select.c:528:
+	while(pollwalk!=NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#485: FILE: fs/select.c:530:
+		struct poll_list *pp = pollwalk->next;
+		kfree(pollwalk);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#541: FILE: fs/select.c:99:
+static int poll_wake_func(wait_queue_t *wait, unsigned mode, int sync)

WARNING:LINE_SPACING: Missing a blank line after declarations
#544: FILE: fs/select.c:102:
+	struct poll_table_entry *entry = container_of(wait, struct poll_table_entry, wait);
+	entry->woken = 1;

WARNING:MEMORY_BARRIER: memory barrier without comment
#545: FILE: fs/select.c:103:
+	mb();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#597: FILE: fs/select.c:213:
+	if ((mask & POLLIN_SET) && ISSET(bit, __IN(fds,off))) {
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: fs/select.c:214:
+		SET(bit, __RES_IN(fds,off));
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#601: FILE: fs/select.c:217:
+	if ((mask & POLLOUT_SET) && ISSET(bit, __OUT(fds,off))) {
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: fs/select.c:218:
+		SET(bit, __RES_OUT(fds,off));
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: fs/select.c:221:
+	if ((mask & POLLEX_SET) && ISSET(bit, __EX(fds,off))) {
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#606: FILE: fs/select.c:222:
+		SET(bit, __RES_EX(fds,off));
 		                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: fs/select.c:232:
+	int retval = 0;
+	for (i=0;i<size;i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#616: FILE: fs/select.c:232:
+	for (i=0;i<size;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#616: FILE: fs/select.c:232:
+	for (i=0;i<size;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#616: FILE: fs/select.c:232:
+	for (i=0;i<size;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#616: FILE: fs/select.c:232:
+	for (i=0;i<size;i++) {
 	               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#619: FILE: fs/select.c:235:
+		int fd;
+		if (!entries[i].woken)

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: fs/select.c:236:
+^I       ^I^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#620: FILE: fs/select.c:236:
+^I       ^I^Icontinue;$

WARNING:MEMORY_BARRIER: memory barrier without comment
#622: FILE: fs/select.c:238:
+		mb();

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#632: FILE: fs/select.c:248:
+			mask = entries[i].filp->f_op->poll(entries[i].filp, NULL);
 			                                              ^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#633: FILE: fs/select.c:249:
+		retval += parse_mask(fds, mask, fd/__NFDBITS, BIT(fd));
 		                                  ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#692: FILE: fs/select.c:288:
+			table.handle = (void*)i;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#704: FILE: fs/select.c:299:
+	 * than the bit lookup */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#720: FILE: fs/select.c:315:
+			retval += scan_entries(fds, pg->entries, pg->entry-pg->entries, &prev);
 			                                                  ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#747: FILE: fs/select.c:228:
+static int scan_select_entries(fd_set_bits *fds, struct poll_table_entry *entries, int size, int *prev)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#768: FILE: fs/select.c:314:
+			retval += scan_select_entries(fds, pg->entries, pg->entry-pg->entries, &prev);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#768: FILE: fs/select.c:314:
+			retval += scan_select_entries(fds, pg->entries, pg->entry-pg->entries, &prev);
 			                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#803: FILE: fs/select.c:495:
+	for (i=0;i<size;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#803: FILE: fs/select.c:495:
+	for (i=0;i<size;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#803: FILE: fs/select.c:495:
+	for (i=0;i<size;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#803: FILE: fs/select.c:495:
+	for (i=0;i<size;i++) {
 	               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: fs/select.c:500:
+^I       ^I^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#808: FILE: fs/select.c:500:
+^I       ^I^Icontinue;$

WARNING:MEMORY_BARRIER: memory barrier without comment
#810: FILE: fs/select.c:502:
+		mb();

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#820: FILE: fs/select.c:512:
+			mask = entries[i].filp->f_op->poll(entries[i].filp, NULL);
 			                                              ^^^^

ERROR:SPACING: space required before the open parenthesis '('
#844: FILE: fs/select.c:534:
+	while(walk != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "walk"
#844: FILE: fs/select.c:534:
+	while(walk != NULL) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#845: FILE: fs/select.c:535:
+		do_pollfd( walk->len, walk->entries, &pt, &count);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#873: FILE: fs/select.c:555:
+			count += scan_poll_entries(pg->entries, pg->entry-pg->entries, &prev);
 			                                                 ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#901: FILE: fs/select.c:229:
+				int (*actor)(void *priv, void *handle, unsigned long mask), void *priv)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#901: FILE: fs/select.c:229:
+static int scan_entries(struct poll_table_entry *entries, int size, void **prev,
+				int (*actor)(void *priv, void *handle, unsigned long mask), void *priv)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#937: FILE: fs/select.c:259:
+				int (*actor)(void *priv, void *handle, unsigned long mask), void *priv)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: fs/select.c:259:
+static int wait_for_events(struct poll_wqueues *wait, long *timeout,
+				int (*actor)(void *priv, void *handle, unsigned long mask), void *priv)

WARNING:LINE_SPACING: Missing a blank line after declarations
#940: FILE: fs/select.c:262:
+	int count = 0;
+	for (;;) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#943: FILE: fs/select.c:265:
+		void *prev;
+		if (count || !(*timeout) || signal_pending(current))

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#955: FILE: fs/select.c:277:
+			count += scan_entries(pg->entries, pg->entry-pg->entries, &prev, actor, priv);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#955: FILE: fs/select.c:277:
+			count += scan_entries(pg->entries, pg->entry-pg->entries, &prev, actor, priv);
 			                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#965: FILE: fs/select.c:287:
+	int fd = (int)handle;
+	return parse_mask(priv, mask, fd/__NFDBITS, BIT(fd));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#965: FILE: fs/select.c:287:
+	return parse_mask(priv, mask, fd/__NFDBITS, BIT(fd));
 	                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411974.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 52 errors, 46 warnings, 32 checks, 892 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411974.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
