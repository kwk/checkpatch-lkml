WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#	           ChangeSet	1.1341  -> 1.1343 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#	drivers/char/Kconfig	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#	         MAINTAINERS	1.148   -> 1.149  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#	drivers/char/Makefile	1.58    -> 1.59   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#	               (new)	        -> 1.13    drivers/char/sn_serial.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# 03/06/26	chadt@tomahawk.engr.sgi.com	1.1342

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# Add sn_serial.c driver

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# 03/06/27	chadt@tomahawk.engr.sgi.com	1.1343

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# Port SGI SN2 console driver to 2.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#59: 
--- a/MAINTAINERS	Fri Jun 27 17:37:36 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#67: FILE: MAINTAINERS:1631:
+P:	Chad Talbott
+M:	chadt@sgi.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#81: FILE: drivers/char/Kconfig:394:
+config SGI_L1_SERIAL
+	bool "SGI SN2 L1 serial port support"
+	depends on SERIAL_NONSTANDARD && IA64
+	help
+	  If you have an SGI SN2 and you want to use the serial port
+	  connected to the system controller (you want this!), say Y.
+	  Otherwise, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#89: FILE: drivers/char/Kconfig:402:
+config SGI_L1_SERIAL_CONSOLE
+	bool "SGI SN2 L1 serial console support"
+	depends on SGI_L1_SERIAL
+	help
+	  If you have an SGI SN2 and you would like to use the system
+	  controller serial port as your console (you want this!), 
+	  say Y.  Otherwise, say N.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: drivers/char/Kconfig:407:
+^I  controller serial port as your console (you want this!), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: drivers/char/sn_serial.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#142: FILE: drivers/char/sn_serial.c:28:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#154: FILE: drivers/char/sn_serial.c:40:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#177: FILE: drivers/char/sn_serial.c:63:
+static char sysrq_serial_str[] = "\eSYS";

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#221: FILE: drivers/char/sn_serial.c:107:
+#define RESTART_TIMEOUT	20*HZ
                        	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#221: FILE: drivers/char/sn_serial.c:107:
+#define RESTART_TIMEOUT	20*HZ

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#222: FILE: drivers/char/sn_serial.c:108:
+#define POLL_TIMEOUT	2*HZ/100
                     	 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#222: FILE: drivers/char/sn_serial.c:108:
+#define POLL_TIMEOUT	2*HZ/100
                     	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#222: FILE: drivers/char/sn_serial.c:108:
+#define POLL_TIMEOUT	2*HZ/100

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#233: FILE: drivers/char/sn_serial.c:119:
+	extern u64 master_node_bedrock_address;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: drivers/char/sn_serial.c:120:
+	extern u64 master_node_bedrock_address;
+	void early_sn_setup(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#234: FILE: drivers/char/sn_serial.c:120:
+	void early_sn_setup(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/char/sn_serial.c:129:
+ ^I^I * was done via sal or directly */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: drivers/char/sn_serial.c:129:
+ ^I^I * was done via sal or directly */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#243: FILE: drivers/char/sn_serial.c:129:
+ 		 * was done via sal or directly */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#271: FILE: drivers/char/sn_serial.c:157:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#279: FILE: drivers/char/sn_serial.c:165:
+			extern u64 master_node_bedrock_address;

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: drivers/char/sn_serial.c:166:
+			extern u64 master_node_bedrock_address;
+			ch = readb((unsigned long)master_node_bedrock_address + (REG_DAT << 3));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#292: FILE: drivers/char/sn_serial.c:178:
+			unsigned long sysrq_timeout = sysrq_requested + HZ*5;
 			                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#293: FILE: drivers/char/sn_serial.c:179:
+			unsigned long sysrq_timeout = sysrq_requested + HZ*5;
+			sysrq_requested = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#299: FILE: drivers/char/sn_serial.c:185:
+		if (ch == *sysrq_serial_ptr) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#304: FILE: drivers/char/sn_serial.c:190:
+		} else

WARNING:INDENTED_LABEL: labels should not be indented
#314: FILE: drivers/char/sn_serial.c:200:
+	ignore_char:

CHECK:BRACES: braces {} should be used on all arms of this statement
#316: FILE: drivers/char/sn_serial.c:202:
+		if (sn_sal_irq)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#318: FILE: drivers/char/sn_serial.c:204:
+		else {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#322: FILE: drivers/char/sn_serial.c:208:
+				extern u64 master_node_bedrock_address;

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#323: FILE: drivers/char/sn_serial.c:209:
+				sal_call_status = readb((unsigned long)master_node_bedrock_address + (REG_LSR << 3));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#323: FILE: drivers/char/sn_serial.c:209:
+				extern u64 master_node_bedrock_address;
+				sal_call_status = readb((unsigned long)master_node_bedrock_address + (REG_LSR << 3));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#339: FILE: drivers/char/sn_serial.c:225:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#368: FILE: drivers/char/sn_serial.c:254:
+			if (IS_RUNNING_ON_SIMULATOR())
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#370: FILE: drivers/char/sn_serial.c:256:
+			else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#397: FILE: drivers/char/sn_serial.c:283:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#406: FILE: drivers/char/sn_serial.c:292:
+		if (status & SAL_CONSOLE_INTR_RECV) {
+			receive_chars(sn_sal_tty, &status, regs);
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: drivers/char/sn_serial.c:295:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#410: FILE: drivers/char/sn_serial.c:296:
+		if (status & SAL_CONSOLE_INTR_XMIT) {
+			transmit_chars(sn_sal_tty);
+		}

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#418: FILE: drivers/char/sn_serial.c:304:
+			extern u64 master_node_bedrock_address;

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: drivers/char/sn_serial.c:305:
+                        input = readb((unsigned long)master_node_bedrock_address + (REG_LSR << 3));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/char/sn_serial.c:305:
+                        input = readb((unsigned long)master_node_bedrock_address + (REG_LSR << 3));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: drivers/char/sn_serial.c:306:
+                        if (input & LSR_RCA)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/char/sn_serial.c:306:
+                        if (input & LSR_RCA)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#434: FILE: drivers/char/sn_serial.c:320:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#449: FILE: drivers/char/sn_serial.c:335:
+	if (((sn_sal_rev_major() <= 1) && (sn_sal_rev_minor() <= 3))
+	    || (IS_RUNNING_ON_SIMULATOR())) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#451: FILE: drivers/char/sn_serial.c:337:
+		printk("========== OLD prom version %x.%x - run in polled mode\n",

WARNING:SPACING: space prohibited before semicolon
#454: FILE: drivers/char/sn_serial.c:340:
+		return ;

ERROR:SPACING: spaces prohibited around that '->' (ctx:ExW)
#459: FILE: drivers/char/sn_serial.c:345:
+		-> node_first_cpu;
 		^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#465: FILE: drivers/char/sn_serial.c:351:
+	BUG_ON(result != SGI_UART_VECTOR);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#470: FILE: drivers/char/sn_serial.c:356:
+	if (result >= 0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#480: FILE: drivers/char/sn_serial.c:366:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#481: FILE: drivers/char/sn_serial.c:367:
+		printk("Console proceeding in polled mode\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#485: FILE: drivers/char/sn_serial.c:371:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#491: FILE: drivers/char/sn_serial.c:377:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#508: FILE: drivers/char/sn_serial.c:394:
+	if (!(tty = sn_sal_tty))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->ldisc.write_wakeup)
#514: FILE: drivers/char/sn_serial.c:400:
+			(tty->ldisc.write_wakeup)(tty);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#519: FILE: drivers/char/sn_serial.c:405:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#538: FILE: drivers/char/sn_serial.c:424:
+
+

WARNING:TYPO_SPELLING: 'sofware' may be misspelled - perhaps 'software'?
#541: FILE: drivers/char/sn_serial.c:427:
+ * End of "sofware interrupt" routines.
            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#544: FILE: drivers/char/sn_serial.c:430:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#553: FILE: drivers/char/sn_serial.c:439:
+sn_sal_open(struct tty_struct *tty, struct file *filp)
                                                  ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#564: FILE: drivers/char/sn_serial.c:450:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#569: FILE: drivers/char/sn_serial.c:455:
+sn_sal_close(struct tty_struct *tty, struct file * filp)
                                                    ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#569: FILE: drivers/char/sn_serial.c:455:
+sn_sal_close(struct tty_struct *tty, struct file * filp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: drivers/char/sn_serial.c:463:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/char/sn_serial.c:463:
+    $

WARNING:RETURN_VOID: void function return statements are not generally useful
#579: FILE: drivers/char/sn_serial.c:465:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#581: FILE: drivers/char/sn_serial.c:467:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: drivers/char/sn_serial.c:470:
+sn_sal_write(struct tty_struct *tty, int from_user,
+	       const unsigned char *buf, int count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#592: FILE: drivers/char/sn_serial.c:478:
+			int c1;
+			c = CIRC_SPACE_TO_END(xmit.head, xmit.tail,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#636: FILE: drivers/char/sn_serial.c:522:
+			if (c <= 0) {
+				break;
+			}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'xmit.head != xmit.tail'
#648: FILE: drivers/char/sn_serial.c:534:
+	if ((xmit.head != xmit.tail) && !tty->stopped && !tty->hw_stopped)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#654: FILE: drivers/char/sn_serial.c:540:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#670: FILE: drivers/char/sn_serial.c:556:
+	xmit.head = (xmit.head + 1) & (SERIAL_XMIT_SIZE-1);
 	                                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#674: FILE: drivers/char/sn_serial.c:560:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#682: FILE: drivers/char/sn_serial.c:568:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#689: FILE: drivers/char/sn_serial.c:575:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#696: FILE: drivers/char/sn_serial.c:582:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: drivers/char/sn_serial.c:585:
+sn_sal_ioctl(struct tty_struct *tty, struct file *file,
+	       unsigned int cmd, unsigned long arg)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#705: FILE: drivers/char/sn_serial.c:591:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: drivers/char/sn_serial.c:595:
+ ^I/* don't care about termios */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#709: FILE: drivers/char/sn_serial.c:595:
+ ^I/* don't care about termios */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/char/sn_serial.c:595:
+ ^I/* don't care about termios */$

WARNING:RETURN_VOID: void function return statements are not generally useful
#711: FILE: drivers/char/sn_serial.c:597:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#713: FILE: drivers/char/sn_serial.c:599:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#721: FILE: drivers/char/sn_serial.c:607:
+	xmit.head = xmit.tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->ldisc.write_wakeup)
#728: FILE: drivers/char/sn_serial.c:614:
+		(tty->ldisc.write_wakeup)(tty);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#731: FILE: drivers/char/sn_serial.c:617:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#738: FILE: drivers/char/sn_serial.c:624:
+
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#744: FILE: drivers/char/sn_serial.c:630:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#746: FILE: drivers/char/sn_serial.c:632:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#755: FILE: drivers/char/sn_serial.c:641:
+sn_sal_read_proc(char *page, char **start, off_t off, int count,
+		   int *eof, void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#759: FILE: drivers/char/sn_serial.c:645:
+	off_t	begin = 0;
+	extern nasid_t get_console_nasid(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#759: FILE: drivers/char/sn_serial.c:645:
+	extern nasid_t get_console_nasid(void);

WARNING:LONG_LINE_STRING: line length of 110 exceeds 100 columns
#761: FILE: drivers/char/sn_serial.c:647:
+	len += sprintf(page, "sal_cons: %s 1.0 driver:%s revision:%s console nasid %d : irq %d tx/rx %d/%d\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#766: FILE: drivers/char/sn_serial.c:652:
+	if (off >= len+begin)
 	              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#768: FILE: drivers/char/sn_serial.c:654:
+	*start = page + (off-begin);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#770: FILE: drivers/char/sn_serial.c:656:
+	return count < begin+len-off ? count : begin+len-off;
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#770: FILE: drivers/char/sn_serial.c:656:
+	return count < begin+len-off ? count : begin+len-off;
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#770: FILE: drivers/char/sn_serial.c:656:
+	return count < begin+len-off ? count : begin+len-off;
 	                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#770: FILE: drivers/char/sn_serial.c:656:
+	return count < begin+len-off ? count : begin+len-off;
 	                                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#773: FILE: drivers/char/sn_serial.c:659:
+
+

WARNING:CONST_STRUCT: struct tty_operations should normally be const
#774: FILE: drivers/char/sn_serial.c:660:
+static struct tty_operations sn_sal_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#825: FILE: drivers/char/sn_serial.c:711:
+	if ((retval = tty_register_driver(sn_sal_driver)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#872: FILE: drivers/char/sn_serial.c:758:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#882: FILE: drivers/char/sn_serial.c:768:
+	if ((e = tty_unregister_driver(sn_sal_driver)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#883: FILE: drivers/char/sn_serial.c:769:
+		printk("SALconsole: failed to unregister driver (%d)\n", e);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#899: FILE: drivers/char/sn_serial.c:785:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#912: FILE: drivers/char/sn_serial.c:798:
+sn_sal_console_write(struct console *co, const char *s, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#922: FILE: drivers/char/sn_serial.c:808:
+sn_sal_console_out(const char *s, unsigned count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#926: FILE: drivers/char/sn_serial.c:812:
+	static int inited;
+	void early_sn_setup(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#926: FILE: drivers/char/sn_serial.c:812:
+	void early_sn_setup(void);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#928: FILE: drivers/char/sn_serial.c:814:
+		inited=1;
 		      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#935: FILE: drivers/char/sn_serial.c:821:
+    ^I^Iia64_sn_console_putb(s, count);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#935: FILE: drivers/char/sn_serial.c:821:
+    ^I^Iia64_sn_console_putb(s, count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: drivers/char/sn_serial.c:821:
+    ^I^Iia64_sn_console_putb(s, count);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#952: FILE: drivers/char/sn_serial.c:838:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#967: FILE: drivers/char/sn_serial.c:853:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000359078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 68 warnings, 54 checks, 911 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000359078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
