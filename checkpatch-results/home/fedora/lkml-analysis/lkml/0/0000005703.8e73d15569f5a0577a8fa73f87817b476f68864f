WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -rupN linux-2.6.20-rc2/drivers/ata/sata_promise.c linux-2.6.20-rc2.sata_promise-atapi-wip-1/drivers/ata/sata_promise.c

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#104: FILE: drivers/ata/sata_promise.c:428:
+		/* let pdc_pkt_header() set up the header proper (12 bytes),
+		   it will set up another 4 bytes too which we'll overwrite */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: drivers/ata/sata_promise.c:428:
+		   it will set up another 4 bytes too which we'll overwrite */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#109: FILE: drivers/ata/sata_promise.c:433:
+			printk(KERN_ERR "%s: bad cdb_len %u\n", __FUNCTION__, qc->dev->cdb_len);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#109: FILE: drivers/ata/sata_promise.c:433:
+			printk(KERN_ERR "%s: bad cdb_len %u\n", __FUNCTION__, qc->dev->cdb_len);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#110: FILE: drivers/ata/sata_promise.c:434:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#113: FILE: drivers/ata/sata_promise.c:437:
+		memcpy(pp->pkt+13, qc->cdb, qc->dev->cdb_len);
 		              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#114: FILE: drivers/ata/sata_promise.c:438:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#116: FILE: drivers/ata/sata_promise.c:440:
+		/* pdc-ultra/cam/cam_ata.c will pad SG length to a multiple
+		   of 4 here, but libata has already done that for us */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#116: FILE: drivers/ata/sata_promise.c:440:
+		   of 4 here, but libata has already done that for us */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/ata/sata_promise.c:656:
+{ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: drivers/ata/sata_promise.c:661:
+	unsigned int status = ata_busy_wait(ap, ATA_BUSY, 1000);
+	if (status != 0xff && (status & ATA_BUSY))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: drivers/ata/sata_promise.c:662:
+		printk("%s: port %u: timed out, status %#x\n", __FUNCTION__, ap->port_no, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#150: FILE: drivers/ata/sata_promise.c:662:
+		printk("%s: port %u: timed out, status %#x\n", __FUNCTION__, ap->port_no, status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: drivers/ata/sata_promise.c:667:
+{ $

CHECK:SPACING: No space is necessary after a cast
#156: FILE: drivers/ata/sata_promise.c:668:
+	void __iomem *port_mmio = (void __iomem *) ap->ioaddr.cmd_addr;

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: drivers/ata/sata_promise.c:678:
+	for(i = 0; i < 1000; ++i) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#177: FILE: drivers/ata/sata_promise.c:689:
+		printk("%s: port %u: timed out\n", __FUNCTION__, ap->port_no);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#177: FILE: drivers/ata/sata_promise.c:689:
+		printk("%s: port %u: timed out\n", __FUNCTION__, ap->port_no);

CHECK:SPACING: No space is necessary after a cast
#184: FILE: drivers/ata/sata_promise.c:696:
+	void __iomem *port_mmio = (void __iomem *) ap->ioaddr.cmd_addr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/ata/sata_promise.c:722:
+^I^I/* set real transfer byte count to byte counter register (cylinder low/high) */^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#228: FILE: drivers/ata/sata_promise.c:740:
+#if 0 /* XXX: don't know if this is relevant or how to realize the test */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: drivers/ata/sata_promise.c:741:
+^I/* Do we have to wait INT ? */^I$

CHECK:CAMELCASE: Avoid CamelCase: <WaitForINT>
#231: FILE: drivers/ata/sata_promise.c:743:
+		WaitForINT(ap);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#244: FILE: drivers/ata/sata_promise.c:756:
+		/*FALLTHROUGH*/

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005703.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 16 warnings, 4 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005703.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
