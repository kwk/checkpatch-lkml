WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
This patch adds the basic page migration function with a minimal implementation

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: include/linux/swap.h:182:
+extern int migrate_pages(struct list_head *l, struct list_head *t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: mm/vmscan.c:372:
+static inline int remove_mapping(struct address_space *mapping,
+				struct page *page)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: mm/vmscan.c:382:
+^I * not in use by anybody. ^I(pagecache + us == 2)$

WARNING:MEMORY_BARRIER: memory barrier without comment
#104: FILE: mm/vmscan.c:386:
+	smp_rmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#110: FILE: mm/vmscan.c:392:
+		swp_entry_t swap = { .val = page_private(page) };
+		add_to_swapped_list(swap.val);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'page'
#187: FILE: mm/vmscan.c:577:
+ * swapout a single page
+ * page is locked upon entry, unlocked on exit

ERROR:SPACING: space required before the open parenthesis '('
#203: FILE: mm/vmscan.c:593:
+		switch(pageout(page, mapping)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: mm/vmscan.c:625:
+ ^Ireturn 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: mm/vmscan.c:625:
+ ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: mm/vmscan.c:625:
+ ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: mm/vmscan.c:631:
+       return 1;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#243: FILE: mm/vmscan.c:633:
+}
+/*

WARNING:REPEATED_WORD: Possible repeated word: 'we'
#293: FILE: mm/vmscan.c:683:
+		 * we we may have triggered writeouts for lots of pages.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: mm/vmscan.c:878:
+^I} else $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#355: FILE: mm/vmscan.c:878:
+	} else 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000139601.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 9 warnings, 4 checks, 276 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000139601.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
