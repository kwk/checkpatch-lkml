WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> Second problem - your export hacks create a dependancy loop for the modules

WARNING:TYPO_SPELLING: 'dependancy' may be misspelled - perhaps 'dependency'?
#44: 
> Second problem - your export hacks create a dependancy loop for the modules
                                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#67: 
--- a/drivers/ide/Makefile	2003-05-11 15:50:14.000000000 +0200

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#169: FILE: drivers/ide/cmd640.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: drivers/ide/cmd640.c:9:
+ *  ^I^I^Imlord@pobox.com (Mark Lord)$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#284: FILE: drivers/ide/cmd640.c:116:
+#include <asm/io.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#291: FILE: drivers/ide/cmd640.c:123:
+int cmd640_vlb = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:CAMELCASE: Avoid CamelCase: <BaseA0>
#306: FILE: drivers/ide/cmd640.c:138:
+#define BaseA0		0x10

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <BaseA1>
#307: FILE: drivers/ide/cmd640.c:139:
+#define BaseA1		0x14

CHECK:CAMELCASE: Avoid CamelCase: <BaseA2>
#308: FILE: drivers/ide/cmd640.c:140:
+#define BaseA2		0x18

CHECK:CAMELCASE: Avoid CamelCase: <BaseA3>
#309: FILE: drivers/ide/cmd640.c:141:
+#define BaseA3		0x1c

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#329: FILE: drivers/ide/cmd640.c:161:
+#define ARTTIM1 ^I0x55$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#384: FILE: drivers/ide/cmd640.c:216:
+static void put_cmd640_reg_pci1 (u16 reg, u8 val)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#390: FILE: drivers/ide/cmd640.c:222:
+static u8 get_cmd640_reg_pci1 (u16 reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#398: FILE: drivers/ide/cmd640.c:230:
+static void put_cmd640_reg_pci2 (u16 reg, u8 val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: drivers/ide/cmd640.c:237:
+static u8 get_cmd640_reg_pci2 (u16 reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#417: FILE: drivers/ide/cmd640.c:249:
+static void put_cmd640_reg_vlb (u16 reg, u8 val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#423: FILE: drivers/ide/cmd640.c:255:
+static u8 get_cmd640_reg_vlb (u16 reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#445: FILE: drivers/ide/cmd640.c:277:
+	__put_cmd640_reg(reg,val);
 	                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#449: FILE: drivers/ide/cmd640.c:281:
+static int __init match_pci_cmd640_device (void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#453: FILE: drivers/ide/cmd640.c:285:
+	unsigned int i;
+	for (i = 0; i < 4; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#459: FILE: drivers/ide/cmd640.c:291:
+		printk("ide: cmd640 on PCI disabled by BIOS\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#469: FILE: drivers/ide/cmd640.c:301:
+static int __init probe_for_cmd640_pci1 (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: drivers/ide/cmd640.c:317:
+static int __init probe_for_cmd640_pci2 (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#499: FILE: drivers/ide/cmd640.c:331:
+static int __init probe_for_cmd640_vlb (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#520: FILE: drivers/ide/cmd640.c:352:
+static int __init secondary_port_responding (void)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#527: FILE: drivers/ide/cmd640.c:359:
+	udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#530: FILE: drivers/ide/cmd640.c:362:
+		udelay(100);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: drivers/ide/cmd640.c:376:
+static void cmd640_dump_regs (void)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#549: FILE: drivers/ide/cmd640.c:381:
+	printk("ide: cmd640 internal register dump:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#552: FILE: drivers/ide/cmd640.c:384:
+			printk("\n%04x:", reg);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#553: FILE: drivers/ide/cmd640.c:385:
+		printk(" %02x", get_cmd640_reg(reg));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#555: FILE: drivers/ide/cmd640.c:387:
+	printk("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#563: FILE: drivers/ide/cmd640.c:395:
+static void __init check_prefetch (unsigned int index)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#584: FILE: drivers/ide/cmd640.c:416:
+static void __init setup_device_ptrs (void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#592: FILE: drivers/ide/cmd640.c:424:
+		ide_hwif_t *hwif = &ide_hwifs[i];
+		if (hwif->chipset == ide_unknown || hwif->chipset == ide_generic) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: drivers/ide/cmd640.c:442:
+static void set_prefetch_mode (unsigned int index, int mode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#639: FILE: drivers/ide/cmd640.c:471:
+static void display_clocks (unsigned int index)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#651: FILE: drivers/ide/cmd640.c:483:
+	printk(", clocks=%d/%d/%d\n", setup_counts[index], active_count, recovery_count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#658: FILE: drivers/ide/cmd640.c:490:
+inline static u8 pack_nibbles (u8 upper, u8 lower)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#658: FILE: drivers/ide/cmd640.c:490:
+inline static u8 pack_nibbles (u8 upper, u8 lower)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#666: FILE: drivers/ide/cmd640.c:498:
+static void __init retrieve_drive_counts (unsigned int index)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#674: FILE: drivers/ide/cmd640.c:506:
+	switch (b) {
+		case 0x00: b = 4; break;
+		case 0x80: b = 3; break;
+		case 0x40: b = 2; break;
+		default:   b = 5; break;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#675: FILE: drivers/ide/cmd640.c:507:
+		case 0x00: b = 4; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#676: FILE: drivers/ide/cmd640.c:508:
+		case 0x80: b = 3; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#677: FILE: drivers/ide/cmd640.c:509:
+		case 0x40: b = 2; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#678: FILE: drivers/ide/cmd640.c:510:
+		default:   b = 5; break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#690: FILE: drivers/ide/cmd640.c:522:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#695: FILE: drivers/ide/cmd640.c:527:
+static void program_drive_counts (unsigned int index)

WARNING:LINE_SPACING: Missing a blank line after declarations
#710: FILE: drivers/ide/cmd640.c:542:
+		unsigned int mate;
+		if (cmd_drives[mate = index ^ 1]->present) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#710: FILE: drivers/ide/cmd640.c:542:
+		if (cmd_drives[mate = index ^ 1]->present) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#723: FILE: drivers/ide/cmd640.c:555:
+	switch (setup_count) {
+		case 4:	 setup_count = 0x00; break;
+		case 3:	 setup_count = 0x80; break;
+		case 1:
+		case 2:	 setup_count = 0x40; break;
+		default: setup_count = 0xc0; /* case 5 */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#724: FILE: drivers/ide/cmd640.c:556:
+		case 4:	 setup_count = 0x00; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#725: FILE: drivers/ide/cmd640.c:557:
+		case 3:	 setup_count = 0x80; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#727: FILE: drivers/ide/cmd640.c:559:
+		case 2:	 setup_count = 0x40; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#728: FILE: drivers/ide/cmd640.c:560:
+		default: setup_count = 0xc0; /* case 5 */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#749: FILE: drivers/ide/cmd640.c:581:
+static void cmd640_set_mode (unsigned int index, u8 pio_mode, unsigned int cycle_time)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#796: FILE: drivers/ide/cmd640.c:628:
+^I * ^I2) in practice this is rarely, if ever, necessary$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#798: FILE: drivers/ide/cmd640.c:630:
+	program_drive_counts (index);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#804: FILE: drivers/ide/cmd640.c:636:
+static void cmd640_tune_drive (ide_drive_t *drive, u8 mode_wanted)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#812: FILE: drivers/ide/cmd640.c:644:
+			printk("%s: bad news in cmd640_tune_drive\n", drive->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cmd640_tune_drive', this function's name, in a string
#812: FILE: drivers/ide/cmd640.c:644:
+			printk("%s: bad news in cmd640_tune_drive\n", drive->name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#816: FILE: drivers/ide/cmd640.c:648:
+	switch (mode_wanted) {
+		case 6: /* set fast-devsel off */
+		case 7: /* set fast-devsel on */
[...]
+		case 8: /* set prefetch off */
+		case 9: /* set prefetch on */

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#824: FILE: drivers/ide/cmd640.c:656:
+			printk("%s: %sabled cmd640 fast host timing (devsel)\n", drive->name, mode_wanted ? "en" : "dis");

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#824: FILE: drivers/ide/cmd640.c:656:
+			printk("%s: %sabled cmd640 fast host timing (devsel)\n", drive->name, mode_wanted ? "en" : "dis");

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#831: FILE: drivers/ide/cmd640.c:663:
+			printk("%s: %sabled cmd640 prefetch\n", drive->name, mode_wanted ? "en" : "dis");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#831: FILE: drivers/ide/cmd640.c:663:
+			printk("%s: %sabled cmd640 prefetch\n", drive->name, mode_wanted ? "en" : "dis");

CHECK:SPACING: No space is necessary after a cast
#835: FILE: drivers/ide/cmd640.c:667:
+	(void) ide_get_best_pio_mode (drive, mode_wanted, 5, &d);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#835: FILE: drivers/ide/cmd640.c:667:
+	(void) ide_get_best_pio_mode (drive, mode_wanted, 5, &d);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#836: FILE: drivers/ide/cmd640.c:668:
+	cmd640_set_mode (index, d.pio_mode, d.cycle_time);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#838: FILE: drivers/ide/cmd640.c:670:
+	printk ("%s: selected cmd640 PIO mode%d (%dns)%s",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#838: FILE: drivers/ide/cmd640.c:670:
+	printk ("%s: selected cmd640 PIO mode%d (%dns)%s",

WARNING:RETURN_VOID: void function return statements are not generally useful
#845: FILE: drivers/ide/cmd640.c:677:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#887: FILE: drivers/ide/cmd640.c:719:
+int __init ide_probe_for_cmd640x (void)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#902: FILE: drivers/ide/cmd640.c:734:
+		/* Find out what kind of PCI probing is supported otherwise
+		   Justin Gibbs will sulk.. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#902: FILE: drivers/ide/cmd640.c:734:
+		   Justin Gibbs will sulk.. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#915: FILE: drivers/ide/cmd640.c:747:
+		printk(KERN_ERR "ide: cmd640 init failed: wrong value in reg 0x5b\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#930: FILE: drivers/ide/cmd640.c:762:
+		printk ("ide: bad cmd640 revision: %d\n", cmd640_chip_version);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: drivers/ide/cmd640.c:762:
+		printk ("ide: bad cmd640 revision: %d\n", cmd640_chip_version);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#937: FILE: drivers/ide/cmd640.c:769:
+	setup_device_ptrs ();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#938: FILE: drivers/ide/cmd640.c:770:
+	printk("%s: buggy cmd640%c interface on %s, config=0x%02x\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#963: FILE: drivers/ide/cmd640.c:795:
+			if ((b & CNTRL_ENA_2ND)) {
[...]
+			} else if (cmd640_vlb) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#969: FILE: drivers/ide/cmd640.c:801:
+			} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1000: FILE: drivers/ide/cmd640.c:832:
+	printk(KERN_INFO "%s: %sserialized, secondary interface %s\n", cmd_hwif1->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1001: FILE: drivers/ide/cmd640.c:833:
+	printk(KERN_INFO "%s: %sserialized, secondary interface %s\n", cmd_hwif1->name,
+		cmd_hwif0->serialized ? "" : "not ", port2);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'index > 1'
#1010: FILE: drivers/ide/cmd640.c:842:
+		if (drive->autotune || ((index > 1) && second_port_toggled)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#1011: FILE: drivers/ide/cmd640.c:843:
+^I ^I^I/*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1011: FILE: drivers/ide/cmd640.c:843:
+^I ^I^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1012: FILE: drivers/ide/cmd640.c:844:
+^I ^I^I * Reset timing to the slowest speed and turn off prefetch.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1012: FILE: drivers/ide/cmd640.c:844:
+^I ^I^I * Reset timing to the slowest speed and turn off prefetch.$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1015: FILE: drivers/ide/cmd640.c:847:
+			setup_counts    [index] = 4;	/* max possible */

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1016: FILE: drivers/ide/cmd640.c:848:
+			active_counts   [index] = 16;	/* max possible */

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1017: FILE: drivers/ide/cmd640.c:849:
+			recovery_counts [index] = 16;	/* max possible */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1018: FILE: drivers/ide/cmd640.c:850:
+			program_drive_counts (index);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1019: FILE: drivers/ide/cmd640.c:851:
+			set_prefetch_mode (index, 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1020: FILE: drivers/ide/cmd640.c:852:
+			printk("cmd640: drive%d timings/prefetch cleared\n", index);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1026: FILE: drivers/ide/cmd640.c:858:
+			retrieve_drive_counts (index);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1027: FILE: drivers/ide/cmd640.c:859:
+			check_prefetch (index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1028: FILE: drivers/ide/cmd640.c:860:
+			printk("cmd640: drive%d timings/prefetch(%s) preserved",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1029: FILE: drivers/ide/cmd640.c:861:
+			printk("cmd640: drive%d timings/prefetch(%s) preserved",
+				index, drive->no_io_32bit ? "off" : "on");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1036: FILE: drivers/ide/cmd640.c:868:
+		check_prefetch (index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1037: FILE: drivers/ide/cmd640.c:869:
+		printk("cmd640: drive%d timings/prefetch(%s) preserved\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: drivers/ide/cmd640.c:870:
+		printk("cmd640: drive%d timings/prefetch(%s) preserved\n",
+			index, drive->no_io_32bit ? "off" : "on");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1098: FILE: drivers/ide/ide-default.c:97:
+/* module_init(idedefault_init);
+MODULE_LICENSE("GPL"); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1098: FILE: drivers/ide/ide-default.c:97:
+MODULE_LICENSE("GPL"); */

ERROR:SPACING: space required before the open parenthesis '('
#1126: FILE: drivers/ide/ide.c:1517:
+			if(idedefault_attach(drive)) {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1140: FILE: drivers/ide/ide.c:2121:
+				extern int cmd640_vlb;	/* flag for cmd640.c */

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#1149: FILE: drivers/ide/ide.c:2314:
+	(void) idedefault_init();

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371279.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 71 warnings, 15 checks, 1066 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371279.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
