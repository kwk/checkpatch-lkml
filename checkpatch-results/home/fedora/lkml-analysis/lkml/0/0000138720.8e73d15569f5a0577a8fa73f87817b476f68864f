WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
--- linux-2.6.14-rc5-mm1/fs/ecryptfs/crypto.c	1969-12-31 18:00:00.000000000 -0600

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: fs/ecryptfs/crypto.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#52: FILE: fs/ecryptfs/crypto.c:8:
+ *   ^I^IMichael C. Thompson <mcthomps@us.ibm.com>$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#65: FILE: fs/ecryptfs/crypto.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: fs/ecryptfs/crypto.c:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#87: FILE: fs/ecryptfs/crypto.c:43:
+ *	Size of dst buffer needs to be atleast src_size * 2
   	                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#92: FILE: fs/ecryptfs/crypto.c:48:
+	int x;
+	for (x = 0; x < src_size; x++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#98: FILE: fs/ecryptfs/crypto.c:54:
+ * 	Size of src buffer needs to be atleast twice that of dst_size
    	                               ^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: fs/ecryptfs/crypto.c:54:
+ * ^ISize of src buffer needs to be atleast twice that of dst_size$

WARNING:LINE_SPACING: Missing a blank line after declarations
#104: FILE: fs/ecryptfs/crypto.c:60:
+	char tmp[3] = { 0, };
+	for (x = 0; x < dst_size; x++) {

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#107: FILE: fs/ecryptfs/crypto.c:63:
+		dst[x] = (unsigned char)simple_strtol(tmp, NULL, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#122: FILE: fs/ecryptfs/crypto.c:78:
+	int zero_test = 0;
+	while ((i -= sizeof(iv_mixer)) >= 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#184: FILE: fs/ecryptfs/crypto.c:140:
+	int pretty_print = 1;
+	if (ecryptfs_verbosity < 1) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#184: FILE: fs/ecryptfs/crypto.c:140:
+	if (ecryptfs_verbosity < 1) {
+		return;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#188: FILE: fs/ecryptfs/crypto.c:144:
+		printk(KERN_NOTICE "0x%.2x.", (unsigned char)data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: fs/ecryptfs/crypto.c:148:
+		printk("0x%.2x.", (unsigned char)data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#195: FILE: fs/ecryptfs/crypto.c:151:
+			printk("\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#201: FILE: fs/ecryptfs/crypto.c:157:
+	if (pretty_print) {
+		printk("\n");
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#202: FILE: fs/ecryptfs/crypto.c:158:
+		printk("\n");

WARNING:REPEATED_WORD: Possible repeated word: 'size'
#211: FILE: fs/ecryptfs/crypto.c:167:
+ * @param size Size of data; should be an even multiple of the block

WARNING:LINE_SPACING: Missing a blank line after declarations
#224: FILE: fs/ecryptfs/crypto.c:180:
+	int remainder_of_page;
+	while (size > 0 && i < sg_size) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#241: FILE: fs/ecryptfs/crypto.c:197:
+	if (size > 0) {
+		return -ENOMEM;
+	}

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#256: FILE: fs/ecryptfs/crypto.c:212:
+	if (!crypt_stats || !crypt_stats->tfm
+	    || !crypt_stats->struct_initialized) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#260: FILE: fs/ecryptfs/crypto.c:216:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#277: FILE: fs/ecryptfs/crypto.c:233:
+		   == CRYPTO_TFM_MODE_CFB
+		   || crypt_stats->tfm->crt_cipher.cit_mode

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#285: FILE: fs/ecryptfs/crypto.c:241:
+		size = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LINE_SPACING: Missing a blank line after declarations
#299: FILE: fs/ecryptfs/crypto.c:255:
+	struct scatterlist src_sg[2], dest_sg[2];
+	ecryptfs_printk(1, KERN_NOTICE, "Called with dest_page->index = [%lu], "

WARNING:SPLIT_STRING: quoted string split across lines
#300: FILE: fs/ecryptfs/crypto.c:256:
+	ecryptfs_printk(1, KERN_NOTICE, "Called with dest_page->index = [%lu], "
+			"src_page->index = [%lu], dest_offset = [%d], "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#301: FILE: fs/ecryptfs/crypto.c:257:
+			"src_page->index = [%lu], dest_offset = [%d], "
+			"src_offset = [%d]\n", dest_page->index,

WARNING:SPLIT_STRING: quoted string split across lines
#319: FILE: fs/ecryptfs/crypto.c:275:
+	ecryptfs_printk(1, KERN_NOTICE, "Called with dest_page->index = [%lu] "
+			"and src_page->index = [%lu]\n", dest_page->index,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: fs/ecryptfs/crypto.c:283:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: fs/ecryptfs/crypto.c:284:
+ * @return $

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: fs/ecryptfs/crypto.c:294:
+	int rc;
+	ecryptfs_printk(1, KERN_NOTICE, "Source:\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#339: FILE: fs/ecryptfs/crypto.c:295:
+	if (ecryptfs_verbosity > 0) {
+		ecryptfs_dump_hex((char *)src_virt_addr, size);
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#342: FILE: fs/ecryptfs/crypto.c:298:
+	if ((rc = virt_to_scatterlist(src_virt_addr, size, src_sg, 32))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_encrypt_virt', this function's name, in a string
#344: FILE: fs/ecryptfs/crypto.c:300:
+		ecryptfs_printk(0, KERN_ERR, "do_encrypt_virt: No memory for "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#345: FILE: fs/ecryptfs/crypto.c:301:
+		ecryptfs_printk(0, KERN_ERR, "do_encrypt_virt: No memory for "
+				"this operation\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#348: FILE: fs/ecryptfs/crypto.c:304:
+
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#349: FILE: fs/ecryptfs/crypto.c:305:
+	if ((rc = virt_to_scatterlist(dest_virt_addr, size, dest_sg, 32))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_encrypt_virt', this function's name, in a string
#351: FILE: fs/ecryptfs/crypto.c:307:
+		ecryptfs_printk(0, KERN_ERR, "do_encrypt_virt: No memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#352: FILE: fs/ecryptfs/crypto.c:308:
+		ecryptfs_printk(0, KERN_ERR, "do_encrypt_virt: No memory for "
+				"this operation\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#357: FILE: fs/ecryptfs/crypto.c:313:
+	if (ecryptfs_verbosity > 0) {
+		ecryptfs_dump_hex((char *)dest_virt_addr, size);
+	}

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#387: FILE: fs/ecryptfs/crypto.c:343:
+		   == CRYPTO_TFM_MODE_CFB
+		   || crypt_stats->tfm->crt_cipher.cit_mode

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#395: FILE: fs/ecryptfs/crypto.c:351:
+		size = -ENOSYS;

WARNING:LINE_SPACING: Missing a blank line after declarations
#411: FILE: fs/ecryptfs/crypto.c:367:
+	struct scatterlist src_sg[2], dest_sg[2];
+	src_sg[0].page = src_page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#438: FILE: fs/ecryptfs/crypto.c:394:
+	int rc;
+	ecryptfs_printk(1, KERN_NOTICE, "Source:\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#439: FILE: fs/ecryptfs/crypto.c:395:
+	if (ecryptfs_verbosity > 0) {
+		ecryptfs_dump_hex((char *)src_virt_addr, size);
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#442: FILE: fs/ecryptfs/crypto.c:398:
+	if ((rc = virt_to_scatterlist(src_virt_addr, size, src_sg, 32))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_decrypt_virt', this function's name, in a string
#444: FILE: fs/ecryptfs/crypto.c:400:
+		ecryptfs_printk(0, KERN_ERR, "do_decrypt_virt: No memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#445: FILE: fs/ecryptfs/crypto.c:401:
+		ecryptfs_printk(0, KERN_ERR, "do_decrypt_virt: No memory for "
+				"this operation\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#448: FILE: fs/ecryptfs/crypto.c:404:
+
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#449: FILE: fs/ecryptfs/crypto.c:405:
+	if ((rc = virt_to_scatterlist(dest_virt_addr, size, dest_sg, 32))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_decrypt_virt', this function's name, in a string
#451: FILE: fs/ecryptfs/crypto.c:407:
+		ecryptfs_printk(0, KERN_ERR, "do_decrypt_virt: No memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#452: FILE: fs/ecryptfs/crypto.c:408:
+		ecryptfs_printk(0, KERN_ERR, "do_decrypt_virt: No memory for "
+				"this operation\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#457: FILE: fs/ecryptfs/crypto.c:413:
+	if (ecryptfs_verbosity > 0) {
+		ecryptfs_dump_hex((char *)dest_virt_addr, size);
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#473: FILE: fs/ecryptfs/crypto.c:429:
+	int rc = -EINVAL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!crypt_stats->cipher"
#474: FILE: fs/ecryptfs/crypto.c:430:
+	if (crypt_stats->cipher == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "crypt_stats->tfm"
#481: FILE: fs/ecryptfs/crypto.c:437:
+	if (crypt_stats->tfm != NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#483: FILE: fs/ecryptfs/crypto.c:439:
+		ecryptfs_printk(1, KERN_WARNING, "Crypto context already "
+				"initialized\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!crypt_stats->tfm"
#488: FILE: fs/ecryptfs/crypto.c:444:
+	if (crypt_stats->tfm == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#490: FILE: fs/ecryptfs/crypto.c:446:
+		ecryptfs_printk(0, KERN_ERR, "cryptfs: init_crypt_ctx(): Error "
+				"initializing cipher [%s]\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#509: FILE: fs/ecryptfs/crypto.c:465:
+	 * packets. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#523: FILE: fs/ecryptfs/crypto.c:479:
+	int key_size_bits = ECRYPTFS_DEFAULT_KEY_BYTES * 8;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#568: FILE: fs/ecryptfs/crypto.c:524:
+		int cipher_name_len;
+		ecryptfs_printk(1, KERN_NOTICE, "Initializing context for new "

WARNING:SPLIT_STRING: quoted string split across lines
#569: FILE: fs/ecryptfs/crypto.c:525:
+		ecryptfs_printk(1, KERN_NOTICE, "Initializing context for new "
+				"file using mount_crypt_stats\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#585: FILE: fs/ecryptfs/crypto.c:541:
+		 * remove in future release */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#586: FILE: fs/ecryptfs/crypto.c:542:
+		BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#599: FILE: fs/ecryptfs/crypto.c:555:
+	u32 marker;
+	memcpy(&num, (data + ECRYPTFS_FILE_SIZE_BYTES), 4);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#614: FILE: fs/ecryptfs/crypto.c:570:
+	 * area. */

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#640: FILE: fs/ecryptfs/crypto.c:596:
+				struct nameidata *nd)
 				                  ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#646: FILE: fs/ecryptfs/crypto.c:602:
+	mm_segment_t oldfs;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:SPLIT_STRING: quoted string split across lines
#652: FILE: fs/ecryptfs/crypto.c:608:
+		ecryptfs_printk(1, KERN_NOTICE, "Error opening file to "
+				"determine interpolated filesize\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#671: FILE: fs/ecryptfs/crypto.c:627:
+	ecryptfs_printk(1, KERN_NOTICE, "Exit; rc = [%d]\n",rc);
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#698: FILE: fs/ecryptfs/crypto.c:654:
+	int ecryptfs_marker_len;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#700: FILE: fs/ecryptfs/crypto.c:656:
+	if (likely(1 == crypt_stats->encrypted)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:SPLIT_STRING: quoted string split across lines
#703: FILE: fs/ecryptfs/crypto.c:659:
+			ecryptfs_printk(1, KERN_NOTICE, "Key is "
+					"invalid; bailing out\n");

WARNING:SPLIT_STRING: quoted string split across lines
#729: FILE: fs/ecryptfs/crypto.c:685:
+		ecryptfs_printk(0, KERN_ERR, "Error whilst generating the key "
+				"packet set; writing zero's\n");

WARNING:SPLIT_STRING: quoted string split across lines
#783: FILE: fs/ecryptfs/crypto.c:739:
+		ecryptfs_printk(0, KERN_ERR, "Expected size of header not read."
+				"Instead [%d] bytes were read\n", bytes_read);

WARNING:LINE_SPACING: Missing a blank line after declarations
#818: FILE: fs/ecryptfs/crypto.c:774:
+	int error = 0;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; length = [%d]\n", length);

WARNING:INDENTED_LABEL: labels should not be indented
#827: FILE: fs/ecryptfs/crypto.c:783:
+      out:

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#851: FILE: fs/ecryptfs/crypto.c:807:
+	BUG_ON(length < 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#861: FILE: fs/ecryptfs/crypto.c:817:
+						 * messages */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138720.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 65 warnings, 8 checks, 822 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138720.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
