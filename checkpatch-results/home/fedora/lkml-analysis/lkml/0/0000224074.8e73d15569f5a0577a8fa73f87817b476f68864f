WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
- [DVB] tda1004x: fixed firmware upload problems, forgot to include tune_settings for tda1004x, added setting to allow inversion of OCLK, set fesettings->min_delay_ms = 800 as suggested by Peter Siering

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#84: FILE: drivers/media/dvb/frontends/mt312.c:630:
+static struct dvb_frontend_ops vp310_mt312_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#87: FILE: drivers/media/dvb/frontends/mt312.c:632:
+struct dvb_frontend* vp310_attach(const struct mt312_config* config,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#87: FILE: drivers/media/dvb/frontends/mt312.c:632:
+struct dvb_frontend* vp310_attach(const struct mt312_config* config,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!state"
#95: FILE: drivers/media/dvb/frontends/mt312.c:639:
+	if (state == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#102: FILE: drivers/media/dvb/frontends/mt312.c:645:
+	memcpy(&state->ops, &vp310_mt312_ops, sizeof(struct dvb_frontend_ops));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#111: FILE: drivers/media/dvb/frontends/mt312.c:651:
+	if (state->id != ID_VP310) {
+		goto error;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#129: FILE: drivers/media/dvb/frontends/mt312.c:663:
+	if (state)
+		kfree(state);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#134: FILE: drivers/media/dvb/frontends/mt312.c:667:
+struct dvb_frontend* mt312_attach(const struct mt312_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#134: FILE: drivers/media/dvb/frontends/mt312.c:667:
+struct dvb_frontend* mt312_attach(const struct mt312_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#135: FILE: drivers/media/dvb/frontends/mt312.c:668:
+				  struct i2c_adapter* i2c)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#137: FILE: drivers/media/dvb/frontends/mt312.c:670:
+	struct mt312_state* state = NULL;

CHECK:SPACING: No space is necessary after a cast
#140: FILE: drivers/media/dvb/frontends/mt312.c:673:
+	state = (struct mt312_state*) kmalloc(sizeof(struct mt312_state), GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#140: FILE: drivers/media/dvb/frontends/mt312.c:673:
+	state = (struct mt312_state*) kmalloc(sizeof(struct mt312_state), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#140: FILE: drivers/media/dvb/frontends/mt312.c:673:
+	state = (struct mt312_state*) kmalloc(sizeof(struct mt312_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*state)...) over kmalloc(sizeof(struct mt312_state)...)
#140: FILE: drivers/media/dvb/frontends/mt312.c:673:
+	state = (struct mt312_state*) kmalloc(sizeof(struct mt312_state), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!state"
#141: FILE: drivers/media/dvb/frontends/mt312.c:674:
+	if (state == NULL)

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#147: FILE: drivers/media/dvb/frontends/mt312.c:680:
+	memcpy(&state->ops, &vp310_mt312_ops, sizeof(struct dvb_frontend_ops));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#153: FILE: drivers/media/dvb/frontends/mt312.c:686:
+	if (state->id != ID_MT312) {
 		goto error;
 }

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#166: FILE: drivers/media/dvb/frontends/mt312.c:698:
+	if (state)
+		kfree(state);

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#171: FILE: drivers/media/dvb/frontends/mt312.c:702:
+static struct dvb_frontend_ops vp310_mt312_ops = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#199: FILE: drivers/media/dvb/frontends/mt312.h:44:
+extern struct dvb_frontend* vp310_attach(const struct mt312_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#199: FILE: drivers/media/dvb/frontends/mt312.h:44:
+extern struct dvb_frontend* vp310_attach(const struct mt312_config* config,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: drivers/media/dvb/frontends/mt312.h:44:
+extern struct dvb_frontend* vp310_attach(const struct mt312_config* config,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#200: FILE: drivers/media/dvb/frontends/mt312.h:45:
+					 struct i2c_adapter* i2c);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#222: FILE: drivers/media/dvb/frontends/mt352.c:90:
+		dprintk("%s: readreg error (ret == %i)\n", __FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#253: FILE: drivers/media/dvb/frontends/stv0297.c:168:
+		dprintk("%s: readreg error (reg == 0x%02x, ret == %i)\n", __FUNCTION__, reg, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#259: FILE: drivers/media/dvb/frontends/stv0297.c:172:
+		dprintk("%s: readreg error (reg == 0x%02x, ret == %i)\n", __FUNCTION__, reg, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#269: FILE: drivers/media/dvb/frontends/stv0297.c:199:
+		dprintk("%s: readreg error (reg == 0x%02x, ret == %i)\n", __FUNCTION__, reg1, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#275: FILE: drivers/media/dvb/frontends/stv0297.c:203:
+		dprintk("%s: readreg error (reg == 0x%02x, ret == %i)\n", __FUNCTION__, reg1, ret);

CHECK:SPACING: No space is necessary after a cast
#329: FILE: drivers/media/dvb/frontends/stv0297.c:228:
+	tmp = (long) fshift *262144L;	/* 262144 = 2*18 */

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#329: FILE: drivers/media/dvb/frontends/stv0297.c:228:
+	tmp = (long) fshift *262144L;	/* 262144 = 2*18 */
 	                    ^

CHECK:SPACING: No space is necessary after a cast
#370: FILE: drivers/media/dvb/frontends/stv0297.c:254:
+	stv0297_writereg(state, 0x66, (unsigned char) (tmp & 0xFF));

CHECK:SPACING: No space is necessary after a cast
#371: FILE: drivers/media/dvb/frontends/stv0297.c:255:
+	stv0297_writereg(state, 0x67, (unsigned char) (tmp >> 8));

CHECK:SPACING: No space is necessary after a cast
#372: FILE: drivers/media/dvb/frontends/stv0297.c:256:
+	stv0297_writereg(state, 0x68, (unsigned char) (tmp >> 16));

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: drivers/media/dvb/frontends/stv0297.c:281:
+        s64 tmp;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#406: FILE: drivers/media/dvb/frontends/stv0297.c:281:
+/*
+        s64 tmp;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: drivers/media/dvb/frontends/stv0297.c:283:
+        if (freq > 10000) freq -= STV0297_CLOCK_KHZ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: drivers/media/dvb/frontends/stv0297.c:286:
+        do_div(tmp, STV0297_CLOCK_KHZ);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: drivers/media/dvb/frontends/stv0297.c:287:
+        if (tmp > 0xffff) tmp = 0xffff; // check this calculation$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#588: FILE: drivers/media/dvb/frontends/stv0297.c:623:
+	if (time_after(jiffies, timeout)) {
                 goto timeout;
         }

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!state"
#671: FILE: drivers/media/dvb/frontends/stv0297.c:723:
+	if (state == NULL)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#692: FILE: drivers/media/dvb/frontends/stv0297.c:745:
+	if (state)
+		kfree(state);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#762: FILE: drivers/media/dvb/frontends/tda1004x.c:625:
+	if (state->demod_type == TDA1004X_DEMOD_TDA10045) {
 	fe_params->u.ofdm.code_rate_HP = FEC_AUTO;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224074.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 19 warnings, 11 checks, 690 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224074.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
