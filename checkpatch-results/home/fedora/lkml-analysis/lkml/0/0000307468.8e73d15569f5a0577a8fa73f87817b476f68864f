WARNING:TYPO_SPELLING: 'curiousity' may be misspelled - perhaps 'curiosity'?
#26: 
As such, it's a curiousity, and a little rough (doesn't allow boot CPU
                ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .26398-linux-2.6.2-rc2-mm2/arch/i386/Kconfig .26398-linux-2.6.2-rc2-mm2.updated/arch/i386/Kconfig

WARNING:BRACES: braces {} are not necessary for single statement blocks
#115: FILE: arch/i386/kernel/irq.c:1000:
+		if (cpus_empty(irq_affinity[irq])) {
+			irq_affinity[irq] = cpumask_of_cpu(0);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/i386/kernel/irq.c:1010:
+                                unsigned long action, void *hcpu)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: arch/i386/kernel/irq.c:1010:
+static int irqs_cpu_notify(struct notifier_block *self,
+                                unsigned long action, void *hcpu)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/i386/kernel/irq.c:1010:
+                                unsigned long action, void *hcpu)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: arch/i386/kernel/irq.c:1013:
+	int cpu = (int)hcpu;
+	switch(action) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#128: FILE: arch/i386/kernel/irq.c:1013:
+	switch(action) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#145: FILE: arch/i386/kernel/irq.c:1030:
+static struct notifier_block __devinitdata irqs_cpu_nb = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after irqs_cpu_nb
#145: FILE: arch/i386/kernel/irq.c:1030:
+static struct notifier_block __devinitdata irqs_cpu_nb = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/i386/kernel/irq.c:1031:
+        .notifier_call  = irqs_cpu_notify,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/i386/kernel/irq.c:1031:
+        .notifier_call  = irqs_cpu_notify,$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#200: FILE: arch/i386/kernel/process.c:154:
+		BUG_ON(cpu_isset(cpu, cpu_online_map));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#201: FILE: arch/i386/kernel/process.c:155:
+		BUG_ON(!cpu_isset(cpu, cpu_active_map));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: arch/i386/kernel/process.c:165:
+		 * (!cpu_active). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:MEMORY_BARRIER: memory barrier without comment
#216: FILE: arch/i386/kernel/process.c:170:
+		wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#221: FILE: arch/i386/kernel/process.c:175:
+		 * so we avoid losing one to a race. */

WARNING:MEMORY_BARRIER: memory barrier without comment
#224: FILE: arch/i386/kernel/process.c:178:
+		wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#339: FILE: arch/i386/kernel/smp.c:548:
+		mb();

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: arch/i386/kernel/smp.c:551:
+	} while(!cpus_empty(mask));

WARNING:MEMORY_BARRIER: memory barrier without comment
#348: FILE: arch/i386/kernel/smp.c:555:
+			mb();

ERROR:SPACING: space required before the open parenthesis '('
#351: FILE: arch/i386/kernel/smp.c:558:
+		} while(!cpus_empty(mask));

WARNING:SPACING: Unnecessary space before function pointer arguments
#372: FILE: arch/i386/kernel/smp.c:605:
+	void (*func) (void *info);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#431: FILE: arch/i386/kernel/smpboot.c:76:
+static volatile cpumask_t cpu_callin_map;

WARNING:MEMORY_BARRIER: memory barrier without comment
#461: FILE: arch/i386/kernel/smpboot.c:1342:
+	mb();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#465: FILE: arch/i386/kernel/smpboot.c:1346:
 void __devinit smp_prepare_boot_cpu(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#474: FILE: arch/i386/kernel/smpboot.c:1355:
+static int __devinit cpu_enable(unsigned int cpu)

WARNING:MEMORY_BARRIER: memory barrier without comment
#478: FILE: arch/i386/kernel/smpboot.c:1359:
+	wmb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: arch/i386/kernel/smpboot.c:1373:
+ ^I *$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#492: FILE: arch/i386/kernel/smpboot.c:1373:
+ ^I *$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#500: FILE: arch/i386/kernel/smpboot.c:1381:
+	BUG_ON(!cpu_isset(cpu, cpu_active_map));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#501: FILE: arch/i386/kernel/smpboot.c:1382:
+	BUG_ON(!cpu_isset(cpu, cpu_online_map));

WARNING:MEMORY_BARRIER: memory barrier without comment
#502: FILE: arch/i386/kernel/smpboot.c:1383:
+	wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#504: FILE: arch/i386/kernel/smpboot.c:1385:
+	wmb();

WARNING:RETURN_VOID: void function return statements are not generally useful
#512: FILE: arch/i386/kernel/smpboot.c:1393:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: arch/i386/kernel/smpboot.c:1401:
+ ^I^Iyield();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#520: FILE: arch/i386/kernel/smpboot.c:1401:
+ ^I^Iyield();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: arch/i386/kernel/smpboot.c:1401:
+ ^I^Iyield();$

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#520: FILE: arch/i386/kernel/smpboot.c:1401:
+ 		yield();

WARNING:MEMORY_BARRIER: memory barrier without comment
#523: FILE: arch/i386/kernel/smpboot.c:1404:
+	wmb();

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#536: FILE: arch/i386/kernel/smpboot.c:1417:
+		schedule_timeout(HZ/10);
 		                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: arch/i386/kernel/smpboot.c:1419:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#538: FILE: arch/i386/kernel/smpboot.c:1419:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: arch/i386/kernel/smpboot.c:1419:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#538: FILE: arch/i386/kernel/smpboot.c:1419:
+ 	printk(KERN_ERR "CPU %u didn't die...\n", cpu);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#543: FILE: arch/i386/kernel/smpboot.c:1424:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#549: FILE: arch/i386/kernel/smpboot.c:1430:
+	BUG();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#553: FILE: arch/i386/kernel/smpboot.c:1434:
 int __devinit __cpu_up(unsigned int cpu)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#564: FILE: arch/i386/kernel/smpboot.c:1444:
+		printk(KERN_DEBUG "skipping cpu%d, didn't come online\n", cpu);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#573: FILE: arch/i386/kernel/smpboot.c:1453:
+		/* we can simply fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: arch/i386/kernel/smpboot.c:1456:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: arch/i386/kernel/smpboot.c:1456:
+ $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#621: FILE: include/asm-i386/smp.h:90:
+extern int __cpu_disable(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#622: FILE: include/asm-i386/smp.h:91:
+extern void __cpu_die(unsigned int cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307468.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 41 warnings, 4 checks, 538 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307468.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
