ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#63: 
--- a/arch/i386/kernel/Makefile	2005-01-24 13:36:22 -08:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#128: FILE: arch/i386/kernel/tsc.c:1:
+#include <linux/init.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#147: FILE: arch/i386/kernel/tsc.c:20:
+	for(i=0; i < 3; i++) {
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#147: FILE: arch/i386/kernel/tsc.c:20:
+	for(i=0; i < 3; i++) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#156: FILE: arch/i386/kernel/tsc.c:29:
+	if(delta64 > (1ULL<<32))
 	                  ^

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: arch/i386/kernel/tsc.c:29:
+	if(delta64 > (1ULL<<32))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: arch/i386/kernel/tsc.c:36:
+	do_div(delta64,CALIBRATE_TIME);
 	              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: arch/i386/kernel/tsc.c:41:
+	printk("Detected %lu.%03lu MHz processor.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: arch/i386/kernel/tsc.c:42:
+	printk("Detected %lu.%03lu MHz processor.\n",
+				cpu_khz / 1000, cpu_khz % 1000);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#171: FILE: arch/i386/kernel/tsc.c:44:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#173: FILE: arch/i386/kernel/tsc.c:46:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'severly' may be misspelled - perhaps 'severely'?
#175: FILE: arch/i386/kernel/tsc.c:48:
+ * XXX: severly needs better comments and the ifdef's killed.
         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#179: FILE: arch/i386/kernel/tsc.c:52:
+static unsigned int cpufreq_init = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#185: FILE: arch/i386/kernel/tsc.c:58:
+static unsigned int  ref_freq = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#186: FILE: arch/i386/kernel/tsc.c:59:
+static unsigned long loops_per_jiffy_ref = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#189: FILE: arch/i386/kernel/tsc.c:62:
+static unsigned long cpu_khz_ref = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: arch/i386/kernel/tsc.c:66:
+static int time_cpufreq_notifier(struct notifier_block *nb,
+		unsigned long val, void *data)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CPUFREQ_RESUMECHANGE'
#207: FILE: arch/i386/kernel/tsc.c:80:
+	if ((val == CPUFREQ_PRECHANGE  && freq->old < freq->new) ||
+	    (val == CPUFREQ_POSTCHANGE && freq->old > freq->new) ||
+	    (val == CPUFREQ_RESUMECHANGE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#211: FILE: arch/i386/kernel/tsc.c:84:
+			cpu_data[freq->cpu].loops_per_jiffy = cpufreq_scale(loops_per_jiffy_ref, ref_freq, freq->new);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: arch/i386/kernel/tsc.c:104:
+	int ret;
+	ret = cpufreq_register_notifier(&time_cpufreq_notifier_block,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#254: FILE: drivers/timesource/acpi_pm.c:1:
+#include <linux/timesource.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#257: FILE: drivers/timesource/acpi_pm.c:4:
+#include <asm/io.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/timesource/acpi_pm.c:10:
+  ((CALIBRATE_LATCH * (PMTMR_TICKS_PER_SEC >> 10)) / (CLOCK_TICK_RATE>>10))$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#263: FILE: drivers/timesource/acpi_pm.c:10:
+  ((CALIBRATE_LATCH * (PMTMR_TICKS_PER_SEC >> 10)) / (CLOCK_TICK_RATE>>10))
                                                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: drivers/timesource/acpi_pm.c:12:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#268: FILE: drivers/timesource/acpi_pm.c:15:
+ * in arch/i386/acpi/boot.c */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#269: FILE: drivers/timesource/acpi_pm.c:16:
+u32 pmtmr_ioport = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#275: FILE: drivers/timesource/acpi_pm.c:22:
+	u32 v1=0,v2=0,v3=0;
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: drivers/timesource/acpi_pm.c:22:
+	u32 v1=0,v2=0,v3=0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#275: FILE: drivers/timesource/acpi_pm.c:22:
+	u32 v1=0,v2=0,v3=0;
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: drivers/timesource/acpi_pm.c:22:
+	u32 v1=0,v2=0,v3=0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#275: FILE: drivers/timesource/acpi_pm.c:22:
+	u32 v1=0,v2=0,v3=0;
 	                ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#286: FILE: drivers/timesource/acpi_pm.c:33:
+	} while ((v1 > v2 && v1 < v3) || (v2 > v3 && v2 < v1)
+			|| (v3 > v1 && v3 < v2));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#292: FILE: drivers/timesource/acpi_pm.c:39:
+
+

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#326: FILE: drivers/timesource/acpi_pm.c:73:
+		printk(KERN_INFO "PM-Timer running at invalid rate: %lu%% of normal - aborting.\n", 100UL * delta / PMTMR_EXPECTED_RATE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#326: FILE: drivers/timesource/acpi_pm.c:73:
+		printk(KERN_INFO "PM-Timer running at invalid rate: %lu%% of normal - aborting.\n", 100UL * delta / PMTMR_EXPECTED_RATE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#333: FILE: drivers/timesource/acpi_pm.c:80:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'value2 < value1'
#350: FILE: drivers/timesource/acpi_pm.c:97:
+		if ((value2 < value1) && ((value2) < 0xFFF))

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#352: FILE: drivers/timesource/acpi_pm.c:99:
+		printk(KERN_INFO "PM-Timer had inconsistent results: 0x%#x, 0x%#x - aborting.\n", value1, value2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#352: FILE: drivers/timesource/acpi_pm.c:99:
+		printk(KERN_INFO "PM-Timer had inconsistent results: 0x%#x, 0x%#x - aborting.\n", value1, value2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#355: FILE: drivers/timesource/acpi_pm.c:102:
+	printk(KERN_INFO "PM-Timer had no reasonable result: 0x%#x - aborting.\n", value1);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#371: FILE: drivers/timesource/cyclone.c:1:
+#include <linux/timesource.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#377: FILE: drivers/timesource/cyclone.c:7:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#378: FILE: drivers/timesource/cyclone.c:8:
+#include <asm/pgtable.h>

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#387: FILE: drivers/timesource/cyclone.c:17:
+#define CYCLONE_TIMER_MASK (((u64)1<<40)-1) /* 40 bit mask */
                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#387: FILE: drivers/timesource/cyclone.c:17:
+#define CYCLONE_TIMER_MASK (((u64)1<<40)-1) /* 40 bit mask */
                                         ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#391: FILE: drivers/timesource/cyclone.c:21:
+int use_cyclone = 0;

ERROR:POINTER_LOCATION: "foo* volatile bar" should be "foo * volatile bar"
#392: FILE: drivers/timesource/cyclone.c:22:
+static u32* volatile cyclone_timer;	/* Cyclone MPMC0 register */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#392: FILE: drivers/timesource/cyclone.c:22:
+static u32* volatile cyclone_timer;	/* Cyclone MPMC0 register */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: drivers/timesource/cyclone.c:25:
+#define read_cyclone_counter(low,high) \
                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'high' - possible side-effects?
#395: FILE: drivers/timesource/cyclone.c:25:
+#define read_cyclone_counter(low,high) \
+	do{ \
+		high = cyclone_timer[1]; low = cyclone_timer[0]; \
+	} while (high != cyclone_timer[1]);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#395: FILE: drivers/timesource/cyclone.c:25:
+#define read_cyclone_counter(low,high) \
+	do{ \
+		high = cyclone_timer[1]; low = cyclone_timer[0]; \
+	} while (high != cyclone_timer[1]);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required before the open brace '{'
#396: FILE: drivers/timesource/cyclone.c:26:
+	do{ \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#400: FILE: drivers/timesource/cyclone.c:30:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: drivers/timesource/cyclone.c:36:
+	read_cyclone_counter(low,high);
 	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#407: FILE: drivers/timesource/cyclone.c:37:
+	ret = ((u64)high << 32)|low;
 	                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#422: FILE: drivers/timesource/cyclone.c:52:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#429: FILE: drivers/timesource/cyclone.c:59:
+	for(i=0; i < 3; i++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#429: FILE: drivers/timesource/cyclone.c:59:
+	for(i=0; i < 3; i++) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#431: FILE: drivers/timesource/cyclone.c:61:
+		read_cyclone_counter(startlow,starthigh);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#433: FILE: drivers/timesource/cyclone.c:63:
+		read_cyclone_counter(endlow,endhigh);
 		                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#435: FILE: drivers/timesource/cyclone.c:65:
+	start = (u64)starthigh<<32|startlow;
 	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#435: FILE: drivers/timesource/cyclone.c:65:
+	start = (u64)starthigh<<32|startlow;
 	                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#436: FILE: drivers/timesource/cyclone.c:66:
+	end = (u64)endhigh<<32|endlow;
 	                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#436: FILE: drivers/timesource/cyclone.c:66:
+	end = (u64)endhigh<<32|endlow;
 	                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#439: FILE: drivers/timesource/cyclone.c:69:
+	printk("cyclone delta: %llu\n", delta64);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#440: FILE: drivers/timesource/cyclone.c:70:
+	delta64 *= (ACTHZ/1000)>>8;
 	                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#440: FILE: drivers/timesource/cyclone.c:70:
+	delta64 *= (ACTHZ/1000)>>8;
 	                       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#441: FILE: drivers/timesource/cyclone.c:71:
+	printk("delta*hz = %llu\n", delta64);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#443: FILE: drivers/timesource/cyclone.c:73:
+	cyclone_freq_khz = delta32/CALIBRATE_ITERATION;
 	                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#444: FILE: drivers/timesource/cyclone.c:74:
+	printk("calculated cyclone_freq: %lu khz\n", cyclone_freq_khz);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#449: FILE: drivers/timesource/cyclone.c:79:
+	u32* reg;

ERROR:SPACING: space required before the open parenthesis '('
#456: FILE: drivers/timesource/cyclone.c:86:
+	if(!use_cyclone) return -ENODEV;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#456: FILE: drivers/timesource/cyclone.c:86:
+	if(!use_cyclone) return -ENODEV;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#458: FILE: drivers/timesource/cyclone.c:88:
+	printk(KERN_INFO "Summit chipset: Starting Cyclone Counter.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#461: FILE: drivers/timesource/cyclone.c:91:
+	pageaddr = (CYCLONE_CBAR_ADDR)&PAGE_MASK;
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#462: FILE: drivers/timesource/cyclone.c:92:
+	offset = (CYCLONE_CBAR_ADDR)&(~PAGE_MASK);
 	                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#464: FILE: drivers/timesource/cyclone.c:94:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#465: FILE: drivers/timesource/cyclone.c:95:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#465: FILE: drivers/timesource/cyclone.c:95:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#466: FILE: drivers/timesource/cyclone.c:96:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR register.\n");

ERROR:SPACING: space required before the open brace '{'
#470: FILE: drivers/timesource/cyclone.c:100:
+	if(!base){

ERROR:SPACING: space required before the open parenthesis '('
#470: FILE: drivers/timesource/cyclone.c:100:
+	if(!base){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#471: FILE: drivers/timesource/cyclone.c:101:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR value.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#476: FILE: drivers/timesource/cyclone.c:106:
+	pageaddr = (base + CYCLONE_PMCC_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#477: FILE: drivers/timesource/cyclone.c:107:
+	offset = (base + CYCLONE_PMCC_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#479: FILE: drivers/timesource/cyclone.c:109:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#480: FILE: drivers/timesource/cyclone.c:110:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#480: FILE: drivers/timesource/cyclone.c:110:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#481: FILE: drivers/timesource/cyclone.c:111:
+		printk(KERN_ERR "Summit chipset: Could not find valid PMCC register.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#487: FILE: drivers/timesource/cyclone.c:117:
+	pageaddr = (base + CYCLONE_MPCS_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#488: FILE: drivers/timesource/cyclone.c:118:
+	offset = (base + CYCLONE_MPCS_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#490: FILE: drivers/timesource/cyclone.c:120:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#491: FILE: drivers/timesource/cyclone.c:121:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#491: FILE: drivers/timesource/cyclone.c:121:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#492: FILE: drivers/timesource/cyclone.c:122:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPCS register.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#498: FILE: drivers/timesource/cyclone.c:128:
+	pageaddr = (base + CYCLONE_MPMC_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#499: FILE: drivers/timesource/cyclone.c:129:
+	offset = (base + CYCLONE_MPMC_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#501: FILE: drivers/timesource/cyclone.c:131:
+	cyclone_timer = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#502: FILE: drivers/timesource/cyclone.c:132:
+	if(!cyclone_timer){

ERROR:SPACING: space required before the open parenthesis '('
#502: FILE: drivers/timesource/cyclone.c:132:
+	if(!cyclone_timer){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#503: FILE: drivers/timesource/cyclone.c:133:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPMC register.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#508: FILE: drivers/timesource/cyclone.c:138:
+	for(i=0; i<3; i++){
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#508: FILE: drivers/timesource/cyclone.c:138:
+	for(i=0; i<3; i++){
 	          ^

ERROR:SPACING: space required before the open brace '{'
#508: FILE: drivers/timesource/cyclone.c:138:
+	for(i=0; i<3; i++){

ERROR:SPACING: space required before the open parenthesis '('
#508: FILE: drivers/timesource/cyclone.c:138:
+	for(i=0; i<3; i++){

WARNING:LINE_SPACING: Missing a blank line after declarations
#511: FILE: drivers/timesource/cyclone.c:141:
+		int stall = 100;
+		while(stall--) barrier();

ERROR:SPACING: space required before the open parenthesis '('
#511: FILE: drivers/timesource/cyclone.c:141:
+		while(stall--) barrier();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#511: FILE: drivers/timesource/cyclone.c:141:
+		while(stall--) barrier();

ERROR:SPACING: space required before the open brace '{'
#512: FILE: drivers/timesource/cyclone.c:142:
+		if(cyclone_timer[0] == old){

ERROR:SPACING: space required before the open parenthesis '('
#512: FILE: drivers/timesource/cyclone.c:142:
+		if(cyclone_timer[0] == old){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#513: FILE: drivers/timesource/cyclone.c:143:
+			printk(KERN_ERR "Summit chipset: Counter not counting! DISABLED\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#529: FILE: drivers/timesource/i386_pit.c:1:
+/* pit timesource: XXX - broken!

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#536: FILE: drivers/timesource/i386_pit.c:8:
+#include <asm/io.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#542: FILE: drivers/timesource/i386_pit.c:14:
+extern long jiffies;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#543: FILE: drivers/timesource/i386_pit.c:15:
+extern spinlock_t i8253_lock;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#556: FILE: drivers/timesource/i386_pit.c:28:
+	static unsigned long jiffies_p = 0;

ERROR:SPACING: space prohibited after that open parenthesis '('
#583: FILE: drivers/timesource/i386_pit.c:55:
+	if( jiffies_t == jiffies_p ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#583: FILE: drivers/timesource/i386_pit.c:55:
+	if( jiffies_t == jiffies_p ) {

ERROR:SPACING: space required before the open parenthesis '('
#583: FILE: drivers/timesource/i386_pit.c:55:
+	if( jiffies_t == jiffies_p ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#583: FILE: drivers/timesource/i386_pit.c:55:
+	if( jiffies_t == jiffies_p ) {
[...]
+	} else
[...]

ERROR:SPACING: space prohibited after that open parenthesis '('
#584: FILE: drivers/timesource/i386_pit.c:56:
+		if( count > count_p ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#584: FILE: drivers/timesource/i386_pit.c:56:
+		if( count > count_p ) {

ERROR:SPACING: space required before the open parenthesis '('
#584: FILE: drivers/timesource/i386_pit.c:56:
+		if( count > count_p ) {

CHECK:BRACES: Unbalanced braces around else statement
#588: FILE: drivers/timesource/i386_pit.c:60:
+	} else

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#595: FILE: drivers/timesource/i386_pit.c:67:
+	count = ((LATCH-1) - count) * TICK_SIZE;
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#596: FILE: drivers/timesource/i386_pit.c:68:
+	count = (count + LATCH/2) / LATCH;
 	                      ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#609: FILE: drivers/timesource/i386_pit.c:81:
+static nsec_t pit_cyc2ns(cycle_t cyc, cycle_t* remainder)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#633: FILE: drivers/timesource/i386_tsc.c:1:
+/* TODO:

CHECK:LINE_SPACING: Please don't use multiple blank lines
#654: FILE: drivers/timesource/i386_tsc.c:22:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#658: FILE: drivers/timesource/i386_tsc.c:26:
+	unsigned long long x;
+	x = (NSEC_PER_SEC/HZ);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#658: FILE: drivers/timesource/i386_tsc.c:26:
+	x = (NSEC_PER_SEC/HZ);
 	                 ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#664: FILE: drivers/timesource/i386_tsc.c:32:
+static unsigned long current_cpu_khz = 0;

ERROR:SPACING: space required before the open brace '{'
#669: FILE: drivers/timesource/i386_tsc.c:37:
+	if (current_cpu_khz != cpu_khz){

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#692: FILE: drivers/timesource/ppc64_timebase.c:1:
+#include <linux/timesource.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#710: FILE: drivers/timesource/ppc64_timebase.c:19:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#712: FILE: drivers/timesource/ppc64_timebase.c:21:
+extern unsigned long tb_to_ns_scale;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#713: FILE: drivers/timesource/ppc64_timebase.c:22:
+extern unsigned long tb_to_ns_shift;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#714: FILE: drivers/timesource/ppc64_timebase.c:23:
+extern unsigned long tb_ticks_per_sec;

WARNING:LINE_SPACING: Missing a blank line after declarations
#719: FILE: drivers/timesource/ppc64_timebase.c:28:
+	unsigned long long x;
+	x = (NSEC_PER_SEC/HZ);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#719: FILE: drivers/timesource/ppc64_timebase.c:28:
+	x = (NSEC_PER_SEC/HZ);
 	                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#721: FILE: drivers/timesource/ppc64_timebase.c:30:
+	do_div(x, (tb_ticks_per_sec/1000));
 	                           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#733: FILE: drivers/timesource/x86-64_hpet.c:1:
+#include <linux/timesource.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#737: FILE: drivers/timesource/x86-64_hpet.c:5:
+#include <asm/io.h>

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#762: FILE: drivers/timesource/x86-64_hpet.c:30:
+		(void __iomem*)fix_to_virt(FIX_HPET_BASE) + HPET_COUNTER;

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#781: FILE: include/asm-i386/mach-default/mach_timer.h:18:
+#include <asm/io.h>

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#786: FILE: include/asm-i386/mach-default/mach_timer.h:22:
+#define CALIBRATE_TIME	(CALIBRATE_ITERATION * 1000020/HZ)
                       	                              ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#794: FILE: include/asm-i386/tsc.h:1:
+#ifndef _ASM_I386_TSC_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#820: FILE: kernel/sched.c:177:
 
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212470.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 60 errors, 45 warnings, 44 checks, 700 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212470.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
