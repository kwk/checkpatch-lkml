WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
On Fri, 15 Jul 2005 13:09:33 +1000 Stephen Rothwell <sfr@canb.auug.org.au> wrote:

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->dma_mapping_ops == NULL'
#355: FILE: drivers/base/core.c:254:
+	if (parent && (dev->dma_mapping_ops == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->dma_mapping_ops"
#355: FILE: drivers/base/core.c:254:
+	if (parent && (dev->dma_mapping_ops == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!parent"
#385: FILE: drivers/pci/probe.c:921:
+	if (parent == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#410: FILE: include/asm-ppc64/dma-mapping.h:21:
+	BUG_ON(dev->dma_mapping_ops == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->dma_mapping_ops"
#410: FILE: include/asm-ppc64/dma-mapping.h:21:
+	BUG_ON(dev->dma_mapping_ops == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: include/asm-ppc64/dma-mapping.h:37:
+static inline void *dma_alloc_coherent(struct device *dev, size_t size,
+		dma_addr_t *dma_handle, unsigned int __nocast flag)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: include/asm-ppc64/dma-mapping.h:43:
+static inline void dma_free_coherent(struct device *dev, size_t size,
+		void *cpu_addr, dma_addr_t dma_handle)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: include/asm-ppc64/dma-mapping.h:49:
+static inline dma_addr_t dma_map_single(struct device *dev, void *cpu_addr,
+		size_t size, enum dma_data_direction direction)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: include/asm-ppc64/dma-mapping.h:55:
+static inline void dma_unmap_single(struct device *dev, dma_addr_t dma_addr,
+		size_t size, enum dma_data_direction direction)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: include/asm-ppc64/dma-mapping.h:61:
+static inline dma_addr_t dma_map_page(struct device *dev, struct page *page,
 		unsigned long offset, size_t size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: include/asm-ppc64/dma-mapping.h:69:
+static inline void dma_unmap_page(struct device *dev, dma_addr_t dma_address,
+		size_t size, enum dma_data_direction direction)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: include/asm-ppc64/dma-mapping.h:75:
+static inline int dma_map_sg(struct device *dev, struct scatterlist *sg,
+		int nents, enum dma_data_direction direction)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: include/asm-ppc64/dma-mapping.h:81:
+static inline void dma_unmap_sg(struct device *dev, struct scatterlist *sg,
+		int nhwentries, enum dma_data_direction direction)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#523: FILE: include/asm-ppc64/pci.h:74:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: include/linux/dma-mapping.h:31:
+	void *		(*alloc_coherent)(struct device *dev, size_t size,
+				dma_addr_t *dma_handle, unsigned int __nocast flag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: include/linux/dma-mapping.h:33:
+	void		(*free_coherent)(struct device *dev, size_t size,
+				void *vaddr, dma_addr_t dma_handle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#581: FILE: include/linux/dma-mapping.h:35:
+	dma_addr_t	(*map_single)(struct device *dev, void *ptr,
+				size_t size, enum dma_data_direction direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: include/linux/dma-mapping.h:37:
+	void		(*unmap_single)(struct device *dev, dma_addr_t dma_addr,
+				size_t size, enum dma_data_direction direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: include/linux/dma-mapping.h:39:
+	int		(*map_sg)(struct device *dev, struct scatterlist *sg,
+				int nents, enum dma_data_direction direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: include/linux/dma-mapping.h:41:
+	void		(*unmap_sg)(struct device *dev, struct scatterlist *sg,
+				int nents, enum dma_data_direction direction);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000166763.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 18 checks, 342 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000166763.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
