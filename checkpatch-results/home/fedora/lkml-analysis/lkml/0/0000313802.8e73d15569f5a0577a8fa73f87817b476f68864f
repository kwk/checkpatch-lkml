WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
In message <Pine.LNX.4.44.0401042243510.16042-100000@bigblue.dev.mdolabs.com> you write:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: include/linux/kthread.h:1:
+#ifndef _LINUX_KTHREAD_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#110: FILE: include/linux/kthread.h:19:
+ * standalone thread for which noone will call kthread_stop(), or
                                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: include/linux/kthread.h:23:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: include/linux/kthread.h:37:
+ * wake_up_process().  Returns the kthread, or ERR_PTR(-ENOMEM). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#132: FILE: include/linux/kthread.h:41:
+	struct task_struct *__k						   \
+		= kthread_create(threadfn, data, namefmt, ## __VA_ARGS__); \

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#159: FILE: include/linux/kthread.h:68:
+ * was never called. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: include/linux/workqueue.h:63:
+extern int keventd_up(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#191: FILE: kernel/kthread.c:1:
+/* Kernel thread helper functions.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#208: FILE: kernel/kthread.c:18:
+struct kthread_create_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#261: FILE: kernel/kthread.c:71:
+struct kthread_stop_info
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#268: FILE: kernel/kthread.c:78:
+/* "to look upon me as her own dad -- in a very real, and legally
+   binding sense." - Michael Palin */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#268: FILE: kernel/kthread.c:78:
+   binding sense." - Michael Palin */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#307: FILE: kernel/kthread.c:117:
+	while (waitpid(-1, &status, __WALL|WNOHANG) > 0);
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#324: FILE: kernel/kthread.c:134:
+	 * can't use keventd. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#325: FILE: kernel/kthread.c:135:
+	if (!keventd_up())
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#327: FILE: kernel/kthread.c:137:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: kernel/kthread.c:143:
+		va_list args;
+		va_start(args, namefmt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#344: FILE: kernel/kthread.c:154:
+	BUG_ON(k->state != TASK_INTERRUPTIBLE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "keventd_wq"
#370: FILE: kernel/workqueue.c:352:
+	return keventd_wq != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#433: FILE: kernel/sched.c:2661:
+	BUG_ON(rq->migration_thread != current);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: kernel/sched.c:2702:
+		p = kthread_create(migration_thread, hcpu, "migration/%d",cpu);
 		                                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: kernel/sched.c:2714:
+static struct notifier_block __devinitdata migration_notifier = { $

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#491: FILE: kernel/sched.c:2714:
+static struct notifier_block __devinitdata migration_notifier = { 

WARNING:MISPLACED_INIT: __devinitdata should be placed after migration_notifier
#491: FILE: kernel/sched.c:2714:
+static struct notifier_block __devinitdata migration_notifier = { 

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#539: FILE: kernel/softirq.c:364:
 static int __devinit cpu_callback(struct notifier_block *nfb,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#608: FILE: kernel/workqueue.c:166:
+	BUG_ON(smp_processor_id() != cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313802.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 16 warnings, 6 checks, 558 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313802.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
