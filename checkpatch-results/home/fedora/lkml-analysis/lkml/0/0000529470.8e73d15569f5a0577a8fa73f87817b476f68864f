WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
attached are patches to add (missing) error checking and proper error code =

WARNING:TYPO_SPELLING: 'fauilures' may be misspelled - perhaps 'failures'?
#35: 
in case of request_region(), request_irq and misc_register() fauilures.
                                                             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#57: FILE: linux/drivers/char/atixlmouse.c:90:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LINE_SPACING: Missing a blank line after declarations
#63: FILE: linux/drivers/char/atixlmouse.c:94:
+	int retval;
+	if ((retval =3D request_irq(ATIXL_MOUSE_IRQ, mouse_interrupt, SA_INTERRUP=

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#63: FILE: linux/drivers/char/atixlmouse.c:94:
+	if ((retval =3D request_irq(ATIXL_MOUSE_IRQ, mouse_interrupt, SA_INTERRUP=
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#63: FILE: linux/drivers/char/atixlmouse.c:94:
+	if ((retval =3D request_irq(ATIXL_MOUSE_IRQ, mouse_interrupt, SA_INTERRUP=
 	                                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#63: FILE: linux/drivers/char/atixlmouse.c:94:
+	if ((retval =3D request_irq(ATIXL_MOUSE_IRQ, mouse_interrupt, SA_INTERRUP=

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#95: FILE: linux/drivers/char/logibusmouse.c:119:
+	int retval;
+	if ((retval =3D request_irq(mouse_irq, mouse_interrupt, SA_INTERRUPT | SA=

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#95: FILE: linux/drivers/char/logibusmouse.c:119:
+	if ((retval =3D request_irq(mouse_irq, mouse_interrupt, SA_INTERRUPT | SA=
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#95: FILE: linux/drivers/char/logibusmouse.c:119:
+	if ((retval =3D request_irq(mouse_irq, mouse_interrupt, SA_INTERRUPT | SA=
 	                                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#95: FILE: linux/drivers/char/logibusmouse.c:119:
+	if ((retval =3D request_irq(mouse_irq, mouse_interrupt, SA_INTERRUPT | SA=

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#114: FILE: linux/drivers/char/logibusmouse.c:136:
+	if (inb(MSE_SIGNATURE_PORT) !=3D MSE_SIGNATURE_BYTE) {
 	                            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#126: FILE: linux/drivers/char/logibusmouse.c:143:
+	if (msedev < 0) {
[...]
+		release_region(LOGIBM_BASE, LOGIBM_EXTENT);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#130: FILE: linux/drivers/char/logibusmouse.c:146:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: linux/drivers/char/msbusmouse.c:116:
+	int retval;
+	if ((retval =3D request_irq(mouse_irq, ms_mouse_interrupt, SA_INTERRUPT |=

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#151: FILE: linux/drivers/char/msbusmouse.c:116:
+	if ((retval =3D request_irq(mouse_irq, ms_mouse_interrupt, SA_INTERRUPT |=
 	            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#151: FILE: linux/drivers/char/msbusmouse.c:116:
+	if ((retval =3D request_irq(mouse_irq, ms_mouse_interrupt, SA_INTERRUPT |=

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#163: FILE: linux/drivers/char/msbusmouse.c:133:
+	if (!request_region(MS_MSE_CONTROL_PORT, 0x04, "MS Busmouse"));
+		return -EBUSY;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#163: FILE: linux/drivers/char/msbusmouse.c:133:
+	if (!request_region(MS_MSE_CONTROL_PORT, 0x04, "MS Busmouse"));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#173: FILE: linux/drivers/char/msbusmouse.c:151:
+	if (present =3D=3D 0) {
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#173: FILE: linux/drivers/char/msbusmouse.c:151:
+	if (present =3D=3D 0) {
 	               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#173: FILE: linux/drivers/char/msbusmouse.c:151:
+	if (present =3D=3D 0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#182: FILE: linux/drivers/char/msbusmouse.c:158:
+	if (msedev < 0) {
[...]
+		release_region(MS_MSE_CONTROL_PORT, 0x04);
[...]

CHECK:BRACES: Unbalanced braces around else statement
#186: FILE: linux/drivers/char/msbusmouse.c:161:
+	} else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#204: FILE: linux/drivers/char/pc110pad.c:804:
+	int retval =3D -EBUSY;
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#204: FILE: linux/drivers/char/pc110pad.c:804:
+	int retval =3D -EBUSY;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#219: FILE: linux/drivers/char/pc110pad.c:812:
+	if ((retval =3D request_irq(current_params.irq, pad_irq, SA_INTERRUPT | S=
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#219: FILE: linux/drivers/char/pc110pad.c:812:
+	if ((retval =3D request_irq(current_params.irq, pad_irq, SA_INTERRUPT | S=
 	                                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#219: FILE: linux/drivers/char/pc110pad.c:812:
+	if ((retval =3D request_irq(current_params.irq, pad_irq, SA_INTERRUPT | S=

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#221: FILE: linux/drivers/char/pc110pad.c:813:
+		printk(KERN_ERR "pc110pad: Unable to get IRQ.\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#226: FILE: linux/drivers/char/pc110pad.c:818:
+	if ((retval =3D misc_register(&pc110_pad))) {
 	            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#226: FILE: linux/drivers/char/pc110pad.c:818:
+	if ((retval =3D misc_register(&pc110_pad))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#227: FILE: linux/drivers/char/pc110pad.c:819:
+		printk(KERN_ERR "pc110pad: Unable to register driver.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000529470.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 8 warnings, 5 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000529470.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
