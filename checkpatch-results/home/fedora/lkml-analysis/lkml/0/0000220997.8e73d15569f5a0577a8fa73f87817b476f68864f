WARNING:TYPO_SPELLING: 'pratical' may be misspelled - perhaps 'practical'?
#46: 
ev4 + SMP or ev4 + PREEMPT ;). The PF_MEMDIE was instead a more pratical
                                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
Subject: Convert the unsafe signed (16bit) used_math to a safe and optimal PF_USED_MATH

ERROR:SPACING: space prohibited after that open parenthesis '('
#145: FILE: arch/i386/kernel/i387.c:334:
+	if ( !used_math() )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#145: FILE: arch/i386/kernel/i387.c:334:
+	if ( !used_math() )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/i386/math-emu/fpu_entry.c:158:
+  if (!used_math())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#259: FILE: arch/i386/math-emu/fpu_entry.c:158:
+  if (!used_math())
     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/i386/math-emu/fpu_entry.c:161:
+      set_used_math();$

ERROR:SPACING: space required before the open parenthesis '('
#303: FILE: arch/mips/kernel/irixsig.c:731:
+	if(!used_math()) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: arch/s390/kernel/setup.c:99:
+        clear_used_math();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: arch/s390/kernel/setup.c:99:
+        clear_used_math();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: arch/sh64/kernel/fpu.c:161:
+        if (used_math()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: arch/sh64/kernel/fpu.c:161:
+        if (used_math()) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: arch/sh64/kernel/fpu.c:166:
+                set_used_math();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: arch/sh64/kernel/fpu.c:166:
+                set_used_math();$

ERROR:SPACING: space required before the open parenthesis '('
#765: FILE: arch/sparc/kernel/traps.c:249:
+	if(used_math()) {

ERROR:SPACING: space required before the open parenthesis '('
#775: FILE: arch/sparc/kernel/traps.c:257:
+	if(!used_math()) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: arch/x86_64/ia32/ia32_binfmt.c:217:
+^Iif (!tsk_used_math(tsk)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#809: FILE: arch/x86_64/ia32/ia32_binfmt.c:238:
+^Iif (!tsk_used_math(t)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: arch/x86_64/kernel/i387.c:65:
+^Iif (tsk_used_math(child)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#867: FILE: arch/x86_64/kernel/i387.c:95:
+^Iif (!used_math()) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: arch/x86_64/kernel/i387.c:97:
+^Iclear_used_math(); /* trigger finit */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#879: FILE: arch/x86_64/kernel/i387.c:137:
+^Iif (!used_math()) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1039: FILE: include/linux/sched.h:665:
+  ^Ishort il_next;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1039: FILE: include/linux/sched.h:665:
+  ^Ishort il_next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: include/linux/sched.h:665:
+  ^Ishort il_next;$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1067: FILE: include/linux/sched.h:729:
+#define clear_stopped_child_used_math(child) do { (child)->flags &= ~PF_USED_MATH; } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1068: FILE: include/linux/sched.h:730:
+#define set_stopped_child_used_math(child) do { (child)->flags |= PF_USED_MATH; } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'child' - possible side-effects?
#1071: FILE: include/linux/sched.h:733:
+#define conditional_stopped_child_used_math(condition, child) \
+	do { (child)->flags &= ~PF_USED_MATH, (child)->flags |= (condition) ? PF_USED_MATH : 0; } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1071: FILE: include/linux/sched.h:733:
+#define conditional_stopped_child_used_math(condition, child) \
+	do { (child)->flags &= ~PF_USED_MATH, (child)->flags |= (condition) ? PF_USED_MATH : 0; } while (0)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1072: FILE: include/linux/sched.h:734:
+	do { (child)->flags &= ~PF_USED_MATH, (child)->flags |= (condition) ? PF_USED_MATH : 0; } while (0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'child' - possible side-effects?
#1075: FILE: include/linux/sched.h:737:
+#define copy_to_stopped_child_used_math(child) \
+	do { (child)->flags &= ~PF_USED_MATH, (child)->flags |= current->flags & PF_USED_MATH; } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1075: FILE: include/linux/sched.h:737:
+#define copy_to_stopped_child_used_math(child) \
+	do { (child)->flags &= ~PF_USED_MATH, (child)->flags |= current->flags & PF_USED_MATH; } while (0)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1076: FILE: include/linux/sched.h:738:
+	do { (child)->flags &= ~PF_USED_MATH, (child)->flags |= current->flags & PF_USED_MATH; } while (0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000220997.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 16 warnings, 2 checks, 829 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000220997.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
