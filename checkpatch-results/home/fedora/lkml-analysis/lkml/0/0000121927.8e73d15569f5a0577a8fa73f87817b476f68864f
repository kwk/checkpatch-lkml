WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#31: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#76: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:46:
+#include <asm/uaccess.h>

CHECK:SPACING: No space is necessary after a cast
#89: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:59:
+	return (((int) a) - ((int) b)) << 8;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#96: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:66:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#97: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:67:
+#define BITS_PER_PAGE           (PAGE_SIZE*BITS_PER_BYTE)
                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#98: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:68:
+#define BITS_PER_PAGE_MASK      (BITS_PER_PAGE-1)
                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#99: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:69:
+#define mk_qpn(qpt, map, off)   (((map) - (qpt)->map)*BITS_PER_PAGE + (off))
                                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'map' - possible side-effects?
#99: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:69:
+#define mk_qpn(qpt, map, off)   (((map) - (qpt)->map)*BITS_PER_PAGE + (off))

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:71:
+                find_next_zero_bit((map)->page, BITS_PER_PAGE, off)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:71:
+                find_next_zero_bit((map)->page, BITS_PER_PAGE, off)$

WARNING:STATIC_CONST_CHAR_ARRAY: const array should probably be static const
#104: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:74:
+const char ipath_verbs_version[] = "ipath_verbs " IPATH_IDSTR;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:89:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#270: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:240:
+static uint32_t number_of_devices;

CHECK:BRACES: braces {} should be used on all arms of this statement
#359: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:329:
+		if (ret < 0)
[...]
+		else if (ret > 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#363: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:333:
+		else {

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ESRCH)
#413: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:383:
+				return ESRCH;

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EEXIST)
#418: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:388:
+		return EEXIST;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mcast"
#444: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:414:
+	if (mcast == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mqp"
#447: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:417:
+	if (mqp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!n"
#483: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:453:
+		if (n == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#545: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:515:
+		BUG_ON(len == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sge->mr"
#555: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:525:
+		} else if (sge->length == 0 && sge->mr != NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#583: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:553:
+		BUG_ON(len == 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sge->mr"
#592: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:562:
+		} else if (sge->length == 0 && sge->mr != NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#694: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:664:
+	if (type == IB_QPT_SMI)
[...]
+	else if (type == IB_QPT_GSI)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#698: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:668:
+	else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#701: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:671:
+		if (qpn == 0) {
+			return -ENOMEM;
+		}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#819: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:789:
+	r = n = rkt->next;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rkt->table[r]"
#821: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:791:
+		if (rkt->table[r] == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mr"
#886: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:856:
+	if (unlikely(mr == NULL || mr->lkey != sge->lkey))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mr"
#952: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:922:
+	if (unlikely(mr == NULL || mr->lkey != rkey))

CHECK:BRACES: braces {} should be used on all arms of this statement
#994: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:964:
+	if (likely(next != cq->tail))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#996: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:966:
+	else {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1321: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1291:
+	qp->s_cur = qp->s_tail = qp->s_head;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1367: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1337:
+	qp->s_cur = qp->s_tail = qp->s_head;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1402: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1372:
+	if (attr_mask & IB_QP_STATE) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1406: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1376:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1421: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1391:
+
+	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1463: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1433:
+		qp->s_retry = qp->s_retry_cnt = attr->retry_cnt;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1542: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1512:
+				break;
+			else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1550: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1520:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1615: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1585:
+	if (qp->s_hdrwords != 0) {
[...]
+			if (ipath_verbs_send(dev->ib_unit, qp->s_hdrwords,

CHECK:SPACING: No space is necessary after a cast
#1622: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1592:
+					     (uint32_t *) &qp->s_hdr,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1680: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1650:
+		qp->s_psn = wqe->psn = qp->s_next_psn;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1684: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1654:
+		qp->s_len = len = wqe->length;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1741: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1711:
+		/* FALLTHROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:BRACES: braces {} should be used on all arms of this statement
#1748: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1718:
+		if (wqe->wr.opcode == IB_WR_SEND)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1750: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1720:
+		else {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1762: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1732:
+		/* FALLTHROUGH */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1769: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1739:
+		if (wqe->wr.opcode == IB_WR_RDMA_WRITE)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1771: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1741:
+		else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1877: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1847:
+	if (qp->s_hdrwords != 0) {
[...]
+			if (ipath_verbs_send(dev->ib_unit, qp->s_hdrwords,

CHECK:SPACING: No space is necessary after a cast
#1884: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1854:
+					     (uint32_t *) &qp->s_hdr,

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1933: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1903:
+			/* FALLTHROUGH */

WARNING:INDENTED_LABEL: labels should not be indented
#1989: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1959:
+	      send_req:

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2010: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1980:
+				qp->s_psn = wqe->psn = qp->s_next_psn;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2021: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1991:
+			qp->s_len = len = wqe->length;

CHECK:SPACING: No space is necessary after a cast
#2028: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:1998:
+				if (qp->s_lsn != (u32) -1 &&

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2058: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2028:
+				/* FALLTHROUGH */

CHECK:SPACING: No space is necessary after a cast
#2061: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2031:
+				if (qp->s_lsn != (u32) -1 &&

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'wqe->wr.send_flags'
#2089: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2059:
+					if (wqe->wr.
+					    send_flags & IB_SEND_SOLICITED)

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dev->pending_index'
#2161: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2131:
+					      &dev->pending[dev->
+							    pending_index]);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2172: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2142:
+			/* FALLTHROUGH */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2175: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2145:
+			/* FALLTHROUGH */

CHECK:BRACES: braces {} should be used on all arms of this statement
#2192: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2162:
+			if (wqe->wr.opcode == IB_WR_SEND)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2194: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2164:
+			else {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2214: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2184:
+			/* FALLTHROUGH */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2217: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2187:
+			/* FALLTHROUGH */

CHECK:BRACES: braces {} should be used on all arms of this statement
#2234: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2204:
+			if (wqe->wr.opcode == IB_WR_RDMA_WRITE)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2236: FILE: drivers/infiniband/hw/ipath/ipath_verbs.c:2206:
+			else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121927.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 24 warnings, 46 checks, 2307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121927.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
