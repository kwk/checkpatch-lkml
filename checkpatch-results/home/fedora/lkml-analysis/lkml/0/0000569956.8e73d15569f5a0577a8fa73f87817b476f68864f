WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#18: 
Thanks to Andrew Morton's feedback, I've realised that my previous patch for

WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#65: 
   However, my prefered solution (used in this patch) is to put all the
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#66: 
   __ex_table entries from seperate functions into seperate sections named
                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#66: 
   __ex_table entries from seperate functions into seperate sections named
                                                   ^^^^^^^^

WARNING:TYPO_SPELLING: 'noticable' may be misspelled - perhaps 'noticeable'?
#102: 
   noticable when it's broken until a rogue program passes a bad pointer to
   ^^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix 'Makefile' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'Documentation' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: ppc/kernel/syscalls.c:43:
+    extern void check_exception_table(void);$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#451: FILE: ppc/kernel/syscalls.c:43:
+    extern void check_exception_table(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: ppc/kernel/syscalls.c:45:
+    check_exception_table();$

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: ppc/mm/extable.c:62:
+    const struct exception_table_entry *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: ppc/mm/extable.c:64:
+    for (entry = __start___ex_table; entry < __stop___ex_table-1; entry++)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#483: FILE: ppc/mm/extable.c:64:
+    for (entry = __start___ex_table; entry < __stop___ex_table-1; entry++)
                                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#484: FILE: ppc/mm/extable.c:65:
+	if (entry[1].insn <= entry[0].insn)
+	    panic("exception table entry for instr at %lx is out of order!",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: ppc/mm/extable.c:67:
+	    panic("exception table entry for instr at %lx is out of order!",
+		entry[1].insn);

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#594: FILE: asm-alpha/init.h:5:
+#define __init __attribute__ ((__section__ (".init.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#594: FILE: asm-alpha/init.h:5:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.text") over __attribute__((__section__(".init.text")))
#594: FILE: asm-alpha/init.h:5:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#595: FILE: asm-alpha/init.h:6:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#595: FILE: asm-alpha/init.h:6:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.data") over __attribute__((__section__(".init.data")))
#595: FILE: asm-alpha/init.h:6:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: asm-alpha/init.h:12:
+#define __INIT		.section	.init.text,"ax"
               		        	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: asm-alpha/init.h:14:
+#define __INITDATA	.section	.init.data,"a"
                   	        	          ^

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#622: FILE: asm-alpha/uaccess.h:9:
+#define __EX_TABLE	"__ex_table." __FUNCTION__

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#749: FILE: asm-arm/init.h:10:
+#define __init __attribute__ ((__section__ (".init.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#749: FILE: asm-arm/init.h:10:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.text") over __attribute__((__section__(".init.text")))
#749: FILE: asm-arm/init.h:10:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#758: FILE: asm-arm/init.h:22:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#758: FILE: asm-arm/init.h:22:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.data") over __attribute__((__section__(".init.data")))
#758: FILE: asm-arm/init.h:22:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#763: FILE: asm-arm/init.h:25:
+#define __INIT		.section	".init.text",@alloc,@execinstr
               		        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#763: FILE: asm-arm/init.h:25:
+#define __INIT		.section	".init.text",@alloc,@execinstr
               		        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#763: FILE: asm-arm/init.h:25:
+#define __INIT		.section	".init.text",@alloc,@execinstr

ERROR:SPACING: space required after that ',' (ctx:VxV)
#764: FILE: asm-arm/init.h:26:
+#define __INITDATA	.section	".init.data",@alloc,@write
                   	        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#764: FILE: asm-arm/init.h:26:
+#define __INITDATA	.section	".init.data",@alloc,@write
                   	        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#764: FILE: asm-arm/init.h:26:
+#define __INITDATA	.section	".init.data",@alloc,@write

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#781: FILE: asm-i386/init.h:4:
+#define __init __attribute__ ((__section__ (".init.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#781: FILE: asm-i386/init.h:4:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.text") over __attribute__((__section__(".init.text")))
#781: FILE: asm-i386/init.h:4:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#782: FILE: asm-i386/init.h:5:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#782: FILE: asm-i386/init.h:5:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.data") over __attribute__((__section__(".init.data")))
#782: FILE: asm-i386/init.h:5:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#788: FILE: asm-i386/init.h:10:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#788: FILE: asm-i386/init.h:10:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#788: FILE: asm-i386/init.h:10:
+#define __INIT		.section	".init.text",#alloc,#execinstr

ERROR:SPACING: space required after that ',' (ctx:VxV)
#791: FILE: asm-i386/init.h:12:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#791: FILE: asm-i386/init.h:12:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#791: FILE: asm-i386/init.h:12:
+#define __INITDATA	.section	".init.data",#alloc,#write

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#795: FILE: asm-i386/init.h:15:
+			 ((__section__ (".cacheline_aligned.data")))

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#888: FILE: asm-i386/uaccess.h:13:
+#define __EX_TABLE	"__ex_table." __FUNCTION__

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1017: FILE: asm-m68k/init.h:8:
+#define __init __attribute__ ((__section__ (".init.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1017: FILE: asm-m68k/init.h:8:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.text") over __attribute__((__section__(".init.text")))
#1017: FILE: asm-m68k/init.h:8:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1018: FILE: asm-m68k/init.h:9:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1018: FILE: asm-m68k/init.h:9:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.data") over __attribute__((__section__(".init.data")))
#1018: FILE: asm-m68k/init.h:9:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1024: FILE: asm-m68k/init.h:14:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1024: FILE: asm-m68k/init.h:14:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1024: FILE: asm-m68k/init.h:14:
+#define __INIT		.section	".init.text",#alloc,#execinstr

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1027: FILE: asm-m68k/init.h:16:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1027: FILE: asm-m68k/init.h:16:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1027: FILE: asm-m68k/init.h:16:
+#define __INITDATA	.section	".init.data",#alloc,#write

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1031: FILE: asm-m68k/init.h:19:
+		((__aligned__(16), __section__ (".cacheline_aligned.data")))

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1091: FILE: asm-m68k/uaccess.h:12:
+#define __EX_TABLE	"__ex_table." __FUNCTION__

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: asm-m68k/uaccess.h:93:
+     ".section " __EX_TABLE ",\"a\"\n"^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: asm-m68k/uaccess.h:137:
+     ".section " __EX_TABLE ",\"a\"\n"^I^I\$

WARNING:SPLIT_STRING: quoted string split across lines
#1311: FILE: asm-m68k/uaccess.h:714:
 			       "2:"
+			       ".section " __EX_TABLE ",\"a\"\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1320: FILE: asm-m68k/uaccess.h:727:
 			       "2:"
+			       ".section " __EX_TABLE ",\"a\"\n"

WARNING:SPLIT_STRING: quoted string split across lines
#1329: FILE: asm-m68k/uaccess.h:743:
 			       "4:"
+			       ".section " __EX_TABLE ",\"a\"\n"

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1369: FILE: asm-mips/init.h:1:
+/* $Id: init.h,v 1.1.1.1.2.1 2000/04/20 02:47:31 greyham Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1369: FILE: asm-mips/init.h:1:
+/* $Id: init.h,v 1.1.1.1.2.1 2000/04/20 02:47:31 greyham Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1379: FILE: asm-mips/init.h:12:
+#define __init __attribute__ ((__section__ (".init.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1379: FILE: asm-mips/init.h:12:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.text") over __attribute__((__section__(".init.text")))
#1379: FILE: asm-mips/init.h:12:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1380: FILE: asm-mips/init.h:13:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1380: FILE: asm-mips/init.h:13:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.data") over __attribute__((__section__(".init.data")))
#1380: FILE: asm-mips/init.h:13:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1389: FILE: asm-mips/init.h:25:
+#define __INIT		.section	.init.text,"ax"
               		        	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1392: FILE: asm-mips/init.h:27:
+#define __INITDATA	.section	.init.data,"a"
                   	        	          ^

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1405: FILE: asm-mips/semaphore-helper.h:1:
+/* $Id: semaphore-helper.h,v 1.1.1.1.2.1 2000/04/20 02:47:31 greyham Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1405: FILE: asm-mips/semaphore-helper.h:1:
+/* $Id: semaphore-helper.h,v 1.1.1.1.2.1 2000/04/20 02:47:31 greyham Exp $

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1429: FILE: asm-mips/uaccess.h:10:
+ * $Id: uaccess.h,v 1.1.1.1.2.1 2000/04/20 02:47:31 greyham Exp $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1439: FILE: asm-mips/uaccess.h:20:
+#define __EX_TABLE	"__ex_table." __FUNCTION__

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1496: FILE: asm-ppc/init.h:5:
+#define __init __attribute__ ((__section__ (".init.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1496: FILE: asm-ppc/init.h:5:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.text") over __attribute__((__section__(".init.text")))
#1496: FILE: asm-ppc/init.h:5:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1497: FILE: asm-ppc/init.h:6:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1497: FILE: asm-ppc/init.h:6:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.data") over __attribute__((__section__(".init.data")))
#1497: FILE: asm-ppc/init.h:6:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1504: FILE: asm-ppc/init.h:11:
+#define __pmac __attribute__ ((__section__ (".pmac.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1504: FILE: asm-ppc/init.h:11:
+#define __pmac __attribute__ ((__section__ (".pmac.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".pmac.text") over __attribute__((__section__(".pmac.text")))
#1504: FILE: asm-ppc/init.h:11:
+#define __pmac __attribute__ ((__section__ (".pmac.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1505: FILE: asm-ppc/init.h:12:
+#define __pmacdata __attribute__ ((__section__ (".pmac.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1505: FILE: asm-ppc/init.h:12:
+#define __pmacdata __attribute__ ((__section__ (".pmac.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".pmac.data") over __attribute__((__section__(".pmac.data")))
#1505: FILE: asm-ppc/init.h:12:
+#define __pmacdata __attribute__ ((__section__ (".pmac.data")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1512: FILE: asm-ppc/init.h:17:
+#define __prep __attribute__ ((__section__ (".prep.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1512: FILE: asm-ppc/init.h:17:
+#define __prep __attribute__ ((__section__ (".prep.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".prep.text") over __attribute__((__section__(".prep.text")))
#1512: FILE: asm-ppc/init.h:17:
+#define __prep __attribute__ ((__section__ (".prep.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1513: FILE: asm-ppc/init.h:18:
+#define __prepdata __attribute__ ((__section__ (".prep.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1513: FILE: asm-ppc/init.h:18:
+#define __prepdata __attribute__ ((__section__ (".prep.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".prep.data") over __attribute__((__section__(".prep.data")))
#1513: FILE: asm-ppc/init.h:18:
+#define __prepdata __attribute__ ((__section__ (".prep.data")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1521: FILE: asm-ppc/init.h:24:
+#define __openfirmware __attribute__ ((__section__ (".openfirmware.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1521: FILE: asm-ppc/init.h:24:
+#define __openfirmware __attribute__ ((__section__ (".openfirmware.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".openfirmware.text") over __attribute__((__section__(".openfirmware.text")))
#1521: FILE: asm-ppc/init.h:24:
+#define __openfirmware __attribute__ ((__section__ (".openfirmware.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1522: FILE: asm-ppc/init.h:25:
+#define __openfirmwaredata __attribute__ ((__section__ (".openfirmware.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1522: FILE: asm-ppc/init.h:25:
+#define __openfirmwaredata __attribute__ ((__section__ (".openfirmware.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".openfirmware.data") over __attribute__((__section__(".openfirmware.data")))
#1522: FILE: asm-ppc/init.h:25:
+#define __openfirmwaredata __attribute__ ((__section__ (".openfirmware.data")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1528: FILE: asm-ppc/init.h:30:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1528: FILE: asm-ppc/init.h:30:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1528: FILE: asm-ppc/init.h:30:
+#define __INIT		.section	".init.text",#alloc,#execinstr

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1531: FILE: asm-ppc/init.h:32:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1531: FILE: asm-ppc/init.h:32:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1531: FILE: asm-ppc/init.h:32:
+#define __INITDATA	.section	".init.data",#alloc,#write

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1535: FILE: asm-ppc/init.h:35:
+			 ((__section__ (".cacheline_aligned.data")))

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1552: FILE: asm-ppc/uaccess.h:11:
+#define __EX_TABLE	"__ex_table." __FUNCTION__

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1601: FILE: asm-sparc/init.h:5:
+#define __init __attribute__ ((__section__ (".init.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1601: FILE: asm-sparc/init.h:5:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.text") over __attribute__((__section__(".init.text")))
#1601: FILE: asm-sparc/init.h:5:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1602: FILE: asm-sparc/init.h:6:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1602: FILE: asm-sparc/init.h:6:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.data") over __attribute__((__section__(".init.data")))
#1602: FILE: asm-sparc/init.h:6:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1608: FILE: asm-sparc/init.h:11:
+			((__section__ (".cacheline_aligned.data")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1611: FILE: asm-sparc/init.h:13:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1611: FILE: asm-sparc/init.h:13:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1611: FILE: asm-sparc/init.h:13:
+#define __INIT		.section	".init.text",#alloc,#execinstr

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1614: FILE: asm-sparc/init.h:15:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1614: FILE: asm-sparc/init.h:15:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1614: FILE: asm-sparc/init.h:15:
+#define __INITDATA	.section	".init.data",#alloc,#write

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1627: FILE: asm-sparc/uaccess.h:1:
+/* $Id: uaccess.h,v 1.1.1.1.2.1 2000/04/20 02:47:32 greyham Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1627: FILE: asm-sparc/uaccess.h:1:
+/* $Id: uaccess.h,v 1.1.1.1.2.1 2000/04/20 02:47:32 greyham Exp $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1637: FILE: asm-sparc/uaccess.h:21:
+#define __EX_TABLE	"__ex_table." __FUNCTION__

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1721: FILE: asm-sparc64/init.h:4:
+#define __init __attribute__ ((__section__ (".init.text")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1721: FILE: asm-sparc64/init.h:4:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.text") over __attribute__((__section__(".init.text")))
#1721: FILE: asm-sparc64/init.h:4:
+#define __init __attribute__ ((__section__ (".init.text")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1722: FILE: asm-sparc64/init.h:5:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1722: FILE: asm-sparc64/init.h:5:
+#define __initdata __attribute__ ((__section__ (".init.data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".init.data") over __attribute__((__section__(".init.data")))
#1722: FILE: asm-sparc64/init.h:5:
+#define __initdata __attribute__ ((__section__ (".init.data")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1728: FILE: asm-sparc64/init.h:10:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1728: FILE: asm-sparc64/init.h:10:
+#define __INIT		.section	".init.text",#alloc,#execinstr
               		        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1728: FILE: asm-sparc64/init.h:10:
+#define __INIT		.section	".init.text",#alloc,#execinstr

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1731: FILE: asm-sparc64/init.h:12:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1731: FILE: asm-sparc64/init.h:12:
+#define __INITDATA	.section	".init.data",#alloc,#write
                   	        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1731: FILE: asm-sparc64/init.h:12:
+#define __INITDATA	.section	".init.data",#alloc,#write

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1744: FILE: asm-sparc64/uaccess.h:1:
+/* $Id: uaccess.h,v 1.1.1.1.2.1 2000/04/20 02:47:33 greyham Exp $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1744: FILE: asm-sparc64/uaccess.h:1:
+/* $Id: uaccess.h,v 1.1.1.1.2.1 2000/04/20 02:47:33 greyham Exp $ */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1754: FILE: asm-sparc64/uaccess.h:22:
+#define __EX_TABLE	"__ex_table." __FUNCTION__

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000569956.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 62 errors, 109 warnings, 2 checks, 1353 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000569956.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
