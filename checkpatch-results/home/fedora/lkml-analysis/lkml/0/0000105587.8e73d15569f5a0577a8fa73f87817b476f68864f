WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: include/linux/gigaset_dev.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#57: FILE: include/linux/gigaset_dev.h:12:
+ * Version: $Id: gigaset_dev.h,v 1.4.4.4 2005/11/21 22:28:09 hjlipp Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: include/linux/gigaset_dev.h:27:
+#define GIGASET_REDIR    _IOWR (GIGASET_IOCTL, 0, int)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#72: FILE: include/linux/gigaset_dev.h:27:
+#define GIGASET_REDIR    _IOWR (GIGASET_IOCTL, 0, int)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#73: FILE: include/linux/gigaset_dev.h:28:
+#define GIGASET_CONFIG   _IOWR (GIGASET_IOCTL, 1, int)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#73: FILE: include/linux/gigaset_dev.h:28:
+#define GIGASET_CONFIG   _IOWR (GIGASET_IOCTL, 1, int)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#74: FILE: include/linux/gigaset_dev.h:29:
+#define GIGASET_BRKCHARS _IOW  (GIGASET_IOCTL, 2, unsigned char[6]) //FIXME [6] okay?

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#74: FILE: include/linux/gigaset_dev.h:29:
+#define GIGASET_BRKCHARS _IOW  (GIGASET_IOCTL, 2, unsigned char[6]) //FIXME [6] okay?

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#75: FILE: include/linux/gigaset_dev.h:30:
+#define GIGASET_VERSION  _IOWR (GIGASET_IOCTL, 3, unsigned[4])

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#75: FILE: include/linux/gigaset_dev.h:30:
+#define GIGASET_VERSION  _IOWR (GIGASET_IOCTL, 3, unsigned[4])

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#75: FILE: include/linux/gigaset_dev.h:30:
+#define GIGASET_VERSION  _IOWR (GIGASET_IOCTL, 3, unsigned[4])

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: drivers/isdn/gigaset/interface.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#92: FILE: drivers/isdn/gigaset/interface.c:12:
+ * Version: $Id: interface.c,v 1.14.4.15 2006/02/04 18:28:16 hjlipp Exp $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'if_lock', this function's name, in a string
#107: FILE: drivers/isdn/gigaset/interface.c:27:
+	dbg(DEBUG_IF, "%u: if_lock (%d)", cs->minor_index, cmd);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#118: FILE: drivers/isdn/gigaset/interface.c:38:
+	if (!cmd && atomic_read(&cs->mstate) == MS_LOCKED
+	    && atomic_read(&cs->connected)) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#119: FILE: drivers/isdn/gigaset/interface.c:39:
+		cs->ops->set_modem_ctrl(cs, 0, TIOCM_DTR|TIOCM_RTS);
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#122: FILE: drivers/isdn/gigaset/interface.c:42:
+		cs->control_state = TIOCM_DTR|TIOCM_RTS;
 		                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/isdn/gigaset/interface.c:47:
+^I^I               NULL, cmd, NULL)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: drivers/isdn/gigaset/interface.c:47:
+	if (!gigaset_add_event(cs, &cs->at_state, EV_IF_LOCK,
+		               NULL, cmd, NULL)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#145: FILE: drivers/isdn/gigaset/interface.c:65:
+static int if_version(struct cardstate *cs, unsigned arg[4])

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#147: FILE: drivers/isdn/gigaset/interface.c:67:
+	static const unsigned version[4] = GIG_VERSION;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#148: FILE: drivers/isdn/gigaset/interface.c:68:
+	static const unsigned compat[4] = GIG_COMPAT;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#149: FILE: drivers/isdn/gigaset/interface.c:69:
+	unsigned cmd = arg[0];

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'if_version', this function's name, in a string
#151: FILE: drivers/isdn/gigaset/interface.c:71:
+	dbg(DEBUG_IF, "%u: if_version (%d)", cs->minor_index, cmd);

WARNING:SIZEOF_PARENTHESIS: sizeof version should be sizeof(version)
#155: FILE: drivers/isdn/gigaset/interface.c:75:
+		memcpy(arg, version, sizeof version);

WARNING:SIZEOF_PARENTHESIS: sizeof compat should be sizeof(compat)
#158: FILE: drivers/isdn/gigaset/interface.c:78:
+		memcpy(arg, compat, sizeof compat);

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: drivers/isdn/gigaset/interface.c:83:
+^I^I^I               NULL, 0, arg)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: drivers/isdn/gigaset/interface.c:83:
+		if (!gigaset_add_event(cs, &cs->at_state, EV_IF_VER,
+			               NULL, 0, arg)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'if_config', this function's name, in a string
#184: FILE: drivers/isdn/gigaset/interface.c:104:
+	dbg(DEBUG_IF, "%u: if_config (%d)", cs->minor_index, *arg);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#199: FILE: drivers/isdn/gigaset/interface.c:119:
+static int  if_open(struct tty_struct *tty, struct file *filp);
                                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#200: FILE: drivers/isdn/gigaset/interface.c:120:
+static void if_close(struct tty_struct *tty, struct file *filp);
                                                           ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/isdn/gigaset/interface.c:122:
+                     unsigned int cmd, unsigned long arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/isdn/gigaset/interface.c:122:
+                     unsigned int cmd, unsigned long arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: drivers/isdn/gigaset/interface.c:130:
+                        unsigned int set, unsigned int clear);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/isdn/gigaset/interface.c:130:
+                        unsigned int set, unsigned int clear);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/isdn/gigaset/interface.c:132:
+                     const unsigned char *buf, int count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/isdn/gigaset/interface.c:132:
+                     const unsigned char *buf, int count);$

WARNING:CONST_STRUCT: struct tty_operations should normally be const
#214: FILE: drivers/isdn/gigaset/interface.c:134:
+static struct tty_operations if_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#224: FILE: drivers/isdn/gigaset/interface.c:144:
+#if 0

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#231: FILE: drivers/isdn/gigaset/interface.c:151:
+static int if_open(struct tty_struct *tty, struct file *filp)
                                                         ^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#237: FILE: drivers/isdn/gigaset/interface.c:157:
+	    __FUNCTION__);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#263: FILE: drivers/isdn/gigaset/interface.c:183:
+static void if_close(struct tty_struct *tty, struct file *filp)
                                                           ^^^^

CHECK:SPACING: No space is necessary after a cast
#268: FILE: drivers/isdn/gigaset/interface.c:188:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#270: FILE: drivers/isdn/gigaset/interface.c:190:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#274: FILE: drivers/isdn/gigaset/interface.c:194:
+	dbg(DEBUG_IF, "%u: %s()", cs->minor_index, __FUNCTION__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#278: FILE: drivers/isdn/gigaset/interface.c:198:
+	if (!cs->open_count)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#279: FILE: drivers/isdn/gigaset/interface.c:199:
+		warn("%s: device not opened", __FUNCTION__);

CHECK:BRACES: Unbalanced braces around else statement
#280: FILE: drivers/isdn/gigaset/interface.c:200:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/isdn/gigaset/interface.c:213:
+                    unsigned int cmd, unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/isdn/gigaset/interface.c:213:
+                    unsigned int cmd, unsigned long arg)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#299: FILE: drivers/isdn/gigaset/interface.c:219:
+	unsigned version[4];

CHECK:SPACING: No space is necessary after a cast
#301: FILE: drivers/isdn/gigaset/interface.c:221:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#303: FILE: drivers/isdn/gigaset/interface.c:223:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#307: FILE: drivers/isdn/gigaset/interface.c:227:
+	dbg(DEBUG_IF, "%u: %s(0x%x)", cs->minor_index, __FUNCTION__, cmd);

CHECK:BRACES: braces {} should be used on all arms of this statement
#312: FILE: drivers/isdn/gigaset/interface.c:232:
+	if (!cs->open_count)
[...]
+	else {
[...]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#313: FILE: drivers/isdn/gigaset/interface.c:233:
+		warn("%s: device not opened", __FUNCTION__);

CHECK:BRACES: Unbalanced braces around else statement
#314: FILE: drivers/isdn/gigaset/interface.c:234:
+	else {

CHECK:SPACING: No space is necessary after a cast
#318: FILE: drivers/isdn/gigaset/interface.c:238:
+			retval = get_user(int_arg, (int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#322: FILE: drivers/isdn/gigaset/interface.c:242:
+				retval = put_user(int_arg, (int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#325: FILE: drivers/isdn/gigaset/interface.c:245:
+			retval = get_user(int_arg, (int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#329: FILE: drivers/isdn/gigaset/interface.c:249:
+				retval = put_user(int_arg, (int __user *) arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: drivers/isdn/gigaset/interface.c:254:
+^I^I^I                   6, (const unsigned char *) arg, 1);$

CHECK:SPACING: No space is necessary after a cast
#334: FILE: drivers/isdn/gigaset/interface.c:254:
+			                   6, (const unsigned char *) arg, 1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: drivers/isdn/gigaset/interface.c:261:
+^I^I^I                        (const unsigned char __user *) arg, 6)$

CHECK:SPACING: No space is necessary after a cast
#341: FILE: drivers/isdn/gigaset/interface.c:261:
+			                        (const unsigned char __user *) arg, 6)

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: drivers/isdn/gigaset/interface.c:262:
+^I^I^I         ? -EFAULT : 0;$

CHECK:SPACING: No space is necessary after a cast
#347: FILE: drivers/isdn/gigaset/interface.c:267:
+			retval = copy_from_user(version, (unsigned __user *) arg,

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: drivers/isdn/gigaset/interface.c:268:
+^I^I^I                        sizeof version) ? -EFAULT : 0;$

WARNING:SIZEOF_PARENTHESIS: sizeof version should be sizeof(version)
#348: FILE: drivers/isdn/gigaset/interface.c:268:
+			                        sizeof version) ? -EFAULT : 0;

CHECK:SPACING: No space is necessary after a cast
#352: FILE: drivers/isdn/gigaset/interface.c:272:
+				retval = copy_to_user((unsigned __user *) arg, version,

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/isdn/gigaset/interface.c:273:
+^I^I^I^I                      sizeof version)$

WARNING:SIZEOF_PARENTHESIS: sizeof version should be sizeof(version)
#353: FILE: drivers/isdn/gigaset/interface.c:273:
+				                      sizeof version)

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/isdn/gigaset/interface.c:274:
+^I^I^I^I         ? -EFAULT : 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: drivers/isdn/gigaset/interface.c:276:
+^I        default:$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#358: FILE: drivers/isdn/gigaset/interface.c:278:
+			    __FUNCTION__, cmd);

CHECK:SPACING: No space is necessary after a cast
#373: FILE: drivers/isdn/gigaset/interface.c:293:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#375: FILE: drivers/isdn/gigaset/interface.c:295:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#379: FILE: drivers/isdn/gigaset/interface.c:299:
+	dbg(DEBUG_IF, "%u: %s()", cs->minor_index, __FUNCTION__);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#385: FILE: drivers/isdn/gigaset/interface.c:305:
+	retval = cs->control_state & (TIOCM_RTS|TIOCM_DTR);
 	                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: drivers/isdn/gigaset/interface.c:313:
+                       unsigned int set, unsigned int clear)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/isdn/gigaset/interface.c:313:
+                       unsigned int set, unsigned int clear)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#397: FILE: drivers/isdn/gigaset/interface.c:317:
+	unsigned mc;

CHECK:SPACING: No space is necessary after a cast
#399: FILE: drivers/isdn/gigaset/interface.c:319:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#401: FILE: drivers/isdn/gigaset/interface.c:321:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#406: FILE: drivers/isdn/gigaset/interface.c:326:
+	    "%u: %s(0x%x, 0x%x)", cs->minor_index, __FUNCTION__, set, clear);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#415: FILE: drivers/isdn/gigaset/interface.c:335:
+		mc = (cs->control_state | set) & ~clear & (TIOCM_RTS|TIOCM_DTR);
 		                                                    ^

CHECK:SPACING: No space is necessary after a cast
#430: FILE: drivers/isdn/gigaset/interface.c:350:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#432: FILE: drivers/isdn/gigaset/interface.c:352:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#436: FILE: drivers/isdn/gigaset/interface.c:356:
+	dbg(DEBUG_IF, "%u: %s()", cs->minor_index, __FUNCTION__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#441: FILE: drivers/isdn/gigaset/interface.c:361:
+	if (!cs->open_count)
[...]
+	else if (atomic_read(&cs->mstate) != MS_LOCKED) {
[...]
+	} else if (!atomic_read(&cs->connected)) {
[...]
+	} else {
[...]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#442: FILE: drivers/isdn/gigaset/interface.c:362:
+		warn("%s: device not opened", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: drivers/isdn/gigaset/interface.c:371:
+^I^I                            &cs->if_wake_tasklet);$

CHECK:SPACING: No space is necessary after a cast
#464: FILE: drivers/isdn/gigaset/interface.c:384:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#466: FILE: drivers/isdn/gigaset/interface.c:386:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#470: FILE: drivers/isdn/gigaset/interface.c:390:
+	dbg(DEBUG_IF, "%u: %s()", cs->minor_index, __FUNCTION__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#475: FILE: drivers/isdn/gigaset/interface.c:395:
+	if (!cs->open_count)
[...]
+	else if (atomic_read(&cs->mstate) != MS_LOCKED) {
[...]
+	} else if (!atomic_read(&cs->connected)) {
[...]
+	} else
[...]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#476: FILE: drivers/isdn/gigaset/interface.c:396:
+		warn("%s: device not opened", __FUNCTION__);

CHECK:BRACES: Unbalanced braces around else statement
#483: FILE: drivers/isdn/gigaset/interface.c:403:
+	} else

CHECK:SPACING: No space is necessary after a cast
#496: FILE: drivers/isdn/gigaset/interface.c:416:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#498: FILE: drivers/isdn/gigaset/interface.c:418:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#502: FILE: drivers/isdn/gigaset/interface.c:422:
+	dbg(DEBUG_IF, "%u: %s()", cs->minor_index, __FUNCTION__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#507: FILE: drivers/isdn/gigaset/interface.c:427:
+	if (!cs->open_count)
[...]
+	else if (atomic_read(&cs->mstate) != MS_LOCKED) {
[...]
+	} else if (!atomic_read(&cs->connected)) {
[...]
+	} else
[...]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#508: FILE: drivers/isdn/gigaset/interface.c:428:
+		warn("%s: device not opened", __FUNCTION__);

CHECK:BRACES: Unbalanced braces around else statement
#515: FILE: drivers/isdn/gigaset/interface.c:435:
+	} else

CHECK:SPACING: No space is necessary after a cast
#527: FILE: drivers/isdn/gigaset/interface.c:447:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#529: FILE: drivers/isdn/gigaset/interface.c:449:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#533: FILE: drivers/isdn/gigaset/interface.c:453:
+	dbg(DEBUG_IF, "%u: %s()", cs->minor_index, __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#537: FILE: drivers/isdn/gigaset/interface.c:457:
+	if (!cs->open_count)
[...]
+	else {
[...]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#538: FILE: drivers/isdn/gigaset/interface.c:458:
+		warn("%s: device not opened", __FUNCTION__);

CHECK:BRACES: Unbalanced braces around else statement
#539: FILE: drivers/isdn/gigaset/interface.c:459:
+	else {

CHECK:SPACING: No space is necessary after a cast
#550: FILE: drivers/isdn/gigaset/interface.c:470:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#552: FILE: drivers/isdn/gigaset/interface.c:472:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#556: FILE: drivers/isdn/gigaset/interface.c:476:
+	dbg(DEBUG_IF, "%u: %s()", cs->minor_index, __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#560: FILE: drivers/isdn/gigaset/interface.c:480:
+	if (!cs->open_count)
[...]
+	else {
[...]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#561: FILE: drivers/isdn/gigaset/interface.c:481:
+		warn("%s: device not opened", __FUNCTION__);

CHECK:BRACES: Unbalanced braces around else statement
#562: FILE: drivers/isdn/gigaset/interface.c:482:
+	else {

CHECK:SPACING: No space is necessary after a cast
#577: FILE: drivers/isdn/gigaset/interface.c:497:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#579: FILE: drivers/isdn/gigaset/interface.c:499:
+		err("cs==NULL in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#583: FILE: drivers/isdn/gigaset/interface.c:503:
+	dbg(DEBUG_IF, "%u: %s()", cs->minor_index, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#588: FILE: drivers/isdn/gigaset/interface.c:508:
+		warn("%s: device not opened", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: drivers/isdn/gigaset/interface.c:534:
+        /* reassert DTR and (maybe) RTS on transition from B0 */$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#642: FILE: drivers/isdn/gigaset/interface.c:562:
+#if 0

WARNING:LONG_LINE_COMMENT: line length of 130 exceeds 100 columns
#658: FILE: drivers/isdn/gigaset/interface.c:578:
+		gigaset_set_modem_ctrl(cs, control_state, new_state); // FIXME: mct_u232.c sets the old state here. is this a bug?

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#670: FILE: drivers/isdn/gigaset/interface.c:590:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#674: FILE: drivers/isdn/gigaset/interface.c:594:
+	struct cardstate *cs = (struct cardstate *) data;

CHECK:SPACING: No space is necessary after a cast
#700: FILE: drivers/isdn/gigaset/interface.c:620:
+	tasklet_init(&cs->if_wake_tasklet, &if_wake, (unsigned long) cs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: drivers/isdn/gigaset/interface.c:638:
+                        unsigned char *buffer, size_t len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: drivers/isdn/gigaset/interface.c:638:
+                        unsigned char *buffer, size_t len)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#724: FILE: drivers/isdn/gigaset/interface.c:644:
+	if ((tty = cs->tty) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#724: FILE: drivers/isdn/gigaset/interface.c:644:
+	if ((tty = cs->tty) == NULL)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#726: FILE: drivers/isdn/gigaset/interface.c:646:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#744: FILE: drivers/isdn/gigaset/interface.c:664:
+                           const char *devname, const char *devfsname)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: drivers/isdn/gigaset/interface.c:664:
+                           const char *devname, const char *devfsname)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#746: FILE: drivers/isdn/gigaset/interface.c:666:
+	unsigned minors = drv->minors;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#752: FILE: drivers/isdn/gigaset/interface.c:672:
+	if ((drv->tty = alloc_tty_driver(minors)) == NULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 70 warnings, 41 checks, 750 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
