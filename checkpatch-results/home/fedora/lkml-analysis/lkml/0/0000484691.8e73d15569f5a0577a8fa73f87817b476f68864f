WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
I have a website detailing the exact metrics used and why I choose them:  		

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#92: FILE: net/ipv4/af_inet.c:133:
+extern int tcp_health_get_info(char *, char **, off_t, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#92: FILE: net/ipv4/af_inet.c:133:
+extern int tcp_health_get_info(char *, char **, off_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#92: FILE: net/ipv4/af_inet.c:133:
+extern int tcp_health_get_info(char *, char **, off_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#92: FILE: net/ipv4/af_inet.c:133:
+extern int tcp_health_get_info(char *, char **, off_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#92: FILE: net/ipv4/af_inet.c:133:
+extern int tcp_health_get_info(char *, char **, off_t, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: net/ipv4/af_inet.c:1201:
+	proc_net_create ("tcphealth", 0, tcp_health_get_info);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#121: FILE: net/ipv4/proc.c:218:
+/*
+ *	Output /proc/net/tcphealth

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#127: FILE: net/ipv4/proc.c:224:
+	int len=0, i=0, num=0;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#127: FILE: net/ipv4/proc.c:224:
+	int len=0, i=0, num=0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#127: FILE: net/ipv4/proc.c:224:
+	int len=0, i=0, num=0;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#128: FILE: net/ipv4/proc.c:225:
+	off_t pos=0, begin=0;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#128: FILE: net/ipv4/proc.c:225:
+	off_t pos=0, begin=0;
 	                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: net/ipv4/proc.c:226:
+       char tmpbuf[LINESZ+1], srcIP[32], destIP[32];$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: net/ipv4/proc.c:226:
+       char tmpbuf[LINESZ+1], srcIP[32], destIP[32];
                          ^

CHECK:CAMELCASE: Avoid CamelCase: <srcIP>
#129: FILE: net/ipv4/proc.c:226:
+       char tmpbuf[LINESZ+1], srcIP[32], destIP[32];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <destIP>
#129: FILE: net/ipv4/proc.c:226:
+       char tmpbuf[LINESZ+1], srcIP[32], destIP[32];

CHECK:CAMELCASE: Avoid CamelCase: <SmoothedRttEstimate>
#131: FILE: net/ipv4/proc.c:228:
+	unsigned long  dest, src, SmoothedRttEstimate,

CHECK:CAMELCASE: Avoid CamelCase: <AcksSent>
#132: FILE: net/ipv4/proc.c:229:
+		AcksSent, DupAcksSent, PktsRecv, DupPktsRecv;

CHECK:CAMELCASE: Avoid CamelCase: <DupAcksSent>
#132: FILE: net/ipv4/proc.c:229:
+		AcksSent, DupAcksSent, PktsRecv, DupPktsRecv;

CHECK:CAMELCASE: Avoid CamelCase: <PktsRecv>
#132: FILE: net/ipv4/proc.c:229:
+		AcksSent, DupAcksSent, PktsRecv, DupPktsRecv;

CHECK:CAMELCASE: Avoid CamelCase: <DupPktsRecv>
#132: FILE: net/ipv4/proc.c:229:
+		AcksSent, DupAcksSent, PktsRecv, DupPktsRecv;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: net/ipv4/proc.c:233:
+	len = sprintf(buffer,
+		"TCP Health Monitoring (established connections only)\n"

WARNING:SPLIT_STRING: quoted string split across lines
#141: FILE: net/ipv4/proc.c:238:
+		"id   Local Address        Remote Address       RttEst(ms) AcksSent "
+		"DupAcksSent PktsRecv DupPktsRecv\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#142: FILE: net/ipv4/proc.c:239:
+	pos=len;
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#146: FILE: net/ipv4/proc.c:243:
+	for (i=0; i < tcp_ehash_size; i++) {
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: net/ipv4/proc.c:249:
+		for (sk=head->chain; sk; sk=sk->next) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: net/ipv4/proc.c:249:
+		for (sk=head->chain; sk; sk=sk->next) {
 		                           ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#155: FILE: net/ipv4/proc.c:252:
+			pos+=LINESZ;
 			   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sk->tp_pinfo.af_tcp
#164: FILE: net/ipv4/proc.c:261:
+			tp = &(sk->tp_pinfo.af_tcp);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#172: FILE: net/ipv4/proc.c:269:
+				((src >> 24) & 0xFF), ((src >> 16) & 0xFF), ((src >> 8) & 0xFF), (src & 0xFF),

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#175: FILE: net/ipv4/proc.c:272:
+				((dest >> 24) & 0xFF), ((dest >> 16) & 0xFF), ((dest >> 8) & 0xFF), (dest & 0xFF),

WARNING:SPLIT_STRING: quoted string split across lines
#179: FILE: net/ipv4/proc.c:276:
+			sprintf(tmpbuf, "%d: %-21s %-21s "
+				"%8lu %8lu %8lu %8lu %8lu",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#190: FILE: net/ipv4/proc.c:287:
+			len += sprintf(buffer+len, "%-*s\n", LINESZ-1, tmpbuf);
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#190: FILE: net/ipv4/proc.c:287:
+			len += sprintf(buffer+len, "%-*s\n", LINESZ-1, tmpbuf);
 			                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#191: FILE: net/ipv4/proc.c:288:
+			if(pos >= offset+length) {
 			                ^

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: net/ipv4/proc.c:288:
+			if(pos >= offset+length) {

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#206: FILE: net/ipv4/proc.c:303:
+	if(len>length)
 	      ^

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: net/ipv4/proc.c:303:
+	if(len>length)

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#208: FILE: net/ipv4/proc.c:305:
+	if (len<0)
 	       ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#250: FILE: net/ipv4/tcp_input.c:3253:
+	/*
+	 *	Tcp health monitoring is interested in

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#274: FILE: net/ipv4/tcp_output.c:1325:
+		/* If the rcv_nxt has not advanced since sending our last ACK, this is a duplicate. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000484691.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 15 warnings, 13 checks, 215 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000484691.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
