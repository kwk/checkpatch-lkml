WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
The patch is useful for kernel space applications that sometimes need to fl=

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: include/linux/dyn_pageflags.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#72: FILE: include/linux/dyn_pageflags.h:2:
+ * include/linux/dyn_pageflags.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#88: FILE: include/linux/dyn_pageflags.h:18:
+typedef unsigned long *** dyn_pageflags_t;

ERROR:POINTER_LOCATION: "foo *** bar" should be "foo ***bar"
#88: FILE: include/linux/dyn_pageflags.h:18:
+typedef unsigned long *** dyn_pageflags_t;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#92: FILE: include/linux/dyn_pageflags.h:22:
+#if BITS_PER_LONG =3D=3D 32
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#92: FILE: include/linux/dyn_pageflags.h:22:
+#if BITS_PER_LONG =3D=3D 32
                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#94: FILE: include/linux/dyn_pageflags.h:24:
+#else=20
      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#95: FILE: include/linux/dyn_pageflags.h:25:
+#if BITS_PER_LONG =3D=3D 64
                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#95: FILE: include/linux/dyn_pageflags.h:25:
+#if BITS_PER_LONG =3D=3D 64
                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zone_offset' may be better as '(zone_offset)' to avoid precedence issues
#107: FILE: include/linux/dyn_pageflags.h:37:
+#define PAGENUMBER(zone_offset) (zone_offset >> (PAGE_SHIFT + 3))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zone_offset' may be better as '(zone_offset)' to avoid precedence issues
#108: FILE: include/linux/dyn_pageflags.h:38:
+#define PAGEINDEX(zone_offset) ((zone_offset & UL_NUM_MASK) >> UL_SHIFT)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zone_offset' may be better as '(zone_offset)' to avoid precedence issues
#109: FILE: include/linux/dyn_pageflags.h:39:
+#define PAGEBIT(zone_offset) (zone_offset & BIT_NUM_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'zone_pfn' - possible side-effects?
#111: FILE: include/linux/dyn_pageflags.h:41:
+#define PAGE_UL_PTR(bitmap, zone_num, zone_pfn) \
+       ((bitmap[zone_num][PAGENUMBER(zone_pfn)])+PAGEINDEX(zone_pfn))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: include/linux/dyn_pageflags.h:42:
+       ((bitmap[zone_num][PAGENUMBER(zone_pfn)])+PAGEINDEX(zone_pfn))$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#112: FILE: include/linux/dyn_pageflags.h:42:
+       ((bitmap[zone_num][PAGENUMBER(zone_pfn)])+PAGEINDEX(zone_pfn))
                                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#115: FILE: include/linux/dyn_pageflags.h:45:
+/* With the above macros defined, you can do...
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bitmap' - possible side-effects?
#121: FILE: include/linux/dyn_pageflags.h:51:
+#define BITMAP_FOR_EACH_SET(bitmap, counter) \
+	for (counter =3D get_next_bit_on(bitmap, -1); counter < max_pfn; \
+		counter =3D get_next_bit_on(bitmap, counter))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'counter' - possible side-effects?
#121: FILE: include/linux/dyn_pageflags.h:51:
+#define BITMAP_FOR_EACH_SET(bitmap, counter) \
+	for (counter =3D get_next_bit_on(bitmap, -1); counter < max_pfn; \
+		counter =3D get_next_bit_on(bitmap, counter))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#122: FILE: include/linux/dyn_pageflags.h:52:
+	for (counter =3D get_next_bit_on(bitmap, -1); counter < max_pfn; \
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#123: FILE: include/linux/dyn_pageflags.h:53:
+		counter =3D get_next_bit_on(bitmap, counter))
 		        ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: include/linux/dyn_pageflags.h:55:
+extern void clear_dyn_pageflags(dyn_pageflags_t pagemap);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/dyn_pageflags.h:56:
+extern int allocate_dyn_pageflags(dyn_pageflags_t *pagemap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: include/linux/dyn_pageflags.h:57:
+extern int free_dyn_pageflags(dyn_pageflags_t *pagemap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#128: FILE: include/linux/dyn_pageflags.h:58:
+extern int dyn_pageflags_pages_per_bitmap(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/linux/dyn_pageflags.h:59:
+extern int get_next_bit_on(dyn_pageflags_t bitmap, int counter);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: include/linux/dyn_pageflags.h:60:
+extern unsigned long *dyn_pageflags_ul_ptr(dyn_pageflags_t *bitmap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: include/linux/dyn_pageflags.h:61:
+extern unsigned long *dyn_pageflags_ul_ptr(dyn_pageflags_t *bitmap,
+		struct page *pg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: include/linux/dyn_pageflags.h:63:
+extern int test_dynpageflag(dyn_pageflags_t *bitmap, struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#134: FILE: include/linux/dyn_pageflags.h:64:
+extern void set_dynpageflag(dyn_pageflags_t *bitmap, struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: include/linux/dyn_pageflags.h:65:
+extern void clear_dynpageflag(dyn_pageflags_t *bitmap, struct page *page);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#144: FILE: lib/dyn_pageflags.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#145: FILE: lib/dyn_pageflags.c:2:
+ * lib/dyn_pageflags.c

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#167: FILE: lib/dyn_pageflags.c:24:
+#define page_to_zone_offset(pg) (page_to_pfn(pg) - page_zone(pg)->zone_sta=
                                                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#167: FILE: lib/dyn_pageflags.c:24:
+#define page_to_zone_offset(pg) (page_to_pfn(pg) - page_zone(pg)->zone_sta=

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pg' - possible side-effects?
#167: FILE: lib/dyn_pageflags.c:24:
+#define page_to_zone_offset(pg) (page_to_pfn(pg) - page_zone(pg)->zone_sta=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#168: FILE: lib/dyn_pageflags.c:24:
rt_pfn)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#179: FILE: lib/dyn_pageflags.c:35:
+	int result =3D 0;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#210: FILE: lib/dyn_pageflags.c:66:
+	struct zone *zone, *zone_sought =3D page_zone(page);
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#211: FILE: lib/dyn_pageflags.c:67:
+	int zone_num =3D 0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#214: FILE: lib/dyn_pageflags.c:70:
+		if (zone =3D=3D zone_sought)
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#214: FILE: lib/dyn_pageflags.c:70:
+		if (zone =3D=3D zone_sought)
 		            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#214: FILE: lib/dyn_pageflags.c:70:
+		if (zone =3D=3D zone_sought)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#216: FILE: lib/dyn_pageflags.c:72:
+			return zone_num;
+		else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#219: FILE: lib/dyn_pageflags.c:75:
+	printk("Was looking for a zone for page %p.\n", page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#220: FILE: lib/dyn_pageflags.c:76:
+	BUG_ON(1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#233: FILE: lib/dyn_pageflags.c:89:
+	int total =3D 0;
 	          ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#237: FILE: lib/dyn_pageflags.c:93:
+		total +=3D pages_for_zone(zone);
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#251: FILE: lib/dyn_pageflags.c:107:
+	int i =3D 0, zone_num =3D 0;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#251: FILE: lib/dyn_pageflags.c:107:
+	int i =3D 0, zone_num =3D 0;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#253: FILE: lib/dyn_pageflags.c:109:
+=09
 ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#254: FILE: lib/dyn_pageflags.c:110:
+	BUG_ON(!pagemap);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#257: FILE: lib/dyn_pageflags.c:113:
+		for (i =3D 0; i < pages_for_zone(zone); i++)
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#271: FILE: lib/dyn_pageflags.c:127:
+	int i, zone_num =3D 0;
 	                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#274: FILE: lib/dyn_pageflags.c:130:
+	BUG_ON(*pagemap);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#276: FILE: lib/dyn_pageflags.c:132:
+	*pagemap =3D kmalloc(sizeof(void *) * num_zones(), GFP_ATOMIC);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#282: FILE: lib/dyn_pageflags.c:138:
+		int zone_pages =3D pages_for_zone(zone);
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#283: FILE: lib/dyn_pageflags.c:139:
+		(*pagemap)[zone_num] =3D kmalloc(sizeof(void *) * zone_pages,
 		                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: lib/dyn_pageflags.c:143:
+			kfree (*pagemap);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#291: FILE: lib/dyn_pageflags.c:147:
+		for (i =3D 0; i < zone_pages; i++) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#292: FILE: lib/dyn_pageflags.c:148:
+			unsigned long address =3D get_zeroed_page(GFP_ATOMIC);
 			                      ^

CHECK:SPACING: No space is necessary after a cast
#293: FILE: lib/dyn_pageflags.c:149:
+			(*pagemap)[zone_num][i] =3D (unsigned long *) address;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#293: FILE: lib/dyn_pageflags.c:149:
+			(*pagemap)[zone_num][i] =3D (unsigned long *) address;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#293: FILE: lib/dyn_pageflags.c:149:
+			(*pagemap)[zone_num][i] =3D (unsigned long *) address;
 			                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#295: FILE: lib/dyn_pageflags.c:151:
+				printk("Error. Unable to allocate memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: lib/dyn_pageflags.c:152:
+				printk("Error. Unable to allocate memory for "
+					"dynamic pageflags.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#318: FILE: lib/dyn_pageflags.c:174:
+	int i =3D 0, zone_num =3D 0;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#318: FILE: lib/dyn_pageflags.c:174:
+	int i =3D 0, zone_num =3D 0;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#323: FILE: lib/dyn_pageflags.c:179:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#325: FILE: lib/dyn_pageflags.c:181:
+		int zone_pages =3D pages_for_zone(zone);
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#329: FILE: lib/dyn_pageflags.c:185:
+		for (i =3D 0; i < zone_pages; i++)
 		       ^

CHECK:SPACING: No space is necessary after a cast
#331: FILE: lib/dyn_pageflags.c:187:
+				free_page((unsigned long) (*pagemap)[zone_num][i]);

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#332: FILE: lib/dyn_pageflags.c:188:
+=09
 ^

CHECK:SPACING: No space is necessary after a cast
#336: FILE: lib/dyn_pageflags.c:192:
+			free_page((unsigned long) (*pagemap)[zone_num]);

CHECK:SPACING: No space is necessary after a cast
#344: FILE: lib/dyn_pageflags.c:200:
+		free_page((unsigned long) (*pagemap));

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#346: FILE: lib/dyn_pageflags.c:202:
+	*pagemap =3D NULL;
 	         ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#348: FILE: lib/dyn_pageflags.c:204:
+	return;
+}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#360: FILE: lib/dyn_pageflags.c:215:
+unsigned long *dyn_pageflags_ul_ptr(dyn_pageflags_t *bitmap, struct page *=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#361: FILE: lib/dyn_pageflags.c:216:
+	int zone_pfn =3D page_to_zone_offset(pg);
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#362: FILE: lib/dyn_pageflags.c:217:
+	int zone_num =3D page_zone_number(pg);
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#363: FILE: lib/dyn_pageflags.c:218:
+	int pagenum =3D PAGENUMBER(zone_pfn);
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#364: FILE: lib/dyn_pageflags.c:219:
+	int page_offset =3D PAGEINDEX(zone_pfn);
 	                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#365: FILE: lib/dyn_pageflags.c:220:
+	int page_offset =3D PAGEINDEX(zone_pfn);
+	return ((*bitmap)[zone_num][pagenum]) + page_offset;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#377: FILE: lib/dyn_pageflags.c:232:
+	unsigned long *ul =3D dyn_pageflags_ul_ptr(bitmap, page);
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#378: FILE: lib/dyn_pageflags.c:233:
+	int zone_offset =3D page_to_zone_offset(page);
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#379: FILE: lib/dyn_pageflags.c:234:
+	int bit =3D PAGEBIT(zone_offset);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#380: FILE: lib/dyn_pageflags.c:235:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#393: FILE: lib/dyn_pageflags.c:248:
+	unsigned long *ul =3D dyn_pageflags_ul_ptr(bitmap, page);
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#394: FILE: lib/dyn_pageflags.c:249:
+	int zone_offset =3D page_to_zone_offset(page);
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#395: FILE: lib/dyn_pageflags.c:250:
+	int bit =3D PAGEBIT(zone_offset);
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#396: FILE: lib/dyn_pageflags.c:251:
+	int bit =3D PAGEBIT(zone_offset);
+	set_bit(bit, ul);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#408: FILE: lib/dyn_pageflags.c:263:
+	unsigned long *ul =3D dyn_pageflags_ul_ptr(bitmap, page);
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#409: FILE: lib/dyn_pageflags.c:264:
+	int zone_offset =3D page_to_zone_offset(page);
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#410: FILE: lib/dyn_pageflags.c:265:
+	int bit =3D PAGEBIT(zone_offset);
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#411: FILE: lib/dyn_pageflags.c:266:
+	int bit =3D PAGEBIT(zone_offset);
+	clear_bit(bit, ul);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#429: FILE: lib/dyn_pageflags.c:284:
+	BUG_ON(counter =3D=3D max_pfn);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#429: FILE: lib/dyn_pageflags.c:284:
+	BUG_ON(counter =3D=3D max_pfn);
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#429: FILE: lib/dyn_pageflags.c:284:
+	BUG_ON(counter =3D=3D max_pfn);
 	                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#431: FILE: lib/dyn_pageflags.c:286:
+	first =3D (counter =3D=3D -1);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#431: FILE: lib/dyn_pageflags.c:286:
+	first =3D (counter =3D=3D -1);
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#431: FILE: lib/dyn_pageflags.c:286:
+	first =3D (counter =3D=3D -1);
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#431: FILE: lib/dyn_pageflags.c:286:
+	first =3D (counter =3D=3D -1);
 	                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#431: FILE: lib/dyn_pageflags.c:286:
+	first =3D (counter =3D=3D -1);
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#432: FILE: lib/dyn_pageflags.c:287:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#434: FILE: lib/dyn_pageflags.c:289:
+		counter =3D pgdat_list->node_zones->zone_start_pfn;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: lib/dyn_pageflags.c:291:
+	page =3D pfn_to_page(counter);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#437: FILE: lib/dyn_pageflags.c:292:
+	zone =3D page_zone(page);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#438: FILE: lib/dyn_pageflags.c:293:
+	zone_num =3D page_zone_number(page);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#442: FILE: lib/dyn_pageflags.c:297:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#443: FILE: lib/dyn_pageflags.c:298:
+	zone_offset =3D counter - zone->zone_start_pfn;
 	            ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#446: FILE: lib/dyn_pageflags.c:301:
+		if (zone_offset >=3D zone->spanned_pages) {
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#448: FILE: lib/dyn_pageflags.c:303:
+				zone =3D next_zone(zone);
 				     ^

ERROR:SPACING: space required before the open parenthesis '('
#452: FILE: lib/dyn_pageflags.c:307:
+			} while(!zone->spanned_pages);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#454: FILE: lib/dyn_pageflags.c:309:
+			counter =3D zone->zone_start_pfn;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#455: FILE: lib/dyn_pageflags.c:310:
+			zone_offset =3D 0;
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#456: FILE: lib/dyn_pageflags.c:311:
+			page =3D pfn_to_page(counter);
 			     ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#458: FILE: lib/dyn_pageflags.c:313:
+		}
+	=09

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#458: FILE: lib/dyn_pageflags.c:313:
+	=09
 	^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#464: FILE: lib/dyn_pageflags.c:319:
+		ul =3D (bitmap[zone_num][PAGENUMBER(zone_offset)]) + PAGEINDEX(zone_offs=

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#464: FILE: lib/dyn_pageflags.c:319:
+		ul =3D (bitmap[zone_num][PAGENUMBER(zone_offset)]) + PAGEINDEX(zone_offs=
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#464: FILE: lib/dyn_pageflags.c:319:
+		ul =3D (bitmap[zone_num][PAGENUMBER(zone_offset)]) + PAGEINDEX(zone_offs=
 		                                                                        ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#466: FILE: lib/dyn_pageflags.c:320:
+		ul =3D (bitmap[zone_num][PAGENUMBER(zone_offset)]) + PAGEINDEX(zone_offs=
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#466: FILE: lib/dyn_pageflags.c:320:
+	=09
 	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#467: FILE: lib/dyn_pageflags.c:321:
+		pagebit =3D PAGEBIT(zone_offset);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#471: FILE: lib/dyn_pageflags.c:325:
+		page =3D pfn_to_page(counter);
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#472: FILE: lib/dyn_pageflags.c:326:
+=09
 ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#473: FILE: lib/dyn_pageflags.c:327:
+	} while((counter <=3D max_pfn) && (!test_bit(pagebit, ul)));
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#473: FILE: lib/dyn_pageflags.c:327:
+	} while((counter <=3D max_pfn) && (!test_bit(pagebit, ul)));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108931.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 24 warnings, 25 checks, 422 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108931.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
