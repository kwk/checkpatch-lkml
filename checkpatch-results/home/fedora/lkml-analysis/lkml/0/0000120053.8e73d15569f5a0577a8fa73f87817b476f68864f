ERROR:SPACING: space required before the open parenthesis '('
#57: FILE: arch/um/drivers/line.c:835:
+	if(*umid == '\0')

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: arch/um/include/os.h:219:
+extern int set_umid(char *name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: arch/um/include/os.h:220:
+extern char *get_umid(void);

ERROR:SPACING: space required before the open brace '{'
#98: FILE: arch/um/kernel/um_arch.c:150:
+	if(*umid != '\0'){

ERROR:SPACING: space required before the open parenthesis '('
#98: FILE: arch/um/kernel/um_arch.c:150:
+	if(*umid != '\0'){

ERROR:SPACING: space required before the open parenthesis '('
#131: FILE: arch/um/kernel/umid.c:24:
+	if(err == -EEXIST)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#163: FILE: arch/um/os-Linux/umid.c:36:
+			printk("make_uml_dir : no value in environment for "

ERROR:SPACING: space required before the open parenthesis '('
#209: FILE: arch/um/os-Linux/umid.c:78:
+	if(directory == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!directory"
#209: FILE: arch/um/os-Linux/umid.c:78:
+	if(directory == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: arch/um/os-Linux/umid.c:85:
+		if(len > sizeof(file))

ERROR:SPACING: space required before the open parenthesis '('
#236: FILE: arch/um/os-Linux/umid.c:89:
+		if(unlink(file) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#240: FILE: arch/um/os-Linux/umid.c:92:
+	if(rmdir(dir) < 0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: arch/um/os-Linux/umid.c:102:
+ * ^Ithe existing UML somehow corrupting its umid directory$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: arch/um/os-Linux/umid.c:103:
+ * ^Isomething other than UML sticking stuff in the directory$

ERROR:SPACING: space required before the open brace '{'
#265: FILE: arch/um/os-Linux/umid.c:115:
+	if(n >= sizeof(file)){

ERROR:SPACING: space required before the open parenthesis '('
#265: FILE: arch/um/os-Linux/umid.c:115:
+	if(n >= sizeof(file)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: arch/um/os-Linux/umid.c:116:
+		printk("not_dead_yet - pid filename too long\n");

ERROR:SPACING: space required before the open brace '{'
#307: FILE: arch/um/os-Linux/umid.c:133:
+	if(n <= 0){

ERROR:SPACING: space required before the open parenthesis '('
#307: FILE: arch/um/os-Linux/umid.c:133:
+	if(n <= 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#308: FILE: arch/um/os-Linux/umid.c:134:
+		printk("not_dead_yet : couldn't read pid file '%s', "

WARNING:SPLIT_STRING: quoted string split across lines
#309: FILE: arch/um/os-Linux/umid.c:135:
+		printk("not_dead_yet : couldn't read pid file '%s', "
+		       "err = %d\n", file, -n);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open brace '{'
#314: FILE: arch/um/os-Linux/umid.c:140:
+	if(end == pid){

ERROR:SPACING: space required before the open parenthesis '('
#314: FILE: arch/um/os-Linux/umid.c:140:
+	if(end == pid){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#315: FILE: arch/um/os-Linux/umid.c:141:
+		printk("not_dead_yet : couldn't parse pid file '%s', "

WARNING:SPLIT_STRING: quoted string split across lines
#316: FILE: arch/um/os-Linux/umid.c:142:
+		printk("not_dead_yet : couldn't parse pid file '%s', "
+		       "errno = %d\n", file, errno);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno != ESRCH'
#320: FILE: arch/um/os-Linux/umid.c:146:
+	if((kill(p, 0) == 0) || (errno != ESRCH))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: arch/um/os-Linux/umid.c:146:
+	if((kill(p, 0) == 0) || (errno != ESRCH))

ERROR:SPACING: space required before the open parenthesis '('
#324: FILE: arch/um/os-Linux/umid.c:150:
+	if(err)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#325: FILE: arch/um/os-Linux/umid.c:151:
+		printk("not_dead_yet - actually_do_remove failed with "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'actually_do_remove', this function's name, in a string
#325: FILE: arch/um/os-Linux/umid.c:151:
+		printk("not_dead_yet - actually_do_remove failed with "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#326: FILE: arch/um/os-Linux/umid.c:152:
+		printk("not_dead_yet - actually_do_remove failed with "
+		       "err = %d\n", err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#346: FILE: arch/um/os-Linux/umid.c:173:
+		printk("Open of machine pid file \"%s\" failed: %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#358: FILE: arch/um/os-Linux/umid.c:181:
+		printk("Write of pid file failed - err = %d\n", -n);

ERROR:SPACING: space required before the open parenthesis '('
#384: FILE: arch/um/os-Linux/umid.c:203:
+	if(umid_setup)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#398: FILE: arch/um/os-Linux/umid.c:213:
+			printk("make_umid - mkstemp(%s) failed: %s\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'make_umid', this function's name, in a string
#398: FILE: arch/um/os-Linux/umid.c:213:
+			printk("make_umid - mkstemp(%s) failed: %s\n",

ERROR:SPACING: space required before the open brace '{'
#415: FILE: arch/um/os-Linux/umid.c:227:
+		if(unlink(tmp)){

ERROR:SPACING: space required before the open parenthesis '('
#415: FILE: arch/um/os-Linux/umid.c:227:
+		if(unlink(tmp)){

ERROR:SPACING: space required before the open parenthesis '('
#432: FILE: arch/um/os-Linux/umid.c:237:
+		if(errno != EEXIST)

ERROR:SPACING: space required before the open parenthesis '('
#435: FILE: arch/um/os-Linux/umid.c:240:
+		if(not_dead_yet(tmp) < 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#443: FILE: arch/um/os-Linux/umid.c:246:
+		printk("Failed to create '%s' - err = %d\n", umid, err);

ERROR:SPACING: space required before the open parenthesis '('
#479: FILE: arch/um/os-Linux/umid.c:276:
+	if(err)

ERROR:SPACING: space required before the open brace '{'
#485: FILE: arch/um/os-Linux/umid.c:280:
+	if(n >= len){

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: arch/um/os-Linux/umid.c:280:
+	if(n >= len){

ERROR:SPACING: space required before the open brace '{'
#520: FILE: arch/um/os-Linux/umid.c:295:
+	if(*name == '\0'){

ERROR:SPACING: space required before the open parenthesis '('
#520: FILE: arch/um/os-Linux/umid.c:295:
+	if(*name == '\0'){

ERROR:SPACING: space required before the open brace '{'
#525: FILE: arch/um/os-Linux/umid.c:300:
+	if(name[strlen(name) - 1] == '/'){

ERROR:SPACING: space required before the open parenthesis '('
#525: FILE: arch/um/os-Linux/umid.c:300:
+	if(name[strlen(name) - 1] == '/'){

ERROR:SPACING: space required before the open brace '{'
#533: FILE: arch/um/os-Linux/umid.c:306:
+	if(uml_dir == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#533: FILE: arch/um/os-Linux/umid.c:306:
+	if(uml_dir == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uml_dir"
#533: FILE: arch/um/os-Linux/umid.c:306:
+	if(uml_dir == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#557: FILE: arch/um/os-Linux/umid.c:330:
+	if(err)

WARNING:SPLIT_STRING: quoted string split across lines
#559: FILE: arch/um/os-Linux/umid.c:332:
+		printf("remove_umid_dir - actually_do_remove failed with "
+		       "err = %d\n", err);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 17 warnings, 5 checks, 478 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
