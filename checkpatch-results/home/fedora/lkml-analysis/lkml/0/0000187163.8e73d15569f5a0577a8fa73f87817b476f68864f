WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
different from other iommu code on ppc64, since we only do a static mapping.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: arch/ppc64/kernel/bpa_iommu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: arch/ppc64/kernel/bpa_iommu.c:5:
+ * The mapping functions should be identical to pci_direct_iommu, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#98: FILE: arch/ppc64/kernel/bpa_iommu.c:35:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: arch/ppc64/kernel/bpa_iommu.c:73:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: arch/ppc64/kernel/bpa_iommu.c:81:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#164: FILE: arch/ppc64/kernel/bpa_iommu.c:101:
+	/* The high bit needs to be set on every DMA address,
+	   only 2GB are addressable */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#164: FILE: arch/ppc64/kernel/bpa_iommu.c:101:
+	   only 2GB are addressable */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/ppc64/kernel/bpa_iommu.c:106:
+static inline unsigned long $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: arch/ppc64/kernel/bpa_iommu.c:108:
+get_iopt_entry(unsigned long real_address, unsigned long ioid,
+			 unsigned long prot)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#180: FILE: arch/ppc64/kernel/bpa_iommu.c:117:
+typedef struct {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#185: FILE: arch/ppc64/kernel/bpa_iommu.c:122:
+extern unsigned long __ioc_invalid_page_size;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#188: FILE: arch/ppc64/kernel/bpa_iommu.c:125:
+get_iost_entry(unsigned long iopt_base, unsigned long io_address, unsigned page_size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: arch/ppc64/kernel/bpa_iommu.c:162:
+^Iiostep = iopt_base + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: arch/ppc64/kernel/bpa_iommu.c:166:
+^I^I^I^I << shift) $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#284: FILE: arch/ppc64/kernel/bpa_iommu.c:221:
+/* same as above, but pretend that we have a simpler 1-way associative
+   pte cache with an 8 bit index */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#284: FILE: arch/ppc64/kernel/bpa_iommu.c:221:
+   pte cache with an 8 bit index */

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: arch/ppc64/kernel/bpa_iommu.c:241:
+	unsigned long __iomem *p = (base + IOC_ST_CACHE_DIR);
+	return (ioste) { in_be64(&p[index]) };

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#311: FILE: arch/ppc64/kernel/bpa_iommu.c:248:
+	unsigned long __iomem *p = (base + IOC_ST_CACHE_DIR);
+	pr_debug("ioste %02lx was %016lx, store %016lx", index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: arch/ppc64/kernel/bpa_iommu.c:249:
+	pr_debug("ioste %02lx was %016lx, store %016lx", index,
+			get_iost_cache(base, index).val, ste.val);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: arch/ppc64/kernel/bpa_iommu.c:258:
+^Iunsigned long __iomem *p = (void *)(base + IOC_PT_CACHE_REG);^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#324: FILE: arch/ppc64/kernel/bpa_iommu.c:261:
+	rmb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: arch/ppc64/kernel/bpa_iommu.c:267:
+set_iopt_cache(void __iomem *base, unsigned long index,
+		 unsigned long tag, unsigned long val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#334: FILE: arch/ppc64/kernel/bpa_iommu.c:271:
+	unsigned long __iomem *p = base + IOC_PT_CACHE_REG;
+	pr_debug("iopt %02lx was v%016lx/t%016lx, store v%016lx/t%016lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: arch/ppc64/kernel/bpa_iommu.c:272:
+	pr_debug("iopt %02lx was v%016lx/t%016lx, store v%016lx/t%016lx\n",
+		index, get_iopt_cache(base, index, &oldtag), oldtag, val, tag);

ERROR:SPACING: space prohibited after that '-' (ctx:BxW)
#368: FILE: arch/ppc64/kernel/bpa_iommu.c:305:
+#define iopt_phys_offset (- 0x20000000) /* We have a 512MB offset from the SB */
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#377: FILE: arch/ppc64/kernel/bpa_iommu.c:314:
+#if 0

WARNING:REPEATED_WORD: Possible repeated word: 'ioste'
#398: FILE: arch/ppc64/kernel/bpa_iommu.c:335:
+	ioste ioste;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: arch/ppc64/kernel/bpa_iommu.c:342:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: arch/ppc64/kernel/bpa_iommu.c:354:
+		pr_debug("addr %08lx, index %02lx, ioste %016lx\n",
+					 address, index, ioste.val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: arch/ppc64/kernel/bpa_iommu.c:356:
+		set_iopt_cache(base,
+			get_ioc_hash_1way(ioste, address),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#426: FILE: arch/ppc64/kernel/bpa_iommu.c:363:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: arch/ppc64/kernel/bpa_iommu.c:365:
+static void *bpa_alloc_coherent(struct device *hwdev, size_t size,
+			   dma_addr_t *dma_handle, unsigned int __nocast flag)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ret"
#433: FILE: arch/ppc64/kernel/bpa_iommu.c:370:
+	if (ret != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: arch/ppc64/kernel/bpa_iommu.c:378:
+static void bpa_free_coherent(struct device *hwdev, size_t size,
+				 void *vaddr, dma_addr_t dma_handle)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: arch/ppc64/kernel/bpa_iommu.c:384:
+static dma_addr_t bpa_map_single(struct device *hwdev, void *ptr,
+		size_t size, enum dma_data_direction direction)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: arch/ppc64/kernel/bpa_iommu.c:390:
+static void bpa_unmap_single(struct device *hwdev, dma_addr_t dma_addr,
+		size_t size, enum dma_data_direction direction)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: arch/ppc64/kernel/bpa_iommu.c:395:
+static int bpa_map_sg(struct device *hwdev, struct scatterlist *sg,
+		int nents, enum dma_data_direction direction)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: arch/ppc64/kernel/bpa_iommu.c:409:
+static void bpa_unmap_sg(struct device *hwdev, struct scatterlist *sg,
+		int nents, enum dma_data_direction direction)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#502: FILE: arch/ppc64/kernel/bpa_iommu.h:1:
+#ifndef BPA_IOMMU_H

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187163.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 16 warnings, 15 checks, 463 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187163.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
