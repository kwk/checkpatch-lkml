WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#52: FILE: drivers/w1/Kconfig:24:
+config W1_DS9490
+	tristate "DS9490R transport layer driver"
+	depends on W1 && USB
+	help
+	  Say Y here if you want to have a driver for DS9490R UWB <-> W1 bridge.
+
+	  This support is also available as a module.  If so, the module 
+	  will be called ds9490r.ko.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: drivers/w1/Kconfig:30:
+^I  This support is also available as a module.  If so, the module $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: drivers/w1/Kconfig:40:
+^I  This support is also available as a module.  If so, the module $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/w1/Makefile:12:
+obj-$(CONFIG_W1_DS9490)^I^I+= ds9490r.o $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: drivers/w1/ds_w1_bridge.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: drivers/w1/ds_w1_bridge.c:2:
+ * ^Ids_w1_bridge.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: drivers/w1/ds_w1_bridge.c:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#108: FILE: drivers/w1/ds_w1_bridge.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#109: FILE: drivers/w1/ds_w1_bridge.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: drivers/w1/ds_w1_bridge.c:28:
+^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#210: FILE: drivers/w1/ds_w1_bridge.c:120:
+static int __devinit ds_w1_init(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: drivers/w1/ds_w1_bridge.c:123:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#215: FILE: drivers/w1/ds_w1_bridge.c:125:
+	if (!ds_bus_master)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#217: FILE: drivers/w1/ds_w1_bridge.c:127:
+		printk(KERN_ERR "Failed to allocate DS9490R USB<->W1 bus_master structure.\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#222: FILE: drivers/w1/ds_w1_bridge.c:132:
+	if (!ds_dev)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#224: FILE: drivers/w1/ds_w1_bridge.c:134:
+		printk(KERN_ERR "DS9490R is not registered.\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: drivers/w1/ds_w1_bridge.c:141:
+^Ids_bus_master->data ^I^I= (unsigned long)ds_dev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: drivers/w1/ds_w1_bridge.c:142:
+^Ids_bus_master->touch_bit ^I= &ds9490r_touch_bit;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: drivers/w1/ds_w1_bridge.c:143:
+^Ids_bus_master->read_bit ^I= &ds9490r_read_bit;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: drivers/w1/ds_w1_bridge.c:144:
+^Ids_bus_master->write_bit ^I= &ds9490r_write_bit;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: drivers/w1/ds_w1_bridge.c:145:
+^Ids_bus_master->read_byte ^I= &ds9490r_read_byte;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: drivers/w1/ds_w1_bridge.c:146:
+^Ids_bus_master->write_byte ^I= &ds9490r_write_byte;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#237: FILE: drivers/w1/ds_w1_bridge.c:147:
+^Ids_bus_master->read_block ^I= &ds9490r_read_block;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#238: FILE: drivers/w1/ds_w1_bridge.c:148:
+^Ids_bus_master->write_block ^I= &ds9490r_write_block;$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#255: FILE: drivers/w1/ds_w1_bridge.c:165:
+static void __devexit ds_w1_fini(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#271: FILE: drivers/w1/dscore.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: drivers/w1/dscore.c:2:
+ * ^Idscore.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: drivers/w1/dscore.c:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#288: FILE: drivers/w1/dscore.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#289: FILE: drivers/w1/dscore.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#299: FILE: drivers/w1/dscore.c:29:
+static struct usb_device_id ds_id_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#305: FILE: drivers/w1/dscore.c:35:
+int ds_probe(struct usb_interface *, const struct usb_device_id *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct usb_interface *' should also have an identifier name
#305: FILE: drivers/w1/dscore.c:35:
+int ds_probe(struct usb_interface *, const struct usb_device_id *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct usb_device_id *' should also have an identifier name
#305: FILE: drivers/w1/dscore.c:35:
+int ds_probe(struct usb_interface *, const struct usb_device_id *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#306: FILE: drivers/w1/dscore.c:36:
+void ds_disconnect(struct usb_interface *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct usb_interface *' should also have an identifier name
#306: FILE: drivers/w1/dscore.c:36:
+void ds_disconnect(struct usb_interface *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#321: FILE: drivers/w1/dscore.c:51:
+inline struct ds_device * ds_get_device(void);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#329: FILE: drivers/w1/dscore.c:59:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: drivers/w1/dscore.c:70:
+struct ds_device * ds_get_device(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: drivers/w1/dscore.c:85:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: drivers/w1/dscore.c:86:
+^Ierr = usb_control_msg(dev->udev, usb_sndctrlpipe(dev->udev, dev->ep[EP_CONTROL]), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: drivers/w1/dscore.c:87:
+	err = usb_control_msg(dev->udev, usb_sndctrlpipe(dev->udev, dev->ep[EP_CONTROL]), 
+			CONTROL_CMD, 0x40, value, index, NULL, 0, HZ);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: drivers/w1/dscore.c:89:
+^I^Iprintk(KERN_ERR "Failed to send command control message %x.%x: err=%d.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#359: FILE: drivers/w1/dscore.c:89:
+		printk(KERN_ERR "Failed to send command control message %x.%x: err=%d.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: drivers/w1/dscore.c:90:
+		printk(KERN_ERR "Failed to send command control message %x.%x: err=%d.\n", 
+				value, index, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/w1/dscore.c:100:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: drivers/w1/dscore.c:101:
+^Ierr = usb_control_msg(dev->udev, usb_sndctrlpipe(dev->udev, dev->ep[EP_CONTROL]), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: drivers/w1/dscore.c:102:
+	err = usb_control_msg(dev->udev, usb_sndctrlpipe(dev->udev, dev->ep[EP_CONTROL]), 
+			MODE_CMD, 0x40, value, index, NULL, 0, HZ);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/w1/dscore.c:104:
+^I^Iprintk(KERN_ERR "Failed to send mode control message %x.%x: err=%d.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#374: FILE: drivers/w1/dscore.c:104:
+		printk(KERN_ERR "Failed to send mode control message %x.%x: err=%d.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: drivers/w1/dscore.c:105:
+		printk(KERN_ERR "Failed to send mode control message %x.%x: err=%d.\n", 
+				value, index, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: drivers/w1/dscore.c:115:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: drivers/w1/dscore.c:116:
+^Ierr = usb_control_msg(dev->udev, usb_sndctrlpipe(dev->udev, dev->ep[EP_CONTROL]), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/w1/dscore.c:117:
+	err = usb_control_msg(dev->udev, usb_sndctrlpipe(dev->udev, dev->ep[EP_CONTROL]), 
+			COMM_CMD, 0x40, value, index, NULL, 0, HZ);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: drivers/w1/dscore.c:119:
+^I^Iprintk(KERN_ERR "Failed to send control message %x.%x: err=%d.\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#389: FILE: drivers/w1/dscore.c:119:
+		printk(KERN_ERR "Failed to send control message %x.%x: err=%d.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: drivers/w1/dscore.c:120:
+		printk(KERN_ERR "Failed to send control message %x.%x: err=%d.\n", 
+				value, index, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#399: FILE: drivers/w1/dscore.c:129:
+	printk("%45s: %8x\n", str, buf[off]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: drivers/w1/dscore.c:135:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: drivers/w1/dscore.c:137:
+^I$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#409: FILE: drivers/w1/dscore.c:139:
+	err = usb_bulk_msg(dev->udev, usb_rcvbulkpipe(dev->udev, dev->ep[EP_STATUS]), buf, size, &count, 100);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#411: FILE: drivers/w1/dscore.c:141:
+		printk(KERN_ERR "Failed to read 1-wire data from 0x%x: err=%d.\n", dev->ep[EP_STATUS], err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#411: FILE: drivers/w1/dscore.c:141:
+		printk(KERN_ERR "Failed to read 1-wire data from 0x%x: err=%d.\n", dev->ep[EP_STATUS], err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: drivers/w1/dscore.c:144:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: drivers/w1/dscore.c:155:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: drivers/w1/dscore.c:157:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: drivers/w1/dscore.c:161:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#432: FILE: drivers/w1/dscore.c:162:
+	printk("0x%x: count=%d, status: ", dev->ep[EP_STATUS], count);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#433: FILE: drivers/w1/dscore.c:163:
+	for (i=0; i<count; ++i)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#433: FILE: drivers/w1/dscore.c:163:
+	for (i=0; i<count; ++i)
 	           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#434: FILE: drivers/w1/dscore.c:164:
+		printk("%02x ", buf[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#435: FILE: drivers/w1/dscore.c:165:
+	printk("\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#437: FILE: drivers/w1/dscore.c:167:
+	if (count >= 16)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#459: FILE: drivers/w1/dscore.c:189:
+	if (st->status & ST_EPOF)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#461: FILE: drivers/w1/dscore.c:191:
+		printk(KERN_INFO "Resetting device after ST_EPOF.\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#469: FILE: drivers/w1/dscore.c:199:
+#if 0

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#470: FILE: drivers/w1/dscore.c:200:
+	if (st->status & ST_IDLE)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#472: FILE: drivers/w1/dscore.c:202:
+		printk(KERN_INFO "Resetting pulse after ST_IDLE.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: drivers/w1/dscore.c:208:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: drivers/w1/dscore.c:216:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: drivers/w1/dscore.c:218:
+^Ierr = usb_bulk_msg(dev->udev, usb_rcvbulkpipe(dev->udev, dev->ep[EP_DATA_IN]), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: drivers/w1/dscore.c:219:
+	err = usb_bulk_msg(dev->udev, usb_rcvbulkpipe(dev->udev, dev->ep[EP_DATA_IN]), 
+				buf, size, &count, HZ);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#491: FILE: drivers/w1/dscore.c:221:
+		printk(KERN_INFO "Clearing ep0x%x.\n", dev->ep[EP_DATA_IN]);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#497: FILE: drivers/w1/dscore.c:227:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#501: FILE: drivers/w1/dscore.c:231:
+		printk("%s: count=%d: ", __func__, count);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#502: FILE: drivers/w1/dscore.c:232:
+		for (i=0; i<count; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#502: FILE: drivers/w1/dscore.c:232:
+		for (i=0; i<count; ++i)
 		           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#503: FILE: drivers/w1/dscore.c:233:
+			printk("%02x ", buf[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#504: FILE: drivers/w1/dscore.c:234:
+		printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: drivers/w1/dscore.c:243:
+^I$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#515: FILE: drivers/w1/dscore.c:245:
+	err = usb_bulk_msg(dev->udev, usb_sndbulkpipe(dev->udev, dev->ep[EP_DATA_OUT]), buf, len, &count, HZ);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#517: FILE: drivers/w1/dscore.c:247:
+		printk(KERN_ERR "Failed to read 1-wire data from 0x02: err=%d.\n", err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#529: FILE: drivers/w1/dscore.c:259:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#546: FILE: drivers/w1/dscore.c:276:
+	} while(++count < limit);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: drivers/w1/dscore.c:284:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: drivers/w1/dscore.c:292:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: drivers/w1/dscore.c:296:
+^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#583: FILE: drivers/w1/dscore.c:313:
+#if 0

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#584: FILE: drivers/w1/dscore.c:314:
+		if (err >= 0)
+		{	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: drivers/w1/dscore.c:315:
+^I^I{^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#587: FILE: drivers/w1/dscore.c:317:
+			int i;
+			printk("0x%x: count=%d, status: ", dev->ep[EP_STATUS], err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#587: FILE: drivers/w1/dscore.c:317:
+			printk("0x%x: count=%d, status: ", dev->ep[EP_STATUS], err);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#588: FILE: drivers/w1/dscore.c:318:
+			for (i=0; i<err; ++i)
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#588: FILE: drivers/w1/dscore.c:318:
+			for (i=0; i<err; ++i)
 			           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#589: FILE: drivers/w1/dscore.c:319:
+				printk("%02x ", buf[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#590: FILE: drivers/w1/dscore.c:320:
+			printk("\n");

ERROR:SPACING: space required before the open parenthesis '('
#593: FILE: drivers/w1/dscore.c:323:
+	} while(!(buf[0x08] & 0x20) && !(err < 0) && ++count < 100);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#595: FILE: drivers/w1/dscore.c:325:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err > 16'
#596: FILE: drivers/w1/dscore.c:326:
+	if (((err > 16) && (buf[0x10] & 0x01)) || count >= 100 || err < 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#600: FILE: drivers/w1/dscore.c:330:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#600: FILE: drivers/w1/dscore.c:330:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#609: FILE: drivers/w1/dscore.c:339:
+	//err = ds_send_control(dev, COMM_1_WIRE_RESET | COMM_F | COMM_IM | COMM_SE, SPEED_FLEXIBLE);

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#615: FILE: drivers/w1/dscore.c:345:
+#if 0

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#616: FILE: drivers/w1/dscore.c:346:
+	if (st->command_buffer_status)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#618: FILE: drivers/w1/dscore.c:348:
+		printk(KERN_INFO "Short circuit.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: drivers/w1/dscore.c:352:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: drivers/w1/dscore.c:359:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: drivers/w1/dscore.c:367:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: drivers/w1/dscore.c:380:
+^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#651: FILE: drivers/w1/dscore.c:381:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: drivers/w1/dscore.c:401:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: drivers/w1/dscore.c:411:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#696: FILE: drivers/w1/dscore.c:426:
+		printk(KERN_ERR "Failed to obtain status.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: drivers/w1/dscore.c:441:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: drivers/w1/dscore.c:456:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#734: FILE: drivers/w1/dscore.c:464:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: drivers/w1/dscore.c:468:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#751: FILE: drivers/w1/dscore.c:481:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: drivers/w1/dscore.c:485:
+^I$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#768: FILE: drivers/w1/dscore.c:498:
+	err = ds_send_control(dev, COMM_BYTE_IO | COMM_IM , 0xff);
 	                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#773: FILE: drivers/w1/dscore.c:503:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#786: FILE: drivers/w1/dscore.c:516:
+	if (len > 64*1024)
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#790: FILE: drivers/w1/dscore.c:520:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: drivers/w1/dscore.c:524:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: drivers/w1/dscore.c:530:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#811: FILE: drivers/w1/dscore.c:541:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#815: FILE: drivers/w1/dscore.c:545:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#829: FILE: drivers/w1/dscore.c:559:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: drivers/w1/dscore.c:570:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#844: FILE: drivers/w1/dscore.c:574:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#855: FILE: drivers/w1/dscore.c:585:
+	err = ds_recv_data(ds_dev, (unsigned char *)buf, 8*id_number);
 	                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#859: FILE: drivers/w1/dscore.c:589:
+	return err/8;
 	          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: drivers/w1/dscore.c:600:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#890: FILE: drivers/w1/dscore.c:620:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#894: FILE: drivers/w1/dscore.c:624:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ds_dev)...) over kmalloc(sizeof(struct ds_device)...)
#913: FILE: drivers/w1/dscore.c:643:
+	ds_dev = kmalloc(sizeof(struct ds_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#915: FILE: drivers/w1/dscore.c:645:
+		printk(KERN_INFO "Failed to allocate new DS9490R structure.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#915: FILE: drivers/w1/dscore.c:645:
+	if (!ds_dev) {
+		printk(KERN_INFO "Failed to allocate new DS9490R structure.\n");

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#922: FILE: drivers/w1/dscore.c:652:
+	err = usb_set_interface(ds_dev->udev, intf->altsetting[0].desc.bInterfaceNumber, 3);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#924: FILE: drivers/w1/dscore.c:654:
+		printk(KERN_ERR "Failed to set alternative setting 3 for %d interface: err=%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#925: FILE: drivers/w1/dscore.c:655:
+		printk(KERN_ERR "Failed to set alternative setting 3 for %d interface: err=%d.\n",
+				intf->altsetting[0].desc.bInterfaceNumber, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#931: FILE: drivers/w1/dscore.c:661:
+		printk(KERN_ERR "Failed to reset configuration: err=%d.\n", err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#934: FILE: drivers/w1/dscore.c:664:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#936: FILE: drivers/w1/dscore.c:666:
+	if (iface_desc->desc.bNumEndpoints != NUM_EP-1) {
 	                                            ^

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#936: FILE: drivers/w1/dscore.c:666:
+	if (iface_desc->desc.bNumEndpoints != NUM_EP-1) {

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#937: FILE: drivers/w1/dscore.c:667:
+		printk(KERN_INFO "Num endpoints=%d. It is not DS9490R.\n", iface_desc->desc.bNumEndpoints);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#937: FILE: drivers/w1/dscore.c:667:
+		printk(KERN_INFO "Num endpoints=%d. It is not DS9490R.\n", iface_desc->desc.bNumEndpoints);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: drivers/w1/dscore.c:673:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#945: FILE: drivers/w1/dscore.c:675:
+^I * This loop doesn'd show control 0 endpoint, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#951: FILE: drivers/w1/dscore.c:681:
+		ds_dev->ep[i+1] = endpoint->bEndpointAddress;
 		            ^

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#951: FILE: drivers/w1/dscore.c:681:
+		ds_dev->ep[i+1] = endpoint->bEndpointAddress;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#952: FILE: drivers/w1/dscore.c:682:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#953: FILE: drivers/w1/dscore.c:683:
+		printk("%d: addr=%x, size=%d, dir=%s, type=%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: drivers/w1/dscore.c:684:
+		printk("%d: addr=%x, size=%d, dir=%s, type=%x\n",
+			i, endpoint->bEndpointAddress, endpoint->wMaxPacketSize,

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#954: FILE: drivers/w1/dscore.c:684:
+			i, endpoint->bEndpointAddress, endpoint->wMaxPacketSize,

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#955: FILE: drivers/w1/dscore.c:685:
+			(endpoint->bEndpointAddress & USB_DIR_IN)?"IN":"OUT",
 			                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#955: FILE: drivers/w1/dscore.c:685:
+			(endpoint->bEndpointAddress & USB_DIR_IN)?"IN":"OUT",
 			                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#956: FILE: drivers/w1/dscore.c:686:
+			endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: drivers/w1/dscore.c:688:
+^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#959: FILE: drivers/w1/dscore.c:689:
+#if 0

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#963: FILE: drivers/w1/dscore.c:693:
+		u64 init=0xb30000002078ee81ull;
 		        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: drivers/w1/dscore.c:695:
+^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#970: FILE: drivers/w1/dscore.c:700:
+		for (i=0; i<err; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#970: FILE: drivers/w1/dscore.c:700:
+		for (i=0; i<err; ++i)
 		           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#971: FILE: drivers/w1/dscore.c:701:
+			printk("%d: %llx\n", i, buf[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#972: FILE: drivers/w1/dscore.c:702:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#973: FILE: drivers/w1/dscore.c:703:
+^I^Iprintk("Resetting...\n");^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#973: FILE: drivers/w1/dscore.c:703:
+		printk("Resetting...\n");	

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#975: FILE: drivers/w1/dscore.c:705:
+		printk("Setting path for %llx.\n", init);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#979: FILE: drivers/w1/dscore.c:709:
+		printk("Calling MATCH_ACCESS.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#984: FILE: drivers/w1/dscore.c:714:
+		printk("Searching the bus...\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#987: FILE: drivers/w1/dscore.c:717:
+		printk("ds_search() returned %d\n", err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#988: FILE: drivers/w1/dscore.c:718:
+^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#991: FILE: drivers/w1/dscore.c:721:
+		for (i=0; i<err; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#991: FILE: drivers/w1/dscore.c:721:
+		for (i=0; i<err; ++i)
 		           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#992: FILE: drivers/w1/dscore.c:722:
+			printk("%d: %llx\n", i, buf[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: drivers/w1/dscore.c:723:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1004: FILE: drivers/w1/dscore.c:734:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1005: FILE: drivers/w1/dscore.c:735:
+	dev = usb_get_intfdata (intf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1006: FILE: drivers/w1/dscore.c:736:
+	usb_set_intfdata (intf, NULL);

ERROR:SPACING: space required before the open parenthesis '('
#1008: FILE: drivers/w1/dscore.c:738:
+	while(atomic_read(&dev->refcnt))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1022: FILE: drivers/w1/dscore.c:752:
+		printk(KERN_INFO "Failed to register DS9490R USB device: err=%d.\n", err);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1040: FILE: drivers/w1/dscore.c:770:
+EXPORT_SYMBOL(ds_touch_bit);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1041: FILE: drivers/w1/dscore.c:771:
+EXPORT_SYMBOL(ds_read_byte);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1042: FILE: drivers/w1/dscore.c:772:
+EXPORT_SYMBOL(ds_read_bit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1043: FILE: drivers/w1/dscore.c:773:
+EXPORT_SYMBOL(ds_read_block);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1044: FILE: drivers/w1/dscore.c:774:
+EXPORT_SYMBOL(ds_write_byte);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1045: FILE: drivers/w1/dscore.c:775:
+EXPORT_SYMBOL(ds_write_bit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1046: FILE: drivers/w1/dscore.c:776:
+EXPORT_SYMBOL(ds_write_block);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1047: FILE: drivers/w1/dscore.c:777:
+EXPORT_SYMBOL(ds_start_pulse);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1048: FILE: drivers/w1/dscore.c:778:
+EXPORT_SYMBOL(ds_set_speed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1049: FILE: drivers/w1/dscore.c:779:
+EXPORT_SYMBOL(ds_reset);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1050: FILE: drivers/w1/dscore.c:780:
+EXPORT_SYMBOL(ds_detect);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1051: FILE: drivers/w1/dscore.c:781:
+EXPORT_SYMBOL(ds_stop_pulse);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1052: FILE: drivers/w1/dscore.c:782:
+EXPORT_SYMBOL(ds_send_data);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1053: FILE: drivers/w1/dscore.c:783:
+EXPORT_SYMBOL(ds_recv_data);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1054: FILE: drivers/w1/dscore.c:784:
+EXPORT_SYMBOL(ds_recv_status);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1055: FILE: drivers/w1/dscore.c:785:
+EXPORT_SYMBOL(ds_search);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1056: FILE: drivers/w1/dscore.c:786:
+EXPORT_SYMBOL(ds_get_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1057: FILE: drivers/w1/dscore.c:787:
+EXPORT_SYMBOL(ds_put_device);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1063: FILE: drivers/w1/dscore.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1064: FILE: drivers/w1/dscore.h:2:
+ * ^Idscore.h$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1067: FILE: drivers/w1/dscore.h:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1080: FILE: drivers/w1/dscore.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1081: FILE: drivers/w1/dscore.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1088: FILE: drivers/w1/dscore.h:26:
+#include <asm/atomic.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1186: FILE: drivers/w1/dscore.h:124:
+struct ds_device
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1187: FILE: drivers/w1/dscore.h:125:
+^Istruct usb_device ^I*udev;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1196: FILE: drivers/w1/dscore.h:134:
+struct ds_status
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1229: FILE: drivers/w1/dscore.h:167:
+inline struct ds_device * ds_get_device(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 102 errors, 92 warnings, 26 checks, 1171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
