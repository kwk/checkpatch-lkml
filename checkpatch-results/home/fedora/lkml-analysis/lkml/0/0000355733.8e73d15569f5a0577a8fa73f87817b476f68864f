WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#20: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux-2.5.75/sound/oss/ad1889.c linux-2.5.75-ac1/sound/oss/ad1889.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#24: FILE: sound/oss/ad1889.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#40: FILE: sound/oss/ad1889.c:17:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#41: FILE: sound/oss/ad1889.c:18:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:LONG_LINE_COMMENT: line length of 271 exceeds 100 columns
#47: FILE: sound/oss/ad1889.c:24:
+<jsm> tausq: Anyway, to set up sample rates for D to A, you just use the sample rate on the codec. For A to D, you need to set the codec always to 48K (using the split sample rate feature on the codec) and then set the resampler on the AD1889 to the sample rate you want.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 130 exceeds 100 columns
#48: FILE: sound/oss/ad1889.c:25:
+<jsm> Also, when changing the sample rate on the codec you need to power it down and re power it up for the change to take effect!

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#50: FILE: sound/oss/ad1889.c:27:
+ * $Id: ad1889.c,v 1.3 2002/10/19 21:31:44 grundler Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#65: FILE: sound/oss/ad1889.c:42:
+#include <asm/delay.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#66: FILE: sound/oss/ad1889.c:43:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#68: FILE: sound/oss/ad1889.c:45:
+#include <asm/uaccess.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: sound/oss/ad1889.c:49:
+#define DBG(fmt, arg...) printk(fmt, ##arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#81: FILE: sound/oss/ad1889.c:58:
+#define AD1889_READW(dev,reg) readw(dev->regbase + reg)
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#81: FILE: sound/oss/ad1889.c:58:
+#define AD1889_READW(dev,reg) readw(dev->regbase + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#81: FILE: sound/oss/ad1889.c:58:
+#define AD1889_READW(dev,reg) readw(dev->regbase + reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: sound/oss/ad1889.c:59:
+#define AD1889_WRITEW(dev,reg,val) writew((val), dev->regbase + reg)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: sound/oss/ad1889.c:59:
+#define AD1889_WRITEW(dev,reg,val) writew((val), dev->regbase + reg)
                              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#82: FILE: sound/oss/ad1889.c:59:
+#define AD1889_WRITEW(dev,reg,val) writew((val), dev->regbase + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#82: FILE: sound/oss/ad1889.c:59:
+#define AD1889_WRITEW(dev,reg,val) writew((val), dev->regbase + reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: sound/oss/ad1889.c:60:
+#define AD1889_READL(dev,reg) readl(dev->regbase + reg)
                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#83: FILE: sound/oss/ad1889.c:60:
+#define AD1889_READL(dev,reg) readl(dev->regbase + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#83: FILE: sound/oss/ad1889.c:60:
+#define AD1889_READL(dev,reg) readl(dev->regbase + reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: sound/oss/ad1889.c:61:
+#define AD1889_WRITEL(dev,reg,val) writel((val), dev->regbase + reg)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: sound/oss/ad1889.c:61:
+#define AD1889_WRITEL(dev,reg,val) writel((val), dev->regbase + reg)
                              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#84: FILE: sound/oss/ad1889.c:61:
+#define AD1889_WRITEL(dev,reg,val) writel((val), dev->regbase + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#84: FILE: sound/oss/ad1889.c:61:
+#define AD1889_WRITEL(dev,reg,val) writel((val), dev->regbase + reg)

ERROR:SPACING: space required before the open parenthesis '('
#87: FILE: sound/oss/ad1889.c:64:
+#define WAIT_10MS()	do { int __i; for (__i = 0; __i < 100; __i++) udelay(1000); } while(0)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#87: FILE: sound/oss/ad1889.c:64:
+#define WAIT_10MS()	do { int __i; for (__i = 0; __i < 100; __i++) udelay(1000); } while(0)

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#90: FILE: sound/oss/ad1889.c:67:
+static ad1889_dev_t *ad1889_dev = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: sound/oss/ad1889.c:92:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#124: FILE: sound/oss/ad1889.c:101:
+	if (fmt == AFMT_S16_LE) {
[...]
+	} else if (fmt == AFMT_U8) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: sound/oss/ad1889.c:105:
+^I} $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: sound/oss/ad1889.c:131:
+	dmabuf->dma_handle = pci_map_single(ad1889_dev->pci,
+					dmabuf->rawbuf + dmabuf->rd_ptr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: sound/oss/ad1889.c:136:
+        /* load up the current register set */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#174: FILE: sound/oss/ad1889.c:151:
+	(void) AD1889_READW(ad1889_dev, AD_DSWSMC); /* flush posted PCI write */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#182: FILE: sound/oss/ad1889.c:159:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#197: FILE: sound/oss/ad1889.c:174:
+		(void) AD1889_READW(ad1889_dev, AD_DSWSMC); /* flush posted PCI write */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: sound/oss/ad1889.c:175:
+^I^Ipci_unmap_single(ad1889_dev->pci, dmabuf->dma_handle, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: sound/oss/ad1889.c:176:
+		pci_unmap_single(ad1889_dev->pci, dmabuf->dma_handle, 
+				cnt, PCI_DMA_TODEVICE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: sound/oss/ad1889.c:194:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#218: FILE: sound/oss/ad1889.c:195:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: sound/oss/ad1889.c:202:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: sound/oss/ad1889.c:223:
+^Iif ((dev = kmalloc(sizeof(ad1889_dev_t), GFP_KERNEL)) == NULL) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#246: FILE: sound/oss/ad1889.c:223:
+	if ((dev = kmalloc(sizeof(ad1889_dev_t), GFP_KERNEL)) == NULL) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#262: FILE: sound/oss/ad1889.c:239:
+		if ((dmabuf->rawbuf = kmalloc(DMA_SIZE, GFP_KERNEL|GFP_DMA)) == NULL)
 		                                                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#262: FILE: sound/oss/ad1889.c:239:
+		if ((dmabuf->rawbuf = kmalloc(DMA_SIZE, GFP_KERNEL|GFP_DMA)) == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#266: FILE: sound/oss/ad1889.c:243:
+		dmabuf->rd_ptr = dmabuf->wr_ptr = dmabuf->dma_len = 0UL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: sound/oss/ad1889.c:256:
+^Iif (dev == NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#279: FILE: sound/oss/ad1889.c:256:
+	if (dev == NULL) 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: sound/oss/ad1889.c:264:
+^I^Iif (dmabuf->rawbuf != NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dmabuf->rawbuf"
#287: FILE: sound/oss/ad1889.c:264:
+		if (dmabuf->rawbuf != NULL) 

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#296: FILE: sound/oss/ad1889.c:273:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#304: FILE: sound/oss/ad1889.c:281:
+int ad1889_read_proc (char *page, char **start, off_t off,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#361: FILE: sound/oss/ad1889.c:338:
+	if (dev == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: sound/oss/ad1889.c:342:
+^I^Iout += sprintf(out, "%s: 0x%0*x\n", regs[i].name, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: sound/oss/ad1889.c:343:
+^I^I^Iregs[i].width >> 2, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: sound/oss/ad1889.c:344:
+^I^I^I(regs[i].width == 16 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: sound/oss/ad1889.c:345:
+^I^I^I ^I? AD1889_READW(dev, regs[i].offset)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#368: FILE: sound/oss/ad1889.c:345:
+^I^I^I ^I? AD1889_READW(dev, regs[i].offset)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: sound/oss/ad1889.c:349:
+^I^Iout += sprintf(out, "DMA status for %s:\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: sound/oss/ad1889.c:350:
+^I^I^I(i == AD_WAV_STATE ? "WAV" : "ADC")); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: sound/oss/ad1889.c:351:
+^I^Iout += sprintf(out, "\t\t0x%p (IOVA: 0x%u)\n", $

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#374: FILE: sound/oss/ad1889.c:351:
+		out += sprintf(out, "\t\t0x%p (IOVA: 0x%u)\n", 

Prefixing 0x with decimal output is defective and should be corrected.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: sound/oss/ad1889.c:355:
+^I^Iout += sprintf(out, "\tread ptr: offset %u\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: sound/oss/ad1889.c:357:
+^I^Iout += sprintf(out, "\twrite ptr: offset %u\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: sound/oss/ad1889.c:359:
+^I^Iout += sprintf(out, "\tdma len: offset %u\n", $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#389: FILE: sound/oss/ad1889.c:366:
+		if (len <= 0) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#398: FILE: sound/oss/ad1889.c:375:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#405: FILE: sound/oss/ad1889.c:382:
+		printk(KERN_ERR DEVNAME ": get_dma_addr called without dma enabled\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: sound/oss/ad1889.c:385:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#449: FILE: sound/oss/ad1889.c:426:
+	if (dmabuf->enable & DAC_RUNNING) {
+XXX

WARNING:BRACES: braces {} are not necessary for single statement blocks
#449: FILE: sound/oss/ad1889.c:426:
+	if (dmabuf->enable & DAC_RUNNING) {
+XXX
+
+}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#452: FILE: sound/oss/ad1889.c:429:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: sound/oss/ad1889.c:435:
+static ssize_t ad1889_read(struct file *file, char *buffer, size_t count,
+	loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: sound/oss/ad1889.c:441:
+static ssize_t ad1889_write(struct file *file, const char *buffer, size_t count,
+	loff_t *ppos)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#468: FILE: sound/oss/ad1889.c:445:
+	volatile struct dmabuf *dmabuf = &state->dmabuf;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#476: FILE: sound/oss/ad1889.c:453:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#495: FILE: sound/oss/ad1889.c:472:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#522: FILE: sound/oss/ad1889.c:499:
+				printk(KERN_WARNING "AD1889 timeout(%ld) r/w %lx/%lx len %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#523: FILE: sound/oss/ad1889.c:500:
+				printk(KERN_WARNING "AD1889 timeout(%ld) r/w %lx/%lx len %lx\n",
+				    timeout+1,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#523: FILE: sound/oss/ad1889.c:500:
+				    timeout+1,
 				           ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#532: FILE: sound/oss/ad1889.c:509:
+
+		}

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#574: FILE: sound/oss/ad1889.c:551:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: sound/oss/ad1889.c:556:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#585: FILE: sound/oss/ad1889.c:562:
+		if (!state) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#592: FILE: sound/oss/ad1889.c:569:
+		if (!state) return 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: sound/oss/ad1889.c:584:
+^I^I^Iif ((int)dmabuf->dmasize >= dmabuf->count + $

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#613: FILE: sound/oss/ad1889.c:590:
+	if (file ->f_mode & FMODE_READ) {
 	         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: sound/oss/ad1889.c:608:
+static int ad1889_ioctl(struct inode *inode, struct file *file, unsigned int cmd,
+	unsigned long arg)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#638: FILE: sound/oss/ad1889.c:615:
+	switch (cmd)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#653: FILE: sound/oss/ad1889.c:630:
+		if (val > 5400 && val < 48000)
+		{

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#667: FILE: sound/oss/ad1889.c:644:
+			if (val) {
[...]
+			} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#676: FILE: sound/oss/ad1889.c:653:
+			if (val) {
[...]
+			} else {
[...]

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#690: FILE: sound/oss/ad1889.c:667:
+		return put_user(AFMT_S16_LE|AFMT_U8, (int *)arg);
 		                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#696: FILE: sound/oss/ad1889.c:673:
+^I^Iif (file->f_mode & FMODE_READ) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: sound/oss/ad1889.c:676:
+^I^Iif (file->f_mode & FMODE_WRITE) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: sound/oss/ad1889.c:724:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#777: FILE: sound/oss/ad1889.c:754:
+^I$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#794: FILE: sound/oss/ad1889.c:771:
+static struct file_operations ad1889_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#795: FILE: sound/oss/ad1889.c:772:
+	llseek:         no_llseek,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#796: FILE: sound/oss/ad1889.c:773:
+	read:           ad1889_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#796: FILE: sound/oss/ad1889.c:773:
+	read:           ad1889_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#797: FILE: sound/oss/ad1889.c:774:
+	write:          ad1889_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#797: FILE: sound/oss/ad1889.c:774:
+	write:          ad1889_write,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#798: FILE: sound/oss/ad1889.c:775:
+	poll:           ad1889_poll,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#798: FILE: sound/oss/ad1889.c:775:
+	poll:           ad1889_poll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#799: FILE: sound/oss/ad1889.c:776:
+	ioctl:          ad1889_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#799: FILE: sound/oss/ad1889.c:776:
+	ioctl:          ad1889_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#800: FILE: sound/oss/ad1889.c:777:
+	mmap:           ad1889_mmap,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#800: FILE: sound/oss/ad1889.c:777:
+	mmap:           ad1889_mmap,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#801: FILE: sound/oss/ad1889.c:778:
+	open:           ad1889_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#801: FILE: sound/oss/ad1889.c:778:
+	open:           ad1889_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#802: FILE: sound/oss/ad1889.c:779:
+	release:        ad1889_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#802: FILE: sound/oss/ad1889.c:779:
+	release:        ad1889_release,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: sound/oss/ad1889.c:800:
+static int ad1889_mixer_ioctl(struct inode *inode, struct file *file,
+	unsigned int cmd, unsigned long arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#826: FILE: sound/oss/ad1889.c:803:
+	struct ac97_codec *codec = (struct ac97_codec *)file->private_data;
+	return codec->mixer_ioctl(codec, cmd, arg);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#829: FILE: sound/oss/ad1889.c:806:
+static struct file_operations ad1889_mixer_fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#830: FILE: sound/oss/ad1889.c:807:
+	llseek:         no_llseek,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#831: FILE: sound/oss/ad1889.c:808:
+	ioctl:		ad1889_mixer_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#831: FILE: sound/oss/ad1889.c:808:
+	ioctl:		ad1889_mixer_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#832: FILE: sound/oss/ad1889.c:809:
+	open:		ad1889_mixer_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#832: FILE: sound/oss/ad1889.c:809:
+	open:		ad1889_mixer_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#833: FILE: sound/oss/ad1889.c:810:
+	release:	ad1889_mixer_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#833: FILE: sound/oss/ad1889.c:810:
+	release:	ad1889_mixer_release,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#850: FILE: sound/oss/ad1889.c:827:
+}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: sound/oss/ad1889.c:834:
+^Iif ((ac97 = ac97_alloc_codec()) == NULL) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#857: FILE: sound/oss/ad1889.c:834:
+	if ((ac97 = ac97_alloc_codec()) == NULL) 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#867: FILE: sound/oss/ad1889.c:844:
+		printk(DEVNAME ": ac97_probe_codec failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#873: FILE: sound/oss/ad1889.c:850:
+		printk(KERN_WARNING DEVNAME ": no codec attached?\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#879: FILE: sound/oss/ad1889.c:856:
+	if ((ac97->dev_mixer = register_sound_mixer(&ad1889_mixer_fops, -1)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#880: FILE: sound/oss/ad1889.c:857:
+		printk(KERN_ERR DEVNAME ": cannot register mixer\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#892: FILE: sound/oss/ad1889.c:869:
+static int ad1889_aclink_reset(struct pci_dev * pcidev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: sound/oss/ad1889.c:876:
+^IAD1889_READW(dev, AD_DSCCS); $

CHECK:SPACING: No space is necessary after a cast
#906: FILE: sound/oss/ad1889.c:883:
+	(void) AD1889_READW(dev, AD_ACIC);	/* flush posted write */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#908: FILE: sound/oss/ad1889.c:885:
+	udelay(10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#922: FILE: sound/oss/ad1889.c:899:
+		printk(KERN_ERR "ad1889_aclink_reset: codec is not ready [0x%x]\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ad1889_aclink_reset', this function's name, in a string
#922: FILE: sound/oss/ad1889.c:899:
+		printk(KERN_ERR "ad1889_aclink_reset: codec is not ready [0x%x]\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#923: FILE: sound/oss/ad1889.c:900:
+		printk(KERN_ERR "ad1889_aclink_reset: codec is not ready [0x%x]\n",
+			    AD1889_READW(dev, AD_ACIC));

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#938: FILE: sound/oss/ad1889.c:915:
+static struct pci_device_id ad1889_id_tbl[] __devinitdata = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#939: FILE: sound/oss/ad1889.c:916:
+^I{ PCI_VENDOR_ID_ANALOG_DEVICES, PCI_DEVICE_ID_AD1889JS, PCI_ANY_ID, $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#963: FILE: sound/oss/ad1889.c:940:
+
+	}

ERROR:SPACING: space required before the open parenthesis '('
#969: FILE: sound/oss/ad1889.c:946:
+	if(stat)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#990: FILE: sound/oss/ad1889.c:967:
+static int __devinit ad1889_probe(struct pci_dev *pcidev, const struct pci_device_id *ent)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#997: FILE: sound/oss/ad1889.c:974:
+	if ((err = pci_enable_device(pcidev)) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#998: FILE: sound/oss/ad1889.c:975:
+		printk(KERN_ERR DEVNAME ": pci_enable_device failed\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1003: FILE: sound/oss/ad1889.c:980:
+	if ((dev = ad1889_alloc_dev(pcidev)) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1004: FILE: sound/oss/ad1889.c:981:
+		printk(KERN_ERR DEVNAME ": cannot allocate memory for device\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1009: FILE: sound/oss/ad1889.c:986:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1010: FILE: sound/oss/ad1889.c:987:
+        if (!(pci_resource_flags(pcidev, 0) & IORESOURCE_MEM)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: sound/oss/ad1889.c:987:
+        if (!(pci_resource_flags(pcidev, 0) & IORESOURCE_MEM)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1011: FILE: sound/oss/ad1889.c:988:
+		printk(KERN_ERR DEVNAME ": memory region not assigned\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1016: FILE: sound/oss/ad1889.c:993:
+		printk(KERN_ERR DEVNAME ": unable to request interrupt\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1023: FILE: sound/oss/ad1889.c:1000:
+	printk(KERN_INFO DEVNAME ": %s at 0x%lx IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: sound/oss/ad1889.c:1001:
+	printk(KERN_INFO DEVNAME ": %s at 0x%lx IRQ %d\n",
+		(char *)ent->driver_data, dev->regbase, pcidev->irq);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1030: FILE: sound/oss/ad1889.c:1007:
+	if ((dev->dev_audio = register_sound_dsp(&ad1889_fops, -1)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1031: FILE: sound/oss/ad1889.c:1008:
+		printk(KERN_ERR DEVNAME ": cannot register /dev/dsp\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1035: FILE: sound/oss/ad1889.c:1012:
+	if ((err = ad1889_ac97_init(dev, 0)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1038: FILE: sound/oss/ad1889.c:1015:
+	if (((proc_root = proc_mkdir("driver/ad1889", 0)) == NULL) ||

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1039: FILE: sound/oss/ad1889.c:1016:
+	    create_proc_read_entry("ac97", S_IFREG|S_IRUGO, proc_root, ac97_read_proc, dev->ac97_codec) == NULL ||

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1039: FILE: sound/oss/ad1889.c:1016:
+	    create_proc_read_entry("ac97", S_IFREG|S_IRUGO, proc_root, ac97_read_proc, dev->ac97_codec) == NULL ||
 	                                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!create_proc_read_entry"
#1039: FILE: sound/oss/ad1889.c:1016:
+	    create_proc_read_entry("ac97", S_IFREG|S_IRUGO, proc_root, ac97_read_proc, dev->ac97_codec) == NULL ||

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1039: FILE: sound/oss/ad1889.c:1016:
+	    create_proc_read_entry("ac97", S_IFREG|S_IRUGO, proc_root, ac97_read_proc, dev->ac97_codec) == NULL ||

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: sound/oss/ad1889.c:1017:
+^I    create_proc_read_entry("info", S_IFREG|S_IRUGO, proc_root, ad1889_read_proc, dev) == NULL) $

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1040: FILE: sound/oss/ad1889.c:1017:
+	    create_proc_read_entry("info", S_IFREG|S_IRUGO, proc_root, ad1889_read_proc, dev) == NULL) 

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1040: FILE: sound/oss/ad1889.c:1017:
+	    create_proc_read_entry("info", S_IFREG|S_IRUGO, proc_root, ad1889_read_proc, dev) == NULL) 
 	                                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!create_proc_read_entry"
#1040: FILE: sound/oss/ad1889.c:1017:
+	    create_proc_read_entry("info", S_IFREG|S_IRUGO, proc_root, ad1889_read_proc, dev) == NULL) 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1040: FILE: sound/oss/ad1889.c:1017:
+	    create_proc_read_entry("info", S_IFREG|S_IRUGO, proc_root, ad1889_read_proc, dev) == NULL) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1042: FILE: sound/oss/ad1889.c:1019:
+^I$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1064: FILE: sound/oss/ad1889.c:1041:
+static void __devexit ad1889_remove(struct pci_dev *pcidev)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1068: FILE: sound/oss/ad1889.c:1045:
+	if (dev == NULL) return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#1068: FILE: sound/oss/ad1889.c:1045:
+	if (dev == NULL) return;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1069: FILE: sound/oss/ad1889.c:1046:
+^I$

WARNING:INDENTED_LABEL: labels should not be indented
#1084: FILE: sound/oss/ad1889.c:1061:
+	name:		DEVNAME,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1085: FILE: sound/oss/ad1889.c:1062:
+	id_table:	ad1889_id_tbl,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1085: FILE: sound/oss/ad1889.c:1062:
+	id_table:	ad1889_id_tbl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1086: FILE: sound/oss/ad1889.c:1063:
+	probe:		ad1889_probe,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1086: FILE: sound/oss/ad1889.c:1063:
+	probe:		ad1889_probe,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1087: FILE: sound/oss/ad1889.c:1064:
+	remove:		__devexit_p(ad1889_remove),
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1087: FILE: sound/oss/ad1889.c:1064:
+	remove:		__devexit_p(ad1889_remove),

WARNING:RETURN_VOID: void function return statements are not generally useful
#1099: FILE: sound/oss/ad1889.c:1076:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1107: FILE: sound/oss/ad1889.h:1:
+#ifndef _AD1889_H_

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1176: FILE: sound/oss/ad1889.h:70:
+#define DMA_SIZE	(128*1024)
                 	    ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1182: FILE: sound/oss/ad1889.h:76:
+typedef struct ad1889_state {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1197: FILE: sound/oss/ad1889.h:91:
+		volatile unsigned long rd_ptr, wr_ptr;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1212: FILE: sound/oss/ad1889.h:106:
+typedef struct ad1889_dev {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: sound/oss/ad1889.h:109:
+^I$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1216: FILE: sound/oss/ad1889.h:110:
+	spinlock_t lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1234: FILE: sound/oss/ad1889.h:128:
+typedef struct ad1889_reg {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 77 errors, 68 warnings, 42 checks, 1213 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
