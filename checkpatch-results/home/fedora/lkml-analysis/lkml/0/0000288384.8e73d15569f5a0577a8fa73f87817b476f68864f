WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
ChangeSet 1.1692.3.3, 2004/03/26 16:31:44-08:00, dlsy@snoqualmie.dp.intel.com

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#43: 
--- a/drivers/pci/hotplug/pciehp_hpc.c	Thu Apr 15 10:06:13 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#58: FILE: drivers/pci/hotplug/pciehp_hpc.c:319:
+	dbg("%s: Before hp_register_write_word SLOT_CTRL %x\n", __FUNCTION__, cmd);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#65: FILE: drivers/pci/hotplug/pciehp_hpc.c:325:
+	dbg("%s : hp_register_write_word SLOT_CTRL %x\n", __FUNCTION__, cmd | CMD_CMPL_INTR_ENABLE);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#74: FILE: drivers/pci/hotplug/pciehp_hpc.c:923:
+		dbg("%s: Set Mask Hot-plug Interrupt Enable\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#75: FILE: drivers/pci/hotplug/pciehp_hpc.c:924:
+		dbg("%s: hp_register_read_word SLOT_CTRL with value %x\n", __FUNCTION__, temp_word);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#84: FILE: drivers/pci/hotplug/pciehp_hpc.c:932:
+		dbg("%s: hp_register_write_word SLOT_CTRL with value %x\n", __FUNCTION__, temp_word);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#84: FILE: drivers/pci/hotplug/pciehp_hpc.c:932:
+		dbg("%s: hp_register_write_word SLOT_CTRL with value %x\n", __FUNCTION__, temp_word);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: drivers/pci/hotplug/pciehp_hpc.c:933:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#88: FILE: drivers/pci/hotplug/pciehp_hpc.c:936:
+			err("%s : hp_register_read_word SLOT_STATUS failed\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/pci/hotplug/pciehp_hpc.c:939:
+^I^Idbg("%s: hp_register_read_word SLOT_STATUS with value %x\n", __FUNCTION__, slot_status); $

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#91: FILE: drivers/pci/hotplug/pciehp_hpc.c:939:
+		dbg("%s: hp_register_read_word SLOT_STATUS with value %x\n", __FUNCTION__, slot_status); 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#91: FILE: drivers/pci/hotplug/pciehp_hpc.c:939:
+		dbg("%s: hp_register_read_word SLOT_STATUS with value %x\n", __FUNCTION__, slot_status); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: drivers/pci/hotplug/pciehp_hpc.c:940:
+^I^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#97: FILE: drivers/pci/hotplug/pciehp_hpc.c:945:
+			err("%s : hp_register_write_word SLOT_STATUS failed\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#100: FILE: drivers/pci/hotplug/pciehp_hpc.c:948:
+		dbg("%s: hp_register_write_word SLOT_STATUS with value %x\n", __FUNCTION__, temp_word);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#100: FILE: drivers/pci/hotplug/pciehp_hpc.c:948:
+		dbg("%s: hp_register_write_word SLOT_STATUS with value %x\n", __FUNCTION__, temp_word);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#117: FILE: drivers/pci/hotplug/pciehp_hpc.c:987:
+		dbg("%s: Unmask Hot-plug Interrupt Enable\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#118: FILE: drivers/pci/hotplug/pciehp_hpc.c:988:
+		dbg("%s: hp_register_read_word SLOT_CTRL with value %x\n", __FUNCTION__, temp_word);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: drivers/pci/hotplug/pciehp_hpc.c:996:
+^I^Idbg("%s: hp_register_write_word SLOT_CTRL with value %x\n", __FUNCTION__, temp_word); ^I$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#126: FILE: drivers/pci/hotplug/pciehp_hpc.c:996:
+		dbg("%s: hp_register_write_word SLOT_CTRL with value %x\n", __FUNCTION__, temp_word); 	

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#126: FILE: drivers/pci/hotplug/pciehp_hpc.c:996:
+^I^Idbg("%s: hp_register_write_word SLOT_CTRL with value %x\n", __FUNCTION__, temp_word); ^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#126: FILE: drivers/pci/hotplug/pciehp_hpc.c:996:
+		dbg("%s: hp_register_write_word SLOT_CTRL with value %x\n", __FUNCTION__, temp_word); 	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/pci/hotplug/pciehp_hpc.c:997:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#130: FILE: drivers/pci/hotplug/pciehp_hpc.c:1000:
+			err("%s : hp_register_read_word SLOT_STATUS failed\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: drivers/pci/hotplug/pciehp_hpc.c:1003:
+^I^Idbg("%s: hp_register_read_word SLOT_STATUS with value %x\n", __FUNCTION__, slot_status); $

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#133: FILE: drivers/pci/hotplug/pciehp_hpc.c:1003:
+		dbg("%s: hp_register_read_word SLOT_STATUS with value %x\n", __FUNCTION__, slot_status); 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#133: FILE: drivers/pci/hotplug/pciehp_hpc.c:1003:
+		dbg("%s: hp_register_read_word SLOT_STATUS with value %x\n", __FUNCTION__, slot_status); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: drivers/pci/hotplug/pciehp_hpc.c:1004:
+^I^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#139: FILE: drivers/pci/hotplug/pciehp_hpc.c:1009:
+			err("%s : hp_register_write_word SLOT_STATUS failed\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: drivers/pci/hotplug/pciehp_hpc.c:1012:
+^I^Idbg("%s: hp_register_write_word SLOT_STATUS with value %x\n", __FUNCTION__, temp_word); $

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#142: FILE: drivers/pci/hotplug/pciehp_hpc.c:1012:
+		dbg("%s: hp_register_write_word SLOT_STATUS with value %x\n", __FUNCTION__, temp_word); 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#142: FILE: drivers/pci/hotplug/pciehp_hpc.c:1012:
+		dbg("%s: hp_register_write_word SLOT_STATUS with value %x\n", __FUNCTION__, temp_word); 

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#167: FILE: drivers/pci/hotplug/pciehp_hpc.c:1395:
+	dbg("%s: SLOT_STATUS offset %x writes slot_status %x\n", __FUNCTION__, SLOT_STATUS, temp_word);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#167: FILE: drivers/pci/hotplug/pciehp_hpc.c:1395:
+	dbg("%s: SLOT_STATUS offset %x writes slot_status %x\n", __FUNCTION__, SLOT_STATUS, temp_word);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#181: FILE: drivers/pci/hotplug/pciehp_hpc.c:1403:
+		dbg("%s: pciehp_msi_quirk = %x\n", __FUNCTION__, pciehp_msi_quirk);

CHECK:BRACES: braces {} should be used on all arms of this statement
#184: FILE: drivers/pci/hotplug/pciehp_hpc.c:1406:
+			if (rc) {
[...]
+			} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#187: FILE: drivers/pci/hotplug/pciehp_hpc.c:1409:
+				dbg("%s: rc = %x\n", __FUNCTION__, rc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/pci/hotplug/pciehp_hpc.c:1410:
+^I^I^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#188: FILE: drivers/pci/hotplug/pciehp_hpc.c:1410:
+			} else 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#211: FILE: drivers/pci/hotplug/pciehp_hpc.c:1449:
+		err("%s : hp_register_read_word SLOT_STATUS failed\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: drivers/pci/hotplug/pciehp_hpc.c:1452:
+^Idbg("%s: Unmask HPIE SLOT_STATUS offset %x reads slot_status %x\n", __FUNCTION__, $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#214: FILE: drivers/pci/hotplug/pciehp_hpc.c:1452:
+	dbg("%s: Unmask HPIE SLOT_STATUS offset %x reads slot_status %x\n", __FUNCTION__, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/pci/hotplug/pciehp_hpc.c:1453:
+	dbg("%s: Unmask HPIE SLOT_STATUS offset %x reads slot_status %x\n", __FUNCTION__, 
+		SLOT_STATUS, slot_status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/pci/hotplug/pciehp_hpc.c:1454:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#220: FILE: drivers/pci/hotplug/pciehp_hpc.c:1458:
+		err("%s : hp_register_write_word SLOT_STATUS failed\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#223: FILE: drivers/pci/hotplug/pciehp_hpc.c:1461:
+	dbg("%s: SLOT_STATUS offset %x writes slot_status %x\n", __FUNCTION__, SLOT_STATUS, temp_word);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#223: FILE: drivers/pci/hotplug/pciehp_hpc.c:1461:
+	dbg("%s: SLOT_STATUS offset %x writes slot_status %x\n", __FUNCTION__, SLOT_STATUS, temp_word);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: drivers/pci/hotplug/shpchp_hpc.c:1444:
+^I^Idbg("%s: shpc_cap_offset = %x\n", __FUNCTION__, shpc_cap_offset);^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#253: FILE: drivers/pci/hotplug/shpchp_hpc.c:1444:
+		dbg("%s: shpc_cap_offset = %x\n", __FUNCTION__, shpc_cap_offset);	

CHECK:BRACES: Unbalanced braces around else statement
#272: FILE: drivers/pci/hotplug/shpchp_hpc.c:1556:
+		} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#286: FILE: drivers/pci/hotplug/shpchprm_acpi.c:1271:
+		print_acpi_resources (acpi_bridges_head);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#355: FILE: drivers/pci/quirks.c:873:
+static void __devinit quirk_pciehp_msi(struct pci_dev *pdev)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#367: FILE: drivers/pci/quirks.c:994:
+	{ PCI_FIXUP_FINAL,      PCI_VENDOR_ID_INTEL,    PCI_DEVICE_ID_INTEL_SMCH,	quirk_pciehp_msi },

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#377: FILE: drivers/pci/quirks.c:1021:
+EXPORT_SYMBOL(pciehp_msi_quirk);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 38 warnings, 4 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
