WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#30: 
Signed-Off-By: Chandra Seetharaman <sekharan@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: include/linux/ckrm_tsk.h:1:
+/* ckrm_tsk.h - No. of tasks resource controller for CKRM

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/linux/ckrm_tsk.h:21:
+extern int numtasks_allow_fork(struct ckrm_class *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#84: FILE: kernel/ckrm/ckrm_numtasks.c:30:
+				 * by class's class_lock */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'numtasks_ctlr.ctlr_id == CKRM_NO_RES_ID'
#109: FILE: kernel/ckrm/ckrm_numtasks.c:59:
+	if ((numtasks_ctlr.ctlr_id == CKRM_NO_RES_ID) || (class == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'class == NULL'
#109: FILE: kernel/ckrm/ckrm_numtasks.c:59:
+	if ((numtasks_ctlr.ctlr_id == CKRM_NO_RES_ID) || (class == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!class"
#109: FILE: kernel/ckrm/ckrm_numtasks.c:59:
+	if ((numtasks_ctlr.ctlr_id == CKRM_NO_RES_ID) || (class == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->cnt_unused == CKRM_SHARE_DONT_CARE'
#138: FILE: kernel/ckrm/ckrm_numtasks.c:88:
+	if ((res->cnt_unused == CKRM_SHARE_DONT_CARE) ||
+			(atomic_read(&res->cnt_cur_alloc) > res->cnt_unused)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#138: FILE: kernel/ckrm/ckrm_numtasks.c:88:
+	if ((res->cnt_unused == CKRM_SHARE_DONT_CARE) ||
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: kernel/ckrm/ckrm_numtasks.c:89:
+	if ((res->cnt_unused == CKRM_SHARE_DONT_CARE) ||
+			(atomic_read(&res->cnt_cur_alloc) > res->cnt_unused)) {

CHECK:BRACES: Unbalanced braces around else statement
#142: FILE: kernel/ckrm/ckrm_numtasks.c:92:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: kernel/ckrm/ckrm_numtasks.c:108:
+static void numtasks_move_task(struct task_struct *task,
+		struct ckrm_shares *old, struct ckrm_shares *new)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083864.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 9 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083864.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
