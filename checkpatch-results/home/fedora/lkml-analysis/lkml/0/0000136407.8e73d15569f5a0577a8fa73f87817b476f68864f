WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#77: FILE: include/linux/mm.h:990:
+			struct file_ra_state *ra, struct file *filp,
 			                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: include/linux/mm.h:990:
+page_cache_readahead_adaptive(struct address_space *mapping,
+			struct file_ra_state *ra, struct file *filp,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#91: FILE: mm/filemap.c:727:
+extern int readahead_ratio;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#122: FILE: mm/filemap.c:798:
+			if (unlikely(page == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#124: FILE: mm/filemap.c:800:
+						filp, prev_page, NULL,
 						^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: mm/filemap.c:800:
+				page_cache_readahead_adaptive(mapping, &ra,
+						filp, prev_page, NULL,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#130: FILE: mm/filemap.c:806:
+						filp, prev_page, page,
 						^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: mm/filemap.c:806:
+				page_cache_readahead_adaptive(mapping, &ra,
+						filp, prev_page, page,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#153: FILE: mm/filemap.c:835:
+		if (prev_index != index) {
 			mark_page_accessed(page);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#238: FILE: mm/filemap.c:1267:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: mm/filemap.c:1276:
+			page_cache_readahead_adaptive(mapping, ra,
+						file, NULL, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: mm/filemap.c:1281:
+			page_cache_readahead_adaptive(mapping, ra,
+						file, NULL, page,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#364: FILE: mm/readahead.c:790:
+			struct file_ra_state *ra, struct file *filp,
 			                                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: mm/readahead.c:790:
+page_cache_readahead_adaptive(struct address_space *mapping,
+			struct file_ra_state *ra, struct file *filp,

ERROR:SPACING: space required before the open parenthesis '('
#375: FILE: mm/readahead.c:801:
+		if(!TestClearPageReadahead(page))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: mm/readahead.c:809:
+		ra_account(ra, RA_EVENT_LOOKAHEAD_HIT,
+				ra->readahead_index - ra->lookahead_index);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#400: FILE: mm/readahead.c:826:
+		return newfile_readahead(mapping, filp, ra, end_index, ra_min);
 		                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: mm/readahead.c:832:
+	if ((readahead_ratio % 5) == 0 &&
+		index == ra->lookahead_index &&

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#410: FILE: mm/readahead.c:836:
+		return state_based_readahead(mapping, filp, ra, page, ra_max);
 		                                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#416: FILE: mm/readahead.c:842:
+		return ra_dispatch(ra, mapping, filp);
 		                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: mm/readahead.c:848:
+	ret = try_context_based_readahead(mapping, ra, prev_page, page,
+						index, ra_min, ra_max);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#424: FILE: mm/readahead.c:850:
+		return ra_dispatch(ra, mapping, filp);
 		                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: mm/readahead.c:857:
+		ra_account(ra, RA_EVENT_LOOKAHEAD_NOACTION,
+					ra->readahead_index - index);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#439: FILE: mm/readahead.c:865:
+		return ra_dispatch(ra, mapping, filp);
 		                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#448: FILE: mm/readahead.c:874:
+	size = __do_page_cache_readahead(mapping, filp, index, size, 0);
 	                                          ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: mm/readahead.c:878:
+	dprintk("readrandom(ino=%lu, pages=%lu, index=%lu-%lu-%lu) = %lu\n",
+			mapping->host->i_ino, mapping->nrpages,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136407.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 12 warnings, 13 checks, 403 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136407.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
