CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#37: 
Signed-off-by: Herbert Pötzl <herbert@13thfloor.at>
                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#49: FILE: fs/cifs/cifsfs.c:223:
+static int cifs_permission(struct inode * inode, int mask)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#230: FILE: fs/namei.c:274:
+	/* do nd based stuff here */
 	      ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: fs/namei.c:1360:
+	error = permission(dir,MAY_WRITE | MAY_EXEC);
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#279: FILE: fs/namei.c:1398:
+	return permission(dir,MAY_WRITE | MAY_EXEC);
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#324: FILE: fs/nfsd/vfs.c:1820:
+	err = permission(inode, acc & (MAY_READ|MAY_WRITE|MAY_EXEC));
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#324: FILE: fs/nfsd/vfs.c:1820:
+	err = permission(inode, acc & (MAY_READ|MAY_WRITE|MAY_EXEC));
 	                                                 ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#411: FILE: include/linux/fs.h:1043:
+	int (*permission) (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#411: FILE: include/linux/fs.h:1043:
+	int (*permission) (struct inode *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#411: FILE: include/linux/fs.h:1043:
+	int (*permission) (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: include/linux/fs.h:1468:
+extern int permission(struct inode *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#420: FILE: include/linux/fs.h:1468:
+extern int permission(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#420: FILE: include/linux/fs.h:1468:
+extern int permission(struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#433: FILE: include/linux/nfs_fs.h:299:
+extern int nfs_permission(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#433: FILE: include/linux/nfs_fs.h:299:
+extern int nfs_permission(struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#433: FILE: include/linux/nfs_fs.h:299:
+extern int nfs_permission(struct inode *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#453: FILE: include/linux/security.h:1159:
+	int (*inode_permission) (struct inode *inode, int mask);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: include/linux/security.h:1608:
+static inline int security_inode_permission (struct inode *inode, int mask)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#468: FILE: include/linux/security.h:1612:
+	return security_ops->inode_permission (inode, mask);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#478: FILE: include/linux/security.h:2271:
+static inline int security_inode_permission (struct inode *inode, int mask)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#502: FILE: security/dummy.c:327:
+static int dummy_inode_permission (struct inode *inode, int mask)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000099738.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 13 warnings, 5 checks, 370 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000099738.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
