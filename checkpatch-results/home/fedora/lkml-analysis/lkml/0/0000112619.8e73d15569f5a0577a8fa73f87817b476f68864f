WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Answering to the suggestion of Randy, here come the patches already corrected.

WARNING:TYPO_SPELLING: 'droped' may be misspelled - perhaps 'dropped'?
#44: 
2.- Disable writings to "s_state" because it has been droped out from the superblock, and its former address is now used by another parameter.
                                                      ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#66: FILE: fs/minix/bitmap.c:29:
+		for (j=0; j<bh->b_size; j++)
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#66: FILE: fs/minix/bitmap.c:29:
+		for (j=0; j<bh->b_size; j++)
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#74: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#74: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#74: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#74: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#74: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#74: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: fs/minix/bitmap.c:148:
+^Iblock = 2 + sbi->s_imap_blocks + sbi->s_zmap_blocks + $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#113: FILE: fs/minix/dir.c:16:
+typedef struct minix3_dir_entry minix3_dirent;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#131: FILE: fs/minix/dir.c:118:
+					unsigned l = strnlen(de->name,sbi->s_namelen);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: fs/minix/dir.c:118:
+					unsigned l = strnlen(de->name,sbi->s_namelen);
 					                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#132: FILE: fs/minix/dir.c:119:
+					unsigned l = strnlen(de->name,sbi->s_namelen);
+					offset = p - kaddr;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: fs/minix/dir.c:121:
+					over = filldir(dirent, de->name, l,
+					(n<<PAGE_CACHE_SHIFT) | offset,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#134: FILE: fs/minix/dir.c:121:
+					(n<<PAGE_CACHE_SHIFT) | offset,
 					  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#137: FILE: fs/minix/dir.c:124:
+					unsigned l = strnlen(de3->name,sbi->s_namelen);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#137: FILE: fs/minix/dir.c:124:
+					unsigned l = strnlen(de3->name,sbi->s_namelen);
 					                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#138: FILE: fs/minix/dir.c:125:
+					unsigned l = strnlen(de3->name,sbi->s_namelen);
+					offset = p - kaddr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: fs/minix/dir.c:127:
+					over = filldir(dirent, de3->name, l,
+					(n<<PAGE_CACHE_SHIFT) | offset,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#140: FILE: fs/minix/dir.c:127:
+					(n<<PAGE_CACHE_SHIFT) | offset,
 					  ^

CHECK:SPACING: No space is necessary after a cast
#159: FILE: fs/minix/dir.c:183:
+		de3 = (struct minix3_dir_entry *) kaddr;

CHECK:SPACING: No space is necessary after a cast
#166: FILE: fs/minix/dir.c:185:
+		for ( ; (char *) de <= kaddr ;

WARNING:SPACING: space prohibited before semicolon
#166: FILE: fs/minix/dir.c:185:
+		for ( ; (char *) de <= kaddr ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: fs/minix/dir.c:186:
+					de = minix_next_entry(de,sbi),
 					                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: fs/minix/dir.c:187:
+					de3 = minix_next_entry(de3,sbi)) {
 					                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#172: FILE: fs/minix/dir.c:191:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#172: FILE: fs/minix/dir.c:191:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#172: FILE: fs/minix/dir.c:191:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: fs/minix/dir.c:196:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: fs/minix/dir.c:196:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: fs/minix/dir.c:196:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#192: FILE: fs/minix/dir.c:217:
+	struct minix3_dir_entry * de3;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: fs/minix/dir.c:252:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: fs/minix/dir.c:252:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: fs/minix/dir.c:252:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: fs/minix/dir.c:256:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: fs/minix/dir.c:256:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: fs/minix/dir.c:256:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                           ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#231: FILE: fs/minix/dir.c:274:
+		if (!(sbi->s_version == MINIX_V3)) {
+		memcpy (de->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: fs/minix/dir.c:275:
+		memcpy (de->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: fs/minix/dir.c:276:
+		memset (de->name + namelen, 0, sbi->s_dirsize - namelen - 2);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#235: FILE: fs/minix/dir.c:278:
+		} else {
+		memcpy (de3->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: fs/minix/dir.c:279:
+		memcpy (de3->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: fs/minix/dir.c:280:
+		memset (de3->name + namelen, 0, sbi->s_dirsize - namelen - 4);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: fs/minix/dir.c:324:
+	struct minix3_dir_entry * de3;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#258: FILE: fs/minix/dir.c:341:
+	de->inode = de3->inode = inode->i_ino;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#259: FILE: fs/minix/dir.c:342:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,".") : strcpy(de->name,".");
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#259: FILE: fs/minix/dir.c:342:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,".") : strcpy(de->name,".");
 	                                                                      ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#264: FILE: fs/minix/dir.c:345:
+	de->inode = de3->inode = dir->i_ino;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: fs/minix/dir.c:346:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,"..") : strcpy(de->name,"..");
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: fs/minix/dir.c:346:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,"..") : strcpy(de->name,"..");
 	                                                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: fs/minix/dir.c:367:
+		minix3_dirent * de3 = NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#295: FILE: fs/minix/dir.c:385:
+					if (!de->name[1]) {
[...]
+					} else if (de->name[1] != '.')
[...]
+					else if (de->name[2])
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#296: FILE: fs/minix/dir.c:386:
+						if (de->inode != inode->i_ino)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 48)
#296: FILE: fs/minix/dir.c:386:
+						if (de->inode != inode->i_ino)
+						goto not_empty;

CHECK:BRACES: braces {} should be used on all arms of this statement
#309: FILE: fs/minix/dir.c:395:
+					if (!de3->name[1]) {
[...]
+					} else if (de3->name[1] != '.')
[...]
+					else if (de3->name[2])
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#310: FILE: fs/minix/dir.c:396:
+						if (de3->inode != inode->i_ino)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 48)
#310: FILE: fs/minix/dir.c:396:
+						if (de3->inode != inode->i_ino)
+						goto not_empty;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#364: FILE: fs/minix/inode.c:132:
+		if (!(sbi->s_mount_state & MINIX_VALID_FS) && (sbi->s_version != MINIX_V3))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#365: FILE: fs/minix/inode.c:133:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#365: FILE: fs/minix/inode.c:133:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "

WARNING:SPLIT_STRING: quoted string split across lines
#366: FILE: fs/minix/inode.c:134:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "
+				"running fsck is recommended.\n", sbi->s_version);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#368: FILE: fs/minix/inode.c:136:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#368: FILE: fs/minix/inode.c:136:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#369: FILE: fs/minix/inode.c:137:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "
+				"running fsck is recommended.\n", sbi->s_version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: fs/minix/inode.c:138:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: fs/minix/inode.c:138:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: fs/minix/inode.c:138:
+ ^I}$

ERROR:SPACING: space prohibited after that open parenthesis '('
#378: FILE: fs/minix/inode.c:204:
+	} else if ( *(__u16 *)(bh->b_data + 24) == MINIX3_SUPER_MAGIC) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#379: FILE: fs/minix/inode.c:205:
+	} else if ( *(__u16 *)(bh->b_data + 24) == MINIX3_SUPER_MAGIC) {
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#391: FILE: fs/minix/inode.c:217:
+			if ( *(__u16 *)(bh->b_data + 28) != 1024) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#392: FILE: fs/minix/inode.c:218:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))
+ 				goto out_bad_hblock;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: fs/minix/inode.c:218:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))
 				                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#392: FILE: fs/minix/inode.c:218:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: fs/minix/inode.c:219:
+ ^I^I^I^Igoto out_bad_hblock;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#393: FILE: fs/minix/inode.c:219:
+ ^I^I^I^Igoto out_bad_hblock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: fs/minix/inode.c:219:
+ ^I^I^I^Igoto out_bad_hblock;$

ERROR:SPACING: space required before the open parenthesis '('
#403: FILE: fs/minix/inode.c:264:
+		if(sbi->s_version != MINIX_V3) /* s_state is now out from V3 sb */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#413: FILE: fs/minix/inode.c:268:
+	if (!(sbi->s_mount_state & MINIX_VALID_FS) && (sbi->s_version != MINIX_V3))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#414: FILE: fs/minix/inode.c:269:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: fs/minix/inode.c:269:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "

WARNING:SPLIT_STRING: quoted string split across lines
#415: FILE: fs/minix/inode.c:270:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "
+			"running fsck is recommended.\n", sbi->s_version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: fs/minix/inode.c:271:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#416: FILE: fs/minix/inode.c:271:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: fs/minix/inode.c:271:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#417: FILE: fs/minix/inode.c:272:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#417: FILE: fs/minix/inode.c:272:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#418: FILE: fs/minix/inode.c:273:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "
+			"running fsck is recommended.\n", sbi->s_version);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#428: FILE: fs/minix/inode.c:302:
+		printk("VFS: Can't find a Minix filesystem V1 | V2 | V3 on device "

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: fs/minix/inode.c:303:
+ ^I^I       "%s.\n", s->s_id);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#429: FILE: fs/minix/inode.c:303:
+ ^I^I       "%s.\n", s->s_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: fs/minix/inode.c:303:
+ ^I^I       "%s.\n", s->s_id);$

WARNING:SPLIT_STRING: quoted string split across lines
#429: FILE: fs/minix/inode.c:303:
+		printk("VFS: Can't find a Minix filesystem V1 | V2 | V3 on device "
+ 		       "%s.\n", s->s_id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#437: FILE: fs/minix/inode.c:561:
+	struct inode * dir = dentry->d_parent->d_inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#438: FILE: fs/minix/inode.c:562:
+	struct super_block * sb = dir->i_sb;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#458: FILE: fs/minix/itree_common.c:26:
+	return (block_t *)((char*)bh->b_data + bh->b_size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#475: FILE: fs/minix/itree_common.c:295:
+	struct super_block * sb = inode->i_sb;

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#484: FILE: fs/minix/itree_common.c:305:
+	iblock = (inode->i_size + sb->s_blocksize -1) >> 10;
 	                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: include/linux/minix_fs.h:26:
+#define MINIX3_SUPER_MAGIC^I0x4d5a^I^I/* minix V3 fs */ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#512: FILE: include/linux/minix_fs.h:31:
+#define MINIX2_INODES_PER_BLOCK(b) ((b)/(sizeof (struct minix2_inode)))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#512: FILE: include/linux/minix_fs.h:31:
+#define MINIX2_INODES_PER_BLOCK(b) ((b)/(sizeof (struct minix2_inode)))
                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#541: FILE: fs/minix/bitmap.c:30:
+		for (j=0; j<bh->b_size; j++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#541: FILE: fs/minix/bitmap.c:30:
+		for (j=0; j<bh->b_size; j++)
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#549: FILE: fs/minix/bitmap.c:37:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#549: FILE: fs/minix/bitmap.c:37:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#549: FILE: fs/minix/bitmap.c:37:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#549: FILE: fs/minix/bitmap.c:37:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#549: FILE: fs/minix/bitmap.c:37:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#549: FILE: fs/minix/bitmap.c:37:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                             ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#587: FILE: fs/minix/dir.c:17:
+typedef struct minix3_dir_entry minix3_dirent;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#605: FILE: fs/minix/dir.c:106:
+					unsigned l = strnlen(de->name,sbi->s_namelen);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: fs/minix/dir.c:106:
+					unsigned l = strnlen(de->name,sbi->s_namelen);
 					                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#606: FILE: fs/minix/dir.c:107:
+					unsigned l = strnlen(de->name,sbi->s_namelen);
+					offset = p - kaddr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#608: FILE: fs/minix/dir.c:109:
+					over = filldir(dirent, de->name, l,
+					(n<<PAGE_CACHE_SHIFT) | offset,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#608: FILE: fs/minix/dir.c:109:
+					(n<<PAGE_CACHE_SHIFT) | offset,
 					  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#611: FILE: fs/minix/dir.c:112:
+					unsigned l = strnlen(de3->name,sbi->s_namelen);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: fs/minix/dir.c:112:
+					unsigned l = strnlen(de3->name,sbi->s_namelen);
 					                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#612: FILE: fs/minix/dir.c:113:
+					unsigned l = strnlen(de3->name,sbi->s_namelen);
+					offset = p - kaddr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#614: FILE: fs/minix/dir.c:115:
+					over = filldir(dirent, de3->name, l,
+					(n<<PAGE_CACHE_SHIFT) | offset,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#614: FILE: fs/minix/dir.c:115:
+					(n<<PAGE_CACHE_SHIFT) | offset,
 					  ^

CHECK:SPACING: No space is necessary after a cast
#633: FILE: fs/minix/dir.c:171:
+		de3 = (struct minix3_dir_entry *) kaddr;

CHECK:SPACING: No space is necessary after a cast
#640: FILE: fs/minix/dir.c:173:
+		for ( ; (char *) de <= kaddr ;

WARNING:SPACING: space prohibited before semicolon
#640: FILE: fs/minix/dir.c:173:
+		for ( ; (char *) de <= kaddr ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#641: FILE: fs/minix/dir.c:174:
+					de = minix_next_entry(de,sbi),
 					                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#642: FILE: fs/minix/dir.c:175:
+					de3 = minix_next_entry(de3,sbi)) {
 					                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#646: FILE: fs/minix/dir.c:179:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#646: FILE: fs/minix/dir.c:179:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#646: FILE: fs/minix/dir.c:179:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name))
 				                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: fs/minix/dir.c:180:
+^I^I^I^I^Igoto found; ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#647: FILE: fs/minix/dir.c:180:
+^I^I^I^I^Igoto found; ^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: fs/minix/dir.c:184:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: fs/minix/dir.c:184:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: fs/minix/dir.c:184:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#661: FILE: fs/minix/dir.c:206:
+	struct minix3_dir_entry * de3;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#679: FILE: fs/minix/dir.c:228:
+^I^I^I^Iif (namecompare(namelen,sbi->s_namelen,name,de->name)) ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#679: FILE: fs/minix/dir.c:228:
+^I^I^I^Iif (namecompare(namelen,sbi->s_namelen,name,de->name)) ^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#679: FILE: fs/minix/dir.c:228:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name)) 		
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#679: FILE: fs/minix/dir.c:228:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name)) 		
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#679: FILE: fs/minix/dir.c:228:
+				if (namecompare(namelen,sbi->s_namelen,name,de->name)) 		
 				                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: fs/minix/dir.c:230:
+ ^I^I^I^Ide = minix_next_entry(de, sbi);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#681: FILE: fs/minix/dir.c:230:
+ ^I^I^I^Ide = minix_next_entry(de, sbi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: fs/minix/dir.c:230:
+ ^I^I^I^Ide = minix_next_entry(de, sbi);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#683: FILE: fs/minix/dir.c:232:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#683: FILE: fs/minix/dir.c:232:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#683: FILE: fs/minix/dir.c:232:
+				if (namecompare(namelen,sbi->s_namelen,name,de3->name))
 				                                           ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#698: FILE: fs/minix/dir.c:250:
+		if (!(sbi->s_version == MINIX_V3)) {
+		memcpy (de->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#699: FILE: fs/minix/dir.c:251:
+		memcpy (de->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#700: FILE: fs/minix/dir.c:252:
+		memset (de->name + namelen, 0, sbi->s_dirsize - namelen - 2);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#702: FILE: fs/minix/dir.c:254:
+		} else {
+		memcpy (de3->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#703: FILE: fs/minix/dir.c:255:
+		memcpy (de3->name, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#704: FILE: fs/minix/dir.c:256:
+		memset (de3->name + namelen, 0, sbi->s_dirsize - namelen - 4);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#714: FILE: fs/minix/dir.c:298:
+	struct minix3_dir_entry * de3;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#728: FILE: fs/minix/dir.c:312:
+	de->inode = de3->inode = inode->i_ino;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: fs/minix/dir.c:313:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,".") : strcpy(de->name,".");
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: fs/minix/dir.c:313:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,".") : strcpy(de->name,".");
 	                                                                      ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#734: FILE: fs/minix/dir.c:316:
+	de->inode = de3->inode = dir->i_ino;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#735: FILE: fs/minix/dir.c:317:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,"..") : strcpy(de->name,"..");
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#735: FILE: fs/minix/dir.c:317:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,"..") : strcpy(de->name,"..");
 	                                                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#743: FILE: fs/minix/dir.c:338:
+		minix3_dirent * de3 = NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#765: FILE: fs/minix/dir.c:356:
+					if (!de->name[1]) {
[...]
+					} else if (de->name[1] != '.')
[...]
+					else if (de->name[2])
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#766: FILE: fs/minix/dir.c:357:
+						if (de->inode != inode->i_ino)

CHECK:BRACES: braces {} should be used on all arms of this statement
#779: FILE: fs/minix/dir.c:366:
+					if (!de3->name[1]) {
[...]
+					} else if (de3->name[1] != '.')
[...]
+					else if (de3->name[2])
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#780: FILE: fs/minix/dir.c:367:
+						if (de3->inode != inode->i_ino)

WARNING:LINE_SPACING: Missing a blank line after declarations
#838: FILE: fs/minix/inode.c:66:
+	struct minix_sb_info *sbi = &sb->u.minix_sb;
+	if (!(sb->s_flags & MS_RDONLY) && (sbi->s_version != MINIX_V3)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#838: FILE: fs/minix/inode.c:66:
+	if (!(sb->s_flags & MS_RDONLY) && (sbi->s_version != MINIX_V3)) {

ERROR:SPACING: space required before the open brace '{'
#852: FILE: fs/minix/inode.c:98:
+	if ((*flags & MS_RDONLY) && (sbi->s_version != MINIX_V3)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#852: FILE: fs/minix/inode.c:98:
+	if ((*flags & MS_RDONLY) && (sbi->s_version != MINIX_V3)){

ERROR:SPACING: space required before the open brace '{'
#861: FILE: fs/minix/inode.c:108:
+	else if (sbi->s_version != MINIX_V3){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#861: FILE: fs/minix/inode.c:108:
 	}
+	else if (sbi->s_version != MINIX_V3){

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#869: FILE: fs/minix/inode.c:116:
+		if (!(sb->u.minix_sb.s_mount_state & MINIX_VALID_FS) && (sbi->s_version != MINIX_V3))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#869: FILE: fs/minix/inode.c:116:
+		if (!(sb->u.minix_sb.s_mount_state & MINIX_VALID_FS) && (sbi->s_version != MINIX_V3))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#870: FILE: fs/minix/inode.c:117:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#870: FILE: fs/minix/inode.c:117:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "

WARNING:SPLIT_STRING: quoted string split across lines
#871: FILE: fs/minix/inode.c:118:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "
+				"running fsck is recommended.\n", sbi->s_version);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#872: FILE: fs/minix/inode.c:119:
+		else if ((sb->u.minix_sb.s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#873: FILE: fs/minix/inode.c:120:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#873: FILE: fs/minix/inode.c:120:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#874: FILE: fs/minix/inode.c:121:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "
+				"running fsck is recommended.\n", sbi->s_version);

ERROR:SPACING: space prohibited after that open parenthesis '('
#890: FILE: fs/minix/inode.c:189:
+	} else if ( *(__u16 *)(bh->b_data + 24) == MINIX3_SUPER_MAGIC) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#891: FILE: fs/minix/inode.c:190:
+	} else if ( *(__u16 *)(bh->b_data + 24) == MINIX3_SUPER_MAGIC) {
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#903: FILE: fs/minix/inode.c:202:
+			if ( *(__u16 *)(bh->b_data + 28) != 1024) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#904: FILE: fs/minix/inode.c:203:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))
+ 				goto out_bad_hblock;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#904: FILE: fs/minix/inode.c:203:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))
 				                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#904: FILE: fs/minix/inode.c:203:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))

ERROR:CODE_INDENT: code indent should use tabs where possible
#905: FILE: fs/minix/inode.c:204:
+ ^I^I^I^Igoto out_bad_hblock;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#905: FILE: fs/minix/inode.c:204:
+ ^I^I^I^Igoto out_bad_hblock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: fs/minix/inode.c:204:
+ ^I^I^I^Igoto out_bad_hblock;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#916: FILE: fs/minix/inode.c:248:
+	if (!(s->s_flags & MS_RDONLY) && (sbi->s_version != MINIX_V3)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#927: FILE: fs/minix/inode.c:253:
+	if (!(sbi->s_mount_state & MINIX_VALID_FS) && (sbi->s_version != MINIX_V3))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#928: FILE: fs/minix/inode.c:254:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#928: FILE: fs/minix/inode.c:254:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "

WARNING:SPLIT_STRING: quoted string split across lines
#929: FILE: fs/minix/inode.c:255:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "
+			"running fsck is recommended.\n", sbi->s_version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: fs/minix/inode.c:256:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#930: FILE: fs/minix/inode.c:256:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: fs/minix/inode.c:256:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#931: FILE: fs/minix/inode.c:257:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#931: FILE: fs/minix/inode.c:257:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#932: FILE: fs/minix/inode.c:258:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "
+			"running fsck is recommended.\n", sbi->s_version);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#941: FILE: fs/minix/inode.c:287:
+		printk("VFS: Can't find a Minix filesystem V1 | V2 | V3 on device "

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#953: FILE: fs/minix/itree_common.c:24:
+	return (block_t *)((char*)bh->b_data + bh->b_size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#970: FILE: fs/minix/itree_common.c:295:
+	struct super_block * sb = inode->i_sb;

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#979: FILE: fs/minix/itree_common.c:305:
+	iblock = (inode->i_size + sb->s_blocksize -1) >> 10;
 	                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#990: FILE: include/linux/minix_fs.h:26:
+#define MINIX3_SUPER_MAGIC^I0x4d5a^I^I/* minix V3 fs */ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#996: FILE: include/linux/minix_fs.h:31:
+#define MINIX2_INODES_PER_BLOCK(b) ((b)/(sizeof (struct minix2_inode)))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#996: FILE: include/linux/minix_fs.h:31:
+#define MINIX2_INODES_PER_BLOCK(b) ((b)/(sizeof (struct minix2_inode)))
                                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 80 errors, 82 warnings, 45 checks, 864 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
