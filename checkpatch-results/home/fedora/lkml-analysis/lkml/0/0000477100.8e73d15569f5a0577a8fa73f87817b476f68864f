WARNING:TYPO_SPELLING: 'defualt' may be misspelled - perhaps 'default'?
#43: 
would ignore atapi devices per defualt.
                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#83: FILE: drivers/ide/ide-probe.c:821:
+	for (i = 0; i < minors; ++i)
+	    blksize_size[hwif->major][i] = BLOCK_SIZE;

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#692: FILE: drivers/ide/ide-disk.c:172:
+static void fill_args (ide_task_t *args, struct hd_drive_task_hdr *taskfile, struct hd_drive_hob_hdr *hobfile)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#692: FILE: drivers/ide/ide-disk.c:172:
+static void fill_args (ide_task_t *args, struct hd_drive_task_hdr *taskfile, struct hd_drive_hob_hdr *hobfile)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#694: FILE: drivers/ide/ide-disk.c:174:
+	memcpy(args->tfRegister, taskfile, sizeof(struct hd_drive_task_hdr));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <hobRegister>
#695: FILE: drivers/ide/ide-disk.c:175:
+	memcpy(args->hobRegister, hobfile, sizeof(struct hd_drive_hob_hdr));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#859: FILE: drivers/ide/ide-probe.c:804:
+	minors = units * (1<<PARTN_BITS);
 	                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#861: FILE: drivers/ide/ide-probe.c:806:
+	gd = kmalloc (sizeof(struct gendisk), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*gd)...) over kmalloc(sizeof(struct gendisk)...)
#861: FILE: drivers/ide/ide-probe.c:806:
+	gd = kmalloc (sizeof(struct gendisk), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#868: FILE: drivers/ide/ide-probe.c:812:
+	gd->part = kmalloc (minors * sizeof(struct hd_struct), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#868: FILE: drivers/ide/ide-probe.c:812:
+	gd->part = kmalloc (minors * sizeof(struct hd_struct), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#873: FILE: drivers/ide/ide-probe.c:815:
+	blksize_size[hwif->major] = kmalloc (minors*sizeof(int), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#873: FILE: drivers/ide/ide-probe.c:815:
+	blksize_size[hwif->major] = kmalloc (minors*sizeof(int), GFP_KERNEL);
 	                                           ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#873: FILE: drivers/ide/ide-probe.c:815:
+	blksize_size[hwif->major] = kmalloc (minors*sizeof(int), GFP_KERNEL);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#890: FILE: drivers/ide/ide-probe.c:821:
+	for (i = 0; i < minors; ++i)
+	    blksize_size[hwif->major][i] = BLOCK_SIZE;

CHECK:SPACING: No space is necessary after a cast
#1003: FILE: drivers/ide/ide-proc.c:600:
+		len = sprintf(page,"%llu\n", (unsigned long long) drive->driver->capacity(drive));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1003: FILE: drivers/ide/ide-proc.c:600:
+		len = sprintf(page,"%llu\n", (unsigned long long) drive->driver->capacity(drive));
 		                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1386: FILE: fs/hfs/file.c:166:
+	if ((read = hfs_do_read(inode, HFS_I(inode)->fork, pos, buf, left)) > 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1395: FILE: fs/hfs/file.c:290:
+		    char * buf, hfs_u32 count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1446: FILE: include/linux/fs.h:176:
+#if 0				/* Obsolete, these don't do anything. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1447: FILE: include/linux/fs.h:177:
+#define BLKRASET   _IO(0x12,98)	/* set read ahead for block device */
                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 11 warnings, 6 checks, 1254 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
