WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
User get *a lot* confused when consoles don't work but we don't report anything.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#49: FILE: arch/um/drivers/chan_kern.c:23:
+static int my_printf(const char * fmt, ...)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#50: FILE: arch/um/drivers/chan_kern.c:24:
+	__attribute__ ((format (printf, 1, 2)));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#52: FILE: arch/um/drivers/chan_kern.c:26:
+static int my_printf(const char * fmt, ...)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#61: FILE: arch/um/drivers/chan_kern.c:35:
+		 * Yes, yes, yes, feel free to complain. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#80: FILE: arch/um/drivers/chan_kern.c:48:
 
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: arch/um/drivers/chan_kern.c:52:
+static int my_puts(const char * buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: arch/um/drivers/chan_kern.c:486:
+^I^Imy_printf("parse_chan couldn't parse \"%s\"\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'parse_chan', this function's name, in a string
#159: FILE: arch/um/drivers/chan_kern.c:486:
+		my_printf("parse_chan couldn't parse \"%s\"\n", 

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: arch/um/drivers/chan_kern.c:487:
+		my_printf("parse_chan couldn't parse \"%s\"\n", 
 		       str);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000149262.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 4 warnings, 2 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000149262.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
