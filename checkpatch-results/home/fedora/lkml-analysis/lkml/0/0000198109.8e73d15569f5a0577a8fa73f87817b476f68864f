WARNING:TYPO_SPELLING: 'sepcifically' may be misspelled - perhaps 'specifically'?
#58: 
           information, sepcifically what descriptor format is valid
                        ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#88: FILE: drivers/scsi/libata-scsi.c:345:
+void ata_dump_status(unsigned id, struct ata_taskfile *tf)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#92: FILE: drivers/scsi/libata-scsi.c:349:
+	printk(KERN_WARNING "ata%u: status=0x%02x { ", id, stat);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#94: FILE: drivers/scsi/libata-scsi.c:351:
+		printk("Busy }\n");	/* Data is not valid in this case */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#96: FILE: drivers/scsi/libata-scsi.c:353:
+		if (stat & 0x40)	printk("DriveReady ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#96: FILE: drivers/scsi/libata-scsi.c:353:
+		if (stat & 0x40)	printk("DriveReady ");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#97: FILE: drivers/scsi/libata-scsi.c:354:
+		if (stat & 0x20)	printk("DeviceFault ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#97: FILE: drivers/scsi/libata-scsi.c:354:
+		if (stat & 0x20)	printk("DeviceFault ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#98: FILE: drivers/scsi/libata-scsi.c:355:
+		if (stat & 0x10)	printk("SeekComplete ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#98: FILE: drivers/scsi/libata-scsi.c:355:
+		if (stat & 0x10)	printk("SeekComplete ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#99: FILE: drivers/scsi/libata-scsi.c:356:
+		if (stat & 0x08)	printk("DataRequest ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#99: FILE: drivers/scsi/libata-scsi.c:356:
+		if (stat & 0x08)	printk("DataRequest ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#100: FILE: drivers/scsi/libata-scsi.c:357:
+		if (stat & 0x04)	printk("CorrectedError ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#100: FILE: drivers/scsi/libata-scsi.c:357:
+		if (stat & 0x04)	printk("CorrectedError ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#101: FILE: drivers/scsi/libata-scsi.c:358:
+		if (stat & 0x02)	printk("Index ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#101: FILE: drivers/scsi/libata-scsi.c:358:
+		if (stat & 0x02)	printk("Index ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#102: FILE: drivers/scsi/libata-scsi.c:359:
+		if (stat & 0x01)	printk("Error ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#102: FILE: drivers/scsi/libata-scsi.c:359:
+		if (stat & 0x01)	printk("Error ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: drivers/scsi/libata-scsi.c:360:
+		printk("}\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#106: FILE: drivers/scsi/libata-scsi.c:363:
+			printk(KERN_WARNING "ata%u: error=0x%02x { ", id, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#107: FILE: drivers/scsi/libata-scsi.c:364:
+			if (err & 0x04)		printk("DriveStatusError ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#107: FILE: drivers/scsi/libata-scsi.c:364:
+			if (err & 0x04)		printk("DriveStatusError ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: drivers/scsi/libata-scsi.c:366:
+				if (err & 0x04) printk("BadCRC ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#109: FILE: drivers/scsi/libata-scsi.c:366:
+				if (err & 0x04) printk("BadCRC ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#110: FILE: drivers/scsi/libata-scsi.c:367:
+				else printk("Sector ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#110: FILE: drivers/scsi/libata-scsi.c:367:
+				else printk("Sector ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#112: FILE: drivers/scsi/libata-scsi.c:369:
+			if (err & 0x40)		printk("UncorrectableError ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#112: FILE: drivers/scsi/libata-scsi.c:369:
+			if (err & 0x40)		printk("UncorrectableError ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#113: FILE: drivers/scsi/libata-scsi.c:370:
+			if (err & 0x10)		printk("SectorIdNotFound ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#113: FILE: drivers/scsi/libata-scsi.c:370:
+			if (err & 0x10)		printk("SectorIdNotFound ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#114: FILE: drivers/scsi/libata-scsi.c:371:
+			if (err & 0x02)		printk("TrackZeroNotFound ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#114: FILE: drivers/scsi/libata-scsi.c:371:
+			if (err & 0x02)		printk("TrackZeroNotFound ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: drivers/scsi/libata-scsi.c:372:
+			if (err & 0x01)		printk("AddrMarkNotFound ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#115: FILE: drivers/scsi/libata-scsi.c:372:
+			if (err & 0x01)		printk("AddrMarkNotFound ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#116: FILE: drivers/scsi/libata-scsi.c:373:
+			printk("}\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/scsi/libata-scsi.c:393:
+void ata_to_sense_error(unsigned id, u8 drv_stat, u8 drv_err, u8 *sk, u8 *asc, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: drivers/scsi/libata-scsi.c:393:
+void ata_to_sense_error(unsigned id, u8 drv_stat, u8 drv_err, u8 *sk, u8 *asc, 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#206: FILE: drivers/scsi/libata-scsi.c:441:
+	if (drv_stat & ATA_BUSY) {
+		drv_err = 0;	/* Ignore the err bits, they're invalid */
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#210: FILE: drivers/scsi/libata-scsi.c:445:
+	printk(KERN_ERR "ata%u: translating stat 0x%02x err 0x%02x to sense\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/scsi/libata-scsi.c:446:
+	       id,drv_stat,drv_err);
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/scsi/libata-scsi.c:446:
+	       id,drv_stat,drv_err);
 	                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#238: FILE: drivers/scsi/libata-scsi.c:460:
+		printk(KERN_DEBUG "ata%u: no sense translation for "

WARNING:SPLIT_STRING: quoted string split across lines
#239: FILE: drivers/scsi/libata-scsi.c:461:
+		printk(KERN_DEBUG "ata%u: no sense translation for "
+		       "error 0x%02x\n", id, drv_err);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: drivers/scsi/libata-scsi.c:474:
+^Iprintk(KERN_ERR "ata%u: no sense translation for status: 0x%02x\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#280: FILE: drivers/scsi/libata-scsi.c:474:
+	printk(KERN_ERR "ata%u: no sense translation for status: 0x%02x\n", 

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#326: FILE: drivers/scsi/libata-scsi.c:513:
+	assert(NULL != qc->ap->ops->tf_read);

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#367: FILE: drivers/scsi/libata-scsi.c:538:
+	desc[1] = sb[7] = 14;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#430: FILE: drivers/scsi/libata-scsi.c:588:
+	assert(NULL != qc->ap->ops->tf_read);

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: drivers/scsi/libata-scsi.c:989:
+ ^Iint need_sense = drv_stat & (ATA_ERR | ATA_BUSY | ATA_DRQ);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#459: FILE: drivers/scsi/libata-scsi.c:989:
+ ^Iint need_sense = drv_stat & (ATA_ERR | ATA_BUSY | ATA_DRQ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: drivers/scsi/libata-scsi.c:989:
+ ^Iint need_sense = drv_stat & (ATA_ERR | ATA_BUSY | ATA_DRQ);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: drivers/scsi/libata-scsi.c:999:
+ ^I    ((cmd->cmnd[2] & 0x20) || need_sense)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#478: FILE: drivers/scsi/libata-scsi.c:999:
+ ^I    ((cmd->cmnd[2] & 0x20) || need_sense)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/scsi/libata-scsi.c:999:
+ ^I    ((cmd->cmnd[2] & 0x20) || need_sense)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: drivers/scsi/libata-scsi.c:1000:
+ ^I^Iata_gen_ata_desc_sense(qc);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#479: FILE: drivers/scsi/libata-scsi.c:1000:
+ ^I^Iata_gen_ata_desc_sense(qc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/scsi/libata-scsi.c:1000:
+ ^I^Iata_gen_ata_desc_sense(qc);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 35 warnings, 1 checks, 433 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
