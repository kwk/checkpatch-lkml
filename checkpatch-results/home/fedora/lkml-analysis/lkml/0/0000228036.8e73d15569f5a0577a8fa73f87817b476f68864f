WARNING:TYPO_SPELLING: 'independend' may be misspelled - perhaps 'independent'?
#50: 
> independend on the rest.
  ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'corrent' may be misspelled - perhaps 'correct'?
#133: 
- corrent calc_num.
  ^^^^^^^

WARNING:TYPO_SPELLING: 'improvment' may be misspelled - perhaps 'improvement'?
#135: 
- improvment i386 copy back code.
  ^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#138: 
--- linux-2.6.9-ppc-g4-peval/include/linux/reboot.h	2004-06-16 13:20:26.000000000 +0800

CHECK:CAMELCASE: Avoid CamelCase: <definedCONFIG_X86>
#156: FILE: include/linux/suspend.h:4:
+#if (definedCONFIG_X86) || (defined CONFIG_PPC32)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#174: FILE: kernel/power/disk.c:33:
+extern int write_page_caches(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#175: FILE: kernel/power/disk.c:34:
+extern int read_page_caches(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: kernel/power/disk.c:56:
+ ^I^I/* device_power_down(PMSG_SUSPEND); */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: kernel/power/disk.c:56:
+ ^I^I/* device_power_down(PMSG_SUSPEND); */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: kernel/power/disk.c:56:
+ ^I^I/* device_power_down(PMSG_SUSPEND); */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#202: FILE: kernel/power/disk.c:114:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: kernel/power/disk.c:157:
+^Iif (!resume) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#232: FILE: kernel/power/disk.c:158:
+		if ((error = write_page_caches())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <Finish>
#233: FILE: kernel/power/disk.c:159:
+			goto Finish;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#243: FILE: kernel/power/disk.c:190:
+	if ((error = prepare(0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#252: FILE: kernel/power/disk.c:247:
+	if ((error = prepare(1)))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#291: FILE: kernel/power/swsusp.c:222:
+#define ONE_PAGE_PBE_NUM	(PAGE_SIZE/sizeof(struct pbe))
                         	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#296: FILE: kernel/power/swsusp.c:227:
+static int inline for_each_pgdir(struct pbe *pbe, susp_pgdir_t fun,
+		void *subfun, void *arg)
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#296: FILE: kernel/power/swsusp.c:227:
+static int inline for_each_pgdir(struct pbe *pbe, susp_pgdir_t fun,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: kernel/power/swsusp.c:228:
+static int inline for_each_pgdir(struct pbe *pbe, susp_pgdir_t fun,
+		void *subfun, void *arg)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#302: FILE: kernel/power/swsusp.c:233:
+	while (pgdir != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#306: FILE: kernel/power/swsusp.c:237:
+		if (error) return error;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: kernel/power/swsusp.c:251:
+/* $

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#323: FILE: kernel/power/swsusp.c:254:
+ * a callback funtion in foreach pbe loop.
               ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: kernel/power/swsusp.c:257:
+ * @param p    private data $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: kernel/power/swsusp.c:260:
+ * @return  0 is ok, otherwise $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: kernel/power/swsusp.c:262:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: kernel/power/swsusp.c:262:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: kernel/power/swsusp.c:266:
+ * for_each_pbe $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: kernel/power/swsusp.c:268:
+ * @param pbe pointer of the pbe head $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: kernel/power/swsusp.c:270:
+ * @param p   private data $

WARNING:REPEATED_WORD: Possible repeated word: 'max'
#340: FILE: kernel/power/swsusp.c:271:
+ * @param max max the the pbe numbers

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#340: FILE: kernel/power/swsusp.c:271:
+ * @param max max the the pbe numbers

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#344: FILE: kernel/power/swsusp.c:275:
+static int for_each_pbe(struct pbe *pbe, swsup_pbe_t fun, void *p, int max)
+{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#350: FILE: kernel/power/swsusp.c:281:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#352: FILE: kernel/power/swsusp.c:283:
+		unsigned long nums;
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#352: FILE: kernel/power/swsusp.c:283:
+		next = (struct pbe*)pgdir->dummy.val;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#353: FILE: kernel/power/swsusp.c:284:
+		for (nums = 0; nums < ONE_PAGE_PBE_NUM; nums++, pgdir++, i ++) {
 		                                                           ^

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: kernel/power/swsusp.c:288:
+			if((error = fun(pgdir, p, i))) { /* got error */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#357: FILE: kernel/power/swsusp.c:288:
+			if((error = fun(pgdir, p, i))) { /* got error */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: kernel/power/swsusp.c:296:
+/* for_each_pbe_copy_back $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#365: FILE: kernel/power/swsusp.c:296:
+}
+/* for_each_pbe_copy_back 

WARNING:TYPO_SPELLING: 'usefuly' may be misspelled - perhaps 'usefully'?
#367: FILE: kernel/power/swsusp.c:298:
+ * That usefuly for  writing the code in assemble code.
         ^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#372: FILE: kernel/power/swsusp.c:303:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: kernel/power/swsusp.c:304:
+#define GET_ADDRESS(x) __pa(x) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#377: FILE: kernel/power/swsusp.c:308:
+asmlinkage void for_each_pbe_copy_back(void)
+{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#382: FILE: kernel/power/swsusp.c:313:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#384: FILE: kernel/power/swsusp.c:315:
+		unsigned long nums, i;
+		pgdir = (struct pbe *)GET_ADDRESS(pgdir);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#385: FILE: kernel/power/swsusp.c:316:
+		next = (struct pbe*)pgdir->dummy.val;

WARNING:LINE_SPACING: Missing a blank line after declarations
#388: FILE: kernel/power/swsusp.c:319:
+			register unsigned long *orig, *copy;
+			orig = (unsigned long *)pgdir->orig_address;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#389: FILE: kernel/power/swsusp.c:320:
+			if (orig == 0) goto end;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#392: FILE: kernel/power/swsusp.c:323:
+#if 0

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#395: FILE: kernel/power/swsusp.c:326:
+			for (i = 0; i < PAGE_SIZE / sizeof(unsigned long); i+=4) {
 			                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#397: FILE: kernel/power/swsusp.c:328:
+				*(orig + i+1) = *(copy + i+1);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#397: FILE: kernel/power/swsusp.c:328:
+				*(orig + i+1) = *(copy + i+1);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#398: FILE: kernel/power/swsusp.c:329:
+				*(orig + i+2) = *(copy + i+2);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#398: FILE: kernel/power/swsusp.c:329:
+				*(orig + i+2) = *(copy + i+2);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#399: FILE: kernel/power/swsusp.c:330:
+				*(orig + i+3) = *(copy + i+3);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#399: FILE: kernel/power/swsusp.c:330:
+				*(orig + i+3) = *(copy + i+3);
 				                          ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#402: FILE: kernel/power/swsusp.c:333:
+			pgdir ++;
 			      ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#415: FILE: kernel/power/swsusp.c:346:
+		return (1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: kernel/power/swsusp.c:359:
+^I} $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#471: FILE: kernel/power/swsusp.c:421:
+static void inline mod_printk_progress(int i)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#473: FILE: kernel/power/swsusp.c:423:
+	if (mod_progress == 0) mod_progress = 1;

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#474: FILE: kernel/power/swsusp.c:424:
+	if (!(i%100))
 	       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#475: FILE: kernel/power/swsusp.c:425:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited after that open parenthesis '('
#475: FILE: kernel/power/swsusp.c:425:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#475: FILE: kernel/power/swsusp.c:425:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#482: FILE: kernel/power/swsusp.c:432:
+	BUG_ON(p->address == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#483: FILE: kernel/power/swsusp.c:433:
+	BUG_ON(p->orig_address == 0);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#484: FILE: kernel/power/swsusp.c:434:
+	if ((error = write_page(p->address, &p->swap_address))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#484: FILE: kernel/power/swsusp.c:434:
+	if ((error = write_page(p->address, &p->swap_address))) {
+		return error;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: kernel/power/swsusp.c:438:
+^Ipr_debug("write_one_pbe: %p, o{%p} c{%p} %lu %d\n", p, $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_one_pbe', this function's name, in a string
#488: FILE: kernel/power/swsusp.c:438:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %lu %d\n", p, 

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: kernel/power/swsusp.c:439:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %lu %d\n", p, 
+			(void *)p->orig_address, (void *)p->address,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: kernel/power/swsusp.c:440:
+^I^I^Ip->swap_address.val, cur); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: kernel/power/swsusp.c:453:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#520: FILE: kernel/power/swsusp.c:456:
+	printk( "Writing data to swap (%d pages)...     ", nr_copy_pages);

ERROR:SPACING: space prohibited after that open parenthesis '('
#520: FILE: kernel/power/swsusp.c:456:
+	printk( "Writing data to swap (%d pages)...     ", nr_copy_pages);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#536: FILE: kernel/power/swsusp.c:524:
+	if ((error = write_page((unsigned long)pgdir, &swsusp_info.pagedir[i]))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#536: FILE: kernel/power/swsusp.c:524:
+	if ((error = write_page((unsigned long)pgdir, &swsusp_info.pagedir[i]))) {
+		return (error);
+	} 

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#537: FILE: kernel/power/swsusp.c:525:
+		return (error);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: kernel/power/swsusp.c:526:
+^I} $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#539: FILE: kernel/power/swsusp.c:527:
+	(*(int *)arg) ++;
 	              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: kernel/power/swsusp.c:675:
+^Ispin_lock_irq(&zone->lru_lock); $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#578: FILE: kernel/power/swsusp.c:677:
+		struct list_head * entry = zone->inactive_list.prev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#579: FILE: kernel/power/swsusp.c:678:
+		struct list_head * entry = zone->inactive_list.prev;
+		while (entry != &zone->inactive_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#581: FILE: kernel/power/swsusp.c:680:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#582: FILE: kernel/power/swsusp.c:681:
+				struct page * page = list_entry(entry, struct page, lru);
+				inactive += fun(page, p);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: kernel/power/swsusp.c:682:
+^I^I^I} else { $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#584: FILE: kernel/power/swsusp.c:683:
+				inactive ++;
 				         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#590: FILE: kernel/power/swsusp.c:689:
+		struct list_head * entry = zone->active_list.prev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#591: FILE: kernel/power/swsusp.c:690:
+		struct list_head * entry = zone->active_list.prev;
+		while (entry != &zone->active_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#593: FILE: kernel/power/swsusp.c:692:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#594: FILE: kernel/power/swsusp.c:693:
+				struct page * page = list_entry(entry, struct page, lru);
+				active += fun(page, p);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#596: FILE: kernel/power/swsusp.c:695:
+				active ++;
 				       ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#607: FILE: kernel/power/swsusp.c:706:
+int swsusp_pagecache = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#616: FILE: kernel/power/swsusp.c:715:
+static suspend_pagedir_t *pagedir_cache = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#617: FILE: kernel/power/swsusp.c:716:
+static int nr_copy_pcs = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#622: FILE: kernel/power/swsusp.c:721:
+	struct zone *zone;
+	for_each_zone(zone) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#623: FILE: kernel/power/swsusp.c:722:
+		if (!is_highmem(zone)) {
+			spin_lock_irq(&zone->lru_lock);
+		}

WARNING:LINE_SPACING: Missing a blank line after declarations
#632: FILE: kernel/power/swsusp.c:731:
+	struct zone *zone;
+	for_each_zone(zone) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#633: FILE: kernel/power/swsusp.c:732:
+		if (!is_highmem(zone)) {
+			spin_unlock_irq(&zone->lru_lock);
+		}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#643: FILE: kernel/power/swsusp.c:742:
+	BUG_ON(PageReserved(page) && PageNosave(page));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: kernel/power/swsusp.c:744:
+		printk("not valid page\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#649: FILE: kernel/power/swsusp.c:748:
+		printk("nosave\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#653: FILE: kernel/power/swsusp.c:752:
+		printk("[nosave]\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#657: FILE: kernel/power/swsusp.c:756:
+		printk("slab\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#662: FILE: kernel/power/swsusp.c:761:
+		struct pbe *p = find_pbe_by_index(pagedir_cache, nr_copy_pcs, -1);
+		BUG_ON(p == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#662: FILE: kernel/power/swsusp.c:761:
+		BUG_ON(p == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#662: FILE: kernel/power/swsusp.c:761:
+		BUG_ON(p == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#664: FILE: kernel/power/swsusp.c:763:
+		BUG_ON(p->address == 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#666: FILE: kernel/power/swsusp.c:765:
+		/*pr_debug("setup_pcs: cur %p, o{%p}, d{%p}, nr %u\n",
+				(void*)p, (void*)p->orig_address,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#667: FILE: kernel/power/swsusp.c:766:
+				(void*)p->address, nr_copy_pcs);*/

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#668: FILE: kernel/power/swsusp.c:767:
+		nr_copy_pcs ++;
 		            ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#672: FILE: kernel/power/swsusp.c:771:
+	return (1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: kernel/power/swsusp.c:781:
+/* $

WARNING:LINE_SPACING: Missing a blank line after declarations
#688: FILE: kernel/power/swsusp.c:787:
+	unsigned long addre = (unsigned long)addr + PAGE_SIZE;
+	BUG_ON(p->orig_address == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#688: FILE: kernel/power/swsusp.c:787:
+	BUG_ON(p->orig_address == 0);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#696: FILE: kernel/power/swsusp.c:795:
+	return (for_each_pbe(old, check_pbe_addr, addr, max));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#710: FILE: kernel/power/swsusp.c:809:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#710: FILE: kernel/power/swsusp.c:809:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: kernel/power/swsusp.c:810:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 
+		suspend_pagedir_t *collide)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#718: FILE: kernel/power/swsusp.c:817:
+	if (!pgdir) {
+		return NULL;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#727: FILE: kernel/power/swsusp.c:826:
+			if (!pgdir) {
+				return NULL;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: kernel/power/swsusp.c:832:
+^I/*pr_debug("pgdir: %p, %p, %d\n", $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#734: FILE: kernel/power/swsusp.c:833:
+	/*pr_debug("pgdir: %p, %p, %d\n", 
+			pgdir, prev, sizeof(suspend_pagedir_t)); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#734: FILE: kernel/power/swsusp.c:833:
+			pgdir, prev, sizeof(suspend_pagedir_t)); */

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#740: FILE: kernel/power/swsusp.c:839:
+			prev[i].dummy.val= (unsigned long)pgdir;
 			                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#750: FILE: kernel/power/swsusp.c:849:
+	int diff = 0, ret = 0;
+	do {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#760: FILE: kernel/power/swsusp.c:859:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: kernel/power/swsusp.c:860:
+ * alloc_pagedir $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: kernel/power/swsusp.c:868:
+static int alloc_pagedir(struct pbe **pbe, int pbe_nums, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#770: FILE: kernel/power/swsusp.c:869:
+static int alloc_pagedir(struct pbe **pbe, int pbe_nums, 
+		struct pbe *collide, int page_nums)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#778: FILE: kernel/power/swsusp.c:877:
+^Ielse $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_pagedir', this function's name, in a string
#781: FILE: kernel/power/swsusp.c:880:
+	pr_debug("alloc_pagedir: %d, %d\n", pbe_nums, after_alloc);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#802: FILE: kernel/power/swsusp.c:901:
+static int bio_read_page(pgoff_t page_off, void * page);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pagecache_read_pbe', this function's name, in a string
#811: FILE: kernel/power/swsusp.c:910:
+	pr_debug("pagecache_read_pbe: %p, o{%p} c{%p} %lu\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#812: FILE: kernel/power/swsusp.c:911:
+^I^I^Ip, (void *)p->orig_address, (void *)p->address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: kernel/power/swsusp.c:911:
+	pr_debug("pagecache_read_pbe: %p, o{%p} c{%p} %lu\n",
+			p, (void *)p->orig_address, (void *)p->address, 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#816: FILE: kernel/power/swsusp.c:915:
+	if (error) return error;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#829: FILE: kernel/power/swsusp.c:928:
+	if (swsusp_pagecache == 0) return 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#833: FILE: kernel/power/swsusp.c:932:
+	printk( "Reading PageCaches from swap (%d pages)...     ", nr_copy_pcs);

ERROR:SPACING: space prohibited after that open parenthesis '('
#833: FILE: kernel/power/swsusp.c:932:
+	printk( "Reading PageCaches from swap (%d pages)...     ", nr_copy_pcs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#835: FILE: kernel/power/swsusp.c:934:
+	error = for_each_pbe(pagedir_cache, pagecache_read_pbe, NULL,
+			nr_copy_pcs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#836: FILE: kernel/power/swsusp.c:935:
+	printk("\b\b\b\bdone\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pagecache_write_pbe', this function's name, in a string
#850: FILE: kernel/power/swsusp.c:949:
+	pr_debug("pagecache_write_pbe: %p, o{%p} c{%p} %d ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: kernel/power/swsusp.c:950:
+	pr_debug("pagecache_write_pbe: %p, o{%p} c{%p} %d ",
+			p, (void *)p->orig_address, (void *)p->address, cur);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#852: FILE: kernel/power/swsusp.c:951:
+	BUG_ON(p->address == 0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#854: FILE: kernel/power/swsusp.c:953:
+	if (error) return error;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: kernel/power/swsusp.c:963:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#868: FILE: kernel/power/swsusp.c:967:
+	printk( "Writing PageCaches to swap (%d pages)...     ", nr_copy_pcs);

ERROR:SPACING: space prohibited after that open parenthesis '('
#868: FILE: kernel/power/swsusp.c:967:
+	printk( "Writing PageCaches to swap (%d pages)...     ", nr_copy_pcs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#869: FILE: kernel/power/swsusp.c:968:
+^Ierror = for_each_pbe(pagedir_cache, pagecache_write_pbe, NULL, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: kernel/power/swsusp.c:969:
+	error = for_each_pbe(pagedir_cache, pagecache_write_pbe, NULL, 
+			nr_copy_pcs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#871: FILE: kernel/power/swsusp.c:970:
+	printk("\b\b\b\bdone\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#882: FILE: kernel/power/swsusp.c:981:
+		if (!is_highmem(zone)) {
+			count_pcs(zone, 1);
+		}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#899: FILE: kernel/power/swsusp.c:998:
+		ClearPagePcs(mem_map+i);
 		                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#904: FILE: kernel/power/swsusp.c:1003:
+		if (!is_highmem(zone)) {
+			nr_copy_pcs += count_pcs(zone, 0);
+		}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#915: FILE: kernel/power/swsusp.c:1014:
+	if ((error = swsusp_swap_check())) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#923: FILE: kernel/power/swsusp.c:1022:
+		if (nr_copy_pcs == 0) {
+			return 0;
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#926: FILE: kernel/power/swsusp.c:1025:
+		printk("swsusp: Need to copy %u pcs\n", nr_copy_pcs);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#927: FILE: kernel/power/swsusp.c:1026:
+		if (alloc_pagedir(&pagedir_cache, nr_copy_pcs, NULL, 0) < 0) {
+			return -ENOMEM;
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#934: FILE: kernel/power/swsusp.c:1033:
+	printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#935: FILE: kernel/power/swsusp.c:1034:
+	printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",
+			nr_copy_pages, nr_copy_pcs);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#938: FILE: kernel/power/swsusp.c:1037:
+		if (recal == 0) {
+			printk("swsusp: try shrink memory ");
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#939: FILE: kernel/power/swsusp.c:1038:
+			printk("swsusp: try shrink memory ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#946: FILE: kernel/power/swsusp.c:1045:
+		printk("done\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#950: FILE: kernel/power/swsusp.c:1049:
+		printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#951: FILE: kernel/power/swsusp.c:1050:
+		printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",
+				nr_copy_pages, nr_copy_pcs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: kernel/power/swsusp.c:1052:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#956: FILE: kernel/power/swsusp.c:1055:
+	printk("swsusp(2/2): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#957: FILE: kernel/power/swsusp.c:1056:
+	printk("swsusp(2/2): Need to copy %u pages, %u pcs\n",
+			nr_copy_pages, nr_copy_pcs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#961: FILE: kernel/power/swsusp.c:1060:
+		printk("swsusp_alloc failed, %d\n", error);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#967: FILE: kernel/power/swsusp.c:1066:
+	printk("swsusp(final): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#968: FILE: kernel/power/swsusp.c:1067:
+	printk("swsusp(final): Need to copy %u pages, %u pcs\n",
+			nr_copy_pages, nr_copy_pcs);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#972: FILE: kernel/power/swsusp.c:1071:
+		pr_debug("after setup_pagedir_pbe \n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: kernel/power/swsusp.c:1074:
+^I^Iif (error) $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#990: FILE: kernel/power/swsusp.c:1116:
+		BUG_ON(zone->nr_inactive == 0 && zone->nr_active == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1021: FILE: kernel/power/swsusp.c:1154:
+^I^I^I^Istruct pbe * pbe = find_pbe_by_index(pagedir_nosave, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1021: FILE: kernel/power/swsusp.c:1154:
+				struct pbe * pbe = find_pbe_by_index(pagedir_nosave, 

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1023: FILE: kernel/power/swsusp.c:1156:
+				BUG_ON(pbe == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pbe"
#1023: FILE: kernel/power/swsusp.c:1156:
+				BUG_ON(pbe == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1026: FILE: kernel/power/swsusp.c:1159:
+				BUG_ON(pbe->orig_address == 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1182: FILE: kernel/power/swsusp.c:1268:
+		printk("suspend: Allocating pagedir failed.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1189: FILE: kernel/power/swsusp.c:1274:
+		printk("suspend: Allocating image pages failed.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1231: FILE: kernel/power/swsusp.c:1340:
+		return error; */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1354: FILE: kernel/power/swsusp.c:1410:
+static struct block_device * resume_bdev __nosavedata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1363: FILE: kernel/power/swsusp.c:1455:
+static int bio_read_page(pgoff_t page_off, void * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1369: FILE: kernel/power/swsusp.c:1460:
+static int bio_write_page(pgoff_t page_off, void * page)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1389: FILE: kernel/power/swsusp.c:1535:
+^Ipr_debug("check_one_pbe: %p %p o{%p} ", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_one_pbe', this function's name, in a string
#1389: FILE: kernel/power/swsusp.c:1535:
+	pr_debug("check_one_pbe: %p %p o{%p} ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1390: FILE: kernel/power/swsusp.c:1536:
+	pr_debug("check_one_pbe: %p %p o{%p} ", 
+			p, (void*)addr, (void*)p->orig_address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1390: FILE: kernel/power/swsusp.c:1536:
+			p, (void*)addr, (void*)p->orig_address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1390: FILE: kernel/power/swsusp.c:1536:
+			p, (void*)addr, (void*)p->orig_address);

ERROR:SPACING: space required before the open parenthesis '('
#1397: FILE: kernel/power/swsusp.c:1543:
+		if(!addr)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1399: FILE: kernel/power/swsusp.c:1545:
+	} while(check_collide((struct pbe *)collide, nr_copy_pages, (void*)addr));

ERROR:SPACING: space required before the open parenthesis '('
#1399: FILE: kernel/power/swsusp.c:1545:
+	} while(check_collide((struct pbe *)collide, nr_copy_pages, (void*)addr));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1400: FILE: kernel/power/swsusp.c:1546:
+	pr_debug("c{%p} done\n", (void*)addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1421: FILE: kernel/power/swsusp.c:1567:
+^Ipr_debug("read_one_pbe: %p o{%p} c{%p} %lu, %d\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pbe', this function's name, in a string
#1421: FILE: kernel/power/swsusp.c:1567:
+	pr_debug("read_one_pbe: %p o{%p} c{%p} %lu, %d\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1422: FILE: kernel/power/swsusp.c:1568:
+^I^I^Ip, (void *)p->orig_address, (void *)p->address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1422: FILE: kernel/power/swsusp.c:1568:
+	pr_debug("read_one_pbe: %p o{%p} c{%p} %lu, %d\n", 
+			p, (void *)p->orig_address, (void *)p->address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1435: FILE: kernel/power/swsusp.c:1579:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1436: FILE: kernel/power/swsusp.c:1580:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, 
+		suspend_pagedir_t *s_pgdir)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s_pgdir"
#1440: FILE: kernel/power/swsusp.c:1584:
+	while (s_pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1443: FILE: kernel/power/swsusp.c:1587:
+		suspend_pagedir_t *d_next = (suspend_pagedir_t *)d_pgdir->dummy.val;
+		for (i = 0; i < ONE_PAGE_PBE_NUM; i++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1447: FILE: kernel/power/swsusp.c:1591:
+			s_pgdir ++; d_pgdir ++;
 			        ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1447: FILE: kernel/power/swsusp.c:1591:
+			s_pgdir ++; d_pgdir ++;
 			                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1460: FILE: kernel/power/swsusp.c:1601:
+	suspend_pagedir_t * addr = NULL;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1466: FILE: kernel/power/swsusp.c:1603:
+	printk("Relocating pagedir ");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1467: FILE: kernel/power/swsusp.c:1604:
+^Ierror = alloc_pagedir(&addr, nr_copy_pages, pagedir_nosave, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1468: FILE: kernel/power/swsusp.c:1605:
+	error = alloc_pagedir(&addr, nr_copy_pages, pagedir_nosave, 
+			swsusp_info.pagedir_pages);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1469: FILE: kernel/power/swsusp.c:1606:
+	if (error < 0) {
 		return error;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1473: FILE: kernel/power/swsusp.c:1610:
+	if (check_pagedir(addr)) {
+		return -ENOMEM;
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1477: FILE: kernel/power/swsusp.c:1614:
+	printk("done\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1493: FILE: kernel/power/swsusp.c:1622:
+	printk(" %d done.\n", nr_copy_pages);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1500: FILE: kernel/power/swsusp.c:1629:
+static int __init read_one_pagedir(suspend_pagedir_t *pgdir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1501: FILE: kernel/power/swsusp.c:1630:
+static int __init read_one_pagedir(suspend_pagedir_t *pgdir, 
+		void *fun, void *arg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1509: FILE: kernel/power/swsusp.c:1638:
+^Ipr_debug("read_one_pagedir: %p, %d, %lu, %p\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pagedir', this function's name, in a string
#1509: FILE: kernel/power/swsusp.c:1638:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1510: FILE: kernel/power/swsusp.c:1639:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 
+			pgdir, i, offset, (void*)next);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1510: FILE: kernel/power/swsusp.c:1639:
+			pgdir, i, offset, (void*)next);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1511: FILE: kernel/power/swsusp.c:1640:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1511: FILE: kernel/power/swsusp.c:1640:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {
+		return error;
+	}

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1514: FILE: kernel/power/swsusp.c:1643:
+	(*(int *)arg) ++;
 	              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1535: FILE: kernel/power/swsusp.c:1658:
+	printk("pmdisk: Reading pagedir (%d Pages)\n",n);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1535: FILE: kernel/power/swsusp.c:1658:
+	printk("pmdisk: Reading pagedir (%d Pages)\n",n);
 	                                             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1538: FILE: kernel/power/swsusp.c:1661:
+	BUG_ON(i != n);

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#1609: FILE: kernel/sysctl.c:808:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1621: FILE: include/linux/sysctl.h:173:
+	VM_SWSUSP_PAGECACHE=29,	/* Enable/Disable Suspend PageCaches */
 	                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228036.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 103 errors, 91 warnings, 37 checks, 1429 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228036.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
