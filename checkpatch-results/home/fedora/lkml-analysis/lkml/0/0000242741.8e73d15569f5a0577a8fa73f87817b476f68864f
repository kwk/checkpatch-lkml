ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#54: FILE: include/linux/init.h:72:
+#define CK_FMTSTR(expr)	do if (0) { expr; } while (0)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#54: FILE: include/linux/init.h:72:
+#define CK_FMTSTR(expr)	do if (0) { expr; } while (0)

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#56: FILE: include/linux/init.h:74:
+#define CK_FMTSTR(expr)	do ; while (0)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fmt' - possible side-effects?
#59: FILE: include/linux/init.h:77:
+#define i_printk(fmt, args...)	\
+({						\
+	CK_FMTSTR(printk(fmt , ##args));	\
+	printk(I_STRING(fmt) , ##args);		\
+})

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#61: FILE: include/linux/init.h:79:
+	CK_FMTSTR(printk(fmt , ##args));	\

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#61: FILE: include/linux/init.h:79:
+	CK_FMTSTR(printk(fmt , ##args));	\
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#62: FILE: include/linux/init.h:80:
+	printk(I_STRING(fmt) , ##args);		\

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#62: FILE: include/linux/init.h:80:
+	printk(I_STRING(fmt) , ##args);		\
 	                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fmt' - possible side-effects?
#65: FILE: include/linux/init.h:83:
+#define i_panic(fmt, args...)	\
+({						\
+	CK_FMTSTR(panic(fmt , ##args));		\
+	panic(I_STRING(fmt) , ##args);		\
+})

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#67: FILE: include/linux/init.h:85:
+	CK_FMTSTR(panic(fmt , ##args));		\
 	                    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#68: FILE: include/linux/init.h:86:
+	panic(I_STRING(fmt) , ##args);		\
 	                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: init/do_mounts.c:269:
+	i_printk("VFS: Mounted root (%s filesystem)%s.\n",
 	       current->fs->pwdmnt->mnt_sb->s_type->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: init/do_mounts.c:300:
+		i_printk("VFS: Cannot open root device \"%s\" or %s\n",
 				root_device_name, b);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000242741.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 3 warnings, 4 checks, 76 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000242741.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
