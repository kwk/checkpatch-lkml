WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
  * I have updated where I put the depends so fewer things need a CONFIG_BLOCK.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: arch/i386/kernel/cpu/common.c:435:
+#define intel_cpu_init() $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: arch/i386/kernel/cpu/common.c:438:
+#define cyrix_init_cpu() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: arch/i386/kernel/cpu/common.c:441:
+#define nsc_init_cpu() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: arch/i386/kernel/cpu/common.c:444:
+#define amd_init_cpu() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: arch/i386/kernel/cpu/common.c:447:
+#define centaur_init_cpu() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: arch/i386/kernel/cpu/common.c:450:
+#define transmeta_init_cpu() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: arch/i386/kernel/cpu/common.c:453:
+#define rise_init_cpu() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: arch/i386/kernel/cpu/common.c:456:
+#define nexgen_init_cpu() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: arch/i386/kernel/cpu/common.c:459:
+#define umc_init_cpu() $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#188: FILE: drivers/block/Kconfig:3:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#202: FILE: drivers/block/Kconfig.embedded:1:
+config BLOCK
+	bool "Block device support" if EMBEDDED
+	default y
+	help
+	  Allow the complete removal of block device code

Kconfig symbols should have a help text which fully describes
it.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#503: FILE: fs/block_dev.c:925:
+	printk("Emergency Remount complete\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#513: FILE: fs/block_dev.c:935:
+	s->s_bdev =3D data;
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#514: FILE: fs/block_dev.c:936:
+	s->s_dev =3D s->s_bdev->bd_dev;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#520: FILE: fs/block_dev.c:942:
+	return (void *)s->s_bdev =3D=3D data;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#520: FILE: fs/block_dev.c:942:
+	return (void *)s->s_bdev =3D=3D data;
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: fs/block_dev.c:946:
+struct super_block *get_sb_bdev(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#529: FILE: fs/block_dev.c:951:
+	int error =3D 0;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#531: FILE: fs/block_dev.c:953:
+	bdev =3D open_bdev_excl(dev_name, flags, BDEV_FS, fs_type);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#535: FILE: fs/block_dev.c:957:
+	s =3D sget(fs_type, test_bdev_super, set_bdev_super, bdev);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#543: FILE: fs/block_dev.c:965:
+			s =3D ERR_PTR(-EBUSY);
 			  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#549: FILE: fs/block_dev.c:971:
+		s->s_flags =3D flags;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#551: FILE: fs/block_dev.c:973:
+		s->s_old_blocksize =3D block_size(bdev);
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#553: FILE: fs/block_dev.c:975:
+		error =3D fill_super(s, data, flags & MS_VERBOSE ? 1 : 0);
 		      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#554: FILE: fs/block_dev.c:976:
+		if (error) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#557: FILE: fs/block_dev.c:979:
+			s =3D ERR_PTR(error);
 			  ^

CHECK:BRACES: Unbalanced braces around else statement
#558: FILE: fs/block_dev.c:980:
+		} else

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#559: FILE: fs/block_dev.c:981:
+			s->s_flags |=3D MS_ACTIVE;
 			           ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#569: FILE: fs/block_dev.c:991:
+EXPORT_SYMBOL(get_sb_bdev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#573: FILE: fs/block_dev.c:995:
+	struct block_device *bdev =3D sb->s_bdev;
 	                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#574: FILE: fs/block_dev.c:996:
+	struct block_device *bdev =3D sb->s_bdev;
+	generic_shutdown_super(sb);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#579: FILE: fs/block_dev.c:1001:
+EXPORT_SYMBOL(kill_block_super);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#953: FILE: fs/inode.c:1397:
+struct file_operations def_blk_fops =3D {
                                     ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#953: FILE: fs/inode.c:1397:
+struct file_operations def_blk_fops =3D {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#954: FILE: fs/inode.c:1398:
+	.open	=3D no_bdev_open,
 	     	^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1019: FILE: fs/mpage.c:694:
+			}=20
 			 ^

ERROR:SPACING: space required after that close brace '}'
#1019: FILE: fs/mpage.c:694:
+			}=20

CHECK:BRACES: Unbalanced braces around else statement
#1020: FILE: fs/mpage.c:695:
+			else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1188: FILE: fs/sync.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1189: FILE: fs/sync.c:2:
+ *  linux/fs/sync.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1245: FILE: fs/sync.c:57:
+		printk("Emergency Sync complete\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1262: FILE: fs/sync.c:74:
+ * filp may be NULL if called via the msync of a vma.
    ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1264: FILE: fs/sync.c:76:
+=20
 ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1265: FILE: fs/sync.c:77:
+int file_fsync(struct file *filp, struct dentry *dentry, int datasync)
                             ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1267: FILE: fs/sync.c:79:
+	struct inode * inode =3D dentry->d_inode;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1267: FILE: fs/sync.c:79:
+	struct inode * inode =3D dentry->d_inode;
 	                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1268: FILE: fs/sync.c:80:
+	struct super_block * sb;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1275: FILE: fs/sync.c:87:
+	sb =3D inode->i_sb;
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1282: FILE: fs/sync.c:94:
+	ret =3D sync_blockdev(sb->s_bdev);
 	    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1289: FILE: fs/sync.c:101:
+	struct file * file;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1290: FILE: fs/sync.c:102:
+	struct dentry * dentry;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1291: FILE: fs/sync.c:103:
+	struct inode * inode;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1294: FILE: fs/sync.c:106:
+	ret =3D -EBADF;
 	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1294: FILE: fs/sync.c:106:
+	ret =3D -EBADF;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1295: FILE: fs/sync.c:107:
+	file =3D fget(fd);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1299: FILE: fs/sync.c:111:
+	dentry =3D file->f_dentry;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1300: FILE: fs/sync.c:112:
+	inode =3D dentry->d_inode;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1302: FILE: fs/sync.c:114:
+	ret =3D -EINVAL;
 	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1302: FILE: fs/sync.c:114:
+	ret =3D -EINVAL;
 	        ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#1310: FILE: fs/sync.c:122:
+	current->flags |=3D PF_SYNCWRITE;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1311: FILE: fs/sync.c:123:
+	ret =3D filemap_fdatawrite(inode->i_mapping);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1312: FILE: fs/sync.c:124:
+	err =3D file->f_op->fsync(file, dentry, 0);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1314: FILE: fs/sync.c:126:
+		ret =3D err;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1315: FILE: fs/sync.c:127:
+	err =3D filemap_fdatawait(inode->i_mapping);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1317: FILE: fs/sync.c:129:
+		ret =3D err;
 		    ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#1318: FILE: fs/sync.c:130:
+	current->flags &=3D ~PF_SYNCWRITE;
 	               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1329: FILE: fs/sync.c:141:
+	struct file * file;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1330: FILE: fs/sync.c:142:
+	struct dentry * dentry;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1331: FILE: fs/sync.c:143:
+	struct inode * inode;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1334: FILE: fs/sync.c:146:
+	ret =3D -EBADF;
 	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1334: FILE: fs/sync.c:146:
+	ret =3D -EBADF;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1335: FILE: fs/sync.c:147:
+	file =3D fget(fd);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1339: FILE: fs/sync.c:151:
+	dentry =3D file->f_dentry;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1340: FILE: fs/sync.c:152:
+	inode =3D dentry->d_inode;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1342: FILE: fs/sync.c:154:
+	ret =3D -EINVAL;
 	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1342: FILE: fs/sync.c:154:
+	ret =3D -EINVAL;
 	        ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#1347: FILE: fs/sync.c:159:
+	current->flags |=3D PF_SYNCWRITE;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1348: FILE: fs/sync.c:160:
+	ret =3D filemap_fdatawrite(inode->i_mapping);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1349: FILE: fs/sync.c:161:
+	err =3D file->f_op->fsync(file, dentry, 1);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1351: FILE: fs/sync.c:163:
+		ret =3D err;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1352: FILE: fs/sync.c:164:
+	err =3D filemap_fdatawait(inode->i_mapping);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1354: FILE: fs/sync.c:166:
+		ret =3D err;
 		    ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#1355: FILE: fs/sync.c:167:
+	current->flags &=3D ~PF_SYNCWRITE;
 	               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1381: FILE: fs/sync.c:192:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#1383: FILE: fs/sync.c:194:
+			"warning: process `%s' used the obsolete bdflush"
+			" system call\n", current->comm);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1384: FILE: fs/sync.c:195:
+		printk(KERN_INFO "Fix your initscripts?\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1387: FILE: fs/sync.c:198:
+	if (func =3D=3D 1)
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1387: FILE: fs/sync.c:198:
+	if (func =3D=3D 1)
 	            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1387: FILE: fs/sync.c:198:
+	if (func =3D=3D 1)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1418: FILE: include/linux/blkdev.h:607:
+static inline void blk_congestion_wait(int rw, long timeout) {}=20
                                                                ^

ERROR:SPACING: space required after that close brace '}'
#1418: FILE: include/linux/blkdev.h:607:
+static inline void blk_congestion_wait(int rw, long timeout) {}=20

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1446: FILE: include/linux/buffer_head.h:163:
+static inline int sync_mapping_buffers(struct address_space *mapping) { re=

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1446: FILE: include/linux/buffer_head.h:163:
+static inline int sync_mapping_buffers(struct address_space *mapping) { re=
                                                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <CONFIG_bLOCK>
#1483: FILE: include/linux/fs.h:1217:
+#ifdef CONFIG_bLOCK

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1544: FILE: init/do_mounts.c:269:
 }
+#ifdef CONFIG_BLOCK

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1632: FILE: mm/filemap.c:1694:
+	}=20
 	 ^

ERROR:SPACING: space required after that close brace '}'
#1632: FILE: mm/filemap.c:1694:
+	}=20

CHECK:BRACES: Unbalanced braces around else statement
#1634: FILE: mm/filemap.c:1696:
+	else {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1655: FILE: mm/highmem.c:302:
 }
+#ifdef CONFIG_BLOCK

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1696: FILE: mm/page-writeback.c:588:
+	struct address_space * const mapping =3D page->mapping;
 	                                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1699: FILE: mm/page-writeback.c:591:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1702: FILE: mm/page-writeback.c:594:
+=09
 ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1708: FILE: mm/page-writeback.c:600:
+	BUG();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1720: FILE: mm/swap.c:319:
 }
+#ifdef CONFIG_BLOCK

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1789: FILE: fs/Kconfig.embedded:1:
+config BINFMT_SCRIPT
+	bool "Kernel support for shell scripts" if EMBEDDED
+	default y
+	help
+	  Allow the removal of the code for executing shell scripts
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313272.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 75 errors, 18 warnings, 13 checks, 1616 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313272.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
