WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#56: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#82: FILE: fs/pipe.c:44:
+#define PIO_PGCOUNT	((131072+PAGE_SIZE-1)/PAGE_SIZE)
                    	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#82: FILE: fs/pipe.c:44:
+#define PIO_PGCOUNT	((131072+PAGE_SIZE-1)/PAGE_SIZE)
                    	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#82: FILE: fs/pipe.c:44:
+#define PIO_PGCOUNT	((131072+PAGE_SIZE-1)/PAGE_SIZE)
                    	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#97: FILE: fs/pipe.c:59:
+	int ret = 0;
+	while(walk != piolist && len) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#97: FILE: fs/pipe.c:59:
+	while(walk != piolist && len) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#98: FILE: fs/pipe.c:60:
+		struct pipe_pio* pio = list_entry(walk, struct pipe_pio, list);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#99: FILE: fs/pipe.c:61:
+		struct pipe_pio* pio = list_entry(walk, struct pipe_pio, list);
+		if (pio->len) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#105: FILE: fs/pipe.c:67:
+			i = pio->offset/PAGE_SIZE;
 			               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#106: FILE: fs/pipe.c:68:
+			off = pio->offset%PAGE_SIZE;
 			                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#108: FILE: fs/pipe.c:70:
+			if (this_len > PAGE_SIZE-off)
 			                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#109: FILE: fs/pipe.c:71:
+				this_len = PAGE_SIZE-off;
 				                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#115: FILE: fs/pipe.c:77:
+			ret2 = copy_to_user(buf, maddr+off, this_len);
 			                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#146: FILE: fs/pipe.c:108:
+	pio->offset = (unsigned long)buf&(PAGE_SIZE-1);
 	                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#146: FILE: fs/pipe.c:108:
+	pio->offset = (unsigned long)buf&(PAGE_SIZE-1);
 	                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#148: FILE: fs/pipe.c:110:
+	pio->len = PIO_PGCOUNT*PAGE_SIZE - pio->offset;
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: fs/pipe.c:113:
+	len = (pio->offset+pio->len+PAGE_SIZE-1)/PAGE_SIZE;
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: fs/pipe.c:113:
+	len = (pio->offset+pio->len+PAGE_SIZE-1)/PAGE_SIZE;
 	                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#151: FILE: fs/pipe.c:113:
+	len = (pio->offset+pio->len+PAGE_SIZE-1)/PAGE_SIZE;
 	                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#151: FILE: fs/pipe.c:113:
+	len = (pio->offset+pio->len+PAGE_SIZE-1)/PAGE_SIZE;
 	                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: fs/pipe.c:116:
+	len = get_user_pages(current, current->mm, (unsigned long)buf, len,
+			0, pio->pages, vmas);

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: fs/pipe.c:119:
+		int i;
+		for(i=0;i<len;i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#157: FILE: fs/pipe.c:119:
+		for(i=0;i<len;i++) {
 		     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#157: FILE: fs/pipe.c:119:
+		for(i=0;i<len;i++) {
 		       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#157: FILE: fs/pipe.c:119:
+		for(i=0;i<len;i++) {
 		         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#157: FILE: fs/pipe.c:119:
+		for(i=0;i<len;i++) {
 		             ^

ERROR:SPACING: space required before the open parenthesis '('
#157: FILE: fs/pipe.c:119:
+		for(i=0;i<len;i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#157: FILE: fs/pipe.c:119:
+		for(i=0;i<len;i++) {
+			flush_cache_page(vmas[i], addr+i*PAGE_SIZE);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: fs/pipe.c:120:
+			flush_cache_page(vmas[i], addr+i*PAGE_SIZE);
 			                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#158: FILE: fs/pipe.c:120:
+			flush_cache_page(vmas[i], addr+i*PAGE_SIZE);
 			                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#160: FILE: fs/pipe.c:122:
+		len = len*PAGE_SIZE-pio->offset;
 		         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#160: FILE: fs/pipe.c:122:
+		len = len*PAGE_SIZE-pio->offset;
 		                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: fs/pipe.c:138:
+	int i;
+	if (!pio->list.next)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#178: FILE: fs/pipe.c:140:
+	for (i=0;i<(pio->len+pio->offset+PAGE_SIZE-1)/PAGE_SIZE;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#178: FILE: fs/pipe.c:140:
+	for (i=0;i<(pio->len+pio->offset+PAGE_SIZE-1)/PAGE_SIZE;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#178: FILE: fs/pipe.c:140:
+	for (i=0;i<(pio->len+pio->offset+PAGE_SIZE-1)/PAGE_SIZE;i++) {
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: fs/pipe.c:140:
+	for (i=0;i<(pio->len+pio->offset+PAGE_SIZE-1)/PAGE_SIZE;i++) {
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: fs/pipe.c:140:
+	for (i=0;i<(pio->len+pio->offset+PAGE_SIZE-1)/PAGE_SIZE;i++) {
 	                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#178: FILE: fs/pipe.c:140:
+	for (i=0;i<(pio->len+pio->offset+PAGE_SIZE-1)/PAGE_SIZE;i++) {
 	                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#178: FILE: fs/pipe.c:140:
+	for (i=0;i<(pio->len+pio->offset+PAGE_SIZE-1)/PAGE_SIZE;i++) {
 	                                             ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#178: FILE: fs/pipe.c:140:
+	for (i=0;i<(pio->len+pio->offset+PAGE_SIZE-1)/PAGE_SIZE;i++) {
 	                                                       ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#179: FILE: fs/pipe.c:141:
+		if (pio->pages[i]) {
+			put_page(pio->pages[i]);
+		}

WARNING:MINMAX: min() should probably be min_t(size_t, PIPE_SIZE, pio->len)
#199: FILE: fs/pipe.c:161:
+		size_t j = min((size_t)PIPE_SIZE, pio->len);

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: fs/pipe.c:162:
+		size_t j = min((size_t)PIPE_SIZE, pio->len);
+		if (PIPE_LEN(*inode)) BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#200: FILE: fs/pipe.c:162:
+		if (PIPE_LEN(*inode)) BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: fs/pipe.c:162:
+		if (PIPE_LEN(*inode)) BUG();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#201: FILE: fs/pipe.c:163:
+		if (PIPE_START(*inode)) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#201: FILE: fs/pipe.c:163:
+		if (PIPE_START(*inode)) BUG();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#209: FILE: fs/pipe.c:171:
+}
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#268: FILE: fs/pipe.c:196:
+		int chars;
+		read = 0;

ERROR:SPACING: space prohibited after that open parenthesis '('
#269: FILE: fs/pipe.c:197:
+		while( (chars = PIPE_LEN(*inode)) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#269: FILE: fs/pipe.c:197:
+		while( (chars = PIPE_LEN(*inode)) ) {

ERROR:SPACING: space required before the open parenthesis '('
#269: FILE: fs/pipe.c:197:
+		while( (chars = PIPE_LEN(*inode)) ) {

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#271: FILE: fs/pipe.c:199:
+			int offset = PIPE_START(*inode)%PIPE_BUF;
 			                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: fs/pipe.c:200:
+			int offset = PIPE_START(*inode)%PIPE_BUF;
+			if (chars > count)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#274: FILE: fs/pipe.c:202:
+			if (chars > PIPE_SIZE-offset)
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#275: FILE: fs/pipe.c:203:
+				chars = PIPE_SIZE-offset;
 				                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#276: FILE: fs/pipe.c:204:
+			if (unlikely(copy_to_user(buf, pipebuf+offset, chars))) {
 			                                      ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#328: FILE: fs/pipe.c:243:
 
+		}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#329: FILE: fs/pipe.c:244:
+		if (PIPE_PIOLEN(*inode) || PIPE_LEN(*inode)) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#329: FILE: fs/pipe.c:244:
+		if (PIPE_PIOLEN(*inode) || PIPE_LEN(*inode)) BUG();

ERROR:SPACING: space required before the open parenthesis '('
#454: FILE: fs/pipe.c:304:
+	for(;;) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: fs/pipe.c:316:
+		while(start = PIPE_LEN(*inode),chars = PIPE_SIZE - start, chars >= min) {
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#476: FILE: fs/pipe.c:316:
+		while(start = PIPE_LEN(*inode),chars = PIPE_SIZE - start, chars >= min) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#487: FILE: fs/pipe.c:323:
+			if (unlikely(copy_from_user(PIPE_BASE(*inode)+start,
 			                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: fs/pipe.c:324:
+			if (unlikely(copy_from_user(PIPE_BASE(*inode)+start,
+						buf, chars))) {

WARNING:TYPO_SPELLING: 'uppon' may be misspelled - perhaps 'upon'?
#565: FILE: fs/pipe.c:373:
+		 * uppon successful completion of write(2).
 		   ^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#567: FILE: fs/pipe.c:375:
+		inode->i_ctime = inode->i_mtime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: fs/pipe.c:429:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#727: FILE: include/linux/mm.h:435:
+int get_user_pages(struct task_struct *tsk, struct mm_struct *mm, unsigned long start,
+		int len, int write, int force, struct page **pages, struct vm_area_struct **vmas);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: mm/memory.c:410:
+static struct page * follow_page(struct mm_struct *mm, unsigned long address, int write) $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#743: FILE: mm/memory.c:410:
+static struct page * follow_page(struct mm_struct *mm, unsigned long address, int write) 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#759: FILE: mm/memory.c:453:
+int get_user_pages(struct task_struct *tsk, struct mm_struct *mm, unsigned long start,
+		int len, int write, int force, struct page **pages, struct vm_area_struct **vmas)

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#764: FILE: mm/memory.c:458:
+		struct vm_area_struct *	vma;

ERROR:SPACING: space prohibited after that open parenthesis '('
#768: FILE: mm/memory.c:462:
+		if ( !vma ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#770: FILE: mm/memory.c:464:
+^I^I     ^I((write && (!(vma->vm_flags & VM_WRITE))) ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#770: FILE: mm/memory.c:464:
+^I^I     ^I((write && (!(vma->vm_flags & VM_WRITE))) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#771: FILE: mm/memory.c:465:
+^I^I    ^I (!write && (!(vma->vm_flags & VM_READ))) ) )) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#771: FILE: mm/memory.c:465:
+^I^I    ^I (!write && (!(vma->vm_flags & VM_READ))) ) )) {$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#771: FILE: mm/memory.c:465:
+		    	 (!write && (!(vma->vm_flags & VM_READ))) ) )) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#772: FILE: mm/memory.c:466:
+			if (i) return i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#779: FILE: mm/memory.c:473:
+			struct page *map;
+			while (!(map = follow_page(mm, start, write))) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#789: FILE: mm/memory.c:483:
+					if (i) return i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#792: FILE: mm/memory.c:486:
+					if (i) return i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#799: FILE: mm/memory.c:493:
+				if (pages[i]) get_page(pages[i]);

ERROR:SPACING: space required before the open parenthesis '('
#806: FILE: mm/memory.c:500:
+		} while(len && start < vma->vm_end);

ERROR:SPACING: space required before the open parenthesis '('
#808: FILE: mm/memory.c:502:
+	} while(len);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#839: FILE: mm/memory.c:524:
+	pgcount = (va + len + PAGE_SIZE - 1)/PAGE_SIZE - va/PAGE_SIZE;
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#839: FILE: mm/memory.c:524:
+	pgcount = (va + len + PAGE_SIZE - 1)/PAGE_SIZE - va/PAGE_SIZE;
 	                                                   ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#841: FILE: mm/memory.c:526:
+	if (!pgcount) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#841: FILE: mm/memory.c:526:
+	if (!pgcount) BUG();

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#851: FILE: mm/memory.c:532:
+	iobuf->offset = va & (PAGE_SIZE-1);
 	                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: mm/memory.c:539:
+	err = get_user_pages(current, mm, va, pgcount,
+			(rw==READ), 0, iobuf->maplist, NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#909: FILE: mm/memory.c:539:
+			(rw==READ), 0, iobuf->maplist, NULL);
 			   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#913: FILE: mm/memory.c:543:
+		dprintk ("map_user_kiobuf: end %d\n", err);

WARNING:TYPO_SPELLING: 'superflous' may be misspelled - perhaps 'superfluous'?
#918: FILE: mm/memory.c:548:
+		/* FIXME: flush superflous for rw==READ,
 		                ^^^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#968: FILE: mm/memory.c:1459:
+		BUG();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#969: FILE: mm/memory.c:1460:
+	len = (end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE;
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#969: FILE: mm/memory.c:1460:
+	len = (end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE;
 	                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#969: FILE: mm/memory.c:1460:
+	len = (end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE;
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#969: FILE: mm/memory.c:1460:
+	len = (end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE;
 	                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#969: FILE: mm/memory.c:1460:
+	len = (end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE;
 	                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#971: FILE: mm/memory.c:1462:
+	ret = get_user_pages(current, current->mm, addr,
+			len, write, 0, NULL, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#982: FILE: kernel/ptrace.c:89:
+ * Source/target buffer must be kernel space, $

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#1110: FILE: kernel/ptrace.c:110:
+	/* ignore errors, just check how much was sucessfully transfered */
 	                                          ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1116: FILE: kernel/ptrace.c:116:
+		ret = get_user_pages(current, mm, addr, 1,
+				write, 1, &page, &vma);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1121: FILE: kernel/ptrace.c:121:
+		offset = addr & (PAGE_SIZE-1);
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1122: FILE: kernel/ptrace.c:122:
+		if (bytes > PAGE_SIZE-offset)
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1123: FILE: kernel/ptrace.c:123:
+			bytes = PAGE_SIZE-offset;
 			                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1144: FILE: kernel/ptrace.c:143:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506071.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 23 warnings, 49 checks, 1047 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506071.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
