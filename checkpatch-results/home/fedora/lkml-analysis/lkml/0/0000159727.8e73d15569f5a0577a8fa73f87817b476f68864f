WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#120: 
Signed-off-by:  James Cleverdon <jamesclv@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#168: FILE: arch/i386/kernel/io_apic.c:1048:
+static u8 gsi_2_irq[NR_IRQ_VECTORS] = { [0 ... NR_IRQ_VECTORS-1] = 0xFF };
                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#185: FILE: arch/i386/kernel/io_apic.c:1065:
+	BUG_ON(gsi >= NR_IRQ_VECTORS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:INDENTED_LABEL: labels should not be indented
#196: FILE: arch/i386/kernel/io_apic.c:1076:
+  try_again:

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#211: FILE: arch/i386/kernel/io_apic.c:1091:
+		panic("gsi_irq_sharing: didn't find an IRQ using vector 0x%02X for GSI %d", vector, gsi);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gsi_irq_sharing', this function's name, in a string
#211: FILE: arch/i386/kernel/io_apic.c:1091:
+		panic("gsi_irq_sharing: didn't find an IRQ using vector 0x%02X for GSI %d", vector, gsi);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#215: FILE: arch/i386/kernel/io_apic.c:1095:
+		printk(KERN_INFO "GSI %d sharing vector 0x%02X and IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: arch/i386/kernel/io_apic.c:1096:
+		printk(KERN_INFO "GSI %d sharing vector 0x%02X and IRQ %d\n",
+				gsi, vector, i);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#222: FILE: arch/i386/kernel/io_apic.c:1102:
+	BUG_ON(i >= NR_IRQS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#227: FILE: arch/i386/kernel/io_apic.c:1107:
+	printk(KERN_INFO "GSI %d assigned vector 0x%02X and IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: arch/i386/kernel/io_apic.c:1108:
+	printk(KERN_INFO "GSI %d assigned vector 0x%02X and IRQ %d\n",
+			gsi, vector, i);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#253: FILE: arch/i386/kernel/io_apic.c:1203:
+	BUG_ON(irq != AUTO_ASSIGN && (unsigned)irq >= NR_IRQ_VECTORS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#253: FILE: arch/i386/kernel/io_apic.c:1203:
+	BUG_ON(irq != AUTO_ASSIGN && (unsigned)irq >= NR_IRQ_VECTORS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#324: FILE: arch/x86_64/kernel/io_apic.c:91:
+	BUG_ON(irq >= NR_IRQS);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#345: FILE: arch/x86_64/kernel/io_apic.c:589:
+static u8 gsi_2_irq[NR_IRQ_VECTORS] = { [0 ... NR_IRQ_VECTORS-1] = 0xFF };
                                                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#362: FILE: arch/x86_64/kernel/io_apic.c:606:
+	BUG_ON(gsi >= NR_IRQ_VECTORS);

WARNING:INDENTED_LABEL: labels should not be indented
#373: FILE: arch/x86_64/kernel/io_apic.c:617:
+  try_again:

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#388: FILE: arch/x86_64/kernel/io_apic.c:632:
+		panic("gsi_irq_sharing: didn't find an IRQ using vector 0x%02X for GSI %d", vector, gsi);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gsi_irq_sharing', this function's name, in a string
#388: FILE: arch/x86_64/kernel/io_apic.c:632:
+		panic("gsi_irq_sharing: didn't find an IRQ using vector 0x%02X for GSI %d", vector, gsi);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#392: FILE: arch/x86_64/kernel/io_apic.c:636:
+		printk(KERN_INFO "GSI %d sharing vector 0x%02X and IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: arch/x86_64/kernel/io_apic.c:637:
+		printk(KERN_INFO "GSI %d sharing vector 0x%02X and IRQ %d\n",
+				gsi, vector, i);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#399: FILE: arch/x86_64/kernel/io_apic.c:643:
+	BUG_ON(i >= NR_IRQS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#404: FILE: arch/x86_64/kernel/io_apic.c:648:
+	printk(KERN_INFO "GSI %d assigned vector 0x%02X and IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: arch/x86_64/kernel/io_apic.c:649:
+	printk(KERN_INFO "GSI %d assigned vector 0x%02X and IRQ %d\n",
+			gsi, vector, i);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#424: FILE: arch/x86_64/kernel/io_apic.c:692:
+	BUG_ON(irq >= NR_IRQS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#432: FILE: arch/x86_64/kernel/io_apic.c:708:
+	BUG_ON(irq >= NR_IRQS);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#447: FILE: arch/x86_64/kernel/io_apic.c:736:
+	BUG_ON(irq != AUTO_ASSIGN && (unsigned)irq >= NR_IRQ_VECTORS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#447: FILE: arch/x86_64/kernel/io_apic.c:736:
+	BUG_ON(irq != AUTO_ASSIGN && (unsigned)irq >= NR_IRQ_VECTORS);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#510: FILE: include/asm-i386/apic.h:111:
+extern int gsi_irq_sharing(int gsi);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#534: FILE: include/asm-x86_64/apic.h:101:
+extern int gsi_irq_sharing(int gsi);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159727.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 22 warnings, 8 checks, 365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159727.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
