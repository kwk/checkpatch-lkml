WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -urpN -X dontdiff linux-2.6.7/arch/x86_64/kernel/mce.c linux-2.6.7-rcu_dereference/arch/x86_64/kernel/mce.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: fs/dcache.c:971:
+^Ihlist_for_each_rcu(node, head) { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: include/linux/list.h:423:
+        ^Ipos = rcu_dereference(pos->next), prefetch(pos->next))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: include/linux/list.h:423:
+        ^Ipos = rcu_dereference(pos->next), prefetch(pos->next))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: include/linux/list.h:423:
+        ^Ipos = rcu_dereference(pos->next), prefetch(pos->next))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: include/linux/list.h:427:
+        ^Ipos = rcu_dereference(pos->next))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: include/linux/list.h:427:
+        ^Ipos = rcu_dereference(pos->next))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: include/linux/list.h:427:
+        ^Ipos = rcu_dereference(pos->next))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: include/linux/list.h:459:
+^I     ^I^I^I   typeof(*pos), member)),^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: include/linux/list.h:459:
+^I     ^I^I^I   typeof(*pos), member)),^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: include/linux/list.h:475:
+        ^I(pos) = rcu_dereference((pos)->next), prefetch((pos)->next))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: include/linux/list.h:475:
+        ^I(pos) = rcu_dereference((pos)->next), prefetch((pos)->next))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: include/linux/list.h:475:
+        ^I(pos) = rcu_dereference((pos)->next), prefetch((pos)->next))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#176: FILE: include/linux/list.h:625:
+#define hlist_for_each_rcu(pos, head) \
+	for (pos = (head)->first; pos && ({ prefetch(pos->next); 1; }); \
+	     pos = rcu_dereference(pos->next))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: ipc/util.c:469:
+^I * smp_rmb() has effect on all CPUs.  rcu_dereference() $

ERROR:SPACING: space required before the open parenthesis '('
#289: FILE: net/decnet/dn_route.c:1177:
+		for(rt = rcu_dereference(dn_rt_hash_table[hash].chain); rt;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#300: FILE: net/decnet/dn_route.c:1456:
+	for(rt = rcu_dereference(dn_rt_hash_table[hash].chain); rt != NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rt"
#300: FILE: net/decnet/dn_route.c:1456:
+	for(rt = rcu_dereference(dn_rt_hash_table[hash].chain); rt != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#311: FILE: net/decnet/dn_route.c:1650:
+		for(rt = rcu_dereference(dn_rt_hash_table[h].chain), idx = 0;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#348: FILE: net/ipv4/ip_input.c:238:
+		if ((ipprot = rcu_dereference(inet_protos[hash])) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#435: FILE: net/ipv6/ip6_input.c:170:
+	if ((ipprot = rcu_dereference(inet6_protos[hash])) != NULL) {

WARNING:BAD_SIGN_OFF: Non-standard signature: Submitted-by:
#443: 
Submitted-by: <paulmck@us.ibm.com> AKA <paulmck@agora.rdrop.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 9 warnings, 2 checks, 333 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
