CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#94: FILE: arch/powerpc/platforms/85xx/mpc85xx.h:18:
+extern int add_bridge(struct device_node *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#158: FILE: arch/powerpc/platforms/85xx/mpc85xx_ads.c:125:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#188: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#193: FILE: arch/powerpc/platforms/85xx/pci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#215: FILE: arch/powerpc/platforms/85xx/pci.c:23:
+#include <asm/atomic.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#216: FILE: arch/powerpc/platforms/85xx/pci.c:24:
+#include <asm/io.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#224: FILE: arch/powerpc/platforms/85xx/pci.c:32:
+#define DBG(x...) printk(x)

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#229: FILE: arch/powerpc/platforms/85xx/pci.c:37:
+int mpc85xx_pci2_busno = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:SPACING: No space is necessary after a cast
#247: FILE: arch/powerpc/platforms/85xx/pci.c:55:
+	bus_range = (int *) get_property(dev, "bus-range", &len);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus_range"
#248: FILE: arch/powerpc/platforms/85xx/pci.c:56:
+	if (bus_range == NULL || len < 2 * sizeof(int)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#249: FILE: arch/powerpc/platforms/85xx/pci.c:57:
+		printk(KERN_WARNING "Can't get bus-range for %s, assume"

WARNING:SPLIT_STRING: quoted string split across lines
#250: FILE: arch/powerpc/platforms/85xx/pci.c:58:
+		printk(KERN_WARNING "Can't get bus-range for %s, assume"
+		       " bus 0\n", dev->full_name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#263: FILE: arch/powerpc/platforms/85xx/pci.c:71:
+	if ((rsrc.start & 0xfffff) == 0x8000) {
+		setup_indirect_pci(hose, immr + 0x8000, immr + 0x8004);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#274: FILE: arch/powerpc/platforms/85xx/pci.c:82:
+	printk(KERN_INFO "Found MPC85xx PCI host bridge at 0x%08lx. "

WARNING:SPLIT_STRING: quoted string split across lines
#275: FILE: arch/powerpc/platforms/85xx/pci.c:83:
+	printk(KERN_INFO "Found MPC85xx PCI host bridge at 0x%08lx. "
+	       "Firmware bus number: %d->%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: arch/powerpc/platforms/85xx/pci.c:87:
+	DBG(" ->Hose at 0x%p, cfg_addr=0x%p,cfg_data=0x%p\n",
+		hose, hose->cfg_addr, hose->cfg_data);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092828.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 7 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092828.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
