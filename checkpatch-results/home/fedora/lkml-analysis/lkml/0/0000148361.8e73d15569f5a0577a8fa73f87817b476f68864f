WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
eg. on x86-64 sizeof(swp_entry_t) = 8.  This causes swsusp to skip some pagedir

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#63: FILE: kernel/power/power.h:22:
+	unsigned		pb_swp_pages;

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#65: FILE: kernel/power/power.h:24:
+	swp_entry_t		* pb_swp_mem[MAX_PB_SWP_PAGES];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#90: FILE: kernel/power/swsusp.c:505:
+		     k < PAGE_SIZE/sizeof(swp_entry_t); k++, entry++)
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#105: FILE: kernel/power/swsusp.c:521:
+	unsigned k, n, pages = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#107: FILE: kernel/power/swsusp.c:523:
+	swp_entry_t * buf;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#109: FILE: kernel/power/swsusp.c:525:
+	if (!(buf = (swp_entry_t *)get_zeroed_page(GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#122: FILE: kernel/power/swsusp.c:537:
+			if (k >= PAGE_SIZE/sizeof(swp_entry_t)) {
 			                  ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#128: FILE: kernel/power/swsusp.c:543:
+					if (buf) {
[...]
+					} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#132: FILE: kernel/power/swsusp.c:547:
+					} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#145: FILE: kernel/power/swsusp.c:560:
+		printk("done (%u pages)\n", pages);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#159: FILE: kernel/power/swsusp.c:1455:
+	unsigned k, n = 0, pages = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#161: FILE: kernel/power/swsusp.c:1457:
+	swp_entry_t * buf;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#167: FILE: kernel/power/swsusp.c:1463:
+	if (!(buf = (swp_entry_t *)get_zeroed_page(GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#175: FILE: kernel/power/swsusp.c:1469:
+	if (!(offset = swp_offset(swsusp_info.pb_swp[n++])))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#178: FILE: kernel/power/swsusp.c:1472:
+	if ((error = bio_read_page(offset, (swp_entry_t *)buf)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: kernel/power/swsusp.c:1476:
+	for_each_pb_page (pbpage, pblist) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#191: FILE: kernel/power/swsusp.c:1484:
+		if (!error) {
[...]
+		} else
[...]

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#193: FILE: kernel/power/swsusp.c:1486:
+			if (k >= PAGE_SIZE/sizeof(swp_entry_t)) {
 			                  ^

CHECK:BRACES: Unbalanced braces around else statement
#203: FILE: kernel/power/swsusp.c:1496:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#212: FILE: kernel/power/swsusp.c:1504:
+		BUG_ON(pages != swsusp_info.pagedir_pages);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148361.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 7 warnings, 7 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148361.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
