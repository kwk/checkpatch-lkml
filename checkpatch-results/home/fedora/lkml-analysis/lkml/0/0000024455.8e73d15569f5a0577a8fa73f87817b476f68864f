ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/ata/sata_nv.c:97:
+^INV_ADMA_SGTBL_LEN^I^I= (1024 - NV_ADMA_CPB_SZ) / $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/ata/sata_nv.c:163:
+^INV_ADMA_STAT_ERR^I^I= NV_ADMA_STAT_CPBERR | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: drivers/ata/sata_nv.c:164:
+^I ^I^I^I^I  NV_ADMA_STAT_TIMEOUT,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: drivers/ata/sata_nv.c:164:
+^I ^I^I^I^I  NV_ADMA_STAT_TIMEOUT,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#226: FILE: drivers/ata/sata_nv.c:191:
+/* ADMA Command Parameter Block
+   The first 5 SG segments are stored inside the Command Parameter Block itself.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#228: FILE: drivers/ata/sata_nv.c:193:
+   memory area indicated by next_aprd. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/ata/sata_nv.c:199:
+ ^Iu8^I^I^Ilen;           /* 3  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: drivers/ata/sata_nv.c:199:
+ ^Iu8^I^I^Ilen;           /* 3  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/ata/sata_nv.c:199:
+ ^Iu8^I^I^Ilen;           /* 3  */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#244: FILE: drivers/ata/sata_nv.c:209:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#253: FILE: drivers/ata/sata_nv.c:218:
+#define NV_ADMA_CHECK_INTR(GCTL, PORT) ((GCTL) & ( 1 << (19 + (12 * (PORT)))))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: drivers/ata/sata_nv.c:468:
+^I^I.flags^I^I= ATA_FLAG_SATA | ATA_FLAG_NO_LEGACY | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/ata/sata_nv.c:492:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: drivers/ata/sata_nv.c:498:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#395: FILE: drivers/ata/sata_nv.c:510:
+		/* Subtract 1 since an extra entry may be needed for padding, see
+		   libata-scsi.c */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#395: FILE: drivers/ata/sata_nv.c:510:
+		   libata-scsi.c */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#398: FILE: drivers/ata/sata_nv.c:513:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#398: FILE: drivers/ata/sata_nv.c:513:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: drivers/ata/sata_nv.c:518:
+^I$

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#407: FILE: drivers/ata/sata_nv.c:522:
+	ata_port_printk(ap, KERN_INFO,
+		"bounce limit 0x%llX, segment boundary 0x%lX, hw segs %hu\n",
+		(unsigned long long)bounce_limit, segment_boundary, sg_tablesize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/ata/sata_nv.c:523:
+	ata_port_printk(ap, KERN_INFO,
+		"bounce limit 0x%llX, segment boundary 0x%lX, hw segs %hu\n",

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#426: FILE: drivers/ata/sata_nv.c:541:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#426: FILE: drivers/ata/sata_nv.c:541:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: drivers/ata/sata_nv.c:560:
+^I^I^I^I^I        unsigned int port_no)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: drivers/ata/sata_nv.c:560:
+static inline void __iomem *__nv_adma_ctl_block(void __iomem *mmio,
+					        unsigned int port_no)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#493: FILE: drivers/ata/sata_nv.c:608:
+	if(complete || force_err)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: drivers/ata/sata_nv.c:608:
+	if(complete || force_err)

WARNING:LINE_SPACING: Missing a blank line after declarations
#496: FILE: drivers/ata/sata_nv.c:611:
+		struct ata_queued_cmd *qc = ata_qc_from_tag(ap, cpb_num);
+		if(likely(qc)) {

ERROR:SPACING: space required before the open parenthesis '('
#496: FILE: drivers/ata/sata_nv.c:611:
+		if(likely(qc)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#499: FILE: drivers/ata/sata_nv.c:614:
+			/* Only use the ATA port status for non-NCQ commands.
+			   For NCQ commands the current status may have nothing to do with

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#500: FILE: drivers/ata/sata_nv.c:615:
+			   the command just completed. */

ERROR:SPACING: space required before the open parenthesis '('
#501: FILE: drivers/ata/sata_nv.c:616:
+			if(qc->tf.protocol != ATA_PROT_NCQ)

ERROR:SPACING: space required before the open parenthesis '('
#504: FILE: drivers/ata/sata_nv.c:619:
+			if(have_err || force_err)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#508: FILE: drivers/ata/sata_nv.c:623:
+			DPRINTK("Completing qc from tag %d with err_mask %u\n",cpb_num,
 			                                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#536: FILE: drivers/ata/sata_nv.c:651:
+				struct ata_queued_cmd *qc;
+				VPRINTK("in ATA register mode\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#538: FILE: drivers/ata/sata_nv.c:653:
+				if (qc && (!(qc->tf.flags & ATA_TFLAG_POLLING)))
[...]
+				else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#540: FILE: drivers/ata/sata_nv.c:655:
+				else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#542: FILE: drivers/ata/sata_nv.c:657:
+					/* No request pending?  Clear interrupt status
+					   anyway, in case there's one pending. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#542: FILE: drivers/ata/sata_nv.c:657:
+					   anyway, in case there's one pending. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: drivers/ata/sata_nv.c:663:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: drivers/ata/sata_nv.c:666:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: drivers/ata/sata_nv.c:668:
+^I^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#555: FILE: drivers/ata/sata_nv.c:670:
+			/* Seems necessary to clear notifiers even when they were 0.
+			   Otherwise we seem to stop receiving further interrupts.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#556: FILE: drivers/ata/sata_nv.c:671:
+			   Unsure why. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#559: FILE: drivers/ata/sata_nv.c:674:
+			if( !NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no) && !notifier &&

ERROR:SPACING: space required before the open parenthesis '('
#559: FILE: drivers/ata/sata_nv.c:674:
+			if( !NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no) && !notifier &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/ata/sata_nv.c:675:
+			if( !NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no) && !notifier &&
+			    !notifier_error)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#567: FILE: drivers/ata/sata_nv.c:682:
+			/* Clear status. Ensure the controller sees the clearing before we start
+			   looking at any of the CPB statuses, so that any CPB completions after

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#568: FILE: drivers/ata/sata_nv.c:683:
+			   this point in the handler will raise another interrupt. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: drivers/ata/sata_nv.c:706:
+^I^I^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#592: FILE: drivers/ata/sata_nv.c:707:
+				if(ata_tag_valid(ap->active_tag))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/ata/sata_nv.c:710:
+					nv_adma_check_cpb(ap, ap->active_tag, have_global_err ||
+						(notifier_error & (1 << ap->active_tag)));

CHECK:BRACES: Unbalanced braces around else statement
#596: FILE: drivers/ata/sata_nv.c:711:
+				else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#599: FILE: drivers/ata/sata_nv.c:714:
+					u32 active = ap->sactive;
+					while( (pos = ffs(active)) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#599: FILE: drivers/ata/sata_nv.c:714:
+					while( (pos = ffs(active)) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#599: FILE: drivers/ata/sata_nv.c:714:
+					while( (pos = ffs(active)) ) {

ERROR:SPACING: space required before the open parenthesis '('
#599: FILE: drivers/ata/sata_nv.c:714:
+					while( (pos = ffs(active)) ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: drivers/ata/sata_nv.c:717:
+						nv_adma_check_cpb(ap, pos, have_global_err ||
+							(notifier_error & (1 << pos)) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#602: FILE: drivers/ata/sata_nv.c:717:
+							(notifier_error & (1 << pos)) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#603: FILE: drivers/ata/sata_nv.c:718:
+						active &= ~(1 << pos );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: drivers/ata/sata_nv.c:738:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: drivers/ata/sata_nv.c:743:
+^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: drivers/ata/sata_nv.c:744:
+^I/** clear legacy status */^I$

ERROR:SPACING: space required before the open parenthesis '('
#639: FILE: drivers/ata/sata_nv.c:754:
+	if(pp->flags & NV_ADMA_PORT_REGISTER_MODE) {

ERROR:SPACING: space required before the open parenthesis '('
#653: FILE: drivers/ata/sata_nv.c:768:
+	if(pp->flags & NV_ADMA_PORT_REGISTER_MODE) {

ERROR:SPACING: space required before the open parenthesis '('
#667: FILE: drivers/ata/sata_nv.c:782:
+	if(pp->flags & NV_ADMA_PORT_REGISTER_MODE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: drivers/ata/sata_nv.c:796:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#696: FILE: drivers/ata/sata_nv.c:811:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#742: FILE: drivers/ata/sata_nv.c:857:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#757: FILE: drivers/ata/sata_nv.c:872:
+^Iwritel(mem_dma & 0xFFFFFFFF, ^Immio + NV_ADMA_CPB_BASE_LOW);$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#758: FILE: drivers/ata/sata_nv.c:873:
+	writel((mem_dma >> 16 ) >> 16,	mmio + NV_ADMA_CPB_BASE_HIGH);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: drivers/ata/sata_nv.c:891:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#786: FILE: drivers/ata/sata_nv.c:901:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#786: FILE: drivers/ata/sata_nv.c:901:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited after that open parenthesis '('
#789: FILE: drivers/ata/sata_nv.c:904:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#789: FILE: drivers/ata/sata_nv.c:904:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#790: FILE: drivers/ata/sata_nv.c:905:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#816: FILE: drivers/ata/sata_nv.c:931:
+
+

CHECK:SPACING: No space is necessary after a cast
#826: FILE: drivers/ata/sata_nv.c:941:
+	ioport->cmd_addr	= (unsigned long) mmio;

CHECK:SPACING: No space is necessary after a cast
#827: FILE: drivers/ata/sata_nv.c:942:
+	ioport->data_addr	= (unsigned long) mmio + (ATA_REG_DATA * 4);

CHECK:SPACING: No space is necessary after a cast
#829: FILE: drivers/ata/sata_nv.c:944:
+	ioport->feature_addr	= (unsigned long) mmio + (ATA_REG_ERR * 4);

CHECK:SPACING: No space is necessary after a cast
#830: FILE: drivers/ata/sata_nv.c:945:
+	ioport->nsect_addr	= (unsigned long) mmio + (ATA_REG_NSECT * 4);

CHECK:SPACING: No space is necessary after a cast
#831: FILE: drivers/ata/sata_nv.c:946:
+	ioport->lbal_addr	= (unsigned long) mmio + (ATA_REG_LBAL * 4);

CHECK:SPACING: No space is necessary after a cast
#832: FILE: drivers/ata/sata_nv.c:947:
+	ioport->lbam_addr	= (unsigned long) mmio + (ATA_REG_LBAM * 4);

CHECK:SPACING: No space is necessary after a cast
#833: FILE: drivers/ata/sata_nv.c:948:
+	ioport->lbah_addr	= (unsigned long) mmio + (ATA_REG_LBAH * 4);

CHECK:SPACING: No space is necessary after a cast
#834: FILE: drivers/ata/sata_nv.c:949:
+	ioport->device_addr	= (unsigned long) mmio + (ATA_REG_DEVICE * 4);

CHECK:SPACING: No space is necessary after a cast
#836: FILE: drivers/ata/sata_nv.c:951:
+	ioport->command_addr	= (unsigned long) mmio + (ATA_REG_STATUS * 4);

CHECK:SPACING: No space is necessary after a cast
#838: FILE: drivers/ata/sata_nv.c:953:
+	ioport->ctl_addr	= (unsigned long) mmio + 0x20;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: drivers/ata/sata_nv.c:972:
+^I$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#907: FILE: drivers/ata/sata_nv.c:1022:
+		aprd = (idx < 5) ? &cpb->aprd[idx] : &pp->aprd[NV_ADMA_SGTBL_LEN * qc->tag + (idx-5)];

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#907: FILE: drivers/ata/sata_nv.c:1022:
+		aprd = (idx < 5) ? &cpb->aprd[idx] : &pp->aprd[NV_ADMA_SGTBL_LEN * qc->tag + (idx-5)];
 		                                                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#925: FILE: drivers/ata/sata_nv.c:1040:
+^Iif (!(qc->flags & ATA_QCFLAG_DMAMAP) || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#926: FILE: drivers/ata/sata_nv.c:1041:
+	if (!(qc->flags & ATA_QCFLAG_DMAMAP) || 
+	     qc->tf.protocol == ATA_PROT_ATAPI_DMA) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#932: FILE: drivers/ata/sata_nv.c:1047:
+^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#944: FILE: drivers/ata/sata_nv.c:1059:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#946: FILE: drivers/ata/sata_nv.c:1061:
+	/* Be paranoid and don't let the device see NV_CPB_CTL_CPB_VALID until we are
+	   finished filling in all of the contents */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#946: FILE: drivers/ata/sata_nv.c:1061:
+	   finished filling in all of the contents */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#957: FILE: drivers/ata/sata_nv.c:1072:
+^Iif (!(qc->flags & ATA_QCFLAG_DMAMAP) || $

CHECK:BRACES: braces {} should be used on all arms of this statement
#957: FILE: drivers/ata/sata_nv.c:1072:
+	if (!(qc->flags & ATA_QCFLAG_DMAMAP) || 
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: drivers/ata/sata_nv.c:1073:
+	if (!(qc->flags & ATA_QCFLAG_DMAMAP) || 
+	     qc->tf.protocol == ATA_PROT_ATAPI_DMA) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#963: FILE: drivers/ata/sata_nv.c:1078:
+		return ata_qc_issue_prot(qc);
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#963: FILE: drivers/ata/sata_nv.c:1078:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#967: FILE: drivers/ata/sata_nv.c:1082:
+	/* write append register, command tag in lower 8 bits
+	   and (number of cpbs to append -1) in top 8 bits */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#967: FILE: drivers/ata/sata_nv.c:1082:
+	   and (number of cpbs to append -1) in top 8 bits */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: drivers/ata/sata_nv.c:1085:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#971: FILE: drivers/ata/sata_nv.c:1086:
+	DPRINTK("Issued tag %u\n",qc->tag);
 	                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#986: FILE: drivers/ata/sata_nv.c:1283:
+	struct nv_adma_port_priv *pp = ap->private_data;
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {

ERROR:SPACING: space required before the open parenthesis '('
#986: FILE: drivers/ata/sata_nv.c:1283:
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#995: FILE: drivers/ata/sata_nv.c:1292:
+^I^I$

WARNING:SPLIT_STRING: quoted string split across lines
#997: FILE: drivers/ata/sata_nv.c:1294:
+		ata_port_printk(ap, KERN_ERR, "EH in ADMA mode, notifier 0x%X "
+			"notifier_error 0x%X gen_ctl 0x%X status 0x%X\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1000: FILE: drivers/ata/sata_nv.c:1297:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1000: FILE: drivers/ata/sata_nv.c:1297:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1000: FILE: drivers/ata/sata_nv.c:1297:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1000: FILE: drivers/ata/sata_nv.c:1297:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1000: FILE: drivers/ata/sata_nv.c:1297:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {

ERROR:SPACING: space required before the open parenthesis '('
#1000: FILE: drivers/ata/sata_nv.c:1297:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1002: FILE: drivers/ata/sata_nv.c:1299:
+			struct nv_adma_cpb *cpb = &pp->cpb[i];
+			if( cpb->ctl_flags || cpb->resp_flags )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1002: FILE: drivers/ata/sata_nv.c:1299:
+			if( cpb->ctl_flags || cpb->resp_flags )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1002: FILE: drivers/ata/sata_nv.c:1299:
+			if( cpb->ctl_flags || cpb->resp_flags )

ERROR:SPACING: space required before the open parenthesis '('
#1002: FILE: drivers/ata/sata_nv.c:1299:
+			if( cpb->ctl_flags || cpb->resp_flags )

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1004: FILE: drivers/ata/sata_nv.c:1301:
+				ata_port_printk(ap, KERN_ERR,
+					"CPB %d: ctl_flags 0x%x, resp_flags 0x%x\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1014: FILE: drivers/ata/sata_nv.c:1311:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1014: FILE: drivers/ata/sata_nv.c:1311:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1014: FILE: drivers/ata/sata_nv.c:1311:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1014: FILE: drivers/ata/sata_nv.c:1311:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1014: FILE: drivers/ata/sata_nv.c:1311:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)

ERROR:SPACING: space required before the open parenthesis '('
#1014: FILE: drivers/ata/sata_nv.c:1311:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1023: FILE: drivers/ata/sata_nv.c:1320:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1023: FILE: drivers/ata/sata_nv.c:1320:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1026: FILE: drivers/ata/sata_nv.c:1323:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1026: FILE: drivers/ata/sata_nv.c:1323:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1050: FILE: drivers/ata/sata_nv.c:1349:
+	if (	!printed_version++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: drivers/ata/sata_nv.c:1351:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1067: FILE: drivers/ata/sata_nv.c:1362:
+	if(type >= CK804 && adma_enabled) {

WARNING:PREFER_DEV_LEVEL: Prefer dev_notice(... to dev_printk(KERN_NOTICE, ...
#1068: FILE: drivers/ata/sata_nv.c:1363:
+		dev_printk(KERN_NOTICE, &pdev->dev, "Using ADMA mode\n");

ERROR:SPACING: space required before the open parenthesis '('
#1070: FILE: drivers/ata/sata_nv.c:1365:
+		if(!pci_set_dma_mask(pdev, DMA_64BIT_MASK) &&

ERROR:SPACING: space required before the open parenthesis '('
#1075: FILE: drivers/ata/sata_nv.c:1370:
+	if(!mask_set) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1087: FILE: drivers/ata/sata_nv.c:1381:
+	ppi[0] = ppi[1] = &nv_port_info[type];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024455.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 30 warnings, 29 checks, 1052 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024455.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
