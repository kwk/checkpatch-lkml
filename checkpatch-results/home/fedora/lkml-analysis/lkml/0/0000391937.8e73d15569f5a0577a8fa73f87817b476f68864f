WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -Nru linux-2.5.61/drivers/net/3c509.c linux98-2.5.61/drivers/net/3c509.c

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#38: FILE: drivers/net/3c509.c:60:
+/*
+  FIXES for PC-9800:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/net/8390.h:127:
+      defined(CONFIG_NET_CBUS)$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#223: FILE: drivers/net/Kconfig:1178:
+config NET_CBUS
+	bool "NEC PC-9800 C-bus cards"
+	depends on NET_ETHERNET && ISA && X86_PC9800
+	---help---
+	  If your network (Ethernet) card hasn't been mentioned yet and its
+	  bus system (that's the way the cards talks to the other components
+	  of your computer) is NEC PC-9800 C-Bus, say Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#231: FILE: drivers/net/Kconfig:1186:
+config NE2K_CBUS
+	tristate "Most NE2000-based Ethernet support"
+	depends on NET_CBUS
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#235: FILE: drivers/net/Kconfig:1190:
+config NE2K_CBUS_EGY98
+	bool "Melco EGY-98 support"
+	depends on NE2K_CBUS
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#239: FILE: drivers/net/Kconfig:1194:
+config NE2K_CBUS_LGY98
+	bool "Melco LGY-98 support"
+	depends on NE2K_CBUS
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#243: FILE: drivers/net/Kconfig:1198:
+config NE2K_CBUS_ICM
+	bool "ICM IF-27xxET support"
+	depends on NE2K_CBUS
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#247: FILE: drivers/net/Kconfig:1202:
+config NE2K_CBUS_IOLA98
+	bool "I-O DATA LA-98 support"
+	depends on NE2K_CBUS
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#251: FILE: drivers/net/Kconfig:1206:
+config NE2K_CBUS_CNET98EL
+	bool "Contec C-NET(98)E/L support"
+	depends on NE2K_CBUS
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#260: FILE: drivers/net/Kconfig:1215:
+config NE2K_CBUS_ATLA98
+	bool "Allied Telesis LA-98 Support"
+	depends on NE2K_CBUS
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#264: FILE: drivers/net/Kconfig:1219:
+config NE2K_CBUS_BDN
+	bool "ELECOM Laneed LD-BDN[123]A Support"
+	depends on NE2K_CBUS
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#268: FILE: drivers/net/Kconfig:1223:
+config NE2K_CBUS_NEC108
+	bool "NEC PC-9801-108 Support"
+	depends on NE2K_CBUS
+

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#305: FILE: drivers/net/Space.c:236:
+#if defined(CONFIG_NE2000) || defined(CONFIG_NE2K_CBUS)	/* ISA & PC-9800 CBUS (use ne2k-pci for PCI cards) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#317: FILE: drivers/net/at1700.c:38:
+/*
+	99/03/03  Allied Telesis RE1000 Plus support by T.Hagawa

WARNING:TYPO_SPELLING: 'Controll' may be misspelled - perhaps 'Control'?
#378: FILE: drivers/net/at1700.c:177:
+#define COL16CNTL		(0x0a01)/* Controll Reg for 16 collisions */
                  		           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#382: FILE: drivers/net/at1700.c:181:
+#define EEPROM_Ctrl ^I(0x1000)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#383: FILE: drivers/net/at1700.c:182:
+#define EEPROM_Data ^I(0x1200)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#431: FILE: drivers/net/at1700.c:383:
+			char re1000plus_irqmap[4] = {3, 5, 6, 12};
+			irq = re1000plus_irqmap[inb(ioaddr + IOCONFIG1) >> 6];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#483: FILE: drivers/net/at1700.c:537:
+#define eeprom_delay()	__asm__ ("out%B0 %%al,%0" :: "N"(0x5f))

WARNING:LINE_SPACING: Missing a blank line after declarations
#572: FILE: drivers/net/at1700.c:990:
+		int i;
+		for (i = 0; i < 0x2000; i += 0x200)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/net/ne.c:112:
+    {"LA/T-98?", "LA/T-98", {0x00, 0xa0, 0xb0}},^I/* I/O Data */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/net/ne.c:113:
+    {"EGY-98?", "EGY-98", {0x00, 0x40, 0x26}},^I^I/* Melco EGY98 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/net/ne.c:114:
+    {"ICM?", "ICM-27xx-ET", {0x00, 0x80, 0xc8}},^I/* ICM IF-27xx-ET */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/net/ne.c:115:
+    {"CNET-98/EL?", "CNET(98)E/L", {0x00, 0x80, 0x4C}},^I/* Contec CNET-98/EL */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#600: FILE: drivers/net/ne.c:123:
+#define NE_CMD^I ^IEI_SHIFT(0x00)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#645: FILE: drivers/net/ne.c:261:
+		printk(KERN_DEBUG "ne_probe(): entered.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_probe', this function's name, in a string
#645: FILE: drivers/net/ne.c:261:
+		printk(KERN_DEBUG "ne_probe(): entered.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#648: FILE: drivers/net/ne.c:264:
+	/* If CONFIG_NET_CBUS,
+	   we need dev->priv->reg_offset BEFORE to probe */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#648: FILE: drivers/net/ne.c:264:
+	   we need dev->priv->reg_offset BEFORE to probe */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#649: FILE: drivers/net/ne.c:265:
+	if (ne2k_cbus_init(dev) != 0) {
+		return -ENOMEM;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#656: FILE: drivers/net/ne.c:272:
+		const struct ne2k_cbus_hwinfo *hw = ne2k_cbus_get_hwinfo((int)(dev->mem_start & NE2K_CBUS_HARDWARE_TYPE_MASK));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#659: FILE: drivers/net/ne.c:275:
+			printk(KERN_DEBUG "ne_probe(): call ne_probe_cbus(base_addr=0x%x)\n", base_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#659: FILE: drivers/net/ne.c:275:
+			printk(KERN_DEBUG "ne_probe(): call ne_probe_cbus(base_addr=0x%x)\n", base_addr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_probe', this function's name, in a string
#659: FILE: drivers/net/ne.c:275:
+			printk(KERN_DEBUG "ne_probe(): call ne_probe_cbus(base_addr=0x%x)\n", base_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#669: FILE: drivers/net/ne.c:285:
+		printk(KERN_DEBUG "ne_probe(): base_addr is not specified.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_probe', this function's name, in a string
#669: FILE: drivers/net/ne.c:285:
+		printk(KERN_DEBUG "ne_probe(): base_addr is not specified.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#674: FILE: drivers/net/ne.c:290:
+		printk(KERN_DEBUG "ne_probe(): auto-probe start.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_probe', this function's name, in a string
#674: FILE: drivers/net/ne.c:290:
+		printk(KERN_DEBUG "ne_probe(): auto-probe start.\n");

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#677: FILE: drivers/net/ne.c:293:
+		const struct ne2k_cbus_hwinfo *hw = ne2k_cbus_get_hwinfo((int)(dev->mem_start & NE2K_CBUS_HARDWARE_TYPE_MASK));

WARNING:LINE_SPACING: Missing a blank line after declarations
#681: FILE: drivers/net/ne.c:297:
+			const unsigned short *plist;
+			for (plist = hw->portlist; *plist; plist++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#683: FILE: drivers/net/ne.c:299:
+				const struct ne2k_cbus_region *rlist;
+				for (rlist = hw->regionlist; rlist->range; rlist++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#684: FILE: drivers/net/ne.c:300:
+					if (check_region(*plist+rlist->start, rlist->range))
 					                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: drivers/net/ne.c:304:
+^I^I^I^I^I/* check_region() failed */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#692: FILE: drivers/net/ne.c:308:
+				if (ne_probe_cbus(dev,hw,*plist) == 0)
 				                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#692: FILE: drivers/net/ne.c:308:
+				if (ne_probe_cbus(dev,hw,*plist) == 0)
 				                        ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#692: FILE: drivers/net/ne.c:308:
+				if (ne_probe_cbus(dev,hw,*plist) == 0)
 				                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#698: FILE: drivers/net/ne.c:314:
+				const unsigned short *plist;
+				for(plist=hw->portlist; *plist; plist++){

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#698: FILE: drivers/net/ne.c:314:
+				for(plist=hw->portlist; *plist; plist++){
 				         ^

ERROR:SPACING: space required before the open brace '{'
#698: FILE: drivers/net/ne.c:314:
+				for(plist=hw->portlist; *plist; plist++){

ERROR:SPACING: space required before the open parenthesis '('
#698: FILE: drivers/net/ne.c:314:
+				for(plist=hw->portlist; *plist; plist++){

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#702: FILE: drivers/net/ne.c:318:
+						if (check_region(*plist+rlist->start, rlist->range))

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#702: FILE: drivers/net/ne.c:318:
+						if (check_region(*plist+rlist->start, rlist->range))
 						                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: drivers/net/ne.c:322:
+^I^I^I^I^I^I/* check_region() failed */ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#710: FILE: drivers/net/ne.c:326:
+					if (ne_probe_cbus(dev,hw,*plist) == 0)
 					                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#710: FILE: drivers/net/ne.c:326:
+					if (ne_probe_cbus(dev,hw,*plist) == 0)
 					                        ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#710: FILE: drivers/net/ne.c:326:
+					if (ne_probe_cbus(dev,hw,*plist) == 0)
 					                         ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#723: FILE: drivers/net/ne.c:339:
+static int __init ne_probe_cbus(struct net_device *dev, const struct ne2k_cbus_hwinfo *hw, int ioaddr)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#726: FILE: drivers/net/ne.c:342:
+		printk(KERN_DEBUG "ne_probe_cbus(): entered. (called from %p)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_probe_cbus', this function's name, in a string
#726: FILE: drivers/net/ne.c:342:
+		printk(KERN_DEBUG "ne_probe_cbus(): entered. (called from %p)\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#732: FILE: drivers/net/ne.c:348:
+		return ne_probe1(dev, ioaddr);
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#735: FILE: drivers/net/ne.c:351:
+		printk(KERN_DEBUG "ne_probe_cbus(): try to determine hardware types.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ne_probe_cbus', this function's name, in a string
#735: FILE: drivers/net/ne.c:351:
+		printk(KERN_DEBUG "ne_probe_cbus(): try to determine hardware types.\n");

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#738: FILE: drivers/net/ne.c:354:
+			if (ne_probe1(dev, ioaddr)==0)
 			                          ^

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ENODEV)
#742: FILE: drivers/net/ne.c:358:
+	return ENODEV;

CHECK:CAMELCASE: Avoid CamelCase: <neX000>
#754: FILE: drivers/net/ne.c:369:
+	int neX000, bad_card;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#761: FILE: drivers/net/ne.c:376:
+	const struct ne2k_cbus_hwinfo *hw = ne2k_cbus_get_hwinfo((int)(dev->mem_start & NE2K_CBUS_HARDWARE_TYPE_MASK));

WARNING:LINE_SPACING: Missing a blank line after declarations
#782: FILE: drivers/net/ne.c:397:
+		const struct ne2k_cbus_region *rlist;
+		for (rlist = hw->regionlist; rlist->range; rlist++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: drivers/net/ne.c:399:
+			if (!request_region(ioaddr + rlist->start,
+						rlist->range, dev->name))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#823: FILE: drivers/net/ne.c:450:
+		outb_p(E8390_NODMA | E8390_STOP, ioaddr+E8390_CMD);
 		                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#835: FILE: drivers/net/ne.c:473:
+		static const char pat[32] ="AbcdeFghijKlmnoPqrstUvwxyZ789012";
 		                          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#839: FILE: drivers/net/ne.c:477:
+		if (ei_debug > 2) {
+			printk(" [CNET98EL-specific initialize...");
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#840: FILE: drivers/net/ne.c:478:
+			printk(" [CNET98EL-specific initialize...");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#842: FILE: drivers/net/ne.c:480:
+		outb_p(E8390_NODMA | E8390_STOP, ioaddr+E8390_CMD); /* 0x20|0x1 */
 		                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#843: FILE: drivers/net/ne.c:481:
+		i=inb(ioaddr);
 		 ^

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ENODEV)
#845: FILE: drivers/net/ne.c:483:
+			return ENODEV;

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ENODEV)
#847: FILE: drivers/net/ne.c:485:
+			return ENODEV;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#848: FILE: drivers/net/ne.c:486:
+		outb_p(E8390_RXOFF, ioaddr+EN0_RXCR); /* out(ioaddr+0xc, 0x20) */
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#850: FILE: drivers/net/ne.c:488:
+		outb_p(ENDCFG_WTS|0x48, ioaddr+EN0_DCFG); /* 0x49 */
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#850: FILE: drivers/net/ne.c:488:
+		outb_p(ENDCFG_WTS|0x48, ioaddr+EN0_DCFG); /* 0x49 */
 		                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#851: FILE: drivers/net/ne.c:489:
+		outb_p(CNET98EL_START_PG, ioaddr+EN0_STARTPG);
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#852: FILE: drivers/net/ne.c:490:
+		outb_p(CNET98EL_STOP_PG, ioaddr+EN0_STOPPG);
 		                               ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#853: FILE: drivers/net/ne.c:491:
+		if (ei_debug > 2) {
+			printk("memory check");
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#854: FILE: drivers/net/ne.c:492:
+			printk("memory check");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#857: FILE: drivers/net/ne.c:495:
+			if (ei_debug > 2) {
+				printk(" %04x",i);
+			}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#858: FILE: drivers/net/ne.c:496:
+				printk(" %04x",i);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#858: FILE: drivers/net/ne.c:496:
+				printk(" %04x",i);
 				              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#860: FILE: drivers/net/ne.c:498:
+			ne2k_cbus_writemem(dev,ioaddr, i, pat, 32);
 			                      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#865: FILE: drivers/net/ne.c:503:
+				if (ei_debug > 2) {
+					printk(" failed.");
+				}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#866: FILE: drivers/net/ne.c:504:
+					printk(" failed.");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#872: FILE: drivers/net/ne.c:510:
+			if (ei_debug > 2) {
+				printk("] ");
+			}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#873: FILE: drivers/net/ne.c:511:
+				printk("] ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#875: FILE: drivers/net/ne.c:513:
+			printk("memory failure at %x\n", i);

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ENODEV)
#876: FILE: drivers/net/ne.c:514:
+			return ENODEV;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#878: FILE: drivers/net/ne.c:516:
+		if (ei_debug > 2) {
+			printk(" good...");
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#879: FILE: drivers/net/ne.c:517:
+			printk(" good...");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#882: FILE: drivers/net/ne.c:520:
+			if (ei_debug > 2) {
+				printk("] ");
+			}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#883: FILE: drivers/net/ne.c:521:
+				printk("] ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#885: FILE: drivers/net/ne.c:523:
+			printk("IRQ must be specified for C-NET(98)E/L. probe failed.\n");

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -ENODEV)
#886: FILE: drivers/net/ne.c:524:
+			return ENODEV;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#888: FILE: drivers/net/ne.c:526:
+		outb((dev->irq>5) ? (dev->irq&4):(dev->irq>>1), ioaddr + (0x2 | 0x400));
 		              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#888: FILE: drivers/net/ne.c:526:
+		outb((dev->irq>5) ? (dev->irq&4):(dev->irq>>1), ioaddr + (0x2 | 0x400));
 		                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#888: FILE: drivers/net/ne.c:526:
+		outb((dev->irq>5) ? (dev->irq&4):(dev->irq>>1), ioaddr + (0x2 | 0x400));
 		                                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#888: FILE: drivers/net/ne.c:526:
+		outb((dev->irq>5) ? (dev->irq&4):(dev->irq>>1), ioaddr + (0x2 | 0x400));
 		                                          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#892: FILE: drivers/net/ne.c:530:
+		if (ei_debug > 2) {
+			printk("done]");
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#893: FILE: drivers/net/ne.c:531:
+			printk("done]");

CHECK:BRACES: Unbalanced braces around else statement
#895: FILE: drivers/net/ne.c:533:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#903: FILE: drivers/net/ne.c:540:
+^I^Istruct {unsigned char value; unsigned short offset;} program_seq[] = $

ERROR:SPACING: space required after that ';' (ctx:VxV)
#903: FILE: drivers/net/ne.c:540:
+		struct {unsigned char value; unsigned short offset;} program_seq[] = 
 		                                                  ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#934: FILE: drivers/net/ne.c:577:
+
+	}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#979: FILE: drivers/net/ne.c:666:
+	} else
[...]
+	if (dev->irq == 2)

CHECK:BRACES: Unbalanced braces around else statement
#979: FILE: drivers/net/ne.c:666:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#988: FILE: drivers/net/ne.c:675:
+		/* Fixup for users that don't know that IRQ 7 is really IRQ 11,
+		   or don't know which one to set. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#988: FILE: drivers/net/ne.c:675:
+		   or don't know which one to set. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1002: FILE: drivers/net/ne.c:712:
+	printk("\n%s: %s found at %#x, hardware type %d(%s), using IRQ %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: drivers/net/ne.c:713:
+	printk("\n%s: %s found at %#x, hardware type %d(%s), using IRQ %d.\n",
+		   dev->name, name, ioaddr, hw->hwtype, hw->hwident, dev->irq);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1024: FILE: drivers/net/ne.c:750:
+		const struct ne2k_cbus_region *rlist;
+		for (rlist = hw->regionlist; rlist->range; rlist++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1024: FILE: drivers/net/ne.c:750:
+		for (rlist = hw->regionlist; rlist->range; rlist++) {
+			release_region(ioaddr + rlist->start, rlist->range);
+		}

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#1135: FILE: drivers/net/ne.c:1108:
+				const struct ne2k_cbus_hwinfo *hw = ne2k_cbus_get_hwinfo((int)(dev->mem_start & NE2K_CBUS_HARDWARE_TYPE_MASK));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1137: FILE: drivers/net/ne.c:1110:
+				const struct ne2k_cbus_region *rlist;
+				for (rlist = hw->regionlist; rlist->range; rlist++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1137: FILE: drivers/net/ne.c:1110:
+				for (rlist = hw->regionlist; rlist->range; rlist++) {
+					release_region(dev->base_addr + rlist->start, rlist->range);
+				}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1155: FILE: drivers/net/ne2k_cbus.h:1:
+/* ne2k_cbus.h: $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1155: FILE: drivers/net/ne2k_cbus.h:1:
+/* ne2k_cbus.h: 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1156: FILE: drivers/net/ne2k_cbus.h:2:
+/* ne2k_cbus.h: 
+   vender-specific information definition for NEC PC-9800

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1158: FILE: drivers/net/ne2k_cbus.h:4:
+   Used in ne.c $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1183: FILE: drivers/net/ne2k_cbus.h:29:
+/* 1: (not tested)
+   Allied Telesis CentreCom LA-98-T */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1183: FILE: drivers/net/ne2k_cbus.h:29:
+   Allied Telesis CentreCom LA-98-T */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1186: FILE: drivers/net/ne2k_cbus.h:32:
+/* 2: (not tested)
+   ELECOM Laneed

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1189: FILE: drivers/net/ne2k_cbus.h:35:
+   MACNICA ME98 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1192: FILE: drivers/net/ne2k_cbus.h:38:
+/* 3:
+   Melco EGY-98

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1193: FILE: drivers/net/ne2k_cbus.h:39:
+   Contec C-NET(98)E*A/L*A,C-NET(98)P */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1196: FILE: drivers/net/ne2k_cbus.h:42:
+/* 4:
+   Melco LGY-98,IND-SP,IND-SS

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1197: FILE: drivers/net/ne2k_cbus.h:43:
+   MACNICA NE2098 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1200: FILE: drivers/net/ne2k_cbus.h:46:
+/* 5:
+   ICM DT-ET-25,DT-ET-T5,IF-2766ET,IF-2771ET

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1203: FILE: drivers/net/ne2k_cbus.h:49:
+   ELECOM Laneed LD-98P */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1207: FILE: drivers/net/ne2k_cbus.h:53:
+/* 7: (unused in *BSD?)
+   <Original NE2000 compatible>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1212: FILE: drivers/net/ne2k_cbus.h:58:
+/* 8:
+   NEC PC-9801-108 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1212: FILE: drivers/net/ne2k_cbus.h:58:
+   NEC PC-9801-108 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1215: FILE: drivers/net/ne2k_cbus.h:61:
+/* 9:
+   I-O DATA LA-98,LA/T-98 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1215: FILE: drivers/net/ne2k_cbus.h:61:
+   I-O DATA LA-98,LA/T-98 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1219: FILE: drivers/net/ne2k_cbus.h:65:
+/* 11:
+   Contec C-NET(98)E,L */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1219: FILE: drivers/net/ne2k_cbus.h:65:
+   Contec C-NET(98)E,L */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1267: FILE: drivers/net/ne2k_cbus.h:113:
+#if 0

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1275: FILE: drivers/net/ne2k_cbus.h:121:
+};
+static struct ne2k_cbus_region bdn_regionlist[] __initdata = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1276: FILE: drivers/net/ne2k_cbus.h:122:
+	{0x0, 1}, {0x1000, 1}, {0x2000, 1}, {0x3000,1},
 	                                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1295: FILE: drivers/net/ne2k_cbus.h:141:
+};
+static struct ne2k_cbus_region egy98_regionlist[] __initdata = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1315: FILE: drivers/net/ne2k_cbus.h:161:
+};
+static struct ne2k_cbus_region lgy98_regionlist[] __initdata = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1334: FILE: drivers/net/ne2k_cbus.h:180:
+};
+static struct ne2k_cbus_region icm_regionlist[] __initdata = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1350: FILE: drivers/net/ne2k_cbus.h:196:
+};
+static struct ne2k_cbus_region ne2k_regionlist[] __initdata = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1366: FILE: drivers/net/ne2k_cbus.h:212:
+};
+static struct ne2k_cbus_region nec108_regionlist[] __initdata = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1386: FILE: drivers/net/ne2k_cbus.h:232:
+};
+static struct ne2k_cbus_region iola98_regionlist[] __initdata = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1392: FILE: drivers/net/ne2k_cbus.h:238:
+	{0x0,0}
 	    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1406: FILE: drivers/net/ne2k_cbus.h:252:
+};
+static struct ne2k_cbus_region cnet98el_regionlist[] __initdata = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1412: FILE: drivers/net/ne2k_cbus.h:258:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1522: FILE: drivers/net/ne2k_cbus.h:368:
+	struct ei_device *ei_local;
+	if (dev->priv == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->priv"
#1522: FILE: drivers/net/ne2k_cbus.h:368:
+	if (dev->priv == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ei_local)...) over kmalloc(sizeof(struct ei_device)...)
#1523: FILE: drivers/net/ne2k_cbus.h:369:
+		ei_local = kmalloc(sizeof(struct ei_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ei_local"
#1524: FILE: drivers/net/ne2k_cbus.h:370:
+		if (ei_local == NULL)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1527: FILE: drivers/net/ne2k_cbus.h:373:
+		ei_local->reg_offset = kmalloc(sizeof(typeof(*ei_local->reg_offset))*18, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1527: FILE: drivers/net/ne2k_cbus.h:373:
+		ei_local->reg_offset = kmalloc(sizeof(typeof(*ei_local->reg_offset))*18, GFP_KERNEL);
 		                                                                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ei_local->reg_offset"
#1528: FILE: drivers/net/ne2k_cbus.h:374:
+		if (ei_local->reg_offset == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1541: FILE: drivers/net/ne2k_cbus.h:387:
+	struct ei_device *ei_local = (struct ei_device *)(dev->priv);
+	if (ei_local != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ei_local"
#1541: FILE: drivers/net/ne2k_cbus.h:387:
+	if (ei_local != NULL) {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1543: FILE: drivers/net/ne2k_cbus.h:389:
+		if (ei_local->reg_offset)
+			kfree(ei_local->reg_offset);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1554: FILE: drivers/net/ne2k_cbus.h:400:
+		if (hw->hwtype == hwtype) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1559: FILE: drivers/net/ne2k_cbus.h:405:
+static void __init ne2k_cbus_set_hwtype(struct net_device *dev, const struct ne2k_cbus_hwinfo *hw, int ioaddr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1567: FILE: drivers/net/ne2k_cbus.h:413:
+		panic("Gieee! ei_local == NULL!! (from %p)",
+		       __builtin_return_address(0));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1572: FILE: drivers/net/ne2k_cbus.h:418:
+	if (ei_debug > 2) {
+		printk(KERN_DEBUG "hwtype changed: %d -> %d\n",hwtype_old,(int)(dev->mem_start & NE2K_CBUS_HARDWARE_TYPE_MASK));
+	}

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#1573: FILE: drivers/net/ne2k_cbus.h:419:
+		printk(KERN_DEBUG "hwtype changed: %d -> %d\n",hwtype_old,(int)(dev->mem_start & NE2K_CBUS_HARDWARE_TYPE_MASK));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1573: FILE: drivers/net/ne2k_cbus.h:419:
+		printk(KERN_DEBUG "hwtype changed: %d -> %d\n",hwtype_old,(int)(dev->mem_start & NE2K_CBUS_HARDWARE_TYPE_MASK));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1573: FILE: drivers/net/ne2k_cbus.h:419:
+		printk(KERN_DEBUG "hwtype changed: %d -> %d\n",hwtype_old,(int)(dev->mem_start & NE2K_CBUS_HARDWARE_TYPE_MASK));
 		                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1573: FILE: drivers/net/ne2k_cbus.h:419:
+		printk(KERN_DEBUG "hwtype changed: %d -> %d\n",hwtype_old,(int)(dev->mem_start & NE2K_CBUS_HARDWARE_TYPE_MASK));
 		                                                         ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1577: FILE: drivers/net/ne2k_cbus.h:423:
+		for (i = 0; i < 8; i++) {
+			ei_local->reg_offset[i] = hw->offsetinfo->skip * i;
+		}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1582: FILE: drivers/net/ne2k_cbus.h:428:
+				hw->offsetinfo->skip*(i-8) + hw->offsetinfo->offset8;
 				                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1582: FILE: drivers/net/ne2k_cbus.h:428:
+				hw->offsetinfo->skip*(i-8) + hw->offsetinfo->offset8;
 				                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#1586: FILE: drivers/net/ne2k_cbus.h:432:
+			int adj = (ioaddr & 0xf000) /2;
 			                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1587: FILE: drivers/net/ne2k_cbus.h:433:
+^I^I^Iei_local->reg_offset[16] = $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1587: FILE: drivers/net/ne2k_cbus.h:433:
+			int adj = (ioaddr & 0xf000) /2;
+			ei_local->reg_offset[16] = 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1589: FILE: drivers/net/ne2k_cbus.h:435:
+^I^I^Iei_local->reg_offset[17] = $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1600: FILE: drivers/net/ne2k_cbus.h:446:
+		for (i = 0; i < 16; i++) {
+			ei_local->reg_offset[i] = i;
+		}

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#1609: FILE: drivers/net/ne2k_cbus.h:455:
+static void __init ne2k_cbus_readmem(struct net_device *dev, int ioaddr, unsigned short memaddr, char *buf, unsigned short len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1612: FILE: drivers/net/ne2k_cbus.h:458:
+	struct ei_device *ei_local = (struct ei_device *)(dev->priv);
+	outb_p(E8390_NODMA | E8390_START, ioaddr+E8390_CMD);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1612: FILE: drivers/net/ne2k_cbus.h:458:
+	outb_p(E8390_NODMA | E8390_START, ioaddr+E8390_CMD);
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1613: FILE: drivers/net/ne2k_cbus.h:459:
+	outb_p(len & 0xff, ioaddr+EN0_RCNTLO);
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1614: FILE: drivers/net/ne2k_cbus.h:460:
+	outb_p(len >> 8, ioaddr+EN0_RCNTHI);
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1615: FILE: drivers/net/ne2k_cbus.h:461:
+	outb_p(memaddr & 0xff, ioaddr+EN0_RSARLO);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1616: FILE: drivers/net/ne2k_cbus.h:462:
+	outb_p(memaddr >> 8, ioaddr+EN0_RSARHI);
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1617: FILE: drivers/net/ne2k_cbus.h:463:
+	outb_p(E8390_RREAD | E8390_START, ioaddr+E8390_CMD);
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1618: FILE: drivers/net/ne2k_cbus.h:464:
+	insw(ioaddr+NE_DATAPORT, buf, len >> 1);
 	           ^

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#1620: FILE: drivers/net/ne2k_cbus.h:466:
+static void __init ne2k_cbus_writemem(struct net_device *dev, int ioaddr, unsigned short memaddr, const char *buf, unsigned short len)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1620: FILE: drivers/net/ne2k_cbus.h:466:
+}
+static void __init ne2k_cbus_writemem(struct net_device *dev, int ioaddr, unsigned short memaddr, const char *buf, unsigned short len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1623: FILE: drivers/net/ne2k_cbus.h:469:
+	struct ei_device *ei_local = (struct ei_device *)(dev->priv);
+	outb_p(E8390_NODMA | E8390_START, ioaddr+E8390_CMD);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1623: FILE: drivers/net/ne2k_cbus.h:469:
+	outb_p(E8390_NODMA | E8390_START, ioaddr+E8390_CMD);
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1624: FILE: drivers/net/ne2k_cbus.h:470:
+	outb_p(ENISR_RDC, ioaddr+EN0_ISR);
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1625: FILE: drivers/net/ne2k_cbus.h:471:
+	outb_p(len & 0xff, ioaddr+EN0_RCNTLO);
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1626: FILE: drivers/net/ne2k_cbus.h:472:
+	outb_p(len >> 8, ioaddr+EN0_RCNTHI);
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1627: FILE: drivers/net/ne2k_cbus.h:473:
+	outb_p(memaddr & 0xff, ioaddr+EN0_RSARLO);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1628: FILE: drivers/net/ne2k_cbus.h:474:
+	outb_p(memaddr >> 8, ioaddr+EN0_RSARHI);
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1629: FILE: drivers/net/ne2k_cbus.h:475:
+	outb_p(E8390_RWRITE | E8390_START, ioaddr+E8390_CMD);
 	                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1630: FILE: drivers/net/ne2k_cbus.h:476:
+	outsw(ioaddr+NE_DATAPORT, buf, len >> 1);
 	            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 118 warnings, 53 checks, 1518 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
