ERROR:SPACING: space required after that ',' (ctx:VxV)
#51: FILE: include/asm-i386/system.h:245:
+#define cmpxchg(ptr,o,n)\
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#51: FILE: include/asm-i386/system.h:245:
+#define cmpxchg(ptr,o,n)\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#51: FILE: include/asm-i386/system.h:245:
+#define cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#52: FILE: include/asm-i386/system.h:246:
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#53: FILE: include/asm-i386/system.h:247:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/asm-i386/system.h:256:
+extern unsigned long cmpxchg_386(void *, unsigned long, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#64: FILE: include/asm-i386/system.h:258:
+#define cmpxchg(ptr,o,n)\
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#64: FILE: include/asm-i386/system.h:258:
+#define cmpxchg(ptr,o,n)\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#64: FILE: include/asm-i386/system.h:258:
+#define cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))cmpxchg_386((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#65: FILE: include/asm-i386/system.h:259:
+	((__typeof__(*(ptr)))cmpxchg_386((ptr),(unsigned long)(o),\
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#66: FILE: include/asm-i386/system.h:260:
+					(unsigned long)(n),sizeof(*(ptr))))
 					                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#78: FILE: include/asm-i386/system.h:290:
+static inline unsigned long long __cmpxchg8b(volatile unsigned long long *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: include/asm-i386/system.h:291:
+static inline unsigned long long __cmpxchg8b(volatile unsigned long long *ptr,
+	       unsigned long long old, unsigned long long newv)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#82: FILE: include/asm-i386/system.h:294:
+	 __asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: include/asm-i386/system.h:298:
+       ^I^I"b" ((unsigned long)(newv & 0xffffffffLL)), "m" (ptr)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#86: FILE: include/asm-i386/system.h:298:
+       ^I^I"b" ((unsigned long)(newv & 0xffffffffLL)), "m" (ptr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: include/asm-i386/system.h:298:
+       ^I^I"b" ((unsigned long)(newv & 0xffffffffLL)), "m" (ptr)$

WARNING:SPACING: space prohibited before semicolon
#88: FILE: include/asm-i386/system.h:300:
+	return prev ;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#99: FILE: include/asm-i386/system.h:311:
+extern unsigned long long cmpxchg_486(unsigned long long *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long *' should also have an identifier name
#99: FILE: include/asm-i386/system.h:311:
+extern unsigned long long cmpxchg_486(unsigned long long *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#99: FILE: include/asm-i386/system.h:311:
+extern unsigned long long cmpxchg_486(unsigned long long *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#99: FILE: include/asm-i386/system.h:311:
+extern unsigned long long cmpxchg_486(unsigned long long *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: include/asm-i386/system.h:312:
+extern unsigned long long cmpxchg_486(unsigned long long *,
+				unsigned long long, unsigned long long);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#132: FILE: arch/i386/kernel/cpu/intel.c:419:
+unsigned long cmpxchg_386(volatile void *ptr, unsigned long old,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: arch/i386/kernel/cpu/intel.c:420:
+unsigned long cmpxchg_386(volatile void *ptr, unsigned long old,
+				      unsigned long new, int size)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#142: FILE: arch/i386/kernel/cpu/intel.c:429:
+	if (cpu_data->x86 > 3) return __cmpxchg(ptr, old, new, size);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#148: FILE: arch/i386/kernel/cpu/intel.c:435:
+		prev = * (u8 *)ptr;
 		       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#149: FILE: arch/i386/kernel/cpu/intel.c:436:
+		if (prev == old) *(u8 *)ptr = new;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#152: FILE: arch/i386/kernel/cpu/intel.c:439:
+		prev = * (u16 *)ptr;
 		       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#153: FILE: arch/i386/kernel/cpu/intel.c:440:
+		if (prev == old) *(u16 *)ptr = new;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#156: FILE: arch/i386/kernel/cpu/intel.c:443:
+		if (prev == old) *(u32 *)ptr = new;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#163: FILE: arch/i386/kernel/cpu/intel.c:450:
+EXPORT_SYMBOL(cmpxchg_386);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: arch/i386/kernel/cpu/intel.c:455:
+unsigned long long cmpxchg8b_486(unsigned long long *ptr,
+	       unsigned long long old, unsigned long long newv)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#178: FILE: arch/i386/kernel/cpu/intel.c:465:
+	if (cpu_has(cpu_data, X86_FEATURE_CX8)) return __cmpxchg8b(ptr, old newv);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#183: FILE: arch/i386/kernel/cpu/intel.c:470:
+	if (prev == old) *ptr = newv;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#188: FILE: arch/i386/kernel/cpu/intel.c:475:
+EXPORT_SYMBOL(cmpxchg8b_486);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246399.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 10 warnings, 9 checks, 136 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246399.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
