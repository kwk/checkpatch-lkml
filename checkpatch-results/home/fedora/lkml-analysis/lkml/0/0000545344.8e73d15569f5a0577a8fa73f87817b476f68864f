WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#61: 
//  EXTRAVERSION = -test12
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#68: FILE: kernel/sysctl.c:48:
+extern int threads_high, threads_low;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open parenthesis '('
#100: FILE: kernel/fork.c:79:
+	if(max_threads > threads_high)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#116: FILE: kernel/fork.c:92:
+static int search_pid(int start, int* plimit)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#144: FILE: kernel/fork.c:98:
+	if(start >= *plimit || start < 300) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#146: FILE: kernel/fork.c:100:
+		start=300;
 		     ^

ERROR:SPACING: space required before the open parenthesis '('
#151: FILE: kernel/fork.c:105:
+		if(p->pid == start	||

ERROR:SPACING: space required before the open parenthesis '('
#154: FILE: kernel/fork.c:108:
+			if(++start >= next_safe) {

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: kernel/fork.c:110:
+				if(start >= *plimit) {

ERROR:SPACING: space required before the open parenthesis '('
#157: FILE: kernel/fork.c:111:
+					if(loop) {

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#158: FILE: kernel/fork.c:112:
+						next_safe=-1;
 						         ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#158: FILE: kernel/fork.c:112:
+						next_safe=-1;
 						          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#159: FILE: kernel/fork.c:113:
+						start=-1;
 						     ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#159: FILE: kernel/fork.c:113:
+						start=-1;
 						      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#162: FILE: kernel/fork.c:116:
+					loop=1;
 					    ^

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: kernel/fork.c:123:
+		if(p->pid > start && next_safe > p->pid)

ERROR:SPACING: space required before the open parenthesis '('
#178: FILE: kernel/fork.c:125:
+		if(p->pgrp > start && next_safe > p->pgrp)

ERROR:SPACING: space required before the open parenthesis '('
#180: FILE: kernel/fork.c:127:
+		if(p->session > start && next_safe > p->session)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: kernel/fork.c:131:
+^I*plimit=next_safe; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#184: FILE: kernel/fork.c:131:
+	*plimit=next_safe; 
 	       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#190: FILE: kernel/fork.c:137:
+	static int next_safe = PID_MAX-PIDS_FOR_ROOT;
 	                              ^

ERROR:SPACING: space required before the open parenthesis '('
#195: FILE: kernel/fork.c:142:
+	if(++last_pid < next_safe)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#198: FILE: kernel/fork.c:145:
+	next_safe = PID_MAX-PIDS_FOR_ROOT;
 	                   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#201: FILE: kernel/fork.c:148:
+	if(last_pid==-1 && is_root) {
 	           ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#201: FILE: kernel/fork.c:148:
+	if(last_pid==-1 && is_root) {
 	             ^

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: kernel/fork.c:148:
+	if(last_pid==-1 && is_root) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: kernel/fork.c:150:
+		int dummy = PID_MAX;
+		return search_pid(PID_MAX-PIDS_FOR_ROOT, &dummy);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#203: FILE: kernel/fork.c:150:
+		return search_pid(PID_MAX-PIDS_FOR_ROOT, &dummy);
 		                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#217: FILE: kernel/fork.c:609:
+		int limit = max_threads;
+		if(current->uid)

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: kernel/fork.c:609:
+		if(current->uid)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: kernel/fork.c:700:
+^I$

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#243: FILE: kernel/fork.c:706:
+	if(p->pid==-1) {
 	         ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#243: FILE: kernel/fork.c:706:
+	if(p->pid==-1) {
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#243: FILE: kernel/fork.c:706:
+	if(p->pid==-1) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000545344.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 4 warnings, 3 checks, 177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000545344.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
