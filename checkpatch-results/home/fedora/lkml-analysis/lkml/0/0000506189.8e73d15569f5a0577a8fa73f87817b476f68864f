WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#54: 
 independant of ownership, get charged to the someone (for the purpose
 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'verison' may be misspelled - perhaps 'version'?
#63: 
 I should admit that I haven't actually tried this verison of the
                                                   ^^^^^^^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#114: FILE: fs/dquot.c:15:
+ * Version: $Id: dquot.c,v 1.1 2001/10/15 07:23:34 neilb Exp neilb $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: fs/dquot.c:1163:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#230: FILE: fs/attr.c:133:
+	if (!(ia_valid & ATTR_TID)
+	    && (ia_valid & ATTR_UID)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#231: FILE: fs/attr.c:134:
+	    && (ia_valid & ATTR_UID)
+	    && !treequota_parent_uid_ok(inode, dentry->d_parent->d_inode,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#233: FILE: fs/attr.c:136:
+					attr->ia_uid)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#282: FILE: fs/namei.c:1712:
+	if (!treequota_parent_ok(new_dir, old_dentry->d_inode)
+	    && !capable(CAP_CHOWN))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: fs/namei.c:1714:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#299: FILE: fs/namei.c:1760:
+	else if (!treequota_parent_ok(old_dentry->d_inode, new_dir)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#300: FILE: fs/namei.c:1761:
+	else if (!treequota_parent_ok(old_dentry->d_inode, new_dir)
+		 && (error = notify_change(old_dentry, &attr)))

CHECK:BRACES: Unbalanced braces around else statement
#312: FILE: fs/namei.c:1815:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#316: FILE: fs/namei.c:1819:
+			struct iattr attr;
+			if (old_dentry->d_inode->i_nlink > 1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: fs/namei.c:1823:
+			attr.ia_tid = treequota_tid(new_dir,
+					    old_dentry->d_inode->i_uid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: fs/namei.c:1826:
+^I^Iif (!error) $

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#346: FILE: include/linux/quota.h:36:
+ * Version: $Id: quota.h,v 1.1 2001/10/15 07:04:25 neilb Exp neilb $

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#377: FILE: include/linux/quotaops.h:7:
+ * Version: $Id: quotaops.h,v 1.1 2001/10/15 07:22:03 neilb Exp neilb $

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#386: FILE: include/linux/quotaops.h:39:
+#define sb_any_quota_enabled(sb) ((sb)->s_dquot.flags & (DQUOT_USR_ENABLED | DQUOT_GRP_ENABLED | DQUOT_TREE_ENABLED))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:INLINE: plain inline is preferred over __inline__
#394: FILE: include/linux/quotaops.h:165:
+static __inline__ int treequota_parent_uid_ok(struct inode *inode, struct inode *dir, uid_t uid)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_tid ==   dir->i_tid'
#398: FILE: include/linux/quotaops.h:169:
+	if (dir->i_tid
+	    ? (inode->i_tid ==   dir->i_tid)
+	    : (inode->i_tid ==   uid))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_tid ==   uid'
#398: FILE: include/linux/quotaops.h:169:
+	if (dir->i_tid
+	    ? (inode->i_tid ==   dir->i_tid)
+	    : (inode->i_tid ==   uid))

WARNING:INLINE: plain inline is preferred over __inline__
#405: FILE: include/linux/quotaops.h:176:
+static __inline__ int treequota_parent_ok(struct inode *inode, struct inode *dir)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: include/linux/quotaops.h:178:
+	return treequota_parent_uid_ok(inode,dir, inode->i_uid);
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#410: FILE: include/linux/quotaops.h:181:
+static __inline__ int treequota_tid(struct inode *dir, uid_t uid)

WARNING:INLINE: plain inline is preferred over __inline__
#419: FILE: include/linux/quotaops.h:190:
+static __inline__ void treequota_check(struct dentry *dentry)

WARNING:LINE_SPACING: Missing a blank line after declarations
#423: FILE: include/linux/quotaops.h:194:
+	struct iattr attr;
+	if (!inode->i_sb->s_dquot.flags & DQUOT_TREE_ENABLED)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#432: FILE: include/linux/quotaops.h:203:
+	if (!S_ISDIR(inode->i_mode)
+	    && inode->i_nlink > 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#433: FILE: include/linux/quotaops.h:204:
+		printk(KERN_WARNING "treequota: file with multiple links has wrong tree-id\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#434: FILE: include/linux/quotaops.h:205:
+		printk(KERN_WARNING "  dev=%x ino=%ld dino=%ld\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#437: FILE: include/linux/quotaops.h:208:
+		printk(KERN_WARNING "  basename=%s\n", dentry->d_name.name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: include/linux/quotaops.h:267:
+#define treequota_parent_uid_ok(inode,dir,uid) (1)
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: include/linux/quotaops.h:267:
+#define treequota_parent_uid_ok(inode,dir,uid) (1)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: include/linux/quotaops.h:268:
+#define	treequota_parent_ok(inode,dir) (1)
        	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#451: FILE: include/linux/quotaops.h:269:
+#define treequota_tid(inode,uid) (0)
                            ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506189.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 25 warnings, 10 checks, 373 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506189.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
