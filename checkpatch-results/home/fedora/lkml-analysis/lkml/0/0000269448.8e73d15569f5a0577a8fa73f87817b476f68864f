WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -Nru linux-2.6.7/kernel/power/console.c linux-2.6.7-swsusp/kernel/power/console.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: kernel/power/splash.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: kernel/power/splash.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: kernel/power/splash.c:20:
+static inline struct splash_data * get_splash_data(int consolenr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: kernel/power/splash.c:21:
+{   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: kernel/power/splash.c:22:
+           BUG_ON(consolenr >= MAX_NR_CONSOLES);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: kernel/power/splash.c:22:
+           BUG_ON(consolenr >= MAX_NR_CONSOLES);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#105: FILE: kernel/power/splash.c:22:
+           BUG_ON(consolenr >= MAX_NR_CONSOLES);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: kernel/power/splash.c:23:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: kernel/power/splash.c:23:
+   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: kernel/power/splash.c:24:
+           if (vc_cons[consolenr].d)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: kernel/power/splash.c:24:
+           if (vc_cons[consolenr].d)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 21)
#107: FILE: kernel/power/splash.c:24:
+           if (vc_cons[consolenr].d)
+                     return vc_cons[consolenr].d->vc_splash_data;

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: kernel/power/splash.c:25:
+                     return vc_cons[consolenr].d->vc_splash_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: kernel/power/splash.c:25:
+                     return vc_cons[consolenr].d->vc_splash_data;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: kernel/power/splash.c:26:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: kernel/power/splash.c:26:
+   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: kernel/power/splash.c:27:
+           return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: kernel/power/splash.c:27:
+           return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: kernel/power/splash.c:36:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: kernel/power/splash.c:36:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: kernel/power/splash.c:40:
+static struct proc_dir_entry * find_proc_dir_entry(const char *name, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#123: FILE: kernel/power/splash.c:40:
+static struct proc_dir_entry * find_proc_dir_entry(const char *name, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: kernel/power/splash.c:41:
+static struct proc_dir_entry * find_proc_dir_entry(const char *name, 
+	    struct proc_dir_entry *parent)

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#130: FILE: kernel/power/splash.c:47:
+	for (p = &parent->subdir; *p; p=&(*p)->next ) {
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#130: FILE: kernel/power/splash.c:47:
+	for (p = &parent->subdir; *p; p=&(*p)->next ) {
 	                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#130: FILE: kernel/power/splash.c:47:
+	for (p = &parent->subdir; *p; p=&(*p)->next ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#131: FILE: kernel/power/splash.c:48:
+		if (proc_match(len, name, *p)) {
+			return *p;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: kernel/power/splash.c:68:
+	static write_proc_t * write_routine;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: kernel/power/splash.c:69:
+	struct proc_dir_entry * proc_entry;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: kernel/power/splash.c:79:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: kernel/power/splash.c:79:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: kernel/power/splash.c:79:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: kernel/power/splash.c:81:
+                write_routine(NULL, buffer, count, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: kernel/power/splash.c:81:
+                write_routine(NULL, buffer, count, NULL);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: kernel/power/splash.c:89:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: kernel/power/splash.c:104:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#191: FILE: kernel/power/splash.c:108:
+EXPORT_SYMBOL(splash_is_on);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#192: FILE: kernel/power/splash.c:109:
+EXPORT_SYMBOL(splash_write_proc);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#193: FILE: kernel/power/splash.c:110:
+EXPORT_SYMBOL(splash_set_progress);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#200: FILE: kernel/power/splash.h:1:
+#ifndef _SPLASH_H

ERROR:SPACING: space required before the open parenthesis '('
#213: FILE: kernel/power/splash.h:14:
+#define splash_set_progress(...) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#214: FILE: kernel/power/splash.h:15:
+#define splash_write_proc(...) do { } while(0)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#217: FILE: kernel/power/splash.h:18:
+#define splash_set_verbose() splash_write_proc("verbose\n", 9);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#218: FILE: kernel/power/splash.h:19:
+#define splash_set_silent() splash_write_proc("silent\n", 8);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: kernel/power/swsusp.c:316:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: kernel/power/swsusp.c:316:
+   $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#241: FILE: kernel/power/swsusp.c:319:
+		if (!(i%100)) {
 		       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: kernel/power/swsusp.c:837:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: kernel/power/swsusp.c:837:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: kernel/power/swsusp.c:842:
+^I   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: kernel/power/swsusp.c:1085:
+   ^Iif (pm_prepare_console())$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: kernel/power/swsusp.c:1085:
+   ^Iif (pm_prepare_console())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: kernel/power/swsusp.c:1085:
+   ^Iif (pm_prepare_console())$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#279: FILE: kernel/power/swsusp.c:1086:
+		printk("swsusp: Can't allocate a console... proceeding\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: kernel/power/swsusp.c:1087:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: kernel/power/swsusp.c:1087:
+   $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#289: FILE: kernel/power/swsusp.c:1121:
+		if (!(i%100)) {
 		       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: kernel/power/swsusp.c:1126:
+^I   $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 26 warnings, 3 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
