WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
   above and also to avoid confusing setuid programs about their environment)

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#165: FILE: fs/namespace.c:1412:
+/* Make sure that noone tries a remount a "nullfs" */
                   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#174: FILE: fs/namespace.c:1421:
+	static struct super_operations nullfs_ops= {
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#179: FILE: fs/namespace.c:1426:
+	static struct address_space_operations nullfs_aops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: fs/namespace.c:1427:
+        ^I.readpage       = simple_readpage,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: fs/namespace.c:1427:
+        ^I.readpage       = simple_readpage,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: fs/namespace.c:1427:
+        ^I.readpage       = simple_readpage,$

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#182: FILE: fs/namespace.c:1429:
+	static struct inode_operations nullfs_dir_inode_operations = {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#192: FILE: fs/namespace.c:1439:
+	if (inode == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#199: FILE: fs/namespace.c:1446:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sb->s_root"
#204: FILE: fs/namespace.c:1451:
+	if (sb->s_root == NULL) {

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#205: FILE: fs/namespace.c:1452:
+		iput(inode);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: fs/namespace.c:1459:
+static struct super_block *nullfs_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data)

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: fs/namespace.c:1477:
+^I      ^I^I^I(MS_RDONLY | MS_NOSUID | MS_NODEV |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: fs/namespace.c:1477:
+^I      ^I^I^I(MS_RDONLY | MS_NOSUID | MS_NODEV |$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: fs/namespace.c:1477:
+	nullfs_namespace = init_new_namespace(do_kern_mount("nullfs",
+	      			(MS_RDONLY | MS_NOSUID | MS_NODEV |

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: fs/namespace.c:1547:
+^I  ^Ireturn 0;^I/* already relinquished */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: fs/namespace.c:1547:
+^I  ^Ireturn 0;^I/* already relinquished */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: fs/namespace.c:1556:
+		struct fs_struct *n = copy_fs_struct(current->fs);
+		if (n == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!n"
#266: FILE: fs/namespace.c:1556:
+		if (n == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: fs/namespace.c:1557:
+^I^I  ^Ireturn -ENOMEM;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#267: FILE: fs/namespace.c:1557:
+^I^I  ^Ireturn -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: fs/namespace.c:1569:
+^I    ^I    nullfs_namespace->root->mnt_root);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: fs/namespace.c:1569:
+^I    ^I    nullfs_namespace->root->mnt_root);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: fs/namespace.c:1569:
+	set_fs_root(fs, nullfs_namespace->root,
+	    	    nullfs_namespace->root->mnt_root);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current->fs->altroot"
#285: FILE: fs/namespace.c:1575:
+	if (current->fs->altroot != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: fs/namespace.c:1576:
+^I  ^Idput(current->fs->altroot);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: fs/namespace.c:1576:
+^I  ^Idput(current->fs->altroot);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226906.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 13 warnings, 8 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226906.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
