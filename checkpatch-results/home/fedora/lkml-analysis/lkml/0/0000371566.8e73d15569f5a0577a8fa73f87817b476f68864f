WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	           ChangeSet	1.1084  -> 1.1085 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	include/linux/elevator.h	1.19    -> 1.20   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	drivers/block/ll_rw_blk.c	1.168   -> 1.169  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	include/linux/blkdev.h	1.102   -> 1.103  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	drivers/block/elevator.c	1.40    -> 1.41   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	drivers/block/deadline-iosched.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# 03/05/09	axboe@smithers.home.kernel.dk	1.1085

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# This patch adds dynamic allocation of request structures. Right now we

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# are reserving 256 requests per initialized queue, which adds up to quite

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# a lot of memory for even a modest number of queues. For the quoted 4000

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# disk systems, it's a disaster.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# Instead, we mempool 4 requests per queue and put an upper limit on the

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# number of requests that we will put in-flight as well. I've kept the 128

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# read/write max in-flight limit for now. It is trivial to experiement

WARNING:TYPO_SPELLING: 'experiement' may be misspelled - perhaps 'experiment'?
#74: 
# read/write max in-flight limit for now. It is trivial to experiement
                                                           ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# with larger queue sizes now, but I want to change one thing at the time

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# (the truncate scenario doesn't look all that good with a huge number of

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# requests, for instance).

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# Patch has been in -mm for a while, I'm running it here against stock 2.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# as well. Additionally, it actually kills quite a bit of code as well

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#84: 
--- a/drivers/block/deadline-iosched.c	Fri May  9 09:36:46 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#140: FILE: drivers/block/deadline-iosched.c:727:
+	dd->drq_pool = mempool_create(BLKDEV_MIN_RQ, mempool_alloc_slab, mempool_free_slab, drq_pool);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: drivers/block/deadline-iosched.c:935:
+^I.elevator_put_req_fn = ^I^Ideadline_put_request,$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bqt"
#273: FILE: drivers/block/ll_rw_blk.c:416:
+	if (unlikely(bqt == NULL || bqt->max_depth < tag))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#338: FILE: drivers/block/ll_rw_blk.c:1154:
+	rl->count[READ] = rl->count[WRITE] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#348: FILE: drivers/block/ll_rw_blk.c:1156:
+	rl->rq_pool = mempool_create(BLKDEV_MIN_RQ, mempool_alloc_slab, mempool_free_slab, request_cachep);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#388: FILE: drivers/block/ll_rw_blk.c:1232:
+static inline struct request *blk_alloc_request(request_queue_t *q,int gfp_mask)
                                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: drivers/block/ll_rw_blk.c:1270:
+                        clear_queue_congested(q, rw);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/block/ll_rw_blk.c:1270:
+                        clear_queue_congested(q, rw);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: drivers/block/ll_rw_blk.c:1274:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#463: FILE: drivers/block/ll_rw_blk.c:1285:
+	rq->bio = rq->biotail = NULL;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#666: FILE: drivers/block/ll_rw_blk.c:1713:
+		if ((freereq = get_request(q, rw, GFP_ATOMIC)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: drivers/block/ll_rw_blk.c:1719:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#727: FILE: drivers/block/ll_rw_blk.c:2159:
+	printk(" %d/%d requests per read queue\n", BLKDEV_MIN_RQ, queue_nr_requests);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#728: FILE: drivers/block/ll_rw_blk.c:2160:
+	printk(" %d/%d requests per write queue\n", BLKDEV_MIN_RQ, queue_nr_requests);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#810: FILE: include/linux/elevator.h:67:
+extern int elv_set_request(request_queue_t *, struct request *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#810: FILE: include/linux/elevator.h:67:
+extern int elv_set_request(request_queue_t *, struct request *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#810: FILE: include/linux/elevator.h:67:
+extern int elv_set_request(request_queue_t *, struct request *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#810: FILE: include/linux/elevator.h:67:
+extern int elv_set_request(request_queue_t *, struct request *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#811: FILE: include/linux/elevator.h:68:
+extern void elv_put_request(request_queue_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#811: FILE: include/linux/elevator.h:68:
+extern void elv_put_request(request_queue_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#811: FILE: include/linux/elevator.h:68:
+extern void elv_put_request(request_queue_t *, struct request *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 43 warnings, 5 checks, 686 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
