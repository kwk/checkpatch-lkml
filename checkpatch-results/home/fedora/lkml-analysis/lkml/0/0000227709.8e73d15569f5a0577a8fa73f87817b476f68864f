CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: sound/isa/ad1816a/ad1816a_lib.c:56:
+static inline void snd_ad1816a_out(ad1816a_t *chip, unsigned char reg,
 			    unsigned char value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: sound/isa/ad1816a/ad1816a_lib.c:63:
+static inline void snd_ad1816a_out_mask(ad1816a_t *chip, unsigned char reg,
 				 unsigned char mask, unsigned char value)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#215: FILE: sound/isa/ad1848/ad1848_lib.c:149:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: sound/sparc/cs4231.c:394:
+static void snd_cs4231_outm(cs4231_t *chip, unsigned char reg,
 		     unsigned char mask, unsigned char value)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#279: FILE: sound/isa/cs423x/cs4231_lib.c:274:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: sound/isa/es18xx.c:272:
+static inline void snd_es18xx_mixer_write(es18xx_t *chip,
 			    unsigned char reg, unsigned char data)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#366: FILE: sound/isa/es18xx.c:1572:
+static int __devinit snd_es18xx_pcm(es18xx_t *chip, int device, snd_pcm_t ** rpcm)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#366: FILE: sound/isa/es18xx.c:1572:
+static int __devinit snd_es18xx_pcm(es18xx_t *chip, int device, snd_pcm_t ** rpcm)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: sound/isa/gus/gus_dma.c:28:
+static void snd_gf1_dma_ack(snd_gus_card_t * gus)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#403: FILE: sound/isa/gus/gus_dma.c:38:
+static void snd_gf1_dma_program(snd_gus_card_t * gus,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#418: FILE: sound/isa/opl3sa2.c:344:
+static int snd_opl3sa2_get_single(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#418: FILE: sound/isa/opl3sa2.c:344:
+static int snd_opl3sa2_get_single(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#427: FILE: sound/isa/opl3sa2.c:361:
+static int snd_opl3sa2_put_single(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#427: FILE: sound/isa/opl3sa2.c:361:
+static int snd_opl3sa2_put_single(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#436: FILE: sound/isa/opl3sa2.c:391:
+static int snd_opl3sa2_info_double(snd_kcontrol_t *kcontrol, snd_ctl_elem_info_t * uinfo)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#445: FILE: sound/isa/opl3sa2.c:402:
+static int snd_opl3sa2_get_double(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#445: FILE: sound/isa/opl3sa2.c:402:
+static int snd_opl3sa2_get_double(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#454: FILE: sound/isa/opl3sa2.c:424:
+static int snd_opl3sa2_put_double(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#454: FILE: sound/isa/opl3sa2.c:424:
+static int snd_opl3sa2_put_double(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#520: FILE: sound/isa/sb/sb16_main.c:512:
+static int snd_sb16_playback_open(snd_pcm_substream_t * substream)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#529: FILE: sound/isa/sb/sb16_main.c:569:
+static int snd_sb16_playback_close(snd_pcm_substream_t * substream)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#538: FILE: sound/isa/sb/sb16_main.c:582:
+static int snd_sb16_capture_open(snd_pcm_substream_t * substream)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#547: FILE: sound/isa/sb/sb16_main.c:639:
+static int snd_sb16_capture_close(snd_pcm_substream_t * substream)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#587: FILE: sound/isa/sb/sb_common.c:95:
+static int snd_sbdsp_version(sb_t * chip)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#608: FILE: sound/isa/wavefront/wavefront.c:282:
+static snd_hwdep_t * __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#617: FILE: sound/isa/wavefront/wavefront.c:308:
+static snd_hwdep_t * __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#626: FILE: sound/isa/wavefront/wavefront.c:335:
+static snd_rawmidi_t * __devinit

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#798: FILE: sound/isa/wavefront/wavefront_synth.c:35:
+static int wf_raw = 0; /* we normally check for "raw state" to firmware

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#799: FILE: sound/isa/wavefront/wavefront_synth.c:36:
+static int wf_raw = 0; /* we normally check for "raw state" to firmware
+			  loading. if non-zero, then during driver loading, the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#817: FILE: sound/isa/wavefront/wavefront_synth.c:42:
+static int fx_raw = 1; /* if this is zero, we'll leave the FX processor in
+			  whatever state it is when the driver is loaded.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#823: FILE: sound/isa/wavefront/wavefront_synth.c:48:
+static int debug_default = 0;  /* you can set this to control debugging

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#824: FILE: sound/isa/wavefront/wavefront_synth.c:49:
+static int debug_default = 0;  /* you can set this to control debugging
+				  during driver loading. it takes any combination

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#863: FILE: sound/isa/wavefront/wavefront_synth.c:57:
+static char *ospath = "/etc/sound/wavefront.os"; /* where to find a processed
+						    version of the WaveFront OS

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#867: FILE: sound/isa/wavefront/wavefront_synth.c:61:
+static int wait_usecs = 150; /* This magic number seems to give pretty optimal
+				throughput based on my limited experimentation.

WARNING:TYPO_SPELLING: 'hundreths' may be misspelled - perhaps 'hundredths'?
#882: FILE: sound/isa/wavefront/wavefront_synth.c:76:
+static int reset_time = 2;        /* hundreths of a second we wait after a HW
                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#883: FILE: sound/isa/wavefront/wavefront_synth.c:77:
+static int reset_time = 2;        /* hundreths of a second we wait after a HW
+				     reset for the expected interrupt.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#887: FILE: sound/isa/wavefront/wavefront_synth.c:81:
+static int ramcheck_time = 20;    /* time in seconds to wait while ROM code
+				     checks on-board RAM.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#891: FILE: sound/isa/wavefront/wavefront_synth.c:85:
+static int osrun_time = 10;       /* time in seconds we wait for the OS to
+				     start running.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 15 warnings, 4 checks, 739 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
