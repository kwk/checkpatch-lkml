WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
A version of this patch for the 2.4 series has been accepted and is present in the tree.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	           ChangeSet	1.1418  -> 1.1419 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	drivers/ide/pci/Makefile	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	include/linux/pci_ids.h	1.123   -> 1.124  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	 drivers/ide/Kconfig	1.29    -> 1.30   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	               (new)	        -> 1.1     drivers/ide/pci/sgiioc4.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	               (new)	        -> 1.1     drivers/ide/pci/sgiioc4.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# 03/10/02	aniket@tomahawk.engr.sgi.com	1.1419

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# Adds support for the ATAPI part of the IOC4 chipset. 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#67: 
--- a/drivers/ide/Kconfig	Thu Oct  2 16:53:34 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#73: FILE: drivers/ide/Kconfig:743:
+config BLK_DEV_SGIIOC4
+	tristate "Silicon Graphics IOC4 chipset support"
+	help
+	  This driver adds PIO & MultiMode DMA-2 support for the SGI IOC4
+	  chipset.  Please say Y here, if you have an Altix System from
+	  Silicon Graphics Inc.
+		

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: drivers/ide/Kconfig:749:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: drivers/ide/pci/sgiioc4.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#111: FILE: drivers/ide/pci/sgiioc4.c:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#135: FILE: drivers/ide/pci/sgiioc4.c:38:
+#include <asm/io.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: drivers/ide/pci/sgiioc4.c:41:
+extern int dma_timer_expiry(ide_drive_t * drive);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#144: FILE: drivers/ide/pci/sgiioc4.c:47:
+static int n_sgiioc4_devs ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#170: FILE: drivers/ide/pci/sgiioc4.c:73:
+		printk(KERN_ERR "%s : %s -- Warning, Port Addresses 0x%p to 0x%p ALREADY in use\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#171: FILE: drivers/ide/pci/sgiioc4.c:74:
+		       __FUNCTION__,hwif->name, (void *)base, (void *)base + IOC4_CMD_CTL_BLK_SIZE);
 		                   ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#171: FILE: drivers/ide/pci/sgiioc4.c:74:
+		       __FUNCTION__,hwif->name, (void *)base, (void *)base + IOC4_CMD_CTL_BLK_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: drivers/ide/pci/sgiioc4.c:87:
+		memcpy(hwif->io_ports, hwif->hw.io_ports, sizeof (hwif->io_ports));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: drivers/ide/pci/sgiioc4.c:98:
+^I$

CHECK:SPACING: No space is necessary after a cast
#199: FILE: drivers/ide/pci/sgiioc4.c:102:
+	(void) ide_init_sgiioc4(hwif);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#204: FILE: drivers/ide/pci/sgiioc4.c:107:
+		printk(KERN_INFO "%s: %s Bus-Master DMA disabled \n", hwif->name, d->name);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#204: FILE: drivers/ide/pci/sgiioc4.c:107:
+		printk(KERN_INFO "%s: %s Bus-Master DMA disabled \n", hwif->name, d->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/ide/pci/sgiioc4.c:113:
+ * having all the SN2 code sync'd and merged. $

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#213: FILE: drivers/ide/pci/sgiioc4.c:116:
+pciio_endian_t __attribute__((weak)) snia_pciio_endian_set(struct pci_dev *pci_dev, pciio_endian_t device_end, pciio_endian_t desired_end);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#213: FILE: drivers/ide/pci/sgiioc4.c:116:
+pciio_endian_t __attribute__((weak)) snia_pciio_endian_set(struct pci_dev *pci_dev, pciio_endian_t device_end, pciio_endian_t desired_end);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#218: FILE: drivers/ide/pci/sgiioc4.c:121:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#220: FILE: drivers/ide/pci/sgiioc4.c:123:
+		printk(KERN_INFO "Failed to enable device %s at slot %s \n",d->name,dev->slot_name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: drivers/ide/pci/sgiioc4.c:123:
+		printk(KERN_INFO "Failed to enable device %s at slot %s \n",d->name,dev->slot_name);
 		                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: drivers/ide/pci/sgiioc4.c:123:
+		printk(KERN_INFO "Failed to enable device %s at slot %s \n",d->name,dev->slot_name);
 		                                                                   ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#220: FILE: drivers/ide/pci/sgiioc4.c:123:
+		printk(KERN_INFO "Failed to enable device %s at slot %s \n",d->name,dev->slot_name);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#229: FILE: drivers/ide/pci/sgiioc4.c:132:
+		printk(KERN_INFO "Failed to set endianness for device %s at slot %s \n", d->name, dev->slot_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#229: FILE: drivers/ide/pci/sgiioc4.c:132:
+		printk(KERN_INFO "Failed to set endianness for device %s at slot %s \n", d->name, dev->slot_name);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#229: FILE: drivers/ide/pci/sgiioc4.c:132:
+		printk(KERN_INFO "Failed to set endianness for device %s at slot %s \n", d->name, dev->slot_name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: drivers/ide/pci/sgiioc4.c:144:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#246: FILE: drivers/ide/pci/sgiioc4.c:149:
+sgiioc4_init_hwif_ports(hw_regs_t * hw, unsigned long data_port,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#263: FILE: drivers/ide/pci/sgiioc4.c:166:
+sgiioc4_resetproc(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#270: FILE: drivers/ide/pci/sgiioc4.c:173:
+sgiioc4_maskproc(ide_drive_t * drive, int mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#273: FILE: drivers/ide/pci/sgiioc4.c:176:
+	ide_hwif_t *hwif = HWIF(drive);
+	hwif->OUTB(mask ? (drive->ctl | 2) : (drive->ctl & ~2), IDE_CONTROL_REG);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#277: FILE: drivers/ide/pci/sgiioc4.c:180:
+ide_init_sgiioc4(ide_hwif_t * hwif)

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#291: FILE: drivers/ide/pci/sgiioc4.c:194:
+	hwif->resetproc = &sgiioc4_resetproc;	/* Reset the IOC4 DMA engine, clear interrupts etc */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#319: FILE: drivers/ide/pci/sgiioc4.c:222:
+sgiioc4_ide_dma_read(ide_drive_t * drive)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#324: FILE: drivers/ide/pci/sgiioc4.c:227:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_FROMDEVICE))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#335: FILE: drivers/ide/pci/sgiioc4.c:238:
+sgiioc4_ide_dma_write(ide_drive_t * drive)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#340: FILE: drivers/ide/pci/sgiioc4.c:243:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_TODEVICE))) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#352: FILE: drivers/ide/pci/sgiioc4.c:255:
+sgiioc4_ide_dma_begin(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#365: FILE: drivers/ide/pci/sgiioc4.c:268:
+sgiioc4_ide_dma_end(ide_drive_t * drive)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#369: FILE: drivers/ide/pci/sgiioc4.c:272:
+	uint64_t dma_base = hwif->dma_base;

CHECK:SPACING: No space is necessary after a cast
#371: FILE: drivers/ide/pci/sgiioc4.c:274:
+	unsigned long *ending_dma = (unsigned long *) hwif->dma_base2;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#383: FILE: drivers/ide/pci/sgiioc4.c:286:
+		printk(KERN_ERR "%s(%s): IOC4 DMA STOP bit is still 1 : ioc4_dma_reg 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: drivers/ide/pci/sgiioc4.c:287:
+		printk(KERN_ERR "%s(%s): IOC4 DMA STOP bit is still 1 : ioc4_dma_reg 0x%x\n",
+		__FUNCTION__, drive->name, ioc4_dma);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#384: FILE: drivers/ide/pci/sgiioc4.c:287:
+		__FUNCTION__, drive->name, ioc4_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#401: FILE: drivers/ide/pci/sgiioc4.c:304:
+		printk(KERN_INFO "%s(%s) : Stale DMA Data in Memory\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: drivers/ide/pci/sgiioc4.c:305:
+		printk(KERN_INFO "%s(%s) : Stale DMA Data in Memory\n",
+		__FUNCTION__,drive->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#402: FILE: drivers/ide/pci/sgiioc4.c:305:
+		__FUNCTION__,drive->name);
 		            ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#402: FILE: drivers/ide/pci/sgiioc4.c:305:
+		__FUNCTION__,drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#409: FILE: drivers/ide/pci/sgiioc4.c:312:
+			printk(KERN_ERR "%s(%s) : WARNING!!! byte_count_at_dev %d != byte_count_at_mem %d\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: drivers/ide/pci/sgiioc4.c:313:
+			       __FUNCTION__,drive->name, bc_dev, bc_mem);
 			                   ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#410: FILE: drivers/ide/pci/sgiioc4.c:313:
+			       __FUNCTION__,drive->name, bc_dev, bc_mem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#421: FILE: drivers/ide/pci/sgiioc4.c:324:
+sgiioc4_ide_dma_check(ide_drive_t * drive)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: drivers/ide/pci/sgiioc4.c:326:
+	if (ide_config_drive_speed(drive,XFER_MW_DMA_2)!=0) {
 	                                ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#423: FILE: drivers/ide/pci/sgiioc4.c:326:
+	if (ide_config_drive_speed(drive,XFER_MW_DMA_2)!=0) {
 	                                               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#423: FILE: drivers/ide/pci/sgiioc4.c:326:
+	if (ide_config_drive_speed(drive,XFER_MW_DMA_2)!=0) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#424: FILE: drivers/ide/pci/sgiioc4.c:327:
+		printk(KERN_INFO "Couldnot set %s in Multimode-2 DMA mode | Drive %s using PIO instead\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: drivers/ide/pci/sgiioc4.c:328:
+		printk(KERN_INFO "Couldnot set %s in Multimode-2 DMA mode | Drive %s using PIO instead\n",
+				drive->name, drive->name);

CHECK:BRACES: Unbalanced braces around else statement
#427: FILE: drivers/ide/pci/sgiioc4.c:330:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#434: FILE: drivers/ide/pci/sgiioc4.c:337:
+sgiioc4_ide_dma_on(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: drivers/ide/pci/sgiioc4.c:345:
+sgiioc4_ide_dma_off(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#444: FILE: drivers/ide/pci/sgiioc4.c:347:
+	printk(KERN_INFO "%s: DMA disabled\n", drive->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#450: FILE: drivers/ide/pci/sgiioc4.c:353:
+sgiioc4_ide_dma_off_quietly(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#459: FILE: drivers/ide/pci/sgiioc4.c:362:
+sgiioc4_ide_dma_test_irq(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#465: FILE: drivers/ide/pci/sgiioc4.c:368:
+sgiioc4_ide_dma_host_on(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#474: FILE: drivers/ide/pci/sgiioc4.c:377:
+sgiioc4_ide_dma_host_off(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#482: FILE: drivers/ide/pci/sgiioc4.c:385:
+sgiioc4_ide_dma_count(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#488: FILE: drivers/ide/pci/sgiioc4.c:391:
+sgiioc4_ide_dma_verbose(ide_drive_t * drive)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#491: FILE: drivers/ide/pci/sgiioc4.c:394:
+		printk(", UDMA(16)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#493: FILE: drivers/ide/pci/sgiioc4.c:396:
+		printk(", PIO");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#499: FILE: drivers/ide/pci/sgiioc4.c:402:
+sgiioc4_ide_dma_lostirq(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#507: FILE: drivers/ide/pci/sgiioc4.c:410:
+sgiioc4_ide_dma_timeout(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#509: FILE: drivers/ide/pci/sgiioc4.c:412:
+	printk(KERN_ERR "%s: timeout waiting for DMA\n", drive->name);

CHECK:SPACING: No space is necessary after a cast
#519: FILE: drivers/ide/pci/sgiioc4.c:422:
+	u8 reg = (u8) inb(port);

CHECK:SPACING: No space is necessary after a cast
#524: FILE: drivers/ide/pci/sgiioc4.c:427:
+			unsigned int intr_reg = (u32) inl(other_ir);

CHECK:SPACING: No space is necessary after a cast
#529: FILE: drivers/ide/pci/sgiioc4.c:432:
+				intr_reg = (u32) inl(other_ir);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#539: FILE: drivers/ide/pci/sgiioc4.c:442:
+ide_dma_sgiioc4(ide_hwif_t * hwif, unsigned long dma_base)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: drivers/ide/pci/sgiioc4.c:444:
+	int num_ports = sizeof (ioc4_dma_regs_t);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#543: FILE: drivers/ide/pci/sgiioc4.c:446:
+	printk(KERN_INFO "%s: BM-DMA at 0x%04lx-0x%04lx\n", hwif->name, dma_base, dma_base + num_ports - 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#543: FILE: drivers/ide/pci/sgiioc4.c:446:
+	printk(KERN_INFO "%s: BM-DMA at 0x%04lx-0x%04lx\n", hwif->name, dma_base, dma_base + num_ports - 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#546: FILE: drivers/ide/pci/sgiioc4.c:449:
+		printk(KERN_ERR "%s(%s) -- WARNING, Port Addresses 0x%p to 0x%p ALREADY in use\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: drivers/ide/pci/sgiioc4.c:450:
+		       __FUNCTION__,hwif->name, (void *)dma_base, (void *)dma_base + num_ports - 1);
 		                   ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#547: FILE: drivers/ide/pci/sgiioc4.c:450:
+		       __FUNCTION__,hwif->name, (void *)dma_base, (void *)dma_base + num_ports - 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#558: FILE: drivers/ide/pci/sgiioc4.c:461:
+	hwif->sg_table = kmalloc(sizeof (struct scatterlist) * IOC4_PRD_ENTRIES, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hwif->sg_table)...) over kmalloc(sizeof (struct scatterlist)...)
#558: FILE: drivers/ide/pci/sgiioc4.c:461:
+	hwif->sg_table = kmalloc(sizeof (struct scatterlist) * IOC4_PRD_ENTRIES, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#561: FILE: drivers/ide/pci/sgiioc4.c:464:
+		pci_free_consistent(hwif->pci_dev, IOC4_PRD_ENTRIES * IOC4_PRD_BYTES, hwif->dmatable_cpu, hwif->dmatable_dma);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#565: FILE: drivers/ide/pci/sgiioc4.c:468:
+	hwif->dma_base2 = (unsigned long) pci_alloc_consistent(hwif->pci_dev, IOC4_IDE_CACHELINE_SIZE,

CHECK:SPACING: No space is necessary after a cast
#565: FILE: drivers/ide/pci/sgiioc4.c:468:
+	hwif->dma_base2 = (unsigned long) pci_alloc_consistent(hwif->pci_dev, IOC4_IDE_CACHELINE_SIZE,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#566: FILE: drivers/ide/pci/sgiioc4.c:469:
+							       (dma_addr_t*)&(hwif->dma_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hwif->dma_status
#566: FILE: drivers/ide/pci/sgiioc4.c:469:
+							       (dma_addr_t*)&(hwif->dma_status));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#569: FILE: drivers/ide/pci/sgiioc4.c:472:
+		pci_free_consistent(hwif->pci_dev, IOC4_PRD_ENTRIES * IOC4_PRD_BYTES, hwif->dmatable_cpu, hwif->dmatable_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#577: FILE: drivers/ide/pci/sgiioc4.c:480:
+	printk(KERN_INFO "%s() -- Error! Unable to allocate DMA Maps for drive %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: drivers/ide/pci/sgiioc4.c:481:
+	printk(KERN_INFO "%s() -- Error! Unable to allocate DMA Maps for drive %s\n",
+		__FUNCTION__,hwif->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#578: FILE: drivers/ide/pci/sgiioc4.c:481:
+		__FUNCTION__,hwif->name);
 		            ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#578: FILE: drivers/ide/pci/sgiioc4.c:481:
+		__FUNCTION__,hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#579: FILE: drivers/ide/pci/sgiioc4.c:482:
+	printk(KERN_INFO "Changing from DMA to PIO mode for Drive %s \n", hwif->name);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#579: FILE: drivers/ide/pci/sgiioc4.c:482:
+	printk(KERN_INFO "Changing from DMA to PIO mode for Drive %s \n", hwif->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#588: FILE: drivers/ide/pci/sgiioc4.c:491:
+sgiioc4_configure_for_dma(int dma_direction, ide_drive_t * drive)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#593: FILE: drivers/ide/pci/sgiioc4.c:496:
+	uint64_t dma_base = hwif->dma_base;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#594: FILE: drivers/ide/pci/sgiioc4.c:497:
+	uint32_t dma_addr, ending_dma_addr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#599: FILE: drivers/ide/pci/sgiioc4.c:502:
+		printk(KERN_WARNING "%s(%s):Warning!! IOC4 DMA from previous transfer was still active\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: drivers/ide/pci/sgiioc4.c:503:
+		printk(KERN_WARNING "%s(%s):Warning!! IOC4 DMA from previous transfer was still active\n",
+			__FUNCTION__, drive->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#600: FILE: drivers/ide/pci/sgiioc4.c:503:
+			__FUNCTION__, drive->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: drivers/ide/pci/sgiioc4.c:513:
+^I^I^Iprintk(KERN_ERR "%s(%s) : IOC4 Dma STOP bit is still 1\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#610: FILE: drivers/ide/pci/sgiioc4.c:513:
+			printk(KERN_ERR "%s(%s) : IOC4 Dma STOP bit is still 1\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: drivers/ide/pci/sgiioc4.c:514:
+			printk(KERN_ERR "%s(%s) : IOC4 Dma STOP bit is still 1\n", 
+				__FUNCTION__,drive->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: drivers/ide/pci/sgiioc4.c:514:
+				__FUNCTION__,drive->name);
 				            ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#611: FILE: drivers/ide/pci/sgiioc4.c:514:
+				__FUNCTION__,drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#616: FILE: drivers/ide/pci/sgiioc4.c:519:
+		printk(KERN_WARNING "%s(%s) : Warning!! - DMA Error during Previous transfer | status 0x%x \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#616: FILE: drivers/ide/pci/sgiioc4.c:519:
+		printk(KERN_WARNING "%s(%s) : Warning!! - DMA Error during Previous transfer | status 0x%x \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#617: FILE: drivers/ide/pci/sgiioc4.c:520:
+		printk(KERN_WARNING "%s(%s) : Warning!! - DMA Error during Previous transfer | status 0x%x \n",
+			__FUNCTION__,drive->name, ioc4_dma);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#617: FILE: drivers/ide/pci/sgiioc4.c:520:
+			__FUNCTION__,drive->name, ioc4_dma);
 			            ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#617: FILE: drivers/ide/pci/sgiioc4.c:520:
+			__FUNCTION__,drive->name, ioc4_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#627: FILE: drivers/ide/pci/sgiioc4.c:530:
+			printk(KERN_ERR "%s(%s) : IOC4 DMA STOP bit is still 1\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: drivers/ide/pci/sgiioc4.c:531:
+			printk(KERN_ERR "%s(%s) : IOC4 DMA STOP bit is still 1\n",
+				__FUNCTION__, drive->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#628: FILE: drivers/ide/pci/sgiioc4.c:531:
+				__FUNCTION__, drive->name);

CHECK:SPACING: No space is necessary after a cast
#636: FILE: drivers/ide/pci/sgiioc4.c:539:
+	memset((unsigned int *) hwif->dma_base2, 0,IOC4_IDE_CACHELINE_SIZE);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#636: FILE: drivers/ide/pci/sgiioc4.c:539:
+	memset((unsigned int *) hwif->dma_base2, 0,IOC4_IDE_CACHELINE_SIZE);
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#638: FILE: drivers/ide/pci/sgiioc4.c:541:
+	hwif->OUTL(ending_dma_addr,dma_base + IOC4_DMA_END_ADDR * 4);
 	                          ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#644: FILE: drivers/ide/pci/sgiioc4.c:547:
+/* IOC4 Scatter Gather list Format ^I^I^I^I^I^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#648: FILE: drivers/ide/pci/sgiioc4.c:551:
+/* | Upper 32 bits - Zero ^I^I| ^ILower 32 bits- address^I     |^I*/$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#655: FILE: drivers/ide/pci/sgiioc4.c:558:
+sgiioc4_build_dma_table(ide_drive_t * drive, struct request *rq, int ddir)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#663: FILE: drivers/ide/pci/sgiioc4.c:566:
+		hwif->sg_nents = i = sgiioc4_ide_raw_build_sglist(drive, rq);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#665: FILE: drivers/ide/pci/sgiioc4.c:568:
+		hwif->sg_nents = i = sgiioc4_ide_build_sglist(drive, rq);

WARNING:LINE_SPACING: Missing a blank line after declarations
#674: FILE: drivers/ide/pci/sgiioc4.c:577:
+		int cur_len;
+		cur_addr = sg_dma_address(sg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#679: FILE: drivers/ide/pci/sgiioc4.c:582:
+				printk(KERN_WARNING "%s: DMA table too small\n", drive->name);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#682: FILE: drivers/ide/pci/sgiioc4.c:585:
+				uint32_t xcount, bcount = 0x10000 - (cur_addr & 0xffff);

WARNING:INDENTED_LABEL: labels should not be indented
#714: FILE: drivers/ide/pci/sgiioc4.c:617:
+      use_pio_instead:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#722: FILE: drivers/ide/pci/sgiioc4.c:625:
+sgiioc4_checkirq(ide_hwif_t * hwif)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#724: FILE: drivers/ide/pci/sgiioc4.c:627:
+	uint8_t intr_reg = hwif->INL(hwif->io_ports[IDE_IRQ_OFFSET] + IOC4_INTR_REG * 4);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#733: FILE: drivers/ide/pci/sgiioc4.c:636:
+sgiioc4_clearirq(ide_drive_t * drive)

WARNING:LINE_SPACING: Missing a blank line after declarations
#745: FILE: drivers/ide/pci/sgiioc4.c:648:
+		int count = 0;
+		do {

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#747: FILE: drivers/ide/pci/sgiioc4.c:650:
+			stat = hwif->INB(IDE_STATUS_REG);	/* Removes Interrupt from IDE Device */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#752: FILE: drivers/ide/pci/sgiioc4.c:655:
+			uint32_t pci_err_addr_low, pci_err_addr_high, pci_stat_cmd_reg;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: drivers/ide/pci/sgiioc4.c:660:
+^I^I^Iprintk(KERN_ERR "%s(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#757: FILE: drivers/ide/pci/sgiioc4.c:660:
+			printk(KERN_ERR "%s(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n", 

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#757: FILE: drivers/ide/pci/sgiioc4.c:660:
+			printk(KERN_ERR "%s(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#758: FILE: drivers/ide/pci/sgiioc4.c:661:
+			printk(KERN_ERR "%s(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n", 
+				__FUNCTION__,drive->name, pci_stat_cmd_reg);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#758: FILE: drivers/ide/pci/sgiioc4.c:661:
+				__FUNCTION__,drive->name, pci_stat_cmd_reg);
 				            ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#758: FILE: drivers/ide/pci/sgiioc4.c:661:
+				__FUNCTION__,drive->name, pci_stat_cmd_reg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: drivers/ide/pci/sgiioc4.c:662:
+^I^I^Iprintk(KERN_ERR "%s(%s) : PCI Error Address is 0x%x%x \n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#759: FILE: drivers/ide/pci/sgiioc4.c:662:
+			printk(KERN_ERR "%s(%s) : PCI Error Address is 0x%x%x \n", 

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#759: FILE: drivers/ide/pci/sgiioc4.c:662:
+			printk(KERN_ERR "%s(%s) : PCI Error Address is 0x%x%x \n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: drivers/ide/pci/sgiioc4.c:663:
+			printk(KERN_ERR "%s(%s) : PCI Error Address is 0x%x%x \n", 
+				__FUNCTION__,drive->name, pci_err_addr_high, pci_err_addr_low);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#760: FILE: drivers/ide/pci/sgiioc4.c:663:
+				__FUNCTION__,drive->name, pci_err_addr_high, pci_err_addr_low);
 				            ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#760: FILE: drivers/ide/pci/sgiioc4.c:663:
+				__FUNCTION__,drive->name, pci_err_addr_high, pci_err_addr_low);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#774: FILE: drivers/ide/pci/sgiioc4.c:677:
+ * ^I"Copied from drivers/ide/ide-dma.c"$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#780: FILE: drivers/ide/pci/sgiioc4.c:683:
+ *	Perform the PCI mapping magic neccessary to access the source
   	                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#782: FILE: drivers/ide/pci/sgiioc4.c:685:
+ *	of the kernel provide the neccessary cache management so that
   	                          ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependancy' may be misspelled - perhaps 'dependency'?
#787: FILE: drivers/ide/pci/sgiioc4.c:690:
+ *	dependancy problems for modular drivers.
   	^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: drivers/ide/pci/sgiioc4.c:696:
+    ide_hwif_t *hwif = HWIF(drive);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: drivers/ide/pci/sgiioc4.c:697:
+    struct scatterlist *sg = hwif->sg_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: drivers/ide/pci/sgiioc4.c:698:
+    int nents;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/ide/pci/sgiioc4.c:700:
+    if (hwif->sg_dma_active)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/ide/pci/sgiioc4.c:701:
+        BUG();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/ide/pci/sgiioc4.c:701:
+        BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#798: FILE: drivers/ide/pci/sgiioc4.c:701:
+        BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: drivers/ide/pci/sgiioc4.c:703:
+    nents = blk_rq_map_sg(drive->queue, rq, hwif->sg_table);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: drivers/ide/pci/sgiioc4.c:705:
+    if (rq_data_dir(rq) == READ)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: drivers/ide/pci/sgiioc4.c:706:
+        hwif->sg_dma_direction = PCI_DMA_FROMDEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: drivers/ide/pci/sgiioc4.c:706:
+        hwif->sg_dma_direction = PCI_DMA_FROMDEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: drivers/ide/pci/sgiioc4.c:707:
+    else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: drivers/ide/pci/sgiioc4.c:708:
+        hwif->sg_dma_direction = PCI_DMA_TODEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: drivers/ide/pci/sgiioc4.c:708:
+        hwif->sg_dma_direction = PCI_DMA_TODEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: drivers/ide/pci/sgiioc4.c:710:
+    return pci_map_sg(hwif->pci_dev, sg, nents, hwif->sg_dma_direction);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#811: FILE: drivers/ide/pci/sgiioc4.c:714:
+ * ^ICopied from drivers/ide/ide-dma.c$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#816: FILE: drivers/ide/pci/sgiioc4.c:719:
+ *	Perform the PCI mapping magic neccessary to access the source or
   	                              ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#818: FILE: drivers/ide/pci/sgiioc4.c:721:
+ *	of the  kernel provide the neccessary cache management so that we can
   	                           ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependancy' may be misspelled - perhaps 'dependency'?
#823: FILE: drivers/ide/pci/sgiioc4.c:726:
+ *	dependancy problems for modular drivers.
   	^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: drivers/ide/pci/sgiioc4.c:732:
+    ide_hwif_t *hwif = HWIF(drive);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: drivers/ide/pci/sgiioc4.c:733:
+    struct scatterlist *sg = hwif->sg_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: drivers/ide/pci/sgiioc4.c:734:
+    int nents = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: drivers/ide/pci/sgiioc4.c:735:
+    ide_task_t *args = rq->special;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: drivers/ide/pci/sgiioc4.c:736:
+    u8 *virt_addr = rq->buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: drivers/ide/pci/sgiioc4.c:737:
+    int sector_count = rq->nr_sectors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#836: FILE: drivers/ide/pci/sgiioc4.c:739:
+    if (args->command_type == IDE_DRIVE_TASK_RAW_WRITE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: drivers/ide/pci/sgiioc4.c:740:
+        hwif->sg_dma_direction = PCI_DMA_TODEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: drivers/ide/pci/sgiioc4.c:740:
+        hwif->sg_dma_direction = PCI_DMA_TODEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: drivers/ide/pci/sgiioc4.c:741:
+    else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#839: FILE: drivers/ide/pci/sgiioc4.c:742:
+        hwif->sg_dma_direction = PCI_DMA_FROMDEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: drivers/ide/pci/sgiioc4.c:742:
+        hwif->sg_dma_direction = PCI_DMA_FROMDEVICE;$

WARNING:IF_1: Consider removing the #if 1 and its #endif
#841: FILE: drivers/ide/pci/sgiioc4.c:744:
+#if 1

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: drivers/ide/pci/sgiioc4.c:745:
+    if (sector_count > 256)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: drivers/ide/pci/sgiioc4.c:746:
+        BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: drivers/ide/pci/sgiioc4.c:746:
+        BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#843: FILE: drivers/ide/pci/sgiioc4.c:746:
+        BUG();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: drivers/ide/pci/sgiioc4.c:748:
+    if (sector_count > 128) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: drivers/ide/pci/sgiioc4.c:750:
+    while (sector_count > 128) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: drivers/ide/pci/sgiioc4.c:752:
+        memset(&sg[nents], 0, sizeof(*sg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: drivers/ide/pci/sgiioc4.c:752:
+        memset(&sg[nents], 0, sizeof(*sg));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#850: FILE: drivers/ide/pci/sgiioc4.c:753:
+        sg[nents].page = virt_to_page(virt_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: drivers/ide/pci/sgiioc4.c:753:
+        sg[nents].page = virt_to_page(virt_addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#851: FILE: drivers/ide/pci/sgiioc4.c:754:
+        sg[nents].offset = offset_in_page(virt_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: drivers/ide/pci/sgiioc4.c:754:
+        sg[nents].offset = offset_in_page(virt_addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#852: FILE: drivers/ide/pci/sgiioc4.c:755:
+        sg[nents].length = 128  * SECTOR_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: drivers/ide/pci/sgiioc4.c:755:
+        sg[nents].length = 128  * SECTOR_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: drivers/ide/pci/sgiioc4.c:756:
+        nents++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: drivers/ide/pci/sgiioc4.c:756:
+        nents++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: drivers/ide/pci/sgiioc4.c:757:
+        virt_addr = virt_addr + (128 * SECTOR_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: drivers/ide/pci/sgiioc4.c:757:
+        virt_addr = virt_addr + (128 * SECTOR_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#855: FILE: drivers/ide/pci/sgiioc4.c:758:
+        sector_count -= 128;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: drivers/ide/pci/sgiioc4.c:758:
+        sector_count -= 128;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: drivers/ide/pci/sgiioc4.c:759:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: drivers/ide/pci/sgiioc4.c:760:
+    memset(&sg[nents], 0, sizeof(*sg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: drivers/ide/pci/sgiioc4.c:761:
+    sg[nents].page = virt_to_page(virt_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: drivers/ide/pci/sgiioc4.c:762:
+    sg[nents].offset = offset_in_page(virt_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: drivers/ide/pci/sgiioc4.c:763:
+    sg[nents].length =  sector_count  * SECTOR_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: drivers/ide/pci/sgiioc4.c:764:
+    nents++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: drivers/ide/pci/sgiioc4.c:766:
+    return pci_map_sg(hwif->pci_dev, sg, nents, hwif->sg_dma_direction);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#865: FILE: drivers/ide/pci/sgiioc4.c:768:
+}
+#ifdef CONFIG_PROC_FS

WARNING:LONG_LINE_STRING: line length of 116 exceeds 100 columns
#881: FILE: drivers/ide/pci/sgiioc4.c:784:
+			p += sprintf(p, "\n	Chipset has 1 IDE channel and supports 2 devices on that channel.");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#882: FILE: drivers/ide/pci/sgiioc4.c:785:
+			p += sprintf(p, "\n	Chipset supports DMA in MultiMode-2 data transfer protocol.\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#893: FILE: drivers/ide/pci/sgiioc4.c:796:
+static int __devinit

WARNING:LINE_SPACING: Missing a blank line after declarations
#898: FILE: drivers/ide/pci/sgiioc4.c:801:
+	ide_pci_device_t *d = &sgiioc4_chipsets[id->driver_data];
+	if (dev->device != d->device) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#899: FILE: drivers/ide/pci/sgiioc4.c:802:
+		printk(KERN_ERR "Error in %s(dev 0x%p | id 0x%p )\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: drivers/ide/pci/sgiioc4.c:803:
+		printk(KERN_ERR "Error in %s(dev 0x%p | id 0x%p )\n",
+			__FUNCTION__, (void *) dev, (void *) id);

CHECK:SPACING: No space is necessary after a cast
#900: FILE: drivers/ide/pci/sgiioc4.c:803:
+			__FUNCTION__, (void *) dev, (void *) id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#900: FILE: drivers/ide/pci/sgiioc4.c:803:
+			__FUNCTION__, (void *) dev, (void *) id);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#901: FILE: drivers/ide/pci/sgiioc4.c:804:
+		BUG();

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#908: FILE: drivers/ide/pci/sgiioc4.c:811:
+		printk(KERN_INFO "Disabling the IOC4 IDE Part due to unsupported Firmware Rev (%d). \n",class_rev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#908: FILE: drivers/ide/pci/sgiioc4.c:811:
+		printk(KERN_INFO "Disabling the IOC4 IDE Part due to unsupported Firmware Rev (%d). \n",class_rev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#908: FILE: drivers/ide/pci/sgiioc4.c:811:
+		printk(KERN_INFO "Disabling the IOC4 IDE Part due to unsupported Firmware Rev (%d). \n",class_rev);
 		                                                                                       ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#908: FILE: drivers/ide/pci/sgiioc4.c:811:
+		printk(KERN_INFO "Disabling the IOC4 IDE Part due to unsupported Firmware Rev (%d). \n",class_rev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#909: FILE: drivers/ide/pci/sgiioc4.c:812:
+		printk(KERN_INFO "Please upgrade to Firmware Rev 46 or higher \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#909: FILE: drivers/ide/pci/sgiioc4.c:812:
+		printk(KERN_INFO "Please upgrade to Firmware Rev 46 or higher \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#913: FILE: drivers/ide/pci/sgiioc4.c:816:
+	printk(KERN_INFO "%s: IDE controller at PCI slot %s\n", d->name, dev->slot_name);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#923: FILE: drivers/ide/pci/sgiioc4.c:826:
+static struct pci_device_id sgiioc4_pci_tbl[] __devinitdata = {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#924: FILE: drivers/ide/pci/sgiioc4.c:827:
+	{ PCI_VENDOR_ID_SGI, PCI_DEVICE_ID_SGI_IOC4, PCI_ANY_ID, PCI_ANY_ID, 0x0b4000, 0xFFFFFF, 0 },

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#957: FILE: drivers/ide/pci/sgiioc4.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#970: FILE: drivers/ide/pci/sgiioc4.h:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1025: FILE: drivers/ide/pci/sgiioc4.h:69:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hwif' - possible side-effects?
#1027: FILE: drivers/ide/pci/sgiioc4.h:71:
+#define ide_ack_intr(hwif)      ((hwif)->hw.ack_intr ? (hwif)->hw.ack_intr(hwif) : 1)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1050: FILE: drivers/ide/pci/sgiioc4.h:94:
+typedef volatile struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1050: FILE: drivers/ide/pci/sgiioc4.h:94:
+typedef volatile struct {

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#1065: FILE: drivers/ide/pci/sgiioc4.h:109:
+#define IOC4_PRD_ENTRIES     (PAGE_SIZE /(4*IOC4_PRD_BYTES))
                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1065: FILE: drivers/ide/pci/sgiioc4.h:109:
+#define IOC4_PRD_ENTRIES     (PAGE_SIZE /(4*IOC4_PRD_BYTES))
                                            ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1067: FILE: drivers/ide/pci/sgiioc4.h:111:
+typedef enum pciio_endian_e {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1072: FILE: drivers/ide/pci/sgiioc4.h:116:
+static void sgiioc4_init_hwif_ports(hw_regs_t * hw, unsigned long data_port, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1072: FILE: drivers/ide/pci/sgiioc4.h:116:
+static void sgiioc4_init_hwif_ports(hw_regs_t * hw, unsigned long data_port, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1075: FILE: drivers/ide/pci/sgiioc4.h:119:
+static void sgiioc4_resetproc(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1076: FILE: drivers/ide/pci/sgiioc4.h:120:
+static void sgiioc4_maskproc(ide_drive_t * drive, int mask);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1077: FILE: drivers/ide/pci/sgiioc4.h:121:
+static void sgiioc4_configure_for_dma(int dma_direction, ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1078: FILE: drivers/ide/pci/sgiioc4.h:122:
+static void __init ide_init_sgiioc4(ide_hwif_t * hwif);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1079: FILE: drivers/ide/pci/sgiioc4.h:123:
+static void __init ide_dma_sgiioc4(ide_hwif_t * hwif, unsigned long dma_base);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1080: FILE: drivers/ide/pci/sgiioc4.h:124:
+static int sgiioc4_checkirq(ide_hwif_t * hwif);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1081: FILE: drivers/ide/pci/sgiioc4.h:125:
+static int sgiioc4_clearirq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1083: FILE: drivers/ide/pci/sgiioc4.h:127:
+static int sgiioc4_ide_dma_read(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1084: FILE: drivers/ide/pci/sgiioc4.h:128:
+static int sgiioc4_ide_dma_write(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1085: FILE: drivers/ide/pci/sgiioc4.h:129:
+static int sgiioc4_ide_dma_begin(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1086: FILE: drivers/ide/pci/sgiioc4.h:130:
+static int sgiioc4_ide_dma_end(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1087: FILE: drivers/ide/pci/sgiioc4.h:131:
+static int sgiioc4_ide_dma_check(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1088: FILE: drivers/ide/pci/sgiioc4.h:132:
+static int sgiioc4_ide_dma_on(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1089: FILE: drivers/ide/pci/sgiioc4.h:133:
+static int sgiioc4_ide_dma_off(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1090: FILE: drivers/ide/pci/sgiioc4.h:134:
+static int sgiioc4_ide_dma_off_quietly(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1091: FILE: drivers/ide/pci/sgiioc4.h:135:
+static int sgiioc4_ide_dma_test_irq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1092: FILE: drivers/ide/pci/sgiioc4.h:136:
+static int sgiioc4_ide_dma_host_on(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1093: FILE: drivers/ide/pci/sgiioc4.h:137:
+static int sgiioc4_ide_dma_host_off(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1094: FILE: drivers/ide/pci/sgiioc4.h:138:
+static int sgiioc4_ide_dma_count(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1095: FILE: drivers/ide/pci/sgiioc4.h:139:
+static int sgiioc4_ide_dma_verbose(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1096: FILE: drivers/ide/pci/sgiioc4.h:140:
+static int sgiioc4_ide_dma_lostirq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1097: FILE: drivers/ide/pci/sgiioc4.h:141:
+static int sgiioc4_ide_dma_timeout(ide_drive_t * drive);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1103: FILE: drivers/ide/pci/sgiioc4.h:147:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1103: FILE: drivers/ide/pci/sgiioc4.h:147:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#1103: FILE: drivers/ide/pci/sgiioc4.h:147:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#1103: FILE: drivers/ide/pci/sgiioc4.h:147:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1103: FILE: drivers/ide/pci/sgiioc4.h:147:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1104: FILE: drivers/ide/pci/sgiioc4.h:148:
+static unsigned int sgiioc4_build_dma_table(ide_drive_t * drive, struct request *rq,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1106: FILE: drivers/ide/pci/sgiioc4.h:150:
+static unsigned int __init pci_init_sgiioc4(struct pci_dev *dev,ide_pci_device_t *d);
                                                                ^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1108: FILE: drivers/ide/pci/sgiioc4.h:152:
+static ide_pci_device_t sgiioc4_chipsets[] __devinitdata = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1109: FILE: drivers/ide/pci/sgiioc4.h:153:
+^I{^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332692.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 94 errors, 157 warnings, 37 checks, 1052 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332692.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
