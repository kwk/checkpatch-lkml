WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> > > because of possible 'need to kmalloc in order to free memory for kmalloc'

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#128: FILE: fs/nfs/dir.c:463:
+	loc->my_entry.cookie = loc->my_entry.prev_cookie = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#200: FILE: fs/nfs/dir.c:657:
+	if ((error = nfs_refresh_inode(inode, &loc->fattr)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: fs/nfs/dir.c:1126:
+	error = NFS_PROTO(dir)->mknod(dir, &dentry->d_name, &loc->attr, rdev,
+					&loc->fhandle, &loc->fattr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: fs/nfs/dir.c:1171:
+	error = NFS_PROTO(dir)->mkdir(dir, &dentry->d_name, &loc->attr, &loc->fhandle,
+					&loc->fattr);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#390: FILE: fs/nfs/dir.c:1379:
+	loc->attr.ia_mode = S_IFLNK | S_IRWXUGO;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: fs/nfs/dir.c:1387:
+	error = NFS_PROTO(dir)->symlink(dir, &dentry->d_name, &loc->qsymname,
+				&loc->attr, &loc->sym_fh, &loc->sym_attr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: fs/nfs/nfs3proc.c:314:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: fs/nfs/nfs3proc.c:320:
+^I$

WARNING:TYPO_SPELLING: 'tolen' may be misspelled - perhaps 'token'?
#587: FILE: fs/nfs/nfs3proc.c:484:
+	loc->arg.tolen		= new_name->len;
 	         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: fs/nfs/nfs3proc.c:493:
+	status = rpc_call(NFS_CLIENT(old_dir), NFS3PROC_RENAME,
+				&loc->arg, &loc->res, 0);

WARNING:TYPO_SPELLING: 'tolen' may be misspelled - perhaps 'token'?
#638: FILE: fs/nfs/nfs3proc.c:518:
+	loc->arg.tolen		= name->len;
 	         ^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#774: FILE: fs/nfs/nfs4proc.c:285:
+^I^Istruct ^Irpc_message msg;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: fs/nfs/nfs4proc.c:302:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: fs/nfs/nfs4proc.c:304:
+^I$

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#797: FILE: fs/nfs/nfs4proc.c:308:
+	loc->msg.rpc_cred = sp->so_cred,
+
 	down(&sp->so_sema);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: fs/nfs/nfs4proc.c:318:
+	memcpy(loc->arg.u.delegation.data, state->stateid.data,
+				sizeof(loc->arg.u.delegation.data));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: fs/nfs/nfs4proc.c:323:
+		memcpy(state->stateid.data, loc->res.stateid.data,
 				sizeof(state->stateid.data));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#874: FILE: fs/nfs/nfs4proc.c:521:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#881: FILE: fs/nfs/nfs4proc.c:528:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#884: FILE: fs/nfs/nfs4proc.c:531:
+^I$

CHECK:SPACING: No space is necessary after a cast
#897: FILE: fs/nfs/nfs4proc.c:545:
+		u32 *p = (u32 *) loc->o_arg.u.verifier.data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#910: FILE: fs/nfs/nfs4proc.c:554:
+	loc->o_arg.clientid = clp->cl_clientid,
 
+	status = rpc_call_sync(server->client, &loc->msg, RPC_TASK_NOINTR);

ERROR:SPACING: space required before the open parenthesis '('
#922: FILE: fs/nfs/nfs4proc.c:561:
+	if(loc->o_res.rflags & NFS4_OPEN_RESULT_CONFIRM) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#924: FILE: fs/nfs/nfs4proc.c:563:
+		status = _nfs4_proc_open_confirm(server->client, &loc->o_res.fh,
+				sp, &loc->o_res.stateid);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 7 warnings, 9 checks, 907 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
