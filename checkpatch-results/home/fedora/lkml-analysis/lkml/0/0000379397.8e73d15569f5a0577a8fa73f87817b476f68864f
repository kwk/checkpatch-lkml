WARNING:TYPO_SPELLING: 'relasing' may be misspelled - perhaps 'releasing'?
#25: 
by relasing it some more experienced hackers could help
   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
#!/bin/sh

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#nice su user1 -c "/cpuhog.sh 1"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#nice su user2 -c "/cpuhog.sh 2"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#nice su user3 -c "/cpuhog.sh 3"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#!/bin/sh

WARNING:TYPO_SPELLING: 'futher' may be misspelled - perhaps 'further'?
#72: 
ps. The page explains some ideas for futher design, mostly whishful
                                     ^^^^^^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#134: FILE: include/linux/sched.h:289:
+	spinlock_t task_list_lock;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#160: FILE: include/linux/sysctl.h:132:
+	KERN_FAIRSCHED=57,	/* switch per-user fair cpu scheduler*/
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#185: FILE: kernel/sched.c:39:
+int fairsched = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#216: FILE: kernel/sched.c:1203:
+	printk("A1: send_task_to_expired %p enter\n", p);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_task_to_expired', this function's name, in a string
#216: FILE: kernel/sched.c:1203:
+	printk("A1: send_task_to_expired %p enter\n", p);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: kernel/sched.c:1207:
+	printk("A2: before lock rq %p\n", rq1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#222: FILE: kernel/sched.c:1209:
+	printk("A3: lock rq %p\n", rq);

ERROR:SPACING: space required before the open brace '{'
#224: FILE: kernel/sched.c:1211:
+	if(rq1 != rq){

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: kernel/sched.c:1211:
+	if(rq1 != rq){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#233: FILE: kernel/sched.c:1220:
+	printk("A4: unlock rq %p\n", rq);

ERROR:SPACING: space required before the open parenthesis '('
#279: FILE: kernel/sched.c:1304:
+			if(p->user->uid && fairsched) {

ERROR:SPACING: space required before the open brace '{'
#284: FILE: kernel/sched.c:1309:
+			}else{

ERROR:SPACING: space required after that close brace '}'
#284: FILE: kernel/sched.c:1309:
+			}else{

ERROR:SPACING: space required before the open parenthesis '('
#298: FILE: kernel/sched.c:1323:
+	if(send_to_user) {

ERROR:SPACING: space required before the open parenthesis '('
#299: FILE: kernel/sched.c:1324:
+		if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#300: FILE: kernel/sched.c:1325:
+			printk("B4: send_task_to_user %p\n", p);

ERROR:SPACING: space required before the open parenthesis '('
#305: FILE: kernel/sched.c:1330:
+		if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#306: FILE: kernel/sched.c:1331:
+			printk("B5: send_task_to_user %p done\n", p);

ERROR:SPACING: space required before the open brace '{'
#315: FILE: kernel/sched.c:1415:
+	if(0 && fairsched && !next->time_slice){

ERROR:SPACING: space required before the open parenthesis '('
#315: FILE: kernel/sched.c:1415:
+	if(0 && fairsched && !next->time_slice){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#316: FILE: kernel/sched.c:1416:
+		printk("E: send task %p to pending\n", next);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#347: FILE: kernel/sysctl.c:60:
+extern int fairsched;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#355: FILE: kernel/sysctl.c:267:
+	{KERN_FAIRSCHED, "fairsched", &fairsched, sizeof (int),

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#369: FILE: kernel/user.c:17:
+#include <asm/uaccess.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#387: FILE: kernel/user.c:41:
+extern int fairsched;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#388: FILE: kernel/user.c:42:
+extern int fairdebug;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#429: FILE: kernel/user.c:160:
+	struct sched_param param = { .sched_priority = MAX_RT_PRIO-1 };
 	                                                          ^

CHECK:SPACING: No space is necessary after a cast
#430: FILE: kernel/user.c:161:
+	int cpu = (long) data;

ERROR:SPACING: space required before the open parenthesis '('
#436: FILE: kernel/user.c:167:
+	if(0) ret = sys_sched_setscheduler(0, SCHED_FIFO, &param);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#436: FILE: kernel/user.c:167:
+	if(0) ret = sys_sched_setscheduler(0, SCHED_FIFO, &param);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#438: FILE: kernel/user.c:169:
+	for(;;) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#442: FILE: kernel/user.c:173:
+		int num_tasks,uid;
 		             ^

ERROR:SPACING: space required before the open brace '{'
#444: FILE: kernel/user.c:175:
+		while(!fairsched){

ERROR:SPACING: space required before the open parenthesis '('
#444: FILE: kernel/user.c:175:
+		while(!fairsched){

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#452: FILE: kernel/user.c:183:
+		schedule_timeout(8*HZ);
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#459: FILE: kernel/user.c:190:
+		if(list_empty(&user_list)) goto no_user;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#459: FILE: kernel/user.c:190:
+		if(list_empty(&user_list)) goto no_user;

ERROR:SPACING: space required before the open parenthesis '('
#461: FILE: kernel/user.c:192:
+		if(u == &root_user) goto no_user;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#461: FILE: kernel/user.c:192:
+		if(u == &root_user) goto no_user;

ERROR:SPACING: space required before the open parenthesis '('
#466: FILE: kernel/user.c:197:
+		if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#467: FILE: kernel/user.c:198:
+			printk("C1: inc user %d\n", uid);

ERROR:SPACING: space required before the open parenthesis '('
#473: FILE: kernel/user.c:204:
+		if(u->time_slice > 8)

ERROR:SPACING: space required before the open parenthesis '('
#476: FILE: kernel/user.c:207:
+		if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#477: FILE: kernel/user.c:208:
+			printk("C2: before spin_lock task_list\n");

ERROR:SPACING: space required before the open parenthesis '('
#480: FILE: kernel/user.c:211:
+		if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#481: FILE: kernel/user.c:212:
+			printk("C3: spin_lock tasklist\n");

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: kernel/user.c:216:
+		if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#486: FILE: kernel/user.c:217:
+			printk("C4: %d has %d ticks for %d tasks\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: kernel/user.c:218:
+			printk("C4: %d has %d ticks for %d tasks\n",
+				u->uid, u->time_slice, num_tasks);

ERROR:SPACING: space required before the open parenthesis '('
#489: FILE: kernel/user.c:220:
+		while(u->time_slice && num_tasks--) {

ERROR:SPACING: space required before the open parenthesis '('
#492: FILE: kernel/user.c:223:
+			if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#493: FILE: kernel/user.c:224:
+				printk("C5: get per-user task list\n");

ERROR:SPACING: space required before the open parenthesis '('
#495: FILE: kernel/user.c:226:
+			if(list_empty(&u->task_list)) goto end_user;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#495: FILE: kernel/user.c:226:
+			if(list_empty(&u->task_list)) goto end_user;

ERROR:SPACING: space required before the open parenthesis '('
#498: FILE: kernel/user.c:229:
+			if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#499: FILE: kernel/user.c:230:
+				printk("C6: got task %p, with %d reserved ticks\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: kernel/user.c:231:
+				printk("C6: got task %p, with %d reserved ticks\n",
+					p, p->reserved_time_slice);

ERROR:SPACING: space required before the open parenthesis '('
#504: FILE: kernel/user.c:235:
+			if(giveout) {

ERROR:SPACING: space required before the open parenthesis '('
#513: FILE: kernel/user.c:244:
+				if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#514: FILE: kernel/user.c:245:
+					printk("C7: user %d has %d ticks now\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: kernel/user.c:246:
+					printk("C7: user %d has %d ticks now\n",
+						u->uid, u->time_slice);

ERROR:SPACING: space required before the open parenthesis '('
#517: FILE: kernel/user.c:248:
+				if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#518: FILE: kernel/user.c:249:
+					printk("C8: task %p has %d ticks now\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: kernel/user.c:250:
+					printk("C8: task %p has %d ticks now\n",
+					p, p->time_slice);

ERROR:SPACING: space required before the open parenthesis '('
#521: FILE: kernel/user.c:252:
+				if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#522: FILE: kernel/user.c:253:
+					printk("C9: send_task_to_expired %p\n", p);

WARNING:IF_1: Consider removing the #if 1 and its #endif
#525: FILE: kernel/user.c:256:
+#if 1

ERROR:SPACING: space required before the open parenthesis '('
#532: FILE: kernel/user.c:263:
+				if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#533: FILE: kernel/user.c:264:
+					printk("C10: round robin task %p\n", p);

ERROR:SPACING: space required before the open parenthesis '('
#544: FILE: kernel/user.c:275:
+		if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#545: FILE: kernel/user.c:276:
+			printk("C11: spin_unlock task_list\n");

ERROR:SPACING: space required before the open parenthesis '('
#551: FILE: kernel/user.c:282:
+		if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#552: FILE: kernel/user.c:283:
+			printk("C12: dec user %d\n", uid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: kernel/user.c:294:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#564: FILE: kernel/user.c:295:
+	if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#565: FILE: kernel/user.c:296:
+		printk("D1: send_task_to_user %p enter\n", p);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_task_to_user', this function's name, in a string
#565: FILE: kernel/user.c:296:
+		printk("D1: send_task_to_user %p enter\n", p);

ERROR:SPACING: space required before the open parenthesis '('
#569: FILE: kernel/user.c:300:
+	if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#570: FILE: kernel/user.c:301:
+		printk("D1: before lock uidhash\n");

ERROR:SPACING: space required before the open parenthesis '('
#573: FILE: kernel/user.c:304:
+	if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#574: FILE: kernel/user.c:305:
+		printk("D2: lock uidhash\n");

ERROR:SPACING: space required before the open parenthesis '('
#579: FILE: kernel/user.c:310:
+	if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#580: FILE: kernel/user.c:311:
+		printk("D3: inc user %d\n", uid);

ERROR:SPACING: space required before the open parenthesis '('
#584: FILE: kernel/user.c:315:
+	if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#585: FILE: kernel/user.c:316:
+		printk("D4: unlock uidhash\n");

ERROR:SPACING: space required before the open brace '{'
#587: FILE: kernel/user.c:318:
+	if(&p->user == &root_user){

ERROR:SPACING: space required before the open parenthesis '('
#587: FILE: kernel/user.c:318:
+	if(&p->user == &root_user){

ERROR:SPACING: space required before the open parenthesis '('
#596: FILE: kernel/user.c:327:
+	if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#597: FILE: kernel/user.c:328:
+		printk("D6: before lock task_list %d\n", uid);

ERROR:SPACING: space required before the open parenthesis '('
#601: FILE: kernel/user.c:332:
+	if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#602: FILE: kernel/user.c:333:
+		printk("D6: lock task_list %d\n", uid);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#605: FILE: kernel/user.c:336:
+	list_add_tail(&p->user_tasks,&u->task_list);
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#605: FILE: kernel/user.c:336:
+	list_add_tail(&p->user_tasks,&u->task_list);
 	                             ^

ERROR:SPACING: space required before the open parenthesis '('
#609: FILE: kernel/user.c:340:
+	if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#610: FILE: kernel/user.c:341:
+		printk("D7: unlock task_list %d\n", uid);

ERROR:SPACING: space required before the open parenthesis '('
#615: FILE: kernel/user.c:346:
+	if(fairdebug)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#616: FILE: kernel/user.c:347:
+		printk("D8: dec user %d\n", uid);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000379397.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 53 errors, 43 warnings, 8 checks, 490 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000379397.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
