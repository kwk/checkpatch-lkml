WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
the most intricate one so far, so I'll submit it separately after I submit to

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#86: 
   Signed-off-by: Dave Airlie <airlied@linux.ie>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#92: 
   Signed-off-by: Dave Airlie <airlied@linux.ie>

WARNING:BAD_SIGN_OFF: Duplicate signature
#92: 
   Signed-off-by: Dave Airlie <airlied@linux.ie>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#98: 
   Signed-off-by: Dave Airlie <airlied@linux.ie>

WARNING:BAD_SIGN_OFF: Duplicate signature
#98: 
   Signed-off-by: Dave Airlie <airlied@linux.ie>

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct drm_device *' should also have an identifier name
#183: FILE: drivers/char/drm/drmP.h:560:
+	int (*open_helper)(struct drm_device *, drm_file_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'drm_file_t *' should also have an identifier name
#183: FILE: drivers/char/drm/drmP.h:560:
+	int (*open_helper)(struct drm_device *, drm_file_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct drm_device *' should also have an identifier name
#184: FILE: drivers/char/drm/drmP.h:561:
+	void (*free_filp_priv)(struct drm_device *, drm_file_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'drm_file_t *' should also have an identifier name
#184: FILE: drivers/char/drm/drmP.h:561:
+	void (*free_filp_priv)(struct drm_device *, drm_file_t *);

WARNING:INLINE: plain inline is preferred over __inline__
#205: FILE: drivers/char/drm/drmP.h:703:
+static __inline__ int drm_core_check_feature(struct drm_device *dev, int feature)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/char/drm/drmP.h:711:
+  return drm_core_check_feature(dev, DRIVER_USE_AGP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/char/drm/drmP.h:720:
+  return drm_core_check_feature(dev, DRIVER_USE_MTRR);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#333: FILE: drivers/char/drm/drm_bufs.h:126:
+			if ( map->type == _DRM_FRAME_BUFFER ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/char/drm/drm_bufs.h:127:
+			if ( map->type == _DRM_FRAME_BUFFER ||
+			     (map->flags & _DRM_WRITE_COMBINING) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#334: FILE: drivers/char/drm/drm_bufs.h:127:
+			     (map->flags & _DRM_WRITE_COMBINING) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#335: FILE: drivers/char/drm/drm_bufs.h:128:
+				map->mtrr = mtrr_add( map->offset, map->size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/char/drm/drm_bufs.h:129:
+				map->mtrr = mtrr_add( map->offset, map->size,
+						      MTRR_TYPE_WRCOMB, 1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#336: FILE: drivers/char/drm/drm_bufs.h:129:
+						      MTRR_TYPE_WRCOMB, 1 );

WARNING:TABSTOP: Statements should start on a tabstop
#375: FILE: drivers/char/drm/drm_bufs.h:265:
+		  if (drm_core_has_MTRR(dev)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (18, 32)
#375: FILE: drivers/char/drm/drm_bufs.h:265:
+		  if (drm_core_has_MTRR(dev)) {
+				if (map->mtrr >= 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#378: FILE: drivers/char/drm/drm_bufs.h:268:
+					int retcode;
+					retcode = mtrr_del(map->mtrr,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#412: FILE: drivers/char/drm/drm_bufs.h:538:
+	if (!drm_core_check_feature(dev, DRIVER_PCI_DMA)) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#430: FILE: drivers/char/drm/drm_bufs.h:767:
+	if (!drm_core_check_feature(dev, DRIVER_SG)) return -EINVAL;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#473: FILE: drivers/char/drm/drm_bufs.h:1174:
+		    (drm_core_check_feature(dev, DRIVER_SG) && (dma->flags & _DRM_DMA_USE_SG)) ) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#586: FILE: drivers/char/drm/drm_drv.h:397:
+						if ( map->mtrr >= 0 ) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

ERROR:SPACING: space prohibited after that open parenthesis '('
#586: FILE: drivers/char/drm/drm_drv.h:397:
+						if ( map->mtrr >= 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#586: FILE: drivers/char/drm/drm_drv.h:397:
+						if ( map->mtrr >= 0 ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#588: FILE: drivers/char/drm/drm_drv.h:399:
+							int retcode;
+							retcode = mtrr_del( map->mtrr,

ERROR:SPACING: space prohibited after that open parenthesis '('
#588: FILE: drivers/char/drm/drm_drv.h:399:
+							retcode = mtrr_del( map->mtrr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: drivers/char/drm/drm_drv.h:400:
+							retcode = mtrr_del( map->mtrr,
+									    map->offset,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#590: FILE: drivers/char/drm/drm_drv.h:401:
+									    map->size );

ERROR:SPACING: space prohibited after that open parenthesis '('
#591: FILE: drivers/char/drm/drm_drv.h:402:
+							DRM_DEBUG( "mtrr_del=%d\n", retcode );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#591: FILE: drivers/char/drm/drm_drv.h:402:
+							DRM_DEBUG( "mtrr_del=%d\n", retcode );

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#638: FILE: drivers/char/drm/drm_drv.h:523:
+	if (drm_core_has_AGP(dev))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->agp == NULL'
#641: FILE: drivers/char/drm/drm_drv.h:526:
+		if (drm_core_check_feature(dev, DRIVER_REQUIRE_AGP) && (dev->agp == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->agp"
#641: FILE: drivers/char/drm/drm_drv.h:526:
+		if (drm_core_check_feature(dev, DRIVER_REQUIRE_AGP) && (dev->agp == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#642: FILE: drivers/char/drm/drm_drv.h:527:
+			DRM_ERROR( "Cannot initialize the agpgart module.\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#642: FILE: drivers/char/drm/drm_drv.h:527:
+			DRM_ERROR( "Cannot initialize the agpgart module.\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#644: FILE: drivers/char/drm/drm_drv.h:529:
+			DRM(takedown)( dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#644: FILE: drivers/char/drm/drm_drv.h:529:
+			DRM(takedown)( dev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#649: FILE: drivers/char/drm/drm_drv.h:534:
+				dev->agp->agp_mtrr = mtrr_add( dev->agp->agp_info.aper_base,

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#650: FILE: drivers/char/drm/drm_drv.h:535:
+							       dev->agp->agp_info.aper_size*1024*1024,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: drivers/char/drm/drm_drv.h:535:
+				dev->agp->agp_mtrr = mtrr_add( dev->agp->agp_info.aper_base,
+							       dev->agp->agp_info.aper_size*1024*1024,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#650: FILE: drivers/char/drm/drm_drv.h:535:
+							       dev->agp->agp_info.aper_size*1024*1024,
 							                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#650: FILE: drivers/char/drm/drm_drv.h:535:
+							       dev->agp->agp_info.aper_size*1024*1024,
 							                                        ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#652: FILE: drivers/char/drm/drm_drv.h:537:
+							       1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#704: FILE: drivers/char/drm/drm_drv.h:635:
+		if (drm_core_has_AGP(dev) && dev->agp ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#754: FILE: drivers/char/drm/drm_fops.h:77:
+		ret=dev->fn_tbl.open_helper(dev, priv);
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#767: FILE: drivers/char/drm/drm_fops.h:114:
+	filp->private_data=NULL;
 	                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: drivers/char/drm/drm_memory.h:137:
+  return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/char/drm/drm_memory.h:142:
+  return NULL;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#801: FILE: drivers/char/drm/drm_memory.h:145:
+static inline unsigned long drm_follow_page (void *vaddr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: drivers/char/drm/drm_memory.h:147:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: drivers/char/drm/drm_os_linux.h:50:
+  unsigned long aper_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: drivers/char/drm/drm_os_linux.h:51:
+  unsigned long aper_size;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#897: FILE: drivers/char/drm/drm_os_linux.h:53:
+};
+#define DRM_AGP_MEM             int

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#902: FILE: drivers/char/drm/drm_os_linux.h:58:
+static __inline__ int mtrr_add (unsigned long base, unsigned long size,

WARNING:INLINE: plain inline is preferred over __inline__
#902: FILE: drivers/char/drm/drm_os_linux.h:58:
+static __inline__ int mtrr_add (unsigned long base, unsigned long size,

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: drivers/char/drm/drm_os_linux.h:59:
+                                unsigned int type, char increment)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: drivers/char/drm/drm_os_linux.h:59:
+                                unsigned int type, char increment)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: drivers/char/drm/drm_os_linux.h:61:
+    return -ENODEV;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#908: FILE: drivers/char/drm/drm_os_linux.h:64:
+static __inline__ int mtrr_del (int reg, unsigned long base,

WARNING:INLINE: plain inline is preferred over __inline__
#908: FILE: drivers/char/drm/drm_os_linux.h:64:
+static __inline__ int mtrr_del (int reg, unsigned long base,

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: drivers/char/drm/drm_os_linux.h:65:
+                                unsigned long size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: drivers/char/drm/drm_os_linux.h:65:
+                                unsigned long size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: drivers/char/drm/drm_os_linux.h:67:
+    return -ENODEV;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#913: FILE: drivers/char/drm/drm_os_linux.h:69:
+}
+#define MTRR_TYPE_WRCOMB     1

WARNING:INLINE: plain inline is preferred over __inline__
#975: FILE: drivers/char/drm/drm_vm.h:115:
+static __inline__ struct page *DRM(do_vm_nopage)(struct vm_area_struct *vma,

WARNING:TABSTOP: Statements should start on a tabstop
#1016: FILE: drivers/char/drm/drm_vm.h:585:
+	  if (drm_core_has_AGP(dev) && dev->agp->cant_use_aperture) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#1387: FILE: drivers/char/drm/radeon_drv.h:64:
+	int64_t radeon_fb_delta;

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1439: FILE: drivers/char/drm/radeon_state.c:2583:
+	radeon_priv = (struct drm_radeon_driver_file_fields *)DRM(alloc)(sizeof(*radeon_priv), DRM_MEM_FILES);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1454: FILE: drivers/char/drm/radeon_state.c:2596:
+
+

WARNING:TABSTOP: Statements should start on a tabstop
#1457: FILE: drivers/char/drm/radeon_state.c:2599:
+	 struct drm_radeon_driver_file_fields *radeon_priv = filp_priv->driver_priv;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253024.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 37 warnings, 12 checks, 1220 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253024.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
