WARNING:TYPO_SPELLING: 'lastest' may be misspelled - perhaps 'latest'?
#23: 
Here is the patch that replace pcihpfs with sysfs. (against the lastest
                                                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
#	           ChangeSet	1.956   -> 1.957  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
#	drivers/hotplug/cpqphp_ctrl.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
#	drivers/hotplug/pci_hotplug.h	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#	drivers/hotplug/cpci_hotplug_core.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#	drivers/hotplug/pci_hotplug_core.c	1.31    -> 1.32   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#	drivers/hotplug/ibmphp_core.c	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# 03/01/22	stanley@manticore.sh.intel.com	1.957

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# Replace pcihpfs with sysfs

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#49: 
--- a/drivers/hotplug/cpci_hotplug_core.c	Wed Jan 22 09:30:20 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hotplug_slot *' should also have an identifier name
#124: FILE: drivers/hotplug/pci_hotplug.h:51:
+	ssize_t (*show)(struct hotplug_slot *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#124: FILE: drivers/hotplug/pci_hotplug.h:51:
+	ssize_t (*show)(struct hotplug_slot *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hotplug_slot *' should also have an identifier name
#125: FILE: drivers/hotplug/pci_hotplug.h:52:
+	ssize_t (*store)(struct hotplug_slot *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#125: FILE: drivers/hotplug/pci_hotplug.h:52:
+	ssize_t (*store)(struct hotplug_slot *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#125: FILE: drivers/hotplug/pci_hotplug.h:52:
+	ssize_t (*store)(struct hotplug_slot *, const char *, size_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/hotplug/pci_hotplug_core.c:82:
+static ssize_t hotplug_slot_attr_show(struct kobject *kobj,
+		struct attribute *attr, char *buf)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#187: FILE: drivers/hotplug/pci_hotplug_core.c:84:
+	struct hotplug_slot *slot=container_of(kobj,
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#188: FILE: drivers/hotplug/pci_hotplug_core.c:85:
+			struct hotplug_slot,kobj);
 			                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/hotplug/pci_hotplug_core.c:92:
+static ssize_t hotplug_slot_attr_store(struct kobject *kobj,
+		struct attribute *attr, const char *buf, size_t len)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#197: FILE: drivers/hotplug/pci_hotplug_core.c:94:
+	struct hotplug_slot *slot=container_of(kobj,
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/hotplug/pci_hotplug_core.c:95:
+			struct hotplug_slot,kobj);
 			                   ^

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#204: FILE: drivers/hotplug/pci_hotplug_core.c:101:
+static struct sysfs_ops hotplug_slot_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#215: FILE: drivers/hotplug/pci_hotplug_core.c:112:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#663: FILE: drivers/hotplug/pci_hotplug_core.c:174:
+static ssize_t power_read_file (struct hotplug_slot *slot, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#701: FILE: drivers/hotplug/pci_hotplug_core.c:182:
+	retval = sprintf (buf, "%d\n", value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#708: FILE: drivers/hotplug/pci_hotplug_core.c:187:
+static ssize_t power_write_file (struct hotplug_slot *slot, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: drivers/hotplug/pci_hotplug_core.c:188:
+static ssize_t power_write_file (struct hotplug_slot *slot, const char *buf,
+		size_t count)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#737: FILE: drivers/hotplug/pci_hotplug_core.c:193:
+	retval = sscanf(buf, "%ld", &power);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: drivers/hotplug/pci_hotplug_core.c:199:
+	dbg ("power = %ld\n", power);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#764: FILE: drivers/hotplug/pci_hotplug_core.c:229:
+	.attr = {.name = "power", .mode = S_IFREG | S_IRUGO | S_IWUSR},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#769: FILE: drivers/hotplug/pci_hotplug_core.c:234:
+static ssize_t attention_read_file (struct hotplug_slot *slot, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#806: FILE: drivers/hotplug/pci_hotplug_core.c:242:
+	retval = sprintf (buf, "%d\n", value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#814: FILE: drivers/hotplug/pci_hotplug_core.c:248:
+static ssize_t attention_write_file (struct hotplug_slot *slot, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#815: FILE: drivers/hotplug/pci_hotplug_core.c:249:
+static ssize_t attention_write_file (struct hotplug_slot *slot, const char *buf,
+		size_t count)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#842: FILE: drivers/hotplug/pci_hotplug_core.c:255:
+	retval = sscanf (buf, "%ld", &lattention);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#842: FILE: drivers/hotplug/pci_hotplug_core.c:255:
+	retval = sscanf (buf, "%ld", &lattention);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#851: FILE: drivers/hotplug/pci_hotplug_core.c:261:
+	attention = (u8)(lattention & 0xff );

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#868: FILE: drivers/hotplug/pci_hotplug_core.c:279:
+	.attr = {.name = "attention", .mode = S_IFREG | S_IRUGO | S_IWUSR},

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#873: FILE: drivers/hotplug/pci_hotplug_core.c:284:
+static ssize_t latch_read_file (struct hotplug_slot *slot, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#910: FILE: drivers/hotplug/pci_hotplug_core.c:292:
+	retval = sprintf (buf, "%d\n", value);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#919: FILE: drivers/hotplug/pci_hotplug_core.c:299:
+	.attr = {.name = "latch", .mode = S_IFREG | S_IRUGO | S_IWUSR},

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#923: FILE: drivers/hotplug/pci_hotplug_core.c:303:
+static ssize_t presence_read_file (struct hotplug_slot *slot, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#960: FILE: drivers/hotplug/pci_hotplug_core.c:311:
+	retval = sprintf (buf, "%d\n", value);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#968: FILE: drivers/hotplug/pci_hotplug_core.c:318:
+	.attr = {.name = "adapter", .mode = S_IFREG | S_IRUGO | S_IWUSR},

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#975: FILE: drivers/hotplug/pci_hotplug_core.c:324:
+static ssize_t max_bus_speed_read_file (struct hotplug_slot *slot, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1017: FILE: drivers/hotplug/pci_hotplug_core.c:339:
+	retval = sprintf (buf, "%s\n", speed_string);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1026: FILE: drivers/hotplug/pci_hotplug_core.c:346:
+	.attr = {.name = "max_bus_speed", .mode = S_IFREG | S_IRUGO | S_IWUSR},

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1030: FILE: drivers/hotplug/pci_hotplug_core.c:350:
+static ssize_t cur_bus_speed_read_file (struct hotplug_slot *slot, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1072: FILE: drivers/hotplug/pci_hotplug_core.c:365:
+	retval = sprintf (buf, "%s\n", speed_string);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1081: FILE: drivers/hotplug/pci_hotplug_core.c:372:
+	.attr = {.name = "cur_bus_speed", .mode = S_IFREG | S_IRUGO | S_IWUSR},

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1085: FILE: drivers/hotplug/pci_hotplug_core.c:376:
+static ssize_t test_write_file (struct hotplug_slot *slot, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1086: FILE: drivers/hotplug/pci_hotplug_core.c:377:
+static ssize_t test_write_file (struct hotplug_slot *slot, const char *buf,
+		size_t count)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1113: FILE: drivers/hotplug/pci_hotplug_core.c:382:
+	retval = sscanf (buf, "%d", &test);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1113: FILE: drivers/hotplug/pci_hotplug_core.c:382:
+	retval = sscanf (buf, "%d", &test);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1137: FILE: drivers/hotplug/pci_hotplug_core.c:405:
+	.attr = {.name = "test", .mode = S_IFREG | S_IRUGO | S_IWUSR},

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->enable_slot'
#1145: FILE: drivers/hotplug/pci_hotplug_core.c:411:
+	if ((slot->ops->enable_slot) ||
+	    (slot->ops->disable_slot) ||
+	    (slot->ops->get_power_status))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->disable_slot'
#1145: FILE: drivers/hotplug/pci_hotplug_core.c:411:
+	if ((slot->ops->enable_slot) ||
+	    (slot->ops->disable_slot) ||
+	    (slot->ops->get_power_status))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->get_power_status'
#1145: FILE: drivers/hotplug/pci_hotplug_core.c:411:
+	if ((slot->ops->enable_slot) ||
+	    (slot->ops->disable_slot) ||
+	    (slot->ops->get_power_status))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->set_attention_status'
#1150: FILE: drivers/hotplug/pci_hotplug_core.c:416:
+	if ((slot->ops->set_attention_status) ||
+	    (slot->ops->get_attention_status))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->get_attention_status'
#1150: FILE: drivers/hotplug/pci_hotplug_core.c:416:
+	if ((slot->ops->set_attention_status) ||
+	    (slot->ops->get_attention_status))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->enable_slot'
#1234: FILE: drivers/hotplug/pci_hotplug_core.c:439:
+	if ((slot->ops->enable_slot) ||
+	    (slot->ops->disable_slot) ||
+	    (slot->ops->get_power_status))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->disable_slot'
#1234: FILE: drivers/hotplug/pci_hotplug_core.c:439:
+	if ((slot->ops->enable_slot) ||
+	    (slot->ops->disable_slot) ||
+	    (slot->ops->get_power_status))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->get_power_status'
#1234: FILE: drivers/hotplug/pci_hotplug_core.c:439:
+	if ((slot->ops->enable_slot) ||
+	    (slot->ops->disable_slot) ||
+	    (slot->ops->get_power_status))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->set_attention_status'
#1239: FILE: drivers/hotplug/pci_hotplug_core.c:444:
+	if ((slot->ops->set_attention_status) ||
+	    (slot->ops->get_attention_status))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->ops->get_attention_status'
#1239: FILE: drivers/hotplug/pci_hotplug_core.c:444:
+	if ((slot->ops->set_attention_status) ||
+	    (slot->ops->get_attention_status))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1311: FILE: drivers/hotplug/pci_hotplug_core.c:509:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398146.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 53 warnings, 16 checks, 1355 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398146.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
