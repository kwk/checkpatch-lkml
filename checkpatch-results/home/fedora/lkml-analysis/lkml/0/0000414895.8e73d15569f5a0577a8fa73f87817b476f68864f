WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	           ChangeSet	1.802   -> 1.803  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	   arch/i386/Kconfig	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	drivers/parisc/Kconfig	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	  arch/alpha/Kconfig	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	    drivers/Makefile	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	               (new)	        -> 1.1     drivers/eisa/Makefile

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	               (new)	        -> 1.2     drivers/eisa/eisa.ids

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	               (new)	        -> 1.1     drivers/eisa/Kconfig

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	               (new)	        -> 1.2     drivers/eisa/eisa-bus.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	               (new)	        -> 1.2     include/linux/eisa.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# 02/11/10	maz@hina.wild-wind.fr.eu.org	1.803

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# Sysfs infrastructure for the EISA bus.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# Provides minimal probing/registration/naming.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#73: 
--- a/arch/alpha/Kconfig	Sun Nov 10 22:49:03 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#112: FILE: drivers/eisa/Kconfig:4:
+config EISA_NAMES
+	bool "EISA device name database"
+	depends on EISA
+	default y
+	---help---
+	  By default, the kernel contains a database of all known EISA
+	  device names to make the information in sysfs comprehensible
+	  to the user. This database increases size of the kernel
+	  image by about 40KB, but it gets freed after the system
+	  boots up, so it doesn't take up kernel memory. Anyway, if
+	  you are building an installation floppy or kernel for an
+	  embedded system where kernel image size really matters, you
+	  can disable this feature and you'll get device ID instead of
+	  names.
+
+	  When in doubt, say Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#147: FILE: drivers/eisa/eisa-bus.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#161: FILE: drivers/eisa/eisa-bus.c:15:
+#include <asm/io.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: drivers/eisa/eisa-bus.c:17:
+#define EISA_DEVINFO(i,s) { .id = { .sig = i }, .name = s }
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: drivers/eisa/eisa-bus.c:30:
+#define EISA_INFOS (sizeof (eisa_table) / (sizeof (struct eisa_device_info)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: drivers/eisa/eisa-bus.c:30:
+#define EISA_INFOS (sizeof (eisa_table) / (sizeof (struct eisa_device_info)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: drivers/eisa/eisa-bus.c:32:
+static void __init eisa_name_device (struct eisa_device *edev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: drivers/eisa/eisa-bus.c:37:
+		if (!strcmp (edev->id.sig, eisa_table[i].id.sig)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: drivers/eisa/eisa-bus.c:38:
+			strcpy (edev->dev.name, eisa_table[i].name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: drivers/eisa/eisa-bus.c:44:
+	sprintf (edev->dev.name, "Unknown EISA device %s", edev->id.sig);

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/eisa/eisa-bus.c:49:
+        static char sig_str[EISA_SIG_LEN];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/eisa/eisa-bus.c:49:
+        static char sig_str[EISA_SIG_LEN];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/eisa/eisa-bus.c:51:
+        u16 rev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/eisa/eisa-bus.c:51:
+        u16 rev;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: drivers/eisa/eisa-bus.c:54:
+	sig[0] = inb (addr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: drivers/eisa/eisa-bus.c:57:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/eisa/eisa-bus.c:57:
+                return NULL;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: drivers/eisa/eisa-bus.c:60:
+		sig[i] = inb (addr + i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: drivers/eisa/eisa-bus.c:61:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: drivers/eisa/eisa-bus.c:62:
+        sig_str[0] = ((sig[0] >> 2) & 0x1f) + ('A' - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/eisa/eisa-bus.c:62:
+        sig_str[0] = ((sig[0] >> 2) & 0x1f) + ('A' - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: drivers/eisa/eisa-bus.c:63:
+        sig_str[1] = (((sig[0] & 3) << 3) | (sig[1] >> 5)) + ('A' - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/eisa/eisa-bus.c:63:
+        sig_str[1] = (((sig[0] & 3) << 3) | (sig[1] >> 5)) + ('A' - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: drivers/eisa/eisa-bus.c:64:
+        sig_str[2] = (sig[1] & 0x1f) + ('A' - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/eisa/eisa-bus.c:64:
+        sig_str[2] = (sig[1] & 0x1f) + ('A' - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/eisa/eisa-bus.c:65:
+        rev = (sig[2] << 8) | sig[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/eisa/eisa-bus.c:65:
+        rev = (sig[2] << 8) | sig[3];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/eisa/eisa-bus.c:66:
+        sprintf(sig_str + 3, "%04X", rev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/eisa/eisa-bus.c:66:
+        sprintf(sig_str + 3, "%04X", rev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: drivers/eisa/eisa-bus.c:68:
+        return sig_str;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/eisa/eisa-bus.c:68:
+        return sig_str;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: drivers/eisa/eisa-bus.c:71:
+static int eisa_bus_match (struct device *dev, struct device_driver *drv)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#219: FILE: drivers/eisa/eisa-bus.c:73:
+	struct eisa_device *edev = to_eisa_device (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: drivers/eisa/eisa-bus.c:74:
+	struct eisa_driver *edrv = to_eisa_driver (drv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#226: FILE: drivers/eisa/eisa-bus.c:80:
+	while (strlen (eids->sig)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: drivers/eisa/eisa-bus.c:81:
+		if (!strcmp (eids->sig, edev->id.sig))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/eisa/eisa-bus.c:97:
+       .name           = "EISA Bridge",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/eisa/eisa-bus.c:98:
+       .bus_id         = "eisa",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: drivers/eisa/eisa-bus.c:101:
+int eisa_driver_register (struct eisa_driver *edrv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: drivers/eisa/eisa-bus.c:104:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: drivers/eisa/eisa-bus.c:106:
+	if ((r = driver_register (&edrv->driver)) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&edrv->driver'
#252: FILE: drivers/eisa/eisa-bus.c:106:
+	if ((r = driver_register (&edrv->driver)) < 0)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#252: FILE: drivers/eisa/eisa-bus.c:106:
+	if ((r = driver_register (&edrv->driver)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: drivers/eisa/eisa-bus.c:112:
+void eisa_driver_unregister (struct eisa_driver *edrv)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: drivers/eisa/eisa-bus.c:114:
+	bus_remove_driver (&edrv->driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#261: FILE: drivers/eisa/eisa-bus.c:115:
+	driver_unregister (&edrv->driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: drivers/eisa/eisa-bus.c:118:
+static ssize_t eisa_show_sig (struct device *dev, char *buf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: drivers/eisa/eisa-bus.c:121:
+        struct eisa_device *edev = to_eisa_device (dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/eisa/eisa-bus.c:121:
+        struct eisa_device *edev = to_eisa_device (dev);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: drivers/eisa/eisa-bus.c:121:
+        struct eisa_device *edev = to_eisa_device (dev);

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: drivers/eisa/eisa-bus.c:122:
+        return off ? 0 : sprintf (buf,"%s\n", edev->id.sig);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#268: FILE: drivers/eisa/eisa-bus.c:122:
+        struct eisa_device *edev = to_eisa_device (dev);
+        return off ? 0 : sprintf (buf,"%s\n", edev->id.sig);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/eisa/eisa-bus.c:122:
+        return off ? 0 : sprintf (buf,"%s\n", edev->id.sig);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: drivers/eisa/eisa-bus.c:122:
+        return off ? 0 : sprintf (buf,"%s\n", edev->id.sig);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#268: FILE: drivers/eisa/eisa-bus.c:122:
+        return off ? 0 : sprintf (buf,"%s\n", edev->id.sig);
                                      ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'eisa_show_sig' to 'signature_show'
#269: FILE: drivers/eisa/eisa-bus.c:123:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#271: FILE: drivers/eisa/eisa-bus.c:125:
+static DEVICE_ATTR(signature, S_IRUGO, eisa_show_sig, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: drivers/eisa/eisa-bus.c:127:
+static void __init eisa_register_device (char *sig, int slot)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: drivers/eisa/eisa-bus.c:131:
+	if (!(edev = kmalloc (sizeof (*edev), GFP_KERNEL)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: drivers/eisa/eisa-bus.c:131:
+	if (!(edev = kmalloc (sizeof (*edev), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#277: FILE: drivers/eisa/eisa-bus.c:131:
+	if (!(edev = kmalloc (sizeof (*edev), GFP_KERNEL)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: drivers/eisa/eisa-bus.c:134:
+	memset (edev, 0, sizeof (*edev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: drivers/eisa/eisa-bus.c:134:
+	memset (edev, 0, sizeof (*edev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#281: FILE: drivers/eisa/eisa-bus.c:135:
+	strcpy (edev->id.sig, sig);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: drivers/eisa/eisa-bus.c:138:
+	eisa_name_device (edev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: drivers/eisa/eisa-bus.c:141:
+	sprintf (edev->dev.bus_id, "00:%02X", slot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: drivers/eisa/eisa-bus.c:143:
+	if (device_register (&edev->dev)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&edev->dev'
#289: FILE: drivers/eisa/eisa-bus.c:143:
+	if (device_register (&edev->dev)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: drivers/eisa/eisa-bus.c:144:
+		kfree (edev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: drivers/eisa/eisa-bus.c:148:
+	device_create_file (&edev->dev, &dev_attr_signature);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: drivers/eisa/eisa-bus.c:151:
+static int __init eisa_probe (void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: drivers/eisa/eisa-bus.c:153:
+        int i, c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/eisa/eisa-bus.c:153:
+        int i, c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/eisa/eisa-bus.c:154:
+        char *str;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/eisa/eisa-bus.c:154:
+        char *str;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/eisa/eisa-bus.c:155:
+        unsigned long slot_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/eisa/eisa-bus.c:155:
+        unsigned long slot_addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: drivers/eisa/eisa-bus.c:157:
+        printk (KERN_INFO "EISA: Probing bus...\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/eisa/eisa-bus.c:157:
+        printk (KERN_INFO "EISA: Probing bus...\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#303: FILE: drivers/eisa/eisa-bus.c:157:
+        printk (KERN_INFO "EISA: Probing bus...\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: drivers/eisa/eisa-bus.c:157:
+        printk (KERN_INFO "EISA: Probing bus...\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: drivers/eisa/eisa-bus.c:158:
+        for (c = 0, i = 0; i <= EISA_MAX_SLOTS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/eisa/eisa-bus.c:158:
+        for (c = 0, i = 0; i <= EISA_MAX_SLOTS; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: drivers/eisa/eisa-bus.c:159:
+                slot_addr = (0x1000 * i) + EISA_VENDOR_ID_OFFSET;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/eisa/eisa-bus.c:159:
+                slot_addr = (0x1000 * i) + EISA_VENDOR_ID_OFFSET;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: drivers/eisa/eisa-bus.c:160:
+                if ((str = decode_eisa_sig (slot_addr))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/eisa/eisa-bus.c:160:
+                if ((str = decode_eisa_sig (slot_addr))) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: drivers/eisa/eisa-bus.c:160:
+                if ((str = decode_eisa_sig (slot_addr))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#306: FILE: drivers/eisa/eisa-bus.c:160:
+                if ((str = decode_eisa_sig (slot_addr))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#308: FILE: drivers/eisa/eisa-bus.c:162:
+				printk (KERN_INFO "EISA: Motherboard %s detected\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: drivers/eisa/eisa-bus.c:162:
+				printk (KERN_INFO "EISA: Motherboard %s detected\n",

CHECK:BRACES: Unbalanced braces around else statement
#310: FILE: drivers/eisa/eisa-bus.c:164:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#311: FILE: drivers/eisa/eisa-bus.c:165:
+				printk (KERN_INFO "EISA: slot %d : %s detected.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: drivers/eisa/eisa-bus.c:165:
+				printk (KERN_INFO "EISA: slot %d : %s detected.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#317: FILE: drivers/eisa/eisa-bus.c:171:
+			eisa_register_device (str, i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: drivers/eisa/eisa-bus.c:172:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: drivers/eisa/eisa-bus.c:172:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: drivers/eisa/eisa-bus.c:173:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/eisa/eisa-bus.c:173:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: drivers/eisa/eisa-bus.c:174:
+        printk (KERN_INFO "EISA: Detected %d card%s.\n", c, c < 2 ? "" : "s");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/eisa/eisa-bus.c:174:
+        printk (KERN_INFO "EISA: Detected %d card%s.\n", c, c < 2 ? "" : "s");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#320: FILE: drivers/eisa/eisa-bus.c:174:
+        printk (KERN_INFO "EISA: Detected %d card%s.\n", c, c < 2 ? "" : "s");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: drivers/eisa/eisa-bus.c:174:
+        printk (KERN_INFO "EISA: Detected %d card%s.\n", c, c < 2 ? "" : "s");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: drivers/eisa/eisa-bus.c:179:
+static int __init eisa_init (void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: drivers/eisa/eisa-bus.c:182:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#329: FILE: drivers/eisa/eisa-bus.c:183:
+	if ((r = bus_register (&eisa_bus_type)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&eisa_bus_type'
#329: FILE: drivers/eisa/eisa-bus.c:183:
+	if ((r = bus_register (&eisa_bus_type)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#329: FILE: drivers/eisa/eisa-bus.c:183:
+	if ((r = bus_register (&eisa_bus_type)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: drivers/eisa/eisa-bus.c:185:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#332: FILE: drivers/eisa/eisa-bus.c:186:
+	if ((r = device_register (&eisa_bus_root))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&eisa_bus_root'
#332: FILE: drivers/eisa/eisa-bus.c:186:
+	if ((r = device_register (&eisa_bus_root))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#332: FILE: drivers/eisa/eisa-bus.c:186:
+	if ((r = device_register (&eisa_bus_root))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#333: FILE: drivers/eisa/eisa-bus.c:187:
+		bus_unregister (&eisa_bus_type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#337: FILE: drivers/eisa/eisa-bus.c:191:
+	printk (KERN_INFO "EISA bus registered\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: drivers/eisa/eisa-bus.c:191:
+	printk (KERN_INFO "EISA bus registered\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#338: FILE: drivers/eisa/eisa-bus.c:192:
+	return eisa_probe ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#341: FILE: drivers/eisa/eisa-bus.c:195:
+postcore_initcall (eisa_init);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#343: FILE: drivers/eisa/eisa-bus.c:197:
+EXPORT_SYMBOL (eisa_bus_type);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: drivers/eisa/eisa-bus.c:197:
+EXPORT_SYMBOL (eisa_bus_type);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#344: FILE: drivers/eisa/eisa-bus.c:198:
+EXPORT_SYMBOL (eisa_driver_register);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: drivers/eisa/eisa-bus.c:198:
+EXPORT_SYMBOL (eisa_driver_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#345: FILE: drivers/eisa/eisa-bus.c:199:
+EXPORT_SYMBOL (eisa_driver_unregister);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#345: FILE: drivers/eisa/eisa-bus.c:199:
+EXPORT_SYMBOL (eisa_driver_unregister);

WARNING:TYPO_SPELLING: 'Asyncronous' may be misspelled - perhaps 'Asynchronous'?
#1095: FILE: drivers/eisa/eisa.ids:746:
+ISABE01 "Qua Tech ES-100 8 Channel Asyncronous"
                                    ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Asyncronous' may be misspelled - perhaps 'Asynchronous'?
#1096: FILE: drivers/eisa/eisa.ids:747:
+ISABE02 "Qua Tech QS-100M 4 Channel Asyncronous"
                                     ^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1315: FILE: include/linux/eisa.h:1:
+#ifndef _LINUX_EISA_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1341: FILE: include/linux/eisa.h:27:
+ * signature, slot number, and base address */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1357: FILE: include/linux/eisa.h:43:
+#define to_eisa_driver(drv) container_of(drv,struct eisa_driver, driver)
                                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1360: FILE: include/linux/eisa.h:46:
+int eisa_driver_register (struct eisa_driver *edrv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1361: FILE: include/linux/eisa.h:47:
+void eisa_driver_unregister (struct eisa_driver *edrv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1364: FILE: include/linux/eisa.h:50:
+static inline void *eisa_get_drvdata (struct eisa_device *edev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1366: FILE: include/linux/eisa.h:52:
+        return edev->driver_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: include/linux/eisa.h:52:
+        return edev->driver_data;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1369: FILE: include/linux/eisa.h:55:
+static inline void eisa_set_drvdata (struct eisa_device *edev, void *data)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1371: FILE: include/linux/eisa.h:57:
+        edev->driver_data = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: include/linux/eisa.h:57:
+        edev->driver_data = data;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414895.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 119 warnings, 5 checks, 1267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414895.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
