ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Reiner Sailer <sailer'
#34: 
Signed-off-by: Reiner Sailer <sailer

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#90: FILE: drivers/char/tpm/tpm.h:117:
+extern struct dentry**  tpm_bios_log_setup(char*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo**  bar" should be "foo **bar"
#90: FILE: drivers/char/tpm/tpm.h:117:
+extern struct dentry**  tpm_bios_log_setup(char*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: drivers/char/tpm/tpm.h:117:
+extern struct dentry**  tpm_bios_log_setup(char*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#91: FILE: drivers/char/tpm/tpm.h:118:
+extern void tpm_bios_log_teardown(struct dentry**);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: drivers/char/tpm/tpm.h:118:
+extern void tpm_bios_log_teardown(struct dentry**);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry**' should also have an identifier name
#91: FILE: drivers/char/tpm/tpm.h:118:
+extern void tpm_bios_log_teardown(struct dentry**);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#93: FILE: drivers/char/tpm/tpm.h:120:
+static inline struct dentry* tpm_bios_log_setup(char* name)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#93: FILE: drivers/char/tpm/tpm.h:120:
+static inline struct dentry* tpm_bios_log_setup(char* name)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#97: FILE: drivers/char/tpm/tpm.h:124:
+}
+static inline void tpm_bios_log_teardown(struct dentry** dir)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#97: FILE: drivers/char/tpm/tpm.h:124:
+static inline void tpm_bios_log_teardown(struct dentry** dir)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: drivers/char/tpm/tpm_bios.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#137: FILE: drivers/char/tpm/tpm_bios.c:34:
+	u16 reserved;
+	u32 log_max_len __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#137: FILE: drivers/char/tpm/tpm_bios.c:34:
+	u32 log_max_len __attribute__ ((packed));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#137: FILE: drivers/char/tpm/tpm_bios.c:34:
+	u32 log_max_len __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#138: FILE: drivers/char/tpm/tpm_bios.c:35:
+	u32 log_start_addr __attribute__ ((packed));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#138: FILE: drivers/char/tpm/tpm_bios.c:35:
+	u32 log_start_addr __attribute__ ((packed));

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#170: FILE: drivers/char/tpm/tpm_bios.c:67:
+static const char* tcpa_event_type_strings[] = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#170: FILE: drivers/char/tpm/tpm_bios.c:67:
+static const char* tcpa_event_type_strings[] = {

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#206: FILE: drivers/char/tpm/tpm_bios.c:103:
+static const char* tcpa_pc_event_id_strings[] = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#206: FILE: drivers/char/tpm/tpm_bios.c:103:
+static const char* tcpa_pc_event_id_strings[] = {

WARNING:SPLIT_STRING: quoted string split across lines
#208: FILE: drivers/char/tpm/tpm_bios.c:105:
+	""
+	"SMBIOS",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: drivers/char/tpm/tpm_bios.c:117:
+^I $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: drivers/char/tpm/tpm_bios.c:118:
+};^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#228: FILE: drivers/char/tpm/tpm_bios.c:125:
+static void *tpm_bios_measurements_start(struct seq_file *m, loff_t * pos)

CHECK:SPACING: No space is necessary after a cast
#236: FILE: drivers/char/tpm/tpm_bios.c:133:
+		event = (struct tcpa_event *) addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#251: FILE: drivers/char/tpm/tpm_bios.c:148:
+	event = (struct tcpa_event *) addr;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: drivers/char/tpm/tpm_bios.c:159:
+					loff_t * pos)

CHECK:SPACING: No space is necessary after a cast
#264: FILE: drivers/char/tpm/tpm_bios.c:161:
+	struct tcpa_event *event = (struct tcpa_event *) v;

CHECK:SPACING: No space is necessary after a cast
#272: FILE: drivers/char/tpm/tpm_bios.c:169:
+	event = (struct tcpa_event *) v;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#290: FILE: drivers/char/tpm/tpm_bios.c:187:
+static int get_event_name(char* dest, struct tcpa_event *event, unsigned char* event_entry )

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#290: FILE: drivers/char/tpm/tpm_bios.c:187:
+static int get_event_name(char* dest, struct tcpa_event *event, unsigned char* event_entry )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#290: FILE: drivers/char/tpm/tpm_bios.c:187:
+static int get_event_name(char* dest, struct tcpa_event *event, unsigned char* event_entry )

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: drivers/char/tpm/tpm_bios.c:194:
+	switch(event->event_type) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#318: FILE: drivers/char/tpm/tpm_bios.c:215:
+		if (MAX_TEXT_EVENT > event->event_size) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: drivers/char/tpm/tpm_bios.c:254:
+^Ireturn snprintf( dest, MAX_TEXT_EVENT, "[%.*s%.*s]", n_len, name, d_len, data ); $

ERROR:SPACING: space prohibited after that open parenthesis '('
#357: FILE: drivers/char/tpm/tpm_bios.c:254:
+	return snprintf( dest, MAX_TEXT_EVENT, "[%.*s%.*s]", n_len, name, d_len, data ); 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#357: FILE: drivers/char/tpm/tpm_bios.c:254:
+	return snprintf( dest, MAX_TEXT_EVENT, "[%.*s%.*s]", n_len, name, d_len, data ); 

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#359: FILE: drivers/char/tpm/tpm_bios.c:256:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#363: FILE: drivers/char/tpm/tpm_bios.c:260:
+{
+

CHECK:SPACING: No space is necessary after a cast
#368: FILE: drivers/char/tpm/tpm_bios.c:265:
+	struct tcpa_event *event = (struct tcpa_event *) v;

CHECK:SPACING: No space is necessary after a cast
#370: FILE: drivers/char/tpm/tpm_bios.c:267:
+	    (unsigned char *) (v + sizeof(struct tcpa_event));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#374: FILE: drivers/char/tpm/tpm_bios.c:271:
+		printk(KERN_ERR "%s: ERROR - No Memory for event name\n ",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#374: FILE: drivers/char/tpm/tpm_bios.c:271:
+	if (!eventname) {
+		printk(KERN_ERR "%s: ERROR - No Memory for event name\n ",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: drivers/char/tpm/tpm_bios.c:294:
+^Ilen += get_event_name(eventname, event, event_entry); $

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#416: FILE: drivers/char/tpm/tpm_bios.c:313:
+	if (tcg_eventlog) {
+		kfree(tcg_eventlog);

CHECK:SPACING: No space is necessary after a cast
#428: FILE: drivers/char/tpm/tpm_bios.c:325:
+	struct tcpa_event *event = (struct tcpa_event *) v;

CHECK:SPACING: No space is necessary after a cast
#430: FILE: drivers/char/tpm/tpm_bios.c:327:
+	    (unsigned char *) (v + sizeof(struct tcpa_event));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#434: FILE: drivers/char/tpm/tpm_bios.c:331:
+		printk(KERN_ERR "%s: ERROR - No Memory for event name\n ",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#434: FILE: drivers/char/tpm/tpm_bios.c:331:
+	if (!eventname) {
+		printk(KERN_ERR "%s: ERROR - No Memory for event name\n ",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: drivers/char/tpm/tpm_bios.c:345:
+^Ilen += get_event_name(eventname, event, event_entry); $

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#456: FILE: drivers/char/tpm/tpm_bios.c:353:
+static struct seq_operations tpm_ascii_b_measurments_seqops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#463: FILE: drivers/char/tpm/tpm_bios.c:360:
+static struct seq_operations tpm_binary_b_measurments_seqops = {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tcg_eventlog"
#477: FILE: drivers/char/tpm/tpm_bios.c:374:
+	if (tcg_eventlog != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#478: FILE: drivers/char/tpm/tpm_bios.c:375:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#491: FILE: drivers/char/tpm/tpm_bios.c:388:
+		printk(KERN_ERR "%s: ERROR - Could not get TCPA table\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#497: FILE: drivers/char/tpm/tpm_bios.c:394:
+		printk(KERN_ERR "%s: ERROR - TCPA log area empty\n",

CHECK:SPACING: No space is necessary after a cast
#515: FILE: drivers/char/tpm/tpm_bios.c:412:
+	memcpy((void *) tcg_eventlog, virt, buff->log_max_len);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#526: FILE: drivers/char/tpm/tpm_bios.c:423:
+	if ((err = read_log()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#533: FILE: drivers/char/tpm/tpm_bios.c:430:
+struct file_operations tpm_ascii_bios_measurements_ops = {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#545: FILE: drivers/char/tpm/tpm_bios.c:442:
+	if ((err = read_log()))

WARNING:CONST_STRUCT: struct file_operations should normally be const
#552: FILE: drivers/char/tpm/tpm_bios.c:449:
+struct file_operations tpm_binary_bios_measurements_ops = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IRGRP' are not preferred. Consider using octal permissions '0440'.
#569: FILE: drivers/char/tpm/tpm_bios.c:466:
+				   S_IRUSR | S_IRGRP, tpm_dir, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IRGRP' are not preferred. Consider using octal permissions '0440'.
#576: FILE: drivers/char/tpm/tpm_bios.c:473:
+				   S_IRUSR | S_IRGRP, tpm_dir, NULL,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000131726.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 25 warnings, 15 checks, 552 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000131726.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
