WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#61: FILE: arch/i386/mm/discontig.c:119:
+	printk("NUMA - single node, flat memory mode, but broken in several blocks\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#67: FILE: arch/i386/mm/discontig.c:125:
+		printk("Rounding down maxpfn %ld -> %d\n", max_pfn, pfn);

ERROR:SPACING: space required before the open parenthesis '('
#70: FILE: arch/i386/mm/discontig.c:128:
+	for(i = 0; i < MAX_NUMNODES; i++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#73: FILE: arch/i386/mm/discontig.c:131:
+		printk("node %d start %d\n", i, pfn);

CHECK:BRACES: braces {} should be used on all arms of this statement
#75: FILE: arch/i386/mm/discontig.c:133:
+		if (pfn < max_pfn)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#77: FILE: arch/i386/mm/discontig.c:135:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#80: FILE: arch/i386/mm/discontig.c:138:
+			printk("total %d blocks, max %ld\n", i, max_pfn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#85: FILE: arch/i386/mm/discontig.c:143:
+	printk("physnode_map");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#87: FILE: arch/i386/mm/discontig.c:145:
+	for (pfn = node_start_pfn[0]; pfn <= max_pfn;
+	       pfn += PAGES_PER_ELEMENT)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#92: FILE: arch/i386/mm/discontig.c:150:
+		printk(" %d", physnode_map[pfn / PAGES_PER_ELEMENT]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#94: FILE: arch/i386/mm/discontig.c:152:
+	printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: arch/i386/mm/discontig.c:156:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#180: FILE: arch/i386/mm/discontig.c:316:
+	system_max_low_pfn = max_low_pfn = (find_max_low_pfn() &

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#205: FILE: arch/i386/mm/discontig.c:344:
+		printk ("node %d will remap to vaddr %08lx - \n", nid,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#205: FILE: arch/i386/mm/discontig.c:344:
+		printk ("node %d will remap to vaddr %08lx - \n", nid,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#205: FILE: arch/i386/mm/discontig.c:344:
+		printk ("node %d will remap to vaddr %08lx - \n", nid,

CHECK:SPACING: No space is necessary after a cast
#206: FILE: arch/i386/mm/discontig.c:345:
+			(ulong) node_remap_start_vaddr[nid]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: arch/i386/mm/discontig.c:358:
+	bootmap_size = init_bootmem_node(NODE_DATA(0), min_low_pfn, 0,
+	    (system_max_low_pfn > node_end_pfn[0]) ?

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: arch/i386/mm/discontig.c:473:
+				BUG_ON(max_dma > low);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!NODE_DATA"
#300: FILE: arch/i386/mm/discontig.c:537:
+		if (NODE_DATA(i) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "highmem_start_page"
#304: FILE: arch/i386/mm/discontig.c:541:
+		if (highmem_start_page != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!highmem_start_page"
#307: FILE: arch/i386/mm/discontig.c:544:
+	if (highmem_start_page == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#333: FILE: arch/i386/mm/discontig.c:570:
+	BUG_ON(nid == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: arch/i386/mm/discontig.c:577:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#342: FILE: arch/i386/mm/discontig.c:579:
+	/* shrink size,
+	   which is done in calculate_numa_remap_pages() if normal NUMA */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#342: FILE: arch/i386/mm/discontig.c:579:
+	   which is done in calculate_numa_remap_pages() if normal NUMA */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#344: FILE: arch/i386/mm/discontig.c:581:
+	BUG_ON(start > high);

ERROR:SPACING: space required before the open parenthesis '('
#346: FILE: arch/i386/mm/discontig.c:583:
+	for(pfn = 0; pfn < remapsize; pfn += PTRS_PER_PTE)

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: arch/i386/mm/discontig.c:584:
+                set_pmd_pfn(addr + (pfn << PAGE_SHIFT), high + pfn,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: arch/i386/mm/discontig.c:584:
+                set_pmd_pfn(addr + (pfn << PAGE_SHIFT), high + pfn,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/i386/mm/discontig.c:585:
+                    PAGE_KERNEL_LARGE);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: arch/i386/mm/discontig.c:585:
+                set_pmd_pfn(addr + (pfn << PAGE_SHIFT), high + pfn,
+                    PAGE_KERNEL_LARGE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/i386/mm/discontig.c:585:
+                    PAGE_KERNEL_LARGE);$

ERROR:SPACING: space required before the open parenthesis '('
#351: FILE: arch/i386/mm/discontig.c:588:
+		for(pfn = 0; pfn < remapsize; pfn += PTRS_PER_PTE) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#369: FILE: arch/i386/mm/discontig.c:606:
+	printk("plug_node: %p %p\n", NODE_DATA(nid), node_mem_map);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'plug_node', this function's name, in a string
#369: FILE: arch/i386/mm/discontig.c:606:
+	printk("plug_node: %p %p\n", NODE_DATA(nid), node_mem_map);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#371: FILE: arch/i386/mm/discontig.c:608:
+	printk("zeroed nodedata\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: arch/i386/mm/discontig.c:610:
+^I/* XXX defaults to hotremovable */ $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#376: FILE: arch/i386/mm/discontig.c:613:
+	BUG_ON(virt_to_phys((char *)MAX_DMA_ADDRESS) >> PAGE_SHIFT > start);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: arch/i386/mm/discontig.c:624:
+	free_area_init_node(nid, NODE_DATA(nid), node_mem_map, zones_size,
+	    start, zholes_size);

ERROR:SPACING: space required before the open parenthesis '('
#390: FILE: arch/i386/mm/discontig.c:627:
+	for(pgdat = &pgdat_list; *pgdat; pgdat = &(*pgdat)->pgdat_next)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pgdat"
#396: FILE: arch/i386/mm/discontig.c:633:
+	if (*pgdat == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#400: FILE: arch/i386/mm/discontig.c:637:
+		struct zone *z;
+		for_each_zone (z)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#400: FILE: arch/i386/mm/discontig.c:637:
+		for_each_zone (z)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#401: FILE: arch/i386/mm/discontig.c:638:
+			printk("%p ", z);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#402: FILE: arch/i386/mm/discontig.c:639:
+		printk("\n");

ERROR:SPACING: space required before the open parenthesis '('
#406: FILE: arch/i386/mm/discontig.c:643:
+	for(i = 0; i < MAX_NR_ZONES; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#412: FILE: arch/i386/mm/discontig.c:649:
+		for(j = 0; j < z->spanned_pages; j++) {

ERROR:SPACING: space required before the open parenthesis '('
#434: FILE: arch/i386/mm/discontig.c:671:
+	for(i = 0; i < MAX_NR_ZONES; i++) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#445: FILE: arch/i386/mm/discontig.c:682:
+{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: arch/i386/mm/discontig.c:686:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#459: FILE: arch/i386/mm/discontig.c:696:
+	for(i = 0; i < MAX_NR_ZONES; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#479: FILE: arch/i386/mm/discontig.c:716:
+	for(i = 0; i < MAX_NR_ZONES; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#487: FILE: arch/i386/mm/discontig.c:724:
+	for(pgdat = pgdat_list; pgdat; pgdat = pgdat->pgdat_next)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#492: FILE: arch/i386/mm/discontig.c:729:
+	BUG_ON(pgdat == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pgdat"
#492: FILE: arch/i386/mm/discontig.c:729:
+	BUG_ON(pgdat == NULL);

ERROR:SPACING: space required before the open parenthesis '('
#494: FILE: arch/i386/mm/discontig.c:731:
+	for(i = 0; i < MAX_NR_ZONES; i++)

ERROR:SPACING: space required before the open parenthesis '('
#502: FILE: arch/i386/mm/discontig.c:739:
+	for(pfn = 0; pfn < remapsize; pfn += PTRS_PER_PTE)

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: arch/i386/mm/discontig.c:740:
+                set_pmd_pfn(addr + (pfn << PAGE_SHIFT), 0, __pgprot(0));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/i386/mm/discontig.c:740:
+                set_pmd_pfn(addr + (pfn << PAGE_SHIFT), 0, __pgprot(0));$

ERROR:SPACING: space required before the open parenthesis '('
#506: FILE: arch/i386/mm/discontig.c:743:
+		for(pfn = 0; pfn < remapsize; pfn += PTRS_PER_PTE) {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#528: FILE: arch/i386/mm/init.c:46:
+extern unsigned long node_end_pfn[MAX_NUMNODES];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#562: FILE: include/asm-i386/mmzone.h:46:
+#if defined(CONFIG_NUMA) || defined (CONFIG_MEMHOTPLUG)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#571: FILE: include/asm-i386/mmzone.h:138:
+extern int get_memcfg_numa_blks(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#614: FILE: mm/page_alloc.c:1186:
+calculate_zone_totalpages(struct pglist_data *pgdat,
 		unsigned long *zones_size, unsigned long *zholes_size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: mm/page_alloc.c:1245:
+free_area_init_core(struct pglist_data *pgdat,
+	unsigned long *zones_size, unsigned long *zholes_size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: mm/page_alloc.c:1390:
+free_area_init_node(int nid, struct pglist_data *pgdat,
 		struct page *node_mem_map, unsigned long *zones_size,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267939.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 29 warnings, 17 checks, 575 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267939.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
