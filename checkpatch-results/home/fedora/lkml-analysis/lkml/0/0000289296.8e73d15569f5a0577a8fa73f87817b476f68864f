WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -urN linux-2.6.5-orig/Documentation/filesystems/proc.txt linux-2.6.5/Documentation/filesystems/proc.txt

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#103: FILE: fs/proc/base.c:116:
+	E(PROC_TGID_STATFD,    "statfd",  S_IFREG|S_IRUSR),
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#103: FILE: fs/proc/base.c:116:
+	E(PROC_TGID_STATFD,    "statfd",  S_IFREG|S_IRUSR),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#111: FILE: fs/proc/base.c:139:
+	E(PROC_TID_STATFD,     "statfd",  S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#111: FILE: fs/proc/base.c:139:
+	E(PROC_TID_STATFD,     "statfd",  S_IFREG|S_IRUGO),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#121: FILE: fs/proc/base.c:176:
+	BUG_ON(p->pids[PIDTYPE_PID].pidptr != &p->pids[PIDTYPE_PID].pid);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: fs/proc/base.c:526:
+/* ------------------------------------------------------------------------ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: fs/proc/base.c:527:
+ * statfd: A file containing one line of information per open file     $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#144: FILE: fs/proc/base.c:538:
+	struct task_struct* task;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#145: FILE: fs/proc/base.c:539:
+	struct files_struct* files;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#150: FILE: fs/proc/base.c:544:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#150: FILE: fs/proc/base.c:544:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#150: FILE: fs/proc/base.c:544:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#166: FILE: fs/proc/base.c:560:
+	max_fds=temps->files->max_fds;
 	       ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#169: FILE: fs/proc/base.c:563:
+	if (*pos >= max_fds)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#179: FILE: fs/proc/base.c:573:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#179: FILE: fs/proc/base.c:573:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: fs/proc/base.c:573:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;
 	                              ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#181: FILE: fs/proc/base.c:575:
+	if (temps->files)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#185: FILE: fs/proc/base.c:579:
+		temps->files=NULL;
 		            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#191: FILE: fs/proc/base.c:585:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#191: FILE: fs/proc/base.c:585:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#191: FILE: fs/proc/base.c:585:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#197: FILE: fs/proc/base.c:591:
+	max_fds=temps->files->max_fds;
 	       ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: fs/proc/base.c:595:
+	if (++(*pos) < max_fds)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: fs/proc/base.c:601:
+	statfd_stop(m,v);
 	             ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#213: FILE: fs/proc/base.c:607:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#213: FILE: fs/proc/base.c:607:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#213: FILE: fs/proc/base.c:607:
+	struct pid_statfd_temps* temps=(struct pid_statfd_temps*)m->private;
 	                              ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#215: FILE: fs/proc/base.c:609:
+	struct file* file;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: fs/proc/base.c:615:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: fs/proc/base.c:615:
+ $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#222: FILE: fs/proc/base.c:616:
+	fd=(int)*(loff_t*)v;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#222: FILE: fs/proc/base.c:616:
+	fd=(int)*(loff_t*)v;
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#228: FILE: fs/proc/base.c:622:
+		f_pos=file->f_pos;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#229: FILE: fs/proc/base.c:623:
+		f_mode=file->f_mode;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#230: FILE: fs/proc/base.c:624:
+		f_error=file->f_error;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: fs/proc/base.c:625:
+		f_flags=file->f_flags;
 		       ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#237: FILE: fs/proc/base.c:631:
+		seq_printf(m,"%d %lld 0%o 0x%x %d\n",fd, (long long)f_pos, f_mode, f_flags, f_error);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#237: FILE: fs/proc/base.c:631:
+		seq_printf(m,"%d %lld 0%o 0x%x %d\n",fd, (long long)f_pos, f_mode, f_flags, f_error);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#237: FILE: fs/proc/base.c:631:
+		seq_printf(m,"%d %lld 0%o 0x%x %d\n",fd, (long long)f_pos, f_mode, f_flags, f_error);
 		                                    ^

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#242: FILE: fs/proc/base.c:636:
+static struct seq_operations proc_pid_statfd_seqop = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#251: FILE: fs/proc/base.c:645:
+	struct pid_statfd_temps* temps=kmalloc(sizeof(*temps), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#251: FILE: fs/proc/base.c:645:
+	struct pid_statfd_temps* temps=kmalloc(sizeof(*temps), GFP_KERNEL);
 	                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: fs/proc/base.c:646:
+	struct pid_statfd_temps* temps=kmalloc(sizeof(*temps), GFP_KERNEL);
+	if (!temps)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: fs/proc/base.c:653:
+	int ret = seq_open(file, &proc_pid_statfd_seqop);
+	if (!ret) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#261: FILE: fs/proc/base.c:655:
+		struct seq_file *m = file->private_data;
+		m->private = temps;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#272: FILE: fs/proc/base.c:666:
+	 * and then let seq_release do its cleanup */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#274: FILE: fs/proc/base.c:668:
+	struct pid_statfd_temps* temps = m->private;

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: fs/proc/base.c:669:
+	struct pid_statfd_temps* temps = m->private;
+	kfree(temps);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#279: FILE: fs/proc/base.c:673:
+static struct file_operations proc_pid_statfd_operations = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289296.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 13 warnings, 2 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289296.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
