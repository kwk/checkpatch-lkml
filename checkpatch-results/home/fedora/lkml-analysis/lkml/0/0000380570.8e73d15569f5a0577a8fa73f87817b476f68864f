ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#25: 
--- a/sound/isa/azt2320.c	Thu Apr  3 23:40:45 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#70: FILE: sound/isa/azt2320.c:115:
+static struct pnp_card_device_id snd_azt2320_pnpids[] __devinitdata = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: sound/isa/azt2320.c:136:
+static int __init snd_card_azt2320_isapnp(int dev, struct snd_card_azt2320 *acard,
+							     struct pnp_card_link *card,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: sound/isa/azt2320.c:140:
+	struct pnp_resource_table * cfg = kmalloc(sizeof(struct pnp_resource_table), GFP_KERNEL);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cfg)...) over kmalloc(sizeof(struct pnp_resource_table)...)
#121: FILE: sound/isa/azt2320.c:140:
+	struct pnp_resource_table * cfg = kmalloc(sizeof(struct pnp_resource_table), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acard->dev"
#128: FILE: sound/isa/azt2320.c:147:
+	if (acard->dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#175: FILE: sound/isa/azt2320.c:171:
+		printk(KERN_ERR PFX "AUDIO the requested resources are invalid, using auto config\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#179: FILE: sound/isa/azt2320.c:175:
+		printk(KERN_ERR PFX "AUDIO pnp configure failure\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#208: FILE: sound/isa/azt2320.c:187:
+	if (pdev != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#215: FILE: sound/isa/azt2320.c:194:
+			printk(KERN_ERR PFX "MPU401 the requested resources are invalid, using auto config\n");

WARNING:INDENTED_LABEL: labels should not be indented
#224: FILE: sound/isa/azt2320.c:201:
+	     __mpu_error:

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: sound/isa/azt2320.c:202:
+^I     ^Iif (pdev) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: sound/isa/azt2320.c:202:
+^I     ^Iif (pdev) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: sound/isa/azt2320.c:203:
+^I^I     ^Ipnp_release_card_device(pdev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: sound/isa/azt2320.c:203:
+^I^I     ^Ipnp_release_card_device(pdev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: sound/isa/azt2320.c:204:
+^I     ^I^Iprintk(KERN_ERR PFX "MPU401 pnp configure failure, skipping\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#227: FILE: sound/isa/azt2320.c:204:
+^I     ^I^Iprintk(KERN_ERR PFX "MPU401 pnp configure failure, skipping\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#227: FILE: sound/isa/azt2320.c:204:
+	     		printk(KERN_ERR PFX "MPU401 pnp configure failure, skipping\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: sound/isa/azt2320.c:205:
+^I     ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: sound/isa/azt2320.c:205:
+^I     ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: sound/isa/azt2320.c:206:
+^I     ^Iacard->devmpu = NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#229: FILE: sound/isa/azt2320.c:206:
+^I     ^Iacard->devmpu = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: sound/isa/azt2320.c:207:
+^I     ^Impu_port[dev] = -1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: sound/isa/azt2320.c:207:
+^I     ^Impu_port[dev] = -1;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: sound/isa/azt2320.c:210:
+	kfree (cfg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: sound/isa/azt2320.c:243:
+static int __init snd_card_azt2320_probe(int dev,
+							   struct pnp_card_link *pcard,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#279: FILE: sound/isa/azt2320.c:257:
+	if ((error = snd_card_azt2320_isapnp(dev, acard, pcard, pid))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: sound/isa/azt2320.c:330:
+                                            const struct pnp_card_device_id *id)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: sound/isa/azt2320.c:330:
+static int __init snd_azt2320_pnp_detect(struct pnp_card_link *card,
+                                            const struct pnp_card_device_id *id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: sound/isa/azt2320.c:330:
+                                            const struct pnp_card_device_id *id)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#311: FILE: sound/isa/azt2320.c:338:
+		res = snd_card_azt2320_probe(dev,card,id);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#311: FILE: sound/isa/azt2320.c:338:
+		res = snd_card_azt2320_probe(dev,card,id);
 		                                     ^

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#321: FILE: sound/isa/azt2320.c:347:
+static void __devexit snd_azt2320_pnp_remove(struct pnp_card_link * pcard)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#321: FILE: sound/isa/azt2320.c:347:
+static void __devexit snd_azt2320_pnp_remove(struct pnp_card_link * pcard)

CHECK:SPACING: No space is necessary after a cast
#323: FILE: sound/isa/azt2320.c:349:
+	snd_card_t *card = (snd_card_t *) pnp_get_card_drvdata(pcard);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380570.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 15 warnings, 7 checks, 323 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380570.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
