WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Attached is a simple charactor driver for possible inclusion in your MM tree.

WARNING:TYPO_SPELLING: 'charactor' may be misspelled - perhaps 'character'?
#36: 
Attached is a simple charactor driver for possible inclusion in your MM tree.
                     ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'provids' may be misspelled - perhaps 'provides'?
#40: 
The telcom clock is a special circuit, line card PLL, that provids a mechanism 
                                                           ^^^^^^^

WARNING:TYPO_SPELLING: 'specail' may be misspelled - perhaps 'special'?
#42: 
of multiple computers with similar specail curcits.  In this case the 
                                   ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#106: FILE: drivers/char/tlclk.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#125: FILE: drivers/char/tlclk.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#126: FILE: drivers/char/tlclk.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: drivers/char/tlclk.c:24:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#151: FILE: drivers/char/tlclk.c:46:
+#include <asm/io.h>		/* inb/outb */

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#152: FILE: drivers/char/tlclk.c:47:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#162: FILE: drivers/char/tlclk.c:57:
+#define TLCLK_REG1 (TLCLK_BASE+1)
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: drivers/char/tlclk.c:58:
+#define TLCLK_REG2 (TLCLK_BASE+2)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#164: FILE: drivers/char/tlclk.c:59:
+#define TLCLK_REG3 (TLCLK_BASE+3)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#165: FILE: drivers/char/tlclk.c:60:
+#define TLCLK_REG4 (TLCLK_BASE+4)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#166: FILE: drivers/char/tlclk.c:61:
+#define TLCLK_REG5 (TLCLK_BASE+5)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#167: FILE: drivers/char/tlclk.c:62:
+#define TLCLK_REG6 (TLCLK_BASE+6)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#168: FILE: drivers/char/tlclk.c:63:
+#define TLCLK_REG7 (TLCLK_BASE+7)
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'port' - possible side-effects?
#170: FILE: drivers/char/tlclk.c:65:
+#define SET_PORT_BITS(port, mask, val) outb(((inb(port) & mask) | val), port)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mask' may be better as '(mask)' to avoid precedence issues
#170: FILE: drivers/char/tlclk.c:65:
+#define SET_PORT_BITS(port, mask, val) outb(((inb(port) & mask) | val), port)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#170: FILE: drivers/char/tlclk.c:65:
+#define SET_PORT_BITS(port, mask, val) outb(((inb(port) & mask) | val), port)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: drivers/char/tlclk.c:71:
+uncomment to include classic IOCTL's $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#176: FILE: drivers/char/tlclk.c:71:
+/*
+uncomment to include classic IOCTL's 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'Uppon' may be misspelled - perhaps 'Upon'?
#181: FILE: drivers/char/tlclk.c:76:
+Uppon loading the driver will create a sysfs directory under class/misc/tlclk.
 ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#181: FILE: drivers/char/tlclk.c:76:
+/* sysFS interface definition:
+Uppon loading the driver will create a sysfs directory under class/misc/tlclk.

WARNING:TYPO_SPELLING: 'opperation' may be misspelled - perhaps 'operation'?
#183: FILE: drivers/char/tlclk.c:78:
+This directory exports the following interfaces.  There opperation is documented 
                                                         ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: drivers/char/tlclk.c:78:
+This directory exports the following interfaces.  There opperation is documented $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: drivers/char/tlclk.c:94:
+reset^I^I^I^I: $

WARNING:TYPO_SPELLING: 'interaces' may be misspelled - perhaps 'interfaces'?
#206: FILE: drivers/char/tlclk.c:101:
+All sysfs interaces are integers in hex format, i.e echo 99 > refalign
           ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/char/tlclk.c:106:
+#if CONFIG_DEBUG_KERNEL $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#212: FILE: drivers/char/tlclk.c:107:
+#define debug_printk( args... ) printk( args)

ERROR:SPACING: space prohibited after that open parenthesis '('
#212: FILE: drivers/char/tlclk.c:107:
+#define debug_printk( args... ) printk( args)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#212: FILE: drivers/char/tlclk.c:107:
+#define debug_printk( args... ) printk( args)

ERROR:SPACING: space prohibited after that open parenthesis '('
#214: FILE: drivers/char/tlclk.c:109:
+#define debug_printk( args... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#214: FILE: drivers/char/tlclk.c:109:
+#define debug_printk( args... )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: drivers/char/tlclk.c:112:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#224: FILE: drivers/char/tlclk.c:119:
+static struct timer_list switchover_timer = TIMER_INITIALIZER(switchover_timeout , 0, 0);
                                                                                  ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#232: FILE: drivers/char/tlclk.c:127:
+irqreturn_t tlclk_interrupt(int irq, void *dev_id, struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#239: FILE: drivers/char/tlclk.c:134:
+	    struct file *filp, unsigned int cmd, unsigned long arg)
 	                 ^^^^

WARNING:TYPO_SPELLING: 'transistion' may be misspelled - perhaps 'transition'?
#261: FILE: drivers/char/tlclk.c:156:
+		/* GENERATING 0 to 1 transistion */
 		                     ^^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_8kHz'
#284: FILE: drivers/char/tlclk.c:179:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_16_384MHz'
#284: FILE: drivers/char/tlclk.c:179:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:CAMELCASE: Avoid CamelCase: <CLK_8kHz>
#284: FILE: drivers/char/tlclk.c:179:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CLK_16_384MHz>
#284: FILE: drivers/char/tlclk.c:179:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#284: FILE: drivers/char/tlclk.c:179:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {
[...]
+		} else if (val >= CLK_8_592MHz) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <CLK_8_592MHz>
#287: FILE: drivers/char/tlclk.c:182:
+		} else if (val >= CLK_8_592MHz) {

CHECK:BRACES: Unbalanced braces around else statement
#303: FILE: drivers/char/tlclk.c:198:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_8kHz'
#307: FILE: drivers/char/tlclk.c:202:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_16_384MHz'
#307: FILE: drivers/char/tlclk.c:202:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#307: FILE: drivers/char/tlclk.c:202:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {
[...]
+		} else if (val >= CLK_8_592MHz) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#326: FILE: drivers/char/tlclk.c:221:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#366: FILE: drivers/char/tlclk.c:261:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#367: FILE: drivers/char/tlclk.c:262:
+static int tlclk_open(struct inode *inode, struct file *filp)
                                                         ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: drivers/char/tlclk.c:266:
+^I/* Make sure there is no interrupt pending while $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#372: FILE: drivers/char/tlclk.c:267:
+	 * initialising interrupt handler */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/char/tlclk.c:270:
+^I/* This device is wired through the FPGA IO space of the ATCA blade $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#376: FILE: drivers/char/tlclk.c:271:
+	 * we can't share this IRQ */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#380: FILE: drivers/char/tlclk.c:275:
+		printk(KERN_ERR "telclock: Interrupt can't be reserved!\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#388: FILE: drivers/char/tlclk.c:283:
+static int tlclk_release(struct inode *inode, struct file *filp)
                                                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#396: FILE: drivers/char/tlclk.c:291:
+tlclk_read(struct file * filp, char __user * buf, size_t count, loff_t * f_pos)
                          ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#396: FILE: drivers/char/tlclk.c:291:
+tlclk_read(struct file * filp, char __user * buf, size_t count, loff_t * f_pos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#396: FILE: drivers/char/tlclk.c:291:
+tlclk_read(struct file * filp, char __user * buf, size_t count, loff_t * f_pos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#396: FILE: drivers/char/tlclk.c:291:
+tlclk_read(struct file * filp, char __user * buf, size_t count, loff_t * f_pos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#411: FILE: drivers/char/tlclk.c:306:
+tlclk_write(struct file * filp, const char __user * buf, size_t count,
                           ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#411: FILE: drivers/char/tlclk.c:306:
+tlclk_write(struct file * filp, const char __user * buf, size_t count,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#411: FILE: drivers/char/tlclk.c:306:
+tlclk_write(struct file * filp, const char __user * buf, size_t count,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#412: FILE: drivers/char/tlclk.c:307:
+	    loff_t * f_pos)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#417: FILE: drivers/char/tlclk.c:312:
+static struct file_operations tlclk_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#435: FILE: drivers/char/tlclk.c:330:
+static ssize_t show_current_ref(struct class_device *d, char * buf)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#447: FILE: drivers/char/tlclk.c:342:
+static CLASS_DEVICE_ATTR(current_ref, S_IRUGO, show_current_ref, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#449: FILE: drivers/char/tlclk.c:344:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#450: FILE: drivers/char/tlclk.c:345:
+static ssize_t show_interrupt_switch(struct class_device *d, char * buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: drivers/char/tlclk.c:357:
+static CLASS_DEVICE_ATTR(interrupt_switch, S_IRUGO, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#462: FILE: drivers/char/tlclk.c:357:
+static CLASS_DEVICE_ATTR(interrupt_switch, S_IRUGO, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#465: FILE: drivers/char/tlclk.c:360:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#466: FILE: drivers/char/tlclk.c:361:
+static ssize_t show_alarms(struct class_device *d, char * buf)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#478: FILE: drivers/char/tlclk.c:373:
+static CLASS_DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#480: FILE: drivers/char/tlclk.c:375:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: drivers/char/tlclk.c:376:
+static ssize_t store_enable_clk3b_output(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/char/tlclk.c:377:
+static ssize_t store_enable_clk3b_output(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#482: FILE: drivers/char/tlclk.c:377:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#488: FILE: drivers/char/tlclk.c:383:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#488: FILE: drivers/char/tlclk.c:383:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#489: FILE: drivers/char/tlclk.c:384:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: drivers/char/tlclk.c:394:
+static CLASS_DEVICE_ATTR(enable_clk3b_output, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#499: FILE: drivers/char/tlclk.c:394:
+static CLASS_DEVICE_ATTR(enable_clk3b_output, S_IWUGO, NULL, 

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#499: FILE: drivers/char/tlclk.c:394:
+static CLASS_DEVICE_ATTR(enable_clk3b_output, S_IWUGO, NULL, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#502: FILE: drivers/char/tlclk.c:397:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: drivers/char/tlclk.c:399:
+static ssize_t store_enable_clk3a_output(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: drivers/char/tlclk.c:400:
+static ssize_t store_enable_clk3a_output(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#505: FILE: drivers/char/tlclk.c:400:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#511: FILE: drivers/char/tlclk.c:406:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#511: FILE: drivers/char/tlclk.c:406:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#512: FILE: drivers/char/tlclk.c:407:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: drivers/char/tlclk.c:417:
+static CLASS_DEVICE_ATTR(enable_clk3a_output, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#522: FILE: drivers/char/tlclk.c:417:
+static CLASS_DEVICE_ATTR(enable_clk3a_output, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#522: FILE: drivers/char/tlclk.c:417:
+static CLASS_DEVICE_ATTR(enable_clk3a_output, S_IWUGO, NULL, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#525: FILE: drivers/char/tlclk.c:420:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: drivers/char/tlclk.c:422:
+static ssize_t store_enable_clkb1_output(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/char/tlclk.c:423:
+static ssize_t store_enable_clkb1_output(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#528: FILE: drivers/char/tlclk.c:423:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#534: FILE: drivers/char/tlclk.c:429:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#534: FILE: drivers/char/tlclk.c:429:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#535: FILE: drivers/char/tlclk.c:430:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: drivers/char/tlclk.c:440:
+static CLASS_DEVICE_ATTR(enable_clkb1_output, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#545: FILE: drivers/char/tlclk.c:440:
+static CLASS_DEVICE_ATTR(enable_clkb1_output, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#545: FILE: drivers/char/tlclk.c:440:
+static CLASS_DEVICE_ATTR(enable_clkb1_output, S_IWUGO, NULL, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#548: FILE: drivers/char/tlclk.c:443:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: drivers/char/tlclk.c:444:
+static ssize_t store_enable_clka1_output(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/char/tlclk.c:445:
+static ssize_t store_enable_clka1_output(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#550: FILE: drivers/char/tlclk.c:445:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#556: FILE: drivers/char/tlclk.c:451:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#556: FILE: drivers/char/tlclk.c:451:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#557: FILE: drivers/char/tlclk.c:452:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: drivers/char/tlclk.c:462:
+static CLASS_DEVICE_ATTR(enable_clka1_output, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#567: FILE: drivers/char/tlclk.c:462:
+static CLASS_DEVICE_ATTR(enable_clka1_output, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#567: FILE: drivers/char/tlclk.c:462:
+static CLASS_DEVICE_ATTR(enable_clka1_output, S_IWUGO, NULL, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#570: FILE: drivers/char/tlclk.c:465:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#571: FILE: drivers/char/tlclk.c:466:
+static ssize_t store_enable_clkb0_output(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/char/tlclk.c:467:
+static ssize_t store_enable_clkb0_output(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#572: FILE: drivers/char/tlclk.c:467:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#578: FILE: drivers/char/tlclk.c:473:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#578: FILE: drivers/char/tlclk.c:473:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#579: FILE: drivers/char/tlclk.c:474:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/char/tlclk.c:484:
+static CLASS_DEVICE_ATTR(enable_clkb0_output, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#589: FILE: drivers/char/tlclk.c:484:
+static CLASS_DEVICE_ATTR(enable_clkb0_output, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#589: FILE: drivers/char/tlclk.c:484:
+static CLASS_DEVICE_ATTR(enable_clkb0_output, S_IWUGO, NULL, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#592: FILE: drivers/char/tlclk.c:487:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: drivers/char/tlclk.c:488:
+static ssize_t store_enable_clka0_output(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/char/tlclk.c:489:
+static ssize_t store_enable_clka0_output(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#594: FILE: drivers/char/tlclk.c:489:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#600: FILE: drivers/char/tlclk.c:495:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#600: FILE: drivers/char/tlclk.c:495:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#601: FILE: drivers/char/tlclk.c:496:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: drivers/char/tlclk.c:506:
+static CLASS_DEVICE_ATTR(enable_clka0_output, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#611: FILE: drivers/char/tlclk.c:506:
+static CLASS_DEVICE_ATTR(enable_clka0_output, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#611: FILE: drivers/char/tlclk.c:506:
+static CLASS_DEVICE_ATTR(enable_clka0_output, S_IWUGO, NULL, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#614: FILE: drivers/char/tlclk.c:509:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: drivers/char/tlclk.c:510:
+static ssize_t store_test_mode(struct class_device *d, const char * buf, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#615: FILE: drivers/char/tlclk.c:510:
+static ssize_t store_test_mode(struct class_device *d, const char * buf, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: drivers/char/tlclk.c:511:
+static ssize_t store_test_mode(struct class_device *d, const char * buf, 
+	size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#622: FILE: drivers/char/tlclk.c:517:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#622: FILE: drivers/char/tlclk.c:517:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#623: FILE: drivers/char/tlclk.c:518:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#633: FILE: drivers/char/tlclk.c:528:
+static CLASS_DEVICE_ATTR(test_mode, S_IWUGO, NULL, store_test_mode);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#633: FILE: drivers/char/tlclk.c:528:
+static CLASS_DEVICE_ATTR(test_mode, S_IWUGO, NULL, store_test_mode);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: drivers/char/tlclk.c:530:
+static ssize_t store_select_amcb2_transmit_clock(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: drivers/char/tlclk.c:531:
+static ssize_t store_select_amcb2_transmit_clock(struct class_device *d, 
+	const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#636: FILE: drivers/char/tlclk.c:531:
+	const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#642: FILE: drivers/char/tlclk.c:537:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#642: FILE: drivers/char/tlclk.c:537:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#643: FILE: drivers/char/tlclk.c:538:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_8kHz'
#647: FILE: drivers/char/tlclk.c:542:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_16_384MHz'
#647: FILE: drivers/char/tlclk.c:542:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#647: FILE: drivers/char/tlclk.c:542:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {
[...]
+		} else if (val >= CLK_8_592MHz) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#666: FILE: drivers/char/tlclk.c:561:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#668: FILE: drivers/char/tlclk.c:563:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: drivers/char/tlclk.c:564:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#669: FILE: drivers/char/tlclk.c:564:
+		
+	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: drivers/char/tlclk.c:570:
+static CLASS_DEVICE_ATTR(select_amcb2_transmit_clock, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#675: FILE: drivers/char/tlclk.c:570:
+static CLASS_DEVICE_ATTR(select_amcb2_transmit_clock, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#675: FILE: drivers/char/tlclk.c:570:
+static CLASS_DEVICE_ATTR(select_amcb2_transmit_clock, S_IWUGO, NULL, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: drivers/char/tlclk.c:573:
+static ssize_t store_select_amcb1_transmit_clock(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: drivers/char/tlclk.c:574:
+static ssize_t store_select_amcb1_transmit_clock(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#679: FILE: drivers/char/tlclk.c:574:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#685: FILE: drivers/char/tlclk.c:580:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#685: FILE: drivers/char/tlclk.c:580:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#686: FILE: drivers/char/tlclk.c:581:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_8kHz'
#690: FILE: drivers/char/tlclk.c:585:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_16_384MHz'
#690: FILE: drivers/char/tlclk.c:585:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#690: FILE: drivers/char/tlclk.c:585:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {
[...]
+		} else if (val >= CLK_8_592MHz) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#709: FILE: drivers/char/tlclk.c:604:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: drivers/char/tlclk.c:611:
+static CLASS_DEVICE_ATTR(select_amcb1_transmit_clock, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#716: FILE: drivers/char/tlclk.c:611:
+static CLASS_DEVICE_ATTR(select_amcb1_transmit_clock, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#716: FILE: drivers/char/tlclk.c:611:
+static CLASS_DEVICE_ATTR(select_amcb1_transmit_clock, S_IWUGO, NULL, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: drivers/char/tlclk.c:614:
+static ssize_t store_select_redundant_clock(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: drivers/char/tlclk.c:615:
+static ssize_t store_select_redundant_clock(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#720: FILE: drivers/char/tlclk.c:615:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#726: FILE: drivers/char/tlclk.c:621:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#726: FILE: drivers/char/tlclk.c:621:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#727: FILE: drivers/char/tlclk.c:622:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: drivers/char/tlclk.c:632:
+static CLASS_DEVICE_ATTR(select_redundant_clock, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#737: FILE: drivers/char/tlclk.c:632:
+static CLASS_DEVICE_ATTR(select_redundant_clock, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#737: FILE: drivers/char/tlclk.c:632:
+static CLASS_DEVICE_ATTR(select_redundant_clock, S_IWUGO, NULL, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: drivers/char/tlclk.c:635:
+static ssize_t store_select_ref_frequency(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#741: FILE: drivers/char/tlclk.c:636:
+static ssize_t store_select_ref_frequency(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#741: FILE: drivers/char/tlclk.c:636:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#747: FILE: drivers/char/tlclk.c:642:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#747: FILE: drivers/char/tlclk.c:642:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#748: FILE: drivers/char/tlclk.c:643:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: drivers/char/tlclk.c:653:
+static CLASS_DEVICE_ATTR(select_ref_frequency, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#758: FILE: drivers/char/tlclk.c:653:
+static CLASS_DEVICE_ATTR(select_ref_frequency, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#758: FILE: drivers/char/tlclk.c:653:
+static CLASS_DEVICE_ATTR(select_ref_frequency, S_IWUGO, NULL, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: drivers/char/tlclk.c:656:
+static ssize_t store_filter_select(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: drivers/char/tlclk.c:657:
+static ssize_t store_filter_select(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#762: FILE: drivers/char/tlclk.c:657:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#768: FILE: drivers/char/tlclk.c:663:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#768: FILE: drivers/char/tlclk.c:663:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#769: FILE: drivers/char/tlclk.c:664:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#779: FILE: drivers/char/tlclk.c:674:
+static CLASS_DEVICE_ATTR(filter_select, S_IWUGO, NULL, store_filter_select);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#779: FILE: drivers/char/tlclk.c:674:
+static CLASS_DEVICE_ATTR(filter_select, S_IWUGO, NULL, store_filter_select);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: drivers/char/tlclk.c:676:
+static ssize_t store_hardware_switching_mode(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#782: FILE: drivers/char/tlclk.c:677:
+static ssize_t store_hardware_switching_mode(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#782: FILE: drivers/char/tlclk.c:677:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#788: FILE: drivers/char/tlclk.c:683:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#788: FILE: drivers/char/tlclk.c:683:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#789: FILE: drivers/char/tlclk.c:684:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: drivers/char/tlclk.c:694:
+static CLASS_DEVICE_ATTR(hardware_switching_mode, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#799: FILE: drivers/char/tlclk.c:694:
+static CLASS_DEVICE_ATTR(hardware_switching_mode, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#799: FILE: drivers/char/tlclk.c:694:
+static CLASS_DEVICE_ATTR(hardware_switching_mode, S_IWUGO, NULL, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#802: FILE: drivers/char/tlclk.c:697:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: drivers/char/tlclk.c:698:
+static ssize_t store_hardware_switching(struct class_device *d, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#804: FILE: drivers/char/tlclk.c:699:
+static ssize_t store_hardware_switching(struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#804: FILE: drivers/char/tlclk.c:699:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#810: FILE: drivers/char/tlclk.c:705:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#810: FILE: drivers/char/tlclk.c:705:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#811: FILE: drivers/char/tlclk.c:706:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: drivers/char/tlclk.c:716:
+static CLASS_DEVICE_ATTR(hardware_switching, S_IWUGO, NULL, $

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#821: FILE: drivers/char/tlclk.c:716:
+static CLASS_DEVICE_ATTR(hardware_switching, S_IWUGO, NULL, 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#821: FILE: drivers/char/tlclk.c:716:
+static CLASS_DEVICE_ATTR(hardware_switching, S_IWUGO, NULL, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: drivers/char/tlclk.c:719:
+static ssize_t store_refalign (struct class_device *d, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#824: FILE: drivers/char/tlclk.c:719:
+static ssize_t store_refalign (struct class_device *d, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#825: FILE: drivers/char/tlclk.c:720:
+static ssize_t store_refalign (struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#825: FILE: drivers/char/tlclk.c:720:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#830: FILE: drivers/char/tlclk.c:725:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#830: FILE: drivers/char/tlclk.c:725:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#831: FILE: drivers/char/tlclk.c:726:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#843: FILE: drivers/char/tlclk.c:738:
+static CLASS_DEVICE_ATTR(refalign, S_IWUGO, NULL, store_refalign);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#843: FILE: drivers/char/tlclk.c:738:
+static CLASS_DEVICE_ATTR(refalign, S_IWUGO, NULL, store_refalign);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#845: FILE: drivers/char/tlclk.c:740:
+static ssize_t store_mode_select (struct class_device *d, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#845: FILE: drivers/char/tlclk.c:740:
+static ssize_t store_mode_select (struct class_device *d, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#846: FILE: drivers/char/tlclk.c:741:
+static ssize_t store_mode_select (struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#846: FILE: drivers/char/tlclk.c:741:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#852: FILE: drivers/char/tlclk.c:747:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#852: FILE: drivers/char/tlclk.c:747:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#853: FILE: drivers/char/tlclk.c:748:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#863: FILE: drivers/char/tlclk.c:758:
+static CLASS_DEVICE_ATTR(mode_select, S_IWUGO, NULL, store_mode_select);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#863: FILE: drivers/char/tlclk.c:758:
+static CLASS_DEVICE_ATTR(mode_select, S_IWUGO, NULL, store_mode_select);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#865: FILE: drivers/char/tlclk.c:760:
+static ssize_t store_reset (struct class_device *d, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#865: FILE: drivers/char/tlclk.c:760:
+static ssize_t store_reset (struct class_device *d, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#866: FILE: drivers/char/tlclk.c:761:
+static ssize_t store_reset (struct class_device *d, 
+		const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#866: FILE: drivers/char/tlclk.c:761:
+		const char * buf, size_t count)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#872: FILE: drivers/char/tlclk.c:767:
+	sscanf(buf, "%lX", &tmp);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#872: FILE: drivers/char/tlclk.c:767:
+	sscanf(buf, "%lX", &tmp);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#873: FILE: drivers/char/tlclk.c:768:
+	debug_printk(KERN_ERR "tmp = 0x%lX \n", tmp);

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#883: FILE: drivers/char/tlclk.c:778:
+static CLASS_DEVICE_ATTR(reset, S_IWUGO, NULL, store_reset);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#883: FILE: drivers/char/tlclk.c:778:
+static CLASS_DEVICE_ATTR(reset, S_IWUGO, NULL, store_reset);

ERROR:SPACING: exactly one space required after that #ifdef
#889: FILE: drivers/char/tlclk.c:784:
+#ifdef  CONFIG_SYSFS

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#895: FILE: drivers/char/tlclk.c:790:
+		printk(KERN_ERR "telclock: can't get major! %d\n", tlclk_major);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#907: FILE: drivers/char/tlclk.c:802:
+		printk(KERN_ERR "tlclk: request_region failed! 0x%X\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: drivers/char/tlclk.c:803:
+		printk(KERN_ERR "tlclk: request_region failed! 0x%X\n",
+			TLCLK_BASE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#913: FILE: drivers/char/tlclk.c:808:
+^I$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#914: FILE: drivers/char/tlclk.c:809:
+	if (0x0F == telclk_interrupt ) { /* not MCPBL0010 ? */

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#914: FILE: drivers/char/tlclk.c:809:
+	if (0x0F == telclk_interrupt ) { /* not MCPBL0010 ? */

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#915: FILE: drivers/char/tlclk.c:810:
+		printk(KERN_ERR "telclk_interrup = 0x%x non-mcpbl0010 hw \n", telclk_interrupt);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#915: FILE: drivers/char/tlclk.c:810:
+		printk(KERN_ERR "telclk_interrup = 0x%x non-mcpbl0010 hw \n", telclk_interrupt);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#923: FILE: drivers/char/tlclk.c:818:
+^I$

ERROR:SPACING: exactly one space required after that #ifdef
#924: FILE: drivers/char/tlclk.c:819:
+#ifdef  CONFIG_SYSFS

ERROR:SPACING: space prohibited after that open parenthesis '('
#925: FILE: drivers/char/tlclk.c:820:
+	if( 0 > (ret = misc_register(&tlclk_miscdev )) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#925: FILE: drivers/char/tlclk.c:820:
+	if( 0 > (ret = misc_register(&tlclk_miscdev )) ) {

ERROR:SPACING: space required before the open parenthesis '('
#925: FILE: drivers/char/tlclk.c:820:
+	if( 0 > (ret = misc_register(&tlclk_miscdev )) ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#925: FILE: drivers/char/tlclk.c:820:
+	if( 0 > (ret = misc_register(&tlclk_miscdev )) ) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TYPO_SPELLING: 'retruns' may be misspelled - perhaps 'returns'?
#926: FILE: drivers/char/tlclk.c:821:
+		printk(KERN_ERR" misc_register retruns %d \n", ret);
 		                               ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#926: FILE: drivers/char/tlclk.c:821:
+		printk(KERN_ERR" misc_register retruns %d \n", ret);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#926: FILE: drivers/char/tlclk.c:821:
+		printk(KERN_ERR" misc_register retruns %d \n", ret);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#926: FILE: drivers/char/tlclk.c:821:
+		printk(KERN_ERR" misc_register retruns %d \n", ret);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: exactly one space required after that #ifdef
#964: FILE: drivers/char/tlclk.c:859:
+#ifdef  CONFIG_SYSFS

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#973: FILE: drivers/char/tlclk.c:868:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#974: FILE: drivers/char/tlclk.c:869:
+}
+static void switchover_timeout(unsigned long data)

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1036: FILE: drivers/char/tlclk.c:931:
+		switchover_timer.expires = jiffies + msecs_to_jiffies(10);	/* TIMEOUT in ~10ms */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1054: FILE: drivers/char/tlclk.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1073: FILE: drivers/char/tlclk.h:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1074: FILE: drivers/char/tlclk.h:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1095: FILE: drivers/char/tlclk.h:42:
+#define NORMAL_MODE ^I0x00$

CHECK:CAMELCASE: Avoid CamelCase: <REF_CLK1_8kHz>
#1110: FILE: drivers/char/tlclk.h:57:
+#define REF_CLK1_8kHz		0x00

CHECK:CAMELCASE: Avoid CamelCase: <REF_CLK2_19_44MHz>
#1111: FILE: drivers/char/tlclk.h:58:
+#define REF_CLK2_19_44MHz	0x02

CHECK:CAMELCASE: Avoid CamelCase: <CLK_1_544MHz>
#1126: FILE: drivers/char/tlclk.h:73:
+#define CLK_1_544MHz	0x00

CHECK:CAMELCASE: Avoid CamelCase: <CLK_2_048MHz>
#1127: FILE: drivers/char/tlclk.h:74:
+#define CLK_2_048MHz	0x01

CHECK:CAMELCASE: Avoid CamelCase: <CLK_4_096MHz>
#1128: FILE: drivers/char/tlclk.h:75:
+#define CLK_4_096MHz	0x02

CHECK:CAMELCASE: Avoid CamelCase: <CLK_6_312MHz>
#1129: FILE: drivers/char/tlclk.h:76:
+#define CLK_6_312MHz	0x03

CHECK:CAMELCASE: Avoid CamelCase: <CLK_8_192MHz>
#1130: FILE: drivers/char/tlclk.h:77:
+#define CLK_8_192MHz	0x04

CHECK:CAMELCASE: Avoid CamelCase: <CLK_19_440MHz>
#1131: FILE: drivers/char/tlclk.h:78:
+#define CLK_19_440MHz	0x06

CHECK:CAMELCASE: Avoid CamelCase: <CLK_11_184MHz>
#1134: FILE: drivers/char/tlclk.h:81:
+#define CLK_11_184MHz	0x09

CHECK:CAMELCASE: Avoid CamelCase: <CLK_34_368MHz>
#1135: FILE: drivers/char/tlclk.h:82:
+#define CLK_34_368MHz	0x0b

CHECK:CAMELCASE: Avoid CamelCase: <CLK_44_736MHz>
#1136: FILE: drivers/char/tlclk.h:83:
+#define CLK_44_736MHz	0x0a

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145223.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 84 errors, 126 warnings, 74 checks, 1132 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145223.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
