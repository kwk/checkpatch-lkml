WARNING:LINE_SPACING: Missing a blank line after declarations
#49: FILE: arch/um/os-Linux/skas/process.c:170:
+		__u64 offset;
+		fd = phys_mapping(to_phys(&__syscall_stub_start), &offset);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#56: FILE: arch/um/os-Linux/skas/process.c:174:
+			printk("mapping mmap stub failed, errno = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#70: FILE: arch/um/os-Linux/skas/process.c:185:
+				printk("mapping segfault stack failed, "

ERROR:SPACING: space required before the open brace '{'
#77: FILE: arch/um/os-Linux/skas/process.c:191:
+	if(!ptrace_faultinfo && (stack != NULL)){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stack != NULL'
#77: FILE: arch/um/os-Linux/skas/process.c:191:
+	if(!ptrace_faultinfo && (stack != NULL)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#77: FILE: arch/um/os-Linux/skas/process.c:191:
+	if(!ptrace_faultinfo && (stack != NULL)){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "stack"
#77: FILE: arch/um/os-Linux/skas/process.c:191:
+	if(!ptrace_faultinfo && (stack != NULL)){

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#105: FILE: arch/um/os-Linux/skas/process.c:392:
+	int code_fd = phys_mapping(to_phys((void *) &__syscall_stub_start),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115163.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 3 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115163.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
