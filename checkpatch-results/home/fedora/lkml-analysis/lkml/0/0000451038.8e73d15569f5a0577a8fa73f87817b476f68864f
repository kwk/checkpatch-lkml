WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
   parsing code. REISERFS_MAX_NAME_LEN changed to REISERFS_MAX_NAME. hash= mount

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#	           ChangeSet	1.597   -> 1.598  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	 fs/reiserfs/namei.c	1.38    -> 1.39   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	 fs/reiserfs/inode.c	1.60    -> 1.61   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	 fs/reiserfs/super.c	1.45    -> 1.46   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	include/linux/reiserfs_fs_sb.h	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	   fs/reiserfs/dir.c	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	fs/reiserfs/bitmap.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	include/linux/reiserfs_fs.h	1.31    -> 1.32   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# 02/05/30	green@angband.namesys.com	1.598

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# reiserfs_fs_sb.h, reiserfs_fs.h, super.c, namei.c, inode.c, dir.c, bitmap.c:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#   reiserfs: comment cleanups and a switch to new mount option parsing code.  REISERFS_MAX_NAME_LEN changed to REISERFS_MAX_NAME. hash= mount option support removed. By Vladimir Saveliev.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#65: 
--- a/fs/reiserfs/bitmap.c	Thu May 30 18:42:18 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#75: FILE: fs/reiserfs/bitmap.c:673:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#87: FILE: fs/reiserfs/dir.c:112:
+		if (d_reclen > REISERFS_MAX_NAME(inode->i_sb->s_blocksize)){
[...]
 		    continue ;

ERROR:SPACING: space required before the open brace '{'
#87: FILE: fs/reiserfs/dir.c:112:
+		if (d_reclen > REISERFS_MAX_NAME(inode->i_sb->s_blocksize)){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: fs/reiserfs/inode.c:2024:
 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: fs/reiserfs/namei.c:289:
+    if (namelen > REISERFS_MAX_NAME (dir->i_sb->s_blocksize))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#225: FILE: fs/reiserfs/namei.c:289:
+    if (namelen > REISERFS_MAX_NAME (dir->i_sb->s_blocksize))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dir->i_sb->s_blocksize'
#225: FILE: fs/reiserfs/namei.c:289:
+    if (namelen > REISERFS_MAX_NAME (dir->i_sb->s_blocksize))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: fs/reiserfs/namei.c:326:
+    if (REISERFS_MAX_NAME (dir->i_sb->s_blocksize) < dentry->d_name.len)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: fs/reiserfs/namei.c:326:
+    if (REISERFS_MAX_NAME (dir->i_sb->s_blocksize) < dentry->d_name.len)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dir->i_sb->s_blocksize'
#248: FILE: fs/reiserfs/namei.c:326:
+    if (REISERFS_MAX_NAME (dir->i_sb->s_blocksize) < dentry->d_name.len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: fs/reiserfs/namei.c:421:
+    if (namelen > REISERFS_MAX_NAME (dir->i_sb->s_blocksize))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: fs/reiserfs/namei.c:421:
+    if (namelen > REISERFS_MAX_NAME (dir->i_sb->s_blocksize))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dir->i_sb->s_blocksize'
#272: FILE: fs/reiserfs/namei.c:421:
+    if (namelen > REISERFS_MAX_NAME (dir->i_sb->s_blocksize))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/reiserfs/namei.c:568:
+    if (!(inode = new_inode(dir->i_sb))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#296: FILE: fs/reiserfs/namei.c:568:
+    if (!(inode = new_inode(dir->i_sb))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#296: FILE: fs/reiserfs/namei.c:568:
+    if (!(inode = new_inode(dir->i_sb))) {
 	return -ENOMEM ;
     }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: fs/reiserfs/namei.c:615:
+    if (!(inode = new_inode(dir->i_sb))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#320: FILE: fs/reiserfs/namei.c:615:
+    if (!(inode = new_inode(dir->i_sb))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#320: FILE: fs/reiserfs/namei.c:615:
+    if (!(inode = new_inode(dir->i_sb))) {
 	return -ENOMEM ;
     }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: fs/reiserfs/namei.c:665:
+    if (!(inode = new_inode(dir->i_sb))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#344: FILE: fs/reiserfs/namei.c:665:
+    if (!(inode = new_inode(dir->i_sb))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#344: FILE: fs/reiserfs/namei.c:665:
+    if (!(inode = new_inode(dir->i_sb))) {
 	return -ENOMEM ;
     }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: fs/reiserfs/namei.c:888:
+static int reiserfs_symlink (struct inode * parent_dir, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#391: FILE: fs/reiserfs/namei.c:888:
+static int reiserfs_symlink (struct inode * parent_dir, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: fs/reiserfs/namei.c:888:
+static int reiserfs_symlink (struct inode * parent_dir, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: fs/reiserfs/namei.c:889:
+                            struct dentry * dentry, const char * symname)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: fs/reiserfs/namei.c:889:
+static int reiserfs_symlink (struct inode * parent_dir, 
+                            struct dentry * dentry, const char * symname)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: fs/reiserfs/namei.c:889:
+                            struct dentry * dentry, const char * symname)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#392: FILE: fs/reiserfs/namei.c:889:
+                            struct dentry * dentry, const char * symname)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#392: FILE: fs/reiserfs/namei.c:889:
+                            struct dentry * dentry, const char * symname)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: fs/reiserfs/namei.c:899:
+    if (!(inode = new_inode(parent_dir->i_sb))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#402: FILE: fs/reiserfs/namei.c:899:
+    if (!(inode = new_inode(parent_dir->i_sb))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#402: FILE: fs/reiserfs/namei.c:899:
+    if (!(inode = new_inode(parent_dir->i_sb))) {
 	return -ENOMEM ;
     }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: fs/reiserfs/namei.c:902:
+    retval = new_inode_init(inode, parent_dir, mode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: fs/reiserfs/namei.c:909:
+    if (item_len > MAX_DIRECT_ITEM_LEN (parent_dir->i_sb->s_blocksize)) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: fs/reiserfs/namei.c:909:
+    if (item_len > MAX_DIRECT_ITEM_LEN (parent_dir->i_sb->s_blocksize)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'parent_dir->i_sb->s_blocksize'
#414: FILE: fs/reiserfs/namei.c:909:
+    if (item_len > MAX_DIRECT_ITEM_LEN (parent_dir->i_sb->s_blocksize)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: fs/reiserfs/namei.c:915:
+    name = reiserfs_kmalloc (item_len, GFP_NOFS, parent_dir->i_sb);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#421: FILE: fs/reiserfs/namei.c:915:
+    name = reiserfs_kmalloc (item_len, GFP_NOFS, parent_dir->i_sb);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: fs/reiserfs/namei.c:924:
+    journal_begin(&th, parent_dir->i_sb, jbegin_count) ;$

WARNING:SPACING: space prohibited before semicolon
#430: FILE: fs/reiserfs/namei.c:924:
+    journal_begin(&th, parent_dir->i_sb, jbegin_count) ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: fs/reiserfs/namei.c:926:
+    retval = reiserfs_new_inode (&th, parent_dir, mode, name, strlen (symname), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: fs/reiserfs/namei.c:926:
+    retval = reiserfs_new_inode (&th, parent_dir, mode, name, strlen (symname), $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: fs/reiserfs/namei.c:926:
+    retval = reiserfs_new_inode (&th, parent_dir, mode, name, strlen (symname), 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: fs/reiserfs/namei.c:926:
+    retval = reiserfs_new_inode (&th, parent_dir, mode, name, strlen (symname), 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: fs/reiserfs/namei.c:928:
+    reiserfs_kfree (name, item_len, parent_dir->i_sb);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: fs/reiserfs/namei.c:928:
+    reiserfs_kfree (name, item_len, parent_dir->i_sb);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: fs/reiserfs/namei.c:934:
+    reiserfs_update_inode_transaction(parent_dir) ;$

WARNING:SPACING: space prohibited before semicolon
#443: FILE: fs/reiserfs/namei.c:934:
+    reiserfs_update_inode_transaction(parent_dir) ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: fs/reiserfs/namei.c:943:
+    retval = reiserfs_add_entry (&th, parent_dir, dentry->d_name.name, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: fs/reiserfs/namei.c:943:
+    retval = reiserfs_add_entry (&th, parent_dir, dentry->d_name.name, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#453: FILE: fs/reiserfs/namei.c:943:
+    retval = reiserfs_add_entry (&th, parent_dir, dentry->d_name.name, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: fs/reiserfs/namei.c:944:
+                                 dentry->d_name.len, inode, 1/*visible*/);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: fs/reiserfs/namei.c:944:
+                                 dentry->d_name.len, inode, 1/*visible*/);$

WARNING:SPACING: space prohibited before semicolon
#459: FILE: fs/reiserfs/namei.c:948:
+	journal_end(&th, parent_dir->i_sb, jbegin_count) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: fs/reiserfs/namei.c:954:
+    journal_end(&th, parent_dir->i_sb, jbegin_count) ;$

WARNING:SPACING: space prohibited before semicolon
#466: FILE: fs/reiserfs/namei.c:954:
+    journal_end(&th, parent_dir->i_sb, jbegin_count) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: fs/reiserfs/namei.c:967:
+    time_t ctime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: fs/reiserfs/namei.c:994:
+    ctime = CURRENT_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: fs/reiserfs/namei.c:995:
+    inode->i_ctime = ctime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: fs/reiserfs/namei.c:1063:
+    struct inode * old_inode, * new_dentry_inode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#521: FILE: fs/reiserfs/namei.c:1063:
+    struct inode * old_inode, * new_dentry_inode;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#521: FILE: fs/reiserfs/namei.c:1063:
+    struct inode * old_inode, * new_dentry_inode;
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: fs/reiserfs/namei.c:1067:
+    umode_t old_inode_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: fs/reiserfs/namei.c:1068:
+    time_t ctime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: fs/reiserfs/namei.c:1077:
+    new_dentry_inode = new_dentry->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: fs/reiserfs/namei.c:1096:
+    old_inode_mode = old_inode->i_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: fs/reiserfs/namei.c:1097:
+    if (S_ISDIR(old_inode_mode)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#552: FILE: fs/reiserfs/namei.c:1102:
+	if (new_dentry_inode) {
+	    if (!reiserfs_empty_dir(new_dentry_inode)) {

WARNING:TABSTOP: Statements should start on a tabstop
#553: FILE: fs/reiserfs/namei.c:1103:
+	    if (!reiserfs_empty_dir(new_dentry_inode)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#564: FILE: fs/reiserfs/namei.c:1134:
+	if (!new_dentry_inode) {
 	    reiserfs_panic (old_dir->i_sb,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: fs/reiserfs/namei.c:1153:
+    if (new_dentry_inode) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: fs/reiserfs/namei.c:1153:
+    if (new_dentry_inode) $

WARNING:SPACING: space prohibited before semicolon
#575: FILE: fs/reiserfs/namei.c:1154:
+	reiserfs_update_inode_transaction(new_dentry_inode) ;

WARNING:TABSTOP: Statements should start on a tabstop
#592: FILE: fs/reiserfs/namei.c:1208:
+	    if (S_ISDIR(old_inode_mode))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#597: FILE: fs/reiserfs/namei.c:1212:
+	if (S_ISDIR(old_inode_mode)) {
 	    if ( item_moved(&dot_dot_ih, &dot_dot_entry_path) ||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: fs/reiserfs/namei.c:1222:
+^IRFALSE( S_ISDIR(old_inode_mode) && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#606: FILE: fs/reiserfs/namei.c:1222:
+	RFALSE( S_ISDIR(old_inode_mode) && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: fs/reiserfs/namei.c:1223:
+	RFALSE( S_ISDIR(old_inode_mode) && 
 		 !reiserfs_buffer_prepared(dot_dot_de.de_bh), "" );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: fs/reiserfs/namei.c:1240:
+    if (new_dentry_inode) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#619: FILE: fs/reiserfs/namei.c:1242:
+	if (S_ISDIR(new_dentry_inode->i_mode)) {
+	    new_dentry_inode->i_nlink  = 0;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#619: FILE: fs/reiserfs/namei.c:1242:
+	if (S_ISDIR(new_dentry_inode->i_mode)) {
[...]
 	} else {
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#621: FILE: fs/reiserfs/namei.c:1244:
 	} else {
+	    new_dentry_inode->i_nlink--;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: fs/reiserfs/namei.c:1251:
+    if (S_ISDIR(old_inode_mode)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: fs/reiserfs/namei.c:1256:
+        if (!new_dentry_inode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: fs/reiserfs/namei.c:1256:
+        if (!new_dentry_inode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#637: FILE: fs/reiserfs/namei.c:1256:
+        if (!new_dentry_inode)
[...]
 	    INC_DIR_INODE_NLINK(new_dir);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: fs/reiserfs/namei.c:1281:
+    if (new_dentry_inode) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#650: FILE: fs/reiserfs/namei.c:1282:
+	if (new_dentry_inode->i_nlink == 0)
+	    add_save_link (&th, new_dentry_inode, 0/* not truncate */);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#651: FILE: fs/reiserfs/namei.c:1283:
+	    add_save_link (&th, new_dentry_inode, 0/* not truncate */);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#652: FILE: fs/reiserfs/namei.c:1284:
+	reiserfs_update_sd (&th, new_dentry_inode);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#710: FILE: fs/reiserfs/super.c:493:
+/* this struct is used in reiserfs_getopt () for containing the value for those
+   mount options that have values rather than being toggles. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#710: FILE: fs/reiserfs/super.c:493:
+   mount options that have values rather than being toggles. */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#711: FILE: fs/reiserfs/super.c:494:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: fs/reiserfs/super.c:496:
+    int bitmask; /* bit which is to be set in mount_options bitmask when this$

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: fs/reiserfs/super.c:497:
+                    value is found, 0 is no bits are to be set */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#715: FILE: fs/reiserfs/super.c:497:
+    int bitmask; /* bit which is to be set in mount_options bitmask when this
+                    value is found, 0 is no bits are to be set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#715: FILE: fs/reiserfs/super.c:497:
+                    value is found, 0 is no bits are to be set */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#718: FILE: fs/reiserfs/super.c:500:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#720: FILE: fs/reiserfs/super.c:502:
+/* this struct is used in reiserfs_getopt() for describing the set of reiserfs
+   mount options */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#720: FILE: fs/reiserfs/super.c:502:
+   mount options */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#721: FILE: fs/reiserfs/super.c:503:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: fs/reiserfs/super.c:504:
+    char * option_name;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#722: FILE: fs/reiserfs/super.c:504:
+    char * option_name;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: fs/reiserfs/super.c:505:
+    int arg_required; /* 0 if argument is not required, not 0 otherwise */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: fs/reiserfs/super.c:506:
+    const arg_desc_t * values; /* list of values accepted by an option */$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#724: FILE: fs/reiserfs/super.c:506:
+    const arg_desc_t * values; /* list of values accepted by an option */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: fs/reiserfs/super.c:507:
+    int bitmask;  /* bit which is to be set in mount_options bitmask when this$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#726: FILE: fs/reiserfs/super.c:508:
+    int bitmask;  /* bit which is to be set in mount_options bitmask when this
+		     option is selected, 0 is not bits are to be set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#726: FILE: fs/reiserfs/super.c:508:
+		     option is selected, 0 is not bits are to be set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#730: FILE: fs/reiserfs/super.c:512:
+/* possible values for "-o block-allocator=" and bits which are to be set in
+   s_mount_opt of reiserfs specific part of in-core super block */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#730: FILE: fs/reiserfs/super.c:512:
+   s_mount_opt of reiserfs specific part of in-core super block */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: fs/reiserfs/super.c:514:
+    {"noborder", REISERFS_NO_BORDER},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: fs/reiserfs/super.c:515:
+    {"no_unhashed_relocation", REISERFS_NO_UNHASHED_RELOCATION},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: fs/reiserfs/super.c:516:
+    {"hashed_relocation", REISERFS_HASHED_RELOCATION},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: fs/reiserfs/super.c:517:
+    {"test4", REISERFS_TEST4},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: fs/reiserfs/super.c:518:
+    {NULL, -1}$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#739: FILE: fs/reiserfs/super.c:521:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#741: FILE: fs/reiserfs/super.c:523:
+/* proceed only one option from a list *cur - string containing of mount options
+   opts - array of options which are accepted

WARNING:TYPO_SPELLING: 'specifed' may be misspelled - perhaps 'specified'?
#742: FILE: fs/reiserfs/super.c:524:
+   opt_arg - if option is found and requires an argument and if it is specifed
                                                                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#745: FILE: fs/reiserfs/super.c:527:
+   return -1 if unknown option is found, opt->arg_required otherwise */

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#746: FILE: fs/reiserfs/super.c:528:
+static int reiserfs_getopt (char ** cur, opt_desc_t * opts, char ** opt_arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#746: FILE: fs/reiserfs/super.c:528:
+static int reiserfs_getopt (char ** cur, opt_desc_t * opts, char ** opt_arg,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#746: FILE: fs/reiserfs/super.c:528:
+static int reiserfs_getopt (char ** cur, opt_desc_t * opts, char ** opt_arg,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#746: FILE: fs/reiserfs/super.c:528:
+static int reiserfs_getopt (char ** cur, opt_desc_t * opts, char ** opt_arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#747: FILE: fs/reiserfs/super.c:529:
+			    unsigned long * bit_flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: fs/reiserfs/super.c:531:
+    char * p;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#749: FILE: fs/reiserfs/super.c:531:
+    char * p;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: fs/reiserfs/super.c:532:
+    /* foo=bar, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#751: FILE: fs/reiserfs/super.c:533:
+    /* foo=bar, 
+       ^   ^  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: fs/reiserfs/super.c:538:
+    const opt_desc_t * opt;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#756: FILE: fs/reiserfs/super.c:538:
+    const opt_desc_t * opt;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: fs/reiserfs/super.c:539:
+    const arg_desc_t * arg;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#757: FILE: fs/reiserfs/super.c:539:
+    const arg_desc_t * arg;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: fs/reiserfs/super.c:540:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: fs/reiserfs/super.c:540:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: fs/reiserfs/super.c:541:
+    $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#759: FILE: fs/reiserfs/super.c:541:
+    
+    

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: fs/reiserfs/super.c:541:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: fs/reiserfs/super.c:542:
+    p = *cur;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: fs/reiserfs/super.c:543:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: fs/reiserfs/super.c:543:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: fs/reiserfs/super.c:545:
+    *cur = strchr (p, ',');$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#763: FILE: fs/reiserfs/super.c:545:
+    *cur = strchr (p, ',');

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: fs/reiserfs/super.c:546:
+    if (*cur) {$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#766: FILE: fs/reiserfs/super.c:548:
+	(*cur) ++;
 	       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: fs/reiserfs/super.c:549:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: fs/reiserfs/super.c:550:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: fs/reiserfs/super.c:550:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: fs/reiserfs/super.c:552:
+    for (opt = opts; opt->option_name; opt ++) {$

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#770: FILE: fs/reiserfs/super.c:552:
+    for (opt = opts; opt->option_name; opt ++) {
                                            ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#771: FILE: fs/reiserfs/super.c:553:
+	if (!strncmp (p, opt->option_name, strlen (opt->option_name))) {
+	    if (bit_flags && opt->bitmask != -1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#771: FILE: fs/reiserfs/super.c:553:
+	if (!strncmp (p, opt->option_name, strlen (opt->option_name))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#771: FILE: fs/reiserfs/super.c:553:
+	if (!strncmp (p, opt->option_name, strlen (opt->option_name))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'opt->option_name'
#771: FILE: fs/reiserfs/super.c:553:
+	if (!strncmp (p, opt->option_name, strlen (opt->option_name))) {

WARNING:TABSTOP: Statements should start on a tabstop
#772: FILE: fs/reiserfs/super.c:554:
+	    if (bit_flags && opt->bitmask != -1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#773: FILE: fs/reiserfs/super.c:555:
+		set_bit (opt->bitmask, bit_flags);

WARNING:TABSTOP: Statements should start on a tabstop
#774: FILE: fs/reiserfs/super.c:556:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: fs/reiserfs/super.c:558:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: fs/reiserfs/super.c:559:
+    if (!opt->option_name) {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#778: FILE: fs/reiserfs/super.c:560:
+	printk ("reiserfs_getopt: unknown option \"%s\"\n", p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#778: FILE: fs/reiserfs/super.c:560:
+	printk ("reiserfs_getopt: unknown option \"%s\"\n", p);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reiserfs_getopt', this function's name, in a string
#778: FILE: fs/reiserfs/super.c:560:
+	printk ("reiserfs_getopt: unknown option \"%s\"\n", p);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: fs/reiserfs/super.c:562:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: fs/reiserfs/super.c:563:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: fs/reiserfs/super.c:563:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: fs/reiserfs/super.c:564:
+    p += strlen (opt->option_name);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#782: FILE: fs/reiserfs/super.c:564:
+    p += strlen (opt->option_name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: fs/reiserfs/super.c:565:
+    switch (*p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: fs/reiserfs/super.c:566:
+    case '=':$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#785: FILE: fs/reiserfs/super.c:567:
+	if (!opt->arg_required) {
+	    printk ("reiserfs_getopt: the option \"%s\" does not require an argument\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#786: FILE: fs/reiserfs/super.c:568:
+	    printk ("reiserfs_getopt: the option \"%s\" does not require an argument\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#786: FILE: fs/reiserfs/super.c:568:
+	    printk ("reiserfs_getopt: the option \"%s\" does not require an argument\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reiserfs_getopt', this function's name, in a string
#786: FILE: fs/reiserfs/super.c:568:
+	    printk ("reiserfs_getopt: the option \"%s\" does not require an argument\n",

WARNING:TABSTOP: Statements should start on a tabstop
#788: FILE: fs/reiserfs/super.c:570:
+	    return -1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: fs/reiserfs/super.c:573:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: fs/reiserfs/super.c:574:
+    case 0:$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#793: FILE: fs/reiserfs/super.c:575:
+	if (opt->arg_required) {
+	    printk ("reiserfs_getopt: the option \"%s\" requires an argument\n", opt->option_name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#794: FILE: fs/reiserfs/super.c:576:
+	    printk ("reiserfs_getopt: the option \"%s\" requires an argument\n", opt->option_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#794: FILE: fs/reiserfs/super.c:576:
+	    printk ("reiserfs_getopt: the option \"%s\" requires an argument\n", opt->option_name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reiserfs_getopt', this function's name, in a string
#794: FILE: fs/reiserfs/super.c:576:
+	    printk ("reiserfs_getopt: the option \"%s\" requires an argument\n", opt->option_name);

WARNING:TABSTOP: Statements should start on a tabstop
#795: FILE: fs/reiserfs/super.c:577:
+	    return -1;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#799: FILE: fs/reiserfs/super.c:581:
+	printk ("reiserfs_getopt: head of option \"%s\" is only correct\n", opt->option_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#799: FILE: fs/reiserfs/super.c:581:
+	printk ("reiserfs_getopt: head of option \"%s\" is only correct\n", opt->option_name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reiserfs_getopt', this function's name, in a string
#799: FILE: fs/reiserfs/super.c:581:
+	printk ("reiserfs_getopt: head of option \"%s\" is only correct\n", opt->option_name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: fs/reiserfs/super.c:583:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: fs/reiserfs/super.c:584:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: fs/reiserfs/super.c:586:
+    p ++;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#804: FILE: fs/reiserfs/super.c:586:
+    p ++;
       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: fs/reiserfs/super.c:587:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: fs/reiserfs/super.c:587:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: fs/reiserfs/super.c:588:
+    if ( opt->arg_required && !strlen (p) ) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#806: FILE: fs/reiserfs/super.c:588:
+    if ( opt->arg_required && !strlen (p) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#806: FILE: fs/reiserfs/super.c:588:
+    if ( opt->arg_required && !strlen (p) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#806: FILE: fs/reiserfs/super.c:588:
+    if ( opt->arg_required && !strlen (p) ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#808: FILE: fs/reiserfs/super.c:590:
+	printk ("reiserfs_getopt: empty argument for \"%s\"\n", opt->option_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#808: FILE: fs/reiserfs/super.c:590:
+	printk ("reiserfs_getopt: empty argument for \"%s\"\n", opt->option_name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reiserfs_getopt', this function's name, in a string
#808: FILE: fs/reiserfs/super.c:590:
+	printk ("reiserfs_getopt: empty argument for \"%s\"\n", opt->option_name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: fs/reiserfs/super.c:592:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#811: FILE: fs/reiserfs/super.c:593:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: fs/reiserfs/super.c:593:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: fs/reiserfs/super.c:594:
+    if (!opt->values) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: fs/reiserfs/super.c:598:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#817: FILE: fs/reiserfs/super.c:599:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: fs/reiserfs/super.c:599:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: fs/reiserfs/super.c:601:
+    for (arg = opt->values; arg->value; arg ++) {$

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#819: FILE: fs/reiserfs/super.c:601:
+    for (arg = opt->values; arg->value; arg ++) {
                                             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#820: FILE: fs/reiserfs/super.c:602:
+	if (!strcmp (p, arg->value)) {
+	    if (bit_flags && arg->bitmask != -1 )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#820: FILE: fs/reiserfs/super.c:602:
+	if (!strcmp (p, arg->value)) {

WARNING:TABSTOP: Statements should start on a tabstop
#821: FILE: fs/reiserfs/super.c:603:
+	    if (bit_flags && arg->bitmask != -1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#821: FILE: fs/reiserfs/super.c:603:
+	    if (bit_flags && arg->bitmask != -1 )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#822: FILE: fs/reiserfs/super.c:604:
+		set_bit (arg->bitmask, bit_flags);

WARNING:TABSTOP: Statements should start on a tabstop
#823: FILE: fs/reiserfs/super.c:605:
+	    return opt->arg_required;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: fs/reiserfs/super.c:607:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#826: FILE: fs/reiserfs/super.c:608:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: fs/reiserfs/super.c:608:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: fs/reiserfs/super.c:609:
+    printk ("reiserfs_getopt: bad value \"%s\" for option \"%s\"\n", p, opt->option_name);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#827: FILE: fs/reiserfs/super.c:609:
+    printk ("reiserfs_getopt: bad value \"%s\" for option \"%s\"\n", p, opt->option_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#827: FILE: fs/reiserfs/super.c:609:
+    printk ("reiserfs_getopt: bad value \"%s\" for option \"%s\"\n", p, opt->option_name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reiserfs_getopt', this function's name, in a string
#827: FILE: fs/reiserfs/super.c:609:
+    printk ("reiserfs_getopt: bad value \"%s\" for option \"%s\"\n", p, opt->option_name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: fs/reiserfs/super.c:610:
+    return -1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#831: FILE: fs/reiserfs/super.c:613:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#833: FILE: fs/reiserfs/super.c:615:
+static int reiserfs_parse_options (char * options, /* string given via mount's -o */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#833: FILE: fs/reiserfs/super.c:615:
+static int reiserfs_parse_options (char * options, /* string given via mount's -o */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#834: FILE: fs/reiserfs/super.c:616:
+				   unsigned long * mount_options,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#836: FILE: fs/reiserfs/super.c:618:
+				   /* after the parsing phase, contains the
+				      collection of bitflags defining what

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#837: FILE: fs/reiserfs/super.c:619:
+				      mount options were selected. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#838: FILE: fs/reiserfs/super.c:620:
+				   unsigned long * blocks, /* strtol-ed from NNN of resize=NNN */

WARNING:LINE_SPACING: Missing a blank line after declarations
#839: FILE: fs/reiserfs/super.c:621:
+				   unsigned long * blocks, /* strtol-ed from NNN of resize=NNN */
+				   char ** jdev_name)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#839: FILE: fs/reiserfs/super.c:621:
+				   char ** jdev_name)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: fs/reiserfs/super.c:623:
+    int c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: fs/reiserfs/super.c:624:
+    char * arg = NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#842: FILE: fs/reiserfs/super.c:624:
+    char * arg = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: fs/reiserfs/super.c:625:
+    char * pos;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#843: FILE: fs/reiserfs/super.c:625:
+    char * pos;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: fs/reiserfs/super.c:626:
+    opt_desc_t opts[] = {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#846: FILE: fs/reiserfs/super.c:628:
+^I^I{"conv", 0, 0, REISERFS_CONVERT}, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: fs/reiserfs/super.c:629:
+^I^I{"attrs", 0, 0, REISERFS_ATTRS}, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#850: FILE: fs/reiserfs/super.c:632:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#851: FILE: fs/reiserfs/super.c:633:
+^I^I{"block-allocator", 'a', balloc, -1}, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#852: FILE: fs/reiserfs/super.c:634:
+^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: fs/reiserfs/super.c:638:
+    };$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: fs/reiserfs/super.c:639:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: fs/reiserfs/super.c:641:
+    if (!options || !*options)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#863: FILE: fs/reiserfs/super.c:643:
+	   conversion to newest format */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: fs/reiserfs/super.c:645:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: fs/reiserfs/super.c:645:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#899: FILE: fs/reiserfs/super.c:646:
+    for (pos = options; pos; ) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#900: FILE: fs/reiserfs/super.c:647:
+	c = reiserfs_getopt (&pos, opts, &arg, mount_options);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#901: FILE: fs/reiserfs/super.c:648:
+	if (c == -1)
[...]
+	    return 0;

WARNING:TABSTOP: Statements should start on a tabstop
#903: FILE: fs/reiserfs/super.c:650:
+	    return 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#904: FILE: fs/reiserfs/super.c:651:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#905: FILE: fs/reiserfs/super.c:652:
+	if (c == 'r') {
+	    char * p;

WARNING:TABSTOP: Statements should start on a tabstop
#906: FILE: fs/reiserfs/super.c:653:
+	    char * p;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#906: FILE: fs/reiserfs/super.c:653:
+	    char * p;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#907: FILE: fs/reiserfs/super.c:654:
+^I    $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#910: FILE: fs/reiserfs/super.c:657:
+	    *blocks = simple_strtoul (arg, &p, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#910: FILE: fs/reiserfs/super.c:657:
+	    *blocks = simple_strtoul (arg, &p, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:TABSTOP: Statements should start on a tabstop
#911: FILE: fs/reiserfs/super.c:658:
+	    if (*p != '\0') {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#913: FILE: fs/reiserfs/super.c:660:
+		printk ("reiserfs_parse_options: bad value %s\n", arg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#913: FILE: fs/reiserfs/super.c:660:
+		printk ("reiserfs_parse_options: bad value %s\n", arg);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reiserfs_parse_options', this function's name, in a string
#913: FILE: fs/reiserfs/super.c:660:
+		printk ("reiserfs_parse_options: bad value %s\n", arg);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#948: FILE: fs/reiserfs/super.c:665:
+	if (c == 'j') {
+	    if (arg && *arg && jdev_name) {

WARNING:TABSTOP: Statements should start on a tabstop
#949: FILE: fs/reiserfs/super.c:666:
+	    if (arg && *arg && jdev_name) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#949: FILE: fs/reiserfs/super.c:666:
+	    if (arg && *arg && jdev_name) {
+		*jdev_name = arg;
 	    }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#957: FILE: fs/reiserfs/super.c:671:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: fs/reiserfs/super.c:671:
+    $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#970: FILE: fs/reiserfs/super.c:675:
+static int reiserfs_remount (struct super_block * s, int * mount_flags, char * arg)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#970: FILE: fs/reiserfs/super.c:675:
+static int reiserfs_remount (struct super_block * s, int * mount_flags, char * arg)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#970: FILE: fs/reiserfs/super.c:675:
+static int reiserfs_remount (struct super_block * s, int * mount_flags, char * arg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#970: FILE: fs/reiserfs/super.c:675:
+static int reiserfs_remount (struct super_block * s, int * mount_flags, char * arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: fs/reiserfs/super.c:684:
+  if (!reiserfs_parse_options(arg, &mount_options, &blocks, NULL))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#981: FILE: fs/reiserfs/super.c:684:
+  if (!reiserfs_parse_options(arg, &mount_options, &blocks, NULL))
+    return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: fs/reiserfs/super.c:685:
+    return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#983: FILE: fs/reiserfs/super.c:686:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: fs/reiserfs/super.c:686:
+  $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#984: FILE: fs/reiserfs/super.c:687:
   if(blocks) {
+    int rc = reiserfs_resize(s, blocks);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: fs/reiserfs/super.c:688:
+    int rc = reiserfs_resize(s, blocks);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#989: FILE: fs/reiserfs/super.c:689:
+    int rc = reiserfs_resize(s, blocks);
+    if (rc != 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: fs/reiserfs/super.c:689:
+    if (rc != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#989: FILE: fs/reiserfs/super.c:689:
+    if (rc != 0)
+      return rc;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: fs/reiserfs/super.c:690:
+      return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: fs/reiserfs/super.c:693:
+  if (*mount_flags & MS_RDONLY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#999: FILE: fs/reiserfs/super.c:693:
+  if (*mount_flags & MS_RDONLY) {
[...]
+    if (s->s_flags & MS_RDONLY)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: fs/reiserfs/super.c:695:
+    if (s->s_flags & MS_RDONLY)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1001: FILE: fs/reiserfs/super.c:695:
+    if (s->s_flags & MS_RDONLY)
[...]
+      return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: fs/reiserfs/super.c:697:
+      return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1012: FILE: fs/reiserfs/super.c:713:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: fs/reiserfs/super.c:713:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: fs/reiserfs/super.c:728:
+  if (!( *mount_flags & MS_RDONLY ) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1021: FILE: fs/reiserfs/super.c:728:
+  if (!( *mount_flags & MS_RDONLY ) )
     finish_unfinished( s );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1021: FILE: fs/reiserfs/super.c:728:
+  if (!( *mount_flags & MS_RDONLY ) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1021: FILE: fs/reiserfs/super.c:728:
+  if (!( *mount_flags & MS_RDONLY ) )

CHECK:SPACING: No space is necessary after a cast
#1044: FILE: fs/reiserfs/super.c:1092:
+    if (reiserfs_parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: fs/reiserfs/super.c:1092:
+    if (reiserfs_parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1044: FILE: fs/reiserfs/super.c:1092:
+    if (reiserfs_parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sbi->s_mount_opt
#1044: FILE: fs/reiserfs/super.c:1092:
+    if (reiserfs_parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1044: FILE: fs/reiserfs/super.c:1092:
+    if (reiserfs_parse_options ((char *) data, &(sbi->s_mount_opt), &blocks, &jdev_name) == 0) {
 	goto error;
     }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: fs/reiserfs/super.c:1260:
+  buf->f_namelen = (REISERFS_MAX_NAME (s->s_blocksize));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1067: FILE: fs/reiserfs/super.c:1260:
+  buf->f_namelen = (REISERFS_MAX_NAME (s->s_blocksize));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: fs/reiserfs/super.c:1261:
+  buf->f_ffree   = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: fs/reiserfs/super.c:1262:
+  buf->f_files   = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: fs/reiserfs/super.c:1265:
+  buf->f_blocks  = sb_block_count(rs) - sb_bmap_nr(rs) - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: fs/reiserfs/super.c:1266:
+  buf->f_bsize   = s->s_blocksize;$

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#1077: FILE: fs/reiserfs/super.c:1267:
+  /* changed to accomodate gcc folks.*/
                 ^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: fs/reiserfs/super.c:1268:
+  buf->f_type    =  REISERFS_SUPER_MAGIC;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451038.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 73 errors, 240 warnings, 15 checks, 970 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451038.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
