WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
                                                                               

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#104: FILE: drivers/i2c/i2c-core.c:622:
+	return (ret == 1 )? count : ret;
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#104: FILE: drivers/i2c/i2c-core.c:622:
+	return (ret == 1 )? count : ret;

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#152: FILE: drivers/i2c/i2c-core.c:648:
+	return (ret == 1 )? count : ret;
 	                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#152: FILE: drivers/i2c/i2c-core.c:648:
+	return (ret == 1 )? count : ret;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: drivers/i2c/i2c-core.c:1041:
+static int i2c_smbus_complete_entry(struct i2c_adapter * adap, u16 addr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: drivers/i2c/i2c-core.c:1044:
+				    union i2c_smbus_data * data,

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: drivers/i2c/i2c-core.c:1051:
+	if(swpec &&

ERROR:SPACING: space required before the open parenthesis '('
#189: FILE: drivers/i2c/i2c-core.c:1057:
+		if(i2c_smbus_check_pec(addr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#200: FILE: drivers/i2c/i2c-core.c:1068:
+static void i2c_smbus_format_entry(struct i2c_adapter * adap, u16 addr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#203: FILE: drivers/i2c/i2c-core.c:1071:
+				   union i2c_smbus_data * data,

ERROR:SPACING: space required before the open parenthesis '('
#209: FILE: drivers/i2c/i2c-core.c:1077:
+	if((*flags & I2C_CLIENT_PEC) &&

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: drivers/i2c/i2c-core.c:1080:
+		if(read_write == I2C_SMBUS_READ &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#212: FILE: drivers/i2c/i2c-core.c:1080:
+		if(read_write == I2C_SMBUS_READ &&
[...]
+		else if(*size == I2C_SMBUS_PROC_CALL)
[...]
+		else if(*size == I2C_SMBUS_BLOCK_PROC_CALL) {
[...]
+		} else if(read_write == I2C_SMBUS_WRITE &&
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#215: FILE: drivers/i2c/i2c-core.c:1083:
+		else if(*size == I2C_SMBUS_PROC_CALL)

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: drivers/i2c/i2c-core.c:1085:
+		else if(*size == I2C_SMBUS_BLOCK_PROC_CALL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: drivers/i2c/i2c-core.c:1087:
+			unsigned char *sdata = data->block;
+			i2c_smbus_add_pec(addr, command, I2C_SMBUS_BLOCK_DATA,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#223: FILE: drivers/i2c/i2c-core.c:1091:
+		} else if(read_write == I2C_SMBUS_WRITE &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: drivers/i2c/i2c-core.c:1092:
+^I^I          *size != I2C_SMBUS_QUICK &&$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/i2c/i2c-core.c:1093:
+^I^I          *size != I2C_SMBUS_I2C_BLOCK_DATA)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#230: FILE: drivers/i2c/i2c-core.c:1098:
+static int i2c_smbus_emu_complete(struct i2c_adapter * adap, u16 addr,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: drivers/i2c/i2c-core.c:1100:
+^I^I^I^I  u8 command, int size, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#233: FILE: drivers/i2c/i2c-core.c:1101:
+				  union i2c_smbus_data * data,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#242: FILE: drivers/i2c/i2c-core.c:1110:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#249: FILE: drivers/i2c/i2c-core.c:1117:
+	switch(size) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/i2c/i2c-core.c:1124:
+^Icase I2C_SMBUS_WORD_DATA: $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#258: FILE: drivers/i2c/i2c-core.c:1126:
+		data->word = msgbuf1[0]|(msgbuf1[1] << 8);
 		                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#264: FILE: drivers/i2c/i2c-core.c:1132:
+			data->block[i+1] = msgbuf1[i];
 			             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: drivers/i2c/i2c-core.c:1143:
+^I^I^I^Iu8 command, int size, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: drivers/i2c/i2c-core.c:1144:
+				union i2c_smbus_data * data,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#280: FILE: drivers/i2c/i2c-core.c:1148:
+	/* So we need to generate a series of msgs. In the case of
+	   writing, we need to use only one message; when reading, we

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#282: FILE: drivers/i2c/i2c-core.c:1150:
+	   keep the code below somewhat simpler. */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#304: FILE: drivers/i2c/i2c-core.c:1168:
+				((read_write==I2C_SMBUS_READ)
 				            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#383: FILE: drivers/i2c/i2c-core.c:1256:
+s32 i2c_smbus_xfer(struct i2c_adapter * adap, u16 addr, unsigned short flags,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#430: FILE: drivers/i2c/i2c-core.c:1264:
+
+

CHECK:BRACES: Unbalanced braces around else statement
#456: FILE: drivers/i2c/i2c-core.c:1290:
+		else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 4 warnings, 6 checks, 398 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
