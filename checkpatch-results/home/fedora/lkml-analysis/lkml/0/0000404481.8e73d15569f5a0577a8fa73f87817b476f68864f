WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Main differences are in the Makefile and Kconfig. the C source code hasn't changed.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/char/config.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#71: FILE: drivers/char/config.c:30:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#72: FILE: drivers/char/config.c:31:
+#include <asm/uaccess.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: drivers/char/config.c:36:
+static int config_read_proc(char * page, char ** start, off_t off,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#77: FILE: drivers/char/config.c:36:
+static int config_read_proc(char * page, char ** start, off_t off,

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: drivers/char/config.c:37:
+                            int count, int *eof, void *data);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/char/config.c:37:
+                            int count, int *eof, void *data);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#80: FILE: drivers/char/config.c:39:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Attention>
#82: FILE: drivers/char/config.c:41:
+#warn Attention

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited after that open parenthesis '('
#83: FILE: drivers/char/config.c:42:
+static int config_read_proc( char *buffer, char **start, off_t offset,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#83: FILE: drivers/char/config.c:42:
+static int config_read_proc( char *buffer, char **start, off_t offset,
+                           int size, int *eof, void *data) { return 0; }

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: drivers/char/config.c:43:
+                           int size, int *eof, void *data) { return 0; }$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: drivers/char/config.c:43:
+static int config_read_proc( char *buffer, char **start, off_t offset,
+                           int size, int *eof, void *data) { return 0; }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/char/config.c:43:
+                           int size, int *eof, void *data) { return 0; }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#88: FILE: drivers/char/config.c:47:
+ * this like that... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: drivers/char/config.c:48:
+#define        PRINT_PROC(fmt,args...)                                 \
                              ^

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#89: FILE: drivers/char/config.c:48:
+#define        PRINT_PROC(fmt,args...)                                 \
+        do {                                                   \
+          *len += sprintf( buffer+*len, fmt, ##args );         \
+          if (*begin + *len > offset + size)                   \
+            return( 0 );                                       \
+          if (*begin + *len < offset) {                                \
+            *begin += *len;                                    \
+            *len = 0;                                          \
+           }                                                   \
+         } while(0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/char/config.c:49:
+        do {                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/char/config.c:49:
+        do {                                                   \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#90: FILE: drivers/char/config.c:49:
+        do {                                                   \
+          *len += sprintf( buffer+*len, fmt, ##args );         \

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: drivers/char/config.c:50:
+          *len += sprintf( buffer+*len, fmt, ##args );         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/char/config.c:50:
+          *len += sprintf( buffer+*len, fmt, ##args );         \$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#91: FILE: drivers/char/config.c:50:
+          *len += sprintf( buffer+*len, fmt, ##args );         \
                                  ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#91: FILE: drivers/char/config.c:50:
+          *len += sprintf( buffer+*len, fmt, ##args );         \
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#91: FILE: drivers/char/config.c:50:
+          *len += sprintf( buffer+*len, fmt, ##args );         \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#91: FILE: drivers/char/config.c:50:
+          *len += sprintf( buffer+*len, fmt, ##args );         \

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: drivers/char/config.c:51:
+          if (*begin + *len > offset + size)                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/char/config.c:51:
+          if (*begin + *len > offset + size)                   \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#92: FILE: drivers/char/config.c:51:
+          if (*begin + *len > offset + size)                   \
+            return( 0 );                                       \

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: drivers/char/config.c:52:
+            return( 0 );                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/char/config.c:52:
+            return( 0 );                                       \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#93: FILE: drivers/char/config.c:52:
+            return( 0 );                                       \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#93: FILE: drivers/char/config.c:52:
+            return( 0 );                                       \

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: drivers/char/config.c:53:
+          if (*begin + *len < offset) {                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/char/config.c:53:
+          if (*begin + *len < offset) {                                \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#94: FILE: drivers/char/config.c:53:
+          if (*begin + *len < offset) {                                \
+            *begin += *len;                                    \

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: drivers/char/config.c:54:
+            *begin += *len;                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/char/config.c:54:
+            *begin += *len;                                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: drivers/char/config.c:55:
+            *len = 0;                                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/char/config.c:55:
+            *len = 0;                                          \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/char/config.c:56:
+           }                                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/char/config.c:56:
+           }                                                   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/char/config.c:57:
+         } while(0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/char/config.c:57:
+         } while(0)$

ERROR:SPACING: space required before the open parenthesis '('
#98: FILE: drivers/char/config.c:57:
+         } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#100: FILE: drivers/char/config.c:59:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/char/config.c:61:
+                                off_t offset, int size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/char/config.c:61:
+                                off_t offset, int size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/char/config.c:63:
+  PRINT_PROC("Linux Kernel Configuration driver version %s\n", CONFIG_VERSION);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/char/config.c:64:
+  PRINT_PROC("(c) P. Rolland - Dec 2002\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/char/config.c:66:
+  return(1);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#107: FILE: drivers/char/config.c:66:
+  return(1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/char/config.c:69:
+static int config_gz_infos(char *buffer, int *len, off_t *begin, off_t offset, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: drivers/char/config.c:70:
+                           int size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: drivers/char/config.c:70:
+                           int size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/char/config.c:72:
+  int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/char/config.c:73:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/char/config.c:73:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/char/config.c:74:
+  for (i=0; i<CONFIG_SIZE; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#115: FILE: drivers/char/config.c:74:
+  for (i=0; i<CONFIG_SIZE; i++) {
+    PRINT_PROC("%c", config_gz[i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#115: FILE: drivers/char/config.c:74:
+  for (i=0; i<CONFIG_SIZE; i++) {
         ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#115: FILE: drivers/char/config.c:74:
+  for (i=0; i<CONFIG_SIZE; i++) {
              ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#115: FILE: drivers/char/config.c:74:
+  for (i=0; i<CONFIG_SIZE; i++) {
+    PRINT_PROC("%c", config_gz[i]);
+  }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/char/config.c:75:
+    PRINT_PROC("%c", config_gz[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/char/config.c:76:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/char/config.c:78:
+  return(1);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#122: FILE: drivers/char/config.c:81:
+static int config_read_proc( char *buffer, char **start, off_t offset,

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: drivers/char/config.c:82:
+                            int size, int *eof, void *data )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/char/config.c:82:
+                            int size, int *eof, void *data )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#123: FILE: drivers/char/config.c:82:
+                            int size, int *eof, void *data )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/char/config.c:84:
+  int len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/char/config.c:85:
+  off_t begin = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/char/config.c:87:
+  *eof = config_version_infos(buffer, &len, &begin, offset, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/char/config.c:89:
+  if (offset >= begin + len)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#130: FILE: drivers/char/config.c:89:
+  if (offset >= begin + len)
+    return(0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/char/config.c:90:
+    return(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/char/config.c:91:
+  *start = buffer + (offset - begin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/char/config.c:92:
+  return( size < begin + len - offset ? size : begin + len - offset );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#133: FILE: drivers/char/config.c:92:
+  return( size < begin + len - offset ? size : begin + len - offset );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#133: FILE: drivers/char/config.c:92:
+  return( size < begin + len - offset ? size : begin + len - offset );

ERROR:SPACING: space prohibited after that open parenthesis '('
#136: FILE: drivers/char/config.c:95:
+static int config_gz_read_proc( char *buffer, char **start, off_t offset,

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: drivers/char/config.c:96:
+                                int size, int *eof, void *data )$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: drivers/char/config.c:96:
+static int config_gz_read_proc( char *buffer, char **start, off_t offset,
+                                int size, int *eof, void *data )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/char/config.c:96:
+                                int size, int *eof, void *data )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#137: FILE: drivers/char/config.c:96:
+                                int size, int *eof, void *data )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/char/config.c:98:
+  int len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/char/config.c:99:
+  off_t begin = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/char/config.c:101:
+  *eof = config_gz_infos(buffer, &len, &begin, offset, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/char/config.c:103:
+  if (offset >= begin + len)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#144: FILE: drivers/char/config.c:103:
+  if (offset >= begin + len)
+    return(0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/char/config.c:104:
+    return(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/char/config.c:105:
+  *start = buffer + (offset - begin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/char/config.c:106:
+  return( size < begin + len - offset ? size : begin + len - offset );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#147: FILE: drivers/char/config.c:106:
+  return( size < begin + len - offset ? size : begin + len - offset );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#147: FILE: drivers/char/config.c:106:
+  return( size < begin + len - offset ? size : begin + len - offset );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/char/config.c:111:
+  struct proc_dir_entry * entry;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: drivers/char/config.c:111:
+  struct proc_dir_entry * entry;

WARNING:LINE_SPACING: Missing a blank line after declarations
#153: FILE: drivers/char/config.c:112:
+  struct proc_dir_entry * entry;
+  entry = create_proc_entry("config", S_IRUGO|S_IXUGO|S_IFDIR, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/char/config.c:112:
+  entry = create_proc_entry("config", S_IRUGO|S_IXUGO|S_IFDIR, NULL);$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#153: FILE: drivers/char/config.c:112:
+  entry = create_proc_entry("config", S_IRUGO|S_IXUGO|S_IFDIR, NULL);
                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#153: FILE: drivers/char/config.c:112:
+  entry = create_proc_entry("config", S_IRUGO|S_IXUGO|S_IFDIR, NULL);
                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#153: FILE: drivers/char/config.c:112:
+  entry = create_proc_entry("config", S_IRUGO|S_IXUGO|S_IFDIR, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/char/config.c:113:
+  if (entry == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#154: FILE: drivers/char/config.c:113:
+  if (entry == NULL) {
+    printk(KERN_ERR "config: can't create /proc/config\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!entry"
#154: FILE: drivers/char/config.c:113:
+  if (entry == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/char/config.c:114:
+    printk(KERN_ERR "config: can't create /proc/config\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#155: FILE: drivers/char/config.c:114:
+    printk(KERN_ERR "config: can't create /proc/config\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/char/config.c:115:
+    return(-ENOMEM);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/char/config.c:116:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/char/config.c:118:
+  if (!create_proc_read_entry("config/version",0,0,config_read_proc,NULL)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#159: FILE: drivers/char/config.c:118:
+  if (!create_proc_read_entry("config/version",0,0,config_read_proc,NULL)) {
+    printk(KERN_ERR "config: can't create /proc/config/version\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: drivers/char/config.c:118:
+  if (!create_proc_read_entry("config/version",0,0,config_read_proc,NULL)) {
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: drivers/char/config.c:118:
+  if (!create_proc_read_entry("config/version",0,0,config_read_proc,NULL)) {
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: drivers/char/config.c:118:
+  if (!create_proc_read_entry("config/version",0,0,config_read_proc,NULL)) {
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: drivers/char/config.c:118:
+  if (!create_proc_read_entry("config/version",0,0,config_read_proc,NULL)) {
                                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/char/config.c:119:
+    printk(KERN_ERR "config: can't create /proc/config/version\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#160: FILE: drivers/char/config.c:119:
+    printk(KERN_ERR "config: can't create /proc/config/version\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/char/config.c:120:
+    return(-ENOMEM);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/char/config.c:121:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/char/config.c:122:
+  if (!create_proc_read_entry("config/config.gz",0,0,config_gz_read_proc,NULL)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#163: FILE: drivers/char/config.c:122:
+  if (!create_proc_read_entry("config/config.gz",0,0,config_gz_read_proc,NULL)) {
+    printk(KERN_ERR "config: can't create /proc/config/config.gz\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: drivers/char/config.c:122:
+  if (!create_proc_read_entry("config/config.gz",0,0,config_gz_read_proc,NULL)) {
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: drivers/char/config.c:122:
+  if (!create_proc_read_entry("config/config.gz",0,0,config_gz_read_proc,NULL)) {
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: drivers/char/config.c:122:
+  if (!create_proc_read_entry("config/config.gz",0,0,config_gz_read_proc,NULL)) {
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: drivers/char/config.c:122:
+  if (!create_proc_read_entry("config/config.gz",0,0,config_gz_read_proc,NULL)) {
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/char/config.c:123:
+    printk(KERN_ERR "config: can't create /proc/config/config.gz\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#164: FILE: drivers/char/config.c:123:
+    printk(KERN_ERR "config: can't create /proc/config/config.gz\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/char/config.c:124:
+    return(-ENOMEM);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/char/config.c:125:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/char/config.c:127:
+  printk(KERN_INFO "Linux Kernel Configuration driver v" CONFIG_VERSION " (c) Paul Rolland\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#168: FILE: drivers/char/config.c:127:
+  printk(KERN_INFO "Linux Kernel Configuration driver v" CONFIG_VERSION " (c) Paul Rolland\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/char/config.c:129:
+  return( 0 );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#170: FILE: drivers/char/config.c:129:
+  return( 0 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#170: FILE: drivers/char/config.c:129:
+  return( 0 );

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#170: FILE: drivers/char/config.c:129:
+  return( 0 );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: drivers/char/config.c:132:
+static void __exit config_cleanup_module (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/char/config.c:134:
+  remove_proc_entry( "config/version", 0 );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#175: FILE: drivers/char/config.c:134:
+  remove_proc_entry( "config/version", 0 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#175: FILE: drivers/char/config.c:134:
+  remove_proc_entry( "config/version", 0 );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/char/config.c:135:
+  remove_proc_entry( "config/config.gz", 0 );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#176: FILE: drivers/char/config.c:135:
+  remove_proc_entry( "config/config.gz", 0 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#176: FILE: drivers/char/config.c:135:
+  remove_proc_entry( "config/config.gz", 0 );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/char/config.c:136:
+  remove_proc_entry( "config", 0 );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#177: FILE: drivers/char/config.c:136:
+  remove_proc_entry( "config", 0 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#177: FILE: drivers/char/config.c:136:
+  remove_proc_entry( "config", 0 );

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#194: FILE: drivers/char/dotHmaker.c:1:
+#include <stdio.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/char/dotHmaker.c:5:
+  FILE * in = stdin;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: drivers/char/dotHmaker.c:5:
+  FILE * in = stdin;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/char/dotHmaker.c:6:
+  int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/char/dotHmaker.c:7:
+  unsigned char buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/char/dotHmaker.c:9:
+  int size = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/char/dotHmaker.c:11:
+  printf("/*\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/char/dotHmaker.c:12:
+  printf(" * Automagically generated file, please don't edit !\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/char/dotHmaker.c:13:
+  printf(" */\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/char/dotHmaker.c:14:
+  printf("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/char/dotHmaker.c:15:
+  printf("static char config_gz[] = \\\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/char/dotHmaker.c:17:
+  i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/char/dotHmaker.c:19:
+  fread(&buf, sizeof(unsigned char), 1, in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/char/dotHmaker.c:20:
+  while (!feof(in)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#213: FILE: drivers/char/dotHmaker.c:20:
+  while (!feof(in)) {
+    if (i == 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/char/dotHmaker.c:21:
+    if (i == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#214: FILE: drivers/char/dotHmaker.c:21:
+    if (i == 0) {
+      printf("  \"");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#214: FILE: drivers/char/dotHmaker.c:21:
+    if (i == 0) {
+      printf("  \"");
+    } /* endif */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/char/dotHmaker.c:22:
+      printf("  \"");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/char/dotHmaker.c:23:
+    } /* endif */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/char/dotHmaker.c:24:
+    printf("\\x%x", buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/char/dotHmaker.c:25:
+    size ++;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#218: FILE: drivers/char/dotHmaker.c:25:
+    size ++;
          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/char/dotHmaker.c:26:
+    i ++;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#219: FILE: drivers/char/dotHmaker.c:26:
+    i ++;
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/char/dotHmaker.c:27:
+    if (i == 10) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#220: FILE: drivers/char/dotHmaker.c:27:
+    if (i == 10) {
+      i = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/char/dotHmaker.c:28:
+      i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/char/dotHmaker.c:29:
+      printf("\"\\\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/char/dotHmaker.c:30:
+    } /* endif */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/char/dotHmaker.c:31:
+    fread(&buf, sizeof(unsigned char), 1, in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/char/dotHmaker.c:32:
+  } /* endwhile */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/char/dotHmaker.c:34:
+  if (i != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#227: FILE: drivers/char/dotHmaker.c:34:
+  if (i != 0) {
+    printf("\";\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#227: FILE: drivers/char/dotHmaker.c:34:
+  if (i != 0) {
+    printf("\";\n");
+  } /* endif */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/char/dotHmaker.c:35:
+    printf("\";\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/char/dotHmaker.c:36:
+  } /* endif */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/char/dotHmaker.c:37:
+  printf("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/char/dotHmaker.c:38:
+  printf("#define CONFIG_SIZE %d\n\n", size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/char/dotHmaker.c:40:
+  exit(0);$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#242: FILE: drivers/char/Kconfig:7:
+config CONFIG
+       bool "Linux Kernel Configuration Driver"
+       ---help---
+         If you say Y here, and if you have /proc support enabled, you'll find
+         a /proc/config directory that will contain the .config used to generate
+         the running kernel.
+
 config VT
        bool "Virtual terminal"
        ---help---

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404481.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 60 errors, 118 warnings, 9 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404481.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
