WARNING:TYPO_SPELLING: 'Cahnges' may be misspelled - perhaps 'Changes'?
#31: 
  o Cahnges to accomodate latest sysfs changes basically using
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#31: 
  o Cahnges to accomodate latest sysfs changes basically using
               ^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
    opening the sysfs file in check_perm() and a few changes in variable names

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: fs/sysfs/file.c:72:
+	struct sysfs_dirent * attr_sd = file->f_dentry->d_fsdata;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#85: FILE: fs/sysfs/file.c:73:
+	struct attribute * attr = attr_sd->s_element;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: fs/sysfs/file.c:74:
+	struct sysfs_dirent * kobj_sd = file->f_dentry->d_parent->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: fs/sysfs/file.c:75:
+	struct kobject * kobj = kobj_sd->s_element;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: fs/sysfs/file.c:131:
+ *^IIt is safe to use ->d_parent->d_fsdata as both dentry and the kobject $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: fs/sysfs/file.c:133:
+ *^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#107: FILE: fs/sysfs/file.c:198:
+	struct sysfs_dirent * attr_sd = file->f_dentry->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#108: FILE: fs/sysfs/file.c:199:
+	struct attribute * attr = attr_sd->s_element;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#109: FILE: fs/sysfs/file.c:200:
+	struct sysfs_dirent * kobj_sd = file->f_dentry->d_parent->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#110: FILE: fs/sysfs/file.c:201:
+	struct kobject * kobj = kobj_sd->s_element;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: fs/sysfs/file.c:241:
+	struct sysfs_dirent * attr_sd = file->f_dentry->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: fs/sysfs/file.c:242:
+	struct attribute * attr = attr_sd->s_element;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: fs/sysfs/file.c:323:
+	struct sysfs_dirent * attr_sd = filp->f_dentry->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: fs/sysfs/file.c:324:
+	struct attribute * attr = attr_sd->s_element;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: fs/sysfs/file.c:325:
+	struct sysfs_dirent * kobj_sd = filp->f_dentry->d_parent->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: fs/sysfs/file.c:326:
+	struct kobject * kobj = kobj_sd->s_element;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#142: FILE: fs/sysfs/file.c:341:
+struct file_operations sysfs_file_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: fs/sysfs/file.c:350:
+int sysfs_add_file(struct dentry * parent, const struct attribute * attr, int t)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: fs/sysfs/file.c:350:
+int sysfs_add_file(struct dentry * parent, const struct attribute * attr, int t)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: fs/sysfs/file.c:352:
+	struct sysfs_dirent * sd;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: fs/sysfs/file.c:353:
+	struct sysfs_dirent * parent_sd = parent->d_fsdata;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: fs/sysfs/file.c:356:
+^Idown(&parent->d_inode->i_sem);^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#172: FILE: fs/sysfs/file.c:357:
+	sd = sysfs_new_dirent(parent_sd, (void *) attr, t);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#176: FILE: fs/sysfs/file.c:361:
+		sd->s_mode =  (attr->mode & S_IALLUGO) | S_IFREG ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: fs/sysfs/file.c:362:
+^Iup(&parent->d_inode->i_sem);^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: fs/sysfs/file.c:363:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: fs/sysfs/inode.c:66:
+^I^Iif (S_ISDIR(mode)) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: fs/sysfs/inode.c:104:
+ ^I^I^I^Isimple_unlink(dir->d_inode,victim);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: fs/sysfs/inode.c:104:
+ ^I^I^I^Isimple_unlink(dir->d_inode,victim);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: fs/sysfs/inode.c:104:
+ ^I^I^I^Isimple_unlink(dir->d_inode,victim);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: fs/sysfs/inode.c:104:
+ 				simple_unlink(dir->d_inode,victim);
  				                          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283976.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 7 warnings, 1 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283976.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
