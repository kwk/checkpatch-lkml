CHECK:MACRO_ARG_REUSE: Macro argument reuse '_x' - possible side-effects?
#117: FILE: drivers/serial/ioc4_serial.c:517:
+#define PORT_IS_ACTIVE(_x, _y)	((_x->ip_flags & PORT_ACTIVE) \
+					&& (_x->ip_port == _y))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_x' may be better as '(_x)' to avoid precedence issues
#117: FILE: drivers/serial/ioc4_serial.c:517:
+#define PORT_IS_ACTIVE(_x, _y)	((_x->ip_flags & PORT_ACTIVE) \
+					&& (_x->ip_port == _y))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_y' may be better as '(_y)' to avoid precedence issues
#117: FILE: drivers/serial/ioc4_serial.c:517:
+#define PORT_IS_ACTIVE(_x, _y)	((_x->ip_flags & PORT_ACTIVE) \
+					&& (_x->ip_port == _y))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#118: FILE: drivers/serial/ioc4_serial.c:518:
+#define PORT_IS_ACTIVE(_x, _y)	((_x->ip_flags & PORT_ACTIVE) \
+					&& (_x->ip_port == _y))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#151: FILE: drivers/serial/ioc4_serial.c:745:
+						port->ip_port
+						      = port->ip_all_ports[jj];

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: drivers/serial/ioc4_serial.c:1540:
+static inline int set_mcr(struct uart_port *the_port,
 		int mask1, int mask2)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#492: FILE: drivers/serial/ioc4_serial.c:2617:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: drivers/serial/ioc4_serial.c:2641:
+					uart_remove_one_port(&ioc4_uart_rs422,
+							the_port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/serial/ioc4_serial.c:2646:
+					uart_remove_one_port(&ioc4_uart_rs232,
+							the_port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/serial/ioc4_serial.c:2654:
+			pci_free_consistent(port->ip_pdev,
+					TOTAL_RING_BUF_SIZE,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#552: FILE: drivers/serial/ioc4_serial.c:2676:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: drivers/serial/ioc4_serial.c:2713:
+		DPRINT_CONFIG(("%s: attach the_port 0x%p / port 0x%p : type %s\n",
 				__FUNCTION__, (void *)the_port,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*control)...) over kmalloc(sizeof(struct ioc4_control)...)
#630: FILE: drivers/serial/ioc4_serial.c:2781:
+	control = kmalloc(sizeof(struct ioc4_control), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#642: FILE: drivers/serial/ioc4_serial.c:2839:
+	if ((ret = ioc4_serial_core_attach(idd->idd_pdev, PROTO_RS232)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#645: FILE: drivers/serial/ioc4_serial.c:2842:
+	if ((ret = ioc4_serial_core_attach(idd->idd_pdev, PROTO_RS422)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#716: FILE: drivers/serial/ioc4_serial.c:2879:
+	if ((ret = uart_register_driver(&ioc4_uart_rs232)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#717: FILE: drivers/serial/ioc4_serial.c:2880:
+		printk(KERN_WARNING

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#719: FILE: drivers/serial/ioc4_serial.c:2882:
+			__FUNCTION__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#722: FILE: drivers/serial/ioc4_serial.c:2885:
+	if ((ret = uart_register_driver(&ioc4_uart_rs422)) < 0) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#730: FILE: drivers/serial/ioc4_serial.c:2896:
 static void __devexit ioc4_serial_exit(void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093732.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 3 warnings, 13 checks, 658 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093732.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
