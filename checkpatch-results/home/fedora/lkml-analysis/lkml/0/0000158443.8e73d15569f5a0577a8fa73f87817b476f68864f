WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#64: FILE: fs/autofs/symlink.c:16:
+static void *autofs_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                          ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#82: FILE: fs/cifs/cifsfs.h:86:
+extern void *cifs_follow_link(struct dentry *direntry, struct nameidata *nd);
                                                                          ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: fs/cifs/cifsfs.h:86:
+extern void *cifs_follow_link(struct dentry *direntry, struct nameidata *nd);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#83: FILE: fs/cifs/cifsfs.h:87:
+extern void cifs_put_link(struct dentry *direntry, struct nameidata *nd, void *);
                                                                      ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: fs/cifs/cifsfs.h:87:
+extern void cifs_put_link(struct dentry *direntry, struct nameidata *nd, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#83: FILE: fs/cifs/cifsfs.h:87:
+extern void cifs_put_link(struct dentry *direntry, struct nameidata *nd, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#113: FILE: fs/cifs/link.c:333:
+void cifs_put_link(struct dentry *direntry, struct nameidata *nd, void *cookie)
                                                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#125: FILE: fs/ext2/symlink.c:24:
+static void *ext2_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#142: FILE: fs/ext3/symlink.c:26:
+static void * ext3_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                         ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: fs/ext3/symlink.c:26:
+static void * ext3_follow_link(struct dentry *dentry, struct nameidata *nd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#168: FILE: fs/namei.c:512:
+	cookie = dentry->d_inode->i_op->follow_link(dentry, nd);
 	                                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#177: FILE: fs/namei.c:520:
+			dentry->d_inode->i_op->put_link(dentry, nd, cookie);
 			                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#192: FILE: fs/namei.c:2353:
+	cookie = dentry->d_inode->i_op->follow_link(dentry, &nd);
 	                                                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#194: FILE: fs/namei.c:2355:
+		int res = vfs_readlink(dentry, buffer, buflen, nd_get_link(&nd));
 		                                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#197: FILE: fs/namei.c:2357:
+			dentry->d_inode->i_op->put_link(dentry, &nd, cookie);
 			                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#210: FILE: fs/namei.c:2403:
+void *page_follow_link_light(struct dentry *dentry, struct nameidata *nd)
                                                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#220: FILE: fs/namei.c:2410:
+void page_put_link(struct dentry *dentry, struct nameidata *nd, void *cookie)
                                                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#272: FILE: fs/nfs/symlink.c:51:
+static void *nfs_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#288: FILE: fs/nfs/symlink.c:68:
+	nd_set_link(nd, kmap(page));
 	            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#300: FILE: fs/nfs/symlink.c:78:
+static void nfs_put_link(struct dentry *dentry, struct nameidata *nd, void *cookie)
                                                                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#323: FILE: fs/sysfs/symlink.c:154:
+static void *sysfs_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#335: FILE: fs/sysfs/symlink.c:164:
+static void sysfs_put_link(struct dentry *dentry, struct nameidata *nd, void *cookie)
                                                                     ^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#348: FILE: include/linux/fs.h:996:
+	void * (*follow_link) (struct dentry *, struct nameidata *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#348: FILE: include/linux/fs.h:996:
+	void * (*follow_link) (struct dentry *, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#348: FILE: include/linux/fs.h:996:
+	void * (*follow_link) (struct dentry *, struct nameidata *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#349: FILE: include/linux/fs.h:997:
+	void (*put_link) (struct dentry *, struct nameidata *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#349: FILE: include/linux/fs.h:997:
+	void (*put_link) (struct dentry *, struct nameidata *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#349: FILE: include/linux/fs.h:997:
+	void (*put_link) (struct dentry *, struct nameidata *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#349: FILE: include/linux/fs.h:997:
+	void (*put_link) (struct dentry *, struct nameidata *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: include/linux/fs.h:1605:
+extern void *page_follow_link_light(struct dentry *, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#359: FILE: include/linux/fs.h:1605:
+extern void *page_follow_link_light(struct dentry *, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#359: FILE: include/linux/fs.h:1605:
+extern void *page_follow_link_light(struct dentry *, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#360: FILE: include/linux/fs.h:1606:
+extern void page_put_link(struct dentry *, struct nameidata *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#360: FILE: include/linux/fs.h:1606:
+extern void page_put_link(struct dentry *, struct nameidata *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#360: FILE: include/linux/fs.h:1606:
+extern void page_put_link(struct dentry *, struct nameidata *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#360: FILE: include/linux/fs.h:1606:
+extern void page_put_link(struct dentry *, struct nameidata *, void *);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#372: FILE: mm/shmem.c:1776:
+static void *shmem_follow_link_inline(struct dentry *dentry, struct nameidata *nd)
                                                                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#380: FILE: mm/shmem.c:1782:
+static void *shmem_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#390: FILE: mm/shmem.c:1790:
+static void shmem_put_link(struct dentry *dentry, struct nameidata *nd, void *cookie)
                                                                     ^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 34 warnings, 4 checks, 303 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
