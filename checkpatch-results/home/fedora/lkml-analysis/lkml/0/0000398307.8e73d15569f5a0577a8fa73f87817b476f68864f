WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> (there are some architectures which use 'retry' in nonatomic's place) and 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#61: FILE: include/linux/smp.h:59:
+extern int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/linux/smp.h:59:
+extern int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: include/linux/smp.h:60:
+                              int wait, unsigned long mask);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: include/linux/smp.h:60:
+extern int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,
+                              int wait, unsigned long mask);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: include/linux/smp.h:60:
+                              int wait, unsigned long mask);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: include/linux/smp.h:105:
+#define smp_call_function_on_cpu(func,info,retry,wait) ({ 0; })
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: include/linux/smp.h:105:
+#define smp_call_function_on_cpu(func,info,retry,wait) ({ 0; })
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: include/linux/smp.h:105:
+#define smp_call_function_on_cpu(func,info,retry,wait) ({ 0; })
                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: arch/i386/kernel/smp.c:556:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#103: FILE: arch/i386/kernel/smp.c:564:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: arch/i386/kernel/smp.c:565:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,
+			int wait, unsigned long mask)

WARNING:MEMORY_BARRIER: memory barrier without comment
#127: FILE: arch/i386/kernel/smp.c:588:
+	wmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/ia64/kernel/smp.c:240:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: arch/ia64/kernel/smp.c:249:
+smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#206: FILE: arch/ia64/kernel/smp.c:272:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: arch/ia64/kernel/smp.c:291:
+int smp_call_function_single (int cpuid, void (*func) (void *info), void *info,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: arch/mips/kernel/smp.c:235:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: arch/mips/kernel/smp.c:243:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#261: FILE: arch/mips/kernel/smp.c:243:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry, 

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#278: FILE: arch/mips/kernel/smp.c:260:
+	for (i = 0; i < NR_CPUS; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#285: FILE: arch/mips/kernel/smp.c:267:
+		while(atomic_read(&smp_fn_call.finished) != num_cpus) {}

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#285: FILE: arch/mips/kernel/smp.c:267:
+		while(atomic_read(&smp_fn_call.finished) != num_cpus) {}

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#285: FILE: arch/mips/kernel/smp.c:267:
+		while(atomic_read(&smp_fn_call.finished) != num_cpus) {}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: arch/parisc/kernel/smp.c:382:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#322: FILE: arch/parisc/kernel/smp.c:389:
+smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry, int wait,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: arch/parisc/kernel/smp.c:396:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: arch/parisc/kernel/smp.c:410:
+		spin_lock (&lock);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#347: FILE: arch/parisc/kernel/smp.c:414:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#347: FILE: arch/parisc/kernel/smp.c:414:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: arch/parisc/kernel/smp.c:415:
+		spin_lock (&lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#350: FILE: arch/parisc/kernel/smp.c:417:
+			spin_unlock (&lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#357: FILE: arch/parisc/kernel/smp.c:424:
+	spin_unlock (&lock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: arch/parisc/kernel/smp.c:425:
+^I$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#360: FILE: arch/parisc/kernel/smp.c:427:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#367: FILE: arch/parisc/kernel/smp.c:434:
+	while ( (atomic_read (&data.unstarted_count) > 0) &&

ERROR:SPACING: space prohibited after that open parenthesis '('
#367: FILE: arch/parisc/kernel/smp.c:434:
+	while ( (atomic_read (&data.unstarted_count) > 0) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: arch/parisc/kernel/smp.c:435:
+	while ( (atomic_read (&data.unstarted_count) > 0) &&
+		time_before (jiffies, timeout) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#368: FILE: arch/parisc/kernel/smp.c:435:
+		time_before (jiffies, timeout) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#368: FILE: arch/parisc/kernel/smp.c:435:
+		time_before (jiffies, timeout) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: arch/parisc/kernel/smp.c:436:
+		barrier ();

WARNING:MEMORY_BARRIER: memory barrier without comment
#373: FILE: arch/parisc/kernel/smp.c:440:
+	mb();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#375: FILE: arch/parisc/kernel/smp.c:442:
+	if (atomic_read (&data.unstarted_count) > 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&data.unstarted_count'
#375: FILE: arch/parisc/kernel/smp.c:442:
+	if (atomic_read (&data.unstarted_count) > 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#376: FILE: arch/parisc/kernel/smp.c:443:
+		printk(KERN_CRIT "SMP CALL FUNCTION TIMED OUT! (cpu=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: arch/parisc/kernel/smp.c:444:
+		printk(KERN_CRIT "SMP CALL FUNCTION TIMED OUT! (cpu=%d)\n",
+		      cpu);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#382: FILE: arch/parisc/kernel/smp.c:449:
+	while (wait && atomic_read (&data.unfinished_count) > 0)
+			barrier ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#382: FILE: arch/parisc/kernel/smp.c:449:
+	while (wait && atomic_read (&data.unfinished_count) > 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#383: FILE: arch/parisc/kernel/smp.c:450:
+			barrier ();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: arch/ppc/kernel/smp.c:277:
+ * $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: arch/ppc/kernel/smp.c:286:
+static int smp_call_function_on_cpu(void (*func) (void *info), void *info,
+			       int retry, int wait, unsigned long mask)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#427: FILE: arch/ppc/kernel/smp.c:293:
+	if (num_cpus == 0 || )

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#441: FILE: arch/ppc/kernel/smp.c:307:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#450: FILE: arch/ppc/kernel/smp.c:316:
+			printk("smp_call_function on cpu %d: other cpus not responding (%d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#462: FILE: arch/ppc/kernel/smp.c:328:
+				printk("smp_call_function on cpu %d: other cpus not finishing (%d/%d)\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#463: FILE: arch/ppc/kernel/smp.c:329:
+				       cpu, atomic_read(&data.finished), atomic_read(&data.started));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: arch/ppc64/kernel/smp.c:539:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#508: FILE: arch/ppc64/kernel/smp.c:547:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: arch/ppc64/kernel/smp.c:548:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,
+		       int wait, unsigned long mask)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: arch/ppc64/kernel/smp.c:549:
+{ $

WARNING:MEMORY_BARRIER: memory barrier without comment
#533: FILE: arch/ppc64/kernel/smp.c:572:
+	wmb();

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#535: FILE: arch/ppc64/kernel/smp.c:574:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#547: FILE: arch/ppc64/kernel/smp.c:586:
+			printk("smp_call_function on cpu %d: other cpus not "

WARNING:SPLIT_STRING: quoted string split across lines
#548: FILE: arch/ppc64/kernel/smp.c:587:
+			printk("smp_call_function on cpu %d: other cpus not "
+			       "responding (%d)\n", cpu,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#561: FILE: arch/ppc64/kernel/smp.c:600:
+				printk("smp_call_function on cpu %d: other "

WARNING:SPLIT_STRING: quoted string split across lines
#562: FILE: arch/ppc64/kernel/smp.c:601:
+				printk("smp_call_function on cpu %d: other "
+				       "cpus not finishing (%d/%d)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: arch/s390/kernel/smp.c:159:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: arch/s390/kernel/smp.c:167:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: arch/s390/kernel/smp.c:168:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,
+			int wait, unsigned long mask)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#636: FILE: arch/s390/kernel/smp.c:193:
+	for (i = 0; i < NR_CPUS; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: arch/sparc64/kernel/smp.c:545:
+ * $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: arch/sparc64/kernel/smp.c:554:
+int smp_call_function_on_cpu(void (*func)(void *info), void *info,
+		      int retry, int wait, unsigned long mask)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: arch/sparc64/kernel/smp.c:575:
+^I/* $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#722: FILE: arch/sparc64/kernel/smp.c:592:
+	printk("XCALL: Remote cpus not responding, ncpus=%d finished=%d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: arch/um/kernel/smp.c:257:
+int smp_call_function_on_cpu(void (*_func)(void *info), void *_info, int retry, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: arch/um/kernel/smp.c:258:
+int smp_call_function_on_cpu(void (*_func)(void *info), void *_info, int retry, 
+		      int wait, unsigned long mask)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: arch/um/kernel/smp.c:270:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#763: FILE: arch/um/kernel/smp.c:277:
+	for (i=0;i<NR_CPUS;i++)
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#763: FILE: arch/um/kernel/smp.c:277:
+	for (i=0;i<NR_CPUS;i++)
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#763: FILE: arch/um/kernel/smp.c:277:
+	for (i=0;i<NR_CPUS;i++)
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#763: FILE: arch/um/kernel/smp.c:277:
+	for (i=0;i<NR_CPUS;i++)
 	                  ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#763: FILE: arch/um/kernel/smp.c:277:
+	for (i=0;i<NR_CPUS;i++)

ERROR:SPACING: space required before the open parenthesis '('
#764: FILE: arch/um/kernel/smp.c:278:
+		if(cpu_online(i) && ((1UL << i) & mask))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: arch/x86_64/kernel/smp.c:442:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#809: FILE: arch/x86_64/kernel/smp.c:450:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#810: FILE: arch/x86_64/kernel/smp.c:451:
+int smp_call_function_on_cpu (void (*func) (void *info), void *info, int retry,
+			int wait, unsigned long mask)

WARNING:MEMORY_BARRIER: memory barrier without comment
#833: FILE: arch/x86_64/kernel/smp.c:474:
+	wmb();

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398307.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 43 warnings, 13 checks, 715 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398307.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
