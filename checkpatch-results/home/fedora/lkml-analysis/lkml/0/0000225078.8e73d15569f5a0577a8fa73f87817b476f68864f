WARNING:TYPO_SPELLING: 'accessable' may be misspelled - perhaps 'accessible'?
#31: 
AoE devices on the LAN are accessable as block devices and can be used
                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#122: FILE: MAINTAINERS:334:
+P:	Ed L. Cashin
+M:	ecashin@coraid.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#124: FILE: MAINTAINERS:336:
+W:	http://www.coraid.com/support/linux
+S:	Supported

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#157: FILE: drivers/block/aoe/Kconfig:4:
+config ATA_OVER_ETH
+	tristate "ATA over Ethernet support"
+	depends on NET
+	default m
+	help
+	This driver provides Support for ATA over Ethernet block
+	devices like the Coraid EtherDrive (R) Storage Blade.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#178: FILE: drivers/block/aoe/all.h:1:
+#include <linux/ctype.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#197: FILE: drivers/block/aoe/all.h:20:
+#include <asm/uaccess.h>

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#205: FILE: drivers/block/aoe/all.h:28:
+#define nelem(A) (sizeof (A) / sizeof (A)[0])

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#205: FILE: drivers/block/aoe/all.h:28:
+#define nelem(A) (sizeof (A) / sizeof (A)[0])

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#218: FILE: drivers/block/aoe/all.h:41:
+	DEVFL_TKILL = (1<<1),	/* flag for timer to know when to kill self */
 	                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#219: FILE: drivers/block/aoe/all.h:42:
+	DEVFL_EXT = (1<<2),	/* device accepts lba48 commands */
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#220: FILE: drivers/block/aoe/all.h:43:
+	DEVFL_CLOSEWAIT = (1<<3),	/* device is waiting for all closes to revalidate */
 	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#221: FILE: drivers/block/aoe/all.h:44:
+	DEVFL_WC_UPDATE = (1<<4),	/* this device needs to update write cache status */
 	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#222: FILE: drivers/block/aoe/all.h:45:
+	DEVFL_WORKON = (1<<4),
 	                 ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#231: FILE: drivers/block/aoe/all.h:54:
+typedef struct Buf Buf;

CHECK:CAMELCASE: Avoid CamelCase: <Buf>
#231: FILE: drivers/block/aoe/all.h:54:
+typedef struct Buf Buf;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:NEW_TYPEDEFS: do not add new typedefs
#244: FILE: drivers/block/aoe/all.h:67:
+typedef struct Bufq Bufq;

CHECK:CAMELCASE: Avoid CamelCase: <Bufq>
#244: FILE: drivers/block/aoe/all.h:67:
+typedef struct Bufq Bufq;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#249: FILE: drivers/block/aoe/all.h:72:
+typedef struct Frame Frame;

CHECK:CAMELCASE: Avoid CamelCase: <Frame>
#249: FILE: drivers/block/aoe/all.h:72:
+typedef struct Frame Frame;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#257: FILE: drivers/block/aoe/all.h:80:
+	char data[sizeof (Aoehdr) + sizeof (Aoeahdr)];	/* largest possible */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#257: FILE: drivers/block/aoe/all.h:80:
+	char data[sizeof (Aoehdr) + sizeof (Aoeahdr)];	/* largest possible */

CHECK:CAMELCASE: Avoid CamelCase: <Aoehdr>
#257: FILE: drivers/block/aoe/all.h:80:
+	char data[sizeof (Aoehdr) + sizeof (Aoeahdr)];	/* largest possible */

CHECK:CAMELCASE: Avoid CamelCase: <Aoeahdr>
#257: FILE: drivers/block/aoe/all.h:80:
+	char data[sizeof (Aoehdr) + sizeof (Aoeahdr)];	/* largest possible */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#260: FILE: drivers/block/aoe/all.h:83:
+typedef struct Aoedev Aoedev;

CHECK:CAMELCASE: Avoid CamelCase: <Aoedev>
#260: FILE: drivers/block/aoe/all.h:83:
+typedef struct Aoedev Aoedev;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/block/aoe/all.h:97:
+^Istruct hd_geometry geo; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#277: FILE: drivers/block/aoe/all.h:100:
+	spinlock_t lock;

WARNING:REPEATED_WORD: Possible repeated word: 'Bufq'
#280: FILE: drivers/block/aoe/all.h:103:
+	Bufq bufq;		/* queue of bh work */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#289: FILE: drivers/block/aoe/all.h:112:
+int aoeblk_make_request(request_queue_t *, struct bio *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#289: FILE: drivers/block/aoe/all.h:112:
+int aoeblk_make_request(request_queue_t *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#290: FILE: drivers/block/aoe/all.h:113:
+void aoeblk_gdalloc(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#294: FILE: drivers/block/aoe/all.h:117:
+void aoechr_error(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#295: FILE: drivers/block/aoe/all.h:118:
+void aoechr_hdump(char *, int len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ushort' should also have an identifier name
#298: FILE: drivers/block/aoe/all.h:121:
+void aoecmd_cfg(ushort, uchar);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar' should also have an identifier name
#298: FILE: drivers/block/aoe/all.h:121:
+void aoecmd_cfg(ushort, uchar);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#299: FILE: drivers/block/aoe/all.h:122:
+void aoecmd_ata_rsp(struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#300: FILE: drivers/block/aoe/all.h:123:
+void aoecmd_cfg_rsp(struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#304: FILE: drivers/block/aoe/all.h:127:
+int aoedev_stat(char *, int, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#304: FILE: drivers/block/aoe/all.h:127:
+int aoedev_stat(char *, int, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#304: FILE: drivers/block/aoe/all.h:127:
+int aoedev_stat(char *, int, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar *' should also have an identifier name
#305: FILE: drivers/block/aoe/all.h:128:
+Aoedev *aoedev_bymac(uchar *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ulong' should also have an identifier name
#306: FILE: drivers/block/aoe/all.h:129:
+Aoedev *aoedev_byminor(ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ulong' should also have an identifier name
#308: FILE: drivers/block/aoe/all.h:131:
+Aoedev *aoedev_set(ulong, uchar *, struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar *' should also have an identifier name
#308: FILE: drivers/block/aoe/all.h:131:
+Aoedev *aoedev_set(ulong, uchar *, struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#308: FILE: drivers/block/aoe/all.h:131:
+Aoedev *aoedev_set(ulong, uchar *, struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ulong' should also have an identifier name
#308: FILE: drivers/block/aoe/all.h:131:
+Aoedev *aoedev_set(ulong, uchar *, struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Aoedev *' should also have an identifier name
#310: FILE: drivers/block/aoe/all.h:133:
+void aoedev_freedev(Aoedev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#314: FILE: drivers/block/aoe/all.h:137:
+void aoenet_xmit(struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Bufq *' should also have an identifier name
#318: FILE: drivers/block/aoe/all.h:141:
+void bufq_enqueue(Bufq *, Buf *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Buf *' should also have an identifier name
#318: FILE: drivers/block/aoe/all.h:141:
+void bufq_enqueue(Bufq *, Buf *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Bufq *' should also have an identifier name
#319: FILE: drivers/block/aoe/all.h:142:
+Buf *bufq_dequeue(Bufq *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#320: FILE: drivers/block/aoe/all.h:143:
+struct sk_buff *new_skb(struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ulong' should also have an identifier name
#320: FILE: drivers/block/aoe/all.h:143:
+struct sk_buff *new_skb(struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ulong' should also have an identifier name
#322: FILE: drivers/block/aoe/all.h:145:
+void *kallocz(ulong, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ulong' should also have an identifier name
#322: FILE: drivers/block/aoe/all.h:145:
+void *kallocz(ulong, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar *' should also have an identifier name
#323: FILE: drivers/block/aoe/all.h:146:
+u16 nhget16(uchar *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar *' should also have an identifier name
#324: FILE: drivers/block/aoe/all.h:147:
+u32 nhget32(uchar *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar *' should also have an identifier name
#325: FILE: drivers/block/aoe/all.h:148:
+void hnput16(uchar *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#325: FILE: drivers/block/aoe/all.h:148:
+void hnput16(uchar *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar *' should also have an identifier name
#326: FILE: drivers/block/aoe/all.h:149:
+void hnput32(uchar *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#326: FILE: drivers/block/aoe/all.h:149:
+void hnput32(uchar *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar *' should also have an identifier name
#327: FILE: drivers/block/aoe/all.h:150:
+u16 lhget16(uchar *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar *' should also have an identifier name
#328: FILE: drivers/block/aoe/all.h:151:
+u32 lhget32(uchar *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uchar *' should also have an identifier name
#329: FILE: drivers/block/aoe/all.h:152:
+u64 lhget64(uchar *);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#331: FILE: drivers/block/aoe/all.h:154:
+enum { FQUOTE = (1<<0), FEMPTY = (1<<1) };
                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#331: FILE: drivers/block/aoe/all.h:154:
+enum { FQUOTE = (1<<0), FEMPTY = (1<<1) };
                                    ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#332: FILE: drivers/block/aoe/all.h:155:
+int getfields(char *, char **, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#332: FILE: drivers/block/aoe/all.h:155:
+int getfields(char *, char **, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#332: FILE: drivers/block/aoe/all.h:155:
+int getfields(char *, char **, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#332: FILE: drivers/block/aoe/all.h:155:
+int getfields(char *, char **, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#332: FILE: drivers/block/aoe/all.h:155:
+int getfields(char *, char **, int, char *, int);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#338: FILE: drivers/block/aoe/aoeblk.c:1:
+/*

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#346: FILE: drivers/block/aoe/aoeblk.c:9:
+aoeblk_open(struct inode *inode, struct file *filp)
                                               ^^^^

CHECK:SPACING: No space is necessary after a cast
#351: FILE: drivers/block/aoe/aoeblk.c:14:
+	d = (Aoedev *) inode->i_bdev->bd_disk->private_data;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#363: FILE: drivers/block/aoe/aoeblk.c:26:
+aoeblk_release(struct inode *inode, struct file *filp)
                                                  ^^^^

CHECK:SPACING: No space is necessary after a cast
#368: FILE: drivers/block/aoe/aoeblk.c:31:
+	d = (Aoedev *) inode->i_bdev->bd_disk->private_data;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#371: FILE: drivers/block/aoe/aoeblk.c:34:
+	if (--d->nopen == 0)
+	if ((d->flags & DEVFL_CLOSEWAIT)) {

WARNING:SIZEOF_PARENTHESIS: sizeof *buf should be sizeof(*buf)
#393: FILE: drivers/block/aoe/aoeblk.c:56:
+	buf = kallocz(sizeof *buf, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#395: FILE: drivers/block/aoe/aoeblk.c:58:
+		printk(KERN_INFO "aoe: aoeblk_make_request: buf allocation "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_make_request', this function's name, in a string
#395: FILE: drivers/block/aoe/aoeblk.c:58:
+		printk(KERN_INFO "aoe: aoeblk_make_request: buf allocation "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#396: FILE: drivers/block/aoe/aoeblk.c:59:
+		printk(KERN_INFO "aoe: aoeblk_make_request: buf allocation "
+			"failure\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#407: FILE: drivers/block/aoe/aoeblk.c:70:
+	d = (Aoedev *) bio->bi_bdev->bd_disk->private_data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#412: FILE: drivers/block/aoe/aoeblk.c:75:
+		printk(KERN_INFO "aoe: aoeblk_make_request: device %ld.%ld is not up\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_make_request', this function's name, in a string
#412: FILE: drivers/block/aoe/aoeblk.c:75:
+		printk(KERN_INFO "aoe: aoeblk_make_request: device %ld.%ld is not up\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/block/aoe/aoeblk.c:76:
+		printk(KERN_INFO "aoe: aoeblk_make_request: device %ld.%ld is not up\n",
+			d->aoemajor, d->aoeminor);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#433: FILE: drivers/block/aoe/aoeblk.c:96:
+aoeblk_ioctl(struct inode *inode, struct file *filp, uint cmd, ulong arg)
                                                ^^^^

CHECK:SPACING: No space is necessary after a cast
#440: FILE: drivers/block/aoe/aoeblk.c:103:
+	d = (Aoedev *) inode->i_bdev->bd_disk->private_data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#442: FILE: drivers/block/aoe/aoeblk.c:105:
+		printk(KERN_ERR "aoe: aoeblk_ioctl: disk not up\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_ioctl', this function's name, in a string
#442: FILE: drivers/block/aoe/aoeblk.c:105:
+		printk(KERN_ERR "aoe: aoeblk_ioctl: disk not up\n");

CHECK:SPACING: No space is necessary after a cast
#448: FILE: drivers/block/aoe/aoeblk.c:111:
+		if (!copy_to_user((void *) arg, &d->geo, sizeof d->geo))

WARNING:SIZEOF_PARENTHESIS: sizeof d->geo should be sizeof(d->geo)
#448: FILE: drivers/block/aoe/aoeblk.c:111:
+		if (!copy_to_user((void *) arg, &d->geo, sizeof d->geo))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#452: FILE: drivers/block/aoe/aoeblk.c:115:
+	printk(KERN_INFO "aoe: aoeblk_ioctl: unknown ioctl %d\n", cmd);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_ioctl', this function's name, in a string
#452: FILE: drivers/block/aoe/aoeblk.c:115:
+	printk(KERN_INFO "aoe: aoeblk_ioctl: unknown ioctl %d\n", cmd);

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: drivers/block/aoe/aoeblk.c:119:
+                * e.g., BLKFLSBUF in ioctl.c:blkdev_ioctl.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#456: FILE: drivers/block/aoe/aoeblk.c:119:
+	 * when everyone's running kernels that support it.  See,
+                * e.g., BLKFLSBUF in ioctl.c:blkdev_ioctl.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: drivers/block/aoe/aoeblk.c:120:
+                */$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#460: FILE: drivers/block/aoe/aoeblk.c:123:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#462: FILE: drivers/block/aoe/aoeblk.c:125:
+static struct block_device_operations aoe_bdops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#463: FILE: drivers/block/aoe/aoeblk.c:126:
+	open:			aoeblk_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#464: FILE: drivers/block/aoe/aoeblk.c:127:
+	release:		aoeblk_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#464: FILE: drivers/block/aoe/aoeblk.c:127:
+	release:		aoeblk_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#465: FILE: drivers/block/aoe/aoeblk.c:128:
+	ioctl:			aoeblk_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#465: FILE: drivers/block/aoe/aoeblk.c:128:
+	ioctl:			aoeblk_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#466: FILE: drivers/block/aoe/aoeblk.c:129:
+	owner:			THIS_MODULE,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#466: FILE: drivers/block/aoe/aoeblk.c:129:
+	owner:			THIS_MODULE,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#483: FILE: drivers/block/aoe/aoeblk.c:146:
+		printk(KERN_CRIT "aoe: aoeblk_gdalloc: cannot allocate disk "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_gdalloc', this function's name, in a string
#483: FILE: drivers/block/aoe/aoeblk.c:146:
+		printk(KERN_CRIT "aoe: aoeblk_gdalloc: cannot allocate disk "

WARNING:SPLIT_STRING: quoted string split across lines
#484: FILE: drivers/block/aoe/aoeblk.c:147:
+		printk(KERN_CRIT "aoe: aoeblk_gdalloc: cannot allocate disk "
+			"structure for %ld.%ld\n", d->aoemajor, d->aoeminor);

WARNING:SIZEOF_PARENTHESIS: sizeof gd->disk_name should be sizeof(gd->disk_name)
#496: FILE: drivers/block/aoe/aoeblk.c:159:
+	snprintf(gd->disk_name, sizeof gd->disk_name, "etherd/e%ld.%ld",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: drivers/block/aoe/aoeblk.c:160:
+	snprintf(gd->disk_name, sizeof gd->disk_name, "etherd/e%ld.%ld",
+		d->aoemajor, d->aoeminor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#508: FILE: drivers/block/aoe/aoeblk.c:171:
+	printk(KERN_INFO "aoe: %012llx e%lu.%lu v%04x has %llu "

WARNING:SPLIT_STRING: quoted string split across lines
#509: FILE: drivers/block/aoe/aoeblk.c:172:
+	printk(KERN_INFO "aoe: %012llx e%lu.%lu v%04x has %llu "
+		"sectors\n", mac_addr(d->addr), d->aoemajor, d->aoeminor,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#526: FILE: drivers/block/aoe/aoeblk.c:189:
+		printk(KERN_ERR "aoe: aoeblk_init: can't register major\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_init', this function's name, in a string
#526: FILE: drivers/block/aoe/aoeblk.c:189:
+		printk(KERN_ERR "aoe: aoeblk_init: can't register major\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#536: FILE: drivers/block/aoe/aoechr.c:1:
+/*

WARNING:NEW_TYPEDEFS: do not add new typedefs
#552: FILE: drivers/block/aoe/aoechr.c:17:
+typedef struct {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#554: FILE: drivers/block/aoe/aoechr.c:19:
+	int (*f)(int, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#554: FILE: drivers/block/aoe/aoechr.c:19:
+	int (*f)(int, char **);

CHECK:CAMELCASE: Avoid CamelCase: <Cmd>
#555: FILE: drivers/block/aoe/aoechr.c:20:
+} Cmd;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#559: FILE: drivers/block/aoe/aoechr.c:24:
+typedef struct ErrMsg ErrMsg;

CHECK:CAMELCASE: Avoid CamelCase: <ErrMsg>
#559: FILE: drivers/block/aoe/aoechr.c:24:
+typedef struct ErrMsg ErrMsg;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#583: FILE: drivers/block/aoe/aoechr.c:48:
+		printk(KERN_CRIT

WARNING:TYPO_SPELLING: 'inteface' may be misspelled - perhaps 'interface'?
#584: FILE: drivers/block/aoe/aoechr.c:49:
+		       "%s: could not set inteface list: %s\n",
 		                          ^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#585: FILE: drivers/block/aoe/aoechr.c:50:
+		       __FUNCTION__, "too many interfaces");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#626: FILE: drivers/block/aoe/aoechr.c:91:
+		printk(KERN_CRIT "aoe: aoechr_error: allocation failure, len=%ld\n", n);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_error', this function's name, in a string
#626: FILE: drivers/block/aoe/aoechr.c:91:
+		printk(KERN_CRIT "aoe: aoechr_error: allocation failure, len=%ld\n", n);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#659: FILE: drivers/block/aoe/aoechr.c:124:
+		printk(KERN_INFO

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#659: FILE: drivers/block/aoe/aoechr.c:124:
+	if (!fbuf) {
+		printk(KERN_INFO

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#661: FILE: drivers/block/aoe/aoechr.c:126:
+		       __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: drivers/block/aoe/aoechr.c:129:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#670: FILE: drivers/block/aoe/aoechr.c:135:
+		for (e=p+linelen; p<e; p++)
 		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#670: FILE: drivers/block/aoe/aoechr.c:135:
+		for (e=p+linelen; p<e; p++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#670: FILE: drivers/block/aoe/aoechr.c:135:
+		for (e=p+linelen; p<e; p++)
 		                   ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#680: FILE: drivers/block/aoe/aoechr.c:145:
+aoechr_write(struct file *filp, const char *buf, size_t cnt, loff_t *offp)
                           ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#683: FILE: drivers/block/aoe/aoechr.c:148:
+	char *str = kallocz(cnt+1, GFP_KERNEL);
 	                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#688: FILE: drivers/block/aoe/aoechr.c:153:
+		printk(KERN_CRIT "aoe: aoechr_write: cannot allocate memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_write', this function's name, in a string
#688: FILE: drivers/block/aoe/aoechr.c:153:
+		printk(KERN_CRIT "aoe: aoechr_write: cannot allocate memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#693: FILE: drivers/block/aoe/aoechr.c:158:
+		printk(KERN_INFO "aoe: aoechr_write: copy from user failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_write', this function's name, in a string
#693: FILE: drivers/block/aoe/aoechr.c:158:
+		printk(KERN_INFO "aoe: aoechr_write: copy from user failed\n");

CHECK:SPACING: No space is necessary after a cast
#697: FILE: drivers/block/aoe/aoechr.c:162:
+	switch ((unsigned long) filp->private_data) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#699: FILE: drivers/block/aoe/aoechr.c:164:
+		printk(KERN_INFO "aoe: aoechr_write: can't write to that file.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_write', this function's name, in a string
#699: FILE: drivers/block/aoe/aoechr.c:164:
+		printk(KERN_INFO "aoe: aoechr_write: can't write to that file.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: drivers/block/aoe/aoechr.c:169:
+^I^Iif (!argc) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#705: FILE: drivers/block/aoe/aoechr.c:170:
+			printk(KERN_INFO "aoe: aoechr_write: parse error\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_write', this function's name, in a string
#705: FILE: drivers/block/aoe/aoechr.c:170:
+			printk(KERN_INFO "aoe: aoechr_write: parse error\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#715: FILE: drivers/block/aoe/aoechr.c:180:
+aoechr_open(struct inode *inode, struct file *filp)
                                               ^^^^

CHECK:SPACING: No space is necessary after a cast
#720: FILE: drivers/block/aoe/aoechr.c:185:
+	filp->private_data = (void *) (unsigned long) n;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#732: FILE: drivers/block/aoe/aoechr.c:197:
+aoechr_rel(struct inode *inode, struct file *filp)
                                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#738: FILE: drivers/block/aoe/aoechr.c:203:
+aoechr_read(struct file *filp, char *buf, size_t cnt, loff_t *off)
                          ^^^^

CHECK:SPACING: No space is necessary after a cast
#746: FILE: drivers/block/aoe/aoechr.c:211:
+	n = (int) filp->private_data;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#800: FILE: drivers/block/aoe/aoechr.c:265:
+struct file_operations aoe_fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#801: FILE: drivers/block/aoe/aoechr.c:266:
+	write:		aoechr_write,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#802: FILE: drivers/block/aoe/aoechr.c:267:
+^Iread: ^I^Iaoechr_read,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#802: FILE: drivers/block/aoe/aoechr.c:267:
+	read: 		aoechr_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#802: FILE: drivers/block/aoe/aoechr.c:267:
+	read: 		aoechr_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#803: FILE: drivers/block/aoe/aoechr.c:268:
+	open:		aoechr_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#803: FILE: drivers/block/aoe/aoechr.c:268:
+	open:		aoechr_open,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#804: FILE: drivers/block/aoe/aoechr.c:269:
+^Irelease:  ^Iaoechr_rel,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#804: FILE: drivers/block/aoe/aoechr.c:269:
+	release:  	aoechr_rel,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#804: FILE: drivers/block/aoe/aoechr.c:269:
+	release:  	aoechr_rel,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#805: FILE: drivers/block/aoe/aoechr.c:270:
+	owner:		THIS_MODULE,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#805: FILE: drivers/block/aoe/aoechr.c:270:
+	owner:		THIS_MODULE,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: drivers/block/aoe/aoechr.c:279:
+^Iif (n < 0) { $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#815: FILE: drivers/block/aoe/aoechr.c:280:
+		printk(KERN_ERR "aoe: aoechr_init: can't register char device\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_init', this function's name, in a string
#815: FILE: drivers/block/aoe/aoechr.c:280:
+		printk(KERN_ERR "aoe: aoechr_init: can't register char device\n");

WARNING:CONSIDER_COMPLETION: consider using a completion
#818: FILE: drivers/block/aoe/aoechr.c:283:
+	sema_init(&emsgs_sema, 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#833: FILE: drivers/block/aoe/aoecmd.c:1:
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#853: FILE: drivers/block/aoe/aoecmd.c:21:
+		printk(KERN_INFO "aoe: skb_prepare: failure to allocate skb\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'skb_prepare', this function's name, in a string
#853: FILE: drivers/block/aoe/aoecmd.c:21:
+		printk(KERN_INFO "aoe: skb_prepare: failure to allocate skb\n");

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#875: FILE: drivers/block/aoe/aoecmd.c:43:
+	for (; f<e; f++)
 	        ^

WARNING:SIZEOF_PARENTHESIS: sizeof h->src should be sizeof(h->src)
#900: FILE: drivers/block/aoe/aoecmd.c:68:
+	memcpy(h->src, d->ifp->dev_addr, sizeof h->src);

WARNING:SIZEOF_PARENTHESIS: sizeof h->dst should be sizeof(h->dst)
#901: FILE: drivers/block/aoe/aoecmd.c:69:
+	memcpy(h->dst, d->addr, sizeof h->dst);

CHECK:SPACING: No space is necessary after a cast
#933: FILE: drivers/block/aoe/aoecmd.c:101:
+	h = (Aoehdr *) f->data;

CHECK:SPACING: No space is necessary after a cast
#934: FILE: drivers/block/aoe/aoecmd.c:102:
+	ah = (Aoeahdr *) (h+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#934: FILE: drivers/block/aoe/aoecmd.c:102:
+	ah = (Aoeahdr *) (h+1);
 	                   ^

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#935: FILE: drivers/block/aoe/aoecmd.c:103:
+	f->ndata = sizeof *h + sizeof *ah;

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1021: FILE: drivers/block/aoe/aoecmd.c:189:
+	snprintf(buf, sizeof buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1022: FILE: drivers/block/aoe/aoecmd.c:190:
+	snprintf(buf, sizeof buf,
+		"%15s e%ld.%ld oldtag=%08x@%08lx newtag=%08x\n",

CHECK:SPACING: No space is necessary after a cast
#1027: FILE: drivers/block/aoe/aoecmd.c:195:
+	h = (Aoehdr *) f->data;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1045: FILE: drivers/block/aoe/aoecmd.c:213:
+		n += 1<<16;
 		      ^

CHECK:SPACING: No space is necessary after a cast
#1058: FILE: drivers/block/aoe/aoecmd.c:226:
+	d = (Aoedev *) vp;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1073: FILE: drivers/block/aoe/aoecmd.c:241:
+	for (; f<e; f++) {
 	        ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1074: FILE: drivers/block/aoe/aoecmd.c:242:
+		if (f->tag != FREETAG)
+		if (tsince(f->tag) >= timeout) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1108: FILE: drivers/block/aoe/aoecmd.c:276:
+	n = lhget16(id + (83<<1)); /* word 83: command set supported */
 	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1109: FILE: drivers/block/aoe/aoecmd.c:277:
+	n |= lhget16(id + (86<<1)); /* word 86: command set/feature enabled */
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1111: FILE: drivers/block/aoe/aoecmd.c:279:
+	if (n & (1<<10)) {	/* bit 10: LBA 48 */
 	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1114: FILE: drivers/block/aoe/aoecmd.c:282:
+		ssize = lhget64(id + (100<<1));	/* n lba48 sectors */
 		                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1124: FILE: drivers/block/aoe/aoecmd.c:292:
+		ssize = lhget32(id + (60<<1));	/* n lba28 sectors */
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1127: FILE: drivers/block/aoe/aoecmd.c:295:
+		d->geo.cylinders = lhget16(id + (54<<1));
 		                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1128: FILE: drivers/block/aoe/aoecmd.c:296:
+		d->geo.heads = lhget16(id + (55<<1));
 		                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1129: FILE: drivers/block/aoe/aoecmd.c:297:
+		d->geo.sectors = lhget16(id + (56<<1));
 		                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1139: FILE: drivers/block/aoe/aoecmd.c:307:
+		printk(KERN_INFO "aoe: ataid_complete: can't schedule work, it's already on!  "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ataid_complete', this function's name, in a string
#1139: FILE: drivers/block/aoe/aoecmd.c:307:
+		printk(KERN_INFO "aoe: ataid_complete: can't schedule work, it's already on!  "

WARNING:SPLIT_STRING: quoted string split across lines
#1140: FILE: drivers/block/aoe/aoecmd.c:308:
+		printk(KERN_INFO "aoe: ataid_complete: can't schedule work, it's already on!  "
+			"(This really shouldn't happen).\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1176: FILE: drivers/block/aoe/aoecmd.c:344:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1177: FILE: drivers/block/aoe/aoecmd.c:345:
+	hin = (Aoehdr *) skb->mac.raw;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1180: FILE: drivers/block/aoe/aoecmd.c:348:
+		snprintf(ebuf, sizeof ebuf, "aoecmd_ata_rsp: ata response "

WARNING:SIZEOF_PARENTHESIS: sizeof ebuf should be sizeof(ebuf)
#1180: FILE: drivers/block/aoe/aoecmd.c:348:
+		snprintf(ebuf, sizeof ebuf, "aoecmd_ata_rsp: ata response "

WARNING:SPLIT_STRING: quoted string split across lines
#1181: FILE: drivers/block/aoe/aoecmd.c:349:
+		snprintf(ebuf, sizeof ebuf, "aoecmd_ata_rsp: ata response "
+			"for unknown device %d.%d\n", nhget16(hin->major),

WARNING:SIZEOF_PARENTHESIS: sizeof ebuf should be sizeof(ebuf)
#1192: FILE: drivers/block/aoe/aoecmd.c:360:
+		snprintf(ebuf, sizeof ebuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1193: FILE: drivers/block/aoe/aoecmd.c:361:
+		snprintf(ebuf, sizeof ebuf,
+			"%15s e%d.%d    tag=%08x@%08lx\n",

CHECK:SPACING: No space is necessary after a cast
#1204: FILE: drivers/block/aoe/aoecmd.c:372:
+	ahin = (Aoeahdr *) (hin+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1204: FILE: drivers/block/aoe/aoecmd.c:372:
+	ahin = (Aoeahdr *) (hin+1);
 	                       ^

CHECK:SPACING: No space is necessary after a cast
#1205: FILE: drivers/block/aoe/aoecmd.c:373:
+	ahout = (Aoeahdr *) (f->data + sizeof (Aoehdr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1205: FILE: drivers/block/aoe/aoecmd.c:373:
+	ahout = (Aoeahdr *) (f->data + sizeof (Aoehdr));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1209: FILE: drivers/block/aoe/aoecmd.c:377:
+		printk(KERN_CRIT "aoe: aoecmd_ata_rsp: ata error cmd=%2.2Xh "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1209: FILE: drivers/block/aoe/aoecmd.c:377:
+		printk(KERN_CRIT "aoe: aoecmd_ata_rsp: ata error cmd=%2.2Xh "

WARNING:SPLIT_STRING: quoted string split across lines
#1210: FILE: drivers/block/aoe/aoecmd.c:378:
+		printk(KERN_CRIT "aoe: aoecmd_ata_rsp: ata error cmd=%2.2Xh "
+			"stat=%2.2Xh\n", ahout->cmdstat, ahin->cmdstat);

WARNING:SIZEOF_PARENTHESIS: sizeof *hin should be sizeof(*hin)
#1218: FILE: drivers/block/aoe/aoecmd.c:386:
+			if (skb->len - sizeof *hin - sizeof *ahin < n) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1219: FILE: drivers/block/aoe/aoecmd.c:387:
+				printk(KERN_CRIT "aoe: aoecmd_ata_rsp: runt "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1219: FILE: drivers/block/aoe/aoecmd.c:387:
+				printk(KERN_CRIT "aoe: aoecmd_ata_rsp: runt "

WARNING:SPLIT_STRING: quoted string split across lines
#1220: FILE: drivers/block/aoe/aoecmd.c:388:
+				printk(KERN_CRIT "aoe: aoecmd_ata_rsp: runt "
+					"ata data size in read.  skb->len=%d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1226: FILE: drivers/block/aoe/aoecmd.c:394:
+			memcpy(f->bufaddr, ahin+1, n);
 			                       ^

WARNING:SIZEOF_PARENTHESIS: sizeof *hin should be sizeof(*hin)
#1231: FILE: drivers/block/aoe/aoecmd.c:399:
+			if (skb->len - sizeof *hin - sizeof *ahin < 512) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1232: FILE: drivers/block/aoe/aoecmd.c:400:
+				printk(KERN_INFO "aoe: aoecmd_ata_rsp: runt data size "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1232: FILE: drivers/block/aoe/aoecmd.c:400:
+				printk(KERN_INFO "aoe: aoecmd_ata_rsp: runt data size "

WARNING:SPLIT_STRING: quoted string split across lines
#1233: FILE: drivers/block/aoe/aoecmd.c:401:
+				printk(KERN_INFO "aoe: aoecmd_ata_rsp: runt data size "
+					"in ataid.  skb->len=%d\n", skb->len);

CHECK:SPACING: No space is necessary after a cast
#1237: FILE: drivers/block/aoe/aoecmd.c:405:
+			ataid_complete(d, (char *) (ahin+1));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1237: FILE: drivers/block/aoe/aoecmd.c:405:
+			ataid_complete(d, (char *) (ahin+1));
 			                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1241: FILE: drivers/block/aoe/aoecmd.c:409:
+			printk(KERN_INFO "aoe: aoecmd_ata_rsp: unrecognized "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1241: FILE: drivers/block/aoe/aoecmd.c:409:
+			printk(KERN_INFO "aoe: aoecmd_ata_rsp: unrecognized "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1242: FILE: drivers/block/aoe/aoecmd.c:410:
+^I^I^I^I"outbound ata command %2.2Xh for %d.%d\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#1242: FILE: drivers/block/aoe/aoecmd.c:410:
+			printk(KERN_INFO "aoe: aoecmd_ata_rsp: unrecognized "
+				"outbound ata command %2.2Xh for %d.%d\n", 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1249: FILE: drivers/block/aoe/aoecmd.c:417:
+		if (buf->nframesout == 0)
+		if (buf->resid == 0) {

CHECK:CAMELCASE: Avoid CamelCase: <Aoechdr>
#1274: FILE: drivers/block/aoe/aoecmd.c:442:
+	Aoechdr *ch;

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#1286: FILE: drivers/block/aoe/aoecmd.c:454:
+		skb = new_skb(ifp, sizeof *h + sizeof *ch);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1288: FILE: drivers/block/aoe/aoecmd.c:456:
+			printk(KERN_INFO "aoe: aoecmd_cfg: skb alloc failure\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_cfg', this function's name, in a string
#1288: FILE: drivers/block/aoe/aoecmd.c:456:
+			printk(KERN_INFO "aoe: aoecmd_cfg: skb alloc failure\n");

CHECK:SPACING: No space is necessary after a cast
#1291: FILE: drivers/block/aoe/aoecmd.c:459:
+		h = (Aoehdr *) skb->mac.raw;

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#1292: FILE: drivers/block/aoe/aoecmd.c:460:
+		memset(h, 0, sizeof *h + sizeof *ch);

WARNING:SIZEOF_PARENTHESIS: sizeof h->dst should be sizeof(h->dst)
#1294: FILE: drivers/block/aoe/aoecmd.c:462:
+		memset(h->dst, 0xff, sizeof h->dst);

WARNING:SIZEOF_PARENTHESIS: sizeof h->src should be sizeof(h->src)
#1295: FILE: drivers/block/aoe/aoecmd.c:463:
+		memcpy(h->src, ifp->dev_addr, sizeof h->src);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1309: FILE: drivers/block/aoe/aoecmd.c:477:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1309: FILE: drivers/block/aoe/aoecmd.c:477:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1324: FILE: drivers/block/aoe/aoecmd.c:492:
+		printk(KERN_CRIT "aoe: aoecmd_ata_id: can't get a frame.  "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_id', this function's name, in a string
#1324: FILE: drivers/block/aoe/aoecmd.c:492:
+		printk(KERN_CRIT "aoe: aoecmd_ata_id: can't get a frame.  "

WARNING:SPLIT_STRING: quoted string split across lines
#1325: FILE: drivers/block/aoe/aoecmd.c:493:
+		printk(KERN_CRIT "aoe: aoecmd_ata_id: can't get a frame.  "
+			"This shouldn't happen.\n");

CHECK:SPACING: No space is necessary after a cast
#1330: FILE: drivers/block/aoe/aoecmd.c:498:
+	h = (Aoehdr *) f->data;

CHECK:SPACING: No space is necessary after a cast
#1331: FILE: drivers/block/aoe/aoecmd.c:499:
+	ah = (Aoeahdr *) (h+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1331: FILE: drivers/block/aoe/aoecmd.c:499:
+	ah = (Aoeahdr *) (h+1);
 	                   ^

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#1332: FILE: drivers/block/aoe/aoecmd.c:500:
+	f->ndata = sizeof *h + sizeof *ah;

CHECK:SPACING: No space is necessary after a cast
#1350: FILE: drivers/block/aoe/aoecmd.c:518:
+	d->timer.data = (ulong) d;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1357: FILE: drivers/block/aoe/aoecmd.c:525:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1357: FILE: drivers/block/aoe/aoecmd.c:525:
+ $

CHECK:SPACING: No space is necessary after a cast
#1368: FILE: drivers/block/aoe/aoecmd.c:536:
+	h = (Aoehdr *) skb->mac.raw;

CHECK:SPACING: No space is necessary after a cast
#1369: FILE: drivers/block/aoe/aoecmd.c:537:
+	ch = (Aoechdr *) (h+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1369: FILE: drivers/block/aoe/aoecmd.c:537:
+	ch = (Aoechdr *) (h+1);
 	                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1377: FILE: drivers/block/aoe/aoecmd.c:545:
+		printk(KERN_CRIT "aoe: aoecmd_cfg_rsp: Warning: shelf "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_cfg_rsp', this function's name, in a string
#1377: FILE: drivers/block/aoe/aoecmd.c:545:
+		printk(KERN_CRIT "aoe: aoecmd_cfg_rsp: Warning: shelf "

WARNING:SPLIT_STRING: quoted string split across lines
#1378: FILE: drivers/block/aoe/aoecmd.c:546:
+		printk(KERN_CRIT "aoe: aoecmd_cfg_rsp: Warning: shelf "
+			"address is all ones.  Check shelf dip switches\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1384: FILE: drivers/block/aoe/aoecmd.c:552:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: sysminor %ld too "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_cfg_rsp', this function's name, in a string
#1384: FILE: drivers/block/aoe/aoecmd.c:552:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: sysminor %ld too "

WARNING:SPLIT_STRING: quoted string split across lines
#1385: FILE: drivers/block/aoe/aoecmd.c:553:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: sysminor %ld too "
+			"large\n", sysminor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1395: FILE: drivers/block/aoe/aoecmd.c:563:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: device set failure\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_cfg_rsp', this function's name, in a string
#1395: FILE: drivers/block/aoe/aoecmd.c:563:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: device set failure\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1420: FILE: drivers/block/aoe/aoedev.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1442: FILE: drivers/block/aoe/aoedev.c:23:
+^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1444: FILE: drivers/block/aoe/aoedev.c:25:
+		for (d=devlist, i=0; d; d=d->next, ++i)
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1444: FILE: drivers/block/aoe/aoedev.c:25:
+		for (d=devlist, i=0; d; d=d->next, ++i)
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1444: FILE: drivers/block/aoe/aoedev.c:25:
+		for (d=devlist, i=0; d; d=d->next, ++i)
 		                         ^

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1453: FILE: drivers/block/aoe/aoedev.c:34:
+		if (buflen - nlen < sizeof buf)

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1456: FILE: drivers/block/aoe/aoedev.c:37:
+		n = snprintf(buf, sizeof buf,

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#1469: FILE: drivers/block/aoe/aoedev.c:50:
+		nlen += n, ubuf += n;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1483: FILE: drivers/block/aoe/aoedev.c:64:
+	for (d=devlist; d; d=d->next)
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1483: FILE: drivers/block/aoe/aoedev.c:64:
+	for (d=devlist; d; d=d->next)
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1499: FILE: drivers/block/aoe/aoedev.c:80:
+	for (d=devlist; d; d=d->next)
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1499: FILE: drivers/block/aoe/aoedev.c:80:
+	for (d=devlist; d; d=d->next)
 	                    ^

CHECK:SPACING: No space is necessary after a cast
#1514: FILE: drivers/block/aoe/aoedev.c:95:
+	d = (Aoedev *) kallocz(sizeof *d, GFP_ATOMIC);

WARNING:SIZEOF_PARENTHESIS: sizeof *d should be sizeof(*d)
#1514: FILE: drivers/block/aoe/aoedev.c:95:
+	d = (Aoedev *) kallocz(sizeof *d, GFP_ATOMIC);

CHECK:SPACING: No space is necessary after a cast
#1517: FILE: drivers/block/aoe/aoedev.c:98:
+	f = (Frame *) kallocz(nframes * sizeof *f, GFP_ATOMIC);

WARNING:SIZEOF_PARENTHESIS: sizeof *f should be sizeof(*f)
#1517: FILE: drivers/block/aoe/aoedev.c:98:
+	f = (Frame *) kallocz(nframes * sizeof *f, GFP_ATOMIC);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1526: FILE: drivers/block/aoe/aoedev.c:107:
+	for (; f<e; f++)
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1550: FILE: drivers/block/aoe/aoedev.c:131:
+	for (; f<e; f->tag = FREETAG, f->buf = nil, f++) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1584: FILE: drivers/block/aoe/aoedev.c:165:
+	for (d=devlist; d; d=d->next)
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1584: FILE: drivers/block/aoe/aoedev.c:165:
+	for (d=devlist; d; d=d->next)
 	                    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1586: FILE: drivers/block/aoe/aoedev.c:167:
+		if (d->sysminor == sysminor
+		|| memcmp(d->addr, addr, sizeof d->addr) == 0)

WARNING:SIZEOF_PARENTHESIS: sizeof d->addr should be sizeof(d->addr)
#1586: FILE: drivers/block/aoe/aoedev.c:167:
+		|| memcmp(d->addr, addr, sizeof d->addr) == 0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1589: FILE: drivers/block/aoe/aoedev.c:170:
+	if (d == nil)
+	if ((d = aoedev_newdev(bufcnt)) == nil) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1590: FILE: drivers/block/aoe/aoedev.c:171:
+	if ((d = aoedev_newdev(bufcnt)) == nil) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1592: FILE: drivers/block/aoe/aoedev.c:173:
+		printk(KERN_INFO "aoe: aoedev_set: aoedev_newdev failure.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoedev_set', this function's name, in a string
#1592: FILE: drivers/block/aoe/aoedev.c:173:
+		printk(KERN_INFO "aoe: aoedev_set: aoedev_newdev failure.\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1602: FILE: drivers/block/aoe/aoedev.c:183:
+	if (d->sysminor != sysminor
+	|| memcmp(d->addr, addr, sizeof d->addr)

WARNING:SIZEOF_PARENTHESIS: sizeof d->addr should be sizeof(d->addr)
#1602: FILE: drivers/block/aoe/aoedev.c:183:
+	|| memcmp(d->addr, addr, sizeof d->addr)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1603: FILE: drivers/block/aoe/aoedev.c:184:
+	|| memcmp(d->addr, addr, sizeof d->addr)
+	|| (d->flags & DEVFL_UP) == 0) {

WARNING:SIZEOF_PARENTHESIS: sizeof d->addr should be sizeof(d->addr)
#1605: FILE: drivers/block/aoe/aoedev.c:186:
+		memcpy(d->addr, addr, sizeof d->addr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1657: FILE: drivers/block/aoe/aoemain.c:1:
+/*

WARNING:TYPO_SPELLING: 'TRUN' may be misspelled - perhaps 'TURN'?
#1668: FILE: drivers/block/aoe/aoemain.c:12:
+enum { TINIT, TRUN, TKILL };
               ^^^^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1674: FILE: drivers/block/aoe/aoemain.c:18:
+	static volatile ulong die;

WARNING:TYPO_SPELLING: 'TRUN' may be misspelled - perhaps 'TURN'?
#1683: FILE: drivers/block/aoe/aoemain.c:27:
+		t.data = TRUN;
 		         ^^^^

WARNING:TYPO_SPELLING: 'TRUN' may be misspelled - perhaps 'TURN'?
#1686: FILE: drivers/block/aoe/aoemain.c:30:
+	case TRUN:
 	     ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1722: FILE: drivers/block/aoe/aoemain.c:66:
+	int n, (**p)(void);
+	int (*fns[])(void) = { aoedev_init, aoechr_init, aoeblk_init, aoenet_init, nil };

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1724: FILE: drivers/block/aoe/aoemain.c:68:
+	for (p=fns; *p != nil; p++) {
 	      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1728: FILE: drivers/block/aoe/aoemain.c:72:
+			printk(KERN_INFO "aoe: aoe_init: initialisation failure.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoe_init', this function's name, in a string
#1728: FILE: drivers/block/aoe/aoemain.c:72:
+			printk(KERN_INFO "aoe: aoe_init: initialisation failure.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1732: FILE: drivers/block/aoe/aoemain.c:76:
+	printk(KERN_INFO "aoe: aoe_init: AoE v2.6-%d initialised.\n", VER);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoe_init', this function's name, in a string
#1732: FILE: drivers/block/aoe/aoemain.c:76:
+	printk(KERN_INFO "aoe: aoe_init: AoE v2.6-%d initialised.\n", VER);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1745: FILE: drivers/block/aoe/aoenet.c:1:
+/*

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1755: FILE: drivers/block/aoe/aoenet.c:11:
+static char *aoe_errlist[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1787: FILE: drivers/block/aoe/aoenet.c:43:
+		if (strlen(ifp->name) == len
+		    && strncmp(ifp->name, p, len) == 0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1821: FILE: drivers/block/aoe/aoenet.c:77:
+	if (skb_is_nonlinear(skb))
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1822: FILE: drivers/block/aoe/aoenet.c:78:
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)))
+	if (skb_linearize(skb, GFP_ATOMIC) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1822: FILE: drivers/block/aoe/aoenet.c:78:
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1837: FILE: drivers/block/aoe/aoenet.c:93:
+		skb->next = skb->prev = nil;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1842: FILE: drivers/block/aoe/aoenet.c:98:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1846: FILE: drivers/block/aoe/aoenet.c:102:
+ * (2) len doesn't include the header by default.  I want this. $

CHECK:SPACING: No space is necessary after a cast
#1865: FILE: drivers/block/aoe/aoenet.c:121:
+	h = (Aoehdr *) skb->mac.raw;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1867: FILE: drivers/block/aoe/aoenet.c:123:
+	if ((h->verfl & AOEFL_RSP) == 0 || (n & 1<<31))
 	                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1874: FILE: drivers/block/aoe/aoenet.c:130:
+		printk(KERN_CRIT "aoe: aoenet_rcv: error packet from %d.%d; "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoenet_rcv', this function's name, in a string
#1874: FILE: drivers/block/aoe/aoenet.c:130:
+		printk(KERN_CRIT "aoe: aoenet_rcv: error packet from %d.%d; "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1875: FILE: drivers/block/aoe/aoenet.c:131:
+^I^I^I"ecode=%d '%s'\n", nhget16(h->major), h->minor, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1888: FILE: drivers/block/aoe/aoenet.c:144:
+		printk(KERN_INFO "aoe: aoenet_rcv: unknown cmd %d\n", h->cmd);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoenet_rcv', this function's name, in a string
#1888: FILE: drivers/block/aoe/aoenet.c:144:
+		printk(KERN_INFO "aoe: aoenet_rcv: unknown cmd %d\n", h->cmd);

WARNING:INDENTED_LABEL: labels should not be indented
#1896: FILE: drivers/block/aoe/aoenet.c:152:
+	type:	__constant_htons(ETH_P_AOE),

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#1896: FILE: drivers/block/aoe/aoenet.c:152:
+	type:	__constant_htons(ETH_P_AOE),

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1897: FILE: drivers/block/aoe/aoenet.c:153:
+	func:	aoenet_rcv,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1897: FILE: drivers/block/aoe/aoenet.c:153:
+	func:	aoenet_rcv,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1917: FILE: drivers/block/aoe/aoeutils.c:1:
+/*

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1941: FILE: drivers/block/aoe/aoeutils.c:25:
+		bufq->head = bufq->tail = nil;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1954: FILE: drivers/block/aoe/aoeutils.c:38:
+		skb->nh.raw = skb->mac.raw = skb->data;

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#1956: FILE: drivers/block/aoe/aoeutils.c:40:
+		skb->protocol = __constant_htons(ETH_P_AOE);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1959: FILE: drivers/block/aoe/aoeutils.c:43:
+		skb->next = skb->prev = nil;

CHECK:SPACING: No space is necessary after a cast
#1973: FILE: drivers/block/aoe/aoeutils.c:57:
+	char *p = (char *) &n;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1986: FILE: drivers/block/aoe/aoeutils.c:70:
+	n=0;
 	 ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#2005: FILE: drivers/block/aoe/aoeutils.c:89:
+			if (p == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2008: FILE: drivers/block/aoe/aoeutils.c:92:
+				strcpy(p, p+1);	/* too inefficient? */
 				           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2053: FILE: drivers/block/aoe/aoeutils.c:137:
+	return n |= nhget16(p+2);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2066: FILE: drivers/block/aoe/aoeutils.c:150:
+	hnput16(p+2, n);
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2085: FILE: drivers/block/aoe/aoeutils.c:169:
+	n = lhget16(p+2);
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2095: FILE: drivers/block/aoe/aoeutils.c:179:
+	n = lhget32(p+4);
 	             ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2104: FILE: drivers/block/aoe/if_aoe.h:1:
+

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#2106: FILE: drivers/block/aoe/if_aoe.h:3:
+enum
+{

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2110: FILE: drivers/block/aoe/if_aoe.h:7:
+	AOEFL_RSP = (1<<3),
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2111: FILE: drivers/block/aoe/if_aoe.h:8:
+	AOEFL_ERR = (1<<2),
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2113: FILE: drivers/block/aoe/if_aoe.h:10:
+	AOEAFL_EXT = (1<<6),
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2114: FILE: drivers/block/aoe/if_aoe.h:11:
+	AOEAFL_DEV = (1<<4),
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2115: FILE: drivers/block/aoe/if_aoe.h:12:
+	AOEAFL_ASYNC = (1<<1),
 	                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2116: FILE: drivers/block/aoe/if_aoe.h:13:
+	AOEAFL_WRITE = (1<<0),
 	                 ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2128: FILE: drivers/block/aoe/if_aoe.h:25:
+typedef struct Aoehdr Aoehdr;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2130: FILE: drivers/block/aoe/if_aoe.h:27:
+struct Aoehdr
+{

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2142: FILE: drivers/block/aoe/if_aoe.h:39:
+typedef struct Aoeahdr Aoeahdr;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2144: FILE: drivers/block/aoe/if_aoe.h:41:
+struct Aoeahdr
+{

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2158: FILE: drivers/block/aoe/if_aoe.h:55:
+typedef struct Aoechdr Aoechdr;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2160: FILE: drivers/block/aoe/if_aoe.h:57:
+struct Aoechdr
+{

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2172: FILE: drivers/block/aoe/u.h:1:
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2174: FILE: drivers/block/aoe/u.h:3:
+/*
+typedef unsigned short ushort;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2180: FILE: drivers/block/aoe/u.h:9:
+typedef unsigned char uchar;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#2187: FILE: scripts/aoe/autoload:2:
+# set aoe to autoload by installing the

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#2208: FILE: scripts/aoe/mkdevs:2:
+# create all the device nodes for using the aoe driver

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#2243: FILE: scripts/aoe/mkshelf:2:
+# create one shelf's worth of device nodes

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 46 errors, 217 warnings, 86 checks, 2139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
