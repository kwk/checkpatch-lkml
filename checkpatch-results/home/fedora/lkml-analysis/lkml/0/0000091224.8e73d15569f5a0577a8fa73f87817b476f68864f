ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#52: FILE: arch/powerpc/platforms/cell/spufs/file.c:20:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#64: FILE: arch/powerpc/platforms/cell/spufs/file.c:646:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#88: FILE: arch/powerpc/platforms/cell/spufs/file.c:670:
+	pr_debug("%s %s\n", __FUNCTION__, spu->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#117: FILE: arch/powerpc/platforms/cell/spufs/file.c:699:
+	/* enable interrupt waiting for any tag group,
+	   may silently fail if interrupts are already enabled */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#117: FILE: arch/powerpc/platforms/cell/spufs/file.c:699:
+	   may silently fail if interrupts are already enabled */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: arch/powerpc/platforms/cell/spufs/file.c:705:
+static ssize_t spufs_mfc_read(struct file *file, char __user *buffer,
+			size_t size, loff_t *pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: arch/powerpc/platforms/cell/spufs/file.c:723:
+		ret = spufs_wait(ctx->mfc_wq,
+			   spufs_read_mfc_tagstatus(ctx, &status));

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#174: FILE: arch/powerpc/platforms/cell/spufs/file.c:756:
+	if ((cmd->lsa & 0xf) != (cmd->ea &0xf)) {
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: arch/powerpc/platforms/cell/spufs/file.c:758:
+		pr_debug("invalid DMA alignment, ea %lx lsa %x\n",
+				cmd->ea, cmd->lsa);

WARNING:INDENTED_LABEL: labels should not be indented
#199: FILE: arch/powerpc/platforms/cell/spufs/file.c:781:
+	error:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: arch/powerpc/platforms/cell/spufs/file.c:784:
+		pr_debug("invalid DMA alignment %x for size %x\n",
+			cmd->lsa & 0xf, cmd->size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#233: FILE: arch/powerpc/platforms/cell/spufs/file.c:815:
+		/* wait for any tag group to complete
+		   so we have space for the new command */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#233: FILE: arch/powerpc/platforms/cell/spufs/file.c:815:
+		   so we have space for the new command */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#236: FILE: arch/powerpc/platforms/cell/spufs/file.c:818:
+		/* try again, because the queue might be
+		   empty again */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#236: FILE: arch/powerpc/platforms/cell/spufs/file.c:818:
+		   empty again */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: arch/powerpc/platforms/cell/spufs/file.c:827:
+static ssize_t spufs_mfc_write(struct file *file, const char __user *buffer,
+			size_t size, loff_t *pos)

WARNING:SIZEOF_PARENTHESIS: sizeof cmd should be sizeof(cmd)
#251: FILE: arch/powerpc/platforms/cell/spufs/file.c:833:
+	if (size != sizeof cmd)

WARNING:SIZEOF_PARENTHESIS: sizeof cmd should be sizeof(cmd)
#255: FILE: arch/powerpc/platforms/cell/spufs/file.c:837:
+	if (copy_from_user(&cmd, buffer, sizeof cmd))

WARNING:LINE_SPACING: Missing a blank line after declarations
#267: FILE: arch/powerpc/platforms/cell/spufs/file.c:849:
+		int status;
+		ret = spufs_wait(ctx->mfc_wq,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: arch/powerpc/platforms/cell/spufs/file.c:865:
+static unsigned int spufs_mfc_poll(struct file *file,poll_table *wait)
                                                     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#303: FILE: arch/powerpc/platforms/cell/spufs/file.c:885:
+	pr_debug("%s: free %d tagstatus %d tagwait %d\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: arch/powerpc/platforms/cell/spufs/file.c:886:
+	pr_debug("%s: free %d tagstatus %d tagwait %d\n", __FUNCTION__,
+		free_elements, tagstatus, ctx->tagwait);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#315: FILE: arch/powerpc/platforms/cell/spufs/file.c:897:
+#if 0

WARNING:CONST_STRUCT: struct file_operations should normally be const
#345: FILE: arch/powerpc/platforms/cell/spufs/file.c:927:
+static struct file_operations spufs_mfc_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#375: FILE: arch/powerpc/platforms/cell/spu_base.c:114:
+	pr_debug("%s, %lx, %lx\n", __FUNCTION__, dsisr, ea);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#392: FILE: arch/powerpc/platforms/cell/spu_base.c:245:
+	pr_debug("%s: %lx %lx %lx %lx\n", __FUNCTION__, mask, stat,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: arch/powerpc/platforms/cell/spu_base.c:246:
+	pr_debug("%s: %lx %lx %lx %lx\n", __FUNCTION__, mask, stat,
+			dar, dsisr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#413: FILE: arch/powerpc/platforms/cell/spufs/backing_ops.c:288:
+static int spu_backing_set_mfc_query(struct spu_context * ctx, u32 mask,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: arch/powerpc/platforms/cell/spufs/backing_ops.c:289:
+static int spu_backing_set_mfc_query(struct spu_context * ctx, u32 mask,
+					u32 mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#433: FILE: arch/powerpc/platforms/cell/spufs/backing_ops.c:308:
+static u32 spu_backing_read_mfc_tagstatus(struct spu_context * ctx)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#476: FILE: arch/powerpc/platforms/cell/spufs/hw_ops.c:235:
+static int spu_hw_set_mfc_query(struct spu_context * ctx, u32 mask, u32 mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#493: FILE: arch/powerpc/platforms/cell/spufs/hw_ops.c:252:
+static u32 spu_hw_read_mfc_tagstatus(struct spu_context * ctx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: arch/powerpc/platforms/cell/spufs/hw_ops.c:263:
+static int spu_hw_send_mfc_command(struct spu_context *ctx,
+					struct mfc_dma_command *cmd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: arch/powerpc/platforms/cell/spufs/hw_ops.c:272:
+	out_be32(&prob->mfc_union_W.by32.mfc_size_tag32,
+				cmd->size << 16 | cmd->tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: arch/powerpc/platforms/cell/spufs/hw_ops.c:274:
+	out_be32(&prob->mfc_union_W.by32.mfc_class_cmd32,
+				cmd->class << 16 | cmd->cmd);

WARNING:SPACING: Unnecessary space before function pointer name
#549: FILE: include/asm-powerpc/spu.h:140:
+	void (* mfc_callback)(struct spu *spu);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#549: FILE: include/asm-powerpc/spu.h:140:
+	void (* mfc_callback)(struct spu *spu);
 	      ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#617: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:69:
+	int32_t pad;	/* reserved */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#618: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:70:
+	uint32_t lsa;	/* local storage address */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#619: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:71:
+	uint64_t ea;	/* effective address */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#620: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:72:
+	uint16_t size;	/* transfer size */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#621: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:73:
+	uint16_t tag;	/* command tag */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#622: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:74:
+	uint16_t class;	/* class ID */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#623: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:75:
+	uint16_t cmd;	/* command opcode */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#626: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:78:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#634: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:101:
+	int (*set_mfc_query)(struct spu_context * ctx, u32 mask, u32 mode);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#635: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:102:
+	u32 (*read_mfc_tagstatus)(struct spu_context * ctx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#638: FILE: arch/powerpc/platforms/cell/spufs/spufs.h:105:
+	int (*send_mfc_command)(struct spu_context *ctx,
+					struct mfc_dma_command *cmd);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091224.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 17 warnings, 22 checks, 560 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091224.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
