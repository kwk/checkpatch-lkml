CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#113: FILE: drivers/md/raid5.c:91:
 }
+void raid5_release_stripe(struct stripe_head *sh)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#176: FILE: drivers/md/raid5.c:927:
+	int in_write=0, xor=0;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#176: FILE: drivers/md/raid5.c:927:
+	int in_write=0, xor=0;
 	                   ^

WARNING:SPLIT_STRING: quoted string split across lines
#187: FILE: drivers/md/raid5.c:950:
+		PRINTK("check %d: state 0x%lx read %p write %p written %p"
+		       " in_write %p\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: drivers/md/raid5.c:952:
+^I^I        dev->inwrite);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#197: FILE: drivers/md/raid5.c:979:
+		if (test_bit(R5_InAsyncXor, &dev->flags)) xor++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CAMELCASE: Avoid CamelCase: <R5_InAsyncXor>
#197: FILE: drivers/md/raid5.c:979:
+		if (test_bit(R5_InAsyncXor, &dev->flags)) xor++;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#205: FILE: drivers/md/raid5.c:989:
+		if (dev->inwrite) in_write++;

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#215: FILE: drivers/md/raid5.c:1248:
+		/* now if nothing is locked, and if we have enough data, we can start a write request

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#216: FILE: drivers/md/raid5.c:1249:
+		 * note: if an xor calculation is in progress we can still submit the write, as we rely

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#238: FILE: drivers/md/raid5.c:1255:
+			locked += raid5_issue_compute_parity(sh, rcw==0 ? RECONSTRUCT_WRITE : READ_MODIFY_WRITE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#238: FILE: drivers/md/raid5.c:1255:
+			locked += raid5_issue_compute_parity(sh, rcw==0 ? RECONSTRUCT_WRITE : READ_MODIFY_WRITE);
 			                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/md/raid5.c:1256:
+^I^I^I/* once R5_InAsyncXor is dropped every locked buffer will be $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#240: FILE: drivers/md/raid5.c:1257:
+			 * ready to be written.  This is handled by the callback: raid5_adma_callback

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#292: FILE: drivers/md/raid5.c:1907:
+	if (!(conf->adma_engine = adma_engine_init())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drivers/md/raid5.c:1908:
+^I^Iprintk(KERN_ERR $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#293: FILE: drivers/md/raid5.c:1908:
+		printk(KERN_ERR 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: include/linux/raid/raid5.h:160:
+#define ^IR5_InAsyncXor^I10^I/* softens R5_LOCKED to allow queueing additional ops */$

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#379: FILE: include/linux/raid/raid5.h:277:
+#define r5_next_bio(bio, sect) ( ( (bio)->bi_sector + ((bio)->bi_size>>9) < sect + STRIPE_SECTORS) ? (bio)->bi_next : NULL)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#379: FILE: include/linux/raid/raid5.h:277:
+#define r5_next_bio(bio, sect) ( ( (bio)->bi_sector + ((bio)->bi_size>>9) < sect + STRIPE_SECTORS) ? (bio)->bi_next : NULL)
                                                                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#379: FILE: include/linux/raid/raid5.h:277:
+#define r5_next_bio(bio, sect) ( ( (bio)->bi_sector + ((bio)->bi_size>>9) < sect + STRIPE_SECTORS) ? (bio)->bi_next : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bio' - possible side-effects?
#379: FILE: include/linux/raid/raid5.h:277:
+#define r5_next_bio(bio, sect) ( ( (bio)->bi_sector + ((bio)->bi_size>>9) < sect + STRIPE_SECTORS) ? (bio)->bi_next : NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sect' may be better as '(sect)' to avoid precedence issues
#379: FILE: include/linux/raid/raid5.h:277:
+#define r5_next_bio(bio, sect) ( ( (bio)->bi_sector + ((bio)->bi_size>>9) < sect + STRIPE_SECTORS) ? (bio)->bi_next : NULL)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#383: FILE: include/linux/raid/raid5.h:281:
+#define STRIPE_SECTORS		(STRIPE_SIZE>>9)
                       		            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108602.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 8 warnings, 6 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108602.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
