CHECK:SPACING: No space is necessary after a cast
#139: FILE: drivers/s390/char/fs3270.c:65:
+	fp = (struct fs3270 *) view;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#160: FILE: drivers/s390/char/fs3270.c:79:
+			/* Started sucessfully. Now wait for completion. */
 			           ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#175: FILE: drivers/s390/char/fs3270.c:94:
+	fp = (struct fs3270 *) rq->view;

CHECK:SPACING: No space is necessary after a cast
#185: FILE: drivers/s390/char/fs3270.c:104:
+	fp = (struct fs3270 *) rq->view;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#235: FILE: drivers/s390/char/fs3270.c:148:
+	rc = fp->init->rc = raw3270_start_locked(view, fp->init);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#251: FILE: drivers/s390/char/fs3270.c:164:
+	fp = (struct fs3270 *) rq->view;

CHECK:BRACES: braces {} should be used on all arms of this statement
#263: FILE: drivers/s390/char/fs3270.c:176:
+	if (rq->rc != 0 || rq->rescnt == 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#267: FILE: drivers/s390/char/fs3270.c:180:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#357: FILE: drivers/s390/char/fs3270.c:272:
+
+			}

CHECK:SPACING: No space is necessary after a cast
#420: FILE: drivers/s390/char/fs3270.c:390:
+	fp = (struct fs3270 *) view;

CHECK:SPACING: No space is necessary after a cast
#423: FILE: drivers/s390/char/fs3270.c:393:
+	raw3270_request_free(((struct fs3270 *) view)->init);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#462: FILE: drivers/s390/char/fs3270.c:455:
+	ib = idal_buffer_alloc(2*fp->view.rows*fp->view.cols + 5, 0);
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#462: FILE: drivers/s390/char/fs3270.c:455:
+	ib = idal_buffer_alloc(2*fp->view.rows*fp->view.cols + 5, 0);
 	                                      ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 6)
#697: FILE: drivers/s390/char/raw3270.c:1290:
+	if (rp == NULL)
+      return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp"
#697: FILE: drivers/s390/char/raw3270.c:1290:
+	if (rp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: drivers/s390/char/raw3270.c:1291:
+      return;$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct raw3270_view *' should also have an identifier name
#753: FILE: drivers/s390/char/raw3270.h:171:
+int raw3270_start_locked(struct raw3270_view *, struct raw3270_request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct raw3270_request *' should also have an identifier name
#753: FILE: drivers/s390/char/raw3270.h:171:
+int raw3270_start_locked(struct raw3270_view *, struct raw3270_request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct raw3270_view *' should also have an identifier name
#755: FILE: drivers/s390/char/raw3270.h:173:
+int raw3270_reset(struct raw3270_view *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct raw3270_view *' should also have an identifier name
#756: FILE: drivers/s390/char/raw3270.h:174:
+struct raw3270_view *raw3270_view(struct raw3270_view *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151340.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 13 checks, 747 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151340.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
