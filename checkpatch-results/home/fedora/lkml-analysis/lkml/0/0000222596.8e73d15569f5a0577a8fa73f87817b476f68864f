WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> > > being applied to multiple processes, but in the case where it is being

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#71: FILE: kernel/capability.c:89:
+static inline int cap_set_pg(int pgrp, kernel_cap_t *effective,
 			      kernel_cap_t *inheritable,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: kernel/capability.c:99:
+			if (!security_capset_check(target, effective,
+							inheritable,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: kernel/capability.c:102:
+				security_capset_set(target, effective,
+							inheritable,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: kernel/capability.c:117:
+static inline int cap_set_all(kernel_cap_t *effective,
 			       kernel_cap_t *inheritable,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: kernel/capability.c:121:
+     int ret = -EPERM;$

WARNING:TABSTOP: Statements should start on a tabstop
#111: FILE: kernel/capability.c:126:
+	     if (security_capset_check(target, effective, inheritable,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 21)
#111: FILE: kernel/capability.c:126:
+	     if (security_capset_check(target, effective, inheritable,
[...]
+		     continue;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: kernel/capability.c:127:
+	     if (security_capset_check(target, effective, inheritable,
+						permitted))

WARNING:TABSTOP: Statements should start on a tabstop
#113: FILE: kernel/capability.c:128:
+		     continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/capability.c:133:
+     return ret;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 21)
#149: FILE: kernel/capability.c:193:
              if (pid == -1)  /* all procs other than current and init */
+                     ret = cap_set_all(&effective, &inheritable, &permitted);

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: kernel/capability.c:194:
+                     ret = cap_set_all(&effective, &inheritable, &permitted);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: kernel/capability.c:194:
+                     ret = cap_set_all(&effective, &inheritable, &permitted);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 21)
#153: FILE: kernel/capability.c:196:
              else            /* all procs in process group */
+                     ret = cap_set_pg(-pid, &effective, &inheritable,

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: kernel/capability.c:197:
+                     ret = cap_set_pg(-pid, &effective, &inheritable,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: kernel/capability.c:197:
+                     ret = cap_set_pg(-pid, &effective, &inheritable,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: kernel/capability.c:198:
+^I^I     ^I^I^I^I^I&permitted);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: kernel/capability.c:198:
+^I^I     ^I^I^I^I^I&permitted);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: kernel/capability.c:198:
+                     ret = cap_set_pg(-pid, &effective, &inheritable,
+		     					&permitted);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#157: FILE: kernel/capability.c:199:
      } else {
+	     ret = security_capset_check(target, &effective, &inheritable,

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: kernel/capability.c:201:
+^I     ^I^I^I^I^I^I&permitted);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: kernel/capability.c:201:
+^I     ^I^I^I^I^I^I&permitted);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: kernel/capability.c:201:
+	     ret = security_capset_check(target, &effective, &inheritable,
+	     						&permitted);

WARNING:TABSTOP: Statements should start on a tabstop
#161: FILE: kernel/capability.c:202:
+	     if (!ret)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 21)
#161: FILE: kernel/capability.c:202:
+	     if (!ret)
+		     security_capset_set(target, &effective, &inheritable,

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: kernel/capability.c:204:
+^I^I     ^I^I^I^I^I&permitted);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: kernel/capability.c:204:
+^I^I     ^I^I^I^I^I&permitted);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: kernel/capability.c:204:
+		     security_capset_set(target, &effective, &inheritable,
+		     					&permitted);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 16 warnings, 8 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
