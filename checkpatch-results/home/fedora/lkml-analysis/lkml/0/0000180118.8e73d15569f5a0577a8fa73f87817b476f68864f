WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
What seems to be definitely lacking is proper handling of on disk corruptions.

WARNING:TYPO_SPELLING: 'shortcomming' may be misspelled - perhaps 'shortcoming'?
#49: 
clear documentation of this shortcomming at least.
                            ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#97: FILE: fs/Kconfig:124:
I would keep it hidden for now and just select from EXT3/OCFS2

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#102: FILE: fs/Kconfig:129:
+config OCFS2_FS
+	tristate "OCFS2 file system support (EXPERIMENTAL)"
+	depends on EXPERIMENTAL && (X86 || IA64 || X86_64 || BROKEN)
+	select CONFIGFS_FS
+	select JBD
+	help
+	  OCFS2 is a shared disk cluster file system.
+
+	  To learn more about OCFS2 and to download the file system tools,
+	  visit the OCFS2 website at: http://oss.oracle.com/projects/ocfs2/

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'primatives' may be misspelled - perhaps 'primitives'?
#155: 
+ * the waiting primatives would test current->wait for sync.  until that gets
                ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#173: 
+	struct file *filp = iocb->ki_filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#487: 
+			     int uptodate)
 			         ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#489: 
+//	mlog_entry("(bh->b_blocknr = %u, uptodate = %d)\n", bh->b_blocknr,
   	                                 ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#490: 
+//		       uptodate);
   		       ^^^^^^^^

WARNING:TYPO_SPELLING: 'implmented' may be misspelled - perhaps 'implemented'?
#579: 
+/* This could be faster if we just implmented a find_last_bit, but I
                                    ^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1590: FILE: fs/ocfs2/extent_map.c:9:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1613: FILE: fs/ocfs2/extent_map.c:25:
+int ocfs_set_inode_size(ocfs_journal_handle *handle,
                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1627: FILE: fs/ocfs2/extent_map.c:36:
+int ocfs_extend_allocation(ocfs_super *osb, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1627: FILE: fs/ocfs2/extent_map.c:36:
+int ocfs_extend_allocation(ocfs_super *osb, 
                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1628: FILE: fs/ocfs2/extent_map.c:37:
+^I^I^I   struct inode *inode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1629: FILE: fs/ocfs2/extent_map.c:38:
+^I^I^I   u32 clusters_to_add, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1631: FILE: fs/ocfs2/extent_map.c:40:
+^I^I^I   ocfs_journal_handle *handle, $

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1631: FILE: fs/ocfs2/extent_map.c:40:
+			   ocfs_journal_handle *handle, 
 			                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1642: FILE: fs/ocfs2/extent_map.c:49:
+static int ocfs_node_map_stringify(ocfs_node_map *map, char **str)
                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1649: FILE: fs/ocfs2/extent_map.c:56:
+	*str = kmalloc( strlen("123 ") * map->num_nodes, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1665: FILE: fs/ocfs2/extent_map.c:71:
+	mlog_entry ("(0x%p, %lu, 0x%p)\n", inode, inode->i_ino, opaque);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#1670: FILE: fs/ocfs2/extent_map.c:76:
+	if (inode == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#1678: FILE: fs/ocfs2/extent_map.c:83:
+		mlog(ML_ERROR, "inode %lu has no generic_ip (is_bad_inode = "
+			       "%d)!\n", inode->i_ino, is_bad_inode(inode));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <MLFu64>
#1680: FILE: fs/ocfs2/extent_map.c:85:
+			mlog(ML_ERROR, "args-blkno = %"MLFu64", "

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1680: FILE: fs/ocfs2/extent_map.c:85:
+			mlog(ML_ERROR, "args-blkno = %"MLFu64", "

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:SPLIT_STRING: quoted string split across lines
#1681: FILE: fs/ocfs2/extent_map.c:86:
+			mlog(ML_ERROR, "args-blkno = %"MLFu64", "
+				       "args->ino = %lu, args->flags = 0x%x\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1683: FILE: fs/ocfs2/extent_map.c:88:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TABSTOP: Statements should start on a tabstop
#1689: FILE: fs/ocfs2/extent_map.c:93:
+		    if (ocfs2_inode_is_fast_symlink(inode))

WARNING:TABSTOP: Statements should start on a tabstop
#1691: FILE: fs/ocfs2/extent_map.c:95:
+		    else

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1697: FILE: fs/ocfs2/extent_map.c:100:
+	inode_alloc_inode = ocfs_get_system_file_inode(osb, INODE_ALLOC_SYSTEM_INODE, le16_to_cpu(fe->i_suballoc_node));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1708: FILE: fs/ocfs2/extent_map.c:107:
+int ocfs_mark_inode_dirty(ocfs_journal_handle *handle, $

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1708: FILE: fs/ocfs2/extent_map.c:107:
+int ocfs_mark_inode_dirty(ocfs_journal_handle *handle, 
                                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1709: FILE: fs/ocfs2/extent_map.c:108:
+^I^I^I  struct inode *inode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1742: FILE: fs/ocfs2/extent_map.c:135:
+^I^I       (type == OCFS_JOURNAL_ACCESS_CREATE) ? $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1743: FILE: fs/ocfs2/extent_map.c:136:
+^I^I       "OCFS_JOURNAL_ACCESS_CREATE" : $

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1751: FILE: fs/ocfs2/extent_map.c:143:
+		mlog(ML_ERROR, "giving me a buffer that's not uptodate!\n");
 		                                              ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1754: FILE: fs/ocfs2/extent_map.c:146:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1758: FILE: fs/ocfs2/extent_map.c:150:
+static void ocfs_handle_cleanup_locks(ocfs_journal *journal, $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around handle->locks
#1766: FILE: fs/ocfs2/extent_map.c:158:
+	list_for_each_safe(p, n, &(handle->locks)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1773: FILE: fs/ocfs2/extent_map.c:164:
+		iput(inode);
 		^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1778: FILE: fs/ocfs2/extent_map.c:169:
+#define OCFS_DEFAULT_COMMIT_INTERVAL ^I(HZ * 5)$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1803: FILE: fs/ocfs2/extent_map.c:192:
+					    ocfs2_dinode *la_dinode,
 					                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1804: FILE: fs/ocfs2/extent_map.c:193:
+					    ocfs2_dinode *tl_dinode)
 					                 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*item)...) over kmalloc(sizeof(struct ocfs2_la_recovery_item)...)
#1808: FILE: fs/ocfs2/extent_map.c:197:
+	item = kmalloc(sizeof(struct ocfs2_la_recovery_item), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 1)
#1809: FILE: fs/ocfs2/extent_map.c:198:
+	if (!item) {
[...]


WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1812: FILE: fs/ocfs2/extent_map.c:201:
+		 * than capable of reclaiming unused space. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1838: FILE: fs/ocfs2/extent_map.c:220:
+^Iwhile ((bit_off = ocfs2_find_next_zero_bit(bitmap, left, start)) $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1850: FILE: fs/ocfs2/extent_map.c:229:
+	 * free. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 1)
#1855: FILE: fs/ocfs2/extent_map.c:233:
+	if (S_ISDIR(mode) && (dir->i_nlink >= OCFS2_LINK_MAX)) {


CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dir->i_nlink >= OCFS2_LINK_MAX'
#1855: FILE: fs/ocfs2/extent_map.c:233:
+	if (S_ISDIR(mode) && (dir->i_nlink >= OCFS2_LINK_MAX)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 1)
#1862: FILE: fs/ocfs2/extent_map.c:237:
+	if (fe->i_links_count >= OCFS2_LINK_MAX) {


CHECK:SPACING: No space is necessary after a cast
#1866: FILE: fs/ocfs2/extent_map.c:240:
+	fe = (ocfs2_dinode *) fe_bh->b_data;

WARNING:SPLIT_STRING: quoted string split across lines
#1869: FILE: fs/ocfs2/extent_map.c:243:
+		mlog(ML_NOTICE, "inode has nlink = %u, fe has link_cnt = %u. "
+		     "Setting inode from fe.\n", inode->i_nlink,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1890: FILE: fs/ocfs2/extent_map.c:262:
+^Istruct ocfs2_dir_entry *old_de = NULL, *new_de = NULL; // dirent for old_dentry $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1901: FILE: fs/ocfs2/extent_map.c:272:
+	 * bit. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1907: FILE: fs/ocfs2/extent_map.c:277:
+	 * away first */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1912: FILE: fs/ocfs2/extent_map.c:280:
+#define OCFS_ASSERT(cond)	do { if (unlikely(!(cond))) BUG(); } while (0)

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1916: FILE: fs/ocfs2/extent_map.c:283:
+	do { \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1918: FILE: fs/ocfs2/extent_map.c:285:
+			printk(KERN_ERR "This should make the filesystem remount RO\n"); \

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1923: FILE: fs/ocfs2/extent_map.c:288:
+			BUG(); \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1923: FILE: fs/ocfs2/extent_map.c:288:
+			BUG(); \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1927: FILE: fs/ocfs2/extent_map.c:292:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1940: FILE: fs/ocfs2/extent_map.c:304:
+#define OCFS2_MINOR_REV_LEVEL          ^I90$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1993: FILE: fs/ocfs2/extent_map.c:345:
+ * slot_map.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2006: FILE: fs/ocfs2/extent_map.c:356:
+static inline void debug_bg(ocfs2_group_desc *bg) $

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#2006: FILE: fs/ocfs2/extent_map.c:356:
+static inline void debug_bg(ocfs2_group_desc *bg) 
                                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2028: FILE: fs/ocfs2/extent_map.c:374:
+ * being woken up */

WARNING:MEMORY_BARRIER: memory barrier without comment
#2031: FILE: fs/ocfs2/extent_map.c:377:
+	mb();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#2033: FILE: fs/ocfs2/extent_map.c:378:
If anything you need to do that on the writer.
[...]
+		mlog(ML_ERROR, "couldn't mount because of endian mismatch\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2051: FILE: fs/ocfs2/vote.c:1:
+ * vote.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 39 warnings, 17 checks, 525 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
