ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: drivers/ieee1394/Kconfig:180:
+^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: drivers/ieee1394/Kconfig:185:
+^I  $

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#72: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: drivers/ieee1394/mem1394.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: drivers/ieee1394/mem1394.c:27:
+static int mem1394_mmap(struct file * file, struct vm_area_struct * vma)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: drivers/ieee1394/mem1394.c:27:
+static int mem1394_mmap(struct file * file, struct vm_area_struct * vma)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#105: FILE: drivers/ieee1394/mem1394.c:29:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#121: FILE: drivers/ieee1394/mem1394.c:45:
+ * to create a new hpsb_read_user function instead... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: drivers/ieee1394/mem1394.c:46:
+static int mem1394_read(struct file *file, char __user * buffer,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#125: FILE: drivers/ieee1394/mem1394.c:49:
+	struct mem1394_file_info *fi = (struct mem1394_file_info*)file->private_data;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#127: FILE: drivers/ieee1394/mem1394.c:51:
+	size_t submitcount = (count + (4-1)) & ~(4-1);
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#127: FILE: drivers/ieee1394/mem1394.c:51:
+	size_t submitcount = (count + (4-1)) & ~(4-1);
 	                                          ^

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#167: FILE: drivers/ieee1394/mem1394.c:91:
+	packet = hpsb_make_readpacket(fi->memdev->ne->host, fi->memdev->ne->nodeid, *offset, submitcount);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: drivers/ieee1394/mem1394.c:94:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/ieee1394/mem1394.c:101:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#202: FILE: drivers/ieee1394/mem1394.c:126:
+	struct mem1394_file_info *fi = (struct mem1394_file_info*)file->private_data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/ieee1394/mem1394.c:127:
+^I$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#211: FILE: drivers/ieee1394/mem1394.c:135:
+static struct file_operations mem1394_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: drivers/ieee1394/mem1394.c:145:
+static struct mem1394_dev * alloc_mem1394_dev(struct device *dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: drivers/ieee1394/mem1394.c:150:
+	struct class_device * mem1394_class_member;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#238: FILE: drivers/ieee1394/mem1394.c:162:
+		printk(KERN_ERR "mem1394: failed to register character device!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/ieee1394/mem1394.c:168:
+	mem1394_class_member = class_device_create(mem1394_sysfs_class, NULL, result->cdev.dev,
+						dev, "fwmem-%d", atomic_read(&mem1394_dev_ctr));

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#245: FILE: drivers/ieee1394/mem1394.c:169:
+	if (IS_ERR(mem1394_class_member)) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#246: FILE: drivers/ieee1394/mem1394.c:170:
+		printk(KERN_WARNING "mem1394: class_device_create failed\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: drivers/ieee1394/mem1394.c:190:
+		printk("cl_dev not assigned\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#270: FILE: drivers/ieee1394/mem1394.c:194:
+		printk("cl_dev->dev not assigned\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: drivers/ieee1394/mem1394.c:225:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: drivers/ieee1394/mem1394.c:246:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: drivers/ieee1394/mem1394.c:246:
+                $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/ieee1394/mem1394.c:246:
+                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/ieee1394/mem1394.c:250:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: drivers/ieee1394/mem1394.c:252:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#330: FILE: drivers/ieee1394/mem1394.c:254:
+	if (IS_ERR(mem1394_sysfs_class)) {
+		return PTR_ERR(mem1394_sysfs_class);
+	}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#360: FILE: drivers/ieee1394/mem1394.h:1:
+#ifndef IEEE1394_MEM1394_H

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108656.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 14 warnings, 3 checks, 325 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108656.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
