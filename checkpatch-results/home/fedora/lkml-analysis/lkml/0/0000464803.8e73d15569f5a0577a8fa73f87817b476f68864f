WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
address conversion functions (virt_to_phys, phys_to_virt and VALID_PAGE) to 

WARNING:TYPO_SPELLING: 'satify' may be misspelled - perhaps 'satisfy'?
#40: 
[G, H] or [H, G] can satify both of the dependencies A<-B and B<-C.  Q.e.d.
                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#ifndef <symbol> bracket.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: include/asm-i386/atomic_t.h:1:
+#ifndef ATOMIC_T_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#100: FILE: include/asm-i386/atomic_t.h:9:
+typedef struct { volatile int counter; } atomic_t;

CHECK:SPACING: No space is necessary after a cast
#139: FILE: include/asm-i386/page.h:123:
+	return (unsigned long) (virt) - PAGE_OFFSET;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#144: FILE: include/asm-i386/page.h:128:
+	return (void *) ((unsigned long) (phys) + PAGE_OFFSET);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#230: FILE: include/asm-i386/spinlock_t.h:1:
+#ifndef ASM_i386_SPINLOCK_T_H

WARNING:REPEATED_WORD: Possible repeated word: 'tsk'
#234: FILE: include/asm-i386/spinlock_t.h:5:
+ * initialize their spinlocks properly, tsk tsk.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#247: FILE: include/asm-i386/spinlock_t.h:18:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#248: FILE: include/asm-i386/spinlock_t.h:19:
+	volatile unsigned int lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#250: FILE: include/asm-i386/spinlock_t.h:21:
+	unsigned magic;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#264: FILE: include/asm-i386/spinlock_t.h:35:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#265: FILE: include/asm-i386/spinlock_t.h:36:
+	volatile unsigned int lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#267: FILE: include/asm-i386/spinlock_t.h:38:
+	unsigned magic;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#311: FILE: include/linux/list_head.h:1:
+#ifndef _LINUX_LISTHEAD_H

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#318: FILE: include/linux/list_head.h:8:
+#define LIST_HEAD_INIT(name) { &(name), &(name) }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#320: FILE: include/linux/list_head.h:10:
+#define LIST_HEAD(name) \
+	struct list_head name = LIST_HEAD_INIT(name)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#327: FILE: include/linux/mem_map.h:1:
+#ifndef _MEM_MAP_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#354: FILE: include/linux/mem_map.h:28:
+typedef struct page {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#359: FILE: include/linux/mem_map.h:33:
+	struct page *next_hash;		/* Next page sharing our hash bucket in
+					   the pagecache hash table. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#359: FILE: include/linux/mem_map.h:33:
+					   the pagecache hash table. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#362: FILE: include/linux/mem_map.h:36:
+	unsigned long flags;		/* atomic flags, some possibly
+					   updated asynchronously */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#362: FILE: include/linux/mem_map.h:36:
+					   updated asynchronously */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#364: FILE: include/linux/mem_map.h:38:
+	struct list_head lru;		/* Pageout list, eg. active_list;
+					   protected by pagemap_lru_lock !! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#364: FILE: include/linux/mem_map.h:38:
+					   protected by pagemap_lru_lock !! */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: include/linux/mem_map.h:41:
+	struct buffer_head * buffers;	/* Buffer maps us to a disk block. */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#369: FILE: include/linux/mem_map.h:43:
+	void *virtual;			/* Kernel virtual address (NULL if
+					   not kmapped, ie. highmem) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#369: FILE: include/linux/mem_map.h:43:
+					   not kmapped, ie. highmem) */

WARNING:MISSING_EOF_NEWLINE: adding a line without newline at end of file
#376: FILE: include/linux/mem_map.h:50:
+#endif

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#532: FILE: include/linux/spinlock_t.h:1:
+#ifndef _SPINLOCK_H

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: include/linux/spinlock_t.h:21:
+  typedef struct { } spinlock_t;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#552: FILE: include/linux/spinlock_t.h:21:
+  typedef struct { } spinlock_t;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#553: FILE: include/linux/spinlock_t.h:22:
+  #define SPIN_LOCK_UNLOCKED (spinlock_t) { }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: include/linux/spinlock_t.h:24:
+  typedef struct { int gcc_is_buggy; } spinlock_t;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#555: FILE: include/linux/spinlock_t.h:24:
+  typedef struct { int gcc_is_buggy; } spinlock_t;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#556: FILE: include/linux/spinlock_t.h:25:
+  #define SPIN_LOCK_UNLOCKED (spinlock_t) { 0 }

WARNING:NEW_TYPEDEFS: do not add new typedefs
#561: FILE: include/linux/spinlock_t.h:30:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#562: FILE: include/linux/spinlock_t.h:31:
+	volatile unsigned long lock;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#564: FILE: include/linux/spinlock_t.h:33:
+#define SPIN_LOCK_UNLOCKED (spinlock_t) { 0 }

WARNING:NEW_TYPEDEFS: do not add new typedefs
#568: FILE: include/linux/spinlock_t.h:37:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#569: FILE: include/linux/spinlock_t.h:38:
+	volatile unsigned long lock;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#570: FILE: include/linux/spinlock_t.h:39:
+	volatile unsigned int babble;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#658: FILE: include/linux/wait_queue.h:1:
+#ifndef _WAIT_QUEUE_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#706: FILE: include/linux/wait_queue.h:49:
+typedef struct __wait_queue {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#717: FILE: include/linux/wait_queue.h:60:
+typedef struct __wait_queue_head {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000464803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 38 warnings, 4 checks, 606 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000464803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
