WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#43: 
(thank you very much to Chris Wright for its usefull comments). This 
                                             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Informations' may be misspelled - perhaps 'Information'?
#45: 
Informations are dumped in /var/log/bank (need to change that). "BANK" 
^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#52: 
and add new accounting informations. Our goal is to provide an 
                       ^^^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
diff -uprN -X elsa_import/dontdiff linux-2.6.6/drivers/elsacct/bank.c linux-2.6.6-elsa/drivers/elsacct/bank.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: drivers/elsacct/bank.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: drivers/elsacct/bank.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: drivers/elsacct/bank.c:7:
+ *  This file implements Enhanced Linux System Accounting. It $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: drivers/elsacct/bank.c:8:
+ *  provides structure and functions to manipulate "BANK". $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/elsacct/bank.c:10:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/bug.h> instead of <asm/bug.h>
#97: FILE: drivers/elsacct/bank.c:24:
+#include <asm/bug.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#100: FILE: drivers/elsacct/bank.c:27:
+ /*********************************************
+ * structures and macros used to manage banks *

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#104: FILE: drivers/elsacct/bank.c:31:
+#define dprintk(format...) printk(format)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#117: FILE: drivers/elsacct/bank.c:44:
+ /********************************************************************
+ * Following functions can be use by a module (=> they are exported) *

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/elsacct/bank.c:50:
+ * @info : generic information attached to a bank (used for accounting) $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#143: FILE: drivers/elsacct/bank.c:70:
+	b = (struct elsa_bank *)kmalloc(sizeof(struct elsa_bank), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*b)...) over kmalloc(sizeof(struct elsa_bank)...)
#143: FILE: drivers/elsacct/bank.c:70:
+	b = (struct elsa_bank *)kmalloc(sizeof(struct elsa_bank), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#145: FILE: drivers/elsacct/bank.c:72:
+		printk("elsa_bank_alloc: cannot allocate space\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_alloc', this function's name, in a string
#145: FILE: drivers/elsacct/bank.c:72:
+		printk("elsa_bank_alloc: cannot allocate space\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#145: FILE: drivers/elsacct/bank.c:72:
+	if (!b) {
+		printk("elsa_bank_alloc: cannot allocate space\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: drivers/elsacct/bank.c:76:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: drivers/elsacct/bank.c:77:
+^I * give it an id $

WARNING:TYPO_SPELLING: 'mechnism' may be misspelled - perhaps 'mechanism'?
#151: FILE: drivers/elsacct/bank.c:78:
+	 * Currently we only used next_bid field but this mechnism 
 	                                                  ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: drivers/elsacct/bank.c:78:
+^I * Currently we only used next_bid field but this mechnism $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: drivers/elsacct/bank.c:80:
+^I * its maximum  $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#162: FILE: drivers/elsacct/bank.c:89:
+		printk("elsa_bank_alloc: can not find bank identifier\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_alloc', this function's name, in a string
#162: FILE: drivers/elsacct/bank.c:89:
+		printk("elsa_bank_alloc: can not find bank identifier\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#164: FILE: drivers/elsacct/bank.c:91:
+		return NULL;
+	} else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around b->data_head
#171: FILE: drivers/elsacct/bank.c:98:
+	INIT_LIST_HEAD(&(b->data_head));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around b->bank_list
#174: FILE: drivers/elsacct/bank.c:101:
+	list_add(&(b->bank_list), &(elsa_broot.bank_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around elsa_broot.bank_head
#174: FILE: drivers/elsacct/bank.c:101:
+	list_add(&(b->bank_list), &(elsa_broot.bank_head));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_alloc', this function's name, in a string
#176: FILE: drivers/elsacct/bank.c:103:
+	dprintk("elsa_bank_alloc: bank #%d created\n", b->bid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: drivers/elsacct/bank.c:110:
+ * $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#197: FILE: drivers/elsacct/bank.c:124:
+	d = (struct elsa_data *)kmalloc(sizeof(struct elsa_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*d)...) over kmalloc(sizeof(struct elsa_data)...)
#197: FILE: drivers/elsacct/bank.c:124:
+	d = (struct elsa_data *)kmalloc(sizeof(struct elsa_data), GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#199: FILE: drivers/elsacct/bank.c:126:
+		printk("elsa_data_alloc: cannot allocate space\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_data_alloc', this function's name, in a string
#199: FILE: drivers/elsacct/bank.c:126:
+		printk("elsa_data_alloc: cannot allocate space\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#199: FILE: drivers/elsacct/bank.c:126:
+	if (!d) {
+		printk("elsa_data_alloc: cannot allocate space\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around d->data_list
#206: FILE: drivers/elsacct/bank.c:133:
+	INIT_LIST_HEAD(&(d->data_list));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around d->bank_list
#207: FILE: drivers/elsacct/bank.c:134:
+	INIT_LIST_HEAD(&(d->bank_list));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/elsacct/bank.c:142:
+ * $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: drivers/elsacct/bank.c:154:
+	BUG_ON(bank == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bank"
#227: FILE: drivers/elsacct/bank.c:154:
+	BUG_ON(bank == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#228: FILE: drivers/elsacct/bank.c:155:
+	BUG_ON(!list_empty(&bank->data_head));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#232: FILE: drivers/elsacct/bank.c:159:
+	if (bank->callback) {
+		(bank->callback) (ELSA_BANK_CALLBACK, bank, NULL);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bank->callback)
#233: FILE: drivers/elsacct/bank.c:160:
+		(bank->callback) (ELSA_BANK_CALLBACK, bank, NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->bank_list
#237: FILE: drivers/elsacct/bank.c:164:
+	list_del(&(bank->bank_list));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_free', this function's name, in a string
#238: FILE: drivers/elsacct/bank.c:165:
+	dprintk("elsa_bank_free: bank #%d removed from the list\n", bank->bid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/elsacct/bank.c:172:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: drivers/elsacct/bank.c:173:
+ * Frees memory space used by data. $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#252: FILE: drivers/elsacct/bank.c:179:
+	BUG_ON(data == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#252: FILE: drivers/elsacct/bank.c:179:
+	BUG_ON(data == NULL);

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#255: FILE: drivers/elsacct/bank.c:182:
+	 * if data->bid is equal to 0, it means that an error occured between
 	                                                      ^^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#262: FILE: drivers/elsacct/bank.c:189:
+		if (b && b->callback) {
+			(b->callback) (ELSA_DATA_CALLBACK, b, data);
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (b->callback)
#263: FILE: drivers/elsacct/bank.c:190:
+			(b->callback) (ELSA_DATA_CALLBACK, b, data);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_data_free', this function's name, in a string
#274: FILE: drivers/elsacct/bank.c:201:
+		    ("elsa_data_free: process #%d removed from the bank#%d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: drivers/elsacct/bank.c:210:
+ * @b  : pointer to a bank $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/elsacct/bank.c:215:
+ * If an error is encountered, a negative value is returned. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/elsacct/bank.c:219:
+ *  $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_add', this function's name, in a string
#301: FILE: drivers/elsacct/bank.c:228:
+		dprintk("elsa_bank_add: Wrong parameters\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#306: FILE: drivers/elsacct/bank.c:233:
+	BUG_ON(b->bid == 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around d->data_list
#317: FILE: drivers/elsacct/bank.c:244:
+	list_add(&(d->data_list), &(b->data_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around b->data_head
#317: FILE: drivers/elsacct/bank.c:244:
+	list_add(&(d->data_list), &(b->data_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around d->bank_list
#321: FILE: drivers/elsacct/bank.c:248:
+	list_add(&(d->bank_list), &(d->process->bank_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around d->process->bank_head
#321: FILE: drivers/elsacct/bank.c:248:
+	list_add(&(d->bank_list), &(d->process->bank_head));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_add', this function's name, in a string
#324: FILE: drivers/elsacct/bank.c:251:
+	dprintk("elsa_bank_add: Add process #%d to bank #%d\n", d->process->pid,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: drivers/elsacct/bank.c:262:
+ * Removes a given process from a given bank. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: drivers/elsacct/bank.c:268:
+^Istruct elsa_bank *b = NULL;^I/*  Used if d is the last $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#342: FILE: drivers/elsacct/bank.c:269:
+	struct elsa_bank *b = NULL;	/*  Used if d is the last 
+					   item of the bank */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#342: FILE: drivers/elsacct/bank.c:269:
+					   item of the bank */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: drivers/elsacct/bank.c:283:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: drivers/elsacct/bank.c:284:
+^I * We must free bank after data otherwise we will miss $

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#358: FILE: drivers/elsacct/bank.c:285:
+	 * accounting informations 
 	              ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: drivers/elsacct/bank.c:285:
+^I * accounting informations $

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#367: FILE: drivers/elsacct/bank.c:294:
+ * elsa_bank_clean - Removes all datas in a given bank
                                  ^^^^^

WARNING:TYPO_SPELLING: 'paramater' may be misspelled - perhaps 'parameter'?
#370: FILE: drivers/elsacct/bank.c:297:
+ * Removes data found in a bank given as paramater. It go through the
                                          ^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_clean', this function's name, in a string
#378: FILE: drivers/elsacct/bank.c:305:
+		dprintk("elsa_bank_clean: bank doesn't exist\n");

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#382: FILE: drivers/elsacct/bank.c:309:
+	/* release all datas and remove the bank */
 	               ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around b->data_head
#383: FILE: drivers/elsacct/bank.c:310:
+	while (!list_empty(&(b->data_head))) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#404: FILE: drivers/elsacct/bank.c:331:
+{
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_process_remove', this function's name, in a string
#407: FILE: drivers/elsacct/bank.c:334:
+		dprintk("elsa_process_remove: process doesn't exist\n");

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#411: FILE: drivers/elsacct/bank.c:338:
+	/* release all datas and remove the bank */
 	               ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->bank_head
#412: FILE: drivers/elsacct/bank.c:339:
+	while (!list_empty(&(p->bank_head))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: drivers/elsacct/bank.c:352:
+ * $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around elsa_broot.bank_head
#432: FILE: drivers/elsacct/bank.c:359:
+	list_for_each(entry, &(elsa_broot.bank_head)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: drivers/elsacct/bank.c:370:
+ * elsa_get_data - Returns a pointer to the container of a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: drivers/elsacct/bank.c:373:
+ * $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->bank_head
#459: FILE: drivers/elsacct/bank.c:386:
+	list_for_each(entry, &(p->bank_head)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: drivers/elsacct/bank.c:401:
+ * $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around b->data_head
#481: FILE: drivers/elsacct/bank.c:408:
+	list_for_each(entry, &(b->data_head)) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#496: FILE: drivers/elsacct/bank.c:423:
+EXPORT_SYMBOL(elsa_data_alloc);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#497: FILE: drivers/elsacct/bank.c:424:
+EXPORT_SYMBOL(elsa_bank_free);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#498: FILE: drivers/elsacct/bank.c:425:
+EXPORT_SYMBOL(elsa_data_free);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#502: FILE: drivers/elsacct/bank.c:429:
+EXPORT_SYMBOL(elsa_bank_remove);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#503: FILE: drivers/elsacct/bank.c:430:
+EXPORT_SYMBOL(elsa_bank_clean);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#504: FILE: drivers/elsacct/bank.c:431:
+EXPORT_SYMBOL(elsa_process_remove);

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#506: FILE: drivers/elsacct/bank.c:433:
+/* get informations */
        ^^^^^^^^^^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#508: FILE: drivers/elsacct/bank.c:435:
+EXPORT_SYMBOL(elsa_get_data);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#509: FILE: drivers/elsacct/bank.c:436:
+EXPORT_SYMBOL(elsa_process_present);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#512: FILE: drivers/elsacct/bank.c:439:
+ /*****************************************************************************
+ * Following functions are called from kernel function.                       *

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: drivers/elsacct/bank.c:444:
+ * elsa_copy_parent_bank - Add a given process to the same banks $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: drivers/elsacct/bank.c:447:
+ * @to: Process to where we will copy information $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: drivers/elsacct/bank.c:448:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: drivers/elsacct/bank.c:449:
+ * Goes through the banks to which "from" process belong and add $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#523: FILE: drivers/elsacct/bank.c:450:
+ * the process in those banks. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: drivers/elsacct/bank.c:452:
+ * It is used when doing a fork (kernel/fork.c - copy_process()). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#532: FILE: drivers/elsacct/bank.c:459:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: drivers/elsacct/bank.c:460:
+^I * First, initialize to->bank_head otherwise, if $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around to->bank_head
#537: FILE: drivers/elsacct/bank.c:464:
+	INIT_LIST_HEAD(&(to->bank_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around from->bank_head
#540: FILE: drivers/elsacct/bank.c:467:
+	list_for_each(entry, &(from->bank_head)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_copy_parent_bank', this function's name, in a string
#545: FILE: drivers/elsacct/bank.c:472:
+		dprintk("elsa_copy_parent_bank: from pid#%d to pid#%d\n",

WARNING:TYPO_SPELLING: 'allocat' may be misspelled - perhaps 'allocate'?
#552: FILE: drivers/elsacct/bank.c:479:
+		/* allocat space to new data */
 		   ^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#555: FILE: drivers/elsacct/bank.c:482:
+			printk("elsa_copy_parent_bank: Cannot create data\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_copy_parent_bank', this function's name, in a string
#555: FILE: drivers/elsacct/bank.c:482:
+			printk("elsa_copy_parent_bank: Cannot create data\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_copy_parent_bank', this function's name, in a string
#567: FILE: drivers/elsacct/bank.c:494:
+			    ("elsa_copy_parent_bank: Destination not found\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#573: FILE: drivers/elsacct/bank.c:500:
+			printk("elsa_copy_parent_bank: Copy error\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_copy_parent_bank', this function's name, in a string
#573: FILE: drivers/elsacct/bank.c:500:
+			printk("elsa_copy_parent_bank: Copy error\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#580: FILE: drivers/elsacct/bank.c:507:
+ /*********************************
+ * functions used to manage /proc *

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#586: FILE: drivers/elsacct/bank.c:513:
+ * Add an entry in /proc to get informations concerning
                                 ^^^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#590: FILE: drivers/elsacct/bank.c:517:
+static void *b_start(struct seq_file *m, loff_t * pos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#619: FILE: drivers/elsacct/bank.c:546:
+static void *b_next(struct seq_file *m, void *v, loff_t * pos)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#634: FILE: drivers/elsacct/bank.c:561:
+		seq_printf(m, "There is no banks\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#639: FILE: drivers/elsacct/bank.c:566:
+		seq_printf(m, "\t");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->data_head
#641: FILE: drivers/elsacct/bank.c:568:
+		if (list_empty(&(bank->data_head))) {

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#642: FILE: drivers/elsacct/bank.c:569:
+			seq_printf(m, "Empty");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#644: FILE: drivers/elsacct/bank.c:571:
+			list_for_each_entry(data, &(bank->data_head), data_list)
+			    seq_printf(m, "%d ", data->process->pid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->data_head
#644: FILE: drivers/elsacct/bank.c:571:
+			list_for_each_entry(data, &(bank->data_head), data_list)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#648: FILE: drivers/elsacct/bank.c:575:
+		seq_printf(m, "\n");

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#659: FILE: drivers/elsacct/bank.c:586:
+struct seq_operations bankinfo_op = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#671: FILE: drivers/elsacct/bank.c:598:
+struct file_operations proc_bankinfo_ops = {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#678: FILE: drivers/elsacct/bank.c:605:
+EXPORT_SYMBOL(proc_bankinfo_ops);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#685: FILE: drivers/elsacct/elsacct.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: drivers/elsacct/elsacct.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: drivers/elsacct/elsacct.c:7:
+ *  This module implements Enhanced Linux System Accounting. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: drivers/elsacct/elsacct.c:8:
+ *  We implement a character driver to transfer data between $

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#693: FILE: drivers/elsacct/elsacct.c:9:
+ *  BANK that are in the kernel adress space and the user 
                                 ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: drivers/elsacct/elsacct.c:9:
+ *  BANK that are in the kernel adress space and the user $

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#694: FILE: drivers/elsacct/elsacct.c:10:
+ *  adress space. 
     ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: drivers/elsacct/elsacct.c:10:
+ *  adress space. $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#713: FILE: drivers/elsacct/elsacct.c:29:
+#include <asm/uaccess.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#716: FILE: drivers/elsacct/elsacct.c:32:
+#define dprintk(format...) printk(format)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: drivers/elsacct/elsacct.c:46:
+ *  is a 13-bit fraction with a 3-bit (base 8) exponent. $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#744: FILE: drivers/elsacct/elsacct.c:60:
+	exp = rnd = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#768: FILE: drivers/elsacct/elsacct.c:84:
+ /**************************
+ * Accounting is done here *

WARNING:TYPO_SPELLING: 'succeded' may be misspelled - perhaps 'succeeded'?
#779: FILE: drivers/elsacct/elsacct.c:95:
+ * It returns 0 if succeded, negative value otherwise
                    ^^^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#796: FILE: drivers/elsacct/elsacct.c:112:
+	if (IS_ERR(file)) {
+		return (PTR_ERR(file));
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#797: FILE: drivers/elsacct/elsacct.c:113:
+		return (PTR_ERR(file));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#812: FILE: drivers/elsacct/elsacct.c:128:
+^I * to the accounting file. $

WARNING:TYPO_SPELLING: 'succeded' may be misspelled - perhaps 'succeeded'?
#832: FILE: drivers/elsacct/elsacct.c:148:
+ * It returns 0 if succeded, negative value otherwise
                    ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#869: FILE: drivers/elsacct/elsacct.c:185:
+		BUG_ON(b == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b"
#869: FILE: drivers/elsacct/elsacct.c:185:
+		BUG_ON(b == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#873: FILE: drivers/elsacct/elsacct.c:189:
+		BUG_ON(b == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b"
#873: FILE: drivers/elsacct/elsacct.c:189:
+		BUG_ON(b == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#874: FILE: drivers/elsacct/elsacct.c:190:
+		BUG_ON(d == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#874: FILE: drivers/elsacct/elsacct.c:190:
+		BUG_ON(d == NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#878: FILE: drivers/elsacct/elsacct.c:194:
+		printk("do_elsacct: unknown opcode\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_elsacct', this function's name, in a string
#878: FILE: drivers/elsacct/elsacct.c:194:
+		printk("do_elsacct: unknown opcode\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#887: FILE: drivers/elsacct/elsacct.c:203:
+ /**************************************************************
+ * functions used to manipulate the device                     *

ERROR:TRAILING_WHITESPACE: trailing whitespace
#893: FILE: drivers/elsacct/elsacct.c:209:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#894: FILE: drivers/elsacct/elsacct.c:210:
+ * The process context, represented as a typical driver method - ioctl(), must $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#895: FILE: drivers/elsacct/elsacct.c:211:
+ * use spin_lock_irq() because it knows that interrupts are always enabled while $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#950: FILE: drivers/elsacct/elsacct.c:266:
+		} else {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#982: FILE: drivers/elsacct/elsacct.c:298:
+^I^I * To add a process to a bank we need to perform $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_ioctl', this function's name, in a string
#1027: FILE: drivers/elsacct/elsacct.c:343:
+			"elsacct_ioctl: 0x%x unsupported ioctl command\n", cmd);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1034: FILE: drivers/elsacct/elsacct.c:350:
+struct file_operations elsa_fops = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1041: FILE: drivers/elsacct/elsacct.c:357:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1042: FILE: drivers/elsacct/elsacct.c:358:
+ * Initializes "callbacks" to bank and data. Those $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_init', this function's name, in a string
#1055: FILE: drivers/elsacct/elsacct.c:371:
+			"elsacct_init: can't get major %d\n", elsa_major);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: drivers/elsacct/elsacct.c:375:
+^I/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1086: FILE: drivers/elsacct/elsacct.c:402:
+ /************************
+ * Module initialization *

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1092: FILE: drivers/elsacct/elsacct.c:408:
+ * Display a message in dmesg and call the real $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: drivers/elsacct/elsacct.c:420:
+ * Display a message in dmesg $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1134: FILE: drivers/elsacct/Kconfig:8:
+config BANK
+	bool "ELSA bank support"
+	depends on EXPERIMENTAL
+	default n
+	---help---
+	  BANK structures are needed if you want to do enhanced 
+	  linux system accounting
+
+	  say Y if you want to use Enhanced Linux Sytem Accounting
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1139: FILE: drivers/elsacct/Kconfig:13:
+^I  BANK structures are needed if you want to do enhanced $

WARNING:TYPO_SPELLING: 'Sytem' may be misspelled - perhaps 'System'?
#1142: FILE: drivers/elsacct/Kconfig:16:
+	  say Y if you want to use Enhanced Linux Sytem Accounting
 	                                          ^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1144: FILE: drivers/elsacct/Kconfig:18:
+config BANK_DEBUG
+	bool "ELSA bank debugging support"
+	depends on BANK
+	default n
+	---help---
+          This option allows you to enable debugging output when using 
+	  banks structure. Currently, such structure is used by Enhanced
+	  Linux System Accounting (ELSA). Informations are sent to the 
+	  console.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1149: FILE: drivers/elsacct/Kconfig:23:
+          This option allows you to enable debugging output when using $

WARNING:TYPO_SPELLING: 'Informations' may be misspelled - perhaps 'Information'?
#1151: FILE: drivers/elsacct/Kconfig:25:
+	  Linux System Accounting (ELSA). Informations are sent to the 
 	                                  ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1151: FILE: drivers/elsacct/Kconfig:25:
+^I  Linux System Accounting (ELSA). Informations are sent to the $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1154: FILE: drivers/elsacct/Kconfig:28:
+config ELSACCT
+	tristate "Enhanced Linux System Accounting"
+	depends on EXPERIMENTAL
+	requires BANK
+	default n
+	---help---
+  	  The goal of accounting is to collect and report the use of various 
+  	  system resources by applications. Informations, like process time, 
+  	  CPU usage, connect time or disk space usage, provides data that helps 
+  	  the system to adjust the use of resources between processes.
+  	
+  	  The current BSD-like process accounting that already exists in Linux 
+  	  collects informations on individual users or groups of users. The ELSA 
+  	  project aims to improve and extend the monitoring of resources with 
+  	  different criteria like groups of processes. Another target for this 
+  	  project is to give Linux an homogeneous set of commands for all kinds 
+  	  of accounting (memory, CPU and I/O).
+  	
+     	  To compile this driver as a module, choose M here: the module will be 
+  	  called elsa-acct.
+  
+  	  Documentation about ELSA is available from
+  	  <http://elsa.sourceforge.net>
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1160: FILE: drivers/elsacct/Kconfig:34:
+  ^I  The goal of accounting is to collect and report the use of various $

WARNING:TYPO_SPELLING: 'Informations' may be misspelled - perhaps 'Information'?
#1161: FILE: drivers/elsacct/Kconfig:35:
+  	  system resources by applications. Informations, like process time, 
   	                                    ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1161: FILE: drivers/elsacct/Kconfig:35:
+  ^I  system resources by applications. Informations, like process time, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1162: FILE: drivers/elsacct/Kconfig:36:
+  ^I  CPU usage, connect time or disk space usage, provides data that helps $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1164: FILE: drivers/elsacct/Kconfig:38:
+  ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1165: FILE: drivers/elsacct/Kconfig:39:
+  ^I  The current BSD-like process accounting that already exists in Linux $

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#1166: FILE: drivers/elsacct/Kconfig:40:
+  	  collects informations on individual users or groups of users. The ELSA 
   	           ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1166: FILE: drivers/elsacct/Kconfig:40:
+  ^I  collects informations on individual users or groups of users. The ELSA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1167: FILE: drivers/elsacct/Kconfig:41:
+  ^I  project aims to improve and extend the monitoring of resources with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1168: FILE: drivers/elsacct/Kconfig:42:
+  ^I  different criteria like groups of processes. Another target for this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: drivers/elsacct/Kconfig:43:
+  ^I  project is to give Linux an homogeneous set of commands for all kinds $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1171: FILE: drivers/elsacct/Kconfig:45:
+  ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1172: FILE: drivers/elsacct/Kconfig:46:
+     ^I  To compile this driver as a module, choose M here: the module will be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1174: FILE: drivers/elsacct/Kconfig:48:
+  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1178: FILE: drivers/elsacct/Kconfig:52:
+config ELSACCT_DEBUG
+	bool "ELSA accounting debugging support"
+	depends on ELSACCT
+	default n
+	---help---
+          This option allows you to enable debugging output when using 
+	  enhanced linux system accounting. Informations are sent to the 
+	  console.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1183: FILE: drivers/elsacct/Kconfig:57:
+          This option allows you to enable debugging output when using $

WARNING:TYPO_SPELLING: 'Informations' may be misspelled - perhaps 'Information'?
#1184: FILE: drivers/elsacct/Kconfig:58:
+	  enhanced linux system accounting. Informations are sent to the 
 	                                    ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1184: FILE: drivers/elsacct/Kconfig:58:
+^I  enhanced linux system accounting. Informations are sent to the $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1221: FILE: include/linux/bank.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1223: FILE: include/linux/bank.h:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1226: FILE: include/linux/bank.h:6:
+ *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1227: FILE: include/linux/bank.h:7:
+ *  Provides structures and functions to manipulate "BANK". $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1228: FILE: include/linux/bank.h:8:
+ *  They are containers that store a set of processes. $

WARNING:TYPO_SPELLING: 'Informations' may be misspelled - perhaps 'Information'?
#1230: FILE: include/linux/bank.h:10:
+ *  mations are stored in a file. Informations are about 
                                   ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1230: FILE: include/linux/bank.h:10:
+ *  mations are stored in a file. Informations are about $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1232: FILE: include/linux/bank.h:12:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1233: FILE: include/linux/bank.h:13:
+ *  The idea is to provide a mechanism that allows to group $

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#1239: FILE: include/linux/bank.h:19:
+ *    o When the last process of a bank exits, informations about all processes
                                                ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1242: FILE: include/linux/bank.h:22:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1245: FILE: include/linux/bank.h:25:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1246: FILE: include/linux/bank.h:26:
+ *                              BANK #1           BANK #2  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1247: FILE: include/linux/bank.h:27:
+ *                             elsa_bank       elsa_bank  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1248: FILE: include/linux/bank.h:28:
+ *         elsa_broot         -----------       ----------- $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1261: FILE: include/linux/bank.h:41:
+ *                                   |  ================= $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1262: FILE: include/linux/bank.h:42:
+ *    PROCESS            DATA #1     |     DATA #2       |  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: include/linux/bank.h:78:
+^I/* $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'root' - possible side-effects?
#1307: FILE: include/linux/bank.h:87:
+#define BANK_ROOT_INIT(root) \
+{							     \
+	.next_bid 	= 1,                                 \
+	.freebid_head 	= LIST_HEAD_INIT(root.freebid_head), \
+	.bank_head	= LIST_HEAD_INIT(root.bank_head),    \
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1309: FILE: include/linux/bank.h:89:
+^I.next_bid ^I= 1,                                 \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1310: FILE: include/linux/bank.h:90:
+^I.freebid_head ^I= LIST_HEAD_INIT(root.freebid_head), \$

WARNING:SPACING: Unnecessary space before function pointer arguments
#1324: FILE: include/linux/bank.h:104:
+	int (*callback) (int, struct elsa_bank *, struct elsa_data *);	/* callback */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1324: FILE: include/linux/bank.h:104:
+	int (*callback) (int, struct elsa_bank *, struct elsa_data *);	/* callback */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct elsa_bank *' should also have an identifier name
#1324: FILE: include/linux/bank.h:104:
+	int (*callback) (int, struct elsa_bank *, struct elsa_data *);	/* callback */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct elsa_data *' should also have an identifier name
#1324: FILE: include/linux/bank.h:104:
+	int (*callback) (int, struct elsa_bank *, struct elsa_data *);	/* callback */

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#1326: FILE: include/linux/bank.h:106:
+	struct list_head data_head;	/* head of the list of datas in the 
 	                           	                       ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1326: FILE: include/linux/bank.h:106:
+^Istruct list_head data_head;^I/* head of the list of datas in the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1327: FILE: include/linux/bank.h:107:
+	struct list_head data_head;	/* head of the list of datas in the 
+					   bank */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1327: FILE: include/linux/bank.h:107:
+					   bank */

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#1333: FILE: include/linux/bank.h:113:
+	struct list_head data_list;	/* link between datas in a bank */
 	                           	                ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: include/linux/bank.h:114:
+^Istruct list_head bank_list;^I/* used by a process to link banks $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1335: FILE: include/linux/bank.h:115:
+	struct list_head bank_list;	/* used by a process to link banks 
+					   that contains it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1335: FILE: include/linux/bank.h:115:
+					   that contains it */

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1339: FILE: include/linux/bank.h:119:
+extern struct file_operations proc_bankinfo_ops;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1343: FILE: include/linux/bank.h:123:
+ /*********************************************
+ * Following functions can be use by a module *

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1355: FILE: include/linux/bank.h:135:
+/* $

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#1356: FILE: include/linux/bank.h:136:
+ * manipulate datas:
               ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1371: FILE: include/linux/bank.h:151:
+ /*****************************************************************************
+ * Following functions are called from kernel function.                       *

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1376: FILE: include/linux/bank.h:156:
+extern void elsa_copy_parent_bank(struct task_struct *from,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1378: FILE: include/linux/bank.h:158:
+extern int elsa_process_remove(struct task_struct *p);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1380: FILE: include/linux/bank.h:160:
+#define elsa_copy_parent_bank(a,b) do {} while(0)
                                ^

ERROR:SPACING: space required before the open parenthesis '('
#1380: FILE: include/linux/bank.h:160:
+#define elsa_copy_parent_bank(a,b) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1381: FILE: include/linux/bank.h:161:
+#define elsa_bank_remove_all(a)    do {} while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1389: FILE: include/linux/elsacct.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1391: FILE: include/linux/elsacct.h:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1394: FILE: include/linux/elsacct.h:6:
+ *      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1403: FILE: include/linux/elsacct.h:15:
+#define ELSACCT_BANK_REMOVE^I0x353801^I/* Remove one data from a bank, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1404: FILE: include/linux/elsacct.h:16:
+						 * if #BID == 0 remove from all banks */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1407: FILE: include/linux/elsacct.h:19:
+						 * if #BID == 0 create the bank */

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#1409: FILE: include/linux/elsacct.h:21:
+/* Currently, informations are stored in the same file and we cannot chose it */
               ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1417: FILE: include/linux/elsacct.h:29:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1418: FILE: include/linux/elsacct.h:30:
+ * Currently, we take as a starting point the BSD-style $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1420: FILE: include/linux/elsacct.h:32:
+ * buffer. (of course we need to change this) $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1432: FILE: include/linux/elsacct.h:44:
+#define ELSA_ACCT_INIT ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1433: FILE: include/linux/elsacct.h:45:
+{ ^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1434: FILE: include/linux/elsacct.h:46:
+^I.eac_bid ^I= 0,^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1439: FILE: include/linux/elsacct.h:51:
+^I.eac_minflt ^I= 0,^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1440: FILE: include/linux/elsacct.h:52:
+^I.eac_majflt ^I= 0,^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1486: FILE: kernel/fork.c:1014:
+        /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#1487: FILE: kernel/fork.c:1015:
+         * Child is in the same BANK as parent. So we copy the list of banks$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1488: FILE: kernel/fork.c:1016:
+         * from current to p. We can not just counting reference on the structure$

WARNING:TYPO_SPELLING: 'evoluate' may be misspelled - perhaps 'evaluate'?
#1489: FILE: kernel/fork.c:1017:
+         * because the may evoluate in differents way. I think it's easier to
                            ^^^^^^^^

WARNING:TYPO_SPELLING: 'differents' may be misspelled - perhaps 'different'?
#1489: FILE: kernel/fork.c:1017:
+         * because the may evoluate in differents way. I think it's easier to
                                        ^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1489: FILE: kernel/fork.c:1017:
+         * because the may evoluate in differents way. I think it's easier to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1490: FILE: kernel/fork.c:1018:
+         * do like this but maybe I'm wrong... -- guillaume$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1491: FILE: kernel/fork.c:1019:
+         *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1492: FILE: kernel/fork.c:1020:
+         * We put that call outside lock_irq because elsa_copy_parent_bank$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1493: FILE: kernel/fork.c:1021:
+         * uses kmalloc(GFP_KERNEL). Therefore, as we modify task_struct,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1494: FILE: kernel/fork.c:1022:
+         * we manage lock_irq ourselves. -- guillaume$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1495: FILE: kernel/fork.c:1023:
+         *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1496: FILE: kernel/fork.c:1024:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1497: FILE: kernel/fork.c:1025:
+        elsa_copy_parent_bank(current, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1497: FILE: kernel/fork.c:1025:
+        elsa_copy_parent_bank(current, p);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1498: FILE: kernel/fork.c:1026:
+^I$

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#1510: FILE: Makefile:4:
+EXTRAVERSION = -elsa
 ^^^^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282467.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 109 errors, 129 warnings, 34 checks, 1392 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282467.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
