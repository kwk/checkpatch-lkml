WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
I have made a patch to enable file creation greater than 2TB. I tested it using sparse files and it works good.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#70: FILE: fs/ext3/inode.c:909:
+				sector_t block, int create, int * errp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: fs/ext3/inode.c:2547:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: fs/ext3/inode.c:2636:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#134: FILE: fs/ext3/super.c:1007:
+	res += 1LL << (3*(bits-2));
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#134: FILE: fs/ext3/super.c:1007:
+	res += 1LL << (3*(bits-2));
 	                      ^

ERROR:SPACING: spaces required around that '<<=' (ctx:WxV)
#135: FILE: fs/ext3/super.c:1008:
+	res <<=bits;
 	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: fs/Kconfig:129:
+^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: include/linux/ext3_fs.h:725:
+extern struct buffer_head * ext3_getblk (handle_t *, struct inode *, sector_t, int, int *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: include/linux/ext3_fs.h:725:
+extern struct buffer_head * ext3_getblk (handle_t *, struct inode *, sector_t, int, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/ext3_fs.h:725:
+extern struct buffer_head * ext3_getblk (handle_t *, struct inode *, sector_t, int, int *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#184: FILE: include/linux/ext3_fs.h:725:
+extern struct buffer_head * ext3_getblk (handle_t *, struct inode *, sector_t, int, int *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#184: FILE: include/linux/ext3_fs.h:725:
+extern struct buffer_head * ext3_getblk (handle_t *, struct inode *, sector_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#184: FILE: include/linux/ext3_fs.h:725:
+extern struct buffer_head * ext3_getblk (handle_t *, struct inode *, sector_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#184: FILE: include/linux/ext3_fs.h:725:
+extern struct buffer_head * ext3_getblk (handle_t *, struct inode *, sector_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#184: FILE: include/linux/ext3_fs.h:725:
+extern struct buffer_head * ext3_getblk (handle_t *, struct inode *, sector_t, int, int *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#185: FILE: include/linux/ext3_fs.h:726:
+extern struct buffer_head * ext3_bread (handle_t *, struct inode *, sector_t, int, int *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#185: FILE: include/linux/ext3_fs.h:726:
+extern struct buffer_head * ext3_bread (handle_t *, struct inode *, sector_t, int, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: include/linux/ext3_fs.h:726:
+extern struct buffer_head * ext3_bread (handle_t *, struct inode *, sector_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#185: FILE: include/linux/ext3_fs.h:726:
+extern struct buffer_head * ext3_bread (handle_t *, struct inode *, sector_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#185: FILE: include/linux/ext3_fs.h:726:
+extern struct buffer_head * ext3_bread (handle_t *, struct inode *, sector_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#185: FILE: include/linux/ext3_fs.h:726:
+extern struct buffer_head * ext3_bread (handle_t *, struct inode *, sector_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#185: FILE: include/linux/ext3_fs.h:726:
+extern struct buffer_head * ext3_bread (handle_t *, struct inode *, sector_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#185: FILE: include/linux/ext3_fs.h:726:
+extern struct buffer_head * ext3_bread (handle_t *, struct inode *, sector_t, int, int *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272114.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 13 warnings, 5 checks, 124 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272114.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
