CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#83: FILE: arch/i386/kernel/cpu/common.c:592:
+	struct Xgt_desc_struct *cpu_gdt_descr = &per_cpu(cpu_gdt_descr, cpu);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#97: FILE: arch/i386/kernel/cpu/common.c:606:
+		BUG_ON(gdt != NULL || pda != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "gdt"
#97: FILE: arch/i386/kernel/cpu/common.c:606:
+		BUG_ON(gdt != NULL || pda != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pda"
#97: FILE: arch/i386/kernel/cpu/common.c:606:
+		BUG_ON(gdt != NULL || pda != NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#107: FILE: arch/i386/kernel/cpu/common.c:616:
+		/* GDT and PDA might already have been allocated if
+		   this is a CPU hotplug re-insertion. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#107: FILE: arch/i386/kernel/cpu/common.c:616:
+		   this is a CPU hotplug re-insertion. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gdt"
#108: FILE: arch/i386/kernel/cpu/common.c:617:
+		if (gdt == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pda"
#111: FILE: arch/i386/kernel/cpu/common.c:620:
+		if (pda == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: arch/i386/kernel/cpu/common.c:629:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: arch/i386/kernel/cpu/common.c:630:
+ ^Icpu_gdt_descr->address = (unsigned long)gdt;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: arch/i386/kernel/cpu/common.c:630:
+ ^Icpu_gdt_descr->address = (unsigned long)gdt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/i386/kernel/cpu/common.c:630:
+ ^Icpu_gdt_descr->address = (unsigned long)gdt;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#135: FILE: arch/i386/kernel/cpu/common.c:644:
+/* Initialize the CPU's GDT and PDA.  The boot CPU does this for
+   itself, but secondaries find this done for them. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#135: FILE: arch/i386/kernel/cpu/common.c:644:
+   itself, but secondaries find this done for them. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#144: FILE: arch/i386/kernel/cpu/common.c:653:
+	/* For non-boot CPUs, the GDT and PDA should already have been
+	   allocated. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#144: FILE: arch/i386/kernel/cpu/common.c:653:
+	   allocated. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#146: FILE: arch/i386/kernel/cpu/common.c:655:
+		printk(KERN_CRIT "CPU%d failed to allocate GDT or PDA\n", cpu);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: arch/i386/kernel/cpu/common.c:662:
+	BUG_ON(gdt == NULL || pda == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gdt"
#153: FILE: arch/i386/kernel/cpu/common.c:662:
+	BUG_ON(gdt == NULL || pda == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pda"
#153: FILE: arch/i386/kernel/cpu/common.c:662:
+	BUG_ON(gdt == NULL || pda == NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/i386/kernel/cpu/common.c:668:
+ ^Imemcpy(gdt, cpu_gdt_table, GDT_SIZE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: arch/i386/kernel/cpu/common.c:668:
+ ^Imemcpy(gdt, cpu_gdt_table, GDT_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/i386/kernel/cpu/common.c:668:
+ ^Imemcpy(gdt, cpu_gdt_table, GDT_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/i386/kernel/cpu/common.c:672:
+ ^I*(__u64 *)(&gdt[GDT_ENTRY_ESPFIX_SS]) |=$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: arch/i386/kernel/cpu/common.c:672:
+ ^I*(__u64 *)(&gdt[GDT_ENTRY_ESPFIX_SS]) |=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/i386/kernel/cpu/common.c:672:
+ ^I*(__u64 *)(&gdt[GDT_ENTRY_ESPFIX_SS]) |=$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: arch/i386/kernel/cpu/common.c:693:
+	struct tss_struct * t = &per_cpu(init_tss, cpu);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#189: FILE: arch/i386/kernel/cpu/common.c:698:
+	/* Reinit these anyway, even if they've already been done (on
+	   the boot CPU, this will transition from the boot gdt+pda to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#190: FILE: arch/i386/kernel/cpu/common.c:699:
+	   the real ones). */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#194: FILE: arch/i386/kernel/cpu/common.c:703:
+		printk(KERN_WARNING "CPU#%d already initialized!\n", cpu);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#195: FILE: arch/i386/kernel/cpu/common.c:704:
+		for (;;) local_irq_enable();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#198: FILE: arch/i386/kernel/cpu/common.c:707:
+	printk(KERN_INFO "Initializing CPU#%d\n", cpu);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#201: FILE: arch/i386/kernel/cpu/common.c:710:
+		clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#201: FILE: arch/i386/kernel/cpu/common.c:710:
+		clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 		                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#201: FILE: arch/i386/kernel/cpu/common.c:710:
+		clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 		                                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#203: FILE: arch/i386/kernel/cpu/common.c:712:
+		printk(KERN_NOTICE "Disabling TSC...\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#217: FILE: arch/i386/kernel/cpu/common.c:726:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: arch/i386/kernel/cpu/common.c:730:
+	set_tss_desc(cpu,t);
 	                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#368: FILE: arch/i386/kernel/cpu/common.c:779:
+	/* Set up the real GDT and PDA, so we can transition from the
+	   boot versions. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#368: FILE: arch/i386/kernel/cpu/common.c:779:
+	   boot versions. */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#383: FILE: arch/i386/kernel/smpboot.c:536:
 static void __devinit start_secondary(void *unused)

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#403: FILE: arch/i386/kernel/smpboot.c:602:
+		:"m" (current->thread.esp),"m" (current->thread.eip));
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: arch/i386/kernel/smpboot.c:602:
+		:"m" (current->thread.esp),"m" (current->thread.eip));
 		                          ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#411: FILE: arch/i386/kernel/smpboot.c:610:
+extern struct i386_pda *start_pda;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#412: FILE: arch/i386/kernel/smpboot.c:611:
+extern struct Xgt_desc_struct cpu_gdt_descr;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#432: FILE: arch/i386/kernel/smpboot.c:951:
+	/* Pre-allocate and initialize the CPU's GDT and PDA so it
+	   doesn't have to do any memory allocation during the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#433: FILE: arch/i386/kernel/smpboot.c:952:
+	   delicate CPU-bringup phase. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#435: FILE: arch/i386/kernel/smpboot.c:954:
+		printk(KERN_INFO "Couldn't allocate GDT/PDA for CPU %d\n", cpu);

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#479: FILE: include/asm-i386/pda.h:32:
+			    :"ri" ((T__)val),				\
 			    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#503: FILE: include/asm-i386/pda.h:78:
+#define pda_addr(field)							\
+	((typeof(_proxy_pda.field) *)((unsigned char *)read_pda(_pda) + \
+				      pda_offset(field)))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#516: FILE: include/asm-i386/processor.h:730:
+extern int init_gdt(int cpu, struct task_struct *idle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#517: FILE: include/asm-i386/processor.h:731:
+extern void secondary_cpu_init(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000035015.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 29 warnings, 13 checks, 440 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000035015.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
