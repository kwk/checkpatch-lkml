WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .19470-linux-2.5.66-bk2/include/linux/module.h .19470-linux-2.5.66-bk2.updated/include/linux/module.h

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "module_text_address"
#73: FILE: kernel/extable.c:41:
+	return module_text_address(addr) != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#89: FILE: kernel/module.c:559:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#218: FILE: kernel/module.c:79:
+extern const struct kernel_symbol __start___ksymtab[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#219: FILE: kernel/module.c:80:
+extern const struct kernel_symbol __stop___ksymtab[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#220: FILE: kernel/module.c:81:
+extern const struct kernel_symbol __start___ksymtab_gpl[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#221: FILE: kernel/module.c:82:
+extern const struct kernel_symbol __stop___ksymtab_gpl[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#222: FILE: kernel/module.c:83:
+extern const unsigned long __start___kcrctab[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#223: FILE: kernel/module.c:84:
+extern const unsigned long __start___kcrctab_gpl[];

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#228: FILE: kernel/module.c:89:
+#define symversion(base, idx) ((base) ? ((base) + (idx)) : NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: kernel/module.c:101:
+^I/* Core kernel first. */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#256: FILE: kernel/module.c:103:
+	for (i = 0; __start___ksymtab+i < __stop___ksymtab; i++) {
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#263: FILE: kernel/module.c:110:
+		for (i = 0; __start___ksymtab_gpl+i<__stop___ksymtab_gpl; i++)
 		                                 ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#263: FILE: kernel/module.c:110:
+		for (i = 0; __start___ksymtab_gpl+i<__stop___ksymtab_gpl; i++)
 		                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: kernel/module.c:117:
+^I/* Now try modules. */ $

ERROR:SPACING: spaces required around that '&&' (ctx:VxO)
#427: FILE: kernel/module.c:1338:
+	if ((mod->num_ksyms&&!crcindex) || (mod->num_gpl_syms&&!gplcrcindex)) {
 	                   ^

ERROR:SPACING: spaces required around that '&&' (ctx:VxO)
#427: FILE: kernel/module.c:1338:
+	if ((mod->num_ksyms&&!crcindex) || (mod->num_gpl_syms&&!gplcrcindex)) {
 	                                                     ^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#552: FILE: kernel/extable.c:16:
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#555: FILE: kernel/extable.c:19:
+#include <asm/uaccess.h>

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: kernel/module.c:1311:
+  ^I/* Set up exception table */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#597: FILE: kernel/module.c:1311:
+  ^I/* Set up exception table */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: kernel/module.c:1311:
+  ^I/* Set up exception table */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381400.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 11 warnings, 4 checks, 506 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381400.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
