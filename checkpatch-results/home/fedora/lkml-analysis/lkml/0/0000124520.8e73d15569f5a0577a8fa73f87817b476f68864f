CHECK:SPACING: No space is necessary after a cast
#54: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2602:
+		ret = ipath_get_stats((struct infinipath_stats *) a);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#57: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2605:
+		ret = ipath_get_unit_counters((struct infinipath_getunitcounters *) a);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#73: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2621:
+	uint32_t tmp, i, nactive = 0;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#98: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2646:
+			return (long)ipath_ctrl_ioctl(fp, cmd, a);
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#98: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2646:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#107: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2655:
+	if ((devdata[unit].ipath_flags & IPATH_PRESENT)
+	    && (cmd == IPATH_GETCOUNTERS || cmd == IPATH_GETSTATS

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#108: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2656:
+	    && (cmd == IPATH_GETCOUNTERS || cmd == IPATH_GETSTATS
+		|| cmd == IPATH_READ_EEPROM || cmd == IPATH_WRITE_EEPROM)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#116: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2664:
+	} else
+	    if ((devdata[unit].

CHECK:BRACES: Unbalanced braces around else statement
#116: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2664:
+	} else

WARNING:TABSTOP: Statements should start on a tabstop
#117: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2665:
+	    if ((devdata[unit].

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[unit].ipath_flags'
#118: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2666:
+	    if ((devdata[unit].
+		 ipath_flags & (IPATH_LINKDOWN | IPATH_LINKUNK))) {

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:SPACING: No space is necessary after a cast
#131: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2679:
+		ret = ipath_do_user_init(pd, (struct ipath_user_info *) a);

CHECK:SPACING: No space is necessary after a cast
#135: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2683:
+		ret = ipath_get_baseinfo(pd, (struct ipath_base_info *) a);

WARNING:REPEATED_WORD: Possible repeated word: 'is'
#140: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2688:
+		 * and the number of active chips.  This is is used for

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#145: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2693:
+			if ((devdata[i].ipath_flags & IPATH_PRESENT)
+			    && devdata[i].ipath_kregbase

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#146: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2694:
+			    && devdata[i].ipath_kregbase
+			    && devdata[i].ipath_lid

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#147: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2695:
+			    && devdata[i].ipath_lid
+			    && !(devdata[i].ipath_flags &

ERROR:SPACING: space required before the open parenthesis '('
#151: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2699:
+		if(copy_to_user((void *)a, &tmp, sizeof(unit)))

CHECK:SPACING: No space is necessary after a cast
#168: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2716:
+		ret = ipath_get_stats((struct infinipath_stats *) a);

CHECK:SPACING: No space is necessary after a cast
#171: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2719:
+		ret = ipath_get_unit_counters((struct infinipath_getunitcounters *) a);

CHECK:SPACING: No space is necessary after a cast
#174: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2722:
+		ret = ipath_set_partkey(pd, (uint16_t) a);

CHECK:SPACING: No space is necessary after a cast
#177: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2725:
+		ret = ipath_manage_rcvq(pd, (uint16_t) a);

CHECK:SPACING: No space is necessary after a cast
#191: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2739:
+		ret = ipath_wait_intr(pd, (uint32_t) a);

CHECK:BRACES: braces {} should be used on all arms of this statement
#210: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2758:
+	if (!whence)
[...]
+	else if (whence == 1) {
[...]
+	} else
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#211: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2759:
+		ret = fp->f_pos = off;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#215: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2763:
+	} else

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#231: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2779:
+static struct vm_operations_struct ipath_vmops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#250: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2798:
+			uint64_t pgaddr, ureg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2820:
+				unsigned long phys;
+				if ((vm->vm_end - vm->vm_start) > PAGE_SIZE) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[pd->port_unit].ipath_physaddr'
#280: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2828:
+					    devdata[pd->port_unit].
+					    ipath_physaddr + ureg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#301: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2849:
+				unsigned long phys;
+				if ((vm->vm_end - vm->vm_start) >

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[pd->port_unit].ipath_physaddr'
#311: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2859:
+					    devdata[pd->port_unit].
+					    ipath_physaddr + pd->port_piobufs;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2869:
+#if defined (pgprot_writecombine) && defined(_PAGE_MA_WC)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'vm->vm_page_prot'
#325: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2873:
+					    pgprot_writecombine(vm->
+								vm_page_prot);

CHECK:SPACING: No space is necessary after a cast
#352: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2900:
+			} else if (pgaddr == (uint64_t) pd->port_rcvegr_phys) {

CHECK:SPACING: No space is necessary after a cast
#381: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2929:
+					    (void *)(3 | (uint64_t) pd);

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#384: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2932:
+						    ("Can't map eager buffers as writable (flags=%lx)\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#402: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2950:
+			} else if (pgaddr == (uint64_t) pd->port_rcvhdrq_phys) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[pd->port_unit].ipath_rcvhdrcnt'
#414: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2962:
+				    round_up(devdata[pd->port_unit].
+					     ipath_rcvhdrcnt *

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[pd->port_unit].ipath_rcvhdrentsize'
#416: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2964:
+					     devdata[pd->port_unit].
+					     ipath_rcvhdrentsize *

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[pd->port_unit].ipath_pioavailregs_phys'
#437: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2985:
+				 devdata[pd->port_unit].
+				 ipath_pioavailregs_phys) {

CHECK:BRACES: Unbalanced braces around else statement
#480: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3028:
+	} else			/* something very wrong */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#499: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3047:
+	uint32_t which, chunk;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#504: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3052:
+	if (!(avirt = (unsigned long)vma->vm_private_data)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#542: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3090:
+		pd = (ipath_portdata *) avirt;

CHECK:BRACES: Unbalanced braces around else statement
#580: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3128:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#589: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3137:
+static void ipath_bad_intr(const ipath_type t, uint32_t * unexpectp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#653: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3201:
+				printk(".");

CHECK:BRACES: Unbalanced braces around else statement
#654: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3202:
+		} else

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#664: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3212:
+	uint32_t istat = ipath_kget_kreg32(t, kr_intstatus);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#665: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3213:
+	uint64_t estat = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#666: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3214:
+	static unsigned unexpected = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#666: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3214:
+	static unsigned unexpected = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: No space is necessary after a cast
#698: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3246:
+				  istat & (uint32_t) ~ infinipath_i_bitsextant);

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#698: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3246:
+				  istat & (uint32_t) ~ infinipath_i_bitsextant);
 				                     ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#747: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3295:
+			uint32_t i;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#756: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3304:
+				if (dd->ipath_pd[i]
+				    && dd->ipath_portpiowait & (1U << i)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_portpiowait'
#759: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3307:
+							  &dd->
+							  ipath_portpiowait);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#760: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3308:
+					if (dd->ipath_pd[i]->
+					    port_flag & IPATH_PORT_WAITING_PIO)
+					{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pd[i]->port_flag'
#761: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3309:
+					if (dd->ipath_pd[i]->
+					    port_flag & IPATH_PORT_WAITING_PIO)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pd'
#766: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3314:
+						wake_up_interruptible(&dd->
+								      ipath_pd

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#776: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3324:
+			if (dd->ipath_layer.l_intr(t,
+				IPATH_LAYER_INT_SEND_CONTINUE)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3329:
+^I^I^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#801: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3349:
+		uint64_t portr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#803: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3351:
+		uint32_t rcvdint = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#811: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3359:
+				if (i == 0)
[...]
+				else if (dd->ipath_pd[i]->
[...]

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pd[i]->port_flag'
#814: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3362:
+				else if (dd->ipath_pd[i]->
+					 port_flag & IPATH_PORT_WAITING_RCV) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pd[i]->port_wait'
#819: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3367:
+					wake_up_interruptible(&dd->ipath_pd[i]->
+							      port_wait);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#908: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3456:
+static void get_rhf_errstring(uint32_t err, char *msg, size_t len)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#942: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3490:
+	uint32_t piobcnt;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#943: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3491:
+	uint64_t sbuf[4], ignore_this_time = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#948: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3496:
+	static unsigned nmsgs, supp_msgs;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3500:
+     | INFINIPATH_E_RBADVERSION \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3501:
+     | INFINIPATH_E_RHDR | INFINIPATH_E_RLONGPKTLEN | INFINIPATH_E_RSHORTPKTLEN \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3502:
+     | INFINIPATH_E_RMAXPKTLEN | INFINIPATH_E_RMINPKTLEN \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3503:
+     | INFINIPATH_E_RFORMATERR | INFINIPATH_E_RUNSUPVL | INFINIPATH_E_RUNEXPCHAR \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3504:
+     | INFINIPATH_E_REBP)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#958: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3506:
+#define E_SUM_ERRS ( INFINIPATH_E_SPIOARMLAUNCH \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3507:
+    | INFINIPATH_E_SUNEXPERRPKTNUM | INFINIPATH_E_SDROPPEDDATAPKT \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3508:
+    | INFINIPATH_E_SDROPPEDSMPPKT | INFINIPATH_E_SMAXPKTLEN \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3509:
+    | INFINIPATH_E_SUNSUPVL | INFINIPATH_E_SMINPKTLEN | INFINIPATH_E_SPKTLEN \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3510:
+    | INFINIPATH_E_INVALIDADDR)$

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#983: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3531:
+				ipath_decode_err(msg, sizeof msg,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_lasterror'
#985: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3533:
+						 dd->
+						 ipath_lasterror &

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_lasterror'
#988: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3536:
+				if (dd->
+				    ipath_lasterror & ~(INFINIPATH_E_RRCVEGRFULL

CHECK:SPACING: space preferred before that '|' (ctx:ExE)
#989: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3537:
+							|
 							^

CHECK:BRACES: Unbalanced braces around else statement
#995: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3543:
+				else {

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1025: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3573:
+		ipath_handle_hwerrors(t, msg, sizeof msg);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1045: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3593:
+		if (sbuf[0] || sbuf[1]
+		    || (piobcnt > 128 && (sbuf[2] || sbuf[3]))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1048: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3596:
+				printk("%llx %llx ", sbuf[2], sbuf[3]);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1051: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3599:
+					uint32_t sendctrl;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1052: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3600:
+					uint32_t sendctrl;
+					if (infinipath_debug & __IPATH_PKTDBG)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1053: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3601:
+						printk("%u ", i);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_sendctrl'
#1056: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3604:
+					    dd->
+					    ipath_sendctrl | INFINIPATH_S_DISARM

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1064: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3612:
+				printk("\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1069: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3617:
+		      | INFINIPATH_E_SMINPKTLEN))
+		    && !(dd->ipath_flags & IPATH_LINKACTIVE)) {

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1097: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3645:
+		ipath_decode_err(msg, sizeof msg,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_ignorederrs'
#1099: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3647:
+				 (dd->ipath_maskederrs & ~dd->
+				  ipath_ignorederrs));

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#1104: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3652:
+					  "Disabling error(s) %llx because occuring too frequently (%s)\n",
 					                                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_ignorederrs'
#1106: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3654:
+					  (dd->ipath_maskederrs & ~dd->
+					   ipath_ignorederrs), msg);

CHECK:BRACES: Unbalanced braces around else statement
#1107: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3655:
+		else {

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1143: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3691:
+		ipath_decode_err(msg, sizeof msg,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1172: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3720:
+		uint32_t hd, tl;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1173: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3721:
+		uint32_t hd, tl;
+		ipath_stats.sps_hdrqfull++;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1175: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3723:
+			if (i == 0) {
[...]
+			} else if (dd->ipath_pd[i] &&
[...]
+			} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1184: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3732:
+				tl = (uint32_t) *

CHECK:BRACES: Unbalanced braces around else statement
#1189: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3737:
+			} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1213: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3761:
+^I * interrupt; we want the STATUSCHANGE to "win", so we do our $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!ipath_diags_enabled'
#1230: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3778:
+	if ((errs & INFINIPATH_E_IBSTATUSCHANGED) && (!ipath_diags_enabled)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1231: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3779:
+		uint64_t val;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1232: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3780:
+		uint32_t ltstate;

ERROR:SPACING: space required before the open parenthesis '('
#1236: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3784:
+		if(ltstate == 0x11 || ltstate == 0x21 || ltstate == 0x31)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1238: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3786:
+			_IPATH_DBG("Link state changed unit %u to 0x%x, last was 0x%llx\n",
+				t, ltstate, dd->ipath_lastibcstat);

CHECK:BRACES: Unbalanced braces around else statement
#1239: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3787:
+		else {

ERROR:SPACING: space required before the open parenthesis '('
#1241: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3789:
+			if(ltstate == 0x11 || ltstate == 0x21 || ltstate == 0x31)

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#1242: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3790:
+				_IPATH_DBG("Link state unit %u changed to down state 0x%llx, last was 0x%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1243: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3791:
+				_IPATH_DBG("Link state unit %u changed to down state 0x%llx, last was 0x%llx\n",
+					t, val, dd->ipath_lastibcstat);

WARNING:LONG_LINE_STRING: line length of 109 exceeds 100 columns
#1245: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3793:
+				_IPATH_VDBG("Link state unit %u changed to 0x%llx from one of down states\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1246: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3794:
+				_IPATH_VDBG("Link state unit %u changed to 0x%llx from one of down states\n",
+					t, val);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1252: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3800:
+			uint32_t last_ltstate;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1269: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3817:
+					uint64_t ibc;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1270: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3818:
+					uint64_t ibc;
+					dd->ipath_flags |=

CHECK:SPACING: space preferred before that '<<' (ctx:ExE)
#1278: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3826:
+					    <<
 					    ^

CHECK:BRACES: Unbalanced braces around else statement
#1332: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3880:
+			} else	/* not up at all, so turn the leds off */

CHECK:SPACING: No space is necessary after a cast
#1337: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3885:
+					(uint64_t) dd->ipath_extctrl);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1339: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3887:
+			if (ltstate == 1
+			    && (dd->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_flags'
#1340: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3888:
+			    && (dd->
+				ipath_flags & (IPATH_LINK_TOARMED |

CHECK:SPACING: No space is necessary after a cast
#1360: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3908:
+					(uint64_t) dd->ipath_extctrl);

WARNING:REPEATED_WORD: Possible repeated word: 'set'
#1376: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3924:
+			 * set set INIT and DOWN.  Down is checked by

CHECK:SPACING: No space is necessary after a cast
#1392: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3940:
+					(uint64_t) dd->ipath_extctrl);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_flags'
#1394: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3942:
+			if (dd->
+			    ipath_flags & (IPATH_LINK_TOARMED |

CHECK:SPACING: No space is necessary after a cast
#1421: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3969:
+					(uint64_t) dd->ipath_extctrl);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_flags'
#1433: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3981:
+			if (dd->
+			    ipath_flags & (IPATH_LINK_TOARMED |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1439: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3987:
+				_IPATH_DBG("IBstatuschange unit %u: %s\n",
+					  t, ipath_ibcstatus_str[ltstate]);

WARNING:INLINE: plain inline is preferred over __inline__
#1470: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4018:
+static __inline__ void *ipath_get_egrbuf(const ipath_type t, uint32_t bufnum,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[t].ipath_pd[port]->port_rcvegrbufs_perchunk'
#1498: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4046:
+				 devdata[t].ipath_pd[port]->
+				 port_rcvegrbufs_perchunk)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1506: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4054:
+			  uint64_t * rc, void *ebuf)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1506: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4054:
+			  uint64_t * rc, void *ebuf)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1510: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4058:
+	uint8_t pad, *bthbytes;

CHECK:SPACING: No space is necessary after a cast
#1514: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4062:
+	bthbytes = (uint8_t *) ((ips_message_header_typ *) & rc[1])->bth;

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1514: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4062:
+	bthbytes = (uint8_t *) ((ips_message_header_typ *) & rc[1])->bth;
 	                                                   ^

CHECK:SPACING: No space is necessary after a cast
#1517: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4065:
+	elen = tlen - (IPATH_SMA_HDRSZ + pad + (uint32_t) sizeof(uint32_t));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1539: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4087:
+	slen = ipath_sma_data[sindex].len = elen + IPATH_SMA_HDRSZ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1550: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4098:
+			    uint32_t tlen, ether_header_typ * hdr)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1550: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4098:
+			    uint32_t tlen, ether_header_typ * hdr)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1552: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4100:
+	uint32_t elen;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1553: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4101:
+	uint8_t pad, *bthbytes;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1559: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4107:
+	uint64_t *egrbase;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1560: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4108:
+	uint64_t lenvalid;	/* in words */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1567: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4115:
+		if (!(nskb = dev_alloc_skb(dd->ipath_ibmaxlen + 4))) {

CHECK:SPACING: No space is necessary after a cast
#1573: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4121:
+		bthbytes = (uint8_t *) hdr->bth;

CHECK:SPACING: No space is necessary after a cast
#1592: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4140:
+		egrbase = (uint64_t *) ((char *)(dd->ipath_kregbase) +

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1605: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4153:
+
+}

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1610: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4158:
+	uint64_t *rc;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1613: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4161:
+	const uint32_t rsize = dd->ipath_rcvhdrentsize;	/* words */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1614: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4162:
+	const uint32_t maxcnt = dd->ipath_rcvhdrcnt * rsize;	/* in words */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1615: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4163:
+	uint32_t etail = ~0U, l, hdrqtail, sma_this_time = 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1617: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4165:
+	uint32_t eflags, i, etype, tlen, pkttot=0;
 	                                       ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1617: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4165:
+	uint32_t eflags, i, etype, tlen, pkttot=0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1618: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4166:
+	static uint64_t totcalls; /* stats, may eventually remove */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1644: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4192:
+		uint32_t qp;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1645: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4193:
+		uint8_t *bthbytes;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1647: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4195:
+
+

CHECK:SPACING: No space is necessary after a cast
#1648: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4196:
+		rc = (uint64_t *) (dd->ipath_pd[0]->port_rcvhdrq + (l << 2));

CHECK:SPACING: No space is necessary after a cast
#1649: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4197:
+		hdr = (ips_message_header_typ *) & rc[1];

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1649: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4197:
+		hdr = (ips_message_header_typ *) & rc[1];
 		                                 ^

CHECK:SPACING: No space is necessary after a cast
#1655: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4203:
+		bthbytes = (uint8_t *) hdr->bth;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1671: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4219:
+			if (tlen > sizeof(*hdr)
+			    || etype == RCVHQ_RCV_TYPE_NON_KD) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1682: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4230:
+		if (etype != RCVHQ_RCV_TYPE_NON_KD
+		    && etype != RCVHQ_RCV_TYPE_ERROR

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1683: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4231:
+		    && etype != RCVHQ_RCV_TYPE_ERROR
+		    && ips_get_ipath_ver(hdr->iph.ver_port_tid_offset) !=

WARNING:SIZEOF_PARENTHESIS: sizeof emsg should be sizeof(emsg)
#1691: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4239:
+			get_rhf_errstring(eflags, emsg, sizeof emsg);

CHECK:SPACING: No space is necessary after a cast
#1730: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4278:
+						(ether_header_typ *) hdr);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1738: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4286:
+		} else if (eflags &
+			   (INFINIPATH_RHF_H_TIDERR | INFINIPATH_RHF_H_IHDRERR))
+		{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1746: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4294:
+			uint8_t opcode;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1747: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4295:
+			uint8_t opcode;
+			if (ebuf) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1747: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4295:
+			if (ebuf) {
[...]
+			} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1748: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4296:
+				bthbytes = (uint8_t *) ebuf;

CHECK:BRACES: Unbalanced braces around else statement
#1750: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4298:
+			} else

WARNING:SIZEOF_PARENTHESIS: sizeof emsg should be sizeof(emsg)
#1752: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4300:
+			get_rhf_errstring(eflags, emsg, sizeof emsg);

ERROR:SPACING: space required before the open parenthesis '('
#1787: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4335:
+	if(pkttot > ipath_stats.sps_maxpkts_call)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1811: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4359:
+	const unsigned piobregs = (unsigned)devdata[t].ipath_pioavregs;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1811: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4359:
+	const unsigned piobregs = (unsigned)devdata[t].ipath_pioavregs;

WARNING:TYPO_SPELLING: 'atomicly' may be misspelled - perhaps 'atomically'?
#1819: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4367:
+	 * We would like to do this atomicly, to avoid spinlocks in the
 	                            ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1838: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4386:
+		_IPATH_PDBG("Refill avail, dma0=%llx shad0=%llx, "
+			    "d1=%llx s1=%llx, d2=%llx s2=%llx, d3=%llx s3=%llx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1849: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4397:
+			_IPATH_PDBG("2nd group, dma4=%llx shad4=%llx, "
+				    "d5=%llx s5=%llx, d6=%llx s6=%llx, d7=%llx s7=%llx\n",

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1861: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4409:
+		uint64_t pchbusy, pchg, piov, pnew;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[t].ipath_pioavailshadow[i]'
#1866: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4414:
+		    _IPATH_ALL_CHECKBITS & ~(devdata[t].
+					     ipath_pioavailshadow[i] ^ piov);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1877: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4425:
+static int ipath_do_user_init(ipath_portdata * pd,

CHECK:BRACES: braces {} should be used on all arms of this statement
#1885: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4433:
+	if (copy_from_user(&kinfo, uinfo, sizeof kinfo))
[...]
+	else {
[...]

WARNING:SIZEOF_PARENTHESIS: sizeof kinfo should be sizeof(kinfo)
#1885: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4433:
+	if (copy_from_user(&kinfo, uinfo, sizeof kinfo))

CHECK:BRACES: Unbalanced braces around else statement
#1887: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4435:
+	else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1902: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4450:
+				if ((ret =

WARNING:LONG_LINE_STRING: line length of 108 exceeds 100 columns
#1923: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4471:
+					    ("eager skip 0x%x invalid, must be word multiple; using 0x%x\n",

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1945: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4493:
+				uint64_t physaddr, uaddr, off, atmp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1947: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4495:
+				struct page *pagep;
+				off = offset_in_page(kinfo.spu_rcvhdraddr);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'kinfo.spu_rcvhdraddr'
#1950: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4498:
+				    PAGE_MASK & (unsigned long)kinfo.
+				    spu_rcvhdraddr;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1951: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4499:
+				if ((ret = ipath_mlock_nocopy(uaddr, &pagep))) {

WARNING:LONG_LINE_STRING: line length of 113 exceeds 100 columns
#1953: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4501:
+					    ("Failed to lookup and lock address %llx for rcvhdrtail: errno %d\n",

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#1965: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4513:
+				    ("port %d user addr %llx hdrtailaddr, %llx physical (off=%llx)\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2006: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4554:
+			if (!(ret = ipath_create_rcvhdrq(pd)))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2009: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4557:
+				uint64_t head;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2010: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4558:
+				uint32_t head32;

CHECK:SPACING: No space is necessary after a cast
#2026: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4574:
+				head = (uint64_t) head32;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_rcvctrl'
#2058: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4606:
+							dd->
+							ipath_rcvctrl &

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2071: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4619:
+static int ipath_get_baseinfo(ipath_portdata * pd,

WARNING:SIZEOF_PARENTHESIS: sizeof kbase should be sizeof(kbase)
#2079: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4627:
+	memset(&kbase, 0, sizeof kbase);

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#2084: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4632:
+	kbase.spi_rcv_egrbuftotlen = pd->port_rcvegrbuf_chunks * PAGE_SIZE * (1 << pd->port_rcvegrbuf_order);	/* have to mmap whole thing */

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:REPEATED_WORD: Possible repeated word: 'are'
#2091: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4639:
+	 * are are configured and present

CHECK:SPACING: No space is necessary after a cast
#2114: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4662:
+	kbase.spi_rcvhdr_base = (uint64_t) pd->port_rcvhdrq_phys;

CHECK:SPACING: No space is necessary after a cast
#2115: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4663:
+	kbase.spi_rcv_egrbufs = (uint64_t) pd->port_rcvegr_phys;

CHECK:SPACING: No space is necessary after a cast
#2116: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4664:
+	kbase.spi_pioavailaddr = (uint64_t) dd->ipath_pioavailregs_phys;

CHECK:SPACING: No space is necessary after a cast
#2117: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4665:
+	kbase.spi_status = (uint64_t) kbase.spi_pioavailaddr +

CHECK:SPACING: No space is necessary after a cast
#2119: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4667:
+	kbase.spi_piobufbase = (uint64_t) pd->port_piobufs;

WARNING:SIZEOF_PARENTHESIS: sizeof kbase should be sizeof(kbase)
#2134: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4682:
+	if (copy_to_user(ubase, &kbase, sizeof kbase))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2155: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4703:
+static int ipath_wr_eeprom(ipath_portdata * pd, struct ipath_eeprom_req *req)

WARNING:SIZEOF_PARENTHESIS: sizeof kreq should be sizeof(kreq)
#2163: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4711:
+	if (copy_from_user(&kreq, req, sizeof kreq))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2172: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4720:
+	if (!(buf = vmalloc(kreq.len))) {

WARNING:SIZEOF_PARENTHESIS: sizeof kreq should be sizeof(kreq)
#2203: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4751:
+	if (copy_from_user(&kreq, req, sizeof kreq))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2212: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4760:
+	if (!(buf = vmalloc(kreq.len))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2235: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4783:
+ * wait for something to happen on a port.  Currently this is $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2243: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4791:
+static int ipath_wait_intr(ipath_portdata * pd, uint32_t flag)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2247: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4795:
+	uint32_t im = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2248: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4796:
+	uint32_t head, tail, timeo = 0, wflag = 0;

WARNING:TYPO_SPELLING: 'atomicly' may be misspelled - perhaps 'atomically'?
#2290: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:4838:
+		 * it atomicly
 		      ^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124520.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 80 warnings, 115 checks, 2293 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124520.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
