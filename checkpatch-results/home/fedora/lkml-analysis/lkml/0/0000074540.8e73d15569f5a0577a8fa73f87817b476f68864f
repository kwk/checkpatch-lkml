ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Takashi Sato sho@tnes.nec.co.jp'
#34: 
Signed-off-by: Takashi Sato sho@tnes.nec.co.jp

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#64: FILE: fs/ext2/balloc.c:144:
+static unsigned int group_reserve_blocks(struct ext2_sb_info *sbi, int group_no,
+	struct ext2_group_desc *desc, struct buffer_head *bh, unsigned int count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: fs/ext2/balloc.c:328:
+unsigned int ext2_new_block(struct inode *inode, unsigned long goal,
 			u32 *prealloc_count, u32 *prealloc_block, int *err)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#105: FILE: fs/ext2/ext2.h:94:
+extern unsigned int ext2_new_block (struct inode *, unsigned long,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: fs/ext2/ext2.h:94:
+extern unsigned int ext2_new_block (struct inode *, unsigned long,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#105: FILE: fs/ext2/ext2.h:94:
+extern unsigned int ext2_new_block (struct inode *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#105: FILE: fs/ext2/ext2.h:94:
+extern unsigned int ext2_new_block (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32 *' should also have an identifier name
#105: FILE: fs/ext2/ext2.h:94:
+extern unsigned int ext2_new_block (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32 *' should also have an identifier name
#105: FILE: fs/ext2/ext2.h:94:
+extern unsigned int ext2_new_block (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#105: FILE: fs/ext2/ext2.h:94:
+extern unsigned int ext2_new_block (struct inode *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: fs/ext2/ext2.h:95:
+extern unsigned int ext2_new_block (struct inode *, unsigned long,
 			   __u32 *, __u32 *, int *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: fs/ext2/inode.c:110:
+static unsigned int ext2_alloc_block (struct inode * inode, unsigned long goal, int *err)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: fs/ext2/inode.c:110:
+static unsigned int ext2_alloc_block (struct inode * inode, unsigned long goal, int *err)

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#206: FILE: fs/ext2/super.c:520:
+		    le32_to_cpu(gdp->bg_block_bitmap) >= (unsigned long long)block + EXT2_BLOCKS_PER_GROUP(sb))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#215: FILE: fs/ext2/super.c:529:
+		    le32_to_cpu(gdp->bg_inode_bitmap) >= (unsigned long long)block + EXT2_BLOCKS_PER_GROUP(sb))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000074540.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 4 checks, 204 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000074540.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
