WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude ../linux.vanilla-2.6.14-rc2-mm1/drivers/edac/edac_mc.c ./drivers/edac/edac_mc.c

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: drivers/edac/edac_mc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#69: FILE: drivers/edac/edac_mc.c:14:
+ * $Id: edac_mc.c,v 1.7.2.19 2005/10/05 22:01:42 dsp_llnl Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#73: FILE: drivers/edac/edac_mc.c:18:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#90: FILE: drivers/edac/edac_mc.c:35:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#95: FILE: drivers/edac/edac_mc.c:40:
+
+

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#96: FILE: drivers/edac/edac_mc.c:41:
+#define	EDAC_MC_VERSION	"edac_mc  Ver: 2.0.0.devel " __DATE__

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#103: FILE: drivers/edac/edac_mc.c:48:
+int edac_debug_level = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: drivers/edac/edac_mc.c:55:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#117: FILE: drivers/edac/edac_mc.c:62:
+static int panic_on_pci_parity = 0;     /* default no panic on PCI Parity */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#122: FILE: drivers/edac/edac_mc.c:67:
+static u32 pci_parity_count = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: drivers/edac/edac_mc.c:69:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: drivers/edac/edac_mc.c:75:
+static struct mem_ctl_info * find_mc_by_idx (int idx)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: drivers/edac/edac_mc.c:75:
+static struct mem_ctl_info * find_mc_by_idx (int idx)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#161: FILE: drivers/edac/edac_mc.c:106:
+	mcidx = simple_strtol(mcstr, &p, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#164: FILE: drivers/edac/edac_mc.c:109:
+	if ((mci = find_mc_by_idx(mcidx)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#169: FILE: drivers/edac/edac_mc.c:114:
+	ridx = simple_strtol(rstr, &p, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ridx >= mci->nr_csrows'
#172: FILE: drivers/edac/edac_mc.c:117:
+	if ((ridx >= mci->nr_csrows) || !mci->csrows)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#178: FILE: drivers/edac/edac_mc.c:123:
+	chidx = simple_strtol(chstr, &p, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chidx >= mci->csrows[ridx].nr_channels'
#181: FILE: drivers/edac/edac_mc.c:126:
+	if ((chidx >= mci->csrows[ridx].nr_channels) ||
+	    !mci->csrows[ridx].channels)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#195: FILE: drivers/edac/edac_mc.c:140:
+
+

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#204: FILE: drivers/edac/edac_mc.c:149:
+	mcidx = simple_strtol(buf, &p, 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mci"
#211: FILE: drivers/edac/edac_mc.c:156:
+	if (mci == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#231: FILE: drivers/edac/edac_mc.c:176:
+
+

WARNING:SPACING: Unnecessary space before function pointer arguments
#233: FILE: drivers/edac/edac_mc.c:178:
+	void (*action) (char *str, void *data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#239: FILE: drivers/edac/edac_mc.c:184:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#244: FILE: drivers/edac/edac_mc.c:189:
+	.usage = "<mc>.<row>.<chan>:<label>"
+	    "[,<mc>.<row>.<chan>:<label>[,...]]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#248: FILE: drivers/edac/edac_mc.c:193:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#256: FILE: drivers/edac/edac_mc.c:201:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#257: FILE: drivers/edac/edac_mc.c:202:
+static int proc_actionvec(ctl_table * table, int write, struct file *filp,
                                                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: drivers/edac/edac_mc.c:202:
+static int proc_actionvec(ctl_table * table, int write, struct file *filp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#258: FILE: drivers/edac/edac_mc.c:203:
+			  void __user * buffer, size_t * lenp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#258: FILE: drivers/edac/edac_mc.c:203:
+			  void __user * buffer, size_t * lenp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: drivers/edac/edac_mc.c:204:
+			  loff_t * ppos)

CHECK:SPACING: No space is necessary after a cast
#272: FILE: drivers/edac/edac_mc.c:217:
+	avi = (struct actionvec_info *) table->data;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c == 0'
#281: FILE: drivers/edac/edac_mc.c:226:
+			if ((c == 0) || (c == '\n'))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#285: FILE: drivers/edac/edac_mc.c:230:
+		if (!(buf = kmalloc(len + 1, GFP_KERNEL)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#312: FILE: drivers/edac/edac_mc.c:257:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#337: FILE: drivers/edac/edac_mc.c:282:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#343: FILE: drivers/edac/edac_mc.c:288:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#344: FILE: drivers/edac/edac_mc.c:289:
+static struct ctl_table_header *mc_sysctl_header = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: drivers/edac/edac_mc.c:292:
+
+

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#349: FILE: drivers/edac/edac_mc.c:294:
+static const char *mem_types[] = {

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#363: FILE: drivers/edac/edac_mc.c:308:
+static const char *dev_types[] = {

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#374: FILE: drivers/edac/edac_mc.c:319:
+static const char *edac_caps[] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#387: FILE: drivers/edac/edac_mc.c:332:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#398: FILE: drivers/edac/edac_mc.c:343:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: drivers/edac/edac_mc.c:355:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#421: FILE: drivers/edac/edac_mc.c:366:
+
+

CHECK:SPACING: No space is necessary after a cast
#430: FILE: drivers/edac/edac_mc.c:375:
+		     (u32) PAGES_TO_MiB(csrow->nr_pages));

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#434: FILE: drivers/edac/edac_mc.c:379:
+	CSROW_PREFIX("UE:\t\t\t%d\n", csrow->ue_count);
 	              ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#446: FILE: drivers/edac/edac_mc.c:391:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#461: FILE: drivers/edac/edac_mc.c:406:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#476: FILE: drivers/edac/edac_mc.c:421:
+
+

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#487: FILE: drivers/edac/edac_mc.c:432:
+	p += sprintf(p, "Panic UE:\t\t%d\n", panic_on_ue);
 	                       ^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#488: FILE: drivers/edac/edac_mc.c:433:
+	p += sprintf(p, "Log UE:\t\t\t%d\n", log_ue);
 	                     ^^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#494: FILE: drivers/edac/edac_mc.c:439:
+	p += sprintf(p, "MC Core:\t\t%s\n", EDAC_MC_VERSION );

CHECK:SPACING: No space is necessary after a cast
#526: FILE: drivers/edac/edac_mc.c:471:
+		     (u32) PAGES_TO_MiB(total_pages));

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#529: FILE: drivers/edac/edac_mc.c:474:
+	p += sprintf(p, "UE No Info:\t\t%d\n", mci->ue_noinfo_count);
 	                 ^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#531: FILE: drivers/edac/edac_mc.c:476:
+	p += sprintf(p, "Total UE:\t\t%d\n", mci->ue_count);
 	                       ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#537: FILE: drivers/edac/edac_mc.c:482:
+
+

CHECK:SPACING: No space is necessary after a cast
#542: FILE: drivers/edac/edac_mc.c:487:
+	struct mem_ctl_info *mci = (struct mem_ctl_info *) data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#562: FILE: drivers/edac/edac_mc.c:507:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#565: FILE: drivers/edac/edac_mc.c:510:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#566: FILE: drivers/edac/edac_mc.c:511:
+EXPORT_SYMBOL(edac_mc_dump_channel);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#570: FILE: drivers/edac/edac_mc.c:515:
+	printk(KERN_INFO "\tchannel = %p\n", chan);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#571: FILE: drivers/edac/edac_mc.c:516:
+	printk(KERN_INFO "\tchannel->chan_idx = %d\n", chan->chan_idx);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#572: FILE: drivers/edac/edac_mc.c:517:
+	printk(KERN_INFO "\tchannel->ce_count = %d\n", chan->ce_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#573: FILE: drivers/edac/edac_mc.c:518:
+	printk(KERN_INFO "\tchannel->label = '%s'\n", chan->label);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#574: FILE: drivers/edac/edac_mc.c:519:
+	printk(KERN_INFO "\tchannel->csrow = %p\n\n", chan->csrow);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#577: FILE: drivers/edac/edac_mc.c:522:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#578: FILE: drivers/edac/edac_mc.c:523:
+EXPORT_SYMBOL(edac_mc_dump_csrow);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#582: FILE: drivers/edac/edac_mc.c:527:
+	printk(KERN_INFO "\tcsrow = %p\n", csrow);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#583: FILE: drivers/edac/edac_mc.c:528:
+	printk(KERN_INFO "\tcsrow->csrow_idx = %d\n", csrow->csrow_idx);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#584: FILE: drivers/edac/edac_mc.c:529:
+	printk(KERN_INFO "\tcsrow->first_page = 0x%lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#586: FILE: drivers/edac/edac_mc.c:531:
+	printk(KERN_INFO "\tcsrow->last_page = 0x%lx\n", csrow->last_page);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#587: FILE: drivers/edac/edac_mc.c:532:
+	printk(KERN_INFO "\tcsrow->page_mask = 0x%lx\n", csrow->page_mask);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#588: FILE: drivers/edac/edac_mc.c:533:
+	printk(KERN_INFO "\tcsrow->nr_pages = 0x%x\n", csrow->nr_pages);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#589: FILE: drivers/edac/edac_mc.c:534:
+	printk(KERN_INFO "\tcsrow->nr_channels = %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#591: FILE: drivers/edac/edac_mc.c:536:
+	printk(KERN_INFO "\tcsrow->channels = %p\n", csrow->channels);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#592: FILE: drivers/edac/edac_mc.c:537:
+	printk(KERN_INFO "\tcsrow->mci = %p\n\n", csrow->mci);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#595: FILE: drivers/edac/edac_mc.c:540:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#596: FILE: drivers/edac/edac_mc.c:541:
+EXPORT_SYMBOL(edac_mc_dump_mci);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#600: FILE: drivers/edac/edac_mc.c:545:
+	printk(KERN_INFO "\tmci = %p\n", mci);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#601: FILE: drivers/edac/edac_mc.c:546:
+	printk(KERN_INFO "\tmci->mtype_cap = %lx\n", mci->mtype_cap);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#602: FILE: drivers/edac/edac_mc.c:547:
+	printk(KERN_INFO "\tmci->edac_ctl_cap = %lx\n", mci->edac_ctl_cap);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#603: FILE: drivers/edac/edac_mc.c:548:
+	printk(KERN_INFO "\tmci->edac_cap = %lx\n", mci->edac_cap);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#604: FILE: drivers/edac/edac_mc.c:549:
+	printk(KERN_INFO "\tmci->edac_check = %p\n", mci->edac_check);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#605: FILE: drivers/edac/edac_mc.c:550:
+	printk(KERN_INFO "\tmci->nr_csrows = %d, csrows = %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#607: FILE: drivers/edac/edac_mc.c:552:
+	printk(KERN_INFO "\tpdev = %p\n", mci->pdev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#608: FILE: drivers/edac/edac_mc.c:553:
+	printk(KERN_INFO "\tmod_name:ctl_name = %s:%s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#610: FILE: drivers/edac/edac_mc.c:555:
+	printk(KERN_INFO "\tproc_name = %s, proc_ent = %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#612: FILE: drivers/edac/edac_mc.c:557:
+	printk(KERN_INFO "\tpvt_info = %p\n\n", mci->pvt_info);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#615: FILE: drivers/edac/edac_mc.c:560:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#625: FILE: drivers/edac/edac_mc.c:570:
+static inline char * align_ptr (void *ptr, unsigned size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#625: FILE: drivers/edac/edac_mc.c:570:
+static inline char * align_ptr (void *ptr, unsigned size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#625: FILE: drivers/edac/edac_mc.c:570:
+static inline char * align_ptr (void *ptr, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#627: FILE: drivers/edac/edac_mc.c:572:
+	unsigned align, r;

CHECK:SPACING: No space is necessary after a cast
#642: FILE: drivers/edac/edac_mc.c:587:
+		return (char *) ptr;

CHECK:SPACING: No space is necessary after a cast
#647: FILE: drivers/edac/edac_mc.c:592:
+		return (char *) ptr;

CHECK:SPACING: No space is necessary after a cast
#649: FILE: drivers/edac/edac_mc.c:594:
+	return (char *) (((unsigned long) ptr) + align - r);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#652: FILE: drivers/edac/edac_mc.c:597:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#653: FILE: drivers/edac/edac_mc.c:598:
+EXPORT_SYMBOL(edac_mc_alloc);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#661: FILE: drivers/edac/edac_mc.c:606:
+struct mem_ctl_info *edac_mc_alloc(unsigned sz_pvt, unsigned nr_csrows,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#661: FILE: drivers/edac/edac_mc.c:606:
+struct mem_ctl_info *edac_mc_alloc(unsigned sz_pvt, unsigned nr_csrows,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#662: FILE: drivers/edac/edac_mc.c:607:
+struct mem_ctl_info *edac_mc_alloc(unsigned sz_pvt, unsigned nr_csrows,
+					unsigned nr_chans)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#662: FILE: drivers/edac/edac_mc.c:607:
+					unsigned nr_chans)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#668: FILE: drivers/edac/edac_mc.c:613:
+	unsigned size;

CHECK:SPACING: No space is necessary after a cast
#676: FILE: drivers/edac/edac_mc.c:621:
+	mci = (struct mem_ctl_info *) 0;

CHECK:SPACING: No space is necessary after a cast
#682: FILE: drivers/edac/edac_mc.c:627:
+	size = ((unsigned long) pvt) + sz_pvt;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#684: FILE: drivers/edac/edac_mc.c:629:
+	if ((mci = kmalloc(size, GFP_KERNEL)) == NULL)

CHECK:SPACING: No space is necessary after a cast
#690: FILE: drivers/edac/edac_mc.c:635:
+	csi = (struct csrow_info *) (((char *) mci) + ((unsigned long) csi));

CHECK:SPACING: No space is necessary after a cast
#691: FILE: drivers/edac/edac_mc.c:636:
+	chi = (struct channel_info *) (((char *) mci) + ((unsigned long) chi));

CHECK:SPACING: No space is necessary after a cast
#692: FILE: drivers/edac/edac_mc.c:637:
+	pvt = sz_pvt ? (((char *) mci) + ((unsigned long) pvt)) : NULL;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#717: FILE: drivers/edac/edac_mc.c:662:
+EXPORT_SYMBOL(edac_mc_find_mci_by_pdev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#736: FILE: drivers/edac/edac_mc.c:681:
+static int add_mc_to_global_list (struct mem_ctl_info *mci)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#747: FILE: drivers/edac/edac_mc.c:692:
+			printk(KERN_WARNING

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!insert_before"
#770: FILE: drivers/edac/edac_mc.c:715:
+		if (insert_before == NULL)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#778: FILE: drivers/edac/edac_mc.c:723:
+EXPORT_SYMBOL(edac_mc_add_mc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#794: FILE: drivers/edac/edac_mc.c:739:
+			int j;
+			edac_mc_dump_csrow(&mci->csrows[i]);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mci->csrows[i].channels[j]'
#797: FILE: drivers/edac/edac_mc.c:742:
+				edac_mc_dump_channel(&mci->csrows[i].
+							  channels[j]);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#806: FILE: drivers/edac/edac_mc.c:751:
+	printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#817: FILE: drivers/edac/edac_mc.c:762:
+		printk(KERN_WARNING

CHECK:SPACING: No space is necessary after a cast
#825: FILE: drivers/edac/edac_mc.c:770:
+					       mc_read_proc, (void *) mci);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mci->proc_ent"
#827: FILE: drivers/edac/edac_mc.c:772:
+	if (mci->proc_ent == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#828: FILE: drivers/edac/edac_mc.c:773:
+		printk(KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#842: FILE: drivers/edac/edac_mc.c:787:
+static void complete_mc_list_del (struct rcu_head *head)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#851: FILE: drivers/edac/edac_mc.c:796:
+static void del_mc_from_global_list (struct mem_ctl_info *mci)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#859: FILE: drivers/edac/edac_mc.c:804:
+EXPORT_SYMBOL(edac_mc_del_mc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#870: FILE: drivers/edac/edac_mc.c:815:
+	printk(KERN_INFO

CHECK:LINE_SPACING: Please don't use multiple blank lines
#879: FILE: drivers/edac/edac_mc.c:824:
+
+

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#884: FILE: drivers/edac/edac_mc.c:829:
+/* FIXME - this should go in an arch dependant file */
                                      ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: drivers/edac/edac_mc.c:833:
+void edac_mc_scrub_block(unsigned long page, unsigned long offset,
+			      u32 size)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#891: FILE: drivers/edac/edac_mc.c:836:
+	volatile unsigned long *virt_addr;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#914: FILE: drivers/edac/edac_mc.c:859:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#920: FILE: drivers/edac/edac_mc.c:865:
+int edac_mc_find_csrow_by_page(struct mem_ctl_info *mci,
+				    unsigned long page)

WARNING:SPLIT_STRING: quoted string split across lines
#937: FILE: drivers/edac/edac_mc.c:882:
+			": %s(): first(0x%lx) page(0x%lx)"
+			" last(0x%lx) mask(0x%lx)\n", mci->mc_idx,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'page >= csrow->first_page'
#941: FILE: drivers/edac/edac_mc.c:886:
+		if ((page >= csrow->first_page) &&
+		    (page <= csrow->last_page) &&
+		    ((page & csrow->page_mask) ==
+		     (csrow->first_page & csrow->page_mask))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'page <= csrow->last_page'
#941: FILE: drivers/edac/edac_mc.c:886:
+		if ((page >= csrow->first_page) &&
+		    (page <= csrow->last_page) &&
+		    ((page & csrow->page_mask) ==
+		     (csrow->first_page & csrow->page_mask))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#951: FILE: drivers/edac/edac_mc.c:896:
+		printk(KERN_ERR

CHECK:SPACING: No space is necessary after a cast
#953: FILE: drivers/edac/edac_mc.c:898:
+		       mci->mc_idx, (unsigned long) page);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#958: FILE: drivers/edac/edac_mc.c:903:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#959: FILE: drivers/edac/edac_mc.c:904:
+EXPORT_SYMBOL(edac_mc_handle_ce);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#964: FILE: drivers/edac/edac_mc.c:909:
+void edac_mc_handle_ce(struct mem_ctl_info *mci,
+			    unsigned long page_frame_number,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'row >= mci->nr_csrows'
#974: FILE: drivers/edac/edac_mc.c:919:
+	if ((row >= mci->nr_csrows) || (row < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'row < 0'
#974: FILE: drivers/edac/edac_mc.c:919:
+	if ((row >= mci->nr_csrows) || (row < 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#976: FILE: drivers/edac/edac_mc.c:921:
+		printk(KERN_ERR

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel >= mci->csrows[row].nr_channels'
#982: FILE: drivers/edac/edac_mc.c:927:
+	if ((channel >= mci->csrows[row].nr_channels) || (channel < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel < 0'
#982: FILE: drivers/edac/edac_mc.c:927:
+	if ((channel >= mci->csrows[row].nr_channels) || (channel < 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#984: FILE: drivers/edac/edac_mc.c:929:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#986: FILE: drivers/edac/edac_mc.c:931:
+		       "MC%d: INTERNAL ERROR: channel out of range "
+		       "(%d >= %d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#994: FILE: drivers/edac/edac_mc.c:939:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#996: FILE: drivers/edac/edac_mc.c:941:
+		       "MC%d: CE page 0x%lx, offset 0x%lx,"
+		       " grain %d, syndrome 0x%lx, row %d, channel %d,"

WARNING:SPLIT_STRING: quoted string split across lines
#997: FILE: drivers/edac/edac_mc.c:942:
+		       " grain %d, syndrome 0x%lx, row %d, channel %d,"
+		       " label \"%s\": %s\n", mci->mc_idx,

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1011: FILE: drivers/edac/edac_mc.c:956:
+		 * are mapped.  This mapping is MC dependant and so we call
 		                                   ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1021: FILE: drivers/edac/edac_mc.c:966:
+		edac_mc_scrub_block(remapped_page, offset_in_page,
+					 mci->csrows[row].grain);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1025: FILE: drivers/edac/edac_mc.c:970:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1026: FILE: drivers/edac/edac_mc.c:971:
+EXPORT_SYMBOL(edac_mc_handle_ce_no_info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1029: FILE: drivers/edac/edac_mc.c:974:
+void edac_mc_handle_ce_no_info(struct mem_ctl_info *mci,
+				    const char *msg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1032: FILE: drivers/edac/edac_mc.c:977:
+		printk(KERN_WARNING

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1039: FILE: drivers/edac/edac_mc.c:984:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1040: FILE: drivers/edac/edac_mc.c:985:
+EXPORT_SYMBOL(edac_mc_handle_ue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1043: FILE: drivers/edac/edac_mc.c:988:
+void edac_mc_handle_ue(struct mem_ctl_info *mci,
+			    unsigned long page_frame_number,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'row >= mci->nr_csrows'
#1056: FILE: drivers/edac/edac_mc.c:1001:
+	if ((row >= mci->nr_csrows) || (row < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'row < 0'
#1056: FILE: drivers/edac/edac_mc.c:1001:
+	if ((row >= mci->nr_csrows) || (row < 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1058: FILE: drivers/edac/edac_mc.c:1003:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1078: FILE: drivers/edac/edac_mc.c:1023:
+		printk(KERN_EMERG

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#1079: FILE: drivers/edac/edac_mc.c:1024:
+		       "MC%d: UE page 0x%lx, offset 0x%lx, grain %d, row %d,"
 		              ^^

WARNING:SPLIT_STRING: quoted string split across lines
#1080: FILE: drivers/edac/edac_mc.c:1025:
+		       "MC%d: UE page 0x%lx, offset 0x%lx, grain %d, row %d,"
+		       " labels \"%s\": %s\n", mci->mc_idx,

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#1086: FILE: drivers/edac/edac_mc.c:1031:
+		    ("MC%d: UE page 0x%lx, offset 0x%lx, grain %d, row %d,"
 		            ^^

WARNING:SPLIT_STRING: quoted string split across lines
#1087: FILE: drivers/edac/edac_mc.c:1032:
+		    ("MC%d: UE page 0x%lx, offset 0x%lx, grain %d, row %d,"
+		     " labels \"%s\": %s\n", mci->mc_idx,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1095: FILE: drivers/edac/edac_mc.c:1040:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1096: FILE: drivers/edac/edac_mc.c:1041:
+EXPORT_SYMBOL(edac_mc_handle_ue_no_info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1099: FILE: drivers/edac/edac_mc.c:1044:
+void edac_mc_handle_ue_no_info(struct mem_ctl_info *mci,
+				    const char *msg)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1105: FILE: drivers/edac/edac_mc.c:1050:
+		printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#1106: FILE: drivers/edac/edac_mc.c:1051:
+		       "MC%d: UE - no information available: %s\n",
 		              ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1112: FILE: drivers/edac/edac_mc.c:1057:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1117: FILE: drivers/edac/edac_mc.c:1062:
+static inline void edac_pci_dev_parity_test( struct pci_dev *dev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1117: FILE: drivers/edac/edac_mc.c:1062:
+static inline void edac_pci_dev_parity_test( struct pci_dev *dev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1126: FILE: drivers/edac/edac_mc.c:1071:
+	debugf2("PCI STATUS= 0x%04x %s\n", status, dev->dev.bus_id );

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1132: FILE: drivers/edac/edac_mc.c:1077:
+	if (status) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1137: FILE: drivers/edac/edac_mc.c:1082:
+			printk(KERN_CRIT

ERROR:CODE_INDENT: code indent should use tabs where possible
#1138: FILE: drivers/edac/edac_mc.c:1083:
+^I^I^I   ^I"PCI- "$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1138: FILE: drivers/edac/edac_mc.c:1083:
+^I^I^I   ^I"PCI- "$

WARNING:SPLIT_STRING: quoted string split across lines
#1139: FILE: drivers/edac/edac_mc.c:1084:
+			   	"PCI- "
+				"Signaled System Error on %s %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1144: FILE: drivers/edac/edac_mc.c:1089:
+			printk(KERN_CRIT

ERROR:CODE_INDENT: code indent should use tabs where possible
#1145: FILE: drivers/edac/edac_mc.c:1090:
+^I^I^I   ^I"PCI- "$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1145: FILE: drivers/edac/edac_mc.c:1090:
+^I^I^I   ^I"PCI- "$

WARNING:SPLIT_STRING: quoted string split across lines
#1146: FILE: drivers/edac/edac_mc.c:1091:
+			   	"PCI- "
+				"Master Data Parity Error on %s %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1154: FILE: drivers/edac/edac_mc.c:1099:
+			printk(KERN_CRIT

ERROR:CODE_INDENT: code indent should use tabs where possible
#1155: FILE: drivers/edac/edac_mc.c:1100:
+^I^I^I   ^I"PCI- "$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1155: FILE: drivers/edac/edac_mc.c:1100:
+^I^I^I   ^I"PCI- "$

WARNING:SPLIT_STRING: quoted string split across lines
#1156: FILE: drivers/edac/edac_mc.c:1101:
+			   	"PCI- "
+				"Detected Parity Error on %s %s\n",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1167: FILE: drivers/edac/edac_mc.c:1112:
+	debugf2("PCI HEADER TYPE= 0x%02x %s\n", header_type, dev->dev.bus_id );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1169: FILE: drivers/edac/edac_mc.c:1114:
+	if( (header_type & 0x7F) == PCI_HEADER_TYPE_BRIDGE ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1169: FILE: drivers/edac/edac_mc.c:1114:
+	if( (header_type & 0x7F) == PCI_HEADER_TYPE_BRIDGE ) {

ERROR:SPACING: space required before the open parenthesis '('
#1169: FILE: drivers/edac/edac_mc.c:1114:
+	if( (header_type & 0x7F) == PCI_HEADER_TYPE_BRIDGE ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1170: FILE: drivers/edac/edac_mc.c:1115:
+	if( (header_type & 0x7F) == PCI_HEADER_TYPE_BRIDGE ) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1171: FILE: drivers/edac/edac_mc.c:1116:
+^I ^I/* On bridges, need to examine secondary status register  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1171: FILE: drivers/edac/edac_mc.c:1116:
+^I ^I/* On bridges, need to examine secondary status register  */$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1174: FILE: drivers/edac/edac_mc.c:1119:
+		debugf2("PCI SEC_STATUS= 0x%04x %s\n", status, dev->dev.bus_id );

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1181: FILE: drivers/edac/edac_mc.c:1126:
+		if (status) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1184: FILE: drivers/edac/edac_mc.c:1129:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1186: FILE: drivers/edac/edac_mc.c:1131:
+				printk(KERN_CRIT

WARNING:SPLIT_STRING: quoted string split across lines
#1188: FILE: drivers/edac/edac_mc.c:1133:
+					"PCI-Bridge- "
+					"Signaled System Error on %s %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1193: FILE: drivers/edac/edac_mc.c:1138:
+				printk(KERN_CRIT

WARNING:SPLIT_STRING: quoted string split across lines
#1195: FILE: drivers/edac/edac_mc.c:1140:
+					"PCI-Bridge- "
+					"Master Data Parity Error on %s %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1203: FILE: drivers/edac/edac_mc.c:1148:
+				printk(KERN_CRIT

WARNING:SPLIT_STRING: quoted string split across lines
#1205: FILE: drivers/edac/edac_mc.c:1150:
+					"PCI-Bridge- "
+					"Detected Parity Error on %s %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: drivers/edac/edac_mc.c:1160:
+/* $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1217: FILE: drivers/edac/edac_mc.c:1162:
+ * ^IScan the PCI device list for one iteration, looking for SERRORs$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1222: FILE: drivers/edac/edac_mc.c:1167:
+	struct pci_dev *dev=NULL;
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1224: FILE: drivers/edac/edac_mc.c:1169:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1225: FILE: drivers/edac/edac_mc.c:1170:
+	
+

ERROR:SPACING: space required before the open parenthesis '('
#1230: FILE: drivers/edac/edac_mc.c:1175:
+	while((dev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, dev)) != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1230: FILE: drivers/edac/edac_mc.c:1175:
+	while((dev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, dev)) != NULL) {
+		
+		edac_pci_dev_parity_test( dev );
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1231: FILE: drivers/edac/edac_mc.c:1176:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1231: FILE: drivers/edac/edac_mc.c:1176:
+	while((dev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, dev)) != NULL) {
+		

ERROR:SPACING: space prohibited after that open parenthesis '('
#1232: FILE: drivers/edac/edac_mc.c:1177:
+		edac_pci_dev_parity_test( dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1232: FILE: drivers/edac/edac_mc.c:1177:
+		edac_pci_dev_parity_test( dev );

ERROR:SPACING: space required before the open parenthesis '('
#1236: FILE: drivers/edac/edac_mc.c:1181:
+	if(panic_on_pci_parity) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1238: FILE: drivers/edac/edac_mc.c:1183:
+		if( before_count != pci_parity_count )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1238: FILE: drivers/edac/edac_mc.c:1183:
+		if( before_count != pci_parity_count )

ERROR:SPACING: space required before the open parenthesis '('
#1238: FILE: drivers/edac/edac_mc.c:1183:
+		if( before_count != pci_parity_count )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1243: FILE: drivers/edac/edac_mc.c:1188:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1244: FILE: drivers/edac/edac_mc.c:1189:
+static void check_mc_devices (void)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mci->edac_check"
#1257: FILE: drivers/edac/edac_mc.c:1202:
+		if (mci->edac_check != NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1264: FILE: drivers/edac/edac_mc.c:1209:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1292: FILE: drivers/edac/edac_mc.c:1237:
+struct bs_thread_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#1309: FILE: drivers/edac/edac_mc.c:1254:
+	struct bs_thread_info *thread = (struct bs_thread_info *) arg;

ERROR:SPACING: space required before the open parenthesis '('
#1322: FILE: drivers/edac/edac_mc.c:1267:
+	while(thread->run != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "thread->run"
#1322: FILE: drivers/edac/edac_mc.c:1267:
+	while(thread->run != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1327: FILE: drivers/edac/edac_mc.c:1272:
+		if(run)

ERROR:SPACING: space required before the open parenthesis '('
#1330: FILE: drivers/edac/edac_mc.c:1275:
+		if(signal_pending(current))

WARNING:TYPO_SPELLING: 'interruptable' may be misspelled - perhaps 'interruptible'?
#1333: FILE: drivers/edac/edac_mc.c:1278:
+		/* ensure we are interruptable */
 		                 ^^^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1356: FILE: drivers/edac/edac_mc.c:1301:
+	printk(KERN_INFO "MC: " __FILE__ " version " EDAC_MC_VER

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_mc"
#1364: FILE: drivers/edac/edac_mc.c:1309:
+	if (proc_mc == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1367: FILE: drivers/edac/edac_mc.c:1312:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#1382: FILE: drivers/edac/edac_mc.c:1327:
+	if(ret < 0) {

WARNING:TYPO_SPELLING: 'theard' may be misspelled - perhaps 'thread'?
#1396: FILE: drivers/edac/edac_mc.c:1341:
+	/* wait for our kernel theard ack that it is up and running */
 	                       ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1402: FILE: drivers/edac/edac_mc.c:1347:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1438: FILE: drivers/edac/edac_mc.c:1383:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1440: FILE: drivers/edac/edac_mc.c:1385:
+
+

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1469: FILE: drivers/edac/edac_mc.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1482: FILE: drivers/edac/edac_mc.h:14:
+ * $Id: edac_mc.h,v 1.4.2.10 2005/10/05 00:43:44 dsp_llnl Exp $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1486: FILE: drivers/edac/edac_mc.h:18:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1490: FILE: drivers/edac/edac_mc.h:22:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1503: FILE: drivers/edac/edac_mc.h:35:
+
+

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1504: FILE: drivers/edac/edac_mc.h:36:
+#define	EDAC_MC_VER	"MC $Revision: 1.4.2.10 $"

ERROR:SPACING: space prohibited after that open parenthesis '('
#1509: FILE: drivers/edac/edac_mc.h:41:
+#define PAGES_TO_MiB( pages )	( ( pages ) >> ( 20 - PAGE_SHIFT ) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1509: FILE: drivers/edac/edac_mc.h:41:
+#define PAGES_TO_MiB( pages )	( ( pages ) >> ( 20 - PAGE_SHIFT ) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1511: FILE: drivers/edac/edac_mc.h:43:
+#define PAGES_TO_MiB( pages )	( ( pages ) << ( PAGE_SHIFT - 20 ) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1511: FILE: drivers/edac/edac_mc.h:43:
+#define PAGES_TO_MiB( pages )	( ( pages ) << ( PAGE_SHIFT - 20 ) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'level' may be better as '(level)' to avoid precedence issues
#1516: FILE: drivers/edac/edac_mc.h:48:
+#define edac_debug_printk(level, fmt, args...) \
+do { if (level <= edac_debug_level) printk(KERN_DEBUG fmt, ##args); } while(0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1517: FILE: drivers/edac/edac_mc.h:49:
+do { if (level <= edac_debug_level) printk(KERN_DEBUG fmt, ##args); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1517: FILE: drivers/edac/edac_mc.h:49:
+do { if (level <= edac_debug_level) printk(KERN_DEBUG fmt, ##args); } while(0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1518: FILE: drivers/edac/edac_mc.h:50:
+#define debugf0( ... ) edac_debug_printk(0, __VA_ARGS__ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1518: FILE: drivers/edac/edac_mc.h:50:
+#define debugf0( ... ) edac_debug_printk(0, __VA_ARGS__ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1519: FILE: drivers/edac/edac_mc.h:51:
+#define debugf1( ... ) edac_debug_printk(1, __VA_ARGS__ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1519: FILE: drivers/edac/edac_mc.h:51:
+#define debugf1( ... ) edac_debug_printk(1, __VA_ARGS__ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1520: FILE: drivers/edac/edac_mc.h:52:
+#define debugf2( ... ) edac_debug_printk(2, __VA_ARGS__ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1520: FILE: drivers/edac/edac_mc.h:52:
+#define debugf2( ... ) edac_debug_printk(2, __VA_ARGS__ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1521: FILE: drivers/edac/edac_mc.h:53:
+#define debugf3( ... ) edac_debug_printk(3, __VA_ARGS__ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1521: FILE: drivers/edac/edac_mc.h:53:
+#define debugf3( ... ) edac_debug_printk(3, __VA_ARGS__ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1523: FILE: drivers/edac/edac_mc.h:55:
+#define debugf0( ... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1523: FILE: drivers/edac/edac_mc.h:55:
+#define debugf0( ... )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1524: FILE: drivers/edac/edac_mc.h:56:
+#define debugf1( ... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1524: FILE: drivers/edac/edac_mc.h:56:
+#define debugf1( ... )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1525: FILE: drivers/edac/edac_mc.h:57:
+#define debugf2( ... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1525: FILE: drivers/edac/edac_mc.h:57:
+#define debugf2( ... )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1526: FILE: drivers/edac/edac_mc.h:58:
+#define debugf3( ... )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1526: FILE: drivers/edac/edac_mc.h:58:
+#define debugf3( ... )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1529: FILE: drivers/edac/edac_mc.h:61:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1536: FILE: drivers/edac/edac_mc.h:68:
+#define PCI_VEND_DEV(vend, dev) PCI_VENDOR_ID_ ## vend, PCI_DEVICE_ID_ ## vend ## _ ## dev

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1586: FILE: drivers/edac/edac_mc.h:118:
+
+

WARNING:TYPO_SPELLING: 'Doesnt' may be misspelled - perhaps 'Doesn't'?
#1590: FILE: drivers/edac/edac_mc.h:122:
+	EDAC_NONE,		/* Doesnt support ECC */
 	          		   ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1611: FILE: drivers/edac/edac_mc.h:143:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1635: FILE: drivers/edac/edac_mc.h:167:
+
+

WARNING:TYPO_SPELLING: 'agregates' may be misspelled - perhaps 'aggregates'?
#1654: FILE: drivers/edac/edac_mc.h:186:
+ * Memory Stick:	A printed circuit board that agregates multiple
                 	                             ^^^^^^^^^

WARNING:TYPO_SPELLING: 'memmory' may be misspelled - perhaps 'memory'?
#1680: FILE: drivers/edac/edac_mc.h:212:
+ * Single-Ranked stick:	A Single-ranked stick has 1 chip-select row of memmory.
                        	                                               ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1687: FILE: drivers/edac/edac_mc.h:219:
+ *^I^I^Irows cannot be accessed concurrently.  $

WARNING:REPEATED_WORD: Possible repeated word: 'for'
#1696: FILE: drivers/edac/edac_mc.h:228:
+ * Socket set:		All of the memory sticks that are required for for

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1699: FILE: drivers/edac/edac_mc.h:231:
+ *^I^I^Ihas two chip-select rows and if double-sided sticks $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1715: FILE: drivers/edac/edac_mc.h:247:
+ * $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1720: FILE: drivers/edac/edac_mc.h:252:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1728: FILE: drivers/edac/edac_mc.h:260:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1732: FILE: drivers/edac/edac_mc.h:264:
+^Iunsigned long page_mask;^I/* used for interleaving - $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1733: FILE: drivers/edac/edac_mc.h:265:
+	unsigned long page_mask;	/* used for interleaving - 
+					   0UL for non intlv */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1733: FILE: drivers/edac/edac_mc.h:265:
+					   0UL for non intlv */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1748: FILE: drivers/edac/edac_mc.h:280:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1754: FILE: drivers/edac/edac_mc.h:286:
+	unsigned long edac_cap;	/* configuration capabilities - this is
+				   closely related to edac_ctl_cap.  The

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1759: FILE: drivers/edac/edac_mc.h:291:
+				   edac_cap would not have that capability. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1763: FILE: drivers/edac/edac_mc.h:295:
+	void (*edac_check) (struct mem_ctl_info * mci);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1763: FILE: drivers/edac/edac_mc.h:295:
+	void (*edac_check) (struct mem_ctl_info * mci);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1769: FILE: drivers/edac/edac_mc.h:301:
+	unsigned long (*ctl_page_to_phys) (struct mem_ctl_info * mci,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1769: FILE: drivers/edac/edac_mc.h:301:
+	unsigned long (*ctl_page_to_phys) (struct mem_ctl_info * mci,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1801: FILE: drivers/edac/edac_mc.h:333:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1808: FILE: drivers/edac/edac_mc.h:340:
+		u8 buf;
+		pci_read_config_byte(pdev, offset, &buf);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1816: FILE: drivers/edac/edac_mc.h:348:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1823: FILE: drivers/edac/edac_mc.h:355:
+		u16 buf;
+		pci_read_config_word(pdev, offset, &buf);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1831: FILE: drivers/edac/edac_mc.h:363:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1838: FILE: drivers/edac/edac_mc.h:370:
+		u32 buf;
+		pci_read_config_dword(pdev, offset, &buf);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1846: FILE: drivers/edac/edac_mc.h:378:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1853: FILE: drivers/edac/edac_mc.h:385:
+extern int edac_mc_add_mc(struct mem_ctl_info *mci);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1854: FILE: drivers/edac/edac_mc.h:386:
+extern int edac_mc_del_mc(struct mem_ctl_info *mci);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1856: FILE: drivers/edac/edac_mc.h:388:
+extern int edac_mc_find_csrow_by_page(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1857: FILE: drivers/edac/edac_mc.h:389:
+extern int edac_mc_find_csrow_by_page(struct mem_ctl_info *mci,
+					   unsigned long page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1859: FILE: drivers/edac/edac_mc.h:391:
+extern struct mem_ctl_info *edac_mc_find_mci_by_pdev(struct pci_dev

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1862: FILE: drivers/edac/edac_mc.h:394:
+extern void edac_mc_scrub_block(unsigned long page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1863: FILE: drivers/edac/edac_mc.h:395:
+extern void edac_mc_scrub_block(unsigned long page,
+				     unsigned long offset, u32 size);

WARNING:TYPO_SPELLING: 'exausted' may be misspelled - perhaps 'exhausted'?
#1868: FILE: drivers/edac/edac_mc.h:400:
+ * be exausted.  When all registers are exhausted and an additional
       ^^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1870: FILE: drivers/edac/edac_mc.h:402:
+ * error occured and the type of error, but doesn't have any
          ^^^^^^^

WARNING:TYPO_SPELLING: 'ue' may be misspelled - perhaps 'use'?
#1871: FILE: drivers/edac/edac_mc.h:403:
+ * further information.  The ce/ue versions make for cleaner
                                 ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1875: FILE: drivers/edac/edac_mc.h:407:
+extern void edac_mc_handle_ce(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1876: FILE: drivers/edac/edac_mc.h:408:
+extern void edac_mc_handle_ce(struct mem_ctl_info *mci,
+				   unsigned long page_frame_number,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1881: FILE: drivers/edac/edac_mc.h:413:
+extern void edac_mc_handle_ce_no_info(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1882: FILE: drivers/edac/edac_mc.h:414:
+extern void edac_mc_handle_ce_no_info(struct mem_ctl_info *mci,
+					   const char *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1884: FILE: drivers/edac/edac_mc.h:416:
+extern void edac_mc_handle_ue(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1885: FILE: drivers/edac/edac_mc.h:417:
+extern void edac_mc_handle_ue(struct mem_ctl_info *mci,
+				   unsigned long page_frame_number,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1889: FILE: drivers/edac/edac_mc.h:421:
+extern void edac_mc_handle_ue_no_info(struct mem_ctl_info *mci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1890: FILE: drivers/edac/edac_mc.h:422:
+extern void edac_mc_handle_ue_no_info(struct mem_ctl_info *mci,
+					   const char *msg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1896: FILE: drivers/edac/edac_mc.h:428:
+extern struct mem_ctl_info *edac_mc_alloc(unsigned sz_pvt,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1896: FILE: drivers/edac/edac_mc.h:428:
+extern struct mem_ctl_info *edac_mc_alloc(unsigned sz_pvt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1897: FILE: drivers/edac/edac_mc.h:429:
+extern struct mem_ctl_info *edac_mc_alloc(unsigned sz_pvt,
+		unsigned nr_csrows, unsigned nr_chans);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1897: FILE: drivers/edac/edac_mc.h:429:
+		unsigned nr_csrows, unsigned nr_chans);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1897: FILE: drivers/edac/edac_mc.h:429:
+		unsigned nr_csrows, unsigned nr_chans);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1905: FILE: drivers/edac/edac_mc.h:437:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144193.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 72 errors, 139 warnings, 118 checks, 1847 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144193.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
