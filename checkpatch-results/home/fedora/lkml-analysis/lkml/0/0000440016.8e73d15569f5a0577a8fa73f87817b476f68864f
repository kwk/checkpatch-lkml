ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#179: FILE: fs/fat/cache.c:40:
+	if (!(bh = sb_bread(sb, b))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#180: FILE: fs/fat/cache.c:41:
+		printk(KERN_ERR "FAT: bread(block %d) in fat_access failed\n", b);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#189: FILE: fs/fat/cache.c:47:
+		if (!(bh2 = sb_bread(sb, b+1))) {
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#189: FILE: fs/fat/cache.c:47:
+		if (!(bh2 = sb_bread(sb, b+1))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#191: FILE: fs/fat/cache.c:49:
+			printk(KERN_ERR "FAT: bread(block %d) in fat_access failed\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#208: FILE: fs/fat/cache.c:94:
+			if (!(c_bh = sb_bread(sb, b)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#213: FILE: fs/fat/cache.c:97:
+				if (!(c_bh2 = sb_bread(sb, b+1))) {
 				                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#213: FILE: fs/fat/cache.c:97:
+				if (!(c_bh2 = sb_bread(sb, b+1))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: fs/fat/cache.c:116:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#262: FILE: fs/fat/cache.c:220:
+				printk(KERN_ERR "FAT: cache corruption "

WARNING:SPLIT_STRING: quoted string split across lines
#263: FILE: fs/fat/cache.c:221:
+				printk(KERN_ERR "FAT: cache corruption "
+				       "inode = %lu\n", inode->i_ino);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#602: FILE: fs/fat/file.c:17:
+static ssize_t fat_file_write(struct file *filp, const char *buf, size_t count,
                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#608: FILE: fs/fat/file.c:22:
+	read:		generic_file_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#608: FILE: fs/fat/file.c:22:
+	read:		generic_file_read,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#652: FILE: fs/fat/file.c:69:
+static ssize_t fat_file_write(struct file *filp, const char *buf, size_t count,
                                            ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#702: FILE: fs/fat/inode.c:295:
+			printk(KERN_WARNING "FAT: fat option is obsolete, "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#711: FILE: fs/fat/inode.c:303:
+			printk(KERN_WARNING "FAT: blocksize option is obsolete, "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#785: FILE: fs/fat/inode.c:650:
+		printk(KERN_ERR "FAT: unable to read boot sector\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#793: FILE: fs/fat/inode.c:657:
+			printk(KERN_ERR "FAT: bogus number of reserved sectors\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#800: FILE: fs/fat/inode.c:663:
+			printk(KERN_ERR "FAT: bogus number of FAT structure\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#807: FILE: fs/fat/inode.c:669:
+			printk(KERN_ERR "FAT: bogus sectors-per-track value\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#814: FILE: fs/fat/inode.c:675:
+			printk(KERN_ERR "FAT: bogus number-of-heads value\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#823: FILE: fs/fat/inode.c:693:
+			printk(KERN_ERR "FAT: bogus logical sector size %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#832: FILE: fs/fat/inode.c:702:
+			printk(KERN_ERR "FAT: bogus cluster size %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#840: FILE: fs/fat/inode.c:709:
+		printk(KERN_ERR "FAT: logical sector size too small for device"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#849: FILE: fs/fat/inode.c:718:
+			printk(KERN_ERR "FAT: unable to set blocksize %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#856: FILE: fs/fat/inode.c:724:
+			printk(KERN_ERR "FAT: unable to read boot sector"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#865: FILE: fs/fat/inode.c:759:
+			printk(KERN_ERR "FAT: bread failed, FSINFO block"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#874: FILE: fs/fat/inode.c:767:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#884: FILE: fs/fat/inode.c:788:
+		printk(KERN_ERR "FAT: bogus directroy-entries per block\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#893: FILE: fs/fat/inode.c:819:
+			printk(KERN_ERR "FAT: invalid first entry of FAT "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#916: FILE: fs/fat/inode.c:832:
+			printk(KERN_ERR "FAT: codepage %s not found\n", buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#924: FILE: fs/fat/inode.c:839:
+		printk(KERN_INFO "FAT: Using codepage %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#933: FILE: fs/fat/inode.c:847:
+				printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#942: FILE: fs/fat/inode.c:855:
+			printk(KERN_INFO "FAT: Using IO charset %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#951: FILE: fs/fat/inode.c:872:
+		printk(KERN_ERR "FAT: get root inode failed\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#991: FILE: fs/fat/inode.c:1048:
+	if (!(bh = sb_bread(sb, i_pos >> MSDOS_SB(sb)->dir_per_block_bits))) {

WARNING:SPLIT_STRING: quoted string split across lines
#993: FILE: fs/fat/inode.c:1050:
+		fat_fs_panic(sb, "FAT: unable to read i-node block "
+			     "(dev = %s, pos = %u)\n", sb->s_id, i_pos);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1024: FILE: fs/fat/misc.c:52:
+	printk(KERN_ERR "FAT: Filesystem panic (dev %s)\n"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1028: FILE: fs/fat/misc.c:55:
+		printk(KERN_ERR "    File system has been set read-only\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1038: FILE: fs/fat/misc.c:78:
+			printk(KERN_WARNING "Invalid conversion mode "

WARNING:SPLIT_STRING: quoted string split across lines
#1039: FILE: fs/fat/misc.c:79:
+			printk(KERN_WARNING "Invalid conversion mode "
+			       "- defaulting to binary.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1051: FILE: fs/fat/misc.c:108:
+		printk(KERN_ERR "FAT bread failed in fat_clusters_flush\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1059: FILE: fs/fat/misc.c:115:
+		printk(KERN_ERR "FAT: Did not find valid FSINFO signature.\n"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1079: FILE: fs/fat/misc.c:208:
+		printk (KERN_ERR "file_cluster badly computed!!! %d <> %ld\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1079: FILE: fs/fat/misc.c:208:
+		printk (KERN_ERR "file_cluster badly computed!!! %d <> %ld\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1105: FILE: fs/fat/misc.c:237:
+		if ((bh = sb_getblk(sb, sector))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#1117: FILE: fs/fat/misc.c:247:
+	if (res == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1139: FILE: fs/fat/misc.c:352:
+		printk(KERN_ERR "FAT: Directory bread(block %d) failed\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1149: FILE: fs/fat/misc.c:426:
+	if (!(bh = sb_bread(sb,sector)))
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1149: FILE: fs/fat/misc.c:426:
+	if (!(bh = sb_bread(sb,sector)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1370: FILE: fs/vfat/namei.c:120:
+	while ((this_char = strsep(&args,",")) != NULL) {
 	                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440016.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 38 warnings, 3 checks, 1112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440016.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
