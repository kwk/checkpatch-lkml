CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: include/linux/rtmutex_internal.h:25:
+extern void schedule_rt_mutex_test(struct rt_mutex *lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: include/linux/rtmutex_internal.h:28:
+  do {^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: include/linux/rtmutex_internal.h:33:
+  } while (0)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#129: FILE: kernel/rtmutex-tester.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: kernel/rtmutex-tester.c:49:
+^IRTTEST_LOCKBKL, ^I/* 9 Lock BKL */$

ERROR:SPACING: space required before the open parenthesis '('
#189: FILE: kernel/rtmutex-tester.c:61:
+	switch(td->opcode) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#190: FILE: kernel/rtmutex-tester.c:62:
+	switch(td->opcode) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#233: FILE: kernel/rtmutex-tester.c:105:
+	switch(td->opcode) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#234: FILE: kernel/rtmutex-tester.c:106:
+	switch(td->opcode) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#311: FILE: kernel/rtmutex-tester.c:183:
+	BUG_ON(tid == MAX_RT_TEST_THREADS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#340: FILE: kernel/rtmutex-tester.c:212:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#405: FILE: kernel/rtmutex-tester.c:277:
+	for(;;) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#406: FILE: kernel/rtmutex-tester.c:278:
+	for(;;) {
+

ERROR:SPACING: space required before the open parenthesis '('
#422: FILE: kernel/rtmutex-tester.c:294:
+		if(kthread_should_stop())

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#453: FILE: kernel/rtmutex-tester.c:325:
+	if (buf[count-1] == '\n')
 	             ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#504: FILE: kernel/rtmutex-tester.c:376:
+	for (i = MAX_RT_TEST_MUTEXES - 1; i >=0 ; i--)
 	                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#559: FILE: kernel/rtmutex-tester.c:431:
+	printk("Initializing RT-Tester: %s\n", ret ? "Failed" : "OK" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#559: FILE: kernel/rtmutex-tester.c:431:
+	printk("Initializing RT-Tester: %s\n", ret ? "Failed" : "OK" );

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#587: FILE: lib/Kconfig.debug:137:
+config RT_MUTEX_TESTER
+	bool "Built-in scriptable tester for rt-mutexes"
+	depends on RT_MUTEXES
+	default n
+	help
+	  This option enables a rt-mutex tester.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#602: FILE: scripts/rt-tester/check-all.sh:1:
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#629: FILE: scripts/rt-tester/rt-tester.py:2:
+#

WARNING:TYPO_SPELLING: 'Seperate' may be misspelled - perhaps 'Separate'?
#812: FILE: scripts/rt-tester/rt-tester.py:185:
+                        # Seperate status value
                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090532.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 10 warnings, 6 checks, 1951 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090532.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
