ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: drivers/acpi/system.c:102:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#65: FILE: drivers/acpi/system.c:104:
+	printk(KERN_EMERG "running on cpu %d\n", cpuid);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#67: FILE: drivers/acpi/system.c:106:
+	if (cpuid != boot_cpu_physical_apicid) {
+printk(KERN_EMERG "within if(cpuid)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#68: FILE: drivers/acpi/system.c:107:
+printk(KERN_EMERG "within if(cpuid)\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: drivers/acpi/system.c:109:
+^I^I/* check to see if reboot_cpu is valid $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#71: FILE: drivers/acpi/system.c:110:
+		/* check to see if reboot_cpu is valid 
+		   if its not, default to the BSP */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#71: FILE: drivers/acpi/system.c:110:
+		   if its not, default to the BSP */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: drivers/acpi/system.c:111:
+^I^Iif ((reboot_cpu == -1) ||  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: drivers/acpi/system.c:112:
+^I^I      (reboot_cpu > (NR_CPUS -1))  || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: drivers/acpi/system.c:112:
+		if ((reboot_cpu == -1) ||  
+		      (reboot_cpu > (NR_CPUS -1))  || 

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#73: FILE: drivers/acpi/system.c:112:
+		      (reboot_cpu > (NR_CPUS -1))  || 
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#73: FILE: drivers/acpi/system.c:112:
+		      (reboot_cpu > (NR_CPUS -1))  || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: drivers/acpi/system.c:117:
+^I^I   it will fall though this section since we have $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#78: FILE: drivers/acpi/system.c:117:
+		/* re-run this function on the other CPUs
+		   it will fall though this section since we have 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#80: FILE: drivers/acpi/system.c:119:
+		   correct CPU, otherwise it halts. */

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#82: FILE: drivers/acpi/system.c:121:
+			smp_call_function((void *)acpi_power_off , NULL, 1, 0);
 			                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#84: FILE: drivers/acpi/system.c:123:
+printk(KERN_EMERG "after if(cpuid)\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/acpi/system.c:125:
+^I/* if reboot_cpu is still -1, then we want a tradional reboot, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#87: FILE: drivers/acpi/system.c:126:
+	/* if reboot_cpu is still -1, then we want a tradional reboot, 
+	   and if we are not running on the reboot_cpu,, halt */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#87: FILE: drivers/acpi/system.c:126:
+	   and if we are not running on the reboot_cpu,, halt */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#88: FILE: drivers/acpi/system.c:127:
+	if ((reboot_cpu != -1) && (cpuid != reboot_cpu)) {
+printk(KERN_EMERG "halting this cpu: %d\n", cpuid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpuid != reboot_cpu'
#88: FILE: drivers/acpi/system.c:127:
+	if ((reboot_cpu != -1) && (cpuid != reboot_cpu)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#89: FILE: drivers/acpi/system.c:128:
+printk(KERN_EMERG "halting this cpu: %d\n", cpuid);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#90: FILE: drivers/acpi/system.c:129:
+		for (;;)
+		__asm__ __volatile__ ("hlt");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#97: FILE: drivers/acpi/system.c:136:
+printk(KERN_EMERG "before smp_send_stop()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#99: FILE: drivers/acpi/system.c:138:
+printk(KERN_EMERG "after smp_send_stop()\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#101: FILE: drivers/acpi/system.c:140:
+	if (cpu_has_apic) {
+printk(KERN_EMERG "before __cli()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#102: FILE: drivers/acpi/system.c:141:
+printk(KERN_EMERG "before __cli()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#104: FILE: drivers/acpi/system.c:143:
+printk(KERN_EMERG "between __cli() and disable_local_APIC()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#106: FILE: drivers/acpi/system.c:145:
+printk(KERN_EMERG "between disable_local_APIC() and __sti()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#108: FILE: drivers/acpi/system.c:147:
+printk(KERN_EMERG "after __cli()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#112: FILE: drivers/acpi/system.c:151:
+printk(KERN_EMERG "before disable_IO_APIC()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#114: FILE: drivers/acpi/system.c:153:
+printk(KERN_EMERG "after disable_IO_APIC()\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000300497.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 23 warnings, 3 checks, 69 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000300497.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
