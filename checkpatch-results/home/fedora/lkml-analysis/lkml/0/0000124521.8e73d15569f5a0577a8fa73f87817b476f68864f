WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#40: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#80: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:36:
+ * $Id: ipath_copy.c 4365 2005-12-10 00:04:16Z rjwalsh $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#94: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:50:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#96: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:52:
+#include <asm/bitops.h>

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#115: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:71:
+	uint32_t device = cdp->device;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#116: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:72:
+	uint32_t extra_bytes;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#117: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:73:
+	uint32_t len, nwords;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#118: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:74:
+	uint32_t *piobuf;

WARNING:TYPO_SPELLING: 'aligment' may be misspelled - perhaps 'alignment'?
#134: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:90:
+	/* Compute word aligment (i.e., (len & 3) ? 4 - (len & 3) : 0) */
 	                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:100:
+	cdp->hdr->iph.pkt_flags = ((cdp->len+cdp->extra) == len) ? INFINIPATH_KPF_INTR : 0;
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#146: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:102:
+	    (uint16_t) IPS_LRH_BTH +

CHECK:SPACING: No space is necessary after a cast
#147: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:103:
+	    (uint16_t) (nwords + SIZE_OF_CRC) -

CHECK:SPACING: No space is necessary after a cast
#148: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:104:
+	    (uint16_t) ((cdp->hdr->iph.ver_port_tid_offset >> 16) & 0xFFFF) -

CHECK:SPACING: No space is necessary after a cast
#149: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:105:
+	    (uint16_t) (cdp->hdr->iph.ver_port_tid_offset & 0xFFFF) -

CHECK:SPACING: No space is necessary after a cast
#150: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:106:
+	    (uint16_t) cdp->hdr->iph.pkt_flags;

CHECK:SPACING: No space is necessary after a cast
#152: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:108:
+	piobuf = (uint32_t *) (((char *)(devdata[device].ipath_kregbase)) +

CHECK:SPACING: No space is necessary after a cast
#165: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:121:
+	*((uint64_t *) piobuf) = (uint64_t) (nwords + 1);

CHECK:SPACING: No space is necessary after a cast
#167: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:123:
+	ipath_dwordcpy(piobuf, (uint32_t *) cdp->hdr,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#188: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:144:
+	uint32_t n;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#192: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:148:
+	if ((int)(copy = start - offset) > 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#215: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:171:
+					if (cdp->flen == 0
+					    && layer_send_getpiobuf(cdp) < 0)

CHECK:SPACING: No space is necessary after a cast
#230: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:186:
+			ipath_dwordcpy(cdp->to, (uint32_t *) p, n);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#249: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:205:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#259: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:215:
+		if ((int)(copy = end - offset) > 0) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#284: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:240:
+						if (cdp->flen == 0

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#285: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:241:
+						if (cdp->flen == 0
+						    && layer_send_getpiobuf(cdp)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#297: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:253:
+				if (cdp->flen == 0
+				    && layer_send_getpiobuf(cdp) < 0)

CHECK:SPACING: No space is necessary after a cast
#302: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:258:
+				ipath_dwordcpy(cdp->to, (uint32_t *) p, n);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#337: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:293:
+			if ((int)(copy = end - offset) > 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#341: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:297:
+				if (cdp->error || (len -= copy) == 0)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#365: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:321:
+	uint32_t n;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#369: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:325:
+	if ((int)(copy = start - offset) > 0) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#398: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:354:
+					if (cdp->flen == 0
+					    && layer_send_getpiobuf(cdp) < 0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#407: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:363:
+						mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#427: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:383:
+				mb();

CHECK:SPACING: No space is necessary after a cast
#429: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:385:
+			ipath_dwordcpy(cdp->to, (uint32_t *) p, n);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#460: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:416:
+		if ((int)(copy = end - offset) > 0) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#493: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:449:
+						if (cdp->flen == 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#494: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:450:
+						if (cdp->flen == 0
+						    && layer_send_getpiobuf(cdp)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#504: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:460:
+						if (cdp->flen == 1) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'cdp->csum'
#507: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:463:
+							    csum_fold(cdp->
+								      csum);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MEMORY_BARRIER: memory barrier without comment
#508: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:464:
+							mb();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#519: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:475:
+				if (cdp->flen == 0
+				    && layer_send_getpiobuf(cdp) < 0) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#532: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:488:
+					mb();

CHECK:SPACING: No space is necessary after a cast
#534: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:490:
+				ipath_dwordcpy(cdp->to, (uint32_t *) p, n);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#571: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:527:
+			if ((int)(copy = end - offset) > 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#575: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:531:
+				if (cdp->error || (len -= copy) == 0)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#596: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:552:
+	uint16_t vlsllnh;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#606: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:562:
+	} else
+	    if ((devdata[device].ipath_flags & (IPATH_LINKUNK | IPATH_LINKDOWN))

CHECK:BRACES: Unbalanced braces around else statement
#606: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:562:
+	} else

WARNING:TABSTOP: Statements should start on a tabstop
#607: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:563:
+	    if ((devdata[device].ipath_flags & (IPATH_LINKUNK | IPATH_LINKDOWN))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#608: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:564:
+	    if ((devdata[device].ipath_flags & (IPATH_LINKUNK | IPATH_LINKDOWN))
+		|| devdata[device].ipath_lid == 0) {

CHECK:SPACING: No space is necessary after a cast
#615: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:571:
+	vlsllnh = *((uint16_t *) cdata->hdr);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#650: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:606:
+		if (cdata->error) {
+			return (cdata->error);
+
+		}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#651: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:607:
+			return (cdata->error);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#653: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:609:
+
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#660: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:616:
+		if (cdata->error) {
+			return (cdata->error);
+		}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#661: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:617:
+			return (cdata->error);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#668: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:624:
+			if (cdata->flen != 0
+			    || layer_send_getpiobuf(cdata) >= 0) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#674: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:630:
+				mb();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#682: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:638:
+		if (cdata->error) {
+			return (cdata->error);
+		}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#683: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:639:
+			return (cdata->error);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#690: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:646:
+			if (cdata->flen != 0
+			    || layer_send_getpiobuf(cdata) >= 0)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#710: FILE: drivers/infiniband/hw/ipath/ipath_copy.c:666:
+EXPORT_SYMBOL(ipath_layer_send_skb);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#717: FILE: drivers/infiniband/hw/ipath/ipath_dwordcpy.S:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#754: FILE: drivers/infiniband/hw/ipath/ipath_dwordcpy.S:38:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#771: FILE: drivers/infiniband/hw/ipath/ipath_dwordcpy.S:55:
+^Iandl $1,%edx^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#773: FILE: drivers/infiniband/hw/ipath/ipath_dwordcpy.S:57:
+^Irep $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: drivers/infiniband/hw/ipath/ipath_dwordcpy.S:58:
+^Imovsq $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 22 warnings, 33 checks, 728 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
