WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#29: 
Signed-off-by:  Don Zickus <dzickus@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: arch/x86_64/kernel/nmi.c:750:
+	die_nmi(buf,regs);
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#238: FILE: arch/i386/oprofile/nmi_int.c:19:
+#include <asm/kdebug.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: arch/i386/oprofile/nmi_int.c:86:
+int profile_exceptions_notify(struct notifier_block *self,
+				unsigned long val, void *data)

ERROR:SPACING: space required before the open parenthesis '('
#266: FILE: arch/i386/oprofile/nmi_int.c:92:
+	switch(val) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#294: FILE: arch/i386/oprofile/nmi_int.c:196:
+	int err=0;
 	       ^

ERROR:SPACING: space required before the open brace '{'
#305: FILE: arch/i386/oprofile/nmi_int.c:201:
+	if ((err = register_die_notifier(&profile_exceptions_nb))){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#305: FILE: arch/i386/oprofile/nmi_int.c:201:
+	if ((err = register_die_notifier(&profile_exceptions_nb))){

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#338: FILE: arch/i386/oprofile/nmi_timer_int.c:20:
+#include <asm/kdebug.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: arch/i386/oprofile/nmi_timer_int.c:23:
+int profile_timer_exceptions_notify(struct notifier_block *self,
+				unsigned long val, void *data)

ERROR:SPACING: space required before the open parenthesis '('
#349: FILE: arch/i386/oprofile/nmi_timer_int.c:28:
+	switch(val) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nmi_watchdog != NMI_IO_APIC'
#388: FILE: arch/i386/oprofile/nmi_timer_int.c:62:
+	if ((nmi_watchdog != NMI_IO_APIC) || (atomic_read(&nmi_active) <= 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#455: FILE: arch/i386/kernel/nmi.c:827:
+int do_nmi_callback(struct pt_regs * regs, int cpu)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 1 warnings, 5 checks, 536 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
