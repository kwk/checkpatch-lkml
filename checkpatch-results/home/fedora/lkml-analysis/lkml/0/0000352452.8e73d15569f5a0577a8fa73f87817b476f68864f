WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
Content-Disposition: attachment; filename="patch-2.4.22-pre7-mq0.05-mq0.06.diff"

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: fs/dquot.c:350:
+    ^Ifor (i=0; i<NR_DQHASH; i++) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: fs/dquot.c:350:
+    ^Ifor (i=0; i<NR_DQHASH; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: fs/dquot.c:350:
+    ^Ifor (i=0; i<NR_DQHASH; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#95: FILE: fs/dquot.c:350:
+    	for (i=0; i<NR_DQHASH; i++) {
     	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#95: FILE: fs/dquot.c:350:
+    	for (i=0; i<NR_DQHASH; i++) {
     	           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: fs/dquot.c:351:
+^I    ^Istruct list_head *head = &hash->dqh_hash[i];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: fs/dquot.c:351:
+^I    ^Istruct list_head *head = &hash->dqh_hash[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: fs/dquot.c:354:
+^I^I    ^Istruct dquot *dquot = list_entry(head, struct dquot, dq_hash);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: fs/dquot.c:354:
+^I^I    ^Istruct dquot *dquot = list_entry(head, struct dquot, dq_hash);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: fs/dquot.c:356:
+ ^I^I    ^Iif (dquot->dq_type != type)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: fs/dquot.c:356:
+ ^I^I    ^Iif (dquot->dq_type != type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/dquot.c:356:
+ ^I^I    ^Iif (dquot->dq_type != type)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: fs/dquot.c:357:
+^I^I^I    ^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: fs/dquot.c:357:
+^I^I^I    ^Icontinue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: fs/dquot.c:358:
+^I^I    ^Idquot->dq_flags |= DQ_INVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: fs/dquot.c:358:
+^I^I    ^Idquot->dq_flags |= DQ_INVAL;$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#107: FILE: fs/dquot.c:362:
+				 *  Wait for any users of quota. As we have already cleared the flags in

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: fs/dquot.c:367:
+^I^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: fs/dquot.c:390:
+^I    ^Ireturn ERR_PTR(-ENOMEM);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: fs/dquot.c:390:
+^I    ^Ireturn ERR_PTR(-ENOMEM);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: fs/dquot.c:392:
+ ^Imemset(hash, 0, sizeof(struct dqhash));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: fs/dquot.c:392:
+ ^Imemset(hash, 0, sizeof(struct dqhash));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/dquot.c:392:
+ ^Imemset(hash, 0, sizeof(struct dqhash));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: fs/dquot.c:393:
+ ^Ihash->dqh_id = id;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: fs/dquot.c:393:
+ ^Ihash->dqh_id = id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/dquot.c:393:
+ ^Ihash->dqh_id = id;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: fs/dquot.c:394:
+ ^IINIT_LIST_HEAD(&hash->dqh_list);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: fs/dquot.c:394:
+ ^IINIT_LIST_HEAD(&hash->dqh_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: fs/dquot.c:394:
+ ^IINIT_LIST_HEAD(&hash->dqh_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: fs/dquot.c:395:
+ ^Ifor (i = 0; i < NR_DQHASH; i++)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#152: FILE: fs/dquot.c:395:
+ ^Ifor (i = 0; i < NR_DQHASH; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/dquot.c:395:
+ ^Ifor (i = 0; i < NR_DQHASH; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: fs/dquot.c:396:
+ ^I^IINIT_LIST_HEAD(hash->dqh_hash + i);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: fs/dquot.c:396:
+ ^I^IINIT_LIST_HEAD(hash->dqh_hash + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/dquot.c:396:
+ ^I^IINIT_LIST_HEAD(hash->dqh_hash + i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: fs/dquot.c:397:
+ ^Isema_init(&hash->dqh_dqopt.dqio_sem, 1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: fs/dquot.c:397:
+ ^Isema_init(&hash->dqh_dqopt.dqio_sem, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: fs/dquot.c:397:
+ ^Isema_init(&hash->dqh_dqopt.dqio_sem, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: fs/dquot.c:398:
+ ^Isema_init(&hash->dqh_dqopt.dqoff_sem, 1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: fs/dquot.c:398:
+ ^Isema_init(&hash->dqh_dqopt.dqoff_sem, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: fs/dquot.c:398:
+ ^Isema_init(&hash->dqh_dqopt.dqoff_sem, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/dquot.c:399:
+ ^Ihash->dqh_qop = &dquot_operations;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: fs/dquot.c:399:
+ ^Ihash->dqh_qop = &dquot_operations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/dquot.c:399:
+ ^Ihash->dqh_qop = &dquot_operations;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: fs/dquot.c:400:
+ ^Ihash->dqh_qcop = &vfs_quotactl_ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: fs/dquot.c:400:
+ ^Ihash->dqh_qcop = &vfs_quotactl_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/dquot.c:400:
+ ^Ihash->dqh_qcop = &vfs_quotactl_ops;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: fs/dquot.c:401:
+ ^Ihash->dqh_sb = sb;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: fs/dquot.c:401:
+ ^Ihash->dqh_sb = sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: fs/dquot.c:401:
+ ^Ihash->dqh_sb = sb;$

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#164: FILE: fs/dquot.c:406:
+	dprintk ("иии new_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);
 	          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: fs/dquot.c:406:
+	dprintk ("иии new_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'new_dqhash', this function's name, in a string
#164: FILE: fs/dquot.c:406:
+	dprintk ("иии new_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#173: FILE: fs/dquot.c:414:
+	dprintk ("иии destroy_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);
 	          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: fs/dquot.c:414:
+	dprintk ("иии destroy_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: include/linux/quota.h:320:
+    ^Istruct super_block *dqh_sb; ^I/* super block */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#295: FILE: include/linux/quota.h:320:
+    ^Istruct super_block *dqh_sb; ^I/* super block */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: include/linux/quota.h:320:
+    ^Istruct super_block *dqh_sb; ^I/* super block */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: include/linux/quota.h:326:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#315: FILE: include/linux/quota.h:341:
+#define destroy_dqhash(hash)		do { } while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: include/linux/quotaops.h:20:
+#define dprintk(...)^I$

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#449: FILE: fs/dquot.c:197:
+static inline struct dquot *find_dquot(struct dqhash *hash, unsigned int hashent, unsigned int id, int type)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#455: FILE: fs/dquot.c:202:
+	for (head = hash->dqh_hash[hashent].next; head != hash->dqh_hash+hashent; head = head->next) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#455: FILE: fs/dquot.c:202:
+	for (head = hash->dqh_hash[hashent].next; head != hash->dqh_hash+hashent; head = head->next) {
 	                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: fs/dquot.c:350:
+    ^Ifor (i=0; i<NR_DQHASH; i++) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#489: FILE: fs/dquot.c:350:
+    ^Ifor (i=0; i<NR_DQHASH; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: fs/dquot.c:350:
+    ^Ifor (i=0; i<NR_DQHASH; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#489: FILE: fs/dquot.c:350:
+    	for (i=0; i<NR_DQHASH; i++) {
     	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#489: FILE: fs/dquot.c:350:
+    	for (i=0; i<NR_DQHASH; i++) {
     	           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: fs/dquot.c:351:
+^I    ^Istruct list_head *head = &hash->dqh_hash[i];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#490: FILE: fs/dquot.c:351:
+^I    ^Istruct list_head *head = &hash->dqh_hash[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: fs/dquot.c:354:
+^I^I    ^Istruct dquot *dquot = list_entry(head, struct dquot, dq_hash);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#493: FILE: fs/dquot.c:354:
+^I^I    ^Istruct dquot *dquot = list_entry(head, struct dquot, dq_hash);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: fs/dquot.c:356:
+ ^I^I    ^Iif (dquot->dq_type != type)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#495: FILE: fs/dquot.c:356:
+ ^I^I    ^Iif (dquot->dq_type != type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: fs/dquot.c:356:
+ ^I^I    ^Iif (dquot->dq_type != type)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: fs/dquot.c:357:
+^I^I^I    ^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#496: FILE: fs/dquot.c:357:
+^I^I^I    ^Icontinue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: fs/dquot.c:358:
+^I^I    ^Idquot->dq_flags |= DQ_INVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#497: FILE: fs/dquot.c:358:
+^I^I    ^Idquot->dq_flags |= DQ_INVAL;$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#501: FILE: fs/dquot.c:362:
+				 *  Wait for any users of quota. As we have already cleared the flags in

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: fs/dquot.c:367:
+^I^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#521: FILE: fs/dquot.c:382:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: fs/dquot.c:387:
+    ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#526: FILE: fs/dquot.c:387:
+    ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: fs/dquot.c:387:
+    ^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hash)...) over kmalloc(sizeof(struct dqhash)...)
#527: FILE: fs/dquot.c:388:
+	hash = kmalloc(sizeof(struct dqhash),  GFP_USER);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: fs/dquot.c:390:
+^I    ^Ireturn ERR_PTR(-ENOMEM);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#529: FILE: fs/dquot.c:390:
+^I    ^Ireturn ERR_PTR(-ENOMEM);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: fs/dquot.c:392:
+ ^Imemset(hash, 0, sizeof(struct dqhash));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#531: FILE: fs/dquot.c:392:
+ ^Imemset(hash, 0, sizeof(struct dqhash));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: fs/dquot.c:392:
+ ^Imemset(hash, 0, sizeof(struct dqhash));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: fs/dquot.c:393:
+ ^Ihash->dqh_id = id;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#532: FILE: fs/dquot.c:393:
+ ^Ihash->dqh_id = id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: fs/dquot.c:393:
+ ^Ihash->dqh_id = id;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: fs/dquot.c:394:
+ ^IINIT_LIST_HEAD(&hash->dqh_list);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#533: FILE: fs/dquot.c:394:
+ ^IINIT_LIST_HEAD(&hash->dqh_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: fs/dquot.c:394:
+ ^IINIT_LIST_HEAD(&hash->dqh_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: fs/dquot.c:395:
+ ^Ifor (i = 0; i < NR_DQHASH; i++)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#534: FILE: fs/dquot.c:395:
+ ^Ifor (i = 0; i < NR_DQHASH; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: fs/dquot.c:395:
+ ^Ifor (i = 0; i < NR_DQHASH; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: fs/dquot.c:396:
+ ^I^IINIT_LIST_HEAD(hash->dqh_hash + i);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#535: FILE: fs/dquot.c:396:
+ ^I^IINIT_LIST_HEAD(hash->dqh_hash + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: fs/dquot.c:396:
+ ^I^IINIT_LIST_HEAD(hash->dqh_hash + i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: fs/dquot.c:397:
+ ^Isema_init(&hash->dqh_dqopt.dqio_sem, 1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#536: FILE: fs/dquot.c:397:
+ ^Isema_init(&hash->dqh_dqopt.dqio_sem, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: fs/dquot.c:397:
+ ^Isema_init(&hash->dqh_dqopt.dqio_sem, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: fs/dquot.c:398:
+ ^Isema_init(&hash->dqh_dqopt.dqoff_sem, 1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: fs/dquot.c:398:
+ ^Isema_init(&hash->dqh_dqopt.dqoff_sem, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: fs/dquot.c:398:
+ ^Isema_init(&hash->dqh_dqopt.dqoff_sem, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: fs/dquot.c:399:
+ ^Ihash->dqh_qop = &dquot_operations;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#538: FILE: fs/dquot.c:399:
+ ^Ihash->dqh_qop = &dquot_operations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: fs/dquot.c:399:
+ ^Ihash->dqh_qop = &dquot_operations;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: fs/dquot.c:400:
+ ^Ihash->dqh_qcop = &vfs_quotactl_ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#539: FILE: fs/dquot.c:400:
+ ^Ihash->dqh_qcop = &vfs_quotactl_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: fs/dquot.c:400:
+ ^Ihash->dqh_qcop = &vfs_quotactl_ops;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: fs/dquot.c:401:
+ ^Ihash->dqh_sb = sb;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#540: FILE: fs/dquot.c:401:
+ ^Ihash->dqh_sb = sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: fs/dquot.c:401:
+ ^Ihash->dqh_sb = sb;$

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#545: FILE: fs/dquot.c:406:
+	dprintk ("иии new_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);
 	          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#545: FILE: fs/dquot.c:406:
+	dprintk ("иии new_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'new_dqhash', this function's name, in a string
#545: FILE: fs/dquot.c:406:
+	dprintk ("иии new_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#553: FILE: fs/dquot.c:414:
+	dprintk ("иии destroy_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);
 	          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: fs/dquot.c:414:
+	dprintk ("иии destroy_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'destroy_dqhash', this function's name, in a string
#553: FILE: fs/dquot.c:414:
+	dprintk ("иии destroy_dqhash: %p [#%d,#0x%lx]\n", hash, hash->dqh_id, hash->dqh_dqdom);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#562: FILE: fs/dquot.c:423:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: fs/dquot.c:436:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#604: FILE: fs/dquot.c:442:
 
+

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#642: FILE: fs/dquot.c:476:
+		if ((cnt == type || type == -1) && dqh_has_quota_enabled(hash, cnt) && info_dirty(&dqopt->info[cnt]))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#657: FILE: fs/dquot.c:496:
+			if ((type == cnt || type == -1) && dqh_has_quota_enabled(dqh, cnt)
+			    && dqh_dqopt(dqh)->info[cnt].dqi_flags & DQF_ANY_DQUOT_DIRTY)

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: fs/dquot.c:652:
+^I    ^Idquot->dq_dev = hash->dqh_sb->s_dev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#721: FILE: fs/dquot.c:652:
+^I    ^Idquot->dq_dev = hash->dqh_sb->s_dev;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#745: FILE: fs/dquot.c:674:
+	if ((dquot = find_dquot(hash, hashent, id, type)) == NODQUOT) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#748: FILE: fs/dquot.c:676:
+			if ((empty = get_empty_dquot(hash, type)) == NODQUOT)

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#822: FILE: fs/dquot.c:971:
+		dquot->dq_dqb.dqb_itime = CURRENT_TIME + dqh_dqopt(dquot->dq_dqh)->info[dquot->dq_type].dqi_igrace;

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#831: FILE: fs/dquot.c:1005:
+			dquot->dq_dqb.dqb_btime = CURRENT_TIME + dqh_dqopt(dquot->dq_dqh)->info[dquot->dq_type].dqi_bgrace;

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#863: FILE: fs/dquot.c:1053:
+		if (dquot[cnt] == NODQUOT || !dqh_has_quota_enabled(dqh, cnt) || inode->i_dquot[cnt] != NODQUOT)

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: fs/dquot.c:1209:
+    ^Istruct dqhash *dqh = inode->i_sb->s_dqh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#871: FILE: fs/dquot.c:1209:
+    ^Istruct dqhash *dqh = inode->i_sb->s_dqh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: fs/dquot.c:1209:
+    ^Istruct dqhash *dqh = inode->i_sb->s_dqh;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#979: FILE: fs/dquot.c:1416:
+	if ((error = dqopt->ops[type]->read_file_info(hash, type)) < 0)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1005: FILE: fs/dquot.c:1499:
+			dm->dqb_btime = CURRENT_TIME + dqh_dqopt(dquot->dq_dqh)->info[dquot->dq_type].dqi_bgrace;

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1014: FILE: fs/dquot.c:1507:
+			dm->dqb_itime = CURRENT_TIME + dqh_dqopt(dquot->dq_dqh)->info[dquot->dq_type].dqi_igrace;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1094: FILE: fs/inode.c:98:
+^I^Iinode->i_dqh = sb->s_dqh;   ^I/* this is the default */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: fs/inode.c:1213:
+    ^Istruct super_block *sb = hash->dqh_sb;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1107: FILE: fs/inode.c:1213:
+    ^Istruct super_block *sb = hash->dqh_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: fs/inode.c:1213:
+    ^Istruct super_block *sb = hash->dqh_sb;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1279: FILE: fs/quota.c:165:
+			if ((ret = hash->dqh_qcop->get_info(hash, type, &info)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1294: FILE: fs/quota.c:181:
+			if ((ret = hash->dqh_qcop->get_dqblk(hash, type, id, &idq)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1324: FILE: fs/quota.c:211:
+			if ((ret = hash->dqh_qcop->get_xstate(hash, &fqs)))

WARNING:TABSTOP: Statements should start on a tabstop
#1333: FILE: fs/quota.c:222:
+		       return hash->dqh_qcop->set_xquota(hash, type, id, &fdq);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1339: FILE: fs/quota.c:227:
+			if ((ret = hash->dqh_qcop->get_xquota(hash, type, id, &fdq)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1431: FILE: fs/quota.c:335:
+	if ((ret = hash->dqh_qcop->get_dqblk(hash, type, id, &idq)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1440: FILE: fs/quota.c:348:
+		if ((ret = hash->dqh_qcop->get_info(hash, type, &info)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1510: FILE: fs/quota.c:423:
+			if ((ret = v1_get_dqblk(hash, type, id, &mdq)))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1535: FILE: fs/quota.c:477:
 	}
+	else if (sb)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1536: FILE: fs/quota.c:478:
+^I    ^Idqh = sb->s_dqh;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1536: FILE: fs/quota.c:478:
+^I    ^Idqh = sb->s_dqh;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1537: FILE: fs/quota.c:479:
+^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1540: FILE: fs/quota.c:481:
+		if ((ret = check_compat_quotactl_valid(dqh, type, cmds, id)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1547: FILE: fs/quota.c:486:
+	if ((ret = check_quotactl_valid(dqh, type, cmds, id)) < 0)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1562: FILE: fs/quota_v1.c:45:
+	filp = dqh_dqopt(dquot->dq_dqh)->files[type];
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1571: FILE: fs/quota_v1.c:74:
+	filp = dqh_dqopt(dquot->dq_dqh)->files[type];
 	^^^^

WARNING:LONG_LINE: line length of 163 exceeds 100 columns
#1603: FILE: fs/quota_v1.c:147:
+	printk(KERN_INFO "VFS: %s: Refusing to turn on old quota format on given file. It probably contains newer quota format.\n", kdevname(hash->dqh_sb->s_dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1603: FILE: fs/quota_v1.c:147:
+	printk(KERN_INFO "VFS: %s: Refusing to turn on old quota format on given file. It probably contains newer quota format.\n", kdevname(hash->dqh_sb->s_dev));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1654: FILE: fs/quota_v2.c:52:
+	struct mem_dqinfo *info = dqh_dqopt(hash)->info+type;
 	                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1670: FILE: fs/quota_v2.c:80:
+	struct mem_dqinfo *info = dqh_dqopt(hash)->info+type;
 	                                               ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1681: FILE: fs/quota_v2.c:284:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1682: FILE: fs/quota_v2.c:285:
+	struct mem_dqinfo *info = dqh_dqopt(dquot->dq_dqh)->info+dquot->dq_type;
 	                                                        ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1692: FILE: fs/quota_v2.c:345:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1702: FILE: fs/quota_v2.c:419:
+	filp = dqh_dqopt(dquot->dq_dqh)->files[type];
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1712: FILE: fs/quota_v2.c:440:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1723: FILE: fs/quota_v2.c:489:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1733: FILE: fs/quota_v2.c:539:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1742: FILE: fs/quota_v2.c:576:
+	struct file *filp = dqh_dqopt(dquot->dq_dqh)->files[dquot->dq_type];
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1751: FILE: fs/quota_v2.c:615:
+	filp = dqh_dqopt(dquot->dq_dqh)->files[type];
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1755: FILE: fs/quota_v2.c:618:
+	if (!filp || !dquot->dq_dqh) {	/* Invalidated quota? */
 	     ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1772: FILE: fs/super.c:283:
+   ^I    ^I/* quick hack to make dqhash id unique, sufficient for now */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1772: FILE: fs/super.c:283:
+   ^I    ^I/* quick hack to make dqhash id unique, sufficient for now */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1772: FILE: fs/super.c:283:
+   ^I    ^I/* quick hack to make dqhash id unique, sufficient for now */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1781: FILE: fs/super.c:297:
+    ^Idestroy_dqhash(s->s_dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1781: FILE: fs/super.c:297:
+    ^Idestroy_dqhash(s->s_dqh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1781: FILE: fs/super.c:297:
+    ^Idestroy_dqhash(s->s_dqh);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1834: FILE: include/linux/fs.h:762:
+^Istruct dqhash^I    ^I*s_dqh;^I    ^I/* Diskquota hash */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1845: FILE: include/linux/mount.h:32:
+    ^Istruct dqhash *mnt_dqh;     ^I/* Diskquota hash for mount */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1845: FILE: include/linux/mount.h:32:
+    ^Istruct dqhash *mnt_dqh;     ^I/* Diskquota hash for mount */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1845: FILE: include/linux/mount.h:32:
+    ^Istruct dqhash *mnt_dqh;     ^I/* Diskquota hash for mount */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1889: FILE: include/linux/quota.h:237:
+	int (*check_quota_file)(struct dqhash *, int);	/* Detect whether file is in our format */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1889: FILE: include/linux/quota.h:237:
+	int (*check_quota_file)(struct dqhash *, int);	/* Detect whether file is in our format */

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#1890: FILE: include/linux/quota.h:238:
+	int (*read_file_info)(struct dqhash *, int);	/* Read main info about file - called on quotaon() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1890: FILE: include/linux/quota.h:238:
+	int (*read_file_info)(struct dqhash *, int);	/* Read main info about file - called on quotaon() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1890: FILE: include/linux/quota.h:238:
+	int (*read_file_info)(struct dqhash *, int);	/* Read main info about file - called on quotaon() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1891: FILE: include/linux/quota.h:239:
+	int (*write_file_info)(struct dqhash *, int);	/* Write main info about file */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1891: FILE: include/linux/quota.h:239:
+	int (*write_file_info)(struct dqhash *, int);	/* Write main info about file */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1892: FILE: include/linux/quota.h:240:
+	int (*free_file_info)(struct dqhash *, int);	/* Called on quotaoff() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1892: FILE: include/linux/quota.h:240:
+	int (*free_file_info)(struct dqhash *, int);	/* Called on quotaoff() */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dquot *' should also have an identifier name
#1893: FILE: include/linux/quota.h:241:
+	int (*read_dqblk)(struct dquot *);		/* Read structure for one user */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1894: FILE: include/linux/quota.h:242:
+	int (*commit_dqblk)(struct dquot *);	    	/* Write (or delete) structure for one user */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1894: FILE: include/linux/quota.h:242:
+^Iint (*commit_dqblk)(struct dquot *);^I    ^I/* Write (or delete) structure for one user */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dquot *' should also have an identifier name
#1894: FILE: include/linux/quota.h:242:
+	int (*commit_dqblk)(struct dquot *);	    	/* Write (or delete) structure for one user */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1913: FILE: include/linux/quota.h:259:
+	int (*quota_on)(struct dqhash *, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1913: FILE: include/linux/quota.h:259:
+	int (*quota_on)(struct dqhash *, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1913: FILE: include/linux/quota.h:259:
+	int (*quota_on)(struct dqhash *, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1913: FILE: include/linux/quota.h:259:
+	int (*quota_on)(struct dqhash *, int, int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1914: FILE: include/linux/quota.h:260:
+	int (*quota_off)(struct dqhash *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1914: FILE: include/linux/quota.h:260:
+	int (*quota_off)(struct dqhash *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1915: FILE: include/linux/quota.h:261:
+	int (*quota_sync)(struct dqhash *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1915: FILE: include/linux/quota.h:261:
+	int (*quota_sync)(struct dqhash *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1916: FILE: include/linux/quota.h:262:
+	int (*get_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1916: FILE: include/linux/quota.h:262:
+	int (*get_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct if_dqinfo *' should also have an identifier name
#1916: FILE: include/linux/quota.h:262:
+	int (*get_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1917: FILE: include/linux/quota.h:263:
+	int (*set_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1917: FILE: include/linux/quota.h:263:
+	int (*set_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct if_dqinfo *' should also have an identifier name
#1917: FILE: include/linux/quota.h:263:
+	int (*set_info)(struct dqhash *, int, struct if_dqinfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1918: FILE: include/linux/quota.h:264:
+	int (*get_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1918: FILE: include/linux/quota.h:264:
+	int (*get_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#1918: FILE: include/linux/quota.h:264:
+	int (*get_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct if_dqblk *' should also have an identifier name
#1918: FILE: include/linux/quota.h:264:
+	int (*get_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1919: FILE: include/linux/quota.h:265:
+	int (*set_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1919: FILE: include/linux/quota.h:265:
+	int (*set_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#1919: FILE: include/linux/quota.h:265:
+	int (*set_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct if_dqblk *' should also have an identifier name
#1919: FILE: include/linux/quota.h:265:
+	int (*set_dqblk)(struct dqhash *, int, qid_t, struct if_dqblk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1920: FILE: include/linux/quota.h:266:
+	int (*get_xstate)(struct dqhash *, struct fs_quota_stat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_quota_stat *' should also have an identifier name
#1920: FILE: include/linux/quota.h:266:
+	int (*get_xstate)(struct dqhash *, struct fs_quota_stat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1921: FILE: include/linux/quota.h:267:
+	int (*set_xstate)(struct dqhash *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1921: FILE: include/linux/quota.h:267:
+	int (*set_xstate)(struct dqhash *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1921: FILE: include/linux/quota.h:267:
+	int (*set_xstate)(struct dqhash *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1922: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1922: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#1922: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_disk_quota *' should also have an identifier name
#1922: FILE: include/linux/quota.h:268:
+	int (*get_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1923: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1923: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#1923: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_disk_quota *' should also have an identifier name
#1923: FILE: include/linux/quota.h:269:
+	int (*set_xquota)(struct dqhash *, int, qid_t, struct fs_disk_quota *);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hash' - possible side-effects?
#1944: FILE: include/linux/quota.h:305:
+#define dqh_any_quota_enabled(hash) (is_enabled(dqh_dqopt(hash), USRQUOTA)  \
+    	| is_enabled(dqh_dqopt(hash), GRPQUOTA))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1945: FILE: include/linux/quota.h:306:
+    ^I| is_enabled(dqh_dqopt(hash), GRPQUOTA))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1945: FILE: include/linux/quota.h:306:
+    ^I| is_enabled(dqh_dqopt(hash), GRPQUOTA))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1945: FILE: include/linux/quota.h:306:
+    ^I| is_enabled(dqh_dqopt(hash), GRPQUOTA))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1960: FILE: include/linux/quota.h:320:
+    ^Istruct super_block *dqh_sb; ^I/* super block */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1960: FILE: include/linux/quota.h:320:
+    ^Istruct super_block *dqh_sb; ^I/* super block */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1960: FILE: include/linux/quota.h:320:
+    ^Istruct super_block *dqh_sb; ^I/* super block */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1961: FILE: include/linux/quota.h:321:
+    ^Istruct list_head dqh_hash[NR_DQHASH];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1961: FILE: include/linux/quota.h:321:
+    ^Istruct list_head dqh_hash[NR_DQHASH];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1961: FILE: include/linux/quota.h:321:
+    ^Istruct list_head dqh_hash[NR_DQHASH];$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1966: FILE: include/linux/quota.h:326:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dqhash *' should also have an identifier name
#1968: FILE: include/linux/quota.h:328:
+void destroy_dqhash(struct dqhash *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1969: FILE: include/linux/quota.h:329:
+struct dqhash *find_dqhash(unsigned int);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1973: FILE: include/linux/quota.h:333:
+    ^Idq->dq_flags |= DQ_MOD;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1973: FILE: include/linux/quota.h:333:
+    ^Idq->dq_flags |= DQ_MOD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1973: FILE: include/linux/quota.h:333:
+    ^Idq->dq_flags |= DQ_MOD;$

ERROR:SPACING: space required before the open parenthesis '('
#1981: FILE: include/linux/quota.h:341:
+#define destroy_dqhash(hash)		do { } while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1995: FILE: include/linux/quotaops.h:20:
+#define dprintk(...)^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2002: FILE: include/linux/quotaops.h:26:
+extern void sync_dquots_dqh(struct dqhash *hash, int type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#2034: FILE: include/linux/quotaops.h:61:
+		inode->i_dqh->dqh_qop->drop(inode);	/* Ops must be set when there's any quota... */

WARNING:INLINE: plain inline is preferred over __inline__
#2115: FILE: include/linux/quotaops.h:169:
+static __inline__ int DQUOT_OFF(struct dqhash *hash)

ERROR:SPACING: space required before the open parenthesis '('
#2140: FILE: include/linux/quotaops.h:191:
+#define DQUOT_SYNC_DQH(hash)			do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000352452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 73 errors, 168 warnings, 17 checks, 1862 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000352452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
