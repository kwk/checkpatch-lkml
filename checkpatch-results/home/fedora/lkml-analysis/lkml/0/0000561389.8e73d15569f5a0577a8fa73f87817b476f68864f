WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
diff -urdN linux/Documentation/Configure.help linux/Documentation/Configure.help

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: Documentation/Configure.help:3247:
+  video card. If you select "Advanced lowlevel driver options", you $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: Documentation/Configure.help:3248:
+  should check 8 bpp packed pixel, 16 bpp packed pixel, 24 bpp packed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: Documentation/Configure.help:3249:
+  pixel and 32 bpp packed pixel. You can also use font widths $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: drivers/video/matrox/matroxfb_DAC1064.c:230:
+^I$

CHECK:CAMELCASE: Avoid CamelCase: <DACreg>
#204: FILE: drivers/video/matrox/matroxfb_DAC1064.c:363:
+	hw->DACreg[POS1064_XOUTPUTCONN] = 0x01;	/* output #1 enabled */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#209: FILE: drivers/video/matrox/matroxfb_DAC1064.c:366:
+			hw->DACreg[POS1064_XPIXCLKCTRL] = M1064_XPIXCLKCTRL_PLL_UP | M1064_XPIXCLKCTRL_EN | M1064_XPIXCLKCTRL_SRC_PLL2;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#210: FILE: drivers/video/matrox/matroxfb_DAC1064.c:367:
+			hw->DACreg[POS1064_XOUTPUTCONN] = 0x05;	/* output #1 enabled; CRTC1 connected to output #2 */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#212: FILE: drivers/video/matrox/matroxfb_DAC1064.c:369:
+			hw->DACreg[POS1064_XPIXCLKCTRL] = M1064_XPIXCLKCTRL_PLL_UP | M1064_XPIXCLKCTRL_EN | M1064_XPIXCLKCTRL_SRC_EXT;

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#213: FILE: drivers/video/matrox/matroxfb_DAC1064.c:370:
+			hw->DACreg[POS1064_XMISCCTRL] |= GX00_XMISCCTRL_MFC_MAFC | G400_XMISCCTRL_VDO_MAFC12;

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#220: FILE: drivers/video/matrox/matroxfb_DAC1064.c:374:
+		hw->DACreg[POS1064_XOUTPUTCONN] = 0x09; /* output #1 enabled; CRTC2 connected to output #2 */

CHECK:CAMELCASE: Avoid CamelCase: <outDAC1064>
#230: FILE: drivers/video/matrox/matroxfb_DAC1064.c:391:
+			outDAC1064(PMINFO M1064_X8B, 0xCC);	/* only matrox know... */

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#241: FILE: drivers/video/matrox/matroxfb_DAC1064.c:769:
+	if (ACCESS_FBINFO(devflags.g450dac)) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#303: FILE: drivers/video/matrox/matroxfb_base.c:1432:
+#define DEVF_G450	(DEVF_GCORE | DEVF_ANY_VXRES | DEVF_SUPPORT32MB | DEVF_TEXT16B | DEVF_CRTC2 | DEVF_G450DAC)

CHECK:CAMELCASE: Avoid CamelCase: <vbG400>
#329: FILE: drivers/video/matrox/matroxfb_base.c:1576:
+		&vbG400,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#388: FILE: drivers/video/matrox/matroxfb_g450.c:1:
+#include "matroxfb_g450.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#392: FILE: drivers/video/matrox/matroxfb_g450.c:5:
+#include <asm/uaccess.h>

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#394: FILE: drivers/video/matrox/matroxfb_g450.c:7:
+static int matroxfb_g450_get_reg(WPMINFO int reg) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#403: FILE: drivers/video/matrox/matroxfb_g450.c:16:
+static int matroxfb_g450_set_reg(WPMINFO int reg, int val) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#418: FILE: drivers/video/matrox/matroxfb_g450.c:31:
+static void DAC1064_calcclock(unsigned int freq, unsigned int fmax,
+		unsigned int* in, unsigned int* feed, unsigned int* post) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: drivers/video/matrox/matroxfb_g450.c:32:
+static void DAC1064_calcclock(unsigned int freq, unsigned int fmax,
+		unsigned int* in, unsigned int* feed, unsigned int* post) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#419: FILE: drivers/video/matrox/matroxfb_g450.c:32:
+		unsigned int* in, unsigned int* feed, unsigned int* post) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#419: FILE: drivers/video/matrox/matroxfb_g450.c:32:
+		unsigned int* in, unsigned int* feed, unsigned int* post) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#419: FILE: drivers/video/matrox/matroxfb_g450.c:32:
+		unsigned int* in, unsigned int* feed, unsigned int* post) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: drivers/video/matrox/matroxfb_g450.c:38:
+           1 => 243 ... 367 MHz$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#425: FILE: drivers/video/matrox/matroxfb_g450.c:38:
+	/* 0 => 100 ... 275 MHz
+           1 => 243 ... 367 MHz

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: drivers/video/matrox/matroxfb_g450.c:39:
+           2 => 320 ... 475 MHz$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: drivers/video/matrox/matroxfb_g450.c:40:
+           3 => 453 ... 556 MHz$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: drivers/video/matrox/matroxfb_g450.c:41:
+           4 => 540 ... 594 MHz$

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: drivers/video/matrox/matroxfb_g450.c:42:
+           5 => 588 ... 621 MHz$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: drivers/video/matrox/matroxfb_g450.c:43:
+           6 => 626 ... 637 MHz$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: drivers/video/matrox/matroxfb_g450.c:44:
+           7 => 631 ... 642 MHz$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: drivers/video/matrox/matroxfb_g450.c:46:
+           As you can see, never choose frequency > 621 MHz, there is unavailable gap...$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: drivers/video/matrox/matroxfb_g450.c:47:
+           Just to be sure, currently driver uses 110 ... 500 MHz range.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: drivers/video/matrox/matroxfb_g450.c:48:
+         */$

WARNING:RETURN_VOID: void function return statements are not generally useful
#450: FILE: drivers/video/matrox/matroxfb_g450.c:63:
+	return;
+}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#452: FILE: drivers/video/matrox/matroxfb_g450.c:65:
+static inline int matroxfb_g450_compute_timming(struct matroxfb_g450_info* m2info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: drivers/video/matrox/matroxfb_g450.c:66:
+static inline int matroxfb_g450_compute_timming(struct matroxfb_g450_info* m2info,
+		struct my_timming* mt,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#453: FILE: drivers/video/matrox/matroxfb_g450.c:66:
+		struct my_timming* mt,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#454: FILE: drivers/video/matrox/matroxfb_g450.c:67:
+		struct mavenregs* m) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#461: FILE: drivers/video/matrox/matroxfb_g450.c:74:
+	printk(KERN_DEBUG "PLL: %02X %02X %02X\n", a, b, c);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#465: FILE: drivers/video/matrox/matroxfb_g450.c:78:
+static inline int matroxfb_g450_program_timming(struct matroxfb_g450_info* m2info, const struct mavenregs* m) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#465: FILE: drivers/video/matrox/matroxfb_g450.c:78:
+static inline int matroxfb_g450_program_timming(struct matroxfb_g450_info* m2info, const struct mavenregs* m) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#465: FILE: drivers/video/matrox/matroxfb_g450.c:78:
+static inline int matroxfb_g450_program_timming(struct matroxfb_g450_info* m2info, const struct mavenregs* m) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#465: FILE: drivers/video/matrox/matroxfb_g450.c:78:
+static inline int matroxfb_g450_program_timming(struct matroxfb_g450_info* m2info, const struct mavenregs* m) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#476: FILE: drivers/video/matrox/matroxfb_g450.c:89:
+static int matroxfb_g450_compute(void* md, struct my_timming* mt, struct matrox_hw_state* mr) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#476: FILE: drivers/video/matrox/matroxfb_g450.c:89:
+static int matroxfb_g450_compute(void* md, struct my_timming* mt, struct matrox_hw_state* mr) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#476: FILE: drivers/video/matrox/matroxfb_g450.c:89:
+static int matroxfb_g450_compute(void* md, struct my_timming* mt, struct matrox_hw_state* mr) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#476: FILE: drivers/video/matrox/matroxfb_g450.c:89:
+static int matroxfb_g450_compute(void* md, struct my_timming* mt, struct matrox_hw_state* mr) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#480: FILE: drivers/video/matrox/matroxfb_g450.c:93:
+static int matroxfb_g450_program(void* md, const struct matrox_hw_state* mr) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#480: FILE: drivers/video/matrox/matroxfb_g450.c:93:
+static int matroxfb_g450_program(void* md, const struct matrox_hw_state* mr) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#480: FILE: drivers/video/matrox/matroxfb_g450.c:93:
+static int matroxfb_g450_program(void* md, const struct matrox_hw_state* mr) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#484: FILE: drivers/video/matrox/matroxfb_g450.c:97:
+static int matroxfb_g450_start(void* md) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#484: FILE: drivers/video/matrox/matroxfb_g450.c:97:
+static int matroxfb_g450_start(void* md) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#488: FILE: drivers/video/matrox/matroxfb_g450.c:101:
+static void matroxfb_g450_incuse(void* md) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#488: FILE: drivers/video/matrox/matroxfb_g450.c:101:
+static void matroxfb_g450_incuse(void* md) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#492: FILE: drivers/video/matrox/matroxfb_g450.c:105:
+static void matroxfb_g450_decuse(void* md) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#492: FILE: drivers/video/matrox/matroxfb_g450.c:105:
+static void matroxfb_g450_decuse(void* md) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#496: FILE: drivers/video/matrox/matroxfb_g450.c:109:
+static int matroxfb_g450_set_mode(void* md, u_int32_t arg) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#496: FILE: drivers/video/matrox/matroxfb_g450.c:109:
+static int matroxfb_g450_set_mode(void* md, u_int32_t arg) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#497: FILE: drivers/video/matrox/matroxfb_g450.c:110:
+	if (arg == MATROXFB_OUTPUT_MODE_MONITOR) {
+		return 1;
+	}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#503: FILE: drivers/video/matrox/matroxfb_g450.c:116:
+static int matroxfb_g450_get_mode(void* md, u_int32_t* arg) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#503: FILE: drivers/video/matrox/matroxfb_g450.c:116:
+static int matroxfb_g450_get_mode(void* md, u_int32_t* arg) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#503: FILE: drivers/video/matrox/matroxfb_g450.c:116:
+static int matroxfb_g450_get_mode(void* md, u_int32_t* arg) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#518: FILE: drivers/video/matrox/matroxfb_g450.c:131:
+static int matroxfb_g450_connect(struct matroxfb_g450_info* m2info) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#518: FILE: drivers/video/matrox/matroxfb_g450.c:131:
+static int matroxfb_g450_connect(struct matroxfb_g450_info* m2info) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#529: FILE: drivers/video/matrox/matroxfb_g450.c:142:
+static void matroxfb_g450_shutdown(struct matroxfb_g450_info* m2info) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#529: FILE: drivers/video/matrox/matroxfb_g450.c:142:
+static void matroxfb_g450_shutdown(struct matroxfb_g450_info* m2info) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: drivers/video/matrox/matroxfb_g450.c:144:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#545: FILE: drivers/video/matrox/matroxfb_g450.c:158:
+static void* matroxfb_g450_probe(struct matrox_fb_info* minfo) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#545: FILE: drivers/video/matrox/matroxfb_g450.c:158:
+static void* matroxfb_g450_probe(struct matrox_fb_info* minfo) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#545: FILE: drivers/video/matrox/matroxfb_g450.c:158:
+static void* matroxfb_g450_probe(struct matrox_fb_info* minfo) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#546: FILE: drivers/video/matrox/matroxfb_g450.c:159:
+	struct matroxfb_g450_info* m2info;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#551: FILE: drivers/video/matrox/matroxfb_g450.c:164:
+	m2info = (struct matroxfb_g450_info*)kmalloc(sizeof(*m2info), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#551: FILE: drivers/video/matrox/matroxfb_g450.c:164:
+	m2info = (struct matroxfb_g450_info*)kmalloc(sizeof(*m2info), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#553: FILE: drivers/video/matrox/matroxfb_g450.c:166:
+		printk(KERN_ERR "matroxfb_g450: Not enough memory for G450 DAC control structs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#560: FILE: drivers/video/matrox/matroxfb_g450.c:173:
+		printk(KERN_ERR "matroxfb_g450: G450 DAC failed to initialize\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#566: FILE: drivers/video/matrox/matroxfb_g450.c:179:
+static void matroxfb_g450_remove(struct matrox_fb_info* minfo, void* g450) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#566: FILE: drivers/video/matrox/matroxfb_g450.c:179:
+static void matroxfb_g450_remove(struct matrox_fb_info* minfo, void* g450) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#566: FILE: drivers/video/matrox/matroxfb_g450.c:179:
+static void matroxfb_g450_remove(struct matrox_fb_info* minfo, void* g450) {

WARNING:INDENTED_LABEL: labels should not be indented
#572: FILE: drivers/video/matrox/matroxfb_g450.c:185:
+		name:	"Matrox G450 output #2",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#573: FILE: drivers/video/matrox/matroxfb_g450.c:186:
+		probe:	matroxfb_g450_probe,
 		     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#573: FILE: drivers/video/matrox/matroxfb_g450.c:186:
+		probe:	matroxfb_g450_probe,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#574: FILE: drivers/video/matrox/matroxfb_g450.c:187:
+		remove:	matroxfb_g450_remove };
 		      ^

WARNING:INDENTED_LABEL: labels should not be indented
#574: FILE: drivers/video/matrox/matroxfb_g450.c:187:
+		remove:	matroxfb_g450_remove };

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#576: FILE: drivers/video/matrox/matroxfb_g450.c:189:
+static int matroxfb_g450_init(void) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#581: FILE: drivers/video/matrox/matroxfb_g450.c:194:
+static void matroxfb_g450_exit(void) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#593: FILE: drivers/video/matrox/matroxfb_g450.h:1:
+#ifndef __MATROXFB_G450_H__

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#600: FILE: drivers/video/matrox/matroxfb_g450.h:8:
+	struct matrox_fb_info*	primary_dev;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000561389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 62 errors, 22 warnings, 5 checks, 508 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000561389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
