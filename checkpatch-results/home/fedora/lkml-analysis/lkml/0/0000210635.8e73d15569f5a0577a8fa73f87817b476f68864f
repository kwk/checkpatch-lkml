WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
manual resume. Thus it is now be capable to suspend to modular devices also.

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#67: 
Maxfeldstraße 5				+49 911 74053 688
           ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#68: 
90409 Nürnberg				http://www.suse.de
       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: init/do_mounts.c:148:
+	int mount_err = sys_mount("sysfs", "/sys", "sysfs", 0, NULL);
+	if (mount_err < 0 && mount_err != -EBUSY)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#150: FILE: kernel/power/disk.c:30:
+extern int swsusp_check(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#236: FILE: kernel/power/disk.c:190:
+	if (!error) {
+		error = prepare_devices();
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#253: FILE: kernel/power/disk.c:248:
+	if ((error = swsusp_check()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#254: FILE: kernel/power/disk.c:249:
+		goto Done;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#258: FILE: kernel/power/disk.c:253:
+	if ((error = prepare_processes())) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#272: FILE: kernel/power/disk.c:265:
+	if ((error = prepare_devices())) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#272: FILE: kernel/power/disk.c:265:
+	if ((error = prepare_devices())) {
 		goto Free;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#282: FILE: kernel/power/disk.c:365:
+static ssize_t resume_show(struct subsystem * subsys, char *buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: kernel/power/disk.c:367:
+	return sprintf(buf,"%d:%d\n", MAJOR(swsusp_resume_device),
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#288: FILE: kernel/power/disk.c:371:
+static ssize_t resume_store(struct subsystem * subsys, const char * buf, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#288: FILE: kernel/power/disk.c:371:
+static ssize_t resume_store(struct subsystem * subsys, const char * buf, size_t n)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: kernel/power/disk.c:383:
+		res = MKDEV(maj,min);
 		               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#303: FILE: kernel/power/disk.c:386:
+			printk("Attempting manual resume\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#383: FILE: kernel/power/swsusp.c:1080:
+static const char * sanity_check(void)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#474: FILE: kernel/power/swsusp.c:1238:
+			 MAJOR(swsusp_resume_device),MINOR(swsusp_resume_device));
 			                            ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#483: FILE: kernel/power/swsusp.c:1244:
+		if((error = check_suspend_image()))
+		    blkdev_put(resume_bdev);

ERROR:SPACING: space required before the open parenthesis '('
#483: FILE: kernel/power/swsusp.c:1244:
+		if((error = check_suspend_image()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#483: FILE: kernel/power/swsusp.c:1244:
+		if((error = check_suspend_image()))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210635.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 7 warnings, 3 checks, 399 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210635.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
