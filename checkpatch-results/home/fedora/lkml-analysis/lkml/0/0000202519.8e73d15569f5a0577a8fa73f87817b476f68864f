ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: kernel/power/swsusp.c:629:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: kernel/power/swsusp.c:629:
+ $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#83: FILE: kernel/power/swsusp.c:630:
+static void create_pbe_list(struct pbe *pblist, unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#86: FILE: kernel/power/swsusp.c:633:
+	unsigned num = PBES_PER_PAGE;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: kernel/power/swsusp.c:635:
+	for_each_pb_page (pbpage, pblist) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_pbe_list', this function's name, in a string
#100: FILE: kernel/power/swsusp.c:647:
+	pr_debug("create_pbe_list(): initialized %d PBEs\n", num);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#191: FILE: kernel/power/swsusp.c:925:
+		printk(KERN_ERR "Some devices failed to power down, very bad\n");

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#216: FILE: kernel/power/swsusp.c:968:
+static void **eaten_memory = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#218: FILE: kernel/power/swsusp.c:970:
+static inline void eat_page(void *page) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#226: FILE: kernel/power/swsusp.c:978:
+static unsigned long __init get_usable_page(unsigned gfp_mask)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: kernel/power/swsusp.c:1022:
+	for_each_pbe (p, pblist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: kernel/power/swsusp.c:1025:
+	for_each_pbe (p, pblist) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: kernel/power/swsusp.c:1051:
+	pr_debug("swsusp: Relocating pagedir (%lu pages to check)\n",
+			swsusp_info.pagedir_pages);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#332: FILE: kernel/power/swsusp.c:1063:
+	for_each_pbe (p, pblist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#352: FILE: kernel/power/swsusp.c:1070:
+	for_each_pb_page (pbpage, pblist) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#391: FILE: kernel/power/swsusp.c:1097:
+	if (error) {
[...]
-	if (ret)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#392: FILE: kernel/power/swsusp.c:1098:
+		printk("\nswsusp: Out of memory\n\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#401: FILE: kernel/power/swsusp.c:1103:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#402: FILE: kernel/power/swsusp.c:1104:
+		printk("swsusp: Relocated %d pages\n", rel);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#413: FILE: kernel/power/swsusp.c:1242:
+		printk(KERN_ERR "swsusp: Suspend partition has wrong signature?\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#444: FILE: kernel/power/swsusp.c:1267:
+	printk("swsusp: Reading image data (%lu pages):     ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: kernel/power/swsusp.c:1268:
+	printk("swsusp: Reading image data (%lu pages):     ",
+			swsusp_info.image_pages);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#447: FILE: kernel/power/swsusp.c:1270:
+	for_each_pbe (p, pblist) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#449: FILE: kernel/power/swsusp.c:1272:
+			printk("\b\b\b\b%3d%%", i / mod);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#463: FILE: kernel/power/swsusp.c:1281:
+	printk("\b\b\b\bdone\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#481: FILE: kernel/power/swsusp.c:1294:
+	unsigned i = 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#492: FILE: kernel/power/swsusp.c:1300:
+	printk("swsusp: Reading pagedir (%lu pages)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: kernel/power/swsusp.c:1301:
+	printk("swsusp: Reading pagedir (%lu pages)\n",
+			swsusp_info.pagedir_pages);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#501: FILE: kernel/power/swsusp.c:1303:
+	for_each_pb_page (pbpage, pblist) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#518: FILE: kernel/power/swsusp.c:1319:
+	BUG_ON(i != swsusp_info.pagedir_pages);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#523: FILE: kernel/power/swsusp.c:1324:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#536: FILE: kernel/power/swsusp.c:1336:
+	if (!(p = alloc_pagedir(nr_copy_pages)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#539: FILE: kernel/power/swsusp.c:1339:
+	if ((error = read_pagedir(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#546: FILE: kernel/power/swsusp.c:1344:
+	if (!(pagedir_nosave = swsusp_pagedir_relocate(p)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#557: FILE: kernel/power/swsusp.c:1355:
+		for_each_pbe (p, pagedir_nosave)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 23 warnings, 5 checks, 617 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
