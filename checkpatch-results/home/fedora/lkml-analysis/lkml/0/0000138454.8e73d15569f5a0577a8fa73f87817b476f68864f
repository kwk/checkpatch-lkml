WARNING:TYPO_SPELLING: 'trys' may be misspelled - perhaps 'tries'?
#65: 
The existing i386 code trys to synchronize all of the processors
                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#81: 
--- linux-2.6.13/arch/i386/kernel/smpboot.c.0	2005-10-25 16:01:53.000000000 -0400

WARNING:TYPO_SPELLING: 'tring' may be misspelled - perhaps 'trying'?
#92: FILE: arch/i386/kernel/smpboot.c:215:
+ * pairs of processors rahter than tring to synchronize all of the processors
                                    ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: arch/i386/kernel/smpboot.c:216:
+ * with a single event.  When several processors are all waiting for an $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: arch/i386/kernel/smpboot.c:220:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: arch/i386/kernel/smpboot.c:222:
+ * that all of the cpus can be synchronized before we overflow the $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#108: FILE: arch/i386/kernel/smpboot.c:227:
+#define SLAVE	(SMP_CACHE_BYTES/sizeof(long))
              	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#115: FILE: arch/i386/kernel/smpboot.c:232:
+static volatile unsigned long go[2*SLAVE] __cacheline_aligned;
                                   ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#115: FILE: arch/i386/kernel/smpboot.c:232:
+static volatile unsigned long go[2*SLAVE] __cacheline_aligned;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#116: FILE: arch/i386/kernel/smpboot.c:233:
+static volatile int current_slave = -1;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#117: FILE: arch/i386/kernel/smpboot.c:234:
+static volatile int tsc_sync_complete = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#117: FILE: arch/i386/kernel/smpboot.c:234:
+static volatile int tsc_sync_complete = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#118: FILE: arch/i386/kernel/smpboot.c:235:
+static volatile int tsc_adj_latency = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#118: FILE: arch/i386/kernel/smpboot.c:235:
+static volatile int tsc_adj_latency = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#119: FILE: arch/i386/kernel/smpboot.c:236:
+static unsigned int max_rt = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#120: FILE: arch/i386/kernel/smpboot.c:237:
+static unsigned int max_delta = 0;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#129: FILE: arch/i386/kernel/smpboot.c:246:
+} tsc_sync_debug[NUM_ROUNDS*NR_CPUS];
                            ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#129: FILE: arch/i386/kernel/smpboot.c:246:
+} tsc_sync_debug[NUM_ROUNDS*NR_CPUS];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: arch/i386/kernel/smpboot.c:274:
+get_delta (long *rt, long *master)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#175: FILE: arch/i386/kernel/smpboot.c:283:
+		go[MASTER] = i+1;
 		              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#189: FILE: arch/i386/kernel/smpboot.c:297:
+	tcenter = (best_t0/2 + best_t1/2);
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#189: FILE: arch/i386/kernel/smpboot.c:297:
+	tcenter = (best_t0/2 + best_t1/2);
 	                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: arch/i386/kernel/smpboot.c:339:
+synchronize_tsc_ap (void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: arch/i386/kernel/smpboot.c:347:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: arch/i386/kernel/smpboot.c:357:
+	write_tsc(0,0);
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: arch/i386/kernel/smpboot.c:363:
+^I^Iif (i > 0) $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#301: FILE: arch/i386/kernel/smpboot.c:365:
+		adj = -delta + adjust_latency/8;
 		                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#308: FILE: arch/i386/kernel/smpboot.c:372:
+		t[i].lat = adjust_latency/8;
 		                         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#341: FILE: arch/i386/kernel/smpboot.c:380:
+		printk("rt=%5ld master=%5ld diff=%5ld adjlat=%5ld\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#348: FILE: arch/i386/kernel/smpboot.c:383:
+	printk("CPU %d: synchronized TSC (last diff %ld cycles, maxerr %lu cycles)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: arch/i386/kernel/smpboot.c:385:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: arch/i386/kernel/smpboot.c:386:
+	printk("It took %ld rounds\n", n_rounds);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: arch/i386/kernel/smpboot.c:401:
+ * The boot processor set its own TSC to zero and then gives each $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#384: FILE: arch/i386/kernel/smpboot.c:405:
+static void __init synchronize_tsc_bp (void)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#392: FILE: arch/i386/kernel/smpboot.c:410:
+	printk("start TSC synchronization\n");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#397: FILE: arch/i386/kernel/smpboot.c:413:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#410: FILE: arch/i386/kernel/smpboot.c:426:
+		printk("TSC overflowed during synchronization\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: arch/i386/kernel/smpboot.c:427:
+^Ielse $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#412: FILE: arch/i386/kernel/smpboot.c:428:
+		printk("TSC synchronization complete max_delta=%d cycles\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: arch/i386/kernel/smpboot.c:429:
+		printk("TSC synchronization complete max_delta=%d cycles\n",
+			max_delta);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#415: FILE: arch/i386/kernel/smpboot.c:431:
+		error = (max_rt * 1000000)/cpu_khz;
 		                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#416: FILE: arch/i386/kernel/smpboot.c:432:
+		printk("TSC sync round-trip time %d.%03d microseconds\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: arch/i386/kernel/smpboot.c:433:
+		printk("TSC sync round-trip time %d.%03d microseconds\n",
+			error/1000, error%1000);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#417: FILE: arch/i386/kernel/smpboot.c:433:
+			error/1000, error%1000);
 			     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#417: FILE: arch/i386/kernel/smpboot.c:433:
+			error/1000, error%1000);
 			                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#419: FILE: arch/i386/kernel/smpboot.c:435:
+		printk("TSC sync round-trip time %d cycles\n", max_rt);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138454.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 20 warnings, 13 checks, 343 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138454.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
