CHECK:CAMELCASE: Avoid CamelCase: <Phb>
#357: FILE: arch/ppc64/kernel/iSeries_pci.c:59:
+static void scan_PHB_slots(struct pci_controller *Phb);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <HvBusNumber>
#358: FILE: arch/ppc64/kernel/iSeries_pci.c:60:
+static void scan_EADS_bridge(HvBusNumber Bus, HvSubBusNumber SubBus, int IdSel);

CHECK:CAMELCASE: Avoid CamelCase: <Bus>
#358: FILE: arch/ppc64/kernel/iSeries_pci.c:60:
+static void scan_EADS_bridge(HvBusNumber Bus, HvSubBusNumber SubBus, int IdSel);

CHECK:CAMELCASE: Avoid CamelCase: <HvSubBusNumber>
#358: FILE: arch/ppc64/kernel/iSeries_pci.c:60:
+static void scan_EADS_bridge(HvBusNumber Bus, HvSubBusNumber SubBus, int IdSel);

CHECK:CAMELCASE: Avoid CamelCase: <SubBus>
#358: FILE: arch/ppc64/kernel/iSeries_pci.c:60:
+static void scan_EADS_bridge(HvBusNumber Bus, HvSubBusNumber SubBus, int IdSel);

CHECK:CAMELCASE: Avoid CamelCase: <IdSel>
#358: FILE: arch/ppc64/kernel/iSeries_pci.c:60:
+static void scan_EADS_bridge(HvBusNumber Bus, HvSubBusNumber SubBus, int IdSel);

CHECK:CAMELCASE: Avoid CamelCase: <HvCallPci_BridgeInfo>
#359: FILE: arch/ppc64/kernel/iSeries_pci.c:61:
+static int scan_bridge_slot(HvBusNumber Bus, struct HvCallPci_BridgeInfo *Info);

CHECK:CAMELCASE: Avoid CamelCase: <Info>
#359: FILE: arch/ppc64/kernel/iSeries_pci.c:61:
+static int scan_bridge_slot(HvBusNumber Bus, struct HvCallPci_BridgeInfo *Info);

CHECK:CAMELCASE: Avoid CamelCase: <iSeries_Device_Node>
#381: FILE: arch/ppc64/kernel/iSeries_pci.c:95:
+static struct iSeries_Device_Node **iomm_table;

WARNING:TYPO_SPELLING: 'initalizes' may be misspelled - perhaps 'initializes'?
#393: FILE: arch/ppc64/kernel/iSeries_pci.c:107:
+ * Allocates and initalizes the Address Translation Table and Bar
                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: arch/ppc64/kernel/iSeries_pci.c:115:
+	iomm_table = kmalloc(sizeof(*iomm_table) * IOMM_TABLE_MAX_ENTRIES,
+			GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: arch/ppc64/kernel/iSeries_pci.c:117:
+	iobar_table = kmalloc(sizeof(*iobar_table) * IOMM_TABLE_MAX_ENTRIES,
+			GFP_KERNEL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iomm_table == NULL'
#405: FILE: arch/ppc64/kernel/iSeries_pci.c:119:
+	if ((iomm_table == NULL) || (iobar_table == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iobar_table == NULL'
#405: FILE: arch/ppc64/kernel/iSeries_pci.c:119:
+	if ((iomm_table == NULL) || (iobar_table == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iomm_table"
#405: FILE: arch/ppc64/kernel/iSeries_pci.c:119:
+	if ((iomm_table == NULL) || (iobar_table == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iobar_table"
#405: FILE: arch/ppc64/kernel/iSeries_pci.c:119:
+	if ((iomm_table == NULL) || (iobar_table == NULL))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#443: FILE: arch/ppc64/kernel/iSeries_pci.c:157:
+	while (bar_size > 0 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: arch/ppc64/kernel/iSeries_pci.c:187:
+    ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#473: FILE: arch/ppc64/kernel/iSeries_pci.c:187:
+    ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: arch/ppc64/kernel/iSeries_pci.c:187:
+    ^I}$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phb"
#504: FILE: arch/ppc64/kernel/iSeries_pci.c:260:
+			if (phb == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: arch/ppc64/kernel/iSeries_pci.c:392:
+static void scan_EADS_bridge(HvBusNumber bus, HvSubBusNumber SubBus,
 		int IdSel)

CHECK:CAMELCASE: Avoid CamelCase: <BridgeInfo>
#580: FILE: arch/ppc64/kernel/iSeries_pci.c:436:
+					scan_bridge_slot(bus, BridgeInfo);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: arch/ppc64/kernel/iSeries_pci.c:452:
+static int scan_bridge_slot(HvBusNumber Bus,
 		struct HvCallPci_BridgeInfo *BridgeInfo)

CHECK:CAMELCASE: Avoid CamelCase: <DevNode>
#601: FILE: arch/ppc64/kernel/iSeries_pci.c:689:
+	if (DevNode->IoRetry > 0)

CHECK:CAMELCASE: Avoid CamelCase: <IoRetry>
#601: FILE: arch/ppc64/kernel/iSeries_pci.c:689:
+	if (DevNode->IoRetry > 0)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#613: FILE: arch/ppc64/kernel/iSeries_pci.c:699:
+static inline struct iSeries_Device_Node *xlate_iomm_address(

CHECK:CAMELCASE: Avoid CamelCase: <IoAddress>
#614: FILE: arch/ppc64/kernel/iSeries_pci.c:700:
+		const volatile void __iomem *IoAddress,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#614: FILE: arch/ppc64/kernel/iSeries_pci.c:700:
+		const volatile void __iomem *IoAddress,

CHECK:CAMELCASE: Avoid CamelCase: <BarOffsetPtr>
#615: FILE: arch/ppc64/kernel/iSeries_pci.c:701:
+		u64 *dsaptr, u64 *BarOffsetPtr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'OrigIoAddr < BASE_IO_MEMORY'
#625: FILE: arch/ppc64/kernel/iSeries_pci.c:709:
+	if ((OrigIoAddr < BASE_IO_MEMORY) || (OrigIoAddr >= max_io_memory))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'OrigIoAddr >= max_io_memory'
#625: FILE: arch/ppc64/kernel/iSeries_pci.c:709:
+	if ((OrigIoAddr < BASE_IO_MEMORY) || (OrigIoAddr >= max_io_memory))

CHECK:CAMELCASE: Avoid CamelCase: <OrigIoAddr>
#625: FILE: arch/ppc64/kernel/iSeries_pci.c:709:
+	if ((OrigIoAddr < BASE_IO_MEMORY) || (OrigIoAddr >= max_io_memory))

CHECK:CAMELCASE: Avoid CamelCase: <BaseIoAddr>
#630: FILE: arch/ppc64/kernel/iSeries_pci.c:711:
+	BaseIoAddr = OrigIoAddr - BASE_IO_MEMORY;

CHECK:CAMELCASE: Avoid CamelCase: <TableIndex>
#631: FILE: arch/ppc64/kernel/iSeries_pci.c:712:
+	TableIndex = BaseIoAddr / IOMM_TABLE_ENTRY_SIZE;

CHECK:CAMELCASE: Avoid CamelCase: <BarOffset>
#648: FILE: arch/ppc64/kernel/iSeries_pci.c:739:
+		xlate_iomm_address(IoAddress, &dsa, &BarOffset);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 4 warnings, 30 checks, 355 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
