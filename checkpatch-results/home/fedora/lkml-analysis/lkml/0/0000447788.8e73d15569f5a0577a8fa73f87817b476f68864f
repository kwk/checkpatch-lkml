WARNING:TYPO_SPELLING: 'SHuld' may be misspelled - perhaps 'Should'?
#32: 
This is a sync with the current ext3 dev tree.  SHuld fix
                                                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#46: FILE: fs/buffer.c:1750:
+		struct buffer_head * bh = arr[i];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#47: FILE: fs/buffer.c:1751:
+		struct buffer_head * bh = arr[i];
+		if (buffer_uptodate(bh))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: fs/buffer.c:1756:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#78: FILE: fs/ext3/file.c:70:
+	/* Skip file flushing code if there was an error, or if nothing
+	   was written. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#78: FILE: fs/ext3/file.c:70:
+	   was written. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: fs/ext3/file.c:73:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: fs/ext3/file.c:75:
+           data-journaling, then we need to make sure that we force the$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#83: FILE: fs/ext3/file.c:75:
+	/* If the inode is IS_SYNC, or is O_SYNC and we are doing
+           data-journaling, then we need to make sure that we force the

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#84: FILE: fs/ext3/file.c:76:
+           transaction to disk to keep all metadata uptodate
                                                     ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: fs/ext3/file.c:76:
+           transaction to disk to keep all metadata uptodate$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: fs/ext3/file.c:77:
+           synchronously. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#85: FILE: fs/ext3/file.c:77:
+           synchronously. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: fs/ext3/file.c:81:
+                   already been flushed to backing store by$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#89: FILE: fs/ext3/file.c:81:
+		/* If we are non-data-journaled, then the dirty data has
+                   already been flushed to backing store by

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: fs/ext3/file.c:82:
+                   generic_osync_inode, and the inode has been flushed$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: fs/ext3/file.c:83:
+                   too if there have been any modifications other than$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: fs/ext3/file.c:84:
+                   mere timestamp updates.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: fs/ext3/file.c:85:
+^I^I   $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#95: FILE: fs/ext3/file.c:87:
+		   timestamps too if the inode is IS_SYNC? */

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: fs/ext3/file.c:95:
+           inode is marked IS_SYNC, we need to force one ourselves. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#103: FILE: fs/ext3/file.c:95:
+	/* So we know that there has been no forced data flush.  If the
+           inode is marked IS_SYNC, we need to force one ourselves. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#103: FILE: fs/ext3/file.c:95:
+           inode is marked IS_SYNC, we need to force one ourselves. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: fs/ext3/file.c:98:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: fs/ext3/file.c:100:
+           If we don't, the only impact is that data=writeback$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#108: FILE: fs/ext3/file.c:100:
+	/* Open question #2 --- should we force data to disk here too?
+           If we don't, the only impact is that data=writeback

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: fs/ext3/file.c:101:
+           filesystems won't flush data to disk automatically on$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: fs/ext3/file.c:102:
+           IS_SYNC, only metadata (but historically, that is what ext2$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: fs/ext3/file.c:103:
+           has done.) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#111: FILE: fs/ext3/file.c:103:
+           has done.) */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: fs/ext3/file.c:104:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: fs/ext3/file.c:107:
+^Iif (err) $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#131: FILE: fs/ext3/fsync.c:68:
+	 * just the right data blocks. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: fs/ext3/inode.c:1036:
+		ret = walk_page_buffers(handle, inode, page->buffers,
 				from, to, NULL, do_journal_get_write_access);

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: fs/ext3/inode.c:1060:
+	int ret = ext3_journal_dirty_data(handle, bh, 0);
+	if (bh->b_inode != inode)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: fs/ext3/inode.c:1069:
+static int journal_dirty_async_data(handle_t *handle, struct inode *inode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: fs/ext3/inode.c:1080:
+static int commit_write_fn(handle_t *handle, struct inode *inode, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: fs/ext3/inode.c:1117:
+		ret = walk_page_buffers(handle, inode, page->buffers,
 			from, to, &partial, commit_write_fn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: fs/ext3/inode.c:1127:
+			ret = walk_page_buffers(handle, inode, page->buffers,
 				from, to, NULL, journal_dirty_sync_data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: fs/ext3/inode.c:1208:
+static int bget_one(handle_t *handle, struct inode *inode, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: fs/ext3/inode.c:1309:
+		walk_page_buffers(handle, inode, page_buffers, 0,
 				PAGE_CACHE_SIZE, NULL, bget_one);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: fs/ext3/inode.c:1327:
+		err = walk_page_buffers(handle, inode, page_buffers,
 			0, PAGE_CACHE_SIZE, NULL, journal_dirty_async_data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#365: FILE: fs/jbd/journal.c:1491:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: fs/jbd/journal.c:1502:
+void __jbd_unexpected_dirty_buffer(char *function, int line, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: fs/jbd/journal.c:1503:
+void __jbd_unexpected_dirty_buffer(char *function, int line, 
+				 struct journal_head *jh)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: fs/jbd/journal.c:1507:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#383: FILE: fs/jbd/journal.c:1509:
+		printk ("%sUnexpected dirty buffer encountered at "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#383: FILE: fs/jbd/journal.c:1509:
+		printk ("%sUnexpected dirty buffer encountered at "

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#384: FILE: fs/jbd/journal.c:1510:
+		printk ("%sUnexpected dirty buffer encountered at "
+			"%s:%d (%s blocknr %lu)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#388: FILE: fs/jbd/journal.c:1514:
+		J_ASSERT (!buffer_dirty(bh));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: fs/jbd/journal.c:1515:
+#endif^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: fs/jbd/journal.c:1516:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#395: FILE: fs/jbd/journal.c:1521:
+		 * JBDDirty bit. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: fs/jbd/journal.c:1523:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: fs/jbd/journal.c:1524:
+^I^Iif (jlist == BJ_Metadata || jlist == BJ_Reserved || $

CHECK:CAMELCASE: Avoid CamelCase: <BH_JBDDirty>
#401: FILE: fs/jbd/journal.c:1527:
+				set_bit(BH_JBDDirty, &jh2bh(jh)->b_state);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#407: FILE: fs/jbd/journal.c:1533:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: fs/jbd/transaction.c:549:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#464: FILE: fs/jbd/transaction.c:566:
+		 * retry. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: fs/jbd/transaction.c:572:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: fs/jbd/transaction.c:574:
+^I * state.  Is the buffer dirty? $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: fs/jbd/transaction.c:575:
+^I * $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#499: FILE: fs/jbd/transaction.c:584:
+	 * the buffer dirtied, ugh.)  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#510: FILE: fs/jbd/transaction.c:590:
+		 * transaction? */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: fs/jbd/transaction.c:592:
+^I^I^IJ_ASSERT_JH(jh, jh->b_transaction == transaction || $

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: fs/jbd/transaction.c:1909:
+                                   because a transaction is pinning the$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#538: FILE: fs/jbd/transaction.c:1909:
+				/* We are still using the page, but only
+                                   because a transaction is pinning the

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: fs/jbd/transaction.c:1910:
+                                   page.  Once it commits, we want to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: fs/jbd/transaction.c:1911:
+                                   encourage the page to be reaped as$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: fs/jbd/transaction.c:1912:
+                                   quickly as possible. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#541: FILE: fs/jbd/transaction.c:1912:
+                                   quickly as possible. */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#544: FILE: fs/jbd/transaction.c:1915:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#546: FILE: fs/jbd/transaction.c:1917:
+				/* Ugh, this is not exactly portable
+				   between VMs: we need a modular

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#547: FILE: fs/jbd/transaction.c:1918:
+				   solution for this some day.. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: fs/jbd/transaction.c:1954:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#581: FILE: fs/jbd/transaction.c:1957:
+	 * state. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: fs/jbd/transaction.c:1959:
+^Iif (jlist == BJ_Metadata || jlist == BJ_Reserved || $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#648: FILE: include/linux/jbd.h:741:
+extern void __jbd_unexpected_dirty_buffer(char *, int, struct journal_head *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#650: FILE: include/linux/jbd.h:743:
+	__jbd_unexpected_dirty_buffer(__FUNCTION__, __LINE__, (jh))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: include/linux/jbd.h:744:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000447788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 40 errors, 30 warnings, 10 checks, 566 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000447788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
