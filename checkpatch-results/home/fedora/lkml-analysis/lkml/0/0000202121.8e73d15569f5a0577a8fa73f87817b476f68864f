WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
>>diff -Nuar linux-2.6.9.orig/drivers/serial/jsm/digi.h linux-2.6.9.new/drivers/serial/jsm/digi.h

WARNING:TYPO_SPELLING: 'accross' may be misspelled - perhaps 'across'?
#71: 
>All structures that are passed accross the ioctl interface, MUST use the
                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'availble' may be misspelled - perhaps 'available'?
#76: 
>availble in sysfs instead?
 ^^^^^^^^

WARNING:TYPO_SPELLING: 'statments' may be misspelled - perhaps 'statements'?
#96: 
>>+ * Driver identification, error and debugging statments
                                                 ^^^^^^^^^

WARNING:TYPO_SPELLING: 'occurances' may be misspelled - perhaps 'occurrences'?
#98: 
>>+ * In theory, you can change all occurances of "digi" in the next
                                    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Recieve' may be misspelled - perhaps 'Receive'?
#206: 
>>+	volatile uchar rfifo;		/* WR  RXCNT/RXTRG - Recieve  FIFO Reg */
   	                     		                     ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#332: FILE: drivers/serial/jsm/digi.h:1:
+/************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: drivers/serial/jsm/digi.h:10:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: drivers/serial/jsm/digi.h:12:
+ * but WITHOUT ANY WARRANTY, EXPRESS OR IMPLIED; without even the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/serial/jsm/digi.h:13:
+ * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/serial/jsm/digi.h:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/serial/jsm/digi.h:16:
+ * You should have received a copy of the GNU General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: drivers/serial/jsm/digi.h:17:
+ * along with this program; if not, write to the Free Software $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#348: FILE: drivers/serial/jsm/digi.h:17:
+ * along with this program; if not, write to the Free Software $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#372: FILE: drivers/serial/jsm/digi.h:41:
+#define TIOCMODG	('d'<<8) | 250		/* get modem ctrl state	*/
                 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#372: FILE: drivers/serial/jsm/digi.h:41:
+#define TIOCMODG	('d'<<8) | 250		/* get modem ctrl state	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#373: FILE: drivers/serial/jsm/digi.h:42:
+#define TIOCMODS	('d'<<8) | 251		/* set modem ctrl state	*/
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#373: FILE: drivers/serial/jsm/digi.h:42:
+#define TIOCMODS	('d'<<8) | 251		/* set modem ctrl state	*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/serial/jsm/digi.h:44:
+#ifndef TIOCM_LE $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#392: FILE: drivers/serial/jsm/digi.h:61:
+#define TIOCMSET	('d'<<8) | 252		/* set modem ctrl state	*/
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#392: FILE: drivers/serial/jsm/digi.h:61:
+#define TIOCMSET	('d'<<8) | 252		/* set modem ctrl state	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#393: FILE: drivers/serial/jsm/digi.h:62:
+#define TIOCMGET	('d'<<8) | 253		/* set modem ctrl state	*/
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#393: FILE: drivers/serial/jsm/digi.h:62:
+#define TIOCMGET	('d'<<8) | 253		/* set modem ctrl state	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#397: FILE: drivers/serial/jsm/digi.h:66:
+#define TIOCMBIC	('d'<<8) | 254		/* set modem ctrl state */
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#397: FILE: drivers/serial/jsm/digi.h:66:
+#define TIOCMBIC	('d'<<8) | 254		/* set modem ctrl state */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#398: FILE: drivers/serial/jsm/digi.h:67:
+#define TIOCMBIS	('d'<<8) | 255		/* set modem ctrl state */
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#398: FILE: drivers/serial/jsm/digi.h:67:
+#define TIOCMBIS	('d'<<8) | 255		/* set modem ctrl state */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#401: FILE: drivers/serial/jsm/digi.h:70:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#403: FILE: drivers/serial/jsm/digi.h:72:
+#define TIOCSDTR	('e'<<8) | 0		/* set DTR		*/
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#403: FILE: drivers/serial/jsm/digi.h:72:
+#define TIOCSDTR	('e'<<8) | 0		/* set DTR		*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#404: FILE: drivers/serial/jsm/digi.h:73:
+#define TIOCCDTR	('e'<<8) | 1		/* clear DTR		*/
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#404: FILE: drivers/serial/jsm/digi.h:73:
+#define TIOCCDTR	('e'<<8) | 1		/* clear DTR		*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#410: FILE: drivers/serial/jsm/digi.h:79:
+#define DIGI_GETA	('e'<<8) | 94		/* Read params		*/
                  	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#410: FILE: drivers/serial/jsm/digi.h:79:
+#define DIGI_GETA	('e'<<8) | 94		/* Read params		*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#411: FILE: drivers/serial/jsm/digi.h:80:
+#define DIGI_SETA	('e'<<8) | 95		/* Set params		*/
                  	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#411: FILE: drivers/serial/jsm/digi.h:80:
+#define DIGI_SETA	('e'<<8) | 95		/* Set params		*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#412: FILE: drivers/serial/jsm/digi.h:81:
+#define DIGI_SETAW	('e'<<8) | 96		/* Drain & set params	*/
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#412: FILE: drivers/serial/jsm/digi.h:81:
+#define DIGI_SETAW	('e'<<8) | 96		/* Drain & set params	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#413: FILE: drivers/serial/jsm/digi.h:82:
+#define DIGI_SETAF	('e'<<8) | 97		/* Drain, flush & set params */
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#413: FILE: drivers/serial/jsm/digi.h:82:
+#define DIGI_SETAF	('e'<<8) | 97		/* Drain, flush & set params */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#414: FILE: drivers/serial/jsm/digi.h:83:
+#define DIGI_KME	('e'<<8) | 98		/* Read/Write Host	*/
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#414: FILE: drivers/serial/jsm/digi.h:83:
+#define DIGI_KME	('e'<<8) | 98		/* Read/Write Host	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#415: FILE: drivers/serial/jsm/digi.h:84:
+#define DIGI_GETFLOW	('e'<<8) | 99		/* Get startc/stopc flow */
                     	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#415: FILE: drivers/serial/jsm/digi.h:84:
+#define DIGI_GETFLOW	('e'<<8) | 99		/* Get startc/stopc flow */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#416: FILE: drivers/serial/jsm/digi.h:85:
+#define DIGI_SETFLOW	('e'<<8) | 100		/* Set startc/stopc flow */
                     	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#416: FILE: drivers/serial/jsm/digi.h:85:
+#define DIGI_SETFLOW	('e'<<8) | 100		/* Set startc/stopc flow */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#417: FILE: drivers/serial/jsm/digi.h:86:
+#define DIGI_GETAFLOW	('e'<<8) | 101		/* Get Aux. startc/stopc */
                      	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#417: FILE: drivers/serial/jsm/digi.h:86:
+#define DIGI_GETAFLOW	('e'<<8) | 101		/* Get Aux. startc/stopc */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#418: FILE: drivers/serial/jsm/digi.h:87:
+#define DIGI_SETAFLOW	('e'<<8) | 102		/* Set Aux. startc/stopc */
                      	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#418: FILE: drivers/serial/jsm/digi.h:87:
+#define DIGI_SETAFLOW	('e'<<8) | 102		/* Set Aux. startc/stopc */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#419: FILE: drivers/serial/jsm/digi.h:88:
+#define DIGI_GEDELAY	('d'<<8) | 246		/* Get edelay */
                     	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#419: FILE: drivers/serial/jsm/digi.h:88:
+#define DIGI_GEDELAY	('d'<<8) | 246		/* Get edelay */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#420: FILE: drivers/serial/jsm/digi.h:89:
+#define DIGI_SEDELAY	('d'<<8) | 247		/* Set edelay */
                     	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#420: FILE: drivers/serial/jsm/digi.h:89:
+#define DIGI_SEDELAY	('d'<<8) | 247		/* Set edelay */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#428: FILE: drivers/serial/jsm/digi.h:97:
+#define F2200_GETA	('e'<<8) | 104		/* Get 2x36 flow cntl flags */
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#428: FILE: drivers/serial/jsm/digi.h:97:
+#define F2200_GETA	('e'<<8) | 104		/* Get 2x36 flow cntl flags */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#429: FILE: drivers/serial/jsm/digi.h:98:
+#define F2200_SETAW	('e'<<8) | 105		/* Set 2x36 flow cntl flags */
                    	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#429: FILE: drivers/serial/jsm/digi.h:98:
+#define F2200_SETAW	('e'<<8) | 105		/* Set 2x36 flow cntl flags */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: drivers/serial/jsm/digi.h:113:
+ * Values for digi_flags $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#466: FILE: drivers/serial/jsm/digi.h:135:
+#define DIGI_COMXI	(DIGI_FAST|DIGI_COOK|DSRPACE|DCDPACE|DTRPACE)
                   	          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#466: FILE: drivers/serial/jsm/digi.h:135:
+#define DIGI_COMXI	(DIGI_FAST|DIGI_COOK|DSRPACE|DCDPACE|DTRPACE)
                   	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#466: FILE: drivers/serial/jsm/digi.h:135:
+#define DIGI_COMXI	(DIGI_FAST|DIGI_COOK|DSRPACE|DCDPACE|DTRPACE)
                   	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#466: FILE: drivers/serial/jsm/digi.h:135:
+#define DIGI_COMXI	(DIGI_FAST|DIGI_COOK|DSRPACE|DCDPACE|DTRPACE)
                   	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/serial/jsm/digi.h:162:
+#define RESULT_NOBDFND^I1^I/* A Digi product at that port is not config installed */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: drivers/serial/jsm/digi.h:163:
+#define RESULT_NODESCT^I2^I/* A memory descriptor was not obtainable */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#547: FILE: drivers/serial/jsm/digi.h:216:
+^Iunsigned int^Iinfo_ch_cflag;^I^I/* Channel cflag   ^I   */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#548: FILE: drivers/serial/jsm/digi.h:217:
+^Iunsigned int^Iinfo_ch_iflag;^I^I/* Channel iflag   ^I   */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#549: FILE: drivers/serial/jsm/digi.h:218:
+^Iunsigned int^Iinfo_ch_oflag;^I^I/* Channel oflag   ^I   */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: drivers/serial/jsm/digi.h:228:
+* This structure is used with the DIGI_FEPCMD ioctl to $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#559: FILE: drivers/serial/jsm/digi.h:228:
+/*
+* This structure is used with the DIGI_FEPCMD ioctl to 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <tIn>
#572: FILE: drivers/serial/jsm/digi.h:241:
+	unsigned long tIn;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <tOut>
#573: FILE: drivers/serial/jsm/digi.h:242:
+	unsigned long tOut;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#580: FILE: drivers/serial/jsm/digi.h:249:
+struct digi_getcounter
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#591: FILE: drivers/serial/jsm/digi.h:260:
+/*
+*  info_sleep_stat defines

CHECK:LINE_SPACING: Please don't use multiple blank lines
#601: FILE: drivers/serial/jsm/digi.h:270:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#650: FILE: drivers/serial/jsm/digi.h:319:
+#define DIGI_SPOLL		('d'<<8) | 254	/* change poller rate   */
                   		    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#650: FILE: drivers/serial/jsm/digi.h:319:
+#define DIGI_SPOLL		('d'<<8) | 254	/* change poller rate   */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#655: FILE: drivers/serial/jsm/digi.h:324:
+#define DIGI_REALPORT_GETBUFFERS	('e'<<8 ) | 108
                                 	    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#655: FILE: drivers/serial/jsm/digi.h:324:
+#define DIGI_REALPORT_GETBUFFERS	('e'<<8 ) | 108

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#655: FILE: drivers/serial/jsm/digi.h:324:
+#define DIGI_REALPORT_GETBUFFERS	('e'<<8 ) | 108

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#656: FILE: drivers/serial/jsm/digi.h:325:
+#define DIGI_REALPORT_SENDIMMEDIATE	('e'<<8 ) | 109
                                    	    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#656: FILE: drivers/serial/jsm/digi.h:325:
+#define DIGI_REALPORT_SENDIMMEDIATE	('e'<<8 ) | 109

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#656: FILE: drivers/serial/jsm/digi.h:325:
+#define DIGI_REALPORT_SENDIMMEDIATE	('e'<<8 ) | 109

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#657: FILE: drivers/serial/jsm/digi.h:326:
+#define DIGI_REALPORT_GETCOUNTERS	('e'<<8 ) | 110
                                  	    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#657: FILE: drivers/serial/jsm/digi.h:326:
+#define DIGI_REALPORT_GETCOUNTERS	('e'<<8 ) | 110

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#657: FILE: drivers/serial/jsm/digi.h:326:
+#define DIGI_REALPORT_GETCOUNTERS	('e'<<8 ) | 110

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#658: FILE: drivers/serial/jsm/digi.h:327:
+#define DIGI_REALPORT_GETEVENTS		('e'<<8 ) | 111
                                		    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#658: FILE: drivers/serial/jsm/digi.h:327:
+#define DIGI_REALPORT_GETEVENTS		('e'<<8 ) | 111

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#658: FILE: drivers/serial/jsm/digi.h:327:
+#define DIGI_REALPORT_GETEVENTS		('e'<<8 ) | 111

ERROR:TRAILING_WHITESPACE: trailing whitespace
#661: FILE: drivers/serial/jsm/digi.h:330:
+#define EV_OPS^I^I0x0002^I^I//!<Output paused by reqular sw flowctrl  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: drivers/serial/jsm/digi.h:347:
+/* $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#708: FILE: drivers/serial/jsm/digi.h:377:
+#define DIGI_GETSTAT	('d'<<8) | 244		/* get board info	*/
                     	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#708: FILE: drivers/serial/jsm/digi.h:377:
+#define DIGI_GETSTAT	('d'<<8) | 244		/* get board info	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#709: FILE: drivers/serial/jsm/digi.h:378:
+#define DIGI_GETCH	('d'<<8) | 245		/* get board info	*/
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#709: FILE: drivers/serial/jsm/digi.h:378:
+#define DIGI_GETCH	('d'<<8) | 245		/* get board info	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#710: FILE: drivers/serial/jsm/digi.h:379:
+#define DIGI_GETDD	('d'<<8) | 248		/* get driver info      */
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#710: FILE: drivers/serial/jsm/digi.h:379:
+#define DIGI_GETDD	('d'<<8) | 248		/* get driver info      */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#711: FILE: drivers/serial/jsm/digi.h:380:
+#define DIGI_GETBD	('d'<<8) | 249		/* get board info       */
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#711: FILE: drivers/serial/jsm/digi.h:380:
+#define DIGI_GETBD	('d'<<8) | 249		/* get board info       */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#712: FILE: drivers/serial/jsm/digi.h:381:
+#define DIGI_GET_NI_INFO ('d'<<8) | 250		/* nonintelligent state snfo */
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#712: FILE: drivers/serial/jsm/digi.h:381:
+#define DIGI_GET_NI_INFO ('d'<<8) | 250		/* nonintelligent state snfo */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#715: FILE: drivers/serial/jsm/digi.h:384:
+#define DIGI_TIMERIRQ	('d'<<8) | 251		/* Enable/disable RS_TIMER use */
                      	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#715: FILE: drivers/serial/jsm/digi.h:384:
+#define DIGI_TIMERIRQ	('d'<<8) | 251		/* Enable/disable RS_TIMER use */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#716: FILE: drivers/serial/jsm/digi.h:385:
+#define DIGI_LOOPBACK	('d'<<8) | 252		/* Enable/disable UART internal loopback */
                      	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#716: FILE: drivers/serial/jsm/digi.h:385:
+#define DIGI_LOOPBACK	('d'<<8) | 252		/* Enable/disable UART internal loopback */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#723: FILE: drivers/serial/jsm/jsm_driver.h:1:
+/************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: drivers/serial/jsm/jsm_driver.h:10:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#734: FILE: drivers/serial/jsm/jsm_driver.h:12:
+ * but WITHOUT ANY WARRANTY, EXPRESS OR IMPLIED; without even the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: drivers/serial/jsm/jsm_driver.h:13:
+ * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: drivers/serial/jsm/jsm_driver.h:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: drivers/serial/jsm/jsm_driver.h:16:
+ * You should have received a copy of the GNU General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: drivers/serial/jsm/jsm_driver.h:17:
+ * along with this program; if not, write to the Free Software $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#739: FILE: drivers/serial/jsm/jsm_driver.h:17:
+ * along with this program; if not, write to the Free Software $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: drivers/serial/jsm/jsm_driver.h:33:
+#include <linux/tty.h>^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: drivers/serial/jsm/jsm_driver.h:37:
+#include <linux/module.h>^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#760: FILE: drivers/serial/jsm/jsm_driver.h:38:
+#include <linux/moduleparam.h>^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: drivers/serial/jsm/jsm_driver.h:39:
+#include <linux/kdev_t.h>^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#767: FILE: drivers/serial/jsm/jsm_driver.h:45:
+
+

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#798: FILE: drivers/serial/jsm/jsm_driver.h:76:
+#define DPRINTK(nlevel, klevel, fmt, args...) \
+	(void)((DBG_##nlevel & debug) && \
+	printk(KERN_##klevel "%s: " fmt, \
+		__FUNCTION__, ## args)); 

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#798: FILE: drivers/serial/jsm/jsm_driver.h:76:
+#define DPRINTK(nlevel, klevel, fmt, args...) \
+	(void)((DBG_##nlevel & debug) && \
+	printk(KERN_##klevel "%s: " fmt, \
+		__FUNCTION__, ## args)); 

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#800: FILE: drivers/serial/jsm/jsm_driver.h:78:
+	printk(KERN_##klevel "%s: " fmt, \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: drivers/serial/jsm/jsm_driver.h:79:
+^I^I__FUNCTION__, ## args)); $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#801: FILE: drivers/serial/jsm/jsm_driver.h:79:
+		__FUNCTION__, ## args)); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: drivers/serial/jsm/jsm_driver.h:80:
+^I$

WARNING:SPACING: Unnecessary space before function pointer arguments
#846: FILE: drivers/serial/jsm/jsm_driver.h:124:
+	irqreturn_t (*intr) (int irq, void *voidbrd, struct pt_regs *regs);

WARNING:SPACING: Unnecessary space before function pointer arguments
#847: FILE: drivers/serial/jsm/jsm_driver.h:125:
+	void (*uart_init) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#848: FILE: drivers/serial/jsm/jsm_driver.h:126:
+	void (*uart_off) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#849: FILE: drivers/serial/jsm/jsm_driver.h:127:
+	void (*param) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#850: FILE: drivers/serial/jsm/jsm_driver.h:128:
+	void (*assert_modem_signals) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#851: FILE: drivers/serial/jsm/jsm_driver.h:129:
+	void (*flush_uart_write) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#852: FILE: drivers/serial/jsm/jsm_driver.h:130:
+	void (*flush_uart_read) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#853: FILE: drivers/serial/jsm/jsm_driver.h:131:
+	void (*disable_receiver) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#854: FILE: drivers/serial/jsm/jsm_driver.h:132:
+	void (*enable_receiver) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#855: FILE: drivers/serial/jsm/jsm_driver.h:133:
+	void (*send_break) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#856: FILE: drivers/serial/jsm/jsm_driver.h:134:
+	void (*clear_break) (struct jsm_channel *ch, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#856: FILE: drivers/serial/jsm/jsm_driver.h:134:
+	void (*clear_break) (struct jsm_channel *ch, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#857: FILE: drivers/serial/jsm/jsm_driver.h:135:
+	void (*send_start_character) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#858: FILE: drivers/serial/jsm/jsm_driver.h:136:
+	void (*send_stop_character) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#859: FILE: drivers/serial/jsm/jsm_driver.h:137:
+	void (*copy_data_from_queue_to_uart) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#860: FILE: drivers/serial/jsm/jsm_driver.h:138:
+	u32 (*get_uart_bytes_left) (struct jsm_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#861: FILE: drivers/serial/jsm/jsm_driver.h:139:
+	void (*send_immediate_char) (struct jsm_channel *ch, unsigned char);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#861: FILE: drivers/serial/jsm/jsm_driver.h:139:
+	void (*send_immediate_char) (struct jsm_channel *ch, unsigned char);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#868: FILE: drivers/serial/jsm/jsm_driver.h:146:
+struct jsm_board
+{

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#879: FILE: drivers/serial/jsm/jsm_driver.h:157:
+	spinlock_t	bd_intr_lock;	/* Used to protect the poller tasklet and

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#906: FILE: drivers/serial/jsm/jsm_driver.h:184:
+	char		*flipbuf;	/* Our flip buffer, alloced if board is found */
 	    		         	                    ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#918: FILE: drivers/serial/jsm/jsm_driver.h:196:
+/************************************************************************ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: drivers/serial/jsm/jsm_driver.h:225:
+/************************************************************************ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1003: FILE: drivers/serial/jsm/jsm_driver.h:281:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1016: FILE: drivers/serial/jsm/jsm_driver.h:294:
+/************************************************************************ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1021: FILE: drivers/serial/jsm/jsm_driver.h:299:
+ *^IW = read write^I^IR = read only^I^I^I^I* $

WARNING:TABSTOP: Statements should start on a tabstop
#1026: FILE: drivers/serial/jsm/jsm_driver.h:304:
+	 u8 txrx;		/* WR	RHR/THR - Holding Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1027: FILE: drivers/serial/jsm/jsm_driver.h:305:
+	 u8 ier;		/* WR	IER - Interrupt Enable Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1028: FILE: drivers/serial/jsm/jsm_driver.h:306:
+	 u8 isr_fcr;		/* WR	ISR/FCR - Interrupt Status Reg/Fifo Control Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1029: FILE: drivers/serial/jsm/jsm_driver.h:307:
+	 u8 lcr;		/* WR	LCR - Line Control Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1030: FILE: drivers/serial/jsm/jsm_driver.h:308:
+	 u8 mcr;		/* WR	MCR - Modem Control Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1031: FILE: drivers/serial/jsm/jsm_driver.h:309:
+	 u8 lsr;		/* WR	LSR - Line Status Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1032: FILE: drivers/serial/jsm/jsm_driver.h:310:
+	 u8 msr;		/* WR	MSR - Modem Status Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1033: FILE: drivers/serial/jsm/jsm_driver.h:311:
+	 u8 spr;		/* WR	SPR - Scratch Pad Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1034: FILE: drivers/serial/jsm/jsm_driver.h:312:
+	 u8 fctr;		/* WR	FCTR - Feature Control Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1035: FILE: drivers/serial/jsm/jsm_driver.h:313:
+	 u8 efr;		/* WR	EFR - Enhanced Function Reg */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: drivers/serial/jsm/jsm_driver.h:314:
+^I u8 tfifo;^I^I/* WR^ITXCNT/TXTRG - Transmit FIFO Reg */^I$

WARNING:TABSTOP: Statements should start on a tabstop
#1036: FILE: drivers/serial/jsm/jsm_driver.h:314:
+	 u8 tfifo;		/* WR	TXCNT/TXTRG - Transmit FIFO Reg */	

WARNING:TYPO_SPELLING: 'Recieve' may be misspelled - perhaps 'Receive'?
#1037: FILE: drivers/serial/jsm/jsm_driver.h:315:
+	 u8 rfifo;		/* WR	RXCNT/RXTRG - Recieve FIFO Reg */
 	          		     	              ^^^^^^^

WARNING:TABSTOP: Statements should start on a tabstop
#1037: FILE: drivers/serial/jsm/jsm_driver.h:315:
+	 u8 rfifo;		/* WR	RXCNT/RXTRG - Recieve FIFO Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1038: FILE: drivers/serial/jsm/jsm_driver.h:316:
+	 u8 xoffchar1;	/* WR	XOFF 1 - XOff Character 1 Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1039: FILE: drivers/serial/jsm/jsm_driver.h:317:
+	 u8 xoffchar2;	/* WR	XOFF 2 - XOff Character 2 Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1040: FILE: drivers/serial/jsm/jsm_driver.h:318:
+	 u8 xonchar1;	/* WR	XON 1 - Xon Character 1 Reg */

WARNING:TABSTOP: Statements should start on a tabstop
#1041: FILE: drivers/serial/jsm/jsm_driver.h:319:
+	 u8 xonchar2;	/* WR	XON 2 - XOn Character 2 Reg */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1153: FILE: drivers/serial/jsm/jsm_driver.h:431:
+extern char *jsm_ioctl_name(int cmd);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1154: FILE: drivers/serial/jsm/jsm_driver.h:432:
+extern int get_jsm_board_number(void);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#1163: FILE: drivers/serial/jsm/jsm_driver.h:441:
+int jsm_tty_init(struct jsm_board *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#1164: FILE: drivers/serial/jsm/jsm_driver.h:442:
+int jsm_uart_port_init(struct jsm_board *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#1165: FILE: drivers/serial/jsm/jsm_driver.h:443:
+int jsm_remove_uart_port(struct jsm_board *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#1167: FILE: drivers/serial/jsm/jsm_driver.h:445:
+void jsm_tty_uninit(struct jsm_board *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1173: FILE: drivers/serial/jsm/jsm_driver.h:451:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device_driver *' should also have an identifier name
#1176: FILE: drivers/serial/jsm/jsm_driver.h:454:
+void jsm_create_driver_sysfiles(struct device_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device_driver *' should also have an identifier name
#1177: FILE: drivers/serial/jsm/jsm_driver.h:455:
+void jsm_remove_driver_sysfiles(struct device_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#1178: FILE: drivers/serial/jsm/jsm_driver.h:456:
+void jsm_create_ports_sysfiles(struct jsm_board *, struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1178: FILE: drivers/serial/jsm/jsm_driver.h:456:
+void jsm_create_ports_sysfiles(struct jsm_board *, struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_board *' should also have an identifier name
#1179: FILE: drivers/serial/jsm/jsm_driver.h:457:
+void jsm_remove_ports_sysfiles(struct jsm_board *, struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1179: FILE: drivers/serial/jsm/jsm_driver.h:457:
+void jsm_remove_ports_sysfiles(struct jsm_board *, struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_channel *' should also have an identifier name
#1180: FILE: drivers/serial/jsm/jsm_driver.h:458:
+void jsm_tty_register_device(struct jsm_channel *, struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1180: FILE: drivers/serial/jsm/jsm_driver.h:458:
+void jsm_tty_register_device(struct jsm_channel *, struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct jsm_channel *' should also have an identifier name
#1181: FILE: drivers/serial/jsm/jsm_driver.h:459:
+void jsm_tty_unregister_device(struct jsm_channel *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202121.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 72 errors, 65 warnings, 47 checks, 851 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202121.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
