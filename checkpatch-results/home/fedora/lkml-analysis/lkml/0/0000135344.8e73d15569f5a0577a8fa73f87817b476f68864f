WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#58: FILE: arch/i386/Kconfig:21:
+config PARANOID_GENERIC_TIME
+	bool "Paraniod Timekeeping Checks"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:LINE_SPACING: Missing a blank line after declarations
#81: FILE: arch/i386/kernel/tsc.c:325:
+	unsigned long flags;
+	spin_lock_irqsave(&checktsc_lock, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#85: FILE: arch/i386/kernel/tsc.c:329:
+	if(ret < last_tsc)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#86: FILE: arch/i386/kernel/tsc.c:330:
+		printk("read_tsc: ACK! TSC went backward! Unsynced TSCs?\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_tsc', this function's name, in a string
#86: FILE: arch/i386/kernel/tsc.c:330:
+		printk("read_tsc: ACK! TSC went backward! Unsynced TSCs?\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LINE_SPACING: Missing a blank line after declarations
#97: FILE: arch/i386/kernel/tsc.c:341:
+	unsigned long flags;
+	spin_lock_irqsave(&checktsc_lock, flags);

ERROR:SPACING: space required before the open parenthesis '('
#102: FILE: arch/i386/kernel/tsc.c:346:
+	if(ret < last_tsc)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: arch/i386/kernel/tsc.c:347:
+		printk("read_tsc_c3: ACK! TSC went backward! Unsynced TSCs?\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_tsc_c3', this function's name, in a string
#103: FILE: arch/i386/kernel/tsc.c:347:
+		printk("read_tsc_c3: ACK! TSC went backward! Unsynced TSCs?\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#131: FILE: arch/x86_64/Kconfig:35:
+config PARANOID_GENERIC_TIME
+	bool "Paraniod Timekeeping Checks"
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: arch/x86_64/kernel/time.c:1063:
+	unsigned long flags;
+	spin_lock_irqsave(&checktsc_lock, flags);

ERROR:SPACING: space required before the open parenthesis '('
#158: FILE: arch/x86_64/kernel/time.c:1067:
+	if(ret < last_tsc)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#159: FILE: arch/x86_64/kernel/time.c:1068:
+		printk("read_tsc: ACK! TSC went backward! Unsynced TSCs?\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_tsc', this function's name, in a string
#159: FILE: arch/x86_64/kernel/time.c:1068:
+		printk("read_tsc: ACK! TSC went backward! Unsynced TSCs?\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#166: FILE: arch/x86_64/kernel/time.c:1075:
+static cycle_t __vsyscall_fn vread_tsc(void* unused)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: arch/x86_64/kernel/time.c:1078:
+	cycle_t ret;
+	rdtscll(ret);

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: arch/x86_64/kernel/time.c:1086:
+	unsigned long flags;
+	spin_lock_irqsave(&checktsc_lock, flags);

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: arch/x86_64/kernel/time.c:1091:
+	if(ret < last_tsc)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: arch/x86_64/kernel/time.c:1092:
+		printk("read_tsc_c3: ACK! TSC went backward! Unsynced TSCs?\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_tsc_c3', this function's name, in a string
#183: FILE: arch/x86_64/kernel/time.c:1092:
+		printk("read_tsc_c3: ACK! TSC went backward! Unsynced TSCs?\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#212: FILE: kernel/time/timeofday.c:123:
 
+

ERROR:SPACING: space required before the open parenthesis '('
#234: FILE: kernel/time/timeofday.c:145:
+	if(ktime_cmp(now, <, prev)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: kernel/time/timeofday.c:147:
+		static int warn_count = 10;
+		if (warn_count > 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: kernel/time/timeofday.c:149:
+			printk("check_monotonic_clock: monotonic inconsistency"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_monotonic_clock', this function's name, in a string
#238: FILE: kernel/time/timeofday.c:149:
+			printk("check_monotonic_clock: monotonic inconsistency"

WARNING:SPLIT_STRING: quoted string split across lines
#239: FILE: kernel/time/timeofday.c:150:
+			printk("check_monotonic_clock: monotonic inconsistency"
+					" detected!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: kernel/time/timeofday.c:151:
+			printk("	from %16Lx (%llu) to %16Lx (%llu).\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#240: FILE: kernel/time/timeofday.c:151:
+			printk("	from %16Lx (%llu) to %16Lx (%llu).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: kernel/time/timeofday.c:152:
+			printk("	from %16Lx (%llu) to %16Lx (%llu).\n",
+					ktime_to_ns(prev),

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#252: FILE: kernel/time/timeofday.c:163:
+}
+/* timespec version */

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#256: FILE: kernel/time/timeofday.c:167:
+/* Call holding atleast a readlock on system_time_lock */
                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: kernel/time/timeofday.c:171:
+	static int warn_count = 10;
+	if (warn_count <= 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#264: FILE: kernel/time/timeofday.c:175:
+		printk("verify_timekeeping_state: system_time != mono_time_ts\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'verify_timekeeping_state', this function's name, in a string
#264: FILE: kernel/time/timeofday.c:175:
+		printk("verify_timekeeping_state: system_time != mono_time_ts\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: kernel/time/timeofday.c:180:
+	if (ktime_cmp(ktime_add(system_time, wall_time_offset), !=,
+					 timespec_to_ktime(wall_time_ts))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#270: FILE: kernel/time/timeofday.c:181:
+		printk("verify_timekeeping_state: system_time + wall_time_offset "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'verify_timekeeping_state', this function's name, in a string
#270: FILE: kernel/time/timeofday.c:181:
+		printk("verify_timekeeping_state: system_time + wall_time_offset "

WARNING:SPLIT_STRING: quoted string split across lines
#271: FILE: kernel/time/timeofday.c:182:
+		printk("verify_timekeeping_state: system_time + wall_time_offset "
+				"!= wall_time_ts\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: kernel/time/timeofday.c:187:
+	if (ktime_cmp(wall_time_offset, !=,
+					 timespec_to_ktime(monotonic_time_offset_ts))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#277: FILE: kernel/time/timeofday.c:188:
+		printk("verify_timekeeping_state: wall_time_offset "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'verify_timekeeping_state', this function's name, in a string
#277: FILE: kernel/time/timeofday.c:188:
+		printk("verify_timekeeping_state: wall_time_offset "

WARNING:SPLIT_STRING: quoted string split across lines
#278: FILE: kernel/time/timeofday.c:189:
+		printk("verify_timekeeping_state: wall_time_offset "
+				"!= monotonic_time_offset_ts\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: kernel/time/timeofday.c:199:
+	nsec_t ns_offset;
+	if (last != 0 && now != 0) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#289: FILE: kernel/time/timeofday.c:200:
+		delta = (now - last)& clock->mask;
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#293: FILE: kernel/time/timeofday.c:204:
+		if(ns_offset > (nsec_t)2*PERIODIC_INTERVAL_MS *1000000) {
 		                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#293: FILE: kernel/time/timeofday.c:204:
+		if(ns_offset > (nsec_t)2*PERIODIC_INTERVAL_MS *1000000) {
 		                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#293: FILE: kernel/time/timeofday.c:204:
+		if(ns_offset > (nsec_t)2*PERIODIC_INTERVAL_MS *1000000) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: kernel/time/timeofday.c:206:
+			static int warn_count = 10;
+			if (warn_count > 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: kernel/time/timeofday.c:208:
+				printk("check_periodic_interval: Long interval! %llu.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_periodic_interval', this function's name, in a string
#297: FILE: kernel/time/timeofday.c:208:
+				printk("check_periodic_interval: Long interval! %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: kernel/time/timeofday.c:209:
+				printk("check_periodic_interval: Long interval! %llu.\n",
+								ns_offset);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#299: FILE: kernel/time/timeofday.c:210:
+				printk("		Something may be blocking interrupts.\n");

CHECK:SPACING: No space is necessary after a cast
#307: FILE: kernel/time/timeofday.c:218:
+#define get_check_value(void) ktime_set(0,0) /* XXX can we optimize this out? */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: kernel/time/timeofday.c:218:
+#define get_check_value(void) ktime_set(0,0) /* XXX can we optimize this out? */
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: kernel/time/timeofday.c:219:
+#define check_monotonic_clock(x,y) {}
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: kernel/time/timeofday.c:220:
+#define check_monotonic_clock_ts(x,ts)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#326: FILE: kernel/time/timeofday.c:293:
+	check_monotonic_clock(check,ret);
 	                           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135344.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 36 warnings, 10 checks, 289 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135344.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
