CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#257: FILE: arch/i386/kernel/process.c:869:
+#define CHECK_TLS_IDX(idx)						\
+do {									\
+	if ((idx) < GDT_ENTRY_TLS_MIN || (idx) > GDT_ENTRY_TLS_MAX)	\
+		BUG();							\
+} while (0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#260: FILE: arch/i386/kernel/process.c:872:
+		BUG();							\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desc' - possible side-effects?
#327: FILE: arch/i386/kernel/process.c:930:
+#define GET_BASE(desc) ( \
+	(((desc)->a >> 16) & 0x0000ffff) | \
+	(((desc)->b << 16) & 0x00ff0000) | \
+	( (desc)->b        & 0xff000000)   )

ERROR:SPACING: space prohibited after that open parenthesis '('
#330: FILE: arch/i386/kernel/process.c:933:
+	( (desc)->b        & 0xff000000)   )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#330: FILE: arch/i386/kernel/process.c:933:
+	( (desc)->b        & 0xff000000)   )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desc' - possible side-effects?
#332: FILE: arch/i386/kernel/process.c:935:
+#define GET_LIMIT(desc) ( \
+	((desc)->a & 0x0ffff) | \
+	 ((desc)->b & 0xf0000) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#334: FILE: arch/i386/kernel/process.c:937:
+	 ((desc)->b & 0xf0000) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: arch/i386/kernel/process.c:938:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#364: FILE: arch/i386/kernel/process.c:967:
+	info.useable = GET_USEABLE(desc);
 	     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: arch/i386/kernel/suspend.c:210:
+        cpu_gdt_table[cpu][GDT_ENTRY_TSS].b &= 0xfffffdff;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: arch/i386/kernel/suspend.c:210:
+        cpu_gdt_table[cpu][GDT_ENTRY_TSS].b &= 0xfffffdff;$

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#432: FILE: arch/i386/boot/setup.S:1012:
+# the GDT, but those wont be used so it's not a problem.
                      ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#514: FILE: include/asm-i386/desc.h:20:
+#define load_TR_desc() __asm__ __volatile__("ltr %%ax"::"a" (GDT_ENTRY_TSS*8))
                                                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#514: FILE: include/asm-i386/desc.h:20:
+#define load_TR_desc() __asm__ __volatile__("ltr %%ax"::"a" (GDT_ENTRY_TSS*8))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#515: FILE: include/asm-i386/desc.h:21:
+#define load_LDT_desc() __asm__ __volatile__("lldt %%ax"::"a" (GDT_ENTRY_LDT*8))
                                                                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#515: FILE: include/asm-i386/desc.h:21:
+#define load_LDT_desc() __asm__ __volatile__("lldt %%ax"::"a" (GDT_ENTRY_LDT*8))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#530: FILE: include/asm-i386/desc.h:48:
+	_set_tssldt_desc(&cpu_gdt_table[cpu][GDT_ENTRY_LDT], (int)addr, ((size << 3)-1), 0x82);
 	                                                                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#534: FILE: include/asm-i386/desc.h:51:
+#define LDT_entry_a(info) \
+	((((info)->base_addr & 0x0000ffff) << 16) | ((info)->limit & 0x0ffff))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#538: FILE: include/asm-i386/desc.h:54:
+#define LDT_entry_b(info) \
+	(((info)->base_addr & 0xff000000) | \
+	(((info)->base_addr & 0x00ff0000) >> 16) | \
+	((info)->limit & 0xf0000) | \
+	(((info)->read_exec_only ^ 1) << 9) | \
+	((info)->contents << 10) | \
+	(((info)->seg_not_present ^ 1) << 15) | \
+	((info)->seg_32bit << 22) | \
+	((info)->limit_in_pages << 23) | \
+	((info)->useable << 20) | \
+	0x7000)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#547: FILE: include/asm-i386/desc.h:63:
+	((info)->useable << 20) | \
 	         ^^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#550: FILE: include/asm-i386/desc.h:66:
+#define LDT_empty(info) (\
+	(info)->base_addr	== 0	&& \
+	(info)->limit		== 0	&& \
+	(info)->contents	== 0	&& \
+	(info)->read_exec_only	== 1	&& \
+	(info)->seg_32bit	== 0	&& \
+	(info)->limit_in_pages	== 0	&& \
+	(info)->seg_not_present	== 1	&& \
+	(info)->useable		== 0	)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#558: FILE: include/asm-i386/desc.h:74:
+	(info)->useable		== 0	)
 	        ^^^^^^^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#558: FILE: include/asm-i386/desc.h:74:
+	(info)->useable		== 0	)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#561: FILE: include/asm-i386/desc.h:76:
+static inline void load_TLS(struct thread_struct *prev, struct thread_struct *next, unsigned int cpu)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desc' - possible side-effects?
#574: FILE: include/asm-i386/processor.h:25:
+#define desc_empty(desc) \
+		(!((desc)->a + (desc)->b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desc1' - possible side-effects?
#577: FILE: include/asm-i386/processor.h:28:
+#define desc_equal(desc1, desc2) \
+		(((desc1)->a == (desc2)->a) && ((desc1)->b == (desc2)->b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desc2' - possible side-effects?
#577: FILE: include/asm-i386/processor.h:28:
+#define desc_equal(desc1, desc2) \
+		(((desc1)->a == (desc2)->a) && ((desc1)->b == (desc2)->b))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#606: FILE: include/asm-i386/processor.h:417:
+	GDT_ENTRY_LDT,0, /* ldt */					\
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#638: FILE: include/asm-i386/segment.h:24:
+ *  11 - APM BIOS support $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#654: FILE: include/asm-i386/segment.h:40:
+#define GDT_ENTRY_TLS_MAX ^I(GDT_ENTRY_TLS_MIN + GDT_ENTRY_TLS_ENTRIES - 1)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#666: FILE: include/asm-i386/segment.h:50:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440073.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 8 warnings, 13 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440073.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
