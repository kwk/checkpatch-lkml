WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> > Personally, I'd like to see all systems use NUMA sched, non NUMA systems

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'node->nr_cpus > 1'
#85: FILE: kernel/sched.c:1264:
+			if (!(j % node->idle_rebalance_tick) && (node->nr_cpus > 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'node->nr_cpus > 1'
#94: FILE: kernel/sched.c:1272:
+		if (!(j % node->busy_rebalance_tick) && (node->nr_cpus > 1))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#135: FILE: arch/i386/kernel/smpboot.c:508:
+int node_2_node[MAX_NUMNODES] = { [0 ... MAX_NUMNODES-1] = MAX_NUMNODES-1 };
                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#135: FILE: arch/i386/kernel/smpboot.c:508:
+int node_2_node[MAX_NUMNODES] = { [0 ... MAX_NUMNODES-1] = MAX_NUMNODES-1 };
                                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#143: FILE: arch/i386/kernel/smpboot.c:516:
+	node_2_node[node] = MAX_NUMNODES-1;
 	                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#155: FILE: arch/x86_64/kernel/smpboot.c:67:
+volatile int node_2_node[MAX_NUMNODES] = { [0 ... MAX_NUMNODES-1] = MAX_NUMNODES-1;
                                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#155: FILE: arch/x86_64/kernel/smpboot.c:67:
+volatile int node_2_node[MAX_NUMNODES] = { [0 ... MAX_NUMNODES-1] = MAX_NUMNODES-1;
                                                                                 ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#155: FILE: arch/x86_64/kernel/smpboot.c:67:
+volatile int node_2_node[MAX_NUMNODES] = { [0 ... MAX_NUMNODES-1] = MAX_NUMNODES-1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: include/asm-i386/topology.h:50:
+/* Returns the number of the node containing Node 'node'. */   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#234: FILE: include/linux/sched.h:501:
+extern void numa_sched_topology_report(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: include/linux/sched.h:502:
+extern void rq_to_node_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: include/linux/sched.h:503:
+extern void node_to_node_init(void);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: kernel/sched.c:73:
+#define IDLE_REBALANCE_TICK ^I(HZ/1000 ?: 1)$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#285: FILE: kernel/sched.c:73:
+#define IDLE_REBALANCE_TICK 	(HZ/1000 ?: 1)
                             	   ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: kernel/sched.c:74:
+#define BUSY_REBALANCE_TICK ^I(HZ/5 ?: 1)$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#286: FILE: kernel/sched.c:74:
+#define BUSY_REBALANCE_TICK 	(HZ/5 ?: 1)
                             	   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: kernel/sched.c:186:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: kernel/sched.c:186:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: kernel/sched.c:190:
+ * also point to their parent_node.  These pointers allow $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: kernel/sched.c:192:
+ * use these structs, not simple NUMA topology when interpreting $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: kernel/sched.c:194:
+ * these structs. $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#332: FILE: kernel/sched.c:205:
+	[0 ...MAX_NUMNODES-1].parent_node = NULL,
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#333: FILE: kernel/sched.c:206:
+	[0 ...MAX_NUMNODES-1].child_nodes = NULL,
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#334: FILE: kernel/sched.c:207:
+	[0 ...MAX_NUMNODES-1].runqueues = NULL,
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#335: FILE: kernel/sched.c:208:
+	[0 ...MAX_NUMNODES-1].nr_running = ATOMIC_INIT(0),
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#336: FILE: kernel/sched.c:209:
+	[0 ...MAX_NUMNODES-1].nr_cpus = 0,
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#337: FILE: kernel/sched.c:210:
+	[0 ...MAX_NUMNODES-1].busy_rebalance_tick = BUSY_REBALANCE_TICK,
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#338: FILE: kernel/sched.c:211:
+	[0 ...MAX_NUMNODES-1].idle_rebalance_tick = IDLE_REBALANCE_TICK
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: kernel/sched.c:216:
+/* $

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#349: FILE: kernel/sched.c:219:
+#define top_node		(nodes + MAX_NUMNODES -1)
                 		                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: kernel/sched.c:223:
+ * Keep track of running tasks. Update nr_running for $

WARNING:LINE_SPACING: Missing a blank line after declarations
#367: FILE: kernel/sched.c:230:
+	struct node_t *node = rq->node;
+	while (node) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#378: FILE: kernel/sched.c:240:
+	struct node_t *node = rq->node;
+	while (node) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#397: FILE: kernel/sched.c:253:
+	printk("scheduler topology report:\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#402: FILE: kernel/sched.c:258:
+			printk("node %i...\n", n->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#403: FILE: kernel/sched.c:259:
+			printk("nr_running: %u\n", atomic_read(&n->nr_running));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#404: FILE: kernel/sched.c:260:
+			printk("idle_rebalance_tick: %i\n", n->idle_rebalance_tick);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#405: FILE: kernel/sched.c:261:
+			printk("busy_rebalance_tick: %i\n", n->busy_rebalance_tick);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#406: FILE: kernel/sched.c:262:
+			printk("  has %i cpus\n", n->nr_cpus);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#407: FILE: kernel/sched.c:263:
+			printk("  has these runqueues: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#410: FILE: kernel/sched.c:266:
+				printk(" %i,", rq->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#413: FILE: kernel/sched.c:269:
+			printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#415: FILE: kernel/sched.c:271:
+			printk("  has these children:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#418: FILE: kernel/sched.c:274:
+				printk(" %i,", o->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#421: FILE: kernel/sched.c:277:
+			printk("\n\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: kernel/sched.c:288:
+^Inode->runqueues = rq; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: kernel/sched.c:303:
+/* $

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#459: FILE: kernel/sched.c:310:
+	for (i = 0; i < NR_CPUS; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: kernel/sched.c:321:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: kernel/sched.c:322:
+ * Setup the pointers between parent and child nodes $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n->id == node'
#487: FILE: kernel/sched.c:338:
+				if ((n->id == node) && (i != node))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i != node'
#487: FILE: kernel/sched.c:338:
+				if ((n->id == node) && (i != node))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: kernel/sched.c:349:
+^I^I^Inodeptr(i)->idle_rebalance_tick = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: kernel/sched.c:351:
+^I^I^Inodeptr(i)->busy_rebalance_tick = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: kernel/sched.c:925:
+^I^I^I * Node load is always divided by nr_cpus_node to normalise $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: kernel/sched.c:928:
+^I^I^I * better resolution.   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: kernel/sched.c:936:
+^I^I^I^I}^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#620: FILE: kernel/sched.c:981:
+	this_load = maxload = (this_rq()->prev_node_load[this_node->id] >> 1)

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'node == this_node'
#628: FILE: kernel/sched.c:989:
+		if (!(node->nr_cpus) || (node == this_node)) {

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#661: FILE: kernel/sched.c:1036:
+static inline runqueue_t *find_busiest_queue(runqueue_t *this_rq, int this_cpu, int idle , int *imbalance, struct node_t *node)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#661: FILE: kernel/sched.c:1036:
+static inline runqueue_t *find_busiest_queue(runqueue_t *this_rq, int this_cpu, int idle , int *imbalance, struct node_t *node)
                                                                                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq_src->nr_running < this_rq->prev_cpu_load[cpu_id]'
#697: FILE: kernel/sched.c:1080:
+				if (idle || (rq_src->nr_running < this_rq->prev_cpu_load[cpu_id]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'load > max_load'
#704: FILE: kernel/sched.c:1087:
+				if ((load > max_load) && (rq_src != this_rq)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq_src != this_rq'
#704: FILE: kernel/sched.c:1087:
+				if ((load > max_load) && (rq_src != this_rq)) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#751: FILE: kernel/sched.c:1238:
+static void balance_node(runqueue_t *this_rq, int idle, struct node_t *last_node, struct node_t *node)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000343302.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 22 warnings, 27 checks, 713 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000343302.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
