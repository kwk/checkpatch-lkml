CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#142: FILE: fs/buffer.c:1304:
+	spinlock_t lock;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#144: FILE: fs/buffer.c:1306:
+} ____cacheline_aligned_in_smp bh_lrus[NR_CPUS];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bh"
#154: FILE: fs/buffer.c:1316:
+	if (bh == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#173: FILE: fs/buffer.c:1335:
+					BUG_ON(evictee != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "evictee"
#173: FILE: fs/buffer.c:1335:
+					BUG_ON(evictee != NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: fs/buffer.c:1368:
+		if (bh && bh->b_bdev == bdev &&
+				bh->b_blocknr == block && bh->b_size == size) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bh"
#229: FILE: fs/buffer.c:1391:
+	if (bh == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bh"
#242: FILE: fs/buffer.c:1404:
+	if (bh == NULL) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#273: FILE: fs/buffer.c:1435:
+	for (cpu_idx = 0; cpu_idx < NR_CPUS; cpu_idx++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#275: FILE: fs/buffer.c:1437:
+	for (cpu_idx = 0; cpu_idx < NR_CPUS; cpu_idx++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#283: FILE: fs/buffer.c:1445:
+	for (cpu_idx = 0; cpu_idx < NR_CPUS; cpu_idx++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#294: FILE: fs/buffer.c:2601:
+	for (i = 0; i < NR_CPUS; i++)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#307: FILE: include/linux/buffer_head.h:167:
+struct buffer_head *__bread(struct block_device *, sector_t block, int size);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: include/linux/buffer_head.h:206:
+        atomic_inc(&bh->b_count);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: include/linux/buffer_head.h:206:
+        atomic_inc(&bh->b_count);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 6 checks, 334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
