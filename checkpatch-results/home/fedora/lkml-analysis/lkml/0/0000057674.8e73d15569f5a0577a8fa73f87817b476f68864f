WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

WARNING:TYPO_SPELLING: 'desciptor' may be misspelled - perhaps 'descriptor'?
#56: 
      ixgb: fix tx unit hang - properly calculate desciptor count
                                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#95: FILE: drivers/net/8139cp.c:1919:
+		dev_err(&pdev->dev, "Cannot map PCI MMIO (%Lx@%Lx)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/net/8139cp.c:1920:
+		dev_err(&pdev->dev, "Cannot map PCI MMIO (%Lx@%Lx)\n",
 		       (unsigned long long)pci_resource_len(pdev, 1),

CHECK:CAMELCASE: Avoid CamelCase: <NvRegTxDeferral>
#124: FILE: drivers/net/forcedeth.c:243:
+	NvRegTxDeferral = 0xA0,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <NvRegRxDeferral>
#128: FILE: drivers/net/forcedeth.c:247:
+	NvRegRxDeferral = 0xA4,

CHECK:CAMELCASE: Avoid CamelCase: <NvRegTxWatermark>
#139: FILE: drivers/net/forcedeth.c:274:
+	NvRegTxWatermark = 0x13c,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#443: FILE: drivers/net/s2io.c:6126:
+static int s2io_add_isr(nic_t * sp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#482: FILE: drivers/net/s2io.c:6146:
+		err = request_irq((int) sp->pdev->irq, s2io_msi_handle,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/net/s2io.c:6147:
+		err = request_irq((int) sp->pdev->irq, s2io_msi_handle,
+			IRQF_SHARED, sp->name, dev);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#495: FILE: drivers/net/s2io.c:6158:
+		for (i=1; (sp->s2io_entries[i].in_use == MSIX_FLG); i++) {
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: drivers/net/s2io.c:6163:
+				err = request_irq(sp->entries[i].vector,
+					  s2io_msix_fifo_handle, 0, sp->desc[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: drivers/net/s2io.c:6166:
+				DBG_PRINT(ERR_DBG, "%s @ 0x%llx\n", sp->desc[i],
+				(unsigned long long)sp->msix_info[i].addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/net/s2io.c:6171:
+				err = request_irq(sp->entries[i].vector,
+					  s2io_msix_ring_handle, 0, sp->desc[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: drivers/net/s2io.c:6174:
+				DBG_PRINT(ERR_DBG, "%s @ 0x%llx\n", sp->desc[i],
+				(unsigned long long)sp->msix_info[i].addr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#522: FILE: drivers/net/s2io.c:6177:
+				DBG_PRINT(ERR_DBG,"%s:MSI-X-%d registration "
 				                 ^

WARNING:SPLIT_STRING: quoted string split across lines
#523: FILE: drivers/net/s2io.c:6178:
+				DBG_PRINT(ERR_DBG,"%s:MSI-X-%d registration "
+					  "failed\n", dev->name, i);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#531: FILE: drivers/net/s2io.c:6186:
+		err = request_irq((int) sp->pdev->irq, s2io_isr, IRQF_SHARED,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/net/s2io.c:6187:
+		err = request_irq((int) sp->pdev->irq, s2io_isr, IRQF_SHARED,
+				sp->name, dev);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#541: FILE: drivers/net/s2io.c:6196:
+}
+static void s2io_rem_isr(nic_t * sp)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#541: FILE: drivers/net/s2io.c:6196:
+static void s2io_rem_isr(nic_t * sp)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#550: FILE: drivers/net/s2io.c:6205:
+		for (i=1; (sp->s2io_entries[i].in_use ==
 		      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#580: FILE: drivers/net/s2io.c:6238:
+static void s2io_card_down(nic_t * sp)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sp->link_state
#589: FILE: drivers/net/s2io.c:6247:
+	while (test_and_set_bit(0, &(sp->link_state))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#589: FILE: drivers/net/s2io.c:6247:
+	while (test_and_set_bit(0, &(sp->link_state))) {
+		msleep(50);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#656: FILE: drivers/net/s2io.c:6367:
+	tasklet_init(&sp->task, s2io_tasklet, (unsigned long) dev);

CHECK:BRACES: braces {} should be used on all arms of this statement
#659: FILE: drivers/net/s2io.c:6370:
+	if (sp->intr_type != INTA)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#661: FILE: drivers/net/s2io.c:6372:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#668: FILE: drivers/net/s2io.c:6379:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#713: FILE: drivers/net/sk98lin/h/xmac_ii.h:1476:
+#define GM_TXCR_COL_THR_MSK	(7<<10)	/* Bit 12..10:	Collision Threshold */
                            	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#726: FILE: drivers/net/skge.h:1737:
+	GM_TXCR_COL_THR_MSK	= 7<<10, /* Bit 12..10:	Collision Threshold */
 	                   	   ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#759: FILE: drivers/net/sky2.c:246:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#767: FILE: drivers/net/sky2.c:259:
+		udelay(100);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#796: FILE: drivers/net/sky2.c:1941:
+	unsigned buf_write[2] = { 0, 0 };

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#897: FILE: drivers/net/sky2.h:1483:
+	GM_TXCR_COL_THR_MSK	= 7<<10, /* Bit 12..10:	Collision Threshold */
 	                   	   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000057674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 6 warnings, 23 checks, 790 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000057674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
