WARNING:TYPO_SPELLING: 'serveral' may be misspelled - perhaps 'several'?
#87: 
  - There could be serveral disks on the downstream end
                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#93: 
periods: a) sample periods with continous activitiy and b) sample
                                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#95: 
only cause the bandwidth estimate to increase; those with continous
                                                          ^^^^^^^^^

WARNING:TYPO_SPELLING: 'continously' may be misspelled - perhaps 'continuously'?
#107: 
bandwidth will tend to be continously improved.  This happens because
                          ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#121: 
example, an IDE disk may be capable of transfering a 4K block in 250
                                       ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#132: 
the data items being transfered are significantly smaller than the block
                     ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#249: 
  daniel@starship# cat /proc/bandwith
                             ^^^^^^^^

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#255: 
above.  Do not be surprised to see a strangely low bandwith estimate
                                                   ^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#345: FILE: fs/buffer.c:2530:
+static int flush_dirty_buffers (int update)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#351: FILE: fs/buffer.c:2533:
+	unsigned sectors_to_flush = bdf_prm.b_un.ndirty << 3;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#352: FILE: fs/buffer.c:2534:
+	unsigned youngest_to_flush = jiffies - bdf_prm.b_un.age_buffer;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#353: FILE: fs/buffer.c:2535:
+	unsigned queued_goal = (bandwidth_sectors * 3) / 2;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: fs/buffer.c:2537:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#374: FILE: fs/buffer.c:2554:
+			if (time_before (youngest_to_flush, bh->b_dirtytime))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#375: FILE: fs/buffer.c:2555:
+				if (atomic_read (&queued_sectors) >= queued_goal)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&queued_sectors'
#375: FILE: fs/buffer.c:2555:
+				if (atomic_read (&queued_sectors) >= queued_goal)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Unbalanced braces around else statement
#377: FILE: fs/buffer.c:2557:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#397: FILE: fs/buffer.c:2576:
+		printk("updated %i at %lu, %u queued\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: fs/buffer.c:2577:
+		printk("updated %i at %lu, %u queued\n",
+			submitted, jiffies, atomic_read (&queued_sectors));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#398: FILE: fs/buffer.c:2577:
+			submitted, jiffies, atomic_read (&queued_sectors));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#409: FILE: fs/buffer.c:2727:
+	int submitted0 = atomic_read (&submitted_sectors);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#421: FILE: fs/buffer.c:2744:
+		unsigned sync_interval = bdf_prm.b_un.interval;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#422: FILE: fs/buffer.c:2745:
+		unsigned poll_interval = HZ/10;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#422: FILE: fs/buffer.c:2745:
+		unsigned poll_interval = HZ/10;
 		                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: fs/buffer.c:2746:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#440: FILE: fs/buffer.c:2769:
+			int submitted1 = atomic_read (&submitted_sectors);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: fs/buffer.c:2770:
+^I^I^Iif ((countdown -= poll_interval) < 0 || $

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: fs/buffer.c:2770:
+			int submitted1 = atomic_read (&submitted_sectors);
+			if ((countdown -= poll_interval) < 0 || 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#441: FILE: fs/buffer.c:2770:
+			if ((countdown -= poll_interval) < 0 || 
+				(submitted1 == submitted0 &&
+					atomic_read(&queued_sectors) < bandwidth_sectors))
+			{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#441: FILE: fs/buffer.c:2770:
+			if ((countdown -= poll_interval) < 0 || 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: fs/buffer.c:2771:
+			if ((countdown -= poll_interval) < 0 || 
+				(submitted1 == submitted0 &&

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#474: FILE: fs/buffer.c:2727:
+	unsigned bandwidth_sample = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#476: FILE: fs/buffer.c:2729:
+	int completed0 = atomic_read (&completed_sectors);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#484: FILE: fs/buffer.c:2772:
+			int completed1 = atomic_read (&completed_sectors);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: fs/buffer.c:2779:
+^I^I^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#493: FILE: fs/buffer.c:2781:
+			bandwidth_sectors = (bandwidth_sectors*3 + bandwidth_sample)/4;
 			                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#493: FILE: fs/buffer.c:2781:
+			bandwidth_sectors = (bandwidth_sectors*3 + bandwidth_sample)/4;
 			                                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: fs/buffer.c:2782:
+^I^I^I^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#503: FILE: fs/buffer.c:2792:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#504: FILE: fs/buffer.c:2793:
+			printk("rate = %i, sample = %i, completed = %i, queued = %i, emptied = %i\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: fs/buffer.c:2794:
+			printk("rate = %i, sample = %i, completed = %i, queued = %i, emptied = %i\n",
+				bandwidth_sectors,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: fs/buffer.c:2796:
+^I^I^I^Icompleted, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#508: FILE: fs/buffer.c:2797:
+				atomic_read (&queued_sectors),

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#539: FILE: include/linux/blkdev.h:219:
+			printk("block: queued_sectors < 0\n");	\

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#557: FILE: fs/buffer.c:2529:
+int transfers_sectors = 0; /* Filtered actual transfer rate */

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#565: FILE: fs/buffer.c:2783:
+			transfers_sectors = (transfers_sectors + completed)/2;
 			                                                   ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: fs/proc/proc_misc.c:104:
+static int bandwidth_read_proc(char *page, char **start, off_t off,
+				 int count, int *eof, void *data)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#578: FILE: fs/proc/proc_misc.c:106:
+	extern int bandwidth_sectors;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#579: FILE: fs/proc/proc_misc.c:107:
+	extern int transfers_sectors;

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: fs/proc/proc_misc.c:108:
+	extern int transfers_sectors;
+	return proc_calc_metrics(page, start, off, count, eof,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#581: FILE: fs/proc/proc_misc.c:109:
+		sprintf(page,"%i %i\n",
 		            ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000526114.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 43 warnings, 10 checks, 287 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000526114.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
