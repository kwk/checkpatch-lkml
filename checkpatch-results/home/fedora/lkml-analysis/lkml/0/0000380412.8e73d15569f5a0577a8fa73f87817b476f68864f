ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: fs/proc/array.c:177:
+		for (g = 0; g < min(p->group_info->ngroups,NGROUPS_SMALL); g++)
 		                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: fs/proc/array.c:179:
+			    GRP_AT(p->group_info,g));
 			                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#162: FILE: include/linux/sched.h:326:
+};
+struct group_info *groups_alloc(int gidsetsize);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'index' - possible side-effects?
#166: FILE: include/linux/sched.h:330:
+#define GRP_AT(info, index) \
+	((info)->blocks[(index)/NGROUPS_BLOCK][(index)%NGROUPS_BLOCK])

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#167: FILE: include/linux/sched.h:331:
+	((info)->blocks[(index)/NGROUPS_BLOCK][(index)%NGROUPS_BLOCK])
 	                       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#167: FILE: include/linux/sched.h:331:
+	((info)->blocks[(index)/NGROUPS_BLOCK][(index)%NGROUPS_BLOCK])
 	                                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#169: FILE: include/linux/sched.h:333:
+
+

WARNING:SPACING: Unnecessary space before function pointer arguments
#203: FILE: include/linux/security.h:1069:
+	int (*task_setgroups) (struct group_info *group_info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#212: FILE: include/linux/security.h:1590:
+static inline int security_task_setgroups (struct group_info *group_info)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#215: FILE: include/linux/security.h:1592:
+	return security_ops->task_setgroups (group_info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#224: FILE: include/linux/security.h:2185:
+static inline int security_task_setgroups (struct group_info *group_info)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#297: FILE: kernel/sys.c:1066:
+	nblocks = (gidsetsize/NGROUPS_BLOCK) + (gidsetsize%NGROUPS_BLOCK?1:0);
 	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#297: FILE: kernel/sys.c:1066:
+	nblocks = (gidsetsize/NGROUPS_BLOCK) + (gidsetsize%NGROUPS_BLOCK?1:0);
 	                                                  ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#297: FILE: kernel/sys.c:1066:
+	nblocks = (gidsetsize/NGROUPS_BLOCK) + (gidsetsize%NGROUPS_BLOCK?1:0);
 	                                                                ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#297: FILE: kernel/sys.c:1066:
+	nblocks = (gidsetsize/NGROUPS_BLOCK) + (gidsetsize%NGROUPS_BLOCK?1:0);
 	                                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#298: FILE: kernel/sys.c:1067:
+	info = kmalloc(sizeof(*info) + nblocks*sizeof(gid_t *), GFP_USER);
 	                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#309: FILE: kernel/sys.c:1078:
+		int i;
+		for (i = 0; i < nblocks; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#311: FILE: kernel/sys.c:1080:
+			gid_t *b;
+			b = (void *)__get_free_page(GFP_USER);

WARNING:LINE_SPACING: Missing a blank line after declarations
#314: FILE: kernel/sys.c:1083:
+				int j;
+				for (j = 0; j < i; j++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#329: FILE: kernel/sys.c:1098:
+		int i;
+		for (i = 0; i < info->nblocks; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#346: FILE: kernel/sys.c:1115:
+		if (copy_to_user(grouplist+off, info->blocks[i], len))
 		                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#365: FILE: kernel/sys.c:1134:
+		if (copy_from_user(info->blocks[i], grouplist+off, len))
 		                                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#388: FILE: kernel/sys.c:1157:
+			gid_t tmp = GRP_AT(info, base + stride);
+			while (left >= 0 && tmp < GRP_AT(info, left)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#389: FILE: kernel/sys.c:1158:
+				GRP_AT(info, left) = GRP_AT(info, left+stride);
 				                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#409: FILE: kernel/sys.c:1178:
+		int mid = (left+right)/2;
 		               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#409: FILE: kernel/sys.c:1178:
+		int mid = (left+right)/2;
 		                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#411: FILE: kernel/sys.c:1180:
+		int cmp = grp - GRP_AT(info, mid);
+		if (cmp > 0)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#542: FILE: kernel/uid16.c:118:
+	groups = kmalloc(NGROUPS_BLOCK * sizeof(*groups), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: kernel/uid16.c:121:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#553: FILE: kernel/uid16.c:129:
+			groups[j] = (old_gid_t)GRP_AT(info, i*NGROUPS_BLOCK+j);
 			                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#553: FILE: kernel/uid16.c:129:
+			groups[j] = (old_gid_t)GRP_AT(info, i*NGROUPS_BLOCK+j);
 			                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#554: FILE: kernel/uid16.c:130:
+		if (copy_to_user(grouplist+off, groups, len)) {
 		                          ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#574: FILE: kernel/uid16.c:150:
+	groups = kmalloc(NGROUPS_BLOCK * sizeof(*groups), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#584: FILE: kernel/uid16.c:160:
+		if (copy_from_user(groups, grouplist+off, len)) {
 		                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#589: FILE: kernel/uid16.c:165:
+			GRP_AT(info, i*NGROUPS_BLOCK+j) = (gid_t)groups[j];
 			              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#589: FILE: kernel/uid16.c:165:
+			GRP_AT(info, i*NGROUPS_BLOCK+j) = (gid_t)groups[j];
 			                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#745: FILE: security/dummy.c:457:
+static int dummy_task_setgroups (struct group_info *group_info)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380412.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 13 warnings, 21 checks, 623 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380412.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
