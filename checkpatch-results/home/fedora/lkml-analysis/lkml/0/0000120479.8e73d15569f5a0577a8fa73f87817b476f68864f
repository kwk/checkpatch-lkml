WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: include/linux/mutex.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#73: FILE: include/linux/mutex.h:16:
+#include <asm/atomic.h>

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#105: FILE: include/linux/mutex.h:48:
+	spinlock_t		wait_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: include/linux/mutex.h:54:
+^Iconst char ^I^I*name;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#124: FILE: include/linux/mutex.h:67:
+	struct mutex		*lock;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lockname' - possible side-effects?
#141: FILE: include/linux/mutex.h:84:
+#define __MUTEX_INITIALIZER(lockname) \
+		{ .count = ATOMIC_INIT(1) \
+		, .wait_lock = SPIN_LOCK_UNLOCKED \
+		, .wait_list = LIST_HEAD_INIT(lockname.wait_list) \
+		__DEBUG_MUTEX_INITIALIZER(lockname) }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mutexname' - possible side-effects?
#147: FILE: include/linux/mutex.h:90:
+#define DEFINE_MUTEX(mutexname) \
+	struct mutex mutexname = __MUTEX_INITIALIZER(mutexname)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/linux/mutex.h:93:
+extern void FASTCALL(__mutex_init(struct mutex *lock, const char *name));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#163: FILE: include/linux/mutex.h:106:
+extern void FASTCALL(mutex_lock(struct mutex *lock));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: include/linux/mutex.h:107:
+extern int FASTCALL(mutex_lock_interruptible(struct mutex *lock));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/linux/mutex.h:108:
+extern int FASTCALL(mutex_trylock(struct mutex *lock));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: include/linux/mutex.h:109:
+extern void FASTCALL(mutex_unlock(struct mutex *lock));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#187: FILE: kernel/mutex.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#188: FILE: kernel/mutex.c:2:
+ * kernel/mutex.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#252: FILE: kernel/mutex.c:66:
+		/* didnt get the lock, go to sleep: */
 		   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: kernel/mutex.c:82:
+		if (unlikely(state == TASK_INTERRUPTIBLE &&
+						signal_pending(ti->task))) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#454: FILE: kernel/mutex.c:268:
+EXPORT_SYMBOL(mutex_lock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#472: FILE: kernel/mutex.c:286:
+EXPORT_SYMBOL(mutex_unlock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#494: FILE: kernel/mutex.c:308:
+EXPORT_SYMBOL(mutex_trylock);

WARNING:TYPO_SPELLING: 'interruptable' may be misspelled - perhaps 'interruptible'?
#497: FILE: kernel/mutex.c:311:
+ * mutex_lock_interruptible - acquire the mutex, interruptable
                                                  ^^^^^^^^^^^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#513: FILE: kernel/mutex.c:327:
+EXPORT_SYMBOL(mutex_lock_interruptible);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#538: FILE: kernel/mutex.h:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'waiter' - possible side-effects?
#551: FILE: kernel/mutex.h:14:
+#define mutex_remove_waiter(lock, waiter, ti) \
+		__list_del((waiter)->list.prev, (waiter)->list.next)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120479.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 11 checks, 500 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120479.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
