WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: include/asm-generic/percpu.h:22:
+    __attribute__((__section__(".data.percpu_offset"))) unsigned long *per_cpu_offset__##name; \$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu_offset") over __attribute__((__section__(".data.percpu_offset")))
#53: FILE: include/asm-generic/percpu.h:22:
+    __attribute__((__section__(".data.percpu_offset"))) unsigned long *per_cpu_offset__##name; \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: include/asm-generic/percpu.h:23:
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#54: FILE: include/asm-generic/percpu.h:23:
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#57: FILE: include/asm-generic/percpu.h:26:
+    static __attribute__((__section__(".data.percpu_offset"))) unsigned long *per_cpu_offset__##name; \

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: include/asm-generic/percpu.h:26:
+    static __attribute__((__section__(".data.percpu_offset"))) unsigned long *per_cpu_offset__##name; \$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu_offset") over __attribute__((__section__(".data.percpu_offset")))
#57: FILE: include/asm-generic/percpu.h:26:
+    static __attribute__((__section__(".data.percpu_offset"))) unsigned long *per_cpu_offset__##name; \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: include/asm-generic/percpu.h:27:
+    static __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#58: FILE: include/asm-generic/percpu.h:27:
+    static __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#62: FILE: include/asm-generic/percpu.h:31:
+	(*RELOC_HIDE(&per_cpu__##var, (*((unsigned long**)&per_cpu_offset__##var))[cpu]))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#70: FILE: include/asm-generic/percpu.h:39:
+#define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(per_cpu__##var); \

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#70: FILE: include/asm-generic/percpu.h:39:
+#define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(per_cpu__##var); \
+	EXPORT_SYMBOL(per_cpu_offset__##var)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#72: FILE: include/asm-generic/percpu.h:41:
+#define EXPORT_PER_CPU_SYMBOL_GPL(var) EXPORT_SYMBOL_GPL(per_cpu__##var); \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#72: FILE: include/asm-generic/percpu.h:41:
+#define EXPORT_PER_CPU_SYMBOL_GPL(var) EXPORT_SYMBOL_GPL(per_cpu__##var); \
+	EXPORT_SYMBOL_GPL(per_cpu_offset__##var)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#88: FILE: include/asm-generic/percpu.h:57:
+#define DEFINE_STATIC_PER_CPU(type, name) \
+    static __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: include/asm-generic/percpu.h:58:
+    static __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#89: FILE: include/asm-generic/percpu.h:58:
+    static __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#103: FILE: include/asm-generic/percpu.h:64:
+#define DECLARE_PER_CPU(type, name) extern __typeof__(type) per_cpu__##name

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#105: FILE: include/asm-generic/percpu.h:66:
+#define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(per_cpu__##var)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#106: FILE: include/asm-generic/percpu.h:67:
+#define EXPORT_PER_CPU_SYMBOL_GPL(var) EXPORT_SYMBOL_GPL(per_cpu__##var)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#115: FILE: include/asm-generic/percpu.h:76:
+#define DEFINE_STATIC_PER_CPU(type, name) \
+    static __typeof__(type) per_cpu__##name

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: include/asm-generic/percpu.h:77:
+    static __typeof__(type) per_cpu__##name$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085346.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 16 warnings, 0 checks, 95 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085346.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
