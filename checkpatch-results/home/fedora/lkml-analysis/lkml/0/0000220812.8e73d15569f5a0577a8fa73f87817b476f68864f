WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> > > Usually, it resumes sucessfully for me, but sometimes it fails, like this 

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#31: 
> > > Usually, it resumes sucessfully for me, but sometimes it fails, like this 
                          ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#155: FILE: kernel/power/swsusp.c:222:
+#define ONE_PAGE_PBE_NUM   (PAGE_SIZE/sizeof(struct pbe))
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#156: FILE: kernel/power/swsusp.c:223:
+#define PBE_IS_PAGE_END(x)  \
+	( PAGE_SIZE - sizeof(struct pbe) == ((x) - ((~(PAGE_SIZE - 1)) & (x))) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#157: FILE: kernel/power/swsusp.c:224:
+	( PAGE_SIZE - sizeof(struct pbe) == ((x) - ((~(PAGE_SIZE - 1)) & (x))) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#157: FILE: kernel/power/swsusp.c:224:
+	( PAGE_SIZE - sizeof(struct pbe) == ((x) - ((~(PAGE_SIZE - 1)) & (x))) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#159: FILE: kernel/power/swsusp.c:226:
+#define pgdir_for_each(pos, n, head) \
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \
+		pos != NULL; \
+		pos = n, n = pos ? (suspend_pagedir_t *)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#159: FILE: kernel/power/swsusp.c:226:
+#define pgdir_for_each(pos, n, head) \
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \
+		pos != NULL; \
+		pos = n, n = pos ? (suspend_pagedir_t *)pos->dummy.val : NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#160: FILE: kernel/power/swsusp.c:227:
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: kernel/power/swsusp.c:227:
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#161: FILE: kernel/power/swsusp.c:228:
+		pos != NULL; \

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#164: FILE: kernel/power/swsusp.c:231:
+#define pbe_for_each(pos, n, index, max, head) \
+	for(pos = head, index = 0, \
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#164: FILE: kernel/power/swsusp.c:231:
+#define pbe_for_each(pos, n, index, max, head) \
+	for(pos = head, index = 0, \
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'index' - possible side-effects?
#164: FILE: kernel/power/swsusp.c:231:
+#define pbe_for_each(pos, n, index, max, head) \
+	for(pos = head, index = 0, \
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max' may be better as '(max)' to avoid precedence issues
#164: FILE: kernel/power/swsusp.c:231:
+#define pbe_for_each(pos, n, index, max, head) \
+	for(pos = head, index = 0, \
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

ERROR:SPACING: space required before the open parenthesis '('
#165: FILE: kernel/power/swsusp.c:232:
+	for(pos = head, index = 0, \

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#167: FILE: kernel/power/swsusp.c:234:
+		(pos != NULL) && (index < max); \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#171: FILE: kernel/power/swsusp.c:238:
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: kernel/power/swsusp.c:240:
+ *  find_pbe_by_index - $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: kernel/power/swsusp.c:251:
+^Ipr_debug("find_pbe_by_index: %p, 0x%03x", pgdir, index); $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'find_pbe_by_index', this function's name, in a string
#184: FILE: kernel/power/swsusp.c:251:
+	pr_debug("find_pbe_by_index: %p, 0x%03x", pgdir, index); 

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: kernel/power/swsusp.c:254:
+^I^I^Ipbe = (struct pbe *)((unsigned long)pbe + $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: kernel/power/swsusp.c:257:
+			pr_debug(" %p, o{%p} c{%p}\n",
+					pbe, (void*)pbe->orig_address, (void*)pbe->address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#190: FILE: kernel/power/swsusp.c:257:
+					pbe, (void*)pbe->orig_address, (void*)pbe->address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#190: FILE: kernel/power/swsusp.c:257:
+					pbe, (void*)pbe->orig_address, (void*)pbe->address);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#193: FILE: kernel/power/swsusp.c:260:
+		p ++;
 		  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: kernel/power/swsusp.c:266:
+ *  pagedir_free - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: kernel/power/swsusp.c:267:
+ *  @head: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: kernel/power/swsusp.c:273:
+^Ipgdir_for_each(cur, next, head) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: kernel/power/swsusp.c:273:
+	suspend_pagedir_t *next, *cur;
+	pgdir_for_each(cur, next, head) 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#233: FILE: kernel/power/swsusp.c:336:
+static void inline mod_printk_progress(int i)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#235: FILE: kernel/power/swsusp.c:338:
+	if (mod_progress == 0) mod_progress = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#236: FILE: kernel/power/swsusp.c:339:
+	if (!(i%100))
 	       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#237: FILE: kernel/power/swsusp.c:340:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited after that open parenthesis '('
#237: FILE: kernel/power/swsusp.c:340:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#237: FILE: kernel/power/swsusp.c:340:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_one_pbe', this function's name, in a string
#253: FILE: kernel/power/swsusp.c:356:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %d ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: kernel/power/swsusp.c:357:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %d ",
+			p, (void *)p->orig_address, (void *)p->address, cur);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#256: FILE: kernel/power/swsusp.c:359:
+	if (error) return error;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: kernel/power/swsusp.c:365:
+static int bio_read_page(pgoff_t page_off, void * page);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pbe', this function's name, in a string
#277: FILE: kernel/power/swsusp.c:380:
+	pr_debug("read_one_pbe: %p, o{%p} c{%p} %lu\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: kernel/power/swsusp.c:381:
+^I^I^Ip, (void *)p->orig_address, data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: kernel/power/swsusp.c:381:
+	pr_debug("read_one_pbe: %p, o{%p} c{%p} %lu\n",
+			p, (void *)p->orig_address, data, 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#282: FILE: kernel/power/swsusp.c:385:
+	if (error) return error;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#308: FILE: kernel/power/swsusp.c:407:
+		BUG_ON(pos->orig_address == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#309: FILE: kernel/power/swsusp.c:408:
+		error = write_one_pbe(pos, (void*)pos->address, i);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#310: FILE: kernel/power/swsusp.c:409:
+		if (error) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#328: FILE: kernel/power/swsusp.c:485:
+		if (error) break;

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#329: FILE: kernel/power/swsusp.c:486:
+		n ++;
 		  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#343: FILE: kernel/power/swsusp.c:674:
+	struct pbe * pbe = NULL;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#352: FILE: kernel/power/swsusp.c:685:
+				BUG_ON(pbe == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pbe"
#352: FILE: kernel/power/swsusp.c:685:
+				BUG_ON(pbe == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#355: FILE: kernel/power/swsusp.c:688:
+				BUG_ON(pbe->orig_address == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#356: FILE: kernel/power/swsusp.c:689:
+				BUG_ON(pbe->address == 0);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#367: FILE: kernel/power/swsusp.c:700:
+#define pointer2num(x)  ((x - PAGE_OFFSET) >> 12)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#368: FILE: kernel/power/swsusp.c:701:
+#define num2pointer(x)  ((x << 12) + PAGE_OFFSET)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: kernel/power/swsusp.c:702:
+static inline void collide_set_bit(unsigned char *bitmap, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: kernel/power/swsusp.c:703:
+static inline void collide_set_bit(unsigned char *bitmap, 
+		unsigned long bitnum)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: kernel/power/swsusp.c:705:
+^Ibitnum = pointer2num(bitnum); $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#373: FILE: kernel/power/swsusp.c:706:
+	bitmap[bitnum / 8] |= (1 << (bitnum%8));
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: kernel/power/swsusp.c:708:
+static inline int collide_is_bit_set(unsigned char *bitmap, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#375: FILE: kernel/power/swsusp.c:708:
+}
+static inline int collide_is_bit_set(unsigned char *bitmap, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: kernel/power/swsusp.c:709:
+static inline int collide_is_bit_set(unsigned char *bitmap, 
+		unsigned long bitnum)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: kernel/power/swsusp.c:710:
+{               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: kernel/power/swsusp.c:711:
+^Ibitnum = pointer2num(bitnum); $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#379: FILE: kernel/power/swsusp.c:712:
+	return !!(bitmap[bitnum / 8] & (1 << (bitnum%8)));
 	                                            ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#381: FILE: kernel/power/swsusp.c:714:
+}
+static void collide_bitmap_free(unsigned char *bitmap)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: kernel/power/swsusp.c:724:
+^Iunsigned char *bitmap = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: kernel/power/swsusp.c:725:
+^I^I(unsigned char *)__get_free_pages(GFP_ATOMIC | __GFP_COLD, $

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#393: FILE: kernel/power/swsusp.c:726:
+										  COLLIDE_BITMAP_ORDER);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BRACES: braces {} are not necessary for single statement blocks
#396: FILE: kernel/power/swsusp.c:729:
+	if (bitmap == NULL) {
+		return NULL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bitmap"
#396: FILE: kernel/power/swsusp.c:729:
+	if (bitmap == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#402: FILE: kernel/power/swsusp.c:735:
+	BUG_ON(collide_is_bit_set(bitmap, (unsigned long)bitmap) == 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#404: FILE: kernel/power/swsusp.c:737:
+	BUG_ON(collide_is_bit_set(bitmap, (unsigned long)bitmap) == 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#405: FILE: kernel/power/swsusp.c:738:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#407: FILE: kernel/power/swsusp.c:740:
+		unsigned long nums;
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#407: FILE: kernel/power/swsusp.c:740:
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#411: FILE: kernel/power/swsusp.c:744:
+			pgdir ++;
 			      ^

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#418: FILE: kernel/power/swsusp.c:751:
+static void **eaten_memory = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#427: FILE: kernel/power/swsusp.c:760:
+			eaten_memory = (void**)addr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#431: FILE: kernel/power/swsusp.c:764:
+		addr = (void*)__get_free_pages(GFP_ATOMIC | __GFP_COLD, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: kernel/power/swsusp.c:765:
+^I^Iif (!addr) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: kernel/power/swsusp.c:773:
+ *  alloc_one_pagedir - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: kernel/power/swsusp.c:778:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#467: FILE: kernel/power/swsusp.c:778:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: kernel/power/swsusp.c:779:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 
+		unsigned char *collide)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: kernel/power/swsusp.c:786:
+^I/*pr_debug("pgdir: %p, %p, %d\n", $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#480: FILE: kernel/power/swsusp.c:787:
+	/*pr_debug("pgdir: %p, %p, %d\n", 
+	  pgdir, prev, sizeof(suspend_pagedir_t)); */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#480: FILE: kernel/power/swsusp.c:787:
+	  pgdir, prev, sizeof(suspend_pagedir_t)); */

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#486: FILE: kernel/power/swsusp.c:793:
+			prev[i].dummy.val= (unsigned long)pgdir;
 			                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: kernel/power/swsusp.c:825:
+static int alloc_pagedir(struct pbe **pbe, int pbe_nums,
+		unsigned char *collide, int page_nums)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_pagedir', this function's name, in a string
#543: FILE: kernel/power/swsusp.c:835:
+	pr_debug("alloc_pagedir: %d, %d\n", pbe_nums, after_alloc);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#570: FILE: kernel/power/swsusp.c:862:
+	struct pbe * p, * n;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#570: FILE: kernel/power/swsusp.c:862:
+	struct pbe * p, * n;
 	                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#584: FILE: kernel/power/swsusp.c:881:
+	struct pbe * p, * n;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#584: FILE: kernel/power/swsusp.c:881:
+	struct pbe * p, * n;
 	                ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#753: FILE: kernel/power/swsusp.c:1230:
+	static int eaten_i = 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#755: FILE: kernel/power/swsusp.c:1232:
+	printk("\b%c", eaten_progess[eaten_i]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#756: FILE: kernel/power/swsusp.c:1233:
+	eaten_i ++;
 	        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#757: FILE: kernel/power/swsusp.c:1234:
+	if (eaten_i > 3) eaten_i = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: kernel/power/swsusp.c:1241:
+^Ipr_debug("check_one_pbe: %p %lu o{%p} ", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_one_pbe', this function's name, in a string
#764: FILE: kernel/power/swsusp.c:1241:
+	pr_debug("check_one_pbe: %p %lu o{%p} ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#765: FILE: kernel/power/swsusp.c:1242:
+	pr_debug("check_one_pbe: %p %lu o{%p} ", 
+			p, p->swap_address.val, (void*)p->orig_address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#765: FILE: kernel/power/swsusp.c:1242:
+			p, p->swap_address.val, (void*)p->orig_address);

ERROR:SPACING: space required before the open parenthesis '('
#767: FILE: kernel/power/swsusp.c:1244:
+	if(!addr)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#769: FILE: kernel/power/swsusp.c:1246:
+	pr_debug("c{%p} done\n", (void*)addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: kernel/power/swsusp.c:1252:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#776: FILE: kernel/power/swsusp.c:1253:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, 
+		suspend_pagedir_t *s_pgdir)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s_pgdir"
#780: FILE: kernel/power/swsusp.c:1257:
+	while (s_pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#783: FILE: kernel/power/swsusp.c:1260:
+		suspend_pagedir_t *d_next = (suspend_pagedir_t *)d_pgdir->dummy.val;
+		for (i = 0; i < ONE_PAGE_PBE_NUM; i++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#787: FILE: kernel/power/swsusp.c:1264:
+			s_pgdir ++; d_pgdir ++;
 			        ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#787: FILE: kernel/power/swsusp.c:1264:
+			s_pgdir ++; d_pgdir ++;
 			                    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#793: FILE: kernel/power/swsusp.c:1270:
+}
+/**

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#805: FILE: kernel/power/swsusp.c:1282:
+	BUG_ON(bitmap == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bitmap"
#805: FILE: kernel/power/swsusp.c:1282:
+	BUG_ON(bitmap == NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#807: FILE: kernel/power/swsusp.c:1284:
+	printk("Relocating pagedir ... ");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: kernel/power/swsusp.c:1285:
+^Ierror = alloc_pagedir(&addr, nr_copy_pages, bitmap, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: kernel/power/swsusp.c:1286:
+	error = alloc_pagedir(&addr, nr_copy_pages, bitmap, 
+			swsusp_info.pagedir_pages);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#810: FILE: kernel/power/swsusp.c:1287:
+	if (error < 0) {
+		return error;
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#819: FILE: kernel/power/swsusp.c:1296:
+		BUG_ON(error);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#832: FILE: kernel/power/swsusp.c:1309:
+	printk("     done\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#847: FILE: kernel/power/swsusp.c:1325:
+	struct pbe * p, * n;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#847: FILE: kernel/power/swsusp.c:1325:
+	struct pbe * p, * n;
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#854: FILE: kernel/power/swsusp.c:1329:
+	if ((error = check_pagedir())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#854: FILE: kernel/power/swsusp.c:1329:
+	if ((error = check_pagedir())) {
+		return -ENOMEM;
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#869: FILE: kernel/power/swsusp.c:1337:
+		error = read_one_pbe(p, (void*)p->address, i);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#870: FILE: kernel/power/swsusp.c:1338:
+		if (error) break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: kernel/power/swsusp.c:1353:
+^Ipr_debug("read_one_pagedir: %p, %d, %lu, %p\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pagedir', this function's name, in a string
#886: FILE: kernel/power/swsusp.c:1353:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#887: FILE: kernel/power/swsusp.c:1354:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 
+			pgdir, i, offset, (void*)next);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#887: FILE: kernel/power/swsusp.c:1354:
+			pgdir, i, offset, (void*)next);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#888: FILE: kernel/power/swsusp.c:1355:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#888: FILE: kernel/power/swsusp.c:1355:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {
+		return error;
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#915: FILE: kernel/power/swsusp.c:1376:
+	printk("pmdisk: Reading pagedir (%d Pages)\n",n);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#915: FILE: kernel/power/swsusp.c:1376:
+	printk("pmdisk: Reading pagedir (%d Pages)\n",n);
 	                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#925: FILE: kernel/power/swsusp.c:1380:
+		if (error) break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#928: FILE: kernel/power/swsusp.c:1383:
+	BUG_ON(i != n);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: kernel/power/swsusp.c:1434:
+ *  for_each_pbe_copy_back - $

WARNING:TYPO_SPELLING: 'usefuly' may be misspelled - perhaps 'usefully'?
#952: FILE: kernel/power/swsusp.c:1436:
+ *  That usefuly for help us writing the code in assemble code
          ^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#957: FILE: kernel/power/swsusp.c:1441:
+#if 0 /* if your copy back code is running in real mode, enable it */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: kernel/power/swsusp.c:1442:
+#define GET_ADDRESS(x) __pa(x) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#962: FILE: kernel/power/swsusp.c:1446:
+asmlinkage void for_each_pbe_copy_back(void)
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#967: FILE: kernel/power/swsusp.c:1451:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#969: FILE: kernel/power/swsusp.c:1453:
+		unsigned long nums, i;
+		pgdir = (struct pbe *)GET_ADDRESS(pgdir);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#970: FILE: kernel/power/swsusp.c:1454:
+		next = (struct pbe*)pgdir->dummy.val;

WARNING:LINE_SPACING: Missing a blank line after declarations
#973: FILE: kernel/power/swsusp.c:1457:
+			register unsigned long *orig, *copy;
+			orig = (unsigned long *)pgdir->orig_address;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#974: FILE: kernel/power/swsusp.c:1458:
+			if (orig == 0) goto end;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#977: FILE: kernel/power/swsusp.c:1461:
+#if 0

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#980: FILE: kernel/power/swsusp.c:1464:
+			for (i = 0; i < PAGE_SIZE / sizeof(unsigned long); i+=4) {
 			                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#982: FILE: kernel/power/swsusp.c:1466:
+				*(orig + i+1) = *(copy + i+1);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#982: FILE: kernel/power/swsusp.c:1466:
+				*(orig + i+1) = *(copy + i+1);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#983: FILE: kernel/power/swsusp.c:1467:
+				*(orig + i+2) = *(copy + i+2);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#983: FILE: kernel/power/swsusp.c:1467:
+				*(orig + i+2) = *(copy + i+2);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#984: FILE: kernel/power/swsusp.c:1468:
+				*(orig + i+3) = *(copy + i+3);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#984: FILE: kernel/power/swsusp.c:1468:
+				*(orig + i+3) = *(copy + i+3);
 				                          ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#987: FILE: kernel/power/swsusp.c:1471:
+			pgdir ++;
 			      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000220812.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 78 errors, 37 warnings, 41 checks, 893 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000220812.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
