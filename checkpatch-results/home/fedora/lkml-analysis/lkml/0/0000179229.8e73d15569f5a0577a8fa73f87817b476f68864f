WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'b1a45695bde0204597957e448923f09ce271ca80', maybe rebased or not pulled?
#48: 
commit b1a45695bde0204597957e448923f09ce271ca80

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#56: 
    Signed-off-by: Steve French (sfrench@us.ibm.com)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Steve French (sfrench@us.ibm.com)'
#56: 
    Signed-off-by: Steve French (sfrench@us.ibm.com)

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#70: 
    Signed-off-by: Steve French (sfrench@us.ibm.com)

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Steve French (sfrench@us.ibm.com)'
#70: 
    Signed-off-by: Steve French (sfrench@us.ibm.com)

WARNING:BAD_SIGN_OFF: Duplicate signature
#70: 
    Signed-off-by: Steve French (sfrench@us.ibm.com)

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#81: 
    Signed-off-by: Steve French (sfrench@us.ibm.com)

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Steve French (sfrench@us.ibm.com)'
#81: 
    Signed-off-by: Steve French (sfrench@us.ibm.com)

WARNING:BAD_SIGN_OFF: Duplicate signature
#81: 
    Signed-off-by: Steve French (sfrench@us.ibm.com)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: fs/cifs/README:387:
+^I^Ibehavior which caches reads (readahead) and writes $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <cifs_convertUCSpath>
#123: FILE: fs/cifs/cifsproto.h:231:
+extern int cifs_convertUCSpath(char *target, const __le16 *source, int maxlen,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: fs/cifs/cifsproto.h:231:
+extern int cifs_convertUCSpath(char *target, const __le16 *source, int maxlen,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: fs/cifs/cifsproto.h:232:
+extern int cifs_convertUCSpath(char *target, const __le16 *source, int maxlen,
 			const struct nls_table * codepage);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: fs/cifs/cifssmb.c:570:
+^I^I    cifsConvertToUCS((__le16 *) pSMB->fileName, fileName, $

CHECK:SPACING: No space is necessary after a cast
#136: FILE: fs/cifs/cifssmb.c:570:
+		    cifsConvertToUCS((__le16 *) pSMB->fileName, fileName, 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <cifsConvertToUCS>
#136: FILE: fs/cifs/cifssmb.c:570:
+		    cifsConvertToUCS((__le16 *) pSMB->fileName, fileName, 

CHECK:CAMELCASE: Avoid CamelCase: <pSMB>
#136: FILE: fs/cifs/cifssmb.c:570:
+		    cifsConvertToUCS((__le16 *) pSMB->fileName, fileName, 

CHECK:CAMELCASE: Avoid CamelCase: <fileName>
#136: FILE: fs/cifs/cifssmb.c:570:
+		    cifsConvertToUCS((__le16 *) pSMB->fileName, fileName, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: fs/cifs/cifssmb.c:668:
+^I^Iname_len = cifsConvertToUCS((__le16 *) pSMB->DirName, name, $

CHECK:SPACING: No space is necessary after a cast
#145: FILE: fs/cifs/cifssmb.c:668:
+		name_len = cifsConvertToUCS((__le16 *) pSMB->DirName, name, 

CHECK:CAMELCASE: Avoid CamelCase: <DirName>
#145: FILE: fs/cifs/cifssmb.c:668:
+		name_len = cifsConvertToUCS((__le16 *) pSMB->DirName, name, 

CHECK:SPACING: No space is necessary after a cast
#154: FILE: fs/cifs/cifssmb.c:722:
+		    cifsConvertToUCS((__le16 *) (pSMB->fileName + 1),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: fs/cifs/cifssmb.c:1144:
+^I^I    cifsConvertToUCS((__le16 *) pSMB->OldFileName, fromName, $

CHECK:SPACING: No space is necessary after a cast
#163: FILE: fs/cifs/cifssmb.c:1144:
+		    cifsConvertToUCS((__le16 *) pSMB->OldFileName, fromName, 

CHECK:CAMELCASE: Avoid CamelCase: <OldFileName>
#163: FILE: fs/cifs/cifssmb.c:1144:
+		    cifsConvertToUCS((__le16 *) pSMB->OldFileName, fromName, 

CHECK:CAMELCASE: Avoid CamelCase: <fromName>
#163: FILE: fs/cifs/cifssmb.c:1144:
+		    cifsConvertToUCS((__le16 *) pSMB->OldFileName, fromName, 

CHECK:SPACING: No space is necessary after a cast
#172: FILE: fs/cifs/cifssmb.c:1152:
+		    cifsConvertToUCS((__le16 *) &pSMB->OldFileName[name_len + 2],

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: fs/cifs/cifssmb.c:1239:
+^I        len_of_str = cifsConvertToUCS((__le16 *)rename_info->target_name,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: fs/cifs/cifssmb.c:1240:
+	        len_of_str = cifsConvertToUCS((__le16 *)rename_info->target_name,
 					dummy_string, 24, nls_codepage, remap);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: fs/cifs/cifssmb.c:1243:
+		len_of_str = cifsConvertToUCS((__le16 *)rename_info->target_name,
 					target_name, PATH_MAX, nls_codepage, remap);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: fs/cifs/cifssmb.c:1299:
+^I^Iname_len = cifsConvertToUCS((__le16 *) pSMB->OldFileName, $

CHECK:SPACING: No space is necessary after a cast
#194: FILE: fs/cifs/cifssmb.c:1299:
+		name_len = cifsConvertToUCS((__le16 *) pSMB->OldFileName, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: fs/cifs/cifssmb.c:1307:
+^I^Iname_len2 = cifsConvertToUCS((__le16 *)&pSMB->OldFileName[name_len + 2], $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: fs/cifs/cifssmb.c:1308:
+		name_len2 = cifsConvertToUCS((__le16 *)&pSMB->OldFileName[name_len + 2], 
 				toName, PATH_MAX, nls_codepage, remap);

CHECK:SPACING: No space is necessary after a cast
#212: FILE: fs/cifs/cifssmb.c:1456:
+		name_len = cifsConvertToUCS((__le16 *) pSMB->FileName, toName,

CHECK:CAMELCASE: Avoid CamelCase: <FileName>
#212: FILE: fs/cifs/cifssmb.c:1456:
+		name_len = cifsConvertToUCS((__le16 *) pSMB->FileName, toName,

CHECK:CAMELCASE: Avoid CamelCase: <toName>
#212: FILE: fs/cifs/cifssmb.c:1456:
+		name_len = cifsConvertToUCS((__le16 *) pSMB->FileName, toName,

CHECK:SPACING: No space is necessary after a cast
#221: FILE: fs/cifs/cifssmb.c:1479:
+		    cifsConvertToUCS((__le16 *) data_offset, fromName, PATH_MAX,

CHECK:SPACING: No space is necessary after a cast
#230: FILE: fs/cifs/cifssmb.c:1549:
+		    cifsConvertToUCS((__le16 *) pSMB->OldFileName, fromName,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: fs/cifs/cifssmb.c:1556:
+^I^I    cifsConvertToUCS((__le16 *)&pSMB->OldFileName[name_len + 2], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: fs/cifs/cifssmb.c:1942:
+^I^I^IcifsConvertToUCS((__le16 *) pSMB->FileName, searchName, $

CHECK:SPACING: No space is necessary after a cast
#247: FILE: fs/cifs/cifssmb.c:1942:
+			cifsConvertToUCS((__le16 *) pSMB->FileName, searchName, 

CHECK:CAMELCASE: Avoid CamelCase: <searchName>
#247: FILE: fs/cifs/cifssmb.c:1942:
+			cifsConvertToUCS((__le16 *) pSMB->FileName, searchName, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: fs/cifs/cifssmb.c:2027:
+^I^I^IcifsConvertToUCS((__le16 *) pSMB->FileName, fileName, $

CHECK:SPACING: No space is necessary after a cast
#256: FILE: fs/cifs/cifssmb.c:2027:
+			cifsConvertToUCS((__le16 *) pSMB->FileName, fileName, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: fs/cifs/cifssmb.c:2028:
+			cifsConvertToUCS((__le16 *) pSMB->FileName, fileName, 
 				      PATH_MAX, nls_codepage, remap);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: fs/cifs/cifssmb.c:2191:
+^I^I    cifsConvertToUCS((__le16 *) pSMB->FileName, searchName, $

CHECK:SPACING: No space is necessary after a cast
#265: FILE: fs/cifs/cifssmb.c:2191:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, searchName, 

CHECK:SPACING: No space is necessary after a cast
#274: FILE: fs/cifs/cifssmb.c:2272:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, searchName,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: fs/cifs/cifssmb.c:2273:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, searchName,
 				  PATH_MAX, nls_codepage, remap);

CHECK:SPACING: No space is necessary after a cast
#283: FILE: fs/cifs/cifssmb.c:2353:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, searchName, PATH_MAX

CHECK:SPACING: No space is necessary after a cast
#292: FILE: fs/cifs/cifssmb.c:2438:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName,searchName,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#292: FILE: fs/cifs/cifssmb.c:2438:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName,searchName,
 		                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: fs/cifs/cifssmb.c:2439:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName,searchName,
 				 PATH_MAX, nls_codepage, remap);

CHECK:SPACING: No space is necessary after a cast
#301: FILE: fs/cifs/cifssmb.c:2729:
+			cifsConvertToUCS((__le16 *) pSMB->FileName, searchName,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: fs/cifs/cifssmb.c:2730:
+			cifsConvertToUCS((__le16 *) pSMB->FileName, searchName,
 				PATH_MAX,nls_codepage, remap);

CHECK:SPACING: No space is necessary after a cast
#310: FILE: fs/cifs/cifssmb.c:2840:
+		    cifsConvertToUCS((__le16 *) pSMB->RequestFileName,

CHECK:CAMELCASE: Avoid CamelCase: <RequestFileName>
#310: FILE: fs/cifs/cifssmb.c:2840:
+		    cifsConvertToUCS((__le16 *) pSMB->RequestFileName,

CHECK:SPACING: No space is necessary after a cast
#319: FILE: fs/cifs/cifssmb.c:3372:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, fileName,

CHECK:SPACING: No space is necessary after a cast
#328: FILE: fs/cifs/cifssmb.c:3630:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, fileName,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: fs/cifs/cifssmb.c:3711:
+^I^I^IConvertToUCS((__le16 *) pSMB->fileName, fileName, $

CHECK:SPACING: No space is necessary after a cast
#337: FILE: fs/cifs/cifssmb.c:3711:
+			ConvertToUCS((__le16 *) pSMB->fileName, fileName, 

CHECK:CAMELCASE: Avoid CamelCase: <ConvertToUCS>
#337: FILE: fs/cifs/cifssmb.c:3711:
+			ConvertToUCS((__le16 *) pSMB->fileName, fileName, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: fs/cifs/cifssmb.c:3712:
+			ConvertToUCS((__le16 *) pSMB->fileName, fileName, 
 				PATH_MAX, nls_codepage);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: fs/cifs/cifssmb.c:3762:
+^I^I    cifsConvertToUCS((__le16 *) pSMB->FileName, fileName, $

CHECK:SPACING: No space is necessary after a cast
#346: FILE: fs/cifs/cifssmb.c:3762:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, fileName, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: fs/cifs/cifssmb.c:3907:
+^I^I    cifsConvertToUCS((__le16 *) pSMB->FileName, searchName, $

CHECK:SPACING: No space is necessary after a cast
#355: FILE: fs/cifs/cifssmb.c:3907:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, searchName, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: fs/cifs/cifssmb.c:4050:
+^I^I    cifsConvertToUCS((__le16 *) pSMB->FileName, searchName, $

CHECK:SPACING: No space is necessary after a cast
#364: FILE: fs/cifs/cifssmb.c:4050:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, searchName, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: fs/cifs/cifssmb.c:4197:
+^I^I    cifsConvertToUCS((__le16 *) pSMB->FileName, fileName, $

CHECK:SPACING: No space is necessary after a cast
#373: FILE: fs/cifs/cifssmb.c:4197:
+		    cifsConvertToUCS((__le16 *) pSMB->FileName, fileName, 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: fs/cifs/dir.c:395:
+		cERROR(1,("Error 0x%x on cifs_get_inode_info in lookup of %s",
 		        ^

CHECK:CAMELCASE: Avoid CamelCase: <cERROR>
#386: FILE: fs/cifs/dir.c:395:
+		cERROR(1,("Error 0x%x on cifs_get_inode_info in lookup of %s",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: fs/cifs/dir.c:396:
+		cERROR(1,("Error 0x%x on cifs_get_inode_info in lookup of %s",
+			   rc,full_path));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#387: FILE: fs/cifs/dir.c:396:
+			   rc,full_path));
 			     ^

ERROR:SPACING: space required before the open parenthesis '('
#400: FILE: fs/cifs/inode.c:425:
+		if(direntry->d_inode)

ERROR:SPACING: space required before the open parenthesis '('
#410: FILE: fs/cifs/inode.c:444:
+			if(direntry->d_inode)

ERROR:SPACING: space required before the open parenthesis '('
#420: FILE: fs/cifs/inode.c:499:
+				if(direntry->d_inode)

ERROR:SPACING: space required before the open parenthesis '('
#430: FILE: fs/cifs/inode.c:520:
+					if(direntry->d_inode)

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: fs/cifs/inode.c:521:
+^I^I^I                        direntry->d_inode->i_nlink--;$

ERROR:SPACING: space required before the open parenthesis '('
#442: FILE: fs/cifs/inode.c:527:
+	if(direntry->d_inode) {

CHECK:CAMELCASE: Avoid CamelCase: <cifsInode>
#443: FILE: fs/cifs/inode.c:528:
+		cifsInode = CIFS_I(direntry->d_inode);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#445: FILE: fs/cifs/inode.c:530:
+		cifsInode->time = 0;	/* will force revalidate to get info
+					   when needed */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#445: FILE: fs/cifs/inode.c:530:
+					   when needed */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#448: FILE: fs/cifs/inode.c:533:
+	inode->i_ctime = inode->i_mtime = current_fs_time(inode->i_sb);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000179229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 8 warnings, 50 checks, 313 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000179229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
