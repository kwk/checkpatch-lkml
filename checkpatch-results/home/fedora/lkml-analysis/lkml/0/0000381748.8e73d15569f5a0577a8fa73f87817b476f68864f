WARNING:TYPO_SPELLING: 'ons' may be misspelled - perhaps 'owns'?
#35: 
ons,
^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#95: FILE: drivers/block/genhd.c:374:
+			(unsigned long long)sgp->part[n]->nr_sects >> 1 ,
 			                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#123: FILE: drivers/block/genhd.c:596:
+		struct hd_struct *p = disk->part[part-1];
 		                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: drivers/block/genhd.c:597:
+		struct hd_struct *p = disk->part[part-1];
+		if (p) p->policy = flag;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#124: FILE: drivers/block/genhd.c:597:
+		if (p) p->policy = flag;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#133: FILE: drivers/block/genhd.c:607:
+		if (disk->part[i]) disk->part[i]->policy = flag;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#143: FILE: drivers/block/genhd.c:618:
+		struct hd_struct *p = disk->part[part-1];
 		                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#144: FILE: drivers/block/genhd.c:619:
+		struct hd_struct *p = disk->part[part-1];
+		if (p) return p->policy;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#144: FILE: drivers/block/genhd.c:619:
+		if (p) return p->policy;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#170: FILE: drivers/block/ioctl.c:57:
+			if (!disk->part[part-1])
 			                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#183: FILE: drivers/block/ll_rw_blk.c:1870:
+	p = disk->part[bdev->bd_dev-MKDEV(disk->major,disk->first_minor)-1];
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#183: FILE: drivers/block/ll_rw_blk.c:1870:
+	p = disk->part[bdev->bd_dev-MKDEV(disk->major,disk->first_minor)-1];
 	                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#183: FILE: drivers/block/ll_rw_blk.c:1870:
+	p = disk->part[bdev->bd_dev-MKDEV(disk->major,disk->first_minor)-1];
 	                                                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#210: FILE: fs/partitions/check.c:106:
+		if (hd->part[part-1]->de) {
 		                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#211: FILE: fs/partitions/check.c:107:
+			pos = devfs_generate_path(hd->part[part-1]->de, buf, 64);
 			                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#238: FILE: fs/partitions/check.c:258:
+	struct hd_struct *p = disk->part[part-1];
 	                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#239: FILE: fs/partitions/check.c:259:
+	struct hd_struct *p = disk->part[part-1];
+	if (!p)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#243: FILE: fs/partitions/check.c:263:
+	printk("del_partition: disk:%x part:%d \n", disk, part);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#243: FILE: fs/partitions/check.c:263:
+	printk("del_partition: disk:%x part:%d \n", disk, part);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#249: FILE: fs/partitions/check.c:269:
+	disk->part[part-1] = NULL;
 	               ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#257: FILE: fs/partitions/check.c:276:
+	printk("add_partition: disk:%x part:%d start:%d len:%d\n", disk, part, (int)start, (int)len);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#257: FILE: fs/partitions/check.c:276:
+	struct hd_struct *p;
+	printk("add_partition: disk:%x part:%d start:%d len:%d\n", disk, part, (int)start, (int)len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#257: FILE: fs/partitions/check.c:276:
+	printk("add_partition: disk:%x part:%d start:%d len:%d\n", disk, part, (int)start, (int)len);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p)...) over kmalloc(sizeof(struct hd_struct)...)
#259: FILE: fs/partitions/check.c:278:
+	p = kmalloc(sizeof(struct hd_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#260: FILE: fs/partitions/check.c:279:
+	if (!p) return;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#272: FILE: fs/partitions/check.c:292:
+	disk->part[part-1] = p;
 	               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381748.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 9 warnings, 11 checks, 186 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381748.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
